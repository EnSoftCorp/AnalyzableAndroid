public class com.android.bluetooth.map.BluetoothMapService extends com.android.bluetooth.btservice.ProfileService
{
    private static final java.lang.String TAG;
    public static final boolean DEBUG;
    public static final boolean VERBOSE;
    public static final java.lang.String USER_CONFIRM_TIMEOUT_ACTION;
    private static final int USER_CONFIRM_TIMEOUT_VALUE;
    public static final java.lang.String ACTION_SHOW_MAPS_EMAIL_SETTINGS;
    public static final int MSG_SERVERSESSION_CLOSE;
    public static final int MSG_SESSION_ESTABLISHED;
    public static final int MSG_SESSION_DISCONNECTED;
    public static final int MSG_MAS_CONNECT;
    public static final int MSG_MAS_CONNECT_CANCEL;
    public static final int MSG_ACQUIRE_WAKE_LOCK;
    public static final int MSG_RELEASE_WAKE_LOCK;
    private static final java.lang.String BLUETOOTH_PERM;
    private static final java.lang.String BLUETOOTH_ADMIN_PERM;
    private static final int START_LISTENER;
    private static final int USER_TIMEOUT;
    private static final int DISCONNECT_MAP;
    private static final int SHUTDOWN;
    private static final int RELEASE_WAKE_LOCK_DELAY;
    private android.os.PowerManager$WakeLock mWakeLock;
    private static final int UPDATE_MAS_INSTANCES;
    public static final int UPDATE_MAS_INSTANCES_ACCOUNT_ADDED;
    public static final int UPDATE_MAS_INSTANCES_ACCOUNT_REMOVED;
    public static final int UPDATE_MAS_INSTANCES_ACCOUNT_RENAMED;
    public static final int UPDATE_MAS_INSTANCES_ACCOUNT_DISCONNECT;
    private static final int MAS_ID_SMS_MMS;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient;
    private android.util.SparseArray mMasInstances;
    private java.util.HashMap mMasInstanceMap;
    private android.bluetooth.BluetoothDevice mRemoteDevice;
    private java.util.ArrayList mEnabledAccounts;
    private static java.lang.String sRemoteDeviceName;
    private int mState;
    private com.android.bluetooth.map.BluetoothMapEmailAppObserver mAppObserver;
    private android.app.AlarmManager mAlarmManager;
    private boolean mIsWaitingAuthorization;
    private boolean mRemoveTimeoutMsg;
    private int mPermission;
    private boolean mAccountChanged;
    private static final java.lang.String ACCESS_AUTHORITY_PACKAGE;
    private static final java.lang.String ACCESS_AUTHORITY_CLASS;
    private static final android.os.ParcelUuid[] MAP_UUIDS;
    private final android.os.Handler mSessionStatusHandler;
    private com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver mMapReceiver;

    public void <init>()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.util.SparseArray $r1;
        java.util.HashMap $r2;
        com.android.bluetooth.map.BluetoothMapService$1 $r3;
        com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver $r4;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.btservice.ProfileService: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock> = null;

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient> = null;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>(int)>(1);

        r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(1);

        r0.<com.android.bluetooth.map.BluetoothMapService: java.util.HashMap mMasInstanceMap> = $r2;

        r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice> = null;

        r0.<com.android.bluetooth.map.BluetoothMapService: java.util.ArrayList mEnabledAccounts> = null;

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapEmailAppObserver mAppObserver> = null;

        r0.<com.android.bluetooth.map.BluetoothMapService: android.app.AlarmManager mAlarmManager> = null;

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mRemoveTimeoutMsg> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mAccountChanged> = 0;

        $r3 = new com.android.bluetooth.map.BluetoothMapService$1;

        specialinvoke $r3.<com.android.bluetooth.map.BluetoothMapService$1: void <init>(com.android.bluetooth.map.BluetoothMapService)>(r0);

        r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler> = $r3;

        $r4 = new com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver;

        specialinvoke $r4.<com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver: void <init>(com.android.bluetooth.map.BluetoothMapService,com.android.bluetooth.map.BluetoothMapService$1)>(r0, null);

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver mMapReceiver> = $r4;

        r0.<com.android.bluetooth.map.BluetoothMapService: int mState> = 0;

        return;
    }

    private final void closeService()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0, i1;
        com.android.bluetooth.map.BluetoothMnsObexClient $r1, $r10;
        android.util.SparseArray $r2, $r3, $r8;
        android.os.Handler $r4, $r7;
        android.os.PowerManager$WakeLock $r5, $r6;
        java.lang.Object $r9;
        com.android.bluetooth.map.BluetoothMapMasInstance $r11;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "MAP Service closeService in");

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        if $r1 == null goto label1;

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        virtualinvoke $r10.<com.android.bluetooth.map.BluetoothMnsObexClient: void shutdown()>();

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient> = null;

     label1:
        i0 = 0;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label2:
        if i0 >= i1 goto label3;

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r11 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r9;

        virtualinvoke $r11.<com.android.bluetooth.map.BluetoothMapMasInstance: void shutdown()>();

        i0 = i0 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        virtualinvoke $r3.<android.util.SparseArray: void clear()>();

        $r4 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        if $r4 == null goto label4;

        $r7 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label4:
        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission> = 0;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int)>(0);

        $r5 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        if $r5 == null goto label5;

        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothMapService", "CloseService(): Release Wake Lock");

        r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock> = null;

     label5:
        r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice> = null;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BluetoothMapService", "MAP Service closeService out");

        return;
    }

    private final void startRfcommSocketListeners()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0, i1;
        android.util.SparseArray $r1, $r2;
        java.lang.Object $r3;
        com.android.bluetooth.map.BluetoothMapMasInstance $r4;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 = 0;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

     label1:
        if i0 >= i1 goto label2;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r4 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r3;

        virtualinvoke $r4.<com.android.bluetooth.map.BluetoothMapMasInstance: void startRfcommSocketListener()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private final void startObexServerSessions()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.PowerManager r1;
        int i0, i1;
        java.io.IOException r2, $r23;
        android.os.PowerManager$WakeLock $r3, $r17, $r19, $r20;
        com.android.bluetooth.map.BluetoothMnsObexClient $r4, $r13, $r14;
        android.util.SparseArray $r5, $r11, $r22, $r27;
        android.os.Handler $r6, $r7, $r8, $r16;
        android.os.Message $r9;
        java.lang.Object $r10, $r18, $r24, $r28;
        com.android.bluetooth.map.BluetoothMapMasInstance $r12, $r25, $r26;
        boolean $z1, z2;
        android.bluetooth.BluetoothDevice $r15;
        android.os.RemoteException $r21, r29;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "Map Service START ObexServerSessions()");

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        if $r3 != null goto label01;

        $r18 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: java.lang.Object getSystemService(java.lang.String)>("power");

        r1 = (android.os.PowerManager) $r18;

        $r17 = virtualinvoke r1.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "StartingObexMapTransaction");

        r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock> = $r17;

        $r20 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r20.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r19 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r19.<android.os.PowerManager$WakeLock: void acquire()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothMapService", "startObexSessions(): Acquire Wake Lock");

     label01:
        $r4 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        if $r4 != null goto label02;

        $r14 = new com.android.bluetooth.map.BluetoothMnsObexClient;

        $r15 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        $r16 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        specialinvoke $r14.<com.android.bluetooth.map.BluetoothMnsObexClient: void <init>(android.bluetooth.BluetoothDevice,android.os.Handler)>($r15, $r16);

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient> = $r14;

     label02:
        z2 = 0;

        i0 = 0;

        $r5 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label03:
        if i0 >= i1 goto label09;

     label04:
        $r11 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r12 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r10;

        $r13 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        $z1 = virtualinvoke $r12.<com.android.bluetooth.map.BluetoothMapMasInstance: boolean startObexServerSession(com.android.bluetooth.map.BluetoothMnsObexClient)>($r13);

        if $z1 != 1 goto label05;

        z2 = 1;

     label05:
        goto label08;

     label06:
        $r23 := @caughtexception;

        r2 = $r23;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "IOException occured while starting an obexServerSession restarting the listener", r2);

        $r27 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r28 = virtualinvoke $r27.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r26 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r28;

        virtualinvoke $r26.<com.android.bluetooth.map.BluetoothMapMasInstance: void restartObexServerSession()>();

        goto label08;

     label07:
        $r21 := @caughtexception;

        r29 = $r21;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "RemoteException occured while starting an obexServerSession restarting the listener", r29);

        $r22 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r24 = virtualinvoke $r22.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r25 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r24;

        virtualinvoke $r25.<com.android.bluetooth.map.BluetoothMapMasInstance: void restartObexServerSession()>();

     label08:
        i0 = i0 + 1;

        goto label03;

     label09:
        if z2 == 0 goto label10;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int)>(2);

     label10:
        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(5006);

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r7 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(5006);

        virtualinvoke $r8.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r9, 10000L);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BluetoothMapService", "startObexServerSessions() success!");

        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch android.os.RemoteException from label04 to label05 with label07;
    }

    public android.os.Handler getHandler()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        return $r1;
    }

    private void stopObexServerSessions(int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0, i1, i2, $i5, i6, i7;
        boolean z0, $z1, $z2;
        com.android.bluetooth.map.BluetoothMapMasInstance r1, $r13, r17;
        com.android.bluetooth.map.BluetoothMnsObexClient $r2, $r12;
        android.util.SparseArray $r3, $r5, $r11, $r14, $r16;
        java.lang.Object $r4, $r10, $r15;
        android.os.PowerManager$WakeLock $r6, $r9;
        android.os.Handler $r7, $r8;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter0: int;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "MAP Service STOP ObexServerSessions()");

        z0 = 1;

        if i0 == -1 goto label3;

        i1 = 0;

        $r14 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i2 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

     label1:
        if i1 >= i2 goto label3;

        $r16 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r15;

        $i5 = virtualinvoke r1.<com.android.bluetooth.map.BluetoothMapMasInstance: int getMasId()>();

        if $i5 == i0 goto label2;

        $z2 = virtualinvoke r1.<com.android.bluetooth.map.BluetoothMapMasInstance: boolean isStarted()>();

        if $z2 == 0 goto label2;

        z0 = 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        if $r2 == null goto label4;

        if z0 == 0 goto label4;

        $r12 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        virtualinvoke $r12.<com.android.bluetooth.map.BluetoothMnsObexClient: void shutdown()>();

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient> = null;

     label4:
        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r17 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r4;

        if r17 == null goto label5;

        virtualinvoke r17.<com.android.bluetooth.map.BluetoothMapMasInstance: void restartObexServerSession()>();

        goto label7;

     label5:
        i6 = 0;

        $r5 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i7 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label6:
        if i6 >= i7 goto label7;

        $r11 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r13 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r10;

        virtualinvoke $r13.<com.android.bluetooth.map.BluetoothMapMasInstance: void restartObexServerSession()>();

        i6 = i6 + 1;

        goto label6;

     label7:
        if z0 == 0 goto label8;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int)>(0);

        r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice> = null;

        $z1 = r0.<com.android.bluetooth.map.BluetoothMapService: boolean mAccountChanged>;

        if $z1 == 0 goto label8;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void updateMasInstances(int)>(3);

     label8:
        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        if $r6 == null goto label9;

        if z0 == 0 goto label9;

        $r7 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeMessages(int)>(5005);

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeMessages(int)>(5006);

        $r9 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r9.<android.os.PowerManager$WakeLock: void release()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothMapService", "stopObexServerSessions(): Release Wake Lock");

     label9:
        return;
    }

    private void onConnectHandler(int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0, $i1, $i3;
        com.android.bluetooth.map.BluetoothMapMasInstance r1;
        java.io.IOException r2, $r18;
        boolean $z0;
        android.bluetooth.BluetoothDevice $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r12, $r13, $r14;
        java.lang.String $r9, $r11, $r15;
        com.android.bluetooth.map.BluetoothMnsObexClient $r16, $r17;
        android.os.RemoteException $r19, r20;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization>;

        if $z0 == 1 goto label1;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPermission = ");

        $i1 = r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r9);

        $i3 = r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission>;

        if $i3 != 1 goto label8;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incoming connection accepted from: ");

        $r11 = <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" automatically as trusted device");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r15);

        $r17 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        if $r17 == null goto label4;

        if r1 == null goto label4;

        $r16 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMnsObexClient mBluetoothMnsObexClient>;

        virtualinvoke r1.<com.android.bluetooth.map.BluetoothMapMasInstance: boolean startObexServerSession(com.android.bluetooth.map.BluetoothMnsObexClient)>($r16);

        goto label5;

     label4:
        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void startObexServerSessions()>();

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r2 = $r18;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "catch IOException starting obex server session", r2);

        goto label8;

     label7:
        $r19 := @caughtexception;

        r20 = $r19;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "catch RemoteException starting obex server session", r20);

     label8:
        return;

        catch java.io.IOException from label3 to label5 with label6;
        catch android.os.RemoteException from label3 to label5 with label7;
    }

    public int getState()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        return $i0;
    }

    public android.bluetooth.BluetoothDevice getRemoteDevice()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothDevice $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        return $r1;
    }

    private void setState(int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int,int)>(i0, 1);

        return;
    }

    private synchronized void setState(int, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7;
        android.content.Intent r1, $r12;
        com.android.bluetooth.btservice.AdapterService r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        android.bluetooth.BluetoothDevice $r15, $r16;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        if i0 == $i3 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map state ");

        $i4 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", result = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r10);

        i2 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        r0.<com.android.bluetooth.map.BluetoothMapService: int mState> = i0;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.map.profile.action.CONNECTION_STATE_CHANGED");

        r1 = $r12;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.profile.extra.PREVIOUS_STATE", i2);

        $i6 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.profile.extra.STATE", $i6);

        $r15 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.bluetooth.device.extra.DEVICE", $r15);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendBroadcast(android.content.Intent,java.lang.String)>(r1, "android.permission.BLUETOOTH");

        r2 = staticinvoke <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService getAdapterService()>();

        if r2 == null goto label1;

        $r16 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        $i7 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: void onProfileConnectionStateChanged(android.bluetooth.BluetoothDevice,int,int,int)>($r16, 9, $i7, i2);

     label1:
        return;
    }

    public static java.lang.String getRemoteDeviceName()
    {
        java.lang.String $r0;

        $r0 = <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName>;

        return $r0;
    }

    public boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.Handler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r4 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, 0, 0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return 1;
    }

    public boolean disconnectMap(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothDevice r1, $r2;
        boolean z0, $z1;
        int $i1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 = 0;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "disconnectMap");

        $r2 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice getRemoteDevice()>();

        $z1 = virtualinvoke $r2.<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $i1 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        lookupswitch($i1)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendShutdownMessage()>();

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void stopObexServerSessions(int)>(-1);

        z0 = 1;

        goto label2;

     label2:
        return z0;
    }

    public java.util.List getConnectedDevices()
    {
        com.android.bluetooth.map.BluetoothMapService r0, r2;
        java.util.ArrayList r1, $r4;
        java.lang.Throwable r3, $r8;
        int $i0;
        android.bluetooth.BluetoothDevice $r6, $r7;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = r0;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.bluetooth.map.BluetoothMapService: int mState>;

        if $i0 != 2 goto label2;

        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        if $r6 == null goto label2;

        $r7 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        com.android.bluetooth.map.BluetoothMapService r0, r4;
        int[] r1;
        java.util.ArrayList r2, $r9;
        java.util.Set r3;
        int i0, i1, $i2, $i3;
        java.util.Iterator r5;
        android.bluetooth.BluetoothDevice r6;
        android.os.ParcelUuid[] r7, $r13;
        java.lang.Throwable r8, $r14;
        android.bluetooth.BluetoothAdapter $r10;
        boolean $z0, $z1;
        java.lang.Object $r12;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: int[];

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r2 = $r9;

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothAdapter mAdapter>;

        r3 = virtualinvoke $r10.<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>();

        r4 = r0;

        entermonitor r0;

     label01:
        r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.bluetooth.BluetoothDevice) $r12;

        r7 = virtualinvoke r6.<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>();

        $r13 = <com.android.bluetooth.map.BluetoothMapService: android.os.ParcelUuid[] MAP_UUIDS>;

        $z1 = staticinvoke <android.bluetooth.BluetoothUuid: boolean containsAnyUuid(android.os.ParcelUuid[],android.os.ParcelUuid[])>(r7, $r13);

        if $z1 != 0 goto label03;

        goto label02;

     label03:
        i0 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: int getConnectionState(android.bluetooth.BluetoothDevice)>(r6);

        i1 = 0;

     label04:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label06;

        $i3 = r1[i1];

        if i0 != $i3 goto label05;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        goto label02;

     label07:
        exitmonitor r4;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        r8 = $r14;

        exitmonitor r4;

     label10:
        throw r8;

     label11:
        return r2;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.map.BluetoothMapService r0, r2;
        android.bluetooth.BluetoothDevice r1, $r5;
        java.lang.Throwable r3, $r6;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 = r0;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: int getState()>();

        if $i0 != 2 goto label3;

        $r5 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice getRemoteDevice()>();

        $z0 = virtualinvoke $r5.<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return 2;

     label3:
        exitmonitor r2;

     label4:
        return 0;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean setPriority(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getBluetoothMapPriorityKey(java.lang.String)>($r3);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r2, $r4, i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved priority ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r10);

        return 1;
    }

    public int getPriority(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r2 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getBluetoothMapPriorityKey(java.lang.String)>($r3);

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, $r4, -1);

        return i0;
    }

    protected com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder initBinder()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $r1 = new com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder;

        specialinvoke $r1.<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder: void <init>(com.android.bluetooth.map.BluetoothMapService)>(r0);

        return $r1;
    }

    protected boolean start()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.content.IntentFilter r1, r2, $r4, $r5;
        android.content.IntentFilter$MalformedMimeTypeException r3, $r17;
        com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver $r6, $r8;
        android.bluetooth.BluetoothAdapter $r10;
        com.android.bluetooth.map.BluetoothMapEmailAppObserver $r11, $r12;
        java.util.ArrayList $r13;
        android.os.Handler $r14, $r16;
        android.os.Message $r15;
        java.lang.Exception $r18, r19;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "start()");

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.device.action.CONNECTION_ACCESS_REPLY");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.adapter.action.STATE_CHANGED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.device.action.ACL_DISCONNECTED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.btmap.intent.action.SHOW_MAPS_EMAIL_SETTINGS");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.bluetooth.map.USER_CONFIRM_TIMEOUT");

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>()>();

        r2 = $r5;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.bluetooth.BluetoothMapContentObserver.action.MESSAGE_SENT");

     label1:
        virtualinvoke r2.<android.content.IntentFilter: void addDataType(java.lang.String)>("message/*");

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r3 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "Wrong mime type!!!", r3);

     label4:
        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver mMapReceiver>;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r6, r1);

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver mMapReceiver>;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r8, r2);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        r19 = $r18;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "Unable to register map receiver", r19);

     label7:
        $r10 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothAdapter mAdapter> = $r10;

        $r11 = new com.android.bluetooth.map.BluetoothMapEmailAppObserver;

        specialinvoke $r11.<com.android.bluetooth.map.BluetoothMapEmailAppObserver: void <init>(android.content.Context,com.android.bluetooth.map.BluetoothMapService)>(r0, r0);

        r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapEmailAppObserver mAppObserver> = $r11;

        $r12 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapEmailAppObserver mAppObserver>;

        $r13 = virtualinvoke $r12.<com.android.bluetooth.map.BluetoothMapEmailAppObserver: java.util.ArrayList getEnabledAccountItems()>();

        r0.<com.android.bluetooth.map.BluetoothMapService: java.util.ArrayList mEnabledAccounts> = $r13;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void createMasInstances()>();

        $r16 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r14 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r15 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r16.<android.os.Handler: boolean sendMessage(android.os.Message)>($r15);

        return 1;

        catch android.content.IntentFilter$MalformedMimeTypeException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void updateMasInstances(int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(5, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    private boolean updateMasInstancesHandler()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.ArrayList r1, $r11, $r12, r45, r46;
        java.util.Iterator r2, r47, r49, r51;
        com.android.bluetooth.map.BluetoothMapEmailSettingsItem r3, r48, r50, r52;
        com.android.bluetooth.map.BluetoothMapMasInstance r4, r5, $r31, r53;
        java.lang.StringBuilder $r6, $r7, $r8, $r15, $r17, $r19, $r20, $r23, $r24, $r26, $r28, $r29, $r36, $r37, $r38, $r41, $r42;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r9, $r18, $r22, $r27, $r39;
        com.android.bluetooth.map.BluetoothMapEmailAppObserver $r10;
        android.util.SparseArray $r13, $r14, $r30, $r43;
        java.lang.Object $r16, $r21, $r25, $r35, $r40, $r44;
        android.bluetooth.BluetoothAdapter $r32;
        java.util.HashMap $r33, $r34;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateMasInstancesHandler() state = ");

        $i0 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: int getState()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r9);

        z0 = 0;

        $i1 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: int getState()>();

        if $i1 != 0 goto label14;

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapEmailAppObserver mAppObserver>;

        r1 = virtualinvoke $r10.<com.android.bluetooth.map.BluetoothMapEmailAppObserver: java.util.ArrayList getEnabledAccountItems()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r45 = $r11;

        r46 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.ArrayList mEnabledAccounts>;

        r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r44 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.bluetooth.map.BluetoothMapEmailSettingsItem) $r44;

        $z6 = virtualinvoke r46.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        if $z6 != 0 goto label02;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label02:
        goto label01;

     label03:
        if r46 == null goto label06;

        r47 = virtualinvoke r46.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label06;

        $r35 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (com.android.bluetooth.map.BluetoothMapEmailSettingsItem) $r35;

        $r34 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.HashMap mMasInstanceMap>;

        $r40 = virtualinvoke $r34.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r48);

        r4 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r40;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Removing account: ");

        $r36 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" masInst = ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r39);

        if r4 == null goto label05;

        virtualinvoke r4.<com.android.bluetooth.map.BluetoothMapMasInstance: void shutdown()>();

        $r43 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $i2 = virtualinvoke r4.<com.android.bluetooth.map.BluetoothMapMasInstance: int getMasId()>();

        virtualinvoke $r43.<android.util.SparseArray: void remove(int)>($i2);

        z0 = 1;

     label05:
        goto label04;

     label06:
        if r45 == null goto label09;

        r49 = virtualinvoke r45.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r25 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (com.android.bluetooth.map.BluetoothMapEmailSettingsItem) $r25;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Adding account: ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r27);

        i3 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: int getNextMasId()>();

        $r31 = new com.android.bluetooth.map.BluetoothMapMasInstance;

        specialinvoke $r31.<com.android.bluetooth.map.BluetoothMapMasInstance: void <init>(com.android.bluetooth.map.BluetoothMapService,android.content.Context,com.android.bluetooth.map.BluetoothMapEmailSettingsItem,int,boolean)>(r0, r0, r50, i3, 0);

        r5 = $r31;

        $r30 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        virtualinvoke $r30.<android.util.SparseArray: void append(int,java.lang.Object)>(i3, r5);

        $r33 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.HashMap mMasInstanceMap>;

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r50, r5);

        z0 = 1;

        $r32 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothAdapter mAdapter>;

        $z4 = virtualinvoke $r32.<android.bluetooth.BluetoothAdapter: boolean isEnabled()>();

        if $z4 == 0 goto label08;

        virtualinvoke r5.<com.android.bluetooth.map.BluetoothMapMasInstance: void startRfcommSocketListener()>();

     label08:
        goto label07;

     label09:
        r0.<com.android.bluetooth.map.BluetoothMapService: java.util.ArrayList mEnabledAccounts> = r1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "  Enabled accounts:");

        $r12 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.ArrayList mEnabledAccounts>;

        r51 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r21 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>();

        r52 = (com.android.bluetooth.map.BluetoothMapEmailSettingsItem) $r21;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r22);

        goto label10;

     label11:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "  Active MAS instances:");

        i4 = 0;

        $r13 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i5 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

     label12:
        if i4 >= i5 goto label13;

        $r14 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r16 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r53 = (com.android.bluetooth.map.BluetoothMapMasInstance) $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r18);

        i4 = i4 + 1;

        goto label12;

     label13:
        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mAccountChanged> = 0;

        goto label15;

     label14:
        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mAccountChanged> = 1;

     label15:
        return z0;
    }

    private int getNextMasId()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0, i1, i2, i3, $i4, i5;
        android.util.SparseArray $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 = 0;

        i1 = 0;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i2 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

     label1:
        if i1 >= i2 goto label3;

        $r4 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        i3 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i1);

        if i3 <= i0 goto label2;

        i0 = i3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if i0 >= 255 goto label4;

        $i4 = i0 + 1;

        return $i4;

     label4:
        i5 = 1;

     label5:
        if i5 > 255 goto label7;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i5);

        if $r3 != null goto label6;

        return i5;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        return 255;
    }

    private void createMasInstances()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;
        com.android.bluetooth.map.BluetoothMapMasInstance r1, r4, $r5, $r11;
        java.util.Iterator r2;
        com.android.bluetooth.map.BluetoothMapEmailSettingsItem r3;
        android.util.SparseArray $r6, $r12;
        java.util.HashMap $r7, $r14;
        java.util.ArrayList $r9;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 = 0;

        $r5 = new com.android.bluetooth.map.BluetoothMapMasInstance;

        specialinvoke $r5.<com.android.bluetooth.map.BluetoothMapMasInstance: void <init>(com.android.bluetooth.map.BluetoothMapService,android.content.Context,com.android.bluetooth.map.BluetoothMapEmailSettingsItem,int,boolean)>(r0, r0, null, i0, 1);

        r1 = $r5;

        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        virtualinvoke $r6.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, r1);

        $r7 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.HashMap mMasInstanceMap>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r1);

        $r9 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.ArrayList mEnabledAccounts>;

        r2 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.bluetooth.map.BluetoothMapEmailSettingsItem) $r10;

        i0 = i0 + 1;

        $r11 = new com.android.bluetooth.map.BluetoothMapMasInstance;

        specialinvoke $r11.<com.android.bluetooth.map.BluetoothMapMasInstance: void <init>(com.android.bluetooth.map.BluetoothMapService,android.content.Context,com.android.bluetooth.map.BluetoothMapEmailSettingsItem,int,boolean)>(r0, r0, r3, i0, 0);

        r4 = $r11;

        $r12 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        virtualinvoke $r12.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, r4);

        $r14 = r0.<com.android.bluetooth.map.BluetoothMapService: java.util.HashMap mMasInstanceMap>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        goto label1;

     label2:
        return;
    }

    protected boolean stop()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        java.lang.Exception r1, $r4;
        com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver $r2;
        com.android.bluetooth.map.BluetoothMapEmailAppObserver $r3;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "stop()");

     label1:
        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapService$MapBroadcastReceiver mMapReceiver>;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: com.android.bluetooth.map.BluetoothMapEmailAppObserver mAppObserver>;

        virtualinvoke $r3.<com.android.bluetooth.map.BluetoothMapEmailAppObserver: void shutdown()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapService", "Unable to unregister map receiver", r1);

     label4:
        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int,int)>(0, 2);

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendShutdownMessage()>();

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean cleanup()
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "cleanup()");

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int,int)>(0, 2);

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void closeService()>();

        return 1;
    }

    public boolean onConnect(android.bluetooth.BluetoothDevice, com.android.bluetooth.map.BluetoothMapMasInstance)
    {
        com.android.bluetooth.map.BluetoothMapService r0, r3;
        android.bluetooth.BluetoothDevice r1, $r6, $r7, $r10, $r24, $r26;
        com.android.bluetooth.map.BluetoothMapMasInstance r2;
        boolean z0, z1, $z2, $z3;
        java.lang.Throwable r4, $r29;
        int $i0, $i1, $i4, $i5, $i6;
        android.content.Intent $r8, r30;
        java.lang.StringBuilder $r12, $r14, $r15, $r19, $r21, $r23;
        java.lang.String $r16, $r17, $r20, $r22, $r25, $r27, $r28;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: com.android.bluetooth.map.BluetoothMapMasInstance;

        z0 = 0;

        z1 = 0;

        r3 = r0;

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        if $r6 != null goto label04;

        r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice> = r1;

        $r24 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        $r25 = virtualinvoke $r24.<android.bluetooth.BluetoothDevice: java.lang.String getName()>();

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName> = $r25;

        $r27 = <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r27);

        if $z3 == 0 goto label02;

        $r28 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: java.lang.String getString(int)>(2131034239);

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName> = $r28;

     label02:
        $r26 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        $i4 = virtualinvoke $r26.<android.bluetooth.BluetoothDevice: int getMessageAccessPermission()>();

        r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission> = $i4;

        $i5 = r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission>;

        if $i5 != 0 goto label03;

        z0 = 1;

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization> = 1;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setUserTimeoutAlarm()>();

        goto label08;

     label03:
        $i6 = r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission>;

        if $i6 != 2 goto label08;

        z1 = 1;

        goto label08;

     label04:
        $r7 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        $z2 = virtualinvoke $r7.<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label08;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected connection from a second Remote Device received. name: ");

        if r1 != null goto label05;

        $r20 = "unknown";

        goto label06;

     label05:
        $r20 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getName()>();

     label06:
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapService", $r22);

        exitmonitor r3;

     label07:
        return 0;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r29 := @caughtexception;

        r4 = $r29;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        if z0 == 0 goto label13;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.device.action.CONNECTION_ACCESS_REQUEST");

        r30 = $r8;

        virtualinvoke r30.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.bluetooth.BluetoothPermissionRequest");

        virtualinvoke r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.device.extra.ACCESS_REQUEST_TYPE", 3);

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        virtualinvoke r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.bluetooth.device.extra.DEVICE", $r10);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>(r30, "android.permission.BLUETOOTH_ADMIN");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("waiting for authorization for connection from: ");

        $r16 = <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", $r17);

        goto label15;

     label13:
        if z1 == 0 goto label14;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendConnectCancelMessage()>();

        goto label15;

     label14:
        $i0 = r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission>;

        if $i0 != 1 goto label15;

        $i1 = virtualinvoke r2.<com.android.bluetooth.map.BluetoothMapMasInstance: int getMasId()>();

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendConnectMessage(int)>($i1);

     label15:
        return 1;

        catch java.lang.Throwable from label01 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void setUserTimeoutAlarm()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.content.Intent r1, $r4;
        android.app.PendingIntent r2;
        android.app.AlarmManager $r3, $r5, $r7;
        long $l1, $l2;
        java.lang.Object $r6;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "SetUserTimeOutAlarm()");

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.app.AlarmManager mAlarmManager>;

        if $r3 != null goto label1;

        $r6 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r7 = (android.app.AlarmManager) $r6;

        r0.<com.android.bluetooth.map.BluetoothMapService: android.app.AlarmManager mAlarmManager> = $r7;

     label1:
        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mRemoveTimeoutMsg> = 1;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("com.android.bluetooth.map.USER_CONFIRM_TIMEOUT");

        r1 = $r4;

        r2 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, 0, r1, 0);

        $r5 = r0.<com.android.bluetooth.map.BluetoothMapService: android.app.AlarmManager mAlarmManager>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 + 25000L;

        virtualinvoke $r5.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(0, $l2, r2);

        return;
    }

    private void cancelUserTimeoutAlarm()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.content.Intent r1, $r4;
        android.app.PendingIntent r2;
        android.app.AlarmManager r3;
        java.lang.Object $r5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "cancelUserTimeOutAlarm()");

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/bluetooth/map/BluetoothMapService");

        r1 = $r4;

        r2 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, 0, r1, 0);

        $r5 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r3 = (android.app.AlarmManager) $r5;

        virtualinvoke r3.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r2);

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mRemoveTimeoutMsg> = 0;

        return;
    }

    private void sendConnectMessage(int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(5003, i0, 0);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void sendConnectTimeoutMessage()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapService", "sendConnectTimeoutMessage()");

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void sendConnectCancelMessage()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(5004);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void sendShutdownMessage()
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.content.Intent r1, $r5;
        boolean $z0;
        android.os.Handler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.bluetooth.map.BluetoothMapService;

        $z0 = r0.<com.android.bluetooth.map.BluetoothMapService: boolean mRemoveTimeoutMsg>;

        if $z0 == 0 goto label1;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("com.android.bluetooth.map.USER_CONFIRM_TIMEOUT");

        r1 = $r5;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendBroadcast(android.content.Intent,java.lang.String)>(r1, "android.permission.BLUETOOTH");

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization> = 0;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void cancelUserTimeoutAlarm()>();

     label1:
        $r2 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    static boolean access$000(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $z0 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: boolean updateMasInstancesHandler()>();

        return $z0;
    }

    static android.bluetooth.BluetoothAdapter access$100(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothAdapter $r1;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothAdapter mAdapter>;

        return $r1;
    }

    static void access$200(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void startRfcommSocketListeners()>();

        return;
    }

    static void access$300(com.android.bluetooth.map.BluetoothMapService, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void onConnectHandler(int)>(i0);

        return;
    }

    static void access$400(com.android.bluetooth.map.BluetoothMapService, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void stopObexServerSessions(int)>(i0);

        return;
    }

    static boolean access$500(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $z0 = r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization>;

        return $z0;
    }

    static android.bluetooth.BluetoothDevice access$600(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.bluetooth.BluetoothDevice $r1;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.bluetooth.BluetoothDevice mRemoteDevice>;

        return $r1;
    }

    static void access$700(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void cancelUserTimeoutAlarm()>();

        return;
    }

    static boolean access$502(com.android.bluetooth.map.BluetoothMapService, boolean)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mIsWaitingAuthorization> = z0;

        return z0;
    }

    static void access$800(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void closeService()>();

        return;
    }

    static android.os.PowerManager$WakeLock access$900(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    static android.os.PowerManager$WakeLock access$902(com.android.bluetooth.map.BluetoothMapService, android.os.PowerManager$WakeLock)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.PowerManager$WakeLock r1;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        r1 := @parameter1: android.os.PowerManager$WakeLock;

        r0.<com.android.bluetooth.map.BluetoothMapService: android.os.PowerManager$WakeLock mWakeLock> = r1;

        return r1;
    }

    static android.os.Handler access$1000(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.os.Handler mSessionStatusHandler>;

        return $r1;
    }

    static void access$1200(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendShutdownMessage()>();

        return;
    }

    static void access$1300(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendConnectTimeoutMessage()>();

        return;
    }

    static boolean access$1400(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $z0 = r0.<com.android.bluetooth.map.BluetoothMapService: boolean mRemoveTimeoutMsg>;

        return $z0;
    }

    static void access$1500(com.android.bluetooth.map.BluetoothMapService, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void setState(int)>(i0);

        return;
    }

    static int access$1602(com.android.bluetooth.map.BluetoothMapService, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter1: int;

        r0.<com.android.bluetooth.map.BluetoothMapService: int mPermission> = i0;

        return i0;
    }

    static void access$1700(com.android.bluetooth.map.BluetoothMapService, int)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendConnectMessage(int)>(i0);

        return;
    }

    static void access$1800(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapService: void sendConnectCancelMessage()>();

        return;
    }

    static android.util.SparseArray access$1900(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapService: android.util.SparseArray mMasInstances>;

        return $r1;
    }

    static boolean access$1402(com.android.bluetooth.map.BluetoothMapService, boolean)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.map.BluetoothMapService: boolean mRemoveTimeoutMsg> = z0;

        return z0;
    }

    static boolean access$2000(com.android.bluetooth.map.BluetoothMapService)
    {
        com.android.bluetooth.map.BluetoothMapService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.map.BluetoothMapService;

        $z0 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapService: boolean isAvailable()>();

        return $z0;
    }

    static void <clinit>()
    {
        android.os.ParcelUuid[] $r0;
        android.os.ParcelUuid $r1, $r2;

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String ACCESS_AUTHORITY_CLASS> = "com.android.settings.bluetooth.BluetoothPermissionRequest";

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String ACCESS_AUTHORITY_PACKAGE> = "com.android.settings";

        <com.android.bluetooth.map.BluetoothMapService: int MAS_ID_SMS_MMS> = 0;

        <com.android.bluetooth.map.BluetoothMapService: int UPDATE_MAS_INSTANCES_ACCOUNT_DISCONNECT> = 3;

        <com.android.bluetooth.map.BluetoothMapService: int UPDATE_MAS_INSTANCES_ACCOUNT_RENAMED> = 2;

        <com.android.bluetooth.map.BluetoothMapService: int UPDATE_MAS_INSTANCES_ACCOUNT_REMOVED> = 1;

        <com.android.bluetooth.map.BluetoothMapService: int UPDATE_MAS_INSTANCES_ACCOUNT_ADDED> = 0;

        <com.android.bluetooth.map.BluetoothMapService: int UPDATE_MAS_INSTANCES> = 5;

        <com.android.bluetooth.map.BluetoothMapService: int RELEASE_WAKE_LOCK_DELAY> = 10000;

        <com.android.bluetooth.map.BluetoothMapService: int SHUTDOWN> = 4;

        <com.android.bluetooth.map.BluetoothMapService: int DISCONNECT_MAP> = 3;

        <com.android.bluetooth.map.BluetoothMapService: int USER_TIMEOUT> = 2;

        <com.android.bluetooth.map.BluetoothMapService: int START_LISTENER> = 1;

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String BLUETOOTH_ADMIN_PERM> = "android.permission.BLUETOOTH_ADMIN";

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String BLUETOOTH_PERM> = "android.permission.BLUETOOTH";

        <com.android.bluetooth.map.BluetoothMapService: int MSG_RELEASE_WAKE_LOCK> = 5006;

        <com.android.bluetooth.map.BluetoothMapService: int MSG_ACQUIRE_WAKE_LOCK> = 5005;

        <com.android.bluetooth.map.BluetoothMapService: int MSG_MAS_CONNECT_CANCEL> = 5004;

        <com.android.bluetooth.map.BluetoothMapService: int MSG_MAS_CONNECT> = 5003;

        <com.android.bluetooth.map.BluetoothMapService: int MSG_SESSION_DISCONNECTED> = 5002;

        <com.android.bluetooth.map.BluetoothMapService: int MSG_SESSION_ESTABLISHED> = 5001;

        <com.android.bluetooth.map.BluetoothMapService: int MSG_SERVERSESSION_CLOSE> = 5000;

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String ACTION_SHOW_MAPS_EMAIL_SETTINGS> = "android.btmap.intent.action.SHOW_MAPS_EMAIL_SETTINGS";

        <com.android.bluetooth.map.BluetoothMapService: int USER_CONFIRM_TIMEOUT_VALUE> = 25000;

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String USER_CONFIRM_TIMEOUT_ACTION> = "com.android.bluetooth.map.USER_CONFIRM_TIMEOUT";

        <com.android.bluetooth.map.BluetoothMapService: boolean VERBOSE> = 1;

        <com.android.bluetooth.map.BluetoothMapService: boolean DEBUG> = 1;

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String TAG> = "BluetoothMapService";

        <com.android.bluetooth.map.BluetoothMapService: java.lang.String sRemoteDeviceName> = null;

        $r0 = newarray (android.os.ParcelUuid)[2];

        $r1 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid MAP>;

        $r0[0] = $r1;

        $r2 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid MNS>;

        $r0[1] = $r2;

        <com.android.bluetooth.map.BluetoothMapService: android.os.ParcelUuid[] MAP_UUIDS> = $r0;

        return;
    }
}
