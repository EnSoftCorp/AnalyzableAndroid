public class com.android.bluetooth.pan.PanService extends com.android.bluetooth.btservice.ProfileService
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final java.lang.String BLUETOOTH_IFACE_ADDR_START;
    private static final int BLUETOOTH_MAX_PAN_CONNECTIONS;
    private static final int BLUETOOTH_PREFIX_LENGTH;
    private java.util.HashMap mPanDevices;
    private java.util.ArrayList mBluetoothIfaceAddresses;
    private int mMaxPanDevices;
    private java.lang.String mPanIfName;
    private boolean mNativeAvailable;
    private static final int MESSAGE_CONNECT;
    private static final int MESSAGE_DISCONNECT;
    private static final int MESSAGE_CONNECT_STATE_CHANGED;
    private boolean mTetherOn;
    private static final java.lang.String PAN_PREFERENCE_FILE;
    private static final java.lang.String PAN_TETHER_SETTING;
    private com.android.bluetooth.pan.BluetoothTetheringNetworkFactory mNetworkFactory;
    private final android.os.Handler mHandler;
    private static final int CONN_STATE_CONNECTED;
    private static final int CONN_STATE_CONNECTING;
    private static final int CONN_STATE_DISCONNECTED;
    private static final int CONN_STATE_DISCONNECTING;

    public void <init>()
    {
        com.android.bluetooth.pan.PanService r0;
        com.android.bluetooth.pan.PanService$1 $r1;

        r0 := @this: com.android.bluetooth.pan.PanService;

        specialinvoke r0.<com.android.bluetooth.btservice.ProfileService: void <init>()>();

        r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn> = 0;

        $r1 = new com.android.bluetooth.pan.PanService$1;

        specialinvoke $r1.<com.android.bluetooth.pan.PanService$1: void <init>(com.android.bluetooth.pan.PanService)>(r0);

        r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler> = $r1;

        return;
    }

    protected java.lang.String getName()
    {
        com.android.bluetooth.pan.PanService r0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        return "PanService";
    }

    public com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder initBinder()
    {
        com.android.bluetooth.pan.PanService r0;
        com.android.bluetooth.pan.PanService$BluetoothPanBinder $r1;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $r1 = new com.android.bluetooth.pan.PanService$BluetoothPanBinder;

        specialinvoke $r1.<com.android.bluetooth.pan.PanService$BluetoothPanBinder: void <init>(com.android.bluetooth.pan.PanService)>(r0);

        return $r1;
    }

    protected boolean start()
    {
        com.android.bluetooth.pan.PanService r0;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        android.content.res.Resources $r4;
        int $i0;
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory $r5;
        android.content.Context $r6;
        android.os.Looper $r7;
        boolean $z0;
        android.content.res.Resources$NotFoundException $r8;
        android.content.SharedPreferences r9;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.bluetooth.pan.PanService: java.util.ArrayList mBluetoothIfaceAddresses> = $r3;

     label1:
        $r4 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r4.<android.content.res.Resources: int getInteger(int)>(17694734);

        r0.<com.android.bluetooth.pan.PanService: int mMaxPanDevices> = $i0;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r0.<com.android.bluetooth.pan.PanService: int mMaxPanDevices> = 5;

     label4:
        specialinvoke r0.<com.android.bluetooth.pan.PanService: void initializeNative()>();

        r0.<com.android.bluetooth.pan.PanService: boolean mNativeAvailable> = 1;

        $r5 = new com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r6 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.content.Context getBaseContext()>();

        $r7 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void <init>(android.content.Context,android.os.Looper,com.android.bluetooth.pan.PanService)>($r6, $r7, r0);

        r0.<com.android.bluetooth.pan.PanService: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory mNetworkFactory> = $r5;

        r9 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("PANMGR", 0);

        $z0 = interfaceinvoke r9.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("TETHERSTATE", 0);

        r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn> = $z0;

        return 1;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    protected boolean stop()
    {
        com.android.bluetooth.pan.PanService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $r1 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return 1;
    }

    protected boolean cleanup()
    {
        com.android.bluetooth.pan.PanService r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.bluetooth.BluetoothDevice r3;
        boolean $z0, $z1;
        java.util.HashMap $r4, $r7;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r8;
        java.lang.String $r9;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $z0 = r0.<com.android.bluetooth.pan.PanService: boolean mNativeAvailable>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.pan.PanService: void cleanupNative()>();

        r0.<com.android.bluetooth.pan.PanService: boolean mNativeAvailable> = 0;

     label1:
        $r4 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        if $r4 == null goto label4;

        r1 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: java.util.List getConnectedDevices()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.bluetooth.BluetoothDevice) $r8;

        $r9 = r0.<com.android.bluetooth.pan.PanService: java.lang.String mPanIfName>;

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int,int)>(r3, $r9, 0, 2, 1);

        goto label2;

     label3:
        $r7 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

     label4:
        $r5 = r0.<com.android.bluetooth.pan.PanService: java.util.ArrayList mBluetoothIfaceAddresses>;

        if $r5 == null goto label5;

        $r6 = r0.<com.android.bluetooth.pan.PanService: java.util.ArrayList mBluetoothIfaceAddresses>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

     label5:
        return 1;
    }

    boolean connect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.pan.PanService r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.Message r2;
        int $i0;
        android.os.Handler $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $i0 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if $i0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pan Device not disconnected: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PanService", $r8);

        return 0;

     label1:
        $r3 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        $r4 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return 1;
    }

    boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.pan.PanService r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.Message r2;
        android.os.Handler $r3, $r4;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r1);

        $r4 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return 1;
    }

    int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.pan.PanService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.pan.PanService$BluetoothPanDevice r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.bluetooth.pan.PanService$BluetoothPanDevice) $r4;

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: int access$700(com.android.bluetooth.pan.PanService$BluetoothPanDevice)>(r2);

        return $i0;
    }

    boolean isPanNapOn()
    {
        com.android.bluetooth.pan.PanService r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $i0 = specialinvoke r0.<com.android.bluetooth.pan.PanService: int getPanLocalRoleNative()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isPanUOn()
    {
        com.android.bluetooth.pan.PanService r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $i0 = specialinvoke r0.<com.android.bluetooth.pan.PanService: int getPanLocalRoleNative()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isTetheringOn()
    {
        com.android.bluetooth.pan.PanService r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $z0 = r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn>;

        return $z0;
    }

    void setBluetoothTethering(boolean)
    {
        com.android.bluetooth.pan.PanService r0;
        boolean z0, $z1, $z2, $z4;
        android.os.UserManager r1;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;
        java.util.List r4;
        java.util.Iterator r5;
        android.bluetooth.BluetoothDevice r6;
        android.content.Context $r7;
        java.lang.Object $r8, $r10;
        java.lang.SecurityException $r11;

        r0 := @this: com.android.bluetooth.pan.PanService;

        z0 := @parameter0: boolean;

        $r7 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.content.Context getBaseContext()>();

        staticinvoke <android.net.ConnectivityManager: void enforceTetherChangePermission(android.content.Context)>($r7);

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH_ADMIN permission");

        $r8 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: java.lang.Object getSystemService(java.lang.String)>("user");

        r1 = (android.os.UserManager) $r8;

        $z1 = virtualinvoke r1.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_config_tethering");

        if $z1 == 0 goto label1;

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>("DISALLOW_CONFIG_TETHERING is enabled for this user.");

        throw $r11;

     label1:
        $z2 = r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn>;

        if $z2 == z0 goto label3;

        r2 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("PANMGR", 0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("TETHERSTATE", z0);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn> = z0;

        r4 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: java.util.List getConnectedDevices()>();

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.bluetooth.BluetoothDevice) $r10;

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: boolean disconnect(android.bluetooth.BluetoothDevice)>(r6);

        goto label2;

     label3:
        return;
    }

    java.util.List getConnectedDevices()
    {
        com.android.bluetooth.pan.PanService r0;
        java.util.List r1;
        int[] $r2;

        r0 := @this: com.android.bluetooth.pan.PanService;

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = newarray (int)[1];

        $r2[0] = 2;

        r1 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: java.util.List getDevicesMatchingConnectionStates(int[])>($r2);

        return r1;
    }

    java.util.List getDevicesMatchingConnectionStates(int[])
    {
        com.android.bluetooth.pan.PanService r0;
        int[] r1, r5;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.bluetooth.BluetoothDevice r4;
        int i0, i1, i2, i3;
        java.util.HashMap $r7;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.bluetooth.BluetoothDevice) $r9;

        i0 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: int getConnectionState(android.bluetooth.BluetoothDevice)>(r4);

        r5 = r1;

        i1 = lengthof r5;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        i3 = r5[i2];

        if i3 != i0 goto label3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return r2;
    }

    private void onConnectStateChanged(byte[], int, int, int, int)
    {
        com.android.bluetooth.pan.PanService r0;
        byte[] r1;
        int i0, i1, i2, i3;
        android.os.Message r2;
        android.os.Handler $r3, $r5;
        com.android.bluetooth.pan.PanService$ConnectState $r4;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r3 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(11);

        $r4 = new com.android.bluetooth.pan.PanService$ConnectState;

        specialinvoke $r4.<com.android.bluetooth.pan.PanService$ConnectState: void <init>(byte[],int,int,int,int)>(r1, i0, i1, i2, i3);

        r2.<android.os.Message: java.lang.Object obj> = $r4;

        $r5 = r0.<com.android.bluetooth.pan.PanService: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private void onControlStateChanged(int, int, int, java.lang.String)
    {
        com.android.bluetooth.pan.PanService r0;
        int i0, i1, i2;
        java.lang.String r1;

        r0 := @this: com.android.bluetooth.pan.PanService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        if i2 != 0 goto label1;

        r0.<com.android.bluetooth.pan.PanService: java.lang.String mPanIfName> = r1;

     label1:
        return;
    }

    private static int convertHalState(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return 3;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad pan connection state: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PanService", $r3);

        return 0;
    }

    void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice, java.lang.String, int, int, int)
    {
        com.android.bluetooth.pan.PanService r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String r2, r3, $r13, $r22, $r35, $r45;
        int i0, i1, i2, i3;
        com.android.bluetooth.pan.PanService$BluetoothPanDevice r4, $r28, r49;
        android.content.Intent r5, $r27;
        java.util.HashMap $r6, $r29;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r32, $r34, $r36, $r37, $r38, $r43, $r44, $r46, $r47, $r48;
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory $r14, $r40, $r41;
        java.util.ArrayList $r39;
        byte[] $r42;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 = null;

        $r6 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.bluetooth.pan.PanService$BluetoothPanDevice) $r7;

        if r4 != null goto label01;

        i3 = 0;

        goto label02;

     label01:
        i3 = staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: int access$700(com.android.bluetooth.pan.PanService$BluetoothPanDevice)>(r4);

        r3 = staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: java.lang.String access$800(com.android.bluetooth.pan.PanService$BluetoothPanDevice)>(r4);

     label02:
        if i3 != 0 goto label03;

        if i0 != 3 goto label03;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring state change from ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r43 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PanService", $r45);

        return;

     label03:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePanDeviceStateChange preState: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PanService", $r13);

        if i3 != i0 goto label04;

        return;

     label04:
        if i2 != 2 goto label08;

        if i0 != 2 goto label07;

        $z0 = r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn>;

        if $z0 == 0 goto label05;

        if i1 != 2 goto label06;

     label05:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PanService", "handlePanDeviceStateChange BT tethering is off/Local role is PANU drop the connection");

        $r42 = staticinvoke <com.android.bluetooth.Utils: byte[] getByteAddress(android.bluetooth.BluetoothDevice)>(r1);

        specialinvoke r0.<com.android.bluetooth.pan.PanService: boolean disconnectPanNative(byte[])>($r42);

        return;

     label06:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PanService", "handlePanDeviceStateChange LOCAL_NAP_ROLE:REMOTE_PANU_ROLE");

        r3 = specialinvoke r0.<com.android.bluetooth.pan.PanService: java.lang.String enableTethering(java.lang.String)>(r2);

        if r3 != null goto label11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PanService", "Error seting up tether interface");

        goto label11;

     label07:
        if i0 != 0 goto label11;

        if r3 == null goto label11;

        $r39 = r0.<com.android.bluetooth.pan.PanService: java.util.ArrayList mBluetoothIfaceAddresses>;

        virtualinvoke $r39.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        r3 = null;

        goto label11;

     label08:
        $r14 = r0.<com.android.bluetooth.pan.PanService: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory mNetworkFactory>;

        if $r14 == null goto label11;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePanDeviceStateChange LOCAL_PANU_ROLE:REMOTE_NAP_ROLE state = ");

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", prevState = ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PanService", $r35);

        if i0 != 2 goto label09;

        $r40 = r0.<com.android.bluetooth.pan.PanService: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory mNetworkFactory>;

        virtualinvoke $r40.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void startReverseTether(java.lang.String)>(r2);

        goto label11;

     label09:
        if i0 != 0 goto label11;

        if i3 == 2 goto label10;

        if i3 != 3 goto label11;

     label10:
        $r41 = r0.<com.android.bluetooth.pan.PanService: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory mNetworkFactory>;

        virtualinvoke $r41.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void stopReverseTether()>();

     label11:
        if r4 != null goto label12;

        $r28 = new com.android.bluetooth.pan.PanService$BluetoothPanDevice;

        specialinvoke $r28.<com.android.bluetooth.pan.PanService$BluetoothPanDevice: void <init>(com.android.bluetooth.pan.PanService,int,java.lang.String,java.lang.String,int)>(r0, i0, r3, r2, i1);

        r49 = $r28;

        $r29 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r49);

        goto label13;

     label12:
        staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: int access$702(com.android.bluetooth.pan.PanService$BluetoothPanDevice,int)>(r4, i0);

        staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: java.lang.String access$802(com.android.bluetooth.pan.PanService$BluetoothPanDevice,java.lang.String)>(r4, r3);

        staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: int access$902(com.android.bluetooth.pan.PanService$BluetoothPanDevice,int)>(r4, i1);

        staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: java.lang.String access$1002(com.android.bluetooth.pan.PanService$BluetoothPanDevice,java.lang.String)>(r4, r2);

     label13:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pan Device state : device: ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" State:");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PanService", $r22);

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void notifyProfileConnectionStateChanged(android.bluetooth.BluetoothDevice,int,int,int)>(r1, 5, i0, i3);

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.pan.profile.action.CONNECTION_STATE_CHANGED");

        r5 = $r27;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.bluetooth.device.extra.DEVICE", r1);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.profile.extra.PREVIOUS_STATE", i3);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.profile.extra.STATE", i0);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.pan.extra.LOCAL_ROLE", i1);

        virtualinvoke r0.<com.android.bluetooth.pan.PanService: void sendBroadcast(android.content.Intent,java.lang.String)>(r5, "android.permission.BLUETOOTH");

        return;
    }

    private java.lang.String enableTethering(java.lang.String)
    {
        com.android.bluetooth.pan.PanService r0;
        java.lang.String r1, r8, $r13, $r22, $r28, r31;
        android.os.IBinder r2;
        android.os.INetworkManagementService r3;
        android.net.ConnectivityManager r4;
        java.lang.String[] r5, r7, r30;
        java.lang.Exception r6, $r17, $r26, r35;
        int i0, i1, $i2;
        java.lang.Object $r9;
        android.net.LinkAddress $r10, r33;
        java.lang.StringBuilder $r11, $r12, $r14, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r29;
        java.net.InetAddress $r15, $r16, $r18, r34;
        boolean $z0, $z1, $z2, z3;
        android.net.InterfaceConfiguration r32;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("network_management");

        r3 = staticinvoke <android.os.INetworkManagementService$Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)>(r2);

        $r9 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r4 = (android.net.ConnectivityManager) $r9;

        virtualinvoke r4.<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>();

        r5 = newarray (java.lang.String)[0];

     label01:
        r30 = interfaceinvoke r3.<android.os.INetworkManagementService: java.lang.String[] listInterfaces()>();

     label02:
        goto label04;

     label03:
        $r26 := @caughtexception;

        r6 = $r26;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error listing Interfaces :");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PanService", $r28);

        return null;

     label04:
        z3 = 0;

        r7 = r30;

        i0 = lengthof r7;

        i1 = 0;

     label05:
        if i1 >= i0 goto label07;

        r8 = r7[i1];

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        if z3 != 0 goto label08;

        return null;

     label08:
        r31 = specialinvoke r0.<com.android.bluetooth.pan.PanService: java.lang.String createNewTetheringAddressLocked()>();

        if r31 != null goto label09;

        return null;

     label09:
        r32 = interfaceinvoke r3.<android.os.INetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>(r1);

        if r32 == null goto label12;

        r33 = virtualinvoke r32.<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>();

        if r33 == null goto label10;

        $r15 = virtualinvoke r33.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        r34 = $r15;

        if $r15 == null goto label10;

        $r16 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>("0.0.0.0");

        $z0 = virtualinvoke r34.<java.net.InetAddress: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label10;

        $r18 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>("::0");

        $z2 = virtualinvoke r34.<java.net.InetAddress: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label11;

     label10:
        r34 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r31);

     label11:
        virtualinvoke r32.<android.net.InterfaceConfiguration: void setInterfaceUp()>();

        $r10 = new android.net.LinkAddress;

        specialinvoke $r10.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>(r34, 24);

        virtualinvoke r32.<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>($r10);

        virtualinvoke r32.<android.net.InterfaceConfiguration: void clearFlag(java.lang.String)>("running");

        interfaceinvoke r3.<android.os.INetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(r1, r32);

        $i2 = virtualinvoke r4.<android.net.ConnectivityManager: int tether(java.lang.String)>(r1);

        if $i2 == 0 goto label12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error tethering ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PanService", $r13);

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;

        r35 = $r17;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error configuring interface ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", :");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PanService", $r22);

        return null;

     label14:
        return r31;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label09 to label12 with label13;
    }

    private java.lang.String createNewTetheringAddressLocked()
    {
        com.android.bluetooth.pan.PanService r0;
        java.lang.String r1, $r7, $r8, $r9;
        java.lang.String[] r2;
        java.lang.Integer r3;
        java.util.List $r4;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $r4 = specialinvoke r0.<com.android.bluetooth.pan.PanService: java.util.List getConnectedPanDevices()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = r0.<com.android.bluetooth.pan.PanService: int mMaxPanDevices>;

        if $i0 != $i1 goto label1;

        return null;

     label1:
        r1 = "192.168.44.1";

     label2:
        $r5 = r0.<com.android.bluetooth.pan.PanService: java.util.ArrayList mBluetoothIfaceAddresses>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r7 = r2[2];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $i3 = $i2 + 1;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r9 = r2[2];

        $r8 = virtualinvoke r3.<java.lang.Integer: java.lang.String toString()>();

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r9, $r8);

        goto label2;

     label3:
        $r6 = r0.<com.android.bluetooth.pan.PanService: java.util.ArrayList mBluetoothIfaceAddresses>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r1;
    }

    private java.util.List getConnectedPanDevices()
    {
        com.android.bluetooth.pan.PanService r0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        android.bluetooth.BluetoothDevice r3;
        java.util.HashMap $r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;
        int $i0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.bluetooth.BluetoothDevice) $r7;

        $i0 = specialinvoke r0.<com.android.bluetooth.pan.PanService: int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>(r3);

        if $i0 != 2 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return r1;
    }

    private int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.pan.PanService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.pan.PanService$BluetoothPanDevice r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.bluetooth.pan.PanService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<com.android.bluetooth.pan.PanService: java.util.HashMap mPanDevices>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.bluetooth.pan.PanService$BluetoothPanDevice) $r4;

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <com.android.bluetooth.pan.PanService$BluetoothPanDevice: int access$700(com.android.bluetooth.pan.PanService$BluetoothPanDevice)>(r2);

        return $i0;
    }

    private static native void classInitNative();

    private native void initializeNative();

    private native void cleanupNative();

    private native boolean connectPanNative(byte[], int, int);

    private native boolean disconnectPanNative(byte[]);

    private native boolean enablePanNative(int);

    private native int getPanLocalRoleNative();

    static boolean access$000(com.android.bluetooth.pan.PanService, byte[], int, int)
    {
        com.android.bluetooth.pan.PanService r0;
        byte[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.pan.PanService;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.pan.PanService: boolean connectPanNative(byte[],int,int)>(r1, i0, i1);

        return $z0;
    }

    static boolean access$100(com.android.bluetooth.pan.PanService, byte[])
    {
        com.android.bluetooth.pan.PanService r0;
        byte[] r1;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.pan.PanService;

        r1 := @parameter1: byte[];

        $z0 = specialinvoke r0.<com.android.bluetooth.pan.PanService: boolean disconnectPanNative(byte[])>(r1);

        return $z0;
    }

    static java.lang.String access$200(com.android.bluetooth.pan.PanService)
    {
        com.android.bluetooth.pan.PanService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.bluetooth.pan.PanService;

        $r1 = r0.<com.android.bluetooth.pan.PanService: java.lang.String mPanIfName>;

        return $r1;
    }

    static android.bluetooth.BluetoothDevice access$300(com.android.bluetooth.pan.PanService, byte[])
    {
        com.android.bluetooth.pan.PanService r0;
        byte[] r1;
        android.bluetooth.BluetoothDevice $r2;

        r0 := @parameter0: com.android.bluetooth.pan.PanService;

        r1 := @parameter1: byte[];

        $r2 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: android.bluetooth.BluetoothDevice getDevice(byte[])>(r1);

        return $r2;
    }

    static int access$400(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.bluetooth.pan.PanService: int convertHalState(int)>(i0);

        return $i1;
    }

    static boolean access$500(com.android.bluetooth.pan.PanService)
    {
        com.android.bluetooth.pan.PanService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.pan.PanService;

        $z0 = virtualinvoke r0.<com.android.bluetooth.pan.PanService: boolean isAvailable()>();

        return $z0;
    }

    static boolean access$600(com.android.bluetooth.pan.PanService)
    {
        com.android.bluetooth.pan.PanService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.pan.PanService;

        $z0 = r0.<com.android.bluetooth.pan.PanService: boolean mTetherOn>;

        return $z0;
    }

    static void <clinit>()
    {
        <com.android.bluetooth.pan.PanService: int CONN_STATE_DISCONNECTING> = 3;

        <com.android.bluetooth.pan.PanService: int CONN_STATE_DISCONNECTED> = 2;

        <com.android.bluetooth.pan.PanService: int CONN_STATE_CONNECTING> = 1;

        <com.android.bluetooth.pan.PanService: int CONN_STATE_CONNECTED> = 0;

        <com.android.bluetooth.pan.PanService: java.lang.String PAN_TETHER_SETTING> = "TETHERSTATE";

        <com.android.bluetooth.pan.PanService: java.lang.String PAN_PREFERENCE_FILE> = "PANMGR";

        <com.android.bluetooth.pan.PanService: int MESSAGE_CONNECT_STATE_CHANGED> = 11;

        <com.android.bluetooth.pan.PanService: int MESSAGE_DISCONNECT> = 2;

        <com.android.bluetooth.pan.PanService: int MESSAGE_CONNECT> = 1;

        <com.android.bluetooth.pan.PanService: int BLUETOOTH_PREFIX_LENGTH> = 24;

        <com.android.bluetooth.pan.PanService: int BLUETOOTH_MAX_PAN_CONNECTIONS> = 5;

        <com.android.bluetooth.pan.PanService: java.lang.String BLUETOOTH_IFACE_ADDR_START> = "192.168.44.1";

        <com.android.bluetooth.pan.PanService: boolean DBG> = 0;

        <com.android.bluetooth.pan.PanService: java.lang.String TAG> = "PanService";

        staticinvoke <com.android.bluetooth.pan.PanService: void classInitNative()>();

        return;
    }
}
