public class com.android.bluetooth.avrcp.AvrcpControllerService extends com.android.bluetooth.btservice.ProfileService
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static final int MESSAGE_SEND_PASS_THROUGH_CMD;
    private com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler mHandler;
    private static com.android.bluetooth.avrcp.AvrcpControllerService sAvrcpControllerService;
    private final java.util.ArrayList mConnectedDevices;

    public void <init>()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        specialinvoke r0.<com.android.bluetooth.btservice.ProfileService: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices> = $r1;

        specialinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void initNative()>();

        return;
    }

    protected java.lang.String getName()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        return "AvrcpControllerService";
    }

    protected com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder initBinder()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder $r1;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        $r1 = new com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder;

        specialinvoke $r1.<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder: void <init>(com.android.bluetooth.avrcp.AvrcpControllerService)>(r0);

        return $r1;
    }

    protected boolean start()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        android.os.HandlerThread r1, $r3;
        android.os.Looper r2;
        com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler $r4;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String)>("BluetoothAvrcpHandler");

        r1 = $r3;

        virtualinvoke r1.<android.os.HandlerThread: void start()>();

        r2 = virtualinvoke r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r4 = new com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler;

        specialinvoke $r4.<com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler: void <init>(com.android.bluetooth.avrcp.AvrcpControllerService,android.os.Looper,com.android.bluetooth.avrcp.AvrcpControllerService$1)>(r0, r2, null);

        r0.<com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler mHandler> = $r4;

        staticinvoke <com.android.bluetooth.avrcp.AvrcpControllerService: void setAvrcpControllerService(com.android.bluetooth.avrcp.AvrcpControllerService)>(r0);

        return 1;
    }

    protected boolean stop()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        return 1;
    }

    protected boolean cleanup()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        android.os.Looper r1;
        com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler $r2, $r3;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        $r2 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler mHandler>;

        virtualinvoke $r2.<com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r3 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler: android.os.Looper getLooper()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.Looper: void quit()>();

     label1:
        staticinvoke <com.android.bluetooth.avrcp.AvrcpControllerService: void clearAvrcpControllerService()>();

        specialinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void cleanupNative()>();

        return 1;
    }

    public static synchronized com.android.bluetooth.avrcp.AvrcpControllerService getAvrcpControllerService()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService $r0, $r1, $r2;
        boolean $z0;

        $r0 = <com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService sAvrcpControllerService>;

        if $r0 == null goto label1;

        $r1 = <com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService sAvrcpControllerService>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.avrcp.AvrcpControllerService: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $r2 = <com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService sAvrcpControllerService>;

        return $r2;

     label1:
        return null;
    }

    private static synchronized void setAvrcpControllerService(com.android.bluetooth.avrcp.AvrcpControllerService)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.avrcp.AvrcpControllerService;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        <com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService sAvrcpControllerService> = r0;

     label1:
        return;
    }

    private static synchronized void clearAvrcpControllerService()
    {
        <com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService sAvrcpControllerService> = null;

        return;
    }

    public java.util.List getConnectedDevices()
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices>;

        return $r1;
    }

    java.util.List getDevicesMatchingConnectionStates(int[])
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        int[] r1;
        int i0, $i1, $i2;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $i2 = r1[i0];

        if $i2 != 2 goto label2;

        $r3 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices>;

        return $r3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;
    }

    int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        android.bluetooth.BluetoothDevice r1;
        java.util.ArrayList $r2;
        boolean $z0;
        byte $b0;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }

    public void sendPassThroughCmd(android.bluetooth.BluetoothDevice, int, int)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1;
        android.os.Message r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler $r9, $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keyCode: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" keyState: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AvrcpControllerService", $r8);

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("device == null");

        throw $r11;

     label1:
        virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r9 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler mHandler>;

        r2 = virtualinvoke $r9.<com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, i0, i1, r1);

        $r10 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler mHandler>;

        virtualinvoke $r10.<com.android.bluetooth.avrcp.AvrcpControllerService$AvrcpMessageHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private void onConnectionStateChanged(boolean, byte[])
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        boolean z0, $z1;
        byte[] r1;
        android.bluetooth.BluetoothDevice r2;
        android.content.Intent r3, $r13;
        byte b0, b1, $b3, $b4;
        android.bluetooth.BluetoothAdapter $r4;
        java.lang.String $r5, $r11;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.util.ArrayList $r12, $r17, $r18;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        z0 := @parameter0: boolean;

        r1 := @parameter1: byte[];

        $r4 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        $r5 = staticinvoke <com.android.bluetooth.Utils: java.lang.String getAddressStringFromByte(byte[])>(r1);

        r2 = virtualinvoke $r4.<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectionStateChanged ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AvrcpControllerService", $r11);

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.acrcp-controller.profile.action.CONNECTION_STATE_CHANGED");

        r3 = $r13;

        $r12 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices>;

        $z1 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $b3 = 2;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        b0 = $b3;

        if z0 == 0 goto label3;

        $b4 = 2;

        goto label4;

     label3:
        $b4 = 0;

     label4:
        b1 = $b4;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.profile.extra.PREVIOUS_STATE", b0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.profile.extra.STATE", b1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.bluetooth.device.extra.DEVICE", r2);

        virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: void sendBroadcast(android.content.Intent,java.lang.String)>(r3, "android.permission.BLUETOOTH");

        if z0 == 0 goto label5;

        if b0 != 0 goto label5;

        $r18 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label6;

     label5:
        if z0 != 0 goto label6;

        if b0 != 2 goto label6;

        $r17 = r0.<com.android.bluetooth.avrcp.AvrcpControllerService: java.util.ArrayList mConnectedDevices>;

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label6:
        return;
    }

    private void handlePassthroughRsp(int, int)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("passthrough response received as: key: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AvrcpControllerService", $r6);

        return;
    }

    private byte[] getByteAddress(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: com.android.bluetooth.avrcp.AvrcpControllerService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r2 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $r3 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r2);

        return $r3;
    }

    private static native void classInitNative();

    private native void initNative();

    private native void cleanupNative();

    private native boolean sendPassThroughCommandNative(byte[], int, int);

    static boolean access$100(com.android.bluetooth.avrcp.AvrcpControllerService)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.avrcp.AvrcpControllerService;

        $z0 = virtualinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: boolean isAvailable()>();

        return $z0;
    }

    static byte[] access$200(com.android.bluetooth.avrcp.AvrcpControllerService, android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        android.bluetooth.BluetoothDevice r1;
        byte[] $r2;

        r0 := @parameter0: com.android.bluetooth.avrcp.AvrcpControllerService;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        $r2 = specialinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: byte[] getByteAddress(android.bluetooth.BluetoothDevice)>(r1);

        return $r2;
    }

    static boolean access$300(com.android.bluetooth.avrcp.AvrcpControllerService, byte[], int, int)
    {
        com.android.bluetooth.avrcp.AvrcpControllerService r0;
        byte[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.avrcp.AvrcpControllerService;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.avrcp.AvrcpControllerService: boolean sendPassThroughCommandNative(byte[],int,int)>(r1, i0, i1);

        return $z0;
    }

    static void <clinit>()
    {
        <com.android.bluetooth.avrcp.AvrcpControllerService: int MESSAGE_SEND_PASS_THROUGH_CMD> = 1;

        <com.android.bluetooth.avrcp.AvrcpControllerService: java.lang.String TAG> = "AvrcpControllerService";

        <com.android.bluetooth.avrcp.AvrcpControllerService: boolean DBG> = 0;

        staticinvoke <com.android.bluetooth.avrcp.AvrcpControllerService: void classInitNative()>();

        return;
    }
}
