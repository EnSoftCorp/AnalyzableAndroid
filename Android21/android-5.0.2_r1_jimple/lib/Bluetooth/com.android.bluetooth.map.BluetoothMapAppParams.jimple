public class com.android.bluetooth.map.BluetoothMapAppParams extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int MAX_LIST_COUNT;
    private static final int MAX_LIST_COUNT_LEN;
    private static final int START_OFFSET;
    private static final int START_OFFSET_LEN;
    private static final int FILTER_MESSAGE_TYPE;
    private static final int FILTER_MESSAGE_TYPE_LEN;
    private static final int FILTER_PERIOD_BEGIN;
    private static final int FILTER_PERIOD_END;
    private static final int FILTER_READ_STATUS;
    private static final int FILTER_READ_STATUS_LEN;
    private static final int FILTER_RECIPIENT;
    private static final int FILTER_ORIGINATOR;
    private static final int FILTER_PRIORITY;
    private static final int FILTER_PRIORITY_LEN;
    private static final int ATTACHMENT;
    private static final int ATTACHMENT_LEN;
    private static final int TRANSPARENT;
    private static final int TRANSPARENT_LEN;
    private static final int RETRY;
    private static final int RETRY_LEN;
    private static final int NEW_MESSAGE;
    private static final int NEW_MESSAGE_LEN;
    private static final int NOTIFICATION_STATUS;
    private static final int NOTIFICATION_STATUS_LEN;
    private static final int MAS_INSTANCE_ID;
    private static final int MAS_INSTANCE_ID_LEN;
    private static final int PARAMETER_MASK;
    private static final int PARAMETER_MASK_LEN;
    private static final int FOLDER_LISTING_SIZE;
    private static final int FOLDER_LISTING_SIZE_LEN;
    private static final int MESSAGE_LISTING_SIZE;
    private static final int MESSAGE_LISTING_SIZE_LEN;
    private static final int SUBJECT_LENGTH;
    private static final int SUBJECT_LENGTH_LEN;
    private static final int CHARSET;
    private static final int CHARSET_LEN;
    private static final int FRACTION_REQUEST;
    private static final int FRACTION_REQUEST_LEN;
    private static final int FRACTION_DELIVER;
    private static final int FRACTION_DELIVER_LEN;
    private static final int STATUS_INDICATOR;
    private static final int STATUS_INDICATOR_LEN;
    private static final int STATUS_VALUE;
    private static final int STATUS_VALUE_LEN;
    private static final int MSE_TIME;
    public static final int INVALID_VALUE_PARAMETER;
    public static final int NOTIFICATION_STATUS_NO;
    public static final int NOTIFICATION_STATUS_YES;
    public static final int STATUS_INDICATOR_READ;
    public static final int STATUS_INDICATOR_DELETED;
    public static final int STATUS_VALUE_YES;
    public static final int STATUS_VALUE_NO;
    public static final int CHARSET_NATIVE;
    public static final int CHARSET_UTF8;
    public static final int FRACTION_REQUEST_FIRST;
    public static final int FRACTION_REQUEST_NEXT;
    public static final int FRACTION_DELIVER_MORE;
    public static final int FRACTION_DELIVER_LAST;
    public static final int FILTER_NO_SMS_GSM;
    public static final int FILTER_NO_SMS_CDMA;
    public static final int FILTER_NO_EMAIL;
    public static final int FILTER_NO_MMS;
    public static final long PARAMETER_MASK_ALL_ENABLED;
    private int mMaxListCount;
    private int mStartOffset;
    private int mFilterMessageType;
    private long mFilterPeriodBegin;
    private long mFilterPeriodEnd;
    private int mFilterReadStatus;
    private java.lang.String mFilterRecipient;
    private java.lang.String mFilterOriginator;
    private int mFilterPriority;
    private int mAttachment;
    private int mTransparent;
    private int mRetry;
    private int mNewMessage;
    private int mNotificationStatus;
    private int mMasInstanceId;
    private long mParameterMask;
    private int mFolderListingSize;
    private int mMessageListingSize;
    private int mSubjectLength;
    private int mCharset;
    private int mFractionRequest;
    private int mFractionDeliver;
    private int mStatusIndicator;
    private int mStatusValue;
    private long mMseTime;

    public void <init>()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMaxListCount> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStartOffset> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterMessageType> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodBegin> = -1L;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodEnd> = -1L;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterReadStatus> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterRecipient> = null;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterOriginator> = null;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterPriority> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mAttachment> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mTransparent> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mRetry> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNewMessage> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNotificationStatus> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMasInstanceId> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mParameterMask> = -1L;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFolderListingSize> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMessageListingSize> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mSubjectLength> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mCharset> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionRequest> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionDeliver> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusIndicator> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusValue> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mMseTime> = -1L;

        return;
    }

    public void <init>(byte[]) throws java.lang.IllegalArgumentException, java.text.ParseException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        byte[] r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMaxListCount> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStartOffset> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterMessageType> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodBegin> = -1L;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodEnd> = -1L;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterReadStatus> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterRecipient> = null;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterOriginator> = null;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterPriority> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mAttachment> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mTransparent> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mRetry> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNewMessage> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNotificationStatus> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMasInstanceId> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mParameterMask> = -1L;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFolderListingSize> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMessageListingSize> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mSubjectLength> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mCharset> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionRequest> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionDeliver> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusIndicator> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusValue> = -1;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mMseTime> = -1L;

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void ParseParams(byte[])>(r1);

        return;
    }

    private void ParseParams(byte[]) throws java.text.ParseException, java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        byte[] r1;
        int i0, $i3, $i7, $i28, $i31, $i35, $i66, i68, i69;
        short s1, s2, $s6, $s23, $s26, $s29, $s36, $s65;
        java.nio.ByteBuffer r2;
        java.nio.ByteOrder $r3;
        byte $b4, $b5, $b9, $b10, $b12, $b13, $b14, $b16, $b17, $b19, $b21, $b22, $b25, $b37, $b39, $b40, $b42, $b43, $b46, $b47, $b49, $b50, $b52, $b53, $b56, $b57, $b58, $b59, $b60, $b61;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r44, $r45, $r46, $r48, $r50, $r51, $r52, $r53, $r54, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r83, $r84, $r86, $r88, $r89, $r90, $r91, $r92, $r93, $r95, $r96, $r97, $r98, $r99, $r100, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r119, $r120, $r121, $r122, $r123, $r124, $r126, $r127, $r129, $r130, $r131, $r134, $r135;
        java.lang.String $r10, $r11, $r17, $r21, $r28, $r32, $r43, $r47, $r49, $r55, $r64, $r67, $r82, $r85, $r87, $r94, $r101, $r102, $r103, $r104, $r116, $r117, $r118, $r125, $r128, $r132, $r133;
        long $l32, $l33;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: byte[];

        i0 = 0;

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

     label01:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label49;

        i68 = i0 + 1;

        $b4 = r1[i0];

        s1 = $b4 & 255;

        i69 = i68 + 1;

        $b5 = r1[i68];

        s2 = $b5 & 255;

        tableswitch(s1)
        {
            case 1: goto label02;
            case 2: goto label04;
            case 3: goto label06;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label14;
            case 10: goto label16;
            case 11: goto label18;
            case 12: goto label20;
            case 13: goto label22;
            case 14: goto label24;
            case 15: goto label26;
            case 16: goto label28;
            case 17: goto label30;
            case 18: goto label32;
            case 19: goto label34;
            case 20: goto label36;
            case 21: goto label38;
            case 22: goto label40;
            case 23: goto label42;
            case 24: goto label44;
            case 25: goto label46;
            default: goto label47;
        };

     label02:
        if s2 == 2 goto label03;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAX_LIST_COUNT: Wrong length received: ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r10);

        goto label48;

     label03:
        $s6 = virtualinvoke r2.<java.nio.ByteBuffer: short getShort(int)>(i69);

        $i7 = $s6 & 65535;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setMaxListCount(int)>($i7);

        goto label48;

     label04:
        if s2 == 2 goto label05;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("START_OFFSET: Wrong length received: ");

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r126 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r128);

        goto label48;

     label05:
        $s65 = virtualinvoke r2.<java.nio.ByteBuffer: short getShort(int)>(i69);

        $i66 = $s65 & 65535;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setStartOffset(int)>($i66);

        goto label48;

     label06:
        if s2 == 1 goto label07;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FILTER_MESSAGE_TYPE: Wrong length received: ");

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r114 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r113 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r132 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r132);

        goto label48;

     label07:
        $b61 = r1[i69];

        $b60 = $b61 & 15;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterMessageType(int)>($b60);

        goto label48;

     label08:
        if s2 == 0 goto label48;

        $r117 = new java.lang.String;

        specialinvoke $r117.<java.lang.String: void <init>(byte[],int,int)>(r1, i69, s2);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterPeriodBegin(java.lang.String)>($r117);

        goto label48;

     label09:
        if s2 == 0 goto label48;

        $r118 = new java.lang.String;

        specialinvoke $r118.<java.lang.String: void <init>(byte[],int,int)>(r1, i69, s2);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterPeriodEnd(java.lang.String)>($r118);

        goto label48;

     label10:
        if s2 == 1 goto label11;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FILTER_READ_STATUS: Wrong length received: ");

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r121 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r116 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r116);

        goto label48;

     label11:
        $b56 = r1[i69];

        $b57 = $b56 & 3;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterReadStatus(int)>($b57);

        goto label48;

     label12:
        if s2 == 0 goto label48;

        $r103 = new java.lang.String;

        specialinvoke $r103.<java.lang.String: void <init>(byte[],int,int)>(r1, i69, s2);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterRecipient(java.lang.String)>($r103);

        goto label48;

     label13:
        if s2 == 0 goto label48;

        $r102 = new java.lang.String;

        specialinvoke $r102.<java.lang.String: void <init>(byte[],int,int)>(r1, i69, s2);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterOriginator(java.lang.String)>($r102);

        goto label48;

     label14:
        if s2 == 1 goto label15;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FILTER_PRIORITY: Wrong length received: ");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r107 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r104 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r104);

        goto label48;

     label15:
        $b58 = r1[i69];

        $b59 = $b58 & 3;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFilterPriority(int)>($b59);

        goto label48;

     label16:
        if s2 == 1 goto label17;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ATTACHMENT: Wrong length received: ");

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r96 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r94);

        goto label48;

     label17:
        $b53 = r1[i69];

        $b52 = $b53 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setAttachment(int)>($b52);

        goto label48;

     label18:
        if s2 == 1 goto label19;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRANSPARENT: Wrong length received: ");

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r101 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r101);

        goto label48;

     label19:
        $b46 = r1[i69];

        $b47 = $b46 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setTransparent(int)>($b47);

        goto label48;

     label20:
        if s2 == 1 goto label21;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RETRY: Wrong length received: ");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r83 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r85);

        goto label48;

     label21:
        $b49 = r1[i69];

        $b50 = $b49 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setRetry(int)>($b50);

        goto label48;

     label22:
        if s2 == 1 goto label23;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NEW_MESSAGE: Wrong length received: ");

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r87 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r87);

        goto label48;

     label23:
        $b43 = r1[i69];

        $b42 = $b43 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setNewMessage(int)>($b42);

        goto label48;

     label24:
        if s2 == 1 goto label25;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTIFICATION_STATUS: Wrong length received: ");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r82);

        goto label48;

     label25:
        $b40 = r1[i69];

        $b39 = $b40 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setNotificationStatus(int)>($b39);

        goto label48;

     label26:
        if s2 == 1 goto label27;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAS_INSTANCE_ID: Wrong length received: ");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r67);

        goto label48;

     label27:
        $b37 = r1[i69];

        $s36 = $b37 & 255;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setMasInstanceId(int)>($s36);

        goto label48;

     label28:
        if s2 == 4 goto label29;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARAMETER_MASK: Wrong length received: ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r66 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r64);

        goto label48;

     label29:
        $i35 = virtualinvoke r2.<java.nio.ByteBuffer: int getInt(int)>(i69);

        $l32 = (long) $i35;

        $l33 = $l32 & 4294967295L;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setParameterMask(long)>($l33);

        goto label48;

     label30:
        if s2 == 2 goto label31;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOLDER_LISTING_SIZE: Wrong length received: ");

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r54 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r55);

        goto label48;

     label31:
        $s29 = virtualinvoke r2.<java.nio.ByteBuffer: short getShort(int)>(i69);

        $i31 = $s29 & 65535;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFolderListingSize(int)>($i31);

        goto label48;

     label32:
        if s2 == 2 goto label33;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MESSAGE_LISTING_SIZE: Wrong length received: ");

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r49);

        goto label48;

     label33:
        $s26 = virtualinvoke r2.<java.nio.ByteBuffer: short getShort(int)>(i69);

        $i28 = $s26 & 65535;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setMessageListingSize(int)>($i28);

        goto label48;

     label34:
        if s2 == 1 goto label35;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUBJECT_LENGTH: Wrong length received: ");

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r47);

        goto label48;

     label35:
        $b25 = r1[i69];

        $s23 = $b25 & 255;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setSubjectLength(int)>($s23);

        goto label48;

     label36:
        if s2 == 1 goto label37;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHARSET: Wrong length received: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r43);

        goto label48;

     label37:
        $b21 = r1[i69];

        $b22 = $b21 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setCharset(int)>($b22);

        goto label48;

     label38:
        if s2 == 1 goto label39;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FRACTION_REQUEST: Wrong length received: ");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r32);

        goto label48;

     label39:
        $b17 = r1[i69];

        $b19 = $b17 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFractionRequest(int)>($b19);

        goto label48;

     label40:
        if s2 == 1 goto label41;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FRACTION_DELIVER: Wrong length received: ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r28);

        goto label48;

     label41:
        $b16 = r1[i69];

        $b14 = $b16 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setFractionDeliver(int)>($b14);

        goto label48;

     label42:
        if s2 == 1 goto label43;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STATUS_INDICATOR: Wrong length received: ");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r21);

        goto label48;

     label43:
        $b12 = r1[i69];

        $b13 = $b12 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setStatusIndicator(int)>($b13);

        goto label48;

     label44:
        if s2 == 1 goto label45;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STATUS_VALUER: Wrong length received: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r17);

        goto label48;

     label45:
        $b9 = r1[i69];

        $b10 = $b9 & 1;

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setStatusValue(int)>($b10);

        goto label48;

     label46:
        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[],int,int)>(r1, i69, s2);

        virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: void setMseTime(java.lang.String)>($r11);

        goto label48;

     label47:
        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown TagId received ( 0x");

        $r125 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(s1, 16);

        $r135 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125);

        $r134 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), skipping...");

        $r133 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothMapAppParams", $r133);

     label48:
        i0 = i69 + s2;

        goto label01;

     label49:
        return;
    }

    private int getParamMaxLength() throws java.io.UnsupportedEncodingException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        byte b0, $b2, $b4, $b6, $b7, $b9, $b11;
        long $l1, $l3, $l5;
        java.lang.String $r1, $r2, $r3, $r5;
        byte[] $r4, $r6;
        int $i8, $i10, i12, i13, i14, i15, i16;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        b0 = 0;

        i12 = b0 + 50;

        i13 = i12 + 27;

        $l1 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getFilterPeriodBegin()>();

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        $b11 = 0;

        goto label2;

     label1:
        $b11 = 15;

     label2:
        i14 = i13 + $b11;

        $l3 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getFilterPeriodEnd()>();

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label3;

        $b9 = 0;

        goto label4;

     label3:
        $b9 = 15;

     label4:
        i15 = i14 + $b9;

        $r1 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterRecipient()>();

        if $r1 == null goto label5;

        $r5 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterRecipient()>();

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i10 = lengthof $r6;

        i15 = i15 + $i10;

     label5:
        $r2 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterOriginator()>();

        if $r2 == null goto label6;

        $r3 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterOriginator()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i8 = lengthof $r4;

        i15 = i15 + $i8;

     label6:
        $l5 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getMseTime()>();

        $b6 = $l5 cmp -1L;

        if $b6 != 0 goto label7;

        $b7 = 0;

        goto label8;

     label7:
        $b7 = 20;

     label8:
        i16 = i15 + $b7;

        return i16;
    }

    public byte[] EncodeParams() throws java.io.UnsupportedEncodingException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.nio.ByteBuffer r1;
        byte[] r2, $r7, $r11, $r14, $r65, $r68, $r71, $r76, $r80, $r85, $r92, $r94;
        int $i0, $i1, $i2, $i3, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i37, $i38, $i39, $i42, $i44, $i47, $i49, $i51, $i52, $i53, $i55, $i59, $i61, $i63, $i64, $i66, $i68, $i70, $i73, $i75, $i77, $i78, $i80;
        java.nio.ByteOrder $r3;
        long $l4, $l6, $l17, $l24, $l48;
        byte $b5, $b7, $b16, $b25, $b32, $b34, $b36, $b40, $b41, $b43, $b45, $b54, $b56, $b58, $b60, $b62, $b65, $b67, $b69, $b71, $b72, $b74, $b76;
        java.lang.String $r5, $r6, $r9, $r15, $r62, $r66, $r72, $r75, $r79, $r86, $r93, $r95;
        short $s46, $s50, $s57, $s79, $s81;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getParamMaxLength()>();

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        $i1 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getMaxListCount()>();

        if $i1 == -1 goto label01;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        $i78 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getMaxListCount()>();

        $s79 = (short) $i78;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s79);

     label01:
        $i2 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getStartOffset()>();

        if $i2 == -1 goto label02;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        $i80 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getStartOffset()>();

        $s81 = (short) $i80;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s81);

     label02:
        $i3 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFilterMessageType()>();

        if $i3 == -1 goto label03;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i75 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFilterMessageType()>();

        $b74 = (byte) $i75;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b74);

     label03:
        $l4 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getFilterPeriodBegin()>();

        $b5 = $l4 cmp -1L;

        if $b5 == 0 goto label04;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(4);

        $r95 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterPeriodBeginString()>();

        $r94 = virtualinvoke $r95.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i77 = lengthof $r94;

        $b76 = (byte) $i77;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b76);

        $r86 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterPeriodBeginString()>();

        $r85 = virtualinvoke $r86.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r85);

     label04:
        $l6 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getFilterPeriodEnd()>();

        $b7 = $l6 cmp -1L;

        if $b7 == 0 goto label05;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(5);

        $r75 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterPeriodEndString()>();

        $r76 = virtualinvoke $r75.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i70 = lengthof $r76;

        $b71 = (byte) $i70;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b71);

        $r93 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterPeriodEndString()>();

        $r92 = virtualinvoke $r93.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r92);

     label05:
        $i8 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFilterReadStatus()>();

        if $i8 == -1 goto label06;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(6);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i73 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFilterReadStatus()>();

        $b69 = (byte) $i73;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b69);

     label06:
        $r5 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterRecipient()>();

        if $r5 == null goto label07;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(7);

        $r66 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterRecipient()>();

        $r68 = virtualinvoke $r66.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i64 = lengthof $r68;

        $b72 = (byte) $i64;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b72);

        $r79 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterRecipient()>();

        $r80 = virtualinvoke $r79.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r80);

     label07:
        $r6 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterOriginator()>();

        if $r6 == null goto label08;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(8);

        $r72 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterOriginator()>();

        $r71 = virtualinvoke $r72.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i68 = lengthof $r71;

        $b67 = (byte) $i68;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b67);

        $r62 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getFilterOriginator()>();

        $r65 = virtualinvoke $r62.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r65);

     label08:
        $i9 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFilterPriority()>();

        if $i9 == -1 goto label09;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(9);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i66 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFilterPriority()>();

        $b65 = (byte) $i66;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b65);

     label09:
        $i11 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getAttachment()>();

        if $i11 == -1 goto label10;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(10);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i63 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getAttachment()>();

        $b62 = (byte) $i63;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b62);

     label10:
        $i10 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getTransparent()>();

        if $i10 == -1 goto label11;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(11);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i59 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getTransparent()>();

        $b58 = (byte) $i59;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b58);

     label11:
        $i13 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getRetry()>();

        if $i13 == -1 goto label12;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(12);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i61 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getRetry()>();

        $b60 = (byte) $i61;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b60);

     label12:
        $i12 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getNewMessage()>();

        if $i12 == -1 goto label13;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(13);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i55 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getNewMessage()>();

        $b56 = (byte) $i55;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b56);

     label13:
        $i15 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getNotificationStatus()>();

        if $i15 == -1 goto label14;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(14);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i52 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getNotificationStatus()>();

        $s57 = (short) $i52;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s57);

     label14:
        $i14 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getMasInstanceId()>();

        if $i14 == -1 goto label15;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(15);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i53 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getMasInstanceId()>();

        $b54 = (byte) $i53;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b54);

     label15:
        $l17 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getParameterMask()>();

        $b16 = $l17 cmp -1L;

        if $b16 == 0 goto label16;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(16);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(4);

        $l48 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getParameterMask()>();

        $i49 = (int) $l48;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i49);

     label16:
        $i19 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFolderListingSize()>();

        if $i19 == -1 goto label17;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(17);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        $i51 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFolderListingSize()>();

        $s50 = (short) $i51;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s50);

     label17:
        $i18 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getMessageListingSize()>();

        if $i18 == -1 goto label18;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(18);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        $i47 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getMessageListingSize()>();

        $s46 = (short) $i47;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s46);

     label18:
        $i21 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getSubjectLength()>();

        if $i21 == -1 goto label19;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(19);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i42 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getSubjectLength()>();

        $b43 = (byte) $i42;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b43);

     label19:
        $i20 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getCharset()>();

        if $i20 == -1 goto label20;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(20);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i44 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getCharset()>();

        $b45 = (byte) $i44;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b45);

     label20:
        $i23 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFractionRequest()>();

        if $i23 == -1 goto label21;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(21);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i39 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFractionRequest()>();

        $b40 = (byte) $i39;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b40);

     label21:
        $i22 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFractionDeliver()>();

        if $i22 == -1 goto label22;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(22);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i38 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getFractionDeliver()>();

        $b41 = (byte) $i38;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b41);

     label22:
        $i26 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getStatusIndicator()>();

        if $i26 == -1 goto label23;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(23);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i37 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getStatusIndicator()>();

        $b36 = (byte) $i37;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b36);

     label23:
        $i27 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getStatusValue()>();

        if $i27 == -1 goto label24;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(24);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $i35 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: int getStatusValue()>();

        $b34 = (byte) $i35;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b34);

     label24:
        $l24 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getMseTime()>();

        $b25 = $l24 cmp -1L;

        if $b25 == 0 goto label25;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(25);

        $r9 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getMseTimeString()>();

        $r11 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i33 = lengthof $r11;

        $b32 = (byte) $i33;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b32);

        $r15 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String getMseTimeString()>();

        $r14 = virtualinvoke $r15.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r14);

     label25:
        $r7 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        $i30 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i28 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i29 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $i31 = $i28 + $i29;

        r2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r7, $i30, $i31);

        return r2;
    }

    public int getMaxListCount()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMaxListCount>;

        return $i0;
    }

    public void setMaxListCount(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0xFFFF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMaxListCount> = i0;

        return;
    }

    public int getStartOffset()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStartOffset>;

        return $i0;
    }

    public void setStartOffset(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0xFFFF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStartOffset> = i0;

        return;
    }

    public int getFilterMessageType()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterMessageType>;

        return $i0;
    }

    public void setFilterMessageType(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 15 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x000F");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterMessageType> = i0;

        return;
    }

    public long getFilterPeriodBegin()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodBegin>;

        return $l0;
    }

    public java.lang.String getFilterPeriodBeginString()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.text.SimpleDateFormat r1, $r3;
        java.util.Date r2, $r4;
        long $l0;
        java.lang.String $r5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmss");

        r1 = $r3;

        $r4 = new java.util.Date;

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodBegin>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        r2 = $r4;

        $r5 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        return $r5;
    }

    public void setFilterPeriodBegin(long)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        l0 := @parameter0: long;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodBegin> = l0;

        return;
    }

    public void setFilterPeriodBegin(java.lang.String) throws java.text.ParseException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String r1;
        java.text.SimpleDateFormat r2, $r4;
        java.util.Date r3;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmss");

        r2 = $r4;

        r3 = virtualinvoke r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1);

        $l0 = virtualinvoke r3.<java.util.Date: long getTime()>();

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodBegin> = $l0;

        return;
    }

    public long getFilterPeriodEnd()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodEnd>;

        return $l0;
    }

    public java.lang.String getFilterPeriodEndString()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.text.SimpleDateFormat r1, $r3;
        java.util.Date r2, $r4;
        long $l0;
        java.lang.String $r5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmss");

        r1 = $r3;

        $r4 = new java.util.Date;

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodEnd>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        r2 = $r4;

        $r5 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        return $r5;
    }

    public void setFilterPeriodEnd(long)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        l0 := @parameter0: long;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodEnd> = l0;

        return;
    }

    public void setFilterPeriodEnd(java.lang.String) throws java.text.ParseException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String r1;
        java.text.SimpleDateFormat r2, $r4;
        java.util.Date r3;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmss");

        r2 = $r4;

        r3 = virtualinvoke r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1);

        $l0 = virtualinvoke r3.<java.util.Date: long getTime()>();

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mFilterPeriodEnd> = $l0;

        return;
    }

    public int getFilterReadStatus()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterReadStatus>;

        return $i0;
    }

    public void setFilterReadStatus(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0002");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterReadStatus> = i0;

        return;
    }

    public java.lang.String getFilterRecipient()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterRecipient>;

        return $r1;
    }

    public void setFilterRecipient(java.lang.String)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterRecipient> = r1;

        return;
    }

    public java.lang.String getFilterOriginator()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterOriginator>;

        return $r1;
    }

    public void setFilterOriginator(java.lang.String)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String mFilterOriginator> = r1;

        return;
    }

    public int getFilterPriority()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterPriority>;

        return $i0;
    }

    public void setFilterPriority(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0002");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFilterPriority> = i0;

        return;
    }

    public int getAttachment()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mAttachment>;

        return $i0;
    }

    public void setAttachment(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mAttachment> = i0;

        return;
    }

    public int getTransparent()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mTransparent>;

        return $i0;
    }

    public void setTransparent(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mTransparent> = i0;

        return;
    }

    public int getRetry()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mRetry>;

        return $i0;
    }

    public void setRetry(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mRetry> = i0;

        return;
    }

    public int getNewMessage()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNewMessage>;

        return $i0;
    }

    public void setNewMessage(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNewMessage> = i0;

        return;
    }

    public int getNotificationStatus()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNotificationStatus>;

        return $i0;
    }

    public void setNotificationStatus(int) throws java.lang.IllegalArgumentException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mNotificationStatus> = i0;

        return;
    }

    public int getMasInstanceId()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMasInstanceId>;

        return $i0;
    }

    public void setMasInstanceId(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 255 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x00FF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMasInstanceId> = i0;

        return;
    }

    public long getParameterMask()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mParameterMask>;

        return $l0;
    }

    public void setParameterMask(long)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long l0;
        byte $b1, $b2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $b2 = l0 cmp 4294967295L;

        if $b2 <= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0xFFFFFFFF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mParameterMask> = l0;

        return;
    }

    public int getFolderListingSize()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFolderListingSize>;

        return $i0;
    }

    public void setFolderListingSize(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0xFFFF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFolderListingSize> = i0;

        return;
    }

    public int getMessageListingSize()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMessageListingSize>;

        return $i0;
    }

    public void setMessageListingSize(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0xFFFF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mMessageListingSize> = i0;

        return;
    }

    public int getSubjectLength()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mSubjectLength>;

        return $i0;
    }

    public void setSubjectLength(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 255 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x00FF");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mSubjectLength> = i0;

        return;
    }

    public int getCharset()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mCharset>;

        return $i0;
    }

    public void setCharset(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of range: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", valid range is 0x0000 to 0x0001");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mCharset> = i0;

        return;
    }

    public int getFractionRequest()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionRequest>;

        return $i0;
    }

    public void setFractionRequest(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionRequest> = i0;

        return;
    }

    public int getFractionDeliver()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionDeliver>;

        return $i0;
    }

    public void setFractionDeliver(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mFractionDeliver> = i0;

        return;
    }

    public int getStatusIndicator()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusIndicator>;

        return $i0;
    }

    public void setStatusIndicator(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusIndicator> = i0;

        return;
    }

    public int getStatusValue()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusValue>;

        return $i0;
    }

    public void setStatusValue(int)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Out of range, valid range is 0x0000 to 0x0001");

        throw $r1;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapAppParams: int mStatusValue> = i0;

        return;
    }

    public long getMseTime()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mMseTime>;

        return $l0;
    }

    public java.lang.String getMseTimeString()
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.text.SimpleDateFormat r1, $r3;
        java.util.Date r2, $r4;
        long $l0;
        java.lang.String $r5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmssZ");

        r1 = $r3;

        $r4 = new java.util.Date;

        $l0 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapAppParams: long getMseTime()>();

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        r2 = $r4;

        $r5 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        return $r5;
    }

    public void setMseTime(long)
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        long l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        l0 := @parameter0: long;

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mMseTime> = l0;

        return;
    }

    public void setMseTime(java.lang.String) throws java.text.ParseException
    {
        com.android.bluetooth.map.BluetoothMapAppParams r0;
        java.lang.String r1;
        java.text.SimpleDateFormat r2, $r4;
        java.util.Date r3;
        long $l0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapAppParams;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmssZ");

        r2 = $r4;

        r3 = virtualinvoke r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1);

        $l0 = virtualinvoke r3.<java.util.Date: long getTime()>();

        r0.<com.android.bluetooth.map.BluetoothMapAppParams: long mMseTime> = $l0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.map.BluetoothMapAppParams: long PARAMETER_MASK_ALL_ENABLED> = 65535L;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_NO_MMS> = 8;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_NO_EMAIL> = 4;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_NO_SMS_CDMA> = 2;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_NO_SMS_GSM> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_DELIVER_LAST> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_DELIVER_MORE> = 0;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_REQUEST_NEXT> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_REQUEST_FIRST> = 0;

        <com.android.bluetooth.map.BluetoothMapAppParams: int CHARSET_UTF8> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int CHARSET_NATIVE> = 0;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_VALUE_NO> = 0;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_VALUE_YES> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_INDICATOR_DELETED> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_INDICATOR_READ> = 0;

        <com.android.bluetooth.map.BluetoothMapAppParams: int NOTIFICATION_STATUS_YES> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int NOTIFICATION_STATUS_NO> = 0;

        <com.android.bluetooth.map.BluetoothMapAppParams: int INVALID_VALUE_PARAMETER> = -1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MSE_TIME> = 25;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_VALUE_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_VALUE> = 24;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_INDICATOR_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int STATUS_INDICATOR> = 23;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_DELIVER_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_DELIVER> = 22;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_REQUEST_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FRACTION_REQUEST> = 21;

        <com.android.bluetooth.map.BluetoothMapAppParams: int CHARSET_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int CHARSET> = 20;

        <com.android.bluetooth.map.BluetoothMapAppParams: int SUBJECT_LENGTH_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int SUBJECT_LENGTH> = 19;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MESSAGE_LISTING_SIZE_LEN> = 2;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MESSAGE_LISTING_SIZE> = 18;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FOLDER_LISTING_SIZE_LEN> = 2;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FOLDER_LISTING_SIZE> = 17;

        <com.android.bluetooth.map.BluetoothMapAppParams: int PARAMETER_MASK_LEN> = 4;

        <com.android.bluetooth.map.BluetoothMapAppParams: int PARAMETER_MASK> = 16;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MAS_INSTANCE_ID_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MAS_INSTANCE_ID> = 15;

        <com.android.bluetooth.map.BluetoothMapAppParams: int NOTIFICATION_STATUS_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int NOTIFICATION_STATUS> = 14;

        <com.android.bluetooth.map.BluetoothMapAppParams: int NEW_MESSAGE_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int NEW_MESSAGE> = 13;

        <com.android.bluetooth.map.BluetoothMapAppParams: int RETRY_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int RETRY> = 12;

        <com.android.bluetooth.map.BluetoothMapAppParams: int TRANSPARENT_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int TRANSPARENT> = 11;

        <com.android.bluetooth.map.BluetoothMapAppParams: int ATTACHMENT_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int ATTACHMENT> = 10;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_PRIORITY_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_PRIORITY> = 9;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_ORIGINATOR> = 8;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_RECIPIENT> = 7;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_READ_STATUS_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_READ_STATUS> = 6;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_PERIOD_END> = 5;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_PERIOD_BEGIN> = 4;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_MESSAGE_TYPE_LEN> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: int FILTER_MESSAGE_TYPE> = 3;

        <com.android.bluetooth.map.BluetoothMapAppParams: int START_OFFSET_LEN> = 2;

        <com.android.bluetooth.map.BluetoothMapAppParams: int START_OFFSET> = 2;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MAX_LIST_COUNT_LEN> = 2;

        <com.android.bluetooth.map.BluetoothMapAppParams: int MAX_LIST_COUNT> = 1;

        <com.android.bluetooth.map.BluetoothMapAppParams: java.lang.String TAG> = "BluetoothMapAppParams";

        return;
    }
}
