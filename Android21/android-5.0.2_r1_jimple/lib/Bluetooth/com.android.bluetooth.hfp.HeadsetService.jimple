public class com.android.bluetooth.hfp.HeadsetService extends com.android.bluetooth.btservice.ProfileService
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static final java.lang.String MODIFY_PHONE_STATE;
    private com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine;
    private static com.android.bluetooth.hfp.HeadsetService sHeadsetService;
    private final android.content.BroadcastReceiver mHeadsetReceiver;

    public void <init>()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetService$1 $r1;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        specialinvoke r0.<com.android.bluetooth.btservice.ProfileService: void <init>()>();

        $r1 = new com.android.bluetooth.hfp.HeadsetService$1;

        specialinvoke $r1.<com.android.bluetooth.hfp.HeadsetService$1: void <init>(com.android.bluetooth.hfp.HeadsetService)>(r0);

        r0.<com.android.bluetooth.hfp.HeadsetService: android.content.BroadcastReceiver mHeadsetReceiver> = $r1;

        return;
    }

    protected java.lang.String getName()
    {
        com.android.bluetooth.hfp.HeadsetService r0;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        return "HeadsetService";
    }

    public com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder initBinder()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder $r1;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        $r1 = new com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder;

        specialinvoke $r1.<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder: void <init>(com.android.bluetooth.hfp.HeadsetService)>(r0);

        return $r1;
    }

    protected boolean start()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.content.IntentFilter r1, $r4;
        java.lang.Exception r2, $r7;
        com.android.bluetooth.hfp.HeadsetStateMachine $r3;
        android.content.BroadcastReceiver $r5;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        $r3 = staticinvoke <com.android.bluetooth.hfp.HeadsetStateMachine: com.android.bluetooth.hfp.HeadsetStateMachine make(com.android.bluetooth.hfp.HeadsetService)>(r0);

        r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine> = $r3;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        r1 = $r4;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.media.VOLUME_CHANGED_ACTION");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.bluetooth.device.action.CONNECTION_ACCESS_REPLY");

     label1:
        $r5 = r0.<com.android.bluetooth.hfp.HeadsetService: android.content.BroadcastReceiver mHeadsetReceiver>;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r5, r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("HeadsetService", "Unable to register headset receiver", r2);

     label4:
        staticinvoke <com.android.bluetooth.hfp.HeadsetService: void setHeadsetService(com.android.bluetooth.hfp.HeadsetService)>(r0);

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected boolean stop()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        java.lang.Exception r1, $r4;
        android.content.BroadcastReceiver $r2;
        com.android.bluetooth.hfp.HeadsetStateMachine $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

     label1:
        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: android.content.BroadcastReceiver mHeadsetReceiver>;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("HeadsetService", "Unable to unregister headset receiver", r1);

     label4:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void doQuit()>();

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected boolean cleanup()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r1, $r2;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        $r1 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: void cleanup()>();

     label1:
        staticinvoke <com.android.bluetooth.hfp.HeadsetService: void clearHeadsetService()>();

        return 1;
    }

    public static synchronized com.android.bluetooth.hfp.HeadsetService getHeadsetService()
    {
        com.android.bluetooth.hfp.HeadsetService $r0, $r1, $r2;
        boolean $z0;

        $r0 = <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService sHeadsetService>;

        if $r0 == null goto label1;

        $r1 = <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService sHeadsetService>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.hfp.HeadsetService: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $r2 = <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService sHeadsetService>;

        return $r2;

     label1:
        return null;
    }

    private static synchronized void setHeadsetService(com.android.bluetooth.hfp.HeadsetService)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService sHeadsetService> = r0;

     label1:
        return;
    }

    private static synchronized void clearHeadsetService()
    {
        <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService sHeadsetService> = null;

        return;
    }

    public boolean connect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, $i1;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $i1 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connectionState = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HeadsetService", $r6);

        if i0 == 2 goto label2;

        if i0 != 1 goto label3;

     label2:
        return 0;

     label3:
        $r7 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r7.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(1, r1);

        return 1;
    }

    boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2, $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(2, r1);

        return 1;
    }

    public java.util.List getConnectedDevices()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r1;
        java.util.List $r2;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $r2 = virtualinvoke $r1.<com.android.bluetooth.hfp.HeadsetStateMachine: java.util.List getConnectedDevices()>();

        return $r2;
    }

    private java.util.List getDevicesMatchingConnectionStates(int[])
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        int[] r1;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2;
        java.util.List $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $r3 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: java.util.List getDevicesMatchingConnectionStates(int[])>(r1);

        return $r3;
    }

    int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2;
        int $i0;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public boolean setPriority(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH_ADMIN permission");

        $r2 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)>($r3);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r2, $r4, i0);

        return 1;
    }

    public int getPriority(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH_ADMIN permission");

        $r2 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)>($r3);

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, $r4, -1);

        return i0;
    }

    boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2, $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int)>(5);

        return 1;
    }

    boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2, $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int)>(6);

        return 1;
    }

    boolean isAudioOn()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isAudioOn()>();

        return $z0;
    }

    boolean isAudioConnected(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>(r1);

        return $z0;
    }

    int getBatteryUsageHint(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        return 0;
    }

    boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        return 0;
    }

    boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        return 0;
    }

    int getAudioState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2;
        int $i0;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getAudioState(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    boolean connectAudio()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z1 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isAudioOn()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int)>(3);

        return 1;
    }

    boolean disconnectAudio()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isAudioOn()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int)>(4);

        return 1;
    }

    boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2, $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(14, r1);

        return 1;
    }

    boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r2, $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r2 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r2.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(15, r1);

        return 1;
    }

    private void phoneStateChanged(int, int, int, java.lang.String, int)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        android.os.Message r2;
        com.android.bluetooth.hfp.HeadsetStateMachine $r3, $r5;
        com.android.bluetooth.hfp.HeadsetCallState $r4;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MODIFY_PHONE_STATE", null);

        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: android.os.Message obtainMessage(int)>(9);

        $r4 = new com.android.bluetooth.hfp.HeadsetCallState;

        specialinvoke $r4.<com.android.bluetooth.hfp.HeadsetCallState: void <init>(int,int,int,java.lang.String,int)>(i0, i1, i2, r1, i3);

        r2.<android.os.Message: java.lang.Object obj> = $r4;

        r2.<android.os.Message: int arg1> = 0;

        $r5 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r5.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(android.os.Message)>(r2);

        return;
    }

    private void clccResponse(int, int, int, int, boolean, java.lang.String, int)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        int i0, i1, i2, i3, i4;
        boolean z0;
        java.lang.String r1;
        com.android.bluetooth.hfp.HeadsetClccResponse $r2;
        com.android.bluetooth.hfp.HeadsetStateMachine $r3;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        r1 := @parameter5: java.lang.String;

        i4 := @parameter6: int;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MODIFY_PHONE_STATE", null);

        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $r2 = new com.android.bluetooth.hfp.HeadsetClccResponse;

        specialinvoke $r2.<com.android.bluetooth.hfp.HeadsetClccResponse: void <init>(int,int,int,int,boolean,java.lang.String,int)>(i0, i1, i2, i3, z0, r1, i4);

        virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(12, $r2);

        return;
    }

    private boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice, java.lang.String, java.lang.String)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String r2, r3, $r10;
        int i0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r4, $r6;
        boolean $z0;
        com.android.bluetooth.hfp.HeadsetVendorSpecificResultCode $r5;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r4 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        i0 = virtualinvoke $r4.<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        if i0 == 2 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("+ANDROID");

        if $z0 != 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed unsolicited result code command: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HeadsetService", $r10);

        return 0;

     label2:
        $r6 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $r5 = new com.android.bluetooth.hfp.HeadsetVendorSpecificResultCode;

        specialinvoke $r5.<com.android.bluetooth.hfp.HeadsetVendorSpecificResultCode: void <init>(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke $r6.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(13, $r5);

        return 1;
    }

    boolean enableWBS()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        java.util.Iterator r1;
        android.bluetooth.BluetoothDevice r2;
        com.android.bluetooth.hfp.HeadsetStateMachine $r3, $r4, $r7;
        boolean $z0, $z1, $z2;
        java.util.List $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z0 = virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z1 = virtualinvoke $r4.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isAudioOn()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r5 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: java.util.List getConnectedDevices()>();

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.bluetooth.BluetoothDevice) $r6;

        $r7 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r7.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(16, r2);

        goto label3;

     label4:
        return 1;
    }

    boolean disableWBS()
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        java.util.Iterator r1;
        android.bluetooth.BluetoothDevice r2;
        com.android.bluetooth.hfp.HeadsetStateMachine $r3, $r4, $r7;
        boolean $z0, $z1, $z2;
        java.util.List $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.bluetooth.hfp.HeadsetService;

        virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z0 = virtualinvoke $r3.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        $z1 = virtualinvoke $r4.<com.android.bluetooth.hfp.HeadsetStateMachine: boolean isAudioOn()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r5 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: java.util.List getConnectedDevices()>();

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.bluetooth.BluetoothDevice) $r6;

        $r7 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        virtualinvoke $r7.<com.android.bluetooth.hfp.HeadsetStateMachine: void sendMessage(int,java.lang.Object)>(17, r2);

        goto label3;

     label4:
        return 1;
    }

    static com.android.bluetooth.hfp.HeadsetStateMachine access$000(com.android.bluetooth.hfp.HeadsetService)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        com.android.bluetooth.hfp.HeadsetStateMachine $r1;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        $r1 = r0.<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetStateMachine mStateMachine>;

        return $r1;
    }

    static boolean access$100(com.android.bluetooth.hfp.HeadsetService)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        $z0 = virtualinvoke r0.<com.android.bluetooth.hfp.HeadsetService: boolean isAvailable()>();

        return $z0;
    }

    static java.util.List access$200(com.android.bluetooth.hfp.HeadsetService, int[])
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        int[] r1;
        java.util.List $r2;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter1: int[];

        $r2 = specialinvoke r0.<com.android.bluetooth.hfp.HeadsetService: java.util.List getDevicesMatchingConnectionStates(int[])>(r1);

        return $r2;
    }

    static void access$300(com.android.bluetooth.hfp.HeadsetService, int, int, int, java.lang.String, int)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        int i0, i1, i2, i3;
        java.lang.String r1;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        specialinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void phoneStateChanged(int,int,int,java.lang.String,int)>(i0, i1, i2, r1, i3);

        return;
    }

    static void access$400(com.android.bluetooth.hfp.HeadsetService, int, int, int, int, boolean, java.lang.String, int)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        int i0, i1, i2, i3, i4;
        boolean z0;
        java.lang.String r1;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        r1 := @parameter6: java.lang.String;

        i4 := @parameter7: int;

        specialinvoke r0.<com.android.bluetooth.hfp.HeadsetService: void clccResponse(int,int,int,int,boolean,java.lang.String,int)>(i0, i1, i2, i3, z0, r1, i4);

        return;
    }

    static boolean access$500(com.android.bluetooth.hfp.HeadsetService, android.bluetooth.BluetoothDevice, java.lang.String, java.lang.String)
    {
        com.android.bluetooth.hfp.HeadsetService r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.bluetooth.hfp.HeadsetService: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.hfp.HeadsetService: java.lang.String MODIFY_PHONE_STATE> = "android.permission.MODIFY_PHONE_STATE";

        <com.android.bluetooth.hfp.HeadsetService: java.lang.String TAG> = "HeadsetService";

        <com.android.bluetooth.hfp.HeadsetService: boolean DBG> = 0;

        return;
    }
}
