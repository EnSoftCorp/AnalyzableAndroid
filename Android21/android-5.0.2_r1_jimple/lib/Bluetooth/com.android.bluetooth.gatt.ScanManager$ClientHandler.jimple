class com.android.bluetooth.gatt.ScanManager$ClientHandler extends android.os.Handler
{
    final com.android.bluetooth.gatt.ScanManager this$0;

    void <init>(com.android.bluetooth.gatt.ScanManager, android.os.Looper)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        com.android.bluetooth.gatt.ScanManager r1;
        android.os.Looper r2;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        android.os.Message r1;
        com.android.bluetooth.gatt.ScanClient r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: android.os.Message;

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.bluetooth.gatt.ScanClient) $r3;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: void handleStartScan(com.android.bluetooth.gatt.ScanClient)>(r2);

        goto label5;

     label2:
        virtualinvoke r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: void handleStopScan(com.android.bluetooth.gatt.ScanClient)>(r2);

        goto label5;

     label3:
        virtualinvoke r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: void handleFlushBatchResults(com.android.bluetooth.gatt.ScanClient)>(r2);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("received an unkown message : ");

        $i1 = r1.<android.os.Message: int what>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtGatt.ScanManager", $r7);

     label5:
        return;
    }

    void handleStartScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        com.android.bluetooth.gatt.ScanClient r1;
        com.android.bluetooth.gatt.ScanManager $r2, $r4, $r5, $r7, $r9, $r11, $r12, $r14, $r18;
        com.android.bluetooth.gatt.GattService $r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r6, $r8, $r10, $r16;
        com.android.bluetooth.gatt.ScanManager$ScanNative $r13, $r15, $r17;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r3 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>($r2);

        staticinvoke <com.android.bluetooth.Utils: void enforceAdminPermission(android.content.ContextWrapper)>($r3);

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r4, "handling starting scan");

        $z0 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: boolean isScanSupported(com.android.bluetooth.gatt.ScanClient)>(r1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtGatt.ScanManager", "Scan settings not supported");

        return;

     label1:
        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r6 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r7 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r8 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r7);

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtGatt.ScanManager", "Scan already started");

        return;

     label3:
        $z3 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: boolean isBatchClient(com.android.bluetooth.gatt.ScanClient)>(r1);

        if $z3 == 0 goto label4;

        $r14 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r16 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r14);

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r18 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r17 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r18);

        virtualinvoke $r17.<com.android.bluetooth.gatt.ScanManager$ScanNative: void startBatchScan(com.android.bluetooth.gatt.ScanClient)>(r1);

        goto label5;

     label4:
        $r9 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r10 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r9);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r11 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r13 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r11);

        virtualinvoke $r13.<com.android.bluetooth.gatt.ScanManager$ScanNative: void startRegularScan(com.android.bluetooth.gatt.ScanClient)>(r1);

        $r12 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r15 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r12);

        virtualinvoke $r15.<com.android.bluetooth.gatt.ScanManager$ScanNative: void configureRegularScanParams()>();

     label5:
        return;
    }

    void handleStopScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        com.android.bluetooth.gatt.ScanClient r1;
        com.android.bluetooth.gatt.ScanManager $r2, $r4, $r6, $r9, $r14, $r15, $r16;
        com.android.bluetooth.gatt.GattService $r3, $r13;
        java.util.Set $r5;
        boolean $z0, $z1;
        com.android.bluetooth.gatt.ScanManager$ScanNative $r7, $r17, $r18;
        java.lang.StringBuilder $r8, $r10, $r11;
        int $i0, $i1;
        java.lang.String $r12;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r3 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>($r2);

        staticinvoke <com.android.bluetooth.Utils: void enforceAdminPermission(android.content.ContextWrapper)>($r3);

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r5 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r4);

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r15 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r17 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r15);

        virtualinvoke $r17.<com.android.bluetooth.gatt.ScanManager$ScanNative: void stopRegularScan(com.android.bluetooth.gatt.ScanClient)>(r1);

        $r16 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r18 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r16);

        virtualinvoke $r18.<com.android.bluetooth.gatt.ScanManager$ScanNative: void configureRegularScanParams()>();

        goto label3;

     label2:
        $r6 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r7 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r6);

        virtualinvoke $r7.<com.android.bluetooth.gatt.ScanManager$ScanNative: void stopBatchScan(com.android.bluetooth.gatt.ScanClient)>(r1);

     label3:
        $z1 = r1.<com.android.bluetooth.gatt.ScanClient: boolean appDied>;

        if $z1 == 0 goto label4;

        $r9 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app died, unregister client - ");

        $i0 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r9, $r12);

        $r14 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r13 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>($r14);

        $i1 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        virtualinvoke $r13.<com.android.bluetooth.gatt.GattService: void unregisterClient(int)>($i1);

     label4:
        return;
    }

    void handleFlushBatchResults(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        com.android.bluetooth.gatt.ScanClient r1;
        com.android.bluetooth.gatt.ScanManager $r2, $r4, $r6;
        com.android.bluetooth.gatt.GattService $r3;
        java.util.Set $r5;
        boolean $z0;
        com.android.bluetooth.gatt.ScanManager$ScanNative $r7;
        int $i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r3 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>($r2);

        staticinvoke <com.android.bluetooth.Utils: void enforceAdminPermission(android.content.ContextWrapper)>($r3);

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r5 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r4);

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $r7 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)>($r6);

        $i0 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        virtualinvoke $r7.<com.android.bluetooth.gatt.ScanManager$ScanNative: void flushBatchResults(int)>($i0);

        return;
    }

    private boolean isBatchClient(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        com.android.bluetooth.gatt.ScanClient r1;
        android.bluetooth.le.ScanSettings r2, $r3;
        int $i0;
        long $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        if r1 == null goto label1;

        $r3 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        if $r3 != null goto label2;

     label1:
        return 0;

     label2:
        r2 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $i0 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        if $i0 != 1 goto label3;

        $l1 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private boolean isScanSupported(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ClientHandler r0;
        com.android.bluetooth.gatt.ScanClient r1;
        android.bluetooth.le.ScanSettings r2, $r3;
        com.android.bluetooth.gatt.ScanManager $r4;
        boolean $z0, $z1;
        int $i0;
        long $l1;
        byte $b2;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ClientHandler;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        if r1 == null goto label1;

        $r3 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        if $r3 != null goto label2;

     label1:
        return 1;

     label2:
        r2 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ClientHandler: com.android.bluetooth.gatt.ScanManager this$0>;

        $z0 = staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$500(com.android.bluetooth.gatt.ScanManager)>($r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        if $i0 != 1 goto label4;

        $l1 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }
}
