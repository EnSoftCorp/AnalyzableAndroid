public final class com.coremedia.iso.boxes.apple.AppleDataBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private byte[] fourBytes;
    private byte[] data;

    private static com.coremedia.iso.boxes.apple.AppleDataBox getEmpty()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0, $r1;
        byte[] $r2;

        $r1 = new com.coremedia.iso.boxes.apple.AppleDataBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.apple.AppleDataBox: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setVersion(int)>(0);

        $r2 = newarray (byte)[4];

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setFourBytes(byte[])>($r2);

        return r0;
    }

    public static com.coremedia.iso.boxes.apple.AppleDataBox getStringAppleDataBox()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] $r1;

        r0 = staticinvoke <com.coremedia.iso.boxes.apple.AppleDataBox: com.coremedia.iso.boxes.apple.AppleDataBox getEmpty()>();

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setFlags(int)>(1);

        $r1 = newarray (byte)[1];

        $r1[0] = 0;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setData(byte[])>($r1);

        return r0;
    }

    public static com.coremedia.iso.boxes.apple.AppleDataBox getUint8AppleDataBox()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0, $r1;
        byte[] $r2;

        $r1 = new com.coremedia.iso.boxes.apple.AppleDataBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.apple.AppleDataBox: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setFlags(int)>(21);

        $r2 = newarray (byte)[1];

        $r2[0] = 0;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setData(byte[])>($r2);

        return r0;
    }

    public static com.coremedia.iso.boxes.apple.AppleDataBox getUint16AppleDataBox()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0, $r1;
        byte[] $r2;

        $r1 = new com.coremedia.iso.boxes.apple.AppleDataBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.apple.AppleDataBox: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setFlags(int)>(21);

        $r2 = newarray (byte)[2];

        $r2[0] = 0;

        $r2[1] = 0;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setData(byte[])>($r2);

        return r0;
    }

    public static com.coremedia.iso.boxes.apple.AppleDataBox getUint32AppleDataBox()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0, $r1;
        byte[] $r2;

        $r1 = new com.coremedia.iso.boxes.apple.AppleDataBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.apple.AppleDataBox: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setFlags(int)>(21);

        $r2 = newarray (byte)[4];

        $r2[0] = 0;

        $r2[1] = 0;

        $r2[2] = 0;

        $r2[3] = 0;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void setData(byte[])>($r2);

        return r0;
    }

    public void <init>()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] $r1;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("data");

        $r1 = newarray (byte)[4];

        r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] fourBytes> = $r1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] $r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        $r1 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 8;

        $l2 = (long) $i1;

        return $l2;
    }

    public void setData(byte[])
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = newarray (byte)[$i0];

        r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data> = $r2;

        $r3 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    public void setFourBytes(byte[])
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] r1, $r2;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] fourBytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 0, 4);

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        java.nio.ByteBuffer r1;
        byte[] $r2, $r3, $r5, $r6;
        int $i1;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = newarray (byte)[4];

        r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] fourBytes> = $r2;

        $r3 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] fourBytes>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r3);

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $r5 = newarray (byte)[$i1];

        r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data> = $r5;

        $r6 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r6);

        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        java.nio.ByteBuffer r1;
        byte[] $r2, $r4;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.apple.AppleDataBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] fourBytes>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r2, 0, 4);

        $r4 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r4);

        return;
    }

    public byte[] getFourBytes()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] $r1;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        $r1 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] fourBytes>;

        return $r1;
    }

    public byte[] getData()
    {
        com.coremedia.iso.boxes.apple.AppleDataBox r0;
        byte[] $r1;

        r0 := @this: com.coremedia.iso.boxes.apple.AppleDataBox;

        $r1 = r0.<com.coremedia.iso.boxes.apple.AppleDataBox: byte[] data>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.apple.AppleDataBox: java.lang.String TYPE> = "data";

        return;
    }
}
