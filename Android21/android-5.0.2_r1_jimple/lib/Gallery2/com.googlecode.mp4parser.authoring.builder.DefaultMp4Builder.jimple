public class com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder extends java.lang.Object implements com.googlecode.mp4parser.authoring.builder.Mp4Builder
{
    public int STEPSIZE;
    java.util.Set chunkOffsetBoxes;
    private static java.util.logging.Logger LOG;
    java.util.HashMap track2Sample;
    java.util.HashMap track2SampleSizes;
    private com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        java.util.HashSet $r1;
        java.util.HashMap $r2, $r3;
        com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: int STEPSIZE> = 64;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.Set chunkOffsetBoxes> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2Sample> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes> = $r3;

        $r4 = new com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder;

        specialinvoke $r4.<com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = $r4;

        return;
    }

    public void setIntersectionFinder(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = r1;

        return;
    }

    public com.coremedia.iso.IsoFile build(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        java.util.Iterator r2, r6;
        com.googlecode.mp4parser.authoring.Track r3;
        java.util.List r4, $r14;
        long[] r5, r8;
        int i0, i1, $i4, $i5, $i6, $i7;
        com.coremedia.iso.boxes.StaticChunkOffsetBox r7;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.util.logging.Logger $r10;
        java.lang.String $r13;
        com.coremedia.iso.IsoFile $r15, r27;
        boolean $z0, $z4;
        java.util.LinkedList $r16, r28;
        com.coremedia.iso.boxes.MovieBox $r17;
        com.coremedia.iso.boxes.FileTypeBox $r18;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat $r19, r29;
        java.util.Set $r20;
        java.lang.Object $r21, $r23, $r24;
        long $l2, $l3, $l8, l9;
        java.nio.ByteBuffer $r25;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r10 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating movie ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void fine(java.lang.String)>($r13);

        $r14 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r2 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r23 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.googlecode.mp4parser.authoring.Track) $r23;

        r4 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.List putSamples(com.googlecode.mp4parser.authoring.Track,java.util.List)>(r3, r4);

        $i5 = interfaceinvoke r4.<java.util.List: int size()>();

        r5 = newarray (long)[$i5];

        i0 = 0;

     label2:
        $i6 = lengthof r5;

        if i0 >= $i6 goto label3;

        $r24 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r25 = (java.nio.ByteBuffer) $r24;

        $i7 = virtualinvoke $r25.<java.nio.ByteBuffer: int limit()>();

        $l8 = (long) $i7;

        r5[i0] = $l8;

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long[] putSampleSizes(com.googlecode.mp4parser.authoring.Track,long[])>(r3, r5);

        goto label1;

     label4:
        $r15 = new com.coremedia.iso.IsoFile;

        specialinvoke $r15.<com.coremedia.iso.IsoFile: void <init>()>();

        r27 = $r15;

        $r16 = new java.util.LinkedList;

        specialinvoke $r16.<java.util.LinkedList: void <init>()>();

        r28 = $r16;

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>("isom");

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>("iso2");

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>("avc1");

        $r18 = new com.coremedia.iso.boxes.FileTypeBox;

        specialinvoke $r18.<com.coremedia.iso.boxes.FileTypeBox: void <init>(java.lang.String,long,java.util.List)>("isom", 0L, r28);

        virtualinvoke r27.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>($r18);

        $r17 = specialinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.MovieBox createMovieBox(com.googlecode.mp4parser.authoring.Movie)>(r1);

        virtualinvoke r27.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>($r17);

        $r19 = new com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat;

        specialinvoke $r19.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: void <init>(com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder,com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$1)>(r0, r1, null);

        r29 = $r19;

        virtualinvoke r27.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>(r29);

        l9 = virtualinvoke r29.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: long getDataOffset()>();

        $r20 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.Set chunkOffsetBoxes>;

        r6 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label8;

        $r21 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.coremedia.iso.boxes.StaticChunkOffsetBox) $r21;

        r8 = virtualinvoke r7.<com.coremedia.iso.boxes.StaticChunkOffsetBox: long[] getChunkOffsets()>();

        i1 = 0;

     label6:
        $i4 = lengthof r8;

        if i1 >= $i4 goto label7;

        $l2 = r8[i1];

        $l3 = $l2 + l9;

        r8[i1] = $l3;

        i1 = i1 + 1;

        goto label6;

     label7:
        goto label5;

     label8:
        return r27;
    }

    public com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder getFragmentIntersectionFinder()
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No fragment intersection finder in default MP4 builder!");

        throw $r1;
    }

    protected long[] putSampleSizes(com.googlecode.mp4parser.authoring.Track, long[])
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        long[] r2, $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: long[];

        $r3 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (long[]) $r4;

        return $r5;
    }

    protected java.util.List putSamples(com.googlecode.mp4parser.authoring.Track, java.util.List)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        java.util.List r2, $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2Sample>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (java.util.List) $r4;

        return $r5;
    }

    private com.coremedia.iso.boxes.MovieBox createMovieBox(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.boxes.MovieBox r2, $r7;
        com.coremedia.iso.boxes.MovieHeaderBox r3, $r8;
        long l0, l1, l2, $l3, $l4, $l5, $l7, $l8, $l10, $l12, $l13, $l15, $l16, $l18, l19;
        java.util.Iterator r4, r21, r22;
        com.googlecode.mp4parser.authoring.Track r5, r6, r23;
        java.util.Date $r9, $r10;
        java.util.List $r11, $r12, $r13;
        boolean $z0, $z1, $z2;
        byte $b6, $b9, $b11, $b14, $b17;
        java.lang.Object $r14, $r16, $r20;
        com.coremedia.iso.boxes.TrackBox $r15;
        com.googlecode.mp4parser.authoring.TrackMetaData $r17, $r18, $r19;
        com.coremedia.iso.boxes.Box r24;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r7 = new com.coremedia.iso.boxes.MovieBox;

        specialinvoke $r7.<com.coremedia.iso.boxes.MovieBox: void <init>()>();

        r2 = $r7;

        $r8 = new com.coremedia.iso.boxes.MovieHeaderBox;

        specialinvoke $r8.<com.coremedia.iso.boxes.MovieHeaderBox: void <init>()>();

        r3 = $r8;

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        $l3 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r9);

        virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: void setCreationTime(long)>($l3);

        $r10 = new java.util.Date;

        specialinvoke $r10.<java.util.Date: void <init>()>();

        $l4 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r10);

        virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: void setModificationTime(long)>($l4);

        l0 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getTimescale(com.googlecode.mp4parser.authoring.Movie)>(r1);

        l1 = 0L;

        $r11 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r20;

        $l16 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r5);

        $l15 = $l16 * l0;

        $r19 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l18 = virtualinvoke $r19.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l2 = $l15 / $l18;

        $b17 = l2 cmp l1;

        if $b17 <= 0 goto label02;

        l1 = l2;

     label02:
        goto label01;

     label03:
        virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: void setDuration(long)>(l1);

        virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: void setTimescale(long)>(l0);

        l19 = 0L;

        $r12 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r21 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r16 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.googlecode.mp4parser.authoring.Track) $r16;

        $r17 = interfaceinvoke r6.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l13 = virtualinvoke $r17.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b14 = l19 cmp $l13;

        if $b14 >= 0 goto label05;

        $r18 = interfaceinvoke r6.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l12 = virtualinvoke $r18.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        goto label06;

     label05:
        $l12 = l19;

     label06:
        l19 = $l12;

        goto label04;

     label07:
        $l5 = l19 + 1L;

        virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: void setNextTrackId(long)>($l5);

        $l7 = virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: long getCreationTime()>();

        $b6 = $l7 cmp 4294967296L;

        if $b6 >= 0 goto label08;

        $l8 = virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: long getModificationTime()>();

        $b9 = $l8 cmp 4294967296L;

        if $b9 >= 0 goto label08;

        $l10 = virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: long getDuration()>();

        $b11 = $l10 cmp 4294967296L;

        if $b11 < 0 goto label09;

     label08:
        virtualinvoke r3.<com.coremedia.iso.boxes.MovieHeaderBox: void setVersion(int)>(1);

     label09:
        virtualinvoke r2.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>(r3);

        $r13 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r22 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r14 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.googlecode.mp4parser.authoring.Track) $r14;

        $r15 = specialinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.TrackBox createTrackBox(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r23, r1);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r15);

        goto label10;

     label11:
        r24 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.Box createUdta(com.googlecode.mp4parser.authoring.Movie)>(r1);

        if r24 == null goto label12;

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>(r24);

     label12:
        return r2;
    }

    protected com.coremedia.iso.boxes.Box createUdta(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        return null;
    }

    private com.coremedia.iso.boxes.TrackBox createTrackBox(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1, r17, r21;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.coremedia.iso.boxes.TrackBox r3, $r27;
        com.coremedia.iso.boxes.TrackHeaderBox r4, $r30;
        int i0, i2, i4, i6, $i7, $i15, $i22, $i23, $i24, $i25, $i27, $i36, $i41, $i42, $i43, $i48, i49;
        com.coremedia.iso.boxes.MediaBox r5, $r44;
        com.coremedia.iso.boxes.MediaHeaderBox r6, $r45;
        com.coremedia.iso.boxes.HandlerBox r7, $r55;
        com.coremedia.iso.boxes.MediaInformationBox r8, $r49;
        com.coremedia.iso.boxes.DataInformationBox r9, $r51;
        com.coremedia.iso.boxes.DataReferenceBox r10, $r50;
        com.coremedia.iso.boxes.DataEntryUrlBox r11, $r59;
        com.coremedia.iso.boxes.SampleTableBox r12, $r58;
        java.util.List r13, $r57, $r65, $r72, $r102, $r108, $r109, $r111, $r114, r116;
        com.coremedia.iso.boxes.TimeToSampleBox r14, $r110;
        com.coremedia.iso.boxes.SyncSampleBox r15, $r115;
        com.coremedia.iso.boxes.CompositionTimeToSample r16, $r113;
        java.util.Iterator r18, r22;
        long l1, l3, l5, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l18, $l19, $l20, $l21, $l26, $l28, $l29, $l30, $l32, $l33, $l34, $l35, $l37, $l38, $l40, $l44, $l47;
        com.coremedia.iso.boxes.StaticChunkOffsetBox r19, $r69;
        long[] r20, $r40, $r68, $r87, r117;
        int[] r23, $r104, r120;
        java.lang.StringBuilder $r24, $r28, $r29, $r81, $r83, $r84, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r101;
        java.util.logging.Logger $r25, $r73, $r75, $r77, $r80, $r91, $r97;
        java.lang.String $r26, $r52, $r54, $r89, $r95, $r106;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z11, $z12, $z13;
        com.googlecode.mp4parser.authoring.TrackMetaData $r31, $r32, $r34, $r35, $r36, $r38, $r39, $r41, $r42, $r43, $r46, $r53, $r82, $r93, $r99;
        java.util.Date $r33, $r37, $r47;
        double $d0, $d1;
        byte $b17, $b31, $b39, $b45, $b46;
        float $f0;
        com.coremedia.iso.boxes.Box $r48;
        java.util.HashMap $r56, $r70, $r86, r119;
        com.coremedia.iso.boxes.SampleDescriptionBox $r60;
        com.coremedia.iso.boxes.SampleSizeBox $r61, r122;
        com.coremedia.iso.boxes.SampleToChunkBox $r62, r121;
        java.util.LinkedList $r63;
        java.lang.Object $r64, $r71, $r76, $r79, $r85, $r105;
        java.util.logging.Level $r66, $r74, $r78;
        java.util.Set $r67;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry $r107;
        com.coremedia.iso.boxes.SampleDependencyTypeBox $r112, r118;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r25 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Mp4TrackImpl ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.util.logging.Logger: void info(java.lang.String)>($r26);

        $r27 = new com.coremedia.iso.boxes.TrackBox;

        specialinvoke $r27.<com.coremedia.iso.boxes.TrackBox: void <init>()>();

        r3 = $r27;

        $r30 = new com.coremedia.iso.boxes.TrackHeaderBox;

        specialinvoke $r30.<com.coremedia.iso.boxes.TrackHeaderBox: void <init>()>();

        r4 = $r30;

        i0 = 0;

        $z2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: boolean isEnabled()>();

        if $z2 == 0 goto label01;

        i0 = i0 + 1;

     label01:
        $z0 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: boolean isInMovie()>();

        if $z0 == 0 goto label02;

        i0 = i0 + 2;

     label02:
        $z1 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: boolean isInPreview()>();

        if $z1 == 0 goto label03;

        i0 = i0 + 4;

     label03:
        $z3 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: boolean isInPoster()>();

        if $z3 == 0 goto label04;

        i0 = i0 + 8;

     label04:
        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setFlags(int)>(i0);

        $r32 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i7 = virtualinvoke $r32.<com.googlecode.mp4parser.authoring.TrackMetaData: int getGroup()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setAlternateGroup(int)>($i7);

        $r31 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r33 = virtualinvoke $r31.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        $l10 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r33);

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setCreationTime(long)>($l10);

        $l9 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r1);

        $l8 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getTimescale(com.googlecode.mp4parser.authoring.Movie)>(r2);

        $l13 = $l9 * $l8;

        $r34 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l12 = virtualinvoke $r34.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $l11 = $l13 / $l12;

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setDuration(long)>($l11);

        $r36 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d1 = virtualinvoke $r36.<com.googlecode.mp4parser.authoring.TrackMetaData: double getHeight()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setHeight(double)>($d1);

        $r35 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d0 = virtualinvoke $r35.<com.googlecode.mp4parser.authoring.TrackMetaData: double getWidth()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setWidth(double)>($d0);

        $r38 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i15 = virtualinvoke $r38.<com.googlecode.mp4parser.authoring.TrackMetaData: int getLayer()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setLayer(int)>($i15);

        $r37 = new java.util.Date;

        specialinvoke $r37.<java.util.Date: void <init>()>();

        $l14 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r37);

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setModificationTime(long)>($l14);

        $r41 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l18 = virtualinvoke $r41.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setTrackId(long)>($l18);

        $r42 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $f0 = virtualinvoke $r42.<com.googlecode.mp4parser.authoring.TrackMetaData: float getVolume()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setVolume(float)>($f0);

        $r39 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r40 = virtualinvoke $r39.<com.googlecode.mp4parser.authoring.TrackMetaData: long[] getMatrix()>();

        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setMatrix(long[])>($r40);

        $l16 = virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: long getCreationTime()>();

        $b17 = $l16 cmp 4294967296L;

        if $b17 >= 0 goto label05;

        $l44 = virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: long getModificationTime()>();

        $b46 = $l44 cmp 4294967296L;

        if $b46 >= 0 goto label05;

        $l47 = virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: long getDuration()>();

        $b45 = $l47 cmp 4294967296L;

        if $b45 < 0 goto label06;

     label05:
        virtualinvoke r4.<com.coremedia.iso.boxes.TrackHeaderBox: void setVersion(int)>(1);

     label06:
        virtualinvoke r3.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>(r4);

        $r44 = new com.coremedia.iso.boxes.MediaBox;

        specialinvoke $r44.<com.coremedia.iso.boxes.MediaBox: void <init>()>();

        r5 = $r44;

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>(r5);

        $r45 = new com.coremedia.iso.boxes.MediaHeaderBox;

        specialinvoke $r45.<com.coremedia.iso.boxes.MediaHeaderBox: void <init>()>();

        r6 = $r45;

        $r46 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r47 = virtualinvoke $r46.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        $l19 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r47);

        virtualinvoke r6.<com.coremedia.iso.boxes.MediaHeaderBox: void setCreationTime(long)>($l19);

        $l20 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r1);

        virtualinvoke r6.<com.coremedia.iso.boxes.MediaHeaderBox: void setDuration(long)>($l20);

        $r43 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l21 = virtualinvoke $r43.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        virtualinvoke r6.<com.coremedia.iso.boxes.MediaHeaderBox: void setTimescale(long)>($l21);

        $r53 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r52 = virtualinvoke $r53.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.String getLanguage()>();

        virtualinvoke r6.<com.coremedia.iso.boxes.MediaHeaderBox: void setLanguage(java.lang.String)>($r52);

        virtualinvoke r5.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>(r6);

        $r55 = new com.coremedia.iso.boxes.HandlerBox;

        specialinvoke $r55.<com.coremedia.iso.boxes.HandlerBox: void <init>()>();

        r7 = $r55;

        virtualinvoke r5.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>(r7);

        $r54 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        virtualinvoke r7.<com.coremedia.iso.boxes.HandlerBox: void setHandlerType(java.lang.String)>($r54);

        $r49 = new com.coremedia.iso.boxes.MediaInformationBox;

        specialinvoke $r49.<com.coremedia.iso.boxes.MediaInformationBox: void <init>()>();

        r8 = $r49;

        $r48 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        virtualinvoke r8.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r48);

        $r51 = new com.coremedia.iso.boxes.DataInformationBox;

        specialinvoke $r51.<com.coremedia.iso.boxes.DataInformationBox: void <init>()>();

        r9 = $r51;

        $r50 = new com.coremedia.iso.boxes.DataReferenceBox;

        specialinvoke $r50.<com.coremedia.iso.boxes.DataReferenceBox: void <init>()>();

        r10 = $r50;

        virtualinvoke r9.<com.coremedia.iso.boxes.DataInformationBox: void addBox(com.coremedia.iso.boxes.Box)>(r10);

        $r59 = new com.coremedia.iso.boxes.DataEntryUrlBox;

        specialinvoke $r59.<com.coremedia.iso.boxes.DataEntryUrlBox: void <init>()>();

        r11 = $r59;

        virtualinvoke r11.<com.coremedia.iso.boxes.DataEntryUrlBox: void setFlags(int)>(1);

        virtualinvoke r10.<com.coremedia.iso.boxes.DataReferenceBox: void addBox(com.coremedia.iso.boxes.Box)>(r11);

        virtualinvoke r8.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>(r9);

        $r58 = new com.coremedia.iso.boxes.SampleTableBox;

        specialinvoke $r58.<com.coremedia.iso.boxes.SampleTableBox: void <init>()>();

        r12 = $r58;

        $r60 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r60);

        r13 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        if r13 == null goto label07;

        $r114 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        $z11 = interfaceinvoke $r114.<java.util.List: boolean isEmpty()>();

        if $z11 != 0 goto label07;

        $r110 = new com.coremedia.iso.boxes.TimeToSampleBox;

        specialinvoke $r110.<com.coremedia.iso.boxes.TimeToSampleBox: void <init>()>();

        r14 = $r110;

        $r109 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        virtualinvoke r14.<com.coremedia.iso.boxes.TimeToSampleBox: void setEntries(java.util.List)>($r109);

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r14);

     label07:
        r116 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        if r116 == null goto label08;

        $z13 = interfaceinvoke r116.<java.util.List: boolean isEmpty()>();

        if $z13 != 0 goto label08;

        $r113 = new com.coremedia.iso.boxes.CompositionTimeToSample;

        specialinvoke $r113.<com.coremedia.iso.boxes.CompositionTimeToSample: void <init>()>();

        r16 = $r113;

        virtualinvoke r16.<com.coremedia.iso.boxes.CompositionTimeToSample: void setEntries(java.util.List)>(r116);

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r16);

     label08:
        r117 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if r117 == null goto label09;

        $i48 = lengthof r117;

        if $i48 <= 0 goto label09;

        $r115 = new com.coremedia.iso.boxes.SyncSampleBox;

        specialinvoke $r115.<com.coremedia.iso.boxes.SyncSampleBox: void <init>()>();

        r15 = $r115;

        virtualinvoke r15.<com.coremedia.iso.boxes.SyncSampleBox: void setSampleNumber(long[])>(r117);

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r15);

     label09:
        $r57 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r57 == null goto label10;

        $r102 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z12 = interfaceinvoke $r102.<java.util.List: boolean isEmpty()>();

        if $z12 != 0 goto label10;

        $r112 = new com.coremedia.iso.boxes.SampleDependencyTypeBox;

        specialinvoke $r112.<com.coremedia.iso.boxes.SampleDependencyTypeBox: void <init>()>();

        r118 = $r112;

        $r111 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        virtualinvoke r118.<com.coremedia.iso.boxes.SampleDependencyTypeBox: void setEntries(java.util.List)>($r111);

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r118);

     label10:
        $r56 = new java.util.HashMap;

        specialinvoke $r56.<java.util.HashMap: void <init>()>();

        r119 = $r56;

        $r65 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r18 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r105 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.googlecode.mp4parser.authoring.Track) $r105;

        $r104 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: int[] getChunkSizes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r17, r2);

        virtualinvoke r119.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r104);

        goto label11;

     label12:
        $r64 = virtualinvoke r119.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r120 = (int[]) $r64;

        $r62 = new com.coremedia.iso.boxes.SampleToChunkBox;

        specialinvoke $r62.<com.coremedia.iso.boxes.SampleToChunkBox: void <init>()>();

        r121 = $r62;

        $r63 = new java.util.LinkedList;

        specialinvoke $r63.<java.util.LinkedList: void <init>()>();

        virtualinvoke r121.<com.coremedia.iso.boxes.SampleToChunkBox: void setEntries(java.util.List)>($r63);

        l1 = -2147483648L;

        i2 = 0;

     label13:
        $i22 = lengthof r120;

        if i2 >= $i22 goto label15;

        $i41 = r120[i2];

        $l40 = (long) $i41;

        $b39 = l1 cmp $l40;

        if $b39 == 0 goto label14;

        $r108 = virtualinvoke r121.<com.coremedia.iso.boxes.SampleToChunkBox: java.util.List getEntries()>();

        $r107 = new com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $i43 = i2 + 1;

        $l37 = (long) $i43;

        $i42 = r120[i2];

        $l38 = (long) $i42;

        specialinvoke $r107.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: void <init>(long,long,long)>($l37, $l38, 1L);

        interfaceinvoke $r108.<java.util.List: boolean add(java.lang.Object)>($r107);

        $i36 = r120[i2];

        l1 = (long) $i36;

     label14:
        i2 = i2 + 1;

        goto label13;

     label15:
        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r121);

        $r61 = new com.coremedia.iso.boxes.SampleSizeBox;

        specialinvoke $r61.<com.coremedia.iso.boxes.SampleSizeBox: void <init>()>();

        r122 = $r61;

        $r70 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes>;

        $r71 = virtualinvoke $r70.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r68 = (long[]) $r71;

        virtualinvoke r122.<com.coremedia.iso.boxes.SampleSizeBox: void setSampleSizes(long[])>($r68);

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r122);

        $r69 = new com.coremedia.iso.boxes.StaticChunkOffsetBox;

        specialinvoke $r69.<com.coremedia.iso.boxes.StaticChunkOffsetBox: void <init>()>();

        r19 = $r69;

        $r67 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.Set chunkOffsetBoxes>;

        interfaceinvoke $r67.<java.util.Set: boolean add(java.lang.Object)>(r19);

        l3 = 0L;

        $i23 = lengthof r120;

        r20 = newarray (long)[$i23];

        $r75 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r66 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z7 = virtualinvoke $r75.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r66);

        if $z7 == 0 goto label16;

        $r91 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calculating chunk offsets for track_");

        $r93 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l34 = virtualinvoke $r93.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l34);

        $r106 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r91.<java.util.logging.Logger: void fine(java.lang.String)>($r106);

     label16:
        i4 = 0;

     label17:
        $i24 = lengthof r120;

        if i4 >= $i24 goto label27;

        $r73 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r74 = <java.util.logging.Level: java.util.logging.Level FINER>;

        $z6 = virtualinvoke $r73.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r74);

        if $z6 == 0 goto label18;

        $r97 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calculating chunk offsets for track_");

        $r99 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l35 = virtualinvoke $r99.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk ");

        $r88 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r97.<java.util.logging.Logger: void finer(java.lang.String)>($r89);

     label18:
        $r72 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r22 = interfaceinvoke $r72.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z9 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label26;

        $r79 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r21 = (com.googlecode.mp4parser.authoring.Track) $r79;

        $r77 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r78 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $z8 = virtualinvoke $r77.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r78);

        if $z8 == 0 goto label20;

        $r80 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding offsets of track_");

        $r82 = interfaceinvoke r21.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l28 = virtualinvoke $r82.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l28);

        $r95 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r80.<java.util.logging.Logger: void finest(java.lang.String)>($r95);

     label20:
        $r76 = virtualinvoke r119.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r21);

        r23 = (int[]) $r76;

        l5 = 0L;

        i6 = 0;

     label21:
        if i6 >= i4 goto label22;

        $i27 = r23[i6];

        $l26 = (long) $i27;

        l5 = l5 + $l26;

        i6 = i6 + 1;

        goto label21;

     label22:
        if r21 != r1 goto label23;

        r20[i4] = l3;

     label23:
        i49 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l5);

     label24:
        $l32 = (long) i49;

        $i25 = r23[i4];

        $l30 = (long) $i25;

        $l29 = l5 + $l30;

        $b31 = $l32 cmp $l29;

        if $b31 >= 0 goto label25;

        $r86 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes>;

        $r85 = virtualinvoke $r86.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r21);

        $r87 = (long[]) $r85;

        $l33 = $r87[i49];

        l3 = l3 + $l33;

        i49 = i49 + 1;

        goto label24;

     label25:
        goto label19;

     label26:
        i4 = i4 + 1;

        goto label17;

     label27:
        virtualinvoke r19.<com.coremedia.iso.boxes.StaticChunkOffsetBox: void setChunkOffsets(long[])>(r20);

        virtualinvoke r12.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>(r19);

        virtualinvoke r8.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>(r12);

        virtualinvoke r5.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>(r8);

        return r3;
    }

    int[] getChunkSizes(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r2;
        long[] r3;
        int[] r4;
        int i0, $i3, $i4, $i6, $i10, $i11, $i13, $i14, $i16;
        long l1, l2, $l5, $l8, $l9, $l12, $l15;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r5;
        boolean $z0;
        java.util.HashMap $r6;
        java.util.List $r7, $r10;
        java.lang.Object $r8;
        byte $b7;
        java.lang.AssertionError $r9;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r5 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        r3 = interfaceinvoke $r5.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        $i3 = lengthof r3;

        r4 = newarray (int)[$i3];

        i0 = 0;

     label1:
        $i4 = lengthof r3;

        if i0 >= $i4 goto label4;

        $l9 = r3[i0];

        l1 = $l9 - 1L;

        $i10 = lengthof r3;

        $i11 = i0 + 1;

        if $i10 != $i11 goto label2;

        $r10 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i16 = interfaceinvoke $r10.<java.util.List: int size()>();

        l2 = (long) $i16;

        goto label3;

     label2:
        $i13 = i0 + 1;

        $l12 = r3[$i13];

        l2 = $l12 - 1L;

     label3:
        $l15 = l2 - l1;

        $i14 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l15);

        r4[i0] = $i14;

        i0 = i0 + 1;

        goto label1;

     label4:
        $z0 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r6 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2Sample>;

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.util.List) $r8;

        $i6 = interfaceinvoke $r7.<java.util.List: int size()>();

        $l5 = (long) $i6;

        $l8 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long sum(int[])>(r4);

        $b7 = $l5 cmp $l8;

        if $b7 == 0 goto label5;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("The number of samples and the sum of all chunk lengths must be equal");

        throw $r9;

     label5:
        return r4;
    }

    private static long sum(int[])
    {
        int[] r0, r1;
        long l0, l3;
        int i1, i2, $i4;

        r0 := @parameter0: int[];

        l0 = 0L;

        r1 = r0;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i4 = r1[i2];

        l3 = (long) $i4;

        l0 = l0 + l3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return l0;
    }

    protected static long getDuration(com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        long l0, $l1, $l2, $l3;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 = 0L;

        $r3 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r4;

        $l1 = virtualinvoke r2.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l2 = virtualinvoke r2.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $l3 = $l1 * $l2;

        l0 = l0 + $l3;

        goto label1;

     label2:
        return l0;
    }

    public long getTimescale(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        long l0, $l1;
        java.util.Iterator r2, $r5;
        com.googlecode.mp4parser.authoring.Track r3, $r7;
        java.util.List $r4, $r9;
        java.lang.Object $r6, $r10;
        com.googlecode.mp4parser.authoring.TrackMetaData $r8, $r11;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r4 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.googlecode.mp4parser.authoring.Track) $r6;

        $r8 = interfaceinvoke $r7.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l0 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $r9 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.googlecode.mp4parser.authoring.Track) $r10;

        $r11 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l0 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long gcd(long,long)>($l1, l0);

        goto label1;

     label2:
        return l0;
    }

    public static long gcd(long, long)
    {
        long l0, l1, $l3, $l4;
        byte $b2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        return l0;

     label1:
        $l3 = l0 % l1;

        $l4 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long gcd(long,long)>(l1, $l3);

        return $l4;
    }

    public java.util.List unifyAdjacentBuffers(java.util.List)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        java.util.List r1;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        java.nio.ByteBuffer r4, r5, r6, $r10, $r13, $r18, $r22, $r24, $r25, $r28, r29;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z2, $z3, $z4, $z5;
        java.lang.Object $r8, $r9, $r11, $r12, $r14, $r17, $r20, $r21, $r23, $r26;
        byte[] $r16, $r19, $r27;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: java.util.List;

        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r7;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.nio.ByteBuffer) $r8;

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

        if i0 < 0 goto label2;

        $z4 = virtualinvoke r4.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z4 == 0 goto label2;

        $r17 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r18 = (java.nio.ByteBuffer) $r17;

        $z5 = virtualinvoke $r18.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z5 == 0 goto label2;

        $r16 = virtualinvoke r4.<java.nio.ByteBuffer: byte[] array()>();

        $r21 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r22 = (java.nio.ByteBuffer) $r21;

        $r19 = virtualinvoke $r22.<java.nio.ByteBuffer: byte[] array()>();

        if $r16 != $r19 goto label2;

        $r20 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r25 = (java.nio.ByteBuffer) $r20;

        $i10 = virtualinvoke $r25.<java.nio.ByteBuffer: int arrayOffset()>();

        $r23 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r24 = (java.nio.ByteBuffer) $r23;

        $i12 = virtualinvoke $r24.<java.nio.ByteBuffer: int limit()>();

        $i13 = $i10 + $i12;

        $i11 = virtualinvoke r4.<java.nio.ByteBuffer: int arrayOffset()>();

        if $i13 != $i11 goto label2;

        $r26 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r5 = (java.nio.ByteBuffer) $r26;

        $r27 = virtualinvoke r4.<java.nio.ByteBuffer: byte[] array()>();

        $i16 = virtualinvoke r5.<java.nio.ByteBuffer: int arrayOffset()>();

        $i15 = virtualinvoke r5.<java.nio.ByteBuffer: int limit()>();

        $i14 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        $i17 = $i15 + $i14;

        $r28 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r27, $i16, $i17);

        r6 = virtualinvoke $r28.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label4;

     label2:
        if i0 < 0 goto label3;

        $z2 = r4 instanceof java.nio.MappedByteBuffer;

        if $z2 == 0 goto label3;

        $r9 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $z3 = $r9 instanceof java.nio.MappedByteBuffer;

        if $z3 == 0 goto label3;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (java.nio.ByteBuffer) $r11;

        $i3 = virtualinvoke $r10.<java.nio.ByteBuffer: int limit()>();

        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r13 = (java.nio.ByteBuffer) $r12;

        $i4 = virtualinvoke $r13.<java.nio.ByteBuffer: int capacity()>();

        $i6 = virtualinvoke r4.<java.nio.ByteBuffer: int capacity()>();

        $i5 = $i4 - $i6;

        if $i3 != $i5 goto label3;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r29 = (java.nio.ByteBuffer) $r14;

        $i7 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        $i9 = virtualinvoke r29.<java.nio.ByteBuffer: int limit()>();

        $i8 = $i7 + $i9;

        virtualinvoke r29.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i8);

        goto label4;

     label3:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label4:
        goto label1;

     label5:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;

        $r0 = class "com/googlecode/mp4parser/authoring/builder/DefaultMp4Builder";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: boolean $assertionsDisabled> = $z1;

        $r1 = class "com/googlecode/mp4parser/authoring/builder/DefaultMp4Builder";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG> = $r3;

        return;
    }
}
