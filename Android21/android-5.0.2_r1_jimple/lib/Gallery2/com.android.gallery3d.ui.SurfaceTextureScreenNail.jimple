public abstract class com.android.gallery3d.ui.SurfaceTextureScreenNail extends java.lang.Object implements com.android.gallery3d.ui.ScreenNail, android.graphics.SurfaceTexture$OnFrameAvailableListener
{
    private static final java.lang.String TAG;
    private static final int GL_TEXTURE_EXTERNAL_OES;
    protected com.android.gallery3d.glrenderer.ExtTexture mExtTexture;
    private android.graphics.SurfaceTexture mSurfaceTexture;
    private int mWidth;
    private int mHeight;
    private float[] mTransform;
    private boolean mHasTexture;

    public void <init>()
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        float[] $r1;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[16];

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: float[] mTransform> = $r1;

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: boolean mHasTexture> = 0;

        return;
    }

    public void acquireSurfaceTexture(com.android.gallery3d.glrenderer.GLCanvas)
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0, r2;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        java.lang.Throwable r3, $r11;
        com.android.gallery3d.glrenderer.ExtTexture $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.SurfaceTexture $r6, $r8, $r9;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        $r4 = new com.android.gallery3d.glrenderer.ExtTexture;

        specialinvoke $r4.<com.android.gallery3d.glrenderer.ExtTexture: void <init>(com.android.gallery3d.glrenderer.GLCanvas,int)>(r1, 36197);

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture> = $r4;

        $r5 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture>;

        $i1 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mWidth>;

        $i0 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mHeight>;

        virtualinvoke $r5.<com.android.gallery3d.glrenderer.ExtTexture: void setSize(int,int)>($i1, $i0);

        $r6 = new android.graphics.SurfaceTexture;

        $r7 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture>;

        $i2 = virtualinvoke $r7.<com.android.gallery3d.glrenderer.ExtTexture: int getId()>();

        specialinvoke $r6.<android.graphics.SurfaceTexture: void <init>(int)>($i2);

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture> = $r6;

        $r8 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        $i4 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mWidth>;

        $i3 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mHeight>;

        staticinvoke <com.android.gallery3d.ui.SurfaceTextureScreenNail: void setDefaultBufferSize(android.graphics.SurfaceTexture,int,int)>($r8, $i4, $i3);

        $r9 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        virtualinvoke $r9.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>(r0);

        r2 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: boolean mHasTexture> = 1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void setDefaultBufferSize(android.graphics.SurfaceTexture, int, int)
    {
        android.graphics.SurfaceTexture r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <com.android.gallery3d.common.ApiHelper: boolean HAS_SET_DEFALT_BUFFER_SIZE>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>(i0, i1);

     label1:
        return;
    }

    private static void releaseSurfaceTexture(android.graphics.SurfaceTexture)
    {
        android.graphics.SurfaceTexture r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.SurfaceTexture;

        virtualinvoke r0.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>(null);

        $z0 = <com.android.gallery3d.common.ApiHelper: boolean HAS_RELEASE_SURFACE_TEXTURE>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.graphics.SurfaceTexture: void release()>();

     label1:
        return;
    }

    public android.graphics.SurfaceTexture getSurfaceTexture()
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        android.graphics.SurfaceTexture $r1;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        $r1 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        return $r1;
    }

    public void releaseSurfaceTexture()
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0, r1;
        java.lang.Throwable r2, $r6;
        com.android.gallery3d.glrenderer.ExtTexture $r4;
        android.graphics.SurfaceTexture $r5;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: boolean mHasTexture> = 0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        $r4 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture>;

        virtualinvoke $r4.<com.android.gallery3d.glrenderer.ExtTexture: void recycle()>();

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture> = null;

        $r5 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        staticinvoke <com.android.gallery3d.ui.SurfaceTextureScreenNail: void releaseSurfaceTexture(android.graphics.SurfaceTexture)>($r5);

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture> = null;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setSize(int, int)
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        int i0, i1;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mWidth> = i0;

        r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mHeight> = i1;

        return;
    }

    public void resizeTexture()
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        com.android.gallery3d.glrenderer.ExtTexture $r1, $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.SurfaceTexture $r3;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        $r1 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture>;

        $i1 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mWidth>;

        $i0 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mHeight>;

        virtualinvoke $r2.<com.android.gallery3d.glrenderer.ExtTexture: void setSize(int,int)>($i1, $i0);

        $r3 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        $i3 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mWidth>;

        $i2 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mHeight>;

        staticinvoke <com.android.gallery3d.ui.SurfaceTextureScreenNail: void setDefaultBufferSize(android.graphics.SurfaceTexture,int,int)>($r3, $i3, $i2);

     label1:
        return;
    }

    public int getWidth()
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        $i0 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mWidth>;

        return $i0;
    }

    public int getHeight()
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        $i0 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: int mHeight>;

        return $i0;
    }

    public void draw(com.android.gallery3d.glrenderer.GLCanvas, int, int, int, int)
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0, r2;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        java.lang.Throwable r3, $r11;
        boolean $z0;
        android.graphics.SurfaceTexture $r5, $r7;
        float[] $r6, $r8, $r10;
        float $f0, $f1, $f2, $f3;
        com.android.gallery3d.glrenderer.ExtTexture $r9;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: boolean mHasTexture>;

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        virtualinvoke $r5.<android.graphics.SurfaceTexture: void updateTexImage()>();

        $r7 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture mSurfaceTexture>;

        $r6 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: float[] mTransform>;

        virtualinvoke $r7.<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>($r6);

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void save(int)>(2);

        $i6 = i2 / 2;

        i4 = i0 + $i6;

        $i7 = i3 / 2;

        i5 = i1 + $i7;

        $f1 = (float) i4;

        $f0 = (float) i5;

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float)>($f1, $f0);

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void scale(float,float,float)>(1.0F, -1.0F, 1.0F);

        $i8 = neg i4;

        $f3 = (float) $i8;

        $i9 = neg i5;

        $f2 = (float) $i9;

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float)>($f3, $f2);

        $r8 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: float[] mTransform>;

        virtualinvoke r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: void updateTransformMatrix(float[])>($r8);

        $r9 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: com.android.gallery3d.glrenderer.ExtTexture mExtTexture>;

        $r10 = r0.<com.android.gallery3d.ui.SurfaceTextureScreenNail: float[] mTransform>;

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>($r9, $r10, i0, i1, i2, i3);

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void restore()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void draw(com.android.gallery3d.glrenderer.GLCanvas, android.graphics.RectF, android.graphics.RectF)
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        android.graphics.RectF r2, r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        r2 := @parameter1: android.graphics.RectF;

        r3 := @parameter2: android.graphics.RectF;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    protected void updateTransformMatrix(float[])
    {
        com.android.gallery3d.ui.SurfaceTextureScreenNail r0;
        float[] r1;

        r0 := @this: com.android.gallery3d.ui.SurfaceTextureScreenNail;

        r1 := @parameter0: float[];

        return;
    }

    public abstract void noDraw();

    public abstract void recycle();

    public abstract void onFrameAvailable(android.graphics.SurfaceTexture);

    public static void <clinit>()
    {
        <com.android.gallery3d.ui.SurfaceTextureScreenNail: int GL_TEXTURE_EXTERNAL_OES> = 36197;

        <com.android.gallery3d.ui.SurfaceTextureScreenNail: java.lang.String TAG> = "SurfaceTextureScreenNail";

        return;
    }
}
