public class com.android.gallery3d.util.JobLimiter extends java.lang.Object implements com.android.gallery3d.util.FutureListener
{
    private static final java.lang.String TAG;
    private static final int STATE_INIT;
    private static final int STATE_DONE;
    private static final int STATE_CANCELLED;
    private final java.util.LinkedList mJobs;
    private final com.android.gallery3d.util.ThreadPool mPool;
    private int mLimit;

    public void <init>(com.android.gallery3d.util.ThreadPool, int)
    {
        com.android.gallery3d.util.JobLimiter r0;
        com.android.gallery3d.util.ThreadPool r1, $r4;
        int i0;
        java.util.LinkedList $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.gallery3d.util.JobLimiter;

        r1 := @parameter0: com.android.gallery3d.util.ThreadPool;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<com.android.gallery3d.util.JobLimiter: java.util.LinkedList mJobs> = $r2;

        $r3 = staticinvoke <com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (com.android.gallery3d.util.ThreadPool) $r3;

        r0.<com.android.gallery3d.util.JobLimiter: com.android.gallery3d.util.ThreadPool mPool> = $r4;

        r0.<com.android.gallery3d.util.JobLimiter: int mLimit> = i0;

        return;
    }

    public synchronized com.android.gallery3d.util.Future submit(com.android.gallery3d.util.ThreadPool$Job, com.android.gallery3d.util.FutureListener)
    {
        com.android.gallery3d.util.JobLimiter r0;
        com.android.gallery3d.util.ThreadPool$Job r1, $r6;
        com.android.gallery3d.util.FutureListener r2;
        com.android.gallery3d.util.JobLimiter$JobWrapper r3, $r4;
        java.lang.Object $r5;
        java.util.LinkedList $r7;

        r0 := @this: com.android.gallery3d.util.JobLimiter;

        r1 := @parameter0: com.android.gallery3d.util.ThreadPool$Job;

        r2 := @parameter1: com.android.gallery3d.util.FutureListener;

        $r4 = new com.android.gallery3d.util.JobLimiter$JobWrapper;

        $r5 = staticinvoke <com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (com.android.gallery3d.util.ThreadPool$Job) $r5;

        specialinvoke $r4.<com.android.gallery3d.util.JobLimiter$JobWrapper: void <init>(com.android.gallery3d.util.ThreadPool$Job,com.android.gallery3d.util.FutureListener)>($r6, r2);

        r3 = $r4;

        $r7 = r0.<com.android.gallery3d.util.JobLimiter: java.util.LinkedList mJobs>;

        virtualinvoke $r7.<java.util.LinkedList: void addLast(java.lang.Object)>(r3);

        specialinvoke r0.<com.android.gallery3d.util.JobLimiter: void submitTasksIfAllowed()>();

        return r3;
    }

    private void submitTasksIfAllowed()
    {
        com.android.gallery3d.util.JobLimiter r0;
        com.android.gallery3d.util.JobLimiter$JobWrapper r1;
        int $i0, $i1, $i2;
        java.util.LinkedList $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.gallery3d.util.ThreadPool $r5;
        com.android.gallery3d.util.Future $r6;

        r0 := @this: com.android.gallery3d.util.JobLimiter;

     label1:
        $i0 = r0.<com.android.gallery3d.util.JobLimiter: int mLimit>;

        if $i0 <= 0 goto label3;

        $r2 = r0.<com.android.gallery3d.util.JobLimiter: java.util.LinkedList mJobs>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<com.android.gallery3d.util.JobLimiter: java.util.LinkedList mJobs>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r1 = (com.android.gallery3d.util.JobLimiter$JobWrapper) $r4;

        $z1 = virtualinvoke r1.<com.android.gallery3d.util.JobLimiter$JobWrapper: boolean isCancelled()>();

        if $z1 != 0 goto label2;

        $i1 = r0.<com.android.gallery3d.util.JobLimiter: int mLimit>;

        $i2 = $i1 - 1;

        r0.<com.android.gallery3d.util.JobLimiter: int mLimit> = $i2;

        $r5 = r0.<com.android.gallery3d.util.JobLimiter: com.android.gallery3d.util.ThreadPool mPool>;

        $r6 = virtualinvoke $r5.<com.android.gallery3d.util.ThreadPool: com.android.gallery3d.util.Future submit(com.android.gallery3d.util.ThreadPool$Job,com.android.gallery3d.util.FutureListener)>(r1, r0);

        virtualinvoke r1.<com.android.gallery3d.util.JobLimiter$JobWrapper: void setFuture(com.android.gallery3d.util.Future)>($r6);

     label2:
        goto label1;

     label3:
        return;
    }

    public synchronized void onFutureDone(com.android.gallery3d.util.Future)
    {
        com.android.gallery3d.util.JobLimiter r0;
        com.android.gallery3d.util.Future r1;
        int $i0, $i1;

        r0 := @this: com.android.gallery3d.util.JobLimiter;

        r1 := @parameter0: com.android.gallery3d.util.Future;

        $i0 = r0.<com.android.gallery3d.util.JobLimiter: int mLimit>;

        $i1 = $i0 + 1;

        r0.<com.android.gallery3d.util.JobLimiter: int mLimit> = $i1;

        specialinvoke r0.<com.android.gallery3d.util.JobLimiter: void submitTasksIfAllowed()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.util.JobLimiter: int STATE_CANCELLED> = 2;

        <com.android.gallery3d.util.JobLimiter: int STATE_DONE> = 1;

        <com.android.gallery3d.util.JobLimiter: int STATE_INIT> = 0;

        <com.android.gallery3d.util.JobLimiter: java.lang.String TAG> = "JobLimiter";

        return;
    }
}
