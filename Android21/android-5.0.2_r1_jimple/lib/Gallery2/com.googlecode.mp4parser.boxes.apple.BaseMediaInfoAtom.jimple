public class com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    short graphicsMode;
    int opColorR;
    int opColorG;
    int opColorB;
    short balance;
    short reserved;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("gmin");

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short graphicsMode> = 64;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorR> = 32768;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorG> = 32768;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorB> = 32768;

        return;
    }

    protected long getContentSize()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        return 16L;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        java.nio.ByteBuffer r1;
        short $s0, $s4, $s5;
        int $i1, $i2, $i3;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $s0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short graphicsMode>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s0);

        $i1 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorR>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i1);

        $i2 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorG>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i2);

        $i3 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorB>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i3);

        $s4 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short balance>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s4);

        $s5 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short reserved>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s5);

        return;
    }

    protected void _parseDetails(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        java.nio.ByteBuffer r1;
        short $s1, $s5, $s6;
        int $i2, $i3, $i4;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $s1 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short graphicsMode> = $s1;

        $i2 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorR> = $i2;

        $i3 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorG> = $i3;

        $i4 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorB> = $i4;

        $s5 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short balance> = $s5;

        $s6 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short reserved> = $s6;

        return;
    }

    public short getGraphicsMode()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        short $s0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $s0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short graphicsMode>;

        return $s0;
    }

    public void setGraphicsMode(short)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        short s0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        s0 := @parameter0: short;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short graphicsMode> = s0;

        return;
    }

    public int getOpColorR()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $i0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorR>;

        return $i0;
    }

    public void setOpColorR(int)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        i0 := @parameter0: int;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorR> = i0;

        return;
    }

    public int getOpColorG()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $i0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorG>;

        return $i0;
    }

    public void setOpColorG(int)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        i0 := @parameter0: int;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorG> = i0;

        return;
    }

    public int getOpColorB()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $i0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorB>;

        return $i0;
    }

    public void setOpColorB(int)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        i0 := @parameter0: int;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorB> = i0;

        return;
    }

    public short getBalance()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        short $s0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $s0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short balance>;

        return $s0;
    }

    public void setBalance(short)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        short s0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        s0 := @parameter0: short;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short balance> = s0;

        return;
    }

    public short getReserved()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        short $s0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $s0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short reserved>;

        return $s0;
    }

    public void setReserved(short)
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        short s0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        s0 := @parameter0: short;

        r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short reserved> = s0;

        return;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        short $s0, $s4, $s5;
        int $i1, $i2, $i3;
        java.lang.String $r14;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BaseMediaInfoAtom{graphicsMode=");

        $s0 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short graphicsMode>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", opColorR=");

        $i1 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorR>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", opColorG=");

        $i2 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorG>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", opColorB=");

        $i3 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: int opColorB>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", balance=");

        $s4 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short balance>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reserved=");

        $s5 = r0.<com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: short reserved>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s5);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public static void <clinit>()
    {
        <com.googlecode.mp4parser.boxes.apple.BaseMediaInfoAtom: java.lang.String TYPE> = "gmin";

        return;
    }
}
