class com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat extends java.lang.Object implements com.coremedia.iso.boxes.Box
{
    com.coremedia.iso.boxes.ContainerBox parent;
    final long val$startSample;
    final long val$endSample;
    final com.googlecode.mp4parser.authoring.Track val$track;
    final int val$i;
    final com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0;

    void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder, long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        long l0, l1;
        com.googlecode.mp4parser.authoring.Track r2;
        int i2;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter4: int;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0> = r1;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$startSample> = l0;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$endSample> = l1;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.Track val$track> = r2;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: int val$i> = i2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.coremedia.iso.boxes.ContainerBox getParent()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;
        com.coremedia.iso.boxes.ContainerBox $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        $r1 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.coremedia.iso.boxes.ContainerBox parent>;

        return $r1;
    }

    public void setParent(com.coremedia.iso.boxes.ContainerBox)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;
        com.coremedia.iso.boxes.ContainerBox r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: com.coremedia.iso.boxes.ContainerBox;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.coremedia.iso.boxes.ContainerBox parent> = r1;

        return;
    }

    public long getSize()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;
        long l0, $l2, $l3, $l5;
        java.util.Iterator r1;
        java.nio.ByteBuffer r2;
        int $i1, $i4;
        com.googlecode.mp4parser.authoring.Track $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        l0 = 8L;

        $r4 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0>;

        $l3 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$startSample>;

        $l2 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$endSample>;

        $r3 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.Track val$track>;

        $i1 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: int val$i>;

        $r5 = virtualinvoke $r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getSamples(long,long,com.googlecode.mp4parser.authoring.Track,int)>($l3, $l2, $r3, $i1);

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.nio.ByteBuffer) $r6;

        $i4 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();

        $l5 = (long) $i4;

        l0 = l0 + $l5;

        goto label1;

     label2:
        return l0;
    }

    public java.lang.String getType()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        return "mdat";
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;
        java.nio.channels.WritableByteChannel r1;
        java.util.List r2, r3, r5;
        java.nio.ByteBuffer r4, $r18, r20;
        short s0;
        int i1, $i2, $i7, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22;
        java.nio.ByteBuffer[] r6, $r17;
        com.googlecode.mp4parser.authoring.Track $r7;
        long $l3, $l4, $l5, $l6;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r8;
        byte[] $r9;
        java.lang.String $r10;
        boolean $z0, $z1;
        java.lang.Object $r14;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b13;
        java.lang.Object[] $r15;
        java.nio.channels.GatheringByteChannel $r16;
        java.util.Iterator r19;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: java.nio.channels.WritableByteChannel;

        $r8 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0>;

        $l4 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$startSample>;

        $l3 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long val$endSample>;

        $r7 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: com.googlecode.mp4parser.authoring.Track val$track>;

        $i2 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: int val$i>;

        r2 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getSamples(long,long,com.googlecode.mp4parser.authoring.Track,int)>($l4, $l3, $r7, $i2);

        r3 = staticinvoke <com.googlecode.mp4parser.authoring.builder.ByteBufferHelper: java.util.List mergeAdjacentBuffers(java.util.List)>(r2);

        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        $l5 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: long getSize()>();

        $i7 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        $l6 = (long) $i7;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r4, $l6);

        $r10 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: java.lang.String getType()>();

        $r9 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r10);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r9);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        interfaceinvoke r1.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>(r4);

        $z0 = r1 instanceof java.nio.channels.GatheringByteChannel;

        if $z0 == 0 goto label6;

        s0 = 1024;

        i1 = 0;

     label1:
        $d0 = (double) i1;

        $i10 = interfaceinvoke r3.<java.util.List: int size()>();

        $d1 = (double) $i10;

        $d3 = (double) s0;

        $d2 = $d1 / $d3;

        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $b13 = $d0 cmpg $d4;

        if $b13 >= 0 goto label5;

        $i12 = i1 * s0;

        $i11 = i1 + 1;

        $i15 = $i11 * s0;

        $i16 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i15 >= $i16 goto label2;

        $i21 = i1 + 1;

        $i14 = $i21 * s0;

        goto label3;

     label2:
        $i14 = interfaceinvoke r3.<java.util.List: int size()>();

     label3:
        r5 = interfaceinvoke r3.<java.util.List: java.util.List subList(int,int)>($i12, $i14);

        $i17 = interfaceinvoke r5.<java.util.List: int size()>();

        $r17 = newarray (java.nio.ByteBuffer)[$i17];

        $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        r6 = (java.nio.ByteBuffer[]) $r15;

     label4:
        $r16 = (java.nio.channels.GatheringByteChannel) r1;

        interfaceinvoke $r16.<java.nio.channels.GatheringByteChannel: long write(java.nio.ByteBuffer[])>(r6);

        $i19 = lengthof r6;

        $i18 = $i19 - 1;

        $r18 = r6[$i18];

        $i22 = virtualinvoke $r18.<java.nio.ByteBuffer: int remaining()>();

        if $i22 > 0 goto label4;

        i1 = i1 + 1;

        goto label1;

     label5:
        goto label8;

     label6:
        r19 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.nio.ByteBuffer) $r14;

        virtualinvoke r20.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        interfaceinvoke r1.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>(r20);

        goto label7;

     label8:
        return;
    }

    public void parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat r0;
        java.nio.channels.ReadableByteChannel r1;
        java.nio.ByteBuffer r2;
        long l0;
        com.coremedia.iso.BoxParser r3;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        r1 := @parameter0: java.nio.channels.ReadableByteChannel;

        r2 := @parameter1: java.nio.ByteBuffer;

        l0 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.BoxParser;

        return;
    }
}
