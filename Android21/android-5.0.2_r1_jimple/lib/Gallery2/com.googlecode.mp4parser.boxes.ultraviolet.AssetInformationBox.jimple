public class com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox extends com.googlecode.mp4parser.AbstractFullBox
{
    java.lang.String apid;
    java.lang.String profileVersion;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("ainf");

        r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String apid> = "";

        r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String profileVersion> = "0000";

        return;
    }

    protected long getContentSize()
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.lang.String $r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        $r1 = r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String apid>;

        $i0 = staticinvoke <com.coremedia.iso.Utf8: int utf8StringLengthInBytes(java.lang.String)>($r1);

        $i1 = $i0 + 9;

        $l2 = (long) $i1;

        return $l2;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.nio.ByteBuffer r1;
        java.lang.String $r2, $r5;
        byte[] $r3, $r6;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String profileVersion>;

        $r3 = staticinvoke <com.coremedia.iso.Utf8: byte[] convert(java.lang.String)>($r2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r3, 0, 4);

        $r5 = r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String apid>;

        $r6 = staticinvoke <com.coremedia.iso.Utf8: byte[] convert(java.lang.String)>($r5);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r6);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.nio.ByteBuffer r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer,int)>(r1, 4);

        r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String profileVersion> = $r2;

        $r3 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String apid> = $r3;

        return;
    }

    public java.lang.String getApid()
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.lang.String $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        $r1 = r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String apid>;

        return $r1;
    }

    public void setApid(java.lang.String)
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.lang.String r1;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        r1 := @parameter0: java.lang.String;

        r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String apid> = r1;

        return;
    }

    public java.lang.String getProfileVersion()
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.lang.String $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        $r1 = r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String profileVersion>;

        return $r1;
    }

    public void setProfileVersion(java.lang.String)
    {
        com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.AssertionError $r2;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 4 goto label2;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        r0.<com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: java.lang.String profileVersion> = r1;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/googlecode/mp4parser/boxes/ultraviolet/AssetInformationBox";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.boxes.ultraviolet.AssetInformationBox: boolean $assertionsDisabled> = $z1;

        return;
    }
}
