public class com.coremedia.iso.boxes.fragment.TrackRunBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private int dataOffset;
    private com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags;
    private java.util.List entries;

    public java.util.List getEntries()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        return $r1;
    }

    public void setDataOffset(int)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i4 = $i3 & 16777214;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i4);

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i2 = $i1 | 1;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i2);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset> = i0;

        return;
    }

    public long[] getSampleCompositionTimeOffsets()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        long[] r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry $r5;
        long $l4;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $z0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleCompositionTimeOffsetPresent()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        r1 = newarray (long)[$i1];

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label2;

        $r3 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r4;

        $i3 = virtualinvoke $r5.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: int getSampleCompositionTimeOffset()>();

        $l4 = (long) $i3;

        r1[i0] = $l4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    public com.coremedia.iso.boxes.fragment.TrackExtendsBox getTrackExtendsBox()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r1;
        java.util.List r2, r3;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox r4, r6;
        java.util.Iterator r5;
        com.coremedia.iso.boxes.ContainerBox $r7;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox $r8;
        com.coremedia.iso.IsoFile $r9;
        int $i0;
        java.lang.Object $r10, $r12;
        com.coremedia.iso.boxes.MovieBox $r11;
        boolean $z0;
        long $l1, $l3;
        byte $b2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r7 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.ContainerBox getParent()>();

        $r8 = (com.coremedia.iso.boxes.fragment.TrackFragmentBox) $r7;

        r1 = virtualinvoke $r8.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        $r9 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.IsoFile getIsoFile()>();

        r2 = virtualinvoke $r9.<com.coremedia.iso.IsoFile: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/MovieBox");

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (com.coremedia.iso.boxes.MovieBox) $r10;

        r3 = virtualinvoke $r11.<com.coremedia.iso.boxes.MovieBox: java.util.List getBoxes(java.lang.Class,boolean)>(class "com/coremedia/iso/boxes/fragment/TrackExtendsBox", 1);

        r4 = null;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.fragment.TrackExtendsBox) $r12;

        $l1 = virtualinvoke r6.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getTrackId()>();

        $l3 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>();

        $b2 = $l1 cmp $l3;

        if $b2 != 0 goto label3;

        r4 = r6;

     label3:
        goto label2;

     label4:
        return r4;
    }

    public void <init>()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.ArrayList $r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("trun");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries> = $r1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        long l0, l2, $l10, $l11, l12;
        int i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        l0 = 8L;

        i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = i1 & 1;

        if $i3 != 1 goto label1;

        l0 = l0 + 4L;

     label1:
        $i4 = i1 & 4;

        if $i4 != 4 goto label2;

        l0 = l0 + 4L;

     label2:
        l2 = 0L;

        $i5 = i1 & 256;

        if $i5 != 256 goto label3;

        l2 = l2 + 4L;

     label3:
        $i6 = i1 & 512;

        if $i6 != 512 goto label4;

        l2 = l2 + 4L;

     label4:
        $i7 = i1 & 1024;

        if $i7 != 1024 goto label5;

        l2 = l2 + 4L;

     label5:
        $i8 = i1 & 2048;

        if $i8 != 2048 goto label6;

        l2 = l2 + 4L;

     label6:
        $r1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i9 = interfaceinvoke $r1.<java.util.List: int size()>();

        $l10 = (long) $i9;

        $l11 = l2 * $l10;

        l12 = l0 + $l11;

        return l12;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.nio.ByteBuffer r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12;
        java.util.Iterator r2;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r3;
        java.util.List $r4, $r5;
        long $l2, $l10, $l11, $l13;
        boolean $z0;
        java.lang.Object $r6;
        com.coremedia.iso.boxes.fragment.SampleFlags $r7, $r9;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l2 = (long) $i1;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l2);

        i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = i0 & 1;

        if $i3 != 1 goto label1;

        $i12 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset>;

        $l13 = (long) $i12;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l13);

     label1:
        $i4 = i0 & 4;

        if $i4 != 4 goto label2;

        $r9 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags>;

        virtualinvoke $r9.<com.coremedia.iso.boxes.fragment.SampleFlags: void getContent(java.nio.ByteBuffer)>(r1);

     label2:
        $r5 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r6;

        $i5 = i0 & 256;

        if $i5 != 256 goto label4;

        $l10 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$000(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r3);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l10);

     label4:
        $i7 = i0 & 512;

        if $i7 != 512 goto label5;

        $l11 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$100(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r3);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l11);

     label5:
        $i6 = i0 & 1024;

        if $i6 != 1024 goto label6;

        $r7 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: com.coremedia.iso.boxes.fragment.SampleFlags access$200(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r3);

        virtualinvoke $r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void getContent(java.nio.ByteBuffer)>(r1);

     label6:
        $i9 = i0 & 2048;

        if $i9 != 2048 goto label7;

        $i8 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: int access$300(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

     label7:
        goto label3;

     label8:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.nio.ByteBuffer r1;
        long l0, $l7, $l19, $l20, $l22;
        int i1, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i23;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r2, $r3;
        byte $b8;
        java.util.List $r4;
        com.coremedia.iso.boxes.fragment.SampleFlags $r5, $r7;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i4 = $i3 & 1;

        if $i4 != 1 goto label1;

        $l22 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i23 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l22);

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset> = $i23;

        goto label2;

     label1:
        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset> = -1;

     label2:
        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i6 = $i5 & 4;

        if $i6 != 4 goto label3;

        $r7 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags> = $r7;

     label3:
        i1 = 0;

     label4:
        $l7 = (long) i1;

        $b8 = $l7 cmp l0;

        if $b8 >= 0 goto label9;

        $r3 = new com.coremedia.iso.boxes.fragment.TrackRunBox$Entry;

        specialinvoke $r3.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void <init>()>();

        r2 = $r3;

        $i9 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i11 = $i9 & 256;

        if $i11 != 256 goto label5;

        $l20 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$002(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,long)>(r2, $l20);

     label5:
        $i10 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i13 = $i10 & 512;

        if $i13 != 512 goto label6;

        $l19 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$102(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,long)>(r2, $l19);

     label6:
        $i12 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i15 = $i12 & 1024;

        if $i15 != 1024 goto label7;

        $r5 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r5.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: com.coremedia.iso.boxes.fragment.SampleFlags access$202(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,com.coremedia.iso.boxes.fragment.SampleFlags)>(r2, $r5);

     label7:
        $i14 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i16 = $i14 & 2048;

        if $i16 != 2048 goto label8;

        $i17 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: int access$302(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,int)>(r2, $i17);

     label8:
        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label4;

     label9:
        return;
    }

    public long getSampleCount()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.List $r1;
        int $i0;
        long $l1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public boolean isDataOffsetPresent()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFirstSampleFlagsPresent()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 4;

        if $i1 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSampleSizePresent()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 512;

        if $i1 != 512 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSampleDurationPresent()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 256;

        if $i1 != 256 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSampleFlagsPresent()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 1024;

        if $i1 != 1024 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSampleCompositionTimeOffsetPresent()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 2048;

        if $i1 != 2048 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setDataOffsetPresent(boolean)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 1;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16777214;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleSizePresent(boolean)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 512;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16776703;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleDurationPresent(boolean)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 256;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16776959;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleFlagsPresent(boolean)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 1024;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16776191;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleCompositionTimeOffsetPresent(boolean)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 2048;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16775167;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public int getDataOffset()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $i0 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset>;

        return $i0;
    }

    public com.coremedia.iso.boxes.fragment.SampleFlags getFirstSampleFlags()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        com.coremedia.iso.boxes.fragment.SampleFlags $r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags>;

        return $r1;
    }

    public void setFirstSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        com.coremedia.iso.boxes.fragment.SampleFlags r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r1 := @parameter0: com.coremedia.iso.boxes.fragment.SampleFlags;

        if r1 != null goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 & 16777211;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 | 4;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags> = r1;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.lang.StringBuilder r1, $r2, $r4, $r7, $r9, $r11, $r12, $r15, $r16, $r20;
        java.util.List $r5;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.coremedia.iso.boxes.fragment.SampleFlags $r19;
        java.lang.String $r23;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrackRunBox");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{sampleCount=");

        $r5 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dataOffset=");

        $i1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dataOffsetPresent=");

        $z0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isDataOffsetPresent()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleSizePresent=");

        $z1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleSizePresent()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleDurationPresent=");

        $z2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleDurationPresent()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleFlagsPresentPresent=");

        $z3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleFlagsPresent()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleCompositionTimeOffsetPresent=");

        $z4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleCompositionTimeOffsetPresent()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", firstSampleFlags=");

        $r19 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }

    public void setEntries(java.util.List)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.List r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r1 := @parameter0: java.util.List;

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.fragment.TrackRunBox: java.lang.String TYPE> = "trun";

        return;
    }
}
