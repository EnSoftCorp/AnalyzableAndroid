public class com.android.photos.BitmapRegionTileSource extends java.lang.Object implements com.android.photos.views.TiledImageRenderer$TileSource
{
    private static final java.lang.String TAG;
    private static final boolean REUSE_BITMAP;
    private static final int GL_SIZE_LIMIT;
    private static final int MAX_PREVIEW_SIZE;
    android.graphics.BitmapRegionDecoder mDecoder;
    int mWidth;
    int mHeight;
    int mTileSize;
    private com.android.gallery3d.glrenderer.BasicTexture mPreview;
    private final int mRotation;
    private android.graphics.Rect mWantRegion;
    private android.graphics.Rect mOverlapRegion;
    private android.graphics.BitmapFactory$Options mOptions;
    private android.graphics.Canvas mCanvas;

    public void <init>(android.content.Context, java.lang.String, int, int)
    {
        com.android.photos.BitmapRegionTileSource r0;
        android.content.Context r1;
        java.lang.String r2, $r19;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, i13;
        java.io.IOException r3, $r21;
        android.graphics.Rect $r4, $r5;
        android.graphics.BitmapRegionDecoder $r6, $r7, $r8;
        android.graphics.BitmapFactory$Options $r9, $r11, $r12, $r13;
        android.graphics.Bitmap$Config $r10;
        byte[] $r14;
        java.lang.Object[] $r15;
        java.lang.Integer $r16, $r17, $r18, $r20;
        com.android.gallery3d.glrenderer.BitmapTexture $r22;
        android.graphics.Bitmap r23;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mOverlapRegion> = $r5;

        $i2 = staticinvoke <com.android.photos.views.TiledImageRenderer: int suggestedTileSize(android.content.Context)>(r1);

        r0.<com.android.photos.BitmapRegionTileSource: int mTileSize> = $i2;

        r0.<com.android.photos.BitmapRegionTileSource: int mRotation> = i1;

     label1:
        $r6 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>(r2, 1);

        r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapRegionDecoder mDecoder> = $r6;

        $r7 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapRegionDecoder mDecoder>;

        $i3 = virtualinvoke $r7.<android.graphics.BitmapRegionDecoder: int getWidth()>();

        r0.<com.android.photos.BitmapRegionTileSource: int mWidth> = $i3;

        $r8 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapRegionDecoder mDecoder>;

        $i4 = virtualinvoke $r8.<android.graphics.BitmapRegionDecoder: int getHeight()>();

        r0.<com.android.photos.BitmapRegionTileSource: int mHeight> = $i4;

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        r3 = $r21;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapRegionTileSource", "ctor failed", r3);

     label4:
        $r9 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r9.<android.graphics.BitmapFactory$Options: void <init>()>();

        r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions> = $r9;

        $r12 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r12.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r10;

        $r11 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r11.<android.graphics.BitmapFactory$Options: boolean inPreferQualityOverSpeed> = 1;

        $r13 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r14 = newarray (byte)[16384];

        $r13.<android.graphics.BitmapFactory$Options: byte[] inTempStorage> = $r14;

        if i0 == 0 goto label6;

        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i0, 1024);

        r23 = specialinvoke r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Bitmap decodePreview(java.lang.String,int)>(r2, i13);

        $i5 = virtualinvoke r23.<android.graphics.Bitmap: int getWidth()>();

        if $i5 > 2048 goto label5;

        $i12 = virtualinvoke r23.<android.graphics.Bitmap: int getHeight()>();

        if $i12 > 2048 goto label5;

        $r22 = new com.android.gallery3d.glrenderer.BitmapTexture;

        specialinvoke $r22.<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap)>(r23);

        r0.<com.android.photos.BitmapRegionTileSource: com.android.gallery3d.glrenderer.BasicTexture mPreview> = $r22;

        goto label6;

     label5:
        $r15 = newarray (java.lang.Object)[4];

        $i6 = r0.<com.android.photos.BitmapRegionTileSource: int mWidth>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r15[0] = $r16;

        $i7 = r0.<com.android.photos.BitmapRegionTileSource: int mHeight>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r15[1] = $r17;

        $i8 = virtualinvoke r23.<android.graphics.Bitmap: int getWidth()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r15[2] = $r18;

        $i10 = virtualinvoke r23.<android.graphics.Bitmap: int getHeight()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r15[3] = $r20;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to create preview of apropriate size!  in: %dx%d, out: %dx%d", $r15);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapRegionTileSource", $r19);

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getTileSize()
    {
        com.android.photos.BitmapRegionTileSource r0;
        int $i0;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        $i0 = r0.<com.android.photos.BitmapRegionTileSource: int mTileSize>;

        return $i0;
    }

    public int getImageWidth()
    {
        com.android.photos.BitmapRegionTileSource r0;
        int $i0;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        $i0 = r0.<com.android.photos.BitmapRegionTileSource: int mWidth>;

        return $i0;
    }

    public int getImageHeight()
    {
        com.android.photos.BitmapRegionTileSource r0;
        int $i0;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        $i0 = r0.<com.android.photos.BitmapRegionTileSource: int mHeight>;

        return $i0;
    }

    public com.android.gallery3d.glrenderer.BasicTexture getPreview()
    {
        com.android.photos.BitmapRegionTileSource r0;
        com.android.gallery3d.glrenderer.BasicTexture $r1;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        $r1 = r0.<com.android.photos.BitmapRegionTileSource: com.android.gallery3d.glrenderer.BasicTexture mPreview>;

        return $r1;
    }

    public int getRotation()
    {
        com.android.photos.BitmapRegionTileSource r0;
        int $i0;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        $i0 = r0.<com.android.photos.BitmapRegionTileSource: int mRotation>;

        return $i0;
    }

    public android.graphics.Bitmap getTile(int, int, int, android.graphics.Bitmap)
    {
        com.android.photos.BitmapRegionTileSource r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.graphics.Bitmap r1, $r9, $r13, $r16, $r17, $r21, r22;
        java.lang.Throwable r2, $r15;
        boolean $z0;
        android.graphics.Rect $r3, $r6;
        android.graphics.BitmapFactory$Options $r4, $r5, $r7, $r10, $r11, $r12, $r18, $r19, $r20;
        android.graphics.BitmapRegionDecoder $r8;
        android.graphics.Bitmap$Config $r14;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.graphics.Bitmap;

        i3 = virtualinvoke r0.<com.android.photos.BitmapRegionTileSource: int getTileSize()>();

        $z0 = <com.android.photos.BitmapRegionTileSource: boolean REUSE_BITMAP>;

        if $z0 != 0 goto label1;

        $r16 = specialinvoke r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Bitmap getTileWithoutReusingBitmap(int,int,int,int)>(i0, i1, i2, i3);

        return $r16;

     label1:
        i4 = i3 << i0;

        $r3 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion>;

        $i6 = i1 + i4;

        $i5 = i2 + i4;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(i1, i2, $i6, $i5);

        if r1 != null goto label2;

        $r14 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i3, $r14);

     label2:
        $r4 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $i7 = 1 << i0;

        $r4.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i7;

        $r5 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r5.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = r1;

     label3:
        $r8 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapRegionDecoder mDecoder>;

        $r6 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion>;

        $r7 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        r22 = virtualinvoke $r8.<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r6, $r7);

     label4:
        $r10 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r9 = $r10.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r9 == r22 goto label8;

        $r11 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r13 = $r11.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r13 == null goto label8;

        $r12 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r12.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

        goto label8;

     label5:
        $r15 := @caughtexception;

        r2 = $r15;

     label6:
        $r18 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r17 = $r18.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r17 == r1 goto label7;

        $r20 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r21 = $r20.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r21 == null goto label7;

        $r19 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r19.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

     label7:
        throw r2;

     label8:
        if r22 != null goto label9;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapRegionTileSource", "fail in decoding region");

     label9:
        return r22;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private android.graphics.Bitmap getTileWithoutReusingBitmap(int, int, int, int)
    {
        com.android.photos.BitmapRegionTileSource r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.graphics.Bitmap r1, r2;
        android.graphics.Rect $r3, $r4, $r6, $r9, $r10, $r13, $r15, $r16, $r17;
        android.graphics.BitmapFactory$Options $r5, $r7;
        android.graphics.BitmapRegionDecoder $r8;
        android.graphics.Bitmap$Config $r11;
        boolean $z0;
        android.graphics.Canvas $r12, $r14, $r18, $r19, $r20;
        float $f0, $f1;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = i3 << i0;

        $r3 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion>;

        $i6 = i1 + i4;

        $i5 = i2 + i4;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(i1, i2, $i6, $i5);

        $r4 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mOverlapRegion>;

        $i8 = r0.<com.android.photos.BitmapRegionTileSource: int mWidth>;

        $i7 = r0.<com.android.photos.BitmapRegionTileSource: int mHeight>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i8, $i7);

        $r5 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $i9 = 1 << i0;

        $r5.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i9;

        $r8 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapRegionDecoder mDecoder>;

        $r6 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mOverlapRegion>;

        $r7 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        r1 = virtualinvoke $r8.<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r6, $r7);

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapRegionTileSource", "fail in decoding region");

     label1:
        $r9 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion>;

        $r10 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mOverlapRegion>;

        $z0 = virtualinvoke $r9.<android.graphics.Rect: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label2;

        return r1;

     label2:
        $r11 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i3, $r11);

        $r12 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Canvas mCanvas>;

        if $r12 != null goto label3;

        $r19 = new android.graphics.Canvas;

        specialinvoke $r19.<android.graphics.Canvas: void <init>()>();

        r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Canvas mCanvas> = $r19;

     label3:
        $r14 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Canvas mCanvas>;

        virtualinvoke $r14.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r2);

        $r20 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Canvas mCanvas>;

        $r13 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mOverlapRegion>;

        $i12 = $r13.<android.graphics.Rect: int left>;

        $r15 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion>;

        $i10 = $r15.<android.graphics.Rect: int left>;

        $i11 = $i12 - $i10;

        $i14 = $i11 >> i0;

        $f1 = (float) $i14;

        $r17 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mOverlapRegion>;

        $i16 = $r17.<android.graphics.Rect: int top>;

        $r16 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Rect mWantRegion>;

        $i13 = $r16.<android.graphics.Rect: int top>;

        $i17 = $i16 - $i13;

        $i15 = $i17 >> i0;

        $f0 = (float) $i15;

        virtualinvoke $r20.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r1, $f1, $f0, null);

        $r18 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.Canvas mCanvas>;

        virtualinvoke $r18.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r2;
    }

    private android.graphics.Bitmap decodePreview(java.lang.String, int)
    {
        com.android.photos.BitmapRegionTileSource r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, $f1, $f2, $f3, $f4, f5;
        android.graphics.Bitmap r2, $r6;
        android.graphics.BitmapFactory$Options $r3, $r4, $r5;
        byte $b8;
        double $d0;

        r0 := @this: com.android.photos.BitmapRegionTileSource;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $f1 = (float) i0;

        $i2 = r0.<com.android.photos.BitmapRegionTileSource: int mWidth>;

        $i1 = r0.<com.android.photos.BitmapRegionTileSource: int mHeight>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        $f2 = (float) $i3;

        f0 = $f1 / $f2;

        $r3 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $i4 = staticinvoke <com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(float)>(f0);

        $r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i4;

        $r4 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        $r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r5 = r0.<com.android.photos.BitmapRegionTileSource: android.graphics.BitmapFactory$Options mOptions>;

        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>(r1, $r5);

        if r2 != null goto label1;

        return null;

     label1:
        $f3 = (float) i0;

        $i6 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        $i5 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);

        $f4 = (float) $i7;

        f5 = $f3 / $f4;

        $d0 = (double) f5;

        $b8 = $d0 cmpg 0.5;

        if $b8 > 0 goto label2;

        r2 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>(r2, f5, 1);

     label2:
        $r6 = staticinvoke <com.android.photos.BitmapRegionTileSource: android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)>(r2);

        return $r6;
    }

    private static android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0, r1;
        android.graphics.Bitmap$Config $r2, $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if $r2 == null goto label2;

     label1:
        return r0;

     label2:
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r3, 0);

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

        return r1;
    }

    static void <clinit>()
    {
        int $i0;
        boolean $z0;

        <com.android.photos.BitmapRegionTileSource: int MAX_PREVIEW_SIZE> = 1024;

        <com.android.photos.BitmapRegionTileSource: int GL_SIZE_LIMIT> = 2048;

        <com.android.photos.BitmapRegionTileSource: java.lang.String TAG> = "BitmapRegionTileSource";

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <com.android.photos.BitmapRegionTileSource: boolean REUSE_BITMAP> = $z0;

        return;
    }
}
