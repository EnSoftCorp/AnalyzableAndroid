public class com.android.photos.data.AlbumSetLoader extends java.lang.Object
{
    public static final int INDEX_ID;
    public static final int INDEX_TITLE;
    public static final int INDEX_TIMESTAMP;
    public static final int INDEX_THUMBNAIL_URI;
    public static final int INDEX_THUMBNAIL_WIDTH;
    public static final int INDEX_THUMBNAIL_HEIGHT;
    public static final int INDEX_COUNT_PENDING_UPLOAD;
    public static final int INDEX_COUNT;
    public static final int INDEX_SUPPORTED_OPERATIONS;
    public static final java.lang.String[] PROJECTION;
    public static final android.database.MatrixCursor MOCK;

    public void <init>()
    {
        com.android.photos.data.AlbumSetLoader r0;

        r0 := @this: com.android.photos.data.AlbumSetLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.database.MatrixCursor createRandomCursor(int)
    {
        int i0, i1;
        android.database.MatrixCursor r0, $r1;
        java.lang.String[] $r2;
        java.lang.Object[] $r3;

        i0 := @parameter0: int;

        $r1 = new android.database.MatrixCursor;

        $r2 = <com.android.photos.data.AlbumSetLoader: java.lang.String[] PROJECTION>;

        specialinvoke $r1.<android.database.MatrixCursor: void <init>(java.lang.String[],int)>($r2, i0);

        r0 = $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = staticinvoke <com.android.photos.data.AlbumSetLoader: java.lang.Object[] createRandomRow()>();

        virtualinvoke r0.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static java.lang.Object[] createRandomRow()
    {
        double d0, $d1, $d2, $d3;
        int i0;
        java.lang.Object[] r0, $r1;
        java.lang.Integer $r2, $r8, $r9, $r10, $r11, $r12;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        long $l1, $l2;
        java.lang.Long $r7;
        byte $b4, $b5;

        d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = 500.0 * d0;

        i0 = (int) $d1;

        $r1 = newarray (java.lang.Object)[9];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fun times ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[1] = $r6;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d3 = (double) $l1;

        $d2 = $d3 * d0;

        $l2 = (long) $d2;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1[2] = $r7;

        $r1[3] = null;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[4] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[5] = $r9;

        $b4 = d0 cmpg 0.3;

        if $b4 >= 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b5);

        $r1[6] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[7] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[8] = $r12;

        r0 = $r1;

        return r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.database.MatrixCursor $r1;

        <com.android.photos.data.AlbumSetLoader: int INDEX_SUPPORTED_OPERATIONS> = 8;

        <com.android.photos.data.AlbumSetLoader: int INDEX_COUNT> = 7;

        <com.android.photos.data.AlbumSetLoader: int INDEX_COUNT_PENDING_UPLOAD> = 6;

        <com.android.photos.data.AlbumSetLoader: int INDEX_THUMBNAIL_HEIGHT> = 5;

        <com.android.photos.data.AlbumSetLoader: int INDEX_THUMBNAIL_WIDTH> = 4;

        <com.android.photos.data.AlbumSetLoader: int INDEX_THUMBNAIL_URI> = 3;

        <com.android.photos.data.AlbumSetLoader: int INDEX_TIMESTAMP> = 2;

        <com.android.photos.data.AlbumSetLoader: int INDEX_TITLE> = 1;

        <com.android.photos.data.AlbumSetLoader: int INDEX_ID> = 0;

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r0[2] = "timestamp";

        $r0[3] = "thumb_uri";

        $r0[4] = "thumb_width";

        $r0[5] = "thumb_height";

        $r0[6] = "count_pending_upload";

        $r0[7] = "_count";

        $r0[8] = "supported_operations";

        <com.android.photos.data.AlbumSetLoader: java.lang.String[] PROJECTION> = $r0;

        $r1 = staticinvoke <com.android.photos.data.AlbumSetLoader: android.database.MatrixCursor createRandomCursor(int)>(30);

        <com.android.photos.data.AlbumSetLoader: android.database.MatrixCursor MOCK> = $r1;

        return;
    }
}
