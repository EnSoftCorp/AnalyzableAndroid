public class com.android.gallery3d.data.DecodeUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.gallery3d.data.DecodeUtils r0;

        r0 := @this: com.android.gallery3d.data.DecodeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setOptionsMutable(android.graphics.BitmapFactory$Options)
    {
        android.graphics.BitmapFactory$Options r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        $z0 = <com.android.gallery3d.common.ApiHelper: boolean HAS_OPTIONS_IN_MUTABLE>;

        if $z0 == 0 goto label1;

        r0.<android.graphics.BitmapFactory$Options: boolean inMutable> = 1;

     label1:
        return;
    }

    public static android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext, java.io.FileDescriptor, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.FileDescriptor r1;
        android.graphics.BitmapFactory$Options r2, $r6;
        com.android.gallery3d.data.DecodeUtils$DecodeCanceller $r3;
        android.graphics.Bitmap $r4, $r5;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        if r2 != null goto label1;

        $r6 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r6.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r6;

     label1:
        $r3 = new com.android.gallery3d.data.DecodeUtils$DecodeCanceller;

        specialinvoke $r3.<com.android.gallery3d.data.DecodeUtils$DecodeCanceller: void <init>(android.graphics.BitmapFactory$Options)>(r2);

        interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: void setCancelListener(com.android.gallery3d.util.ThreadPool$CancelListener)>($r3);

        staticinvoke <com.android.gallery3d.data.DecodeUtils: void setOptionsMutable(android.graphics.BitmapFactory$Options)>(r2);

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, null, r2);

        $r5 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)>($r4);

        return $r5;
    }

    public static void decodeBounds(com.android.gallery3d.util.ThreadPool$JobContext, java.io.FileDescriptor, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.FileDescriptor r1;
        android.graphics.BitmapFactory$Options r2;
        com.android.gallery3d.data.DecodeUtils$DecodeCanceller $r3;
        boolean $z0;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.gallery3d.common.Utils: void assertTrue(boolean)>($z0);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r3 = new com.android.gallery3d.data.DecodeUtils$DecodeCanceller;

        specialinvoke $r3.<com.android.gallery3d.data.DecodeUtils$DecodeCanceller: void <init>(android.graphics.BitmapFactory$Options)>(r2);

        interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: void setCancelListener(com.android.gallery3d.util.ThreadPool$CancelListener)>($r3);

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, null, r2);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        return;
    }

    public static android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext, byte[], android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        android.graphics.BitmapFactory$Options r2;
        int $i0;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        $i0 = lengthof r1;

        $r3 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext,byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, r1, 0, $i0, r2);

        return $r3;
    }

    public static android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext, byte[], int, int, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        int i0, i1;
        android.graphics.BitmapFactory$Options r2, $r6;
        com.android.gallery3d.data.DecodeUtils$DecodeCanceller $r3;
        android.graphics.Bitmap $r4, $r5;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.graphics.BitmapFactory$Options;

        if r2 != null goto label1;

        $r6 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r6.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r6;

     label1:
        $r3 = new com.android.gallery3d.data.DecodeUtils$DecodeCanceller;

        specialinvoke $r3.<com.android.gallery3d.data.DecodeUtils$DecodeCanceller: void <init>(android.graphics.BitmapFactory$Options)>(r2);

        interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: void setCancelListener(com.android.gallery3d.util.ThreadPool$CancelListener)>($r3);

        staticinvoke <com.android.gallery3d.data.DecodeUtils: void setOptionsMutable(android.graphics.BitmapFactory$Options)>(r2);

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r1, i0, i1, r2);

        $r5 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)>($r4);

        return $r5;
    }

    public static void decodeBounds(com.android.gallery3d.util.ThreadPool$JobContext, byte[], int, int, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        int i0, i1;
        android.graphics.BitmapFactory$Options r2;
        com.android.gallery3d.data.DecodeUtils$DecodeCanceller $r3;
        boolean $z0;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.graphics.BitmapFactory$Options;

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.gallery3d.common.Utils: void assertTrue(boolean)>($z0);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r3 = new com.android.gallery3d.data.DecodeUtils$DecodeCanceller;

        specialinvoke $r3.<com.android.gallery3d.data.DecodeUtils$DecodeCanceller: void <init>(android.graphics.BitmapFactory$Options)>(r2);

        interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: void setCancelListener(com.android.gallery3d.util.ThreadPool$CancelListener)>($r3);

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r1, i0, i1, r2);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        return;
    }

    public static android.graphics.Bitmap decodeThumbnail(com.android.gallery3d.util.ThreadPool$JobContext, java.lang.String, android.graphics.BitmapFactory$Options, int, int)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.lang.String r1;
        android.graphics.BitmapFactory$Options r2;
        int i0, i1;
        java.io.FileInputStream r3, $r7;
        java.io.FileDescriptor r4;
        android.graphics.Bitmap r5;
        java.lang.Throwable r6, $r8;
        java.lang.Exception $r9, r10;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 = null;

     label1:
        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r3 = $r7;

        r4 = virtualinvoke r3.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        r5 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap decodeThumbnail(com.android.gallery3d.util.ThreadPool$JobContext,java.io.FileDescriptor,android.graphics.BitmapFactory$Options,int,int)>(r0, r4, r2, i0, i1);

     label2:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r3);

        return r5;

     label3:
        $r9 := @caughtexception;

        r10 = $r9;

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.Throwable)>("DecodeUtils", r10);

     label4:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r3);

        return null;

     label5:
        $r8 := @caughtexception;

        r6 = $r8;

     label6:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r3);

        throw r6;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.graphics.Bitmap decodeThumbnail(com.android.gallery3d.util.ThreadPool$JobContext, java.io.FileDescriptor, android.graphics.BitmapFactory$Options, int, int)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.FileDescriptor r1;
        android.graphics.BitmapFactory$Options r2, $r6;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11;
        com.android.gallery3d.data.DecodeUtils$DecodeCanceller $r3;
        boolean $z0;
        byte $b10;
        double $d0;
        android.graphics.Bitmap $r5, r7;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r2 != null goto label1;

        $r6 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r6.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r6;

     label1:
        $r3 = new com.android.gallery3d.data.DecodeUtils$DecodeCanceller;

        specialinvoke $r3.<com.android.gallery3d.data.DecodeUtils$DecodeCanceller: void <init>(android.graphics.BitmapFactory$Options)>(r2);

        interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: void setCancelListener(com.android.gallery3d.util.ThreadPool$CancelListener)>($r3);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, null, r2);

        $z0 = interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: boolean isCancelled()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        i2 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        i3 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        if i1 != 2 goto label4;

        $f5 = (float) i0;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);

        $f6 = (float) $i13;

        f0 = $f5 / $f6;

        $i16 = staticinvoke <com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(float)>(f0);

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i16;

        $i17 = r2.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        $i19 = i2 / $i17;

        $i14 = r2.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        $i15 = i3 / $i14;

        $i20 = $i19 * $i15;

        if $i20 <= 640000 goto label3;

        $i18 = i2 * i3;

        $f7 = (float) $i18;

        $f8 = 640000.0F / $f7;

        $f9 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f8);

        $i21 = staticinvoke <com.android.gallery3d.common.BitmapUtils: int computeSampleSize(float)>($f9);

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i21;

     label3:
        goto label5;

     label4:
        $f1 = (float) i0;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i3);

        $f2 = (float) $i5;

        f10 = $f1 / $f2;

        $i6 = staticinvoke <com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(float)>(f10);

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i6;

     label5:
        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        staticinvoke <com.android.gallery3d.data.DecodeUtils: void setOptionsMutable(android.graphics.BitmapFactory$Options)>(r2);

        r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, null, r2);

        if r7 != null goto label6;

        return null;

     label6:
        $f3 = (float) i0;

        if i1 != 2 goto label7;

        $i12 = virtualinvoke r7.<android.graphics.Bitmap: int getWidth()>();

        $i11 = virtualinvoke r7.<android.graphics.Bitmap: int getHeight()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i11);

        goto label8;

     label7:
        $i8 = virtualinvoke r7.<android.graphics.Bitmap: int getWidth()>();

        $i7 = virtualinvoke r7.<android.graphics.Bitmap: int getHeight()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i7);

     label8:
        $f4 = (float) $i9;

        f11 = $f3 / $f4;

        $d0 = (double) f11;

        $b10 = $d0 cmpg 0.5;

        if $b10 > 0 goto label9;

        r7 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>(r7, f11, 1);

     label9:
        $r5 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)>(r7);

        return $r5;
    }

    public static android.graphics.Bitmap decodeIfBigEnough(com.android.gallery3d.util.ThreadPool$JobContext, byte[], android.graphics.BitmapFactory$Options, int)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        android.graphics.BitmapFactory$Options r2, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.gallery3d.data.DecodeUtils$DecodeCanceller $r3;
        boolean $z0;
        android.graphics.Bitmap $r5, $r6;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        i0 := @parameter3: int;

        if r2 != null goto label1;

        $r7 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r7;

     label1:
        $r3 = new com.android.gallery3d.data.DecodeUtils$DecodeCanceller;

        specialinvoke $r3.<com.android.gallery3d.data.DecodeUtils$DecodeCanceller: void <init>(android.graphics.BitmapFactory$Options)>(r2);

        interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: void setCancelListener(com.android.gallery3d.util.ThreadPool$CancelListener)>($r3);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i1 = lengthof r1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r1, 0, $i1, r2);

        $z0 = interfaceinvoke r0.<com.android.gallery3d.util.ThreadPool$JobContext: boolean isCancelled()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $i2 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 < i0 goto label3;

        $i3 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 >= i0 goto label4;

     label3:
        return null;

     label4:
        $i5 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i4 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i6 = staticinvoke <com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(int,int,int)>($i5, $i4, i0);

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i6;

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        staticinvoke <com.android.gallery3d.data.DecodeUtils: void setOptionsMutable(android.graphics.BitmapFactory$Options)>(r2);

        $i7 = lengthof r1;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r1, 0, $i7, r2);

        $r6 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)>($r5);

        return $r6;
    }

    public static android.graphics.Bitmap ensureGLCompatibleBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0, r1;
        android.graphics.Bitmap$Config $r2, $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if $r2 == null goto label2;

     label1:
        return r0;

     label2:
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r3, 0);

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

        return r1;
    }

    public static android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(com.android.gallery3d.util.ThreadPool$JobContext, byte[], int, int, boolean)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        java.lang.Throwable r2, $r10;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6, $r7;
        java.lang.String $r8;
        android.graphics.BitmapRegionDecoder $r9;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        if i0 < 0 goto label1;

        if i1 <= 0 goto label1;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r6;

        $i2 = lengthof r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[2] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("offset = %s, length = %s, bytes = %s", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r9 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(byte[],int,int,boolean)>(r1, i0, i1, z0);

     label3:
        return $r9;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.Throwable)>("DecodeUtils", r2);

        return null;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(com.android.gallery3d.util.ThreadPool$JobContext, java.lang.String, boolean)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        android.graphics.BitmapRegionDecoder $r3;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

     label1:
        $r3 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>(r1, z0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.Throwable)>("DecodeUtils", r2);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(com.android.gallery3d.util.ThreadPool$JobContext, java.io.FileDescriptor, boolean)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.FileDescriptor r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        android.graphics.BitmapRegionDecoder $r3;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.FileDescriptor;

        z0 := @parameter2: boolean;

     label1:
        $r3 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor,boolean)>(r1, z0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.Throwable)>("DecodeUtils", r2);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(com.android.gallery3d.util.ThreadPool$JobContext, java.io.InputStream, boolean)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.InputStream r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        android.graphics.BitmapRegionDecoder $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.InputStream;

        z0 := @parameter2: boolean;

     label1:
        $r3 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>(r1, z0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestCreateBitmapRegionDecoder: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.String)>("DecodeUtils", $r8);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap decodeUsingPool(com.android.gallery3d.util.ThreadPool$JobContext, byte[], int, int, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        android.graphics.BitmapFactory$Options r2, $r11;
        android.graphics.Bitmap r3, $r5, $r6, $r8, $r9, $r12, $r13, $r15;
        android.graphics.Bitmap$Config $r4;
        com.android.photos.data.GalleryBitmapPool $r7, $r14;
        java.lang.IllegalArgumentException $r10, r16;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.graphics.BitmapFactory$Options;

        if r2 != null goto label1;

        $r11 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r11.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r11;

     label1:
        $i2 = r2.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        if $i2 >= 1 goto label2;

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

     label2:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r4;

        $i3 = r2.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        if $i3 != 1 goto label3;

        $r9 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap findCachedBitmap(com.android.gallery3d.util.ThreadPool$JobContext,byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, r1, i0, i1, r2);

        goto label4;

     label3:
        $r9 = null;

     label4:
        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = $r9;

     label5:
        r3 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext,byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, r1, i0, i1, r2);

        $r5 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r5 == null goto label6;

        $r6 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r6 == r3 goto label6;

        $r7 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $r8 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        virtualinvoke $r7.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>($r8);

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

     label6:
        return r3;

     label7:
        $r10 := @caughtexception;

        r16 = $r10;

        $r12 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r12 != null goto label8;

        throw r16;

     label8:
        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.String)>("DecodeUtils", "decode fail with a given bitmap, try decode to a new bitmap");

        $r14 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $r13 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        virtualinvoke $r14.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>($r13);

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

        $r15 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext,byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, r1, i0, i1, r2);

        return $r15;

        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    public static android.graphics.Bitmap decodeUsingPool(com.android.gallery3d.util.ThreadPool$JobContext, java.io.FileDescriptor, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.FileDescriptor r1;
        android.graphics.BitmapFactory$Options r2, $r10;
        android.graphics.Bitmap r3, $r5, $r6, $r8, $r9, $r12, $r13, $r15;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r4;
        com.android.photos.data.GalleryBitmapPool $r7, $r14;
        java.lang.IllegalArgumentException $r11, r16;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        if r2 != null goto label1;

        $r10 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r10.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r10;

     label1:
        $i0 = r2.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        if $i0 >= 1 goto label2;

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

     label2:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r4;

        $i1 = r2.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        if $i1 != 1 goto label3;

        $r9 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap findCachedBitmap(com.android.gallery3d.util.ThreadPool$JobContext,java.io.FileDescriptor,android.graphics.BitmapFactory$Options)>(r0, r1, r2);

        goto label4;

     label3:
        $r9 = null;

     label4:
        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = $r9;

     label5:
        r3 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext,java.io.FileDescriptor,android.graphics.BitmapFactory$Options)>(r0, r1, r2);

        $r5 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r5 == null goto label6;

        $r6 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r6 == r3 goto label6;

        $r7 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $r8 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        virtualinvoke $r7.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>($r8);

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

     label6:
        return r3;

     label7:
        $r11 := @caughtexception;

        r16 = $r11;

        $r12 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r12 != null goto label8;

        throw r16;

     label8:
        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.String)>("DecodeUtils", "decode fail with a given bitmap, try decode to a new bitmap");

        $r14 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $r13 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        virtualinvoke $r14.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>($r13);

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

        $r15 = staticinvoke <com.android.gallery3d.data.DecodeUtils: android.graphics.Bitmap decode(com.android.gallery3d.util.ThreadPool$JobContext,java.io.FileDescriptor,android.graphics.BitmapFactory$Options)>(r0, r1, r2);

        return $r15;

        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    private static android.graphics.Bitmap findCachedBitmap(com.android.gallery3d.util.ThreadPool$JobContext, byte[], int, int, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        android.graphics.BitmapFactory$Options r2;
        com.android.photos.data.GalleryBitmapPool $r3;
        android.graphics.Bitmap $r4;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.graphics.BitmapFactory$Options;

        staticinvoke <com.android.gallery3d.data.DecodeUtils: void decodeBounds(com.android.gallery3d.util.ThreadPool$JobContext,byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, r1, i0, i1, r2);

        $r3 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $i3 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i2 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        $r4 = virtualinvoke $r3.<com.android.photos.data.GalleryBitmapPool: android.graphics.Bitmap get(int,int)>($i3, $i2);

        return $r4;
    }

    private static android.graphics.Bitmap findCachedBitmap(com.android.gallery3d.util.ThreadPool$JobContext, java.io.FileDescriptor, android.graphics.BitmapFactory$Options)
    {
        com.android.gallery3d.util.ThreadPool$JobContext r0;
        java.io.FileDescriptor r1;
        android.graphics.BitmapFactory$Options r2;
        com.android.photos.data.GalleryBitmapPool $r3;
        int $i0, $i1;
        android.graphics.Bitmap $r4;

        r0 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        staticinvoke <com.android.gallery3d.data.DecodeUtils: void decodeBounds(com.android.gallery3d.util.ThreadPool$JobContext,java.io.FileDescriptor,android.graphics.BitmapFactory$Options)>(r0, r1, r2);

        $r3 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $i1 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i0 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        $r4 = virtualinvoke $r3.<com.android.photos.data.GalleryBitmapPool: android.graphics.Bitmap get(int,int)>($i1, $i0);

        return $r4;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.data.DecodeUtils: java.lang.String TAG> = "DecodeUtils";

        return;
    }
}
