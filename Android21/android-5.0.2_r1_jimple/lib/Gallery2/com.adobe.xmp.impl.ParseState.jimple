class com.adobe.xmp.impl.ParseState extends java.lang.Object
{
    private java.lang.String str;
    private int pos;

    public void <init>(java.lang.String)
    {
        com.adobe.xmp.impl.ParseState r0;
        java.lang.String r1;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.adobe.xmp.impl.ParseState: int pos> = 0;

        r0.<com.adobe.xmp.impl.ParseState: java.lang.String str> = r1;

        return;
    }

    public int length()
    {
        com.adobe.xmp.impl.ParseState r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        $r1 = r0.<com.adobe.xmp.impl.ParseState: java.lang.String str>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public boolean hasNext()
    {
        com.adobe.xmp.impl.ParseState r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        $i0 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        $r1 = r0.<com.adobe.xmp.impl.ParseState: java.lang.String str>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public char ch(int)
    {
        com.adobe.xmp.impl.ParseState r0;
        int i0, $i1;
        java.lang.String $r1, $r2;
        char $c2;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        i0 := @parameter0: int;

        $r1 = r0.<com.adobe.xmp.impl.ParseState: java.lang.String str>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<com.adobe.xmp.impl.ParseState: java.lang.String str>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i0);

        goto label2;

     label1:
        $c2 = 0;

     label2:
        return $c2;
    }

    public char ch()
    {
        com.adobe.xmp.impl.ParseState r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        $i0 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        $r1 = r0.<com.adobe.xmp.impl.ParseState: java.lang.String str>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label1;

        $r2 = r0.<com.adobe.xmp.impl.ParseState: java.lang.String str>;

        $i2 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        goto label2;

     label1:
        $c3 = 0;

     label2:
        return $c3;
    }

    public void skip()
    {
        com.adobe.xmp.impl.ParseState r0;
        int $i0, $i1;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        $i0 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        $i1 = $i0 + 1;

        r0.<com.adobe.xmp.impl.ParseState: int pos> = $i1;

        return;
    }

    public int pos()
    {
        com.adobe.xmp.impl.ParseState r0;
        int $i0;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        $i0 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        return $i0;
    }

    public int gatherInt(java.lang.String, int) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.impl.ParseState r0;
        java.lang.String r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        char c2;
        com.adobe.xmp.XMPException $r2;

        r0 := @this: com.adobe.xmp.impl.ParseState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = 0;

        z0 = 0;

        $i3 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        c2 = virtualinvoke r0.<com.adobe.xmp.impl.ParseState: char ch(int)>($i3);

     label1:
        if 48 > c2 goto label2;

        if c2 > 57 goto label2;

        $i5 = i1 * 10;

        $i4 = c2 - 48;

        i1 = $i5 + $i4;

        z0 = 1;

        $i6 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        $i7 = $i6 + 1;

        r0.<com.adobe.xmp.impl.ParseState: int pos> = $i7;

        $i8 = r0.<com.adobe.xmp.impl.ParseState: int pos>;

        c2 = virtualinvoke r0.<com.adobe.xmp.impl.ParseState: char ch(int)>($i8);

        goto label1;

     label2:
        if z0 == 0 goto label5;

        if i1 <= i0 goto label3;

        return i0;

     label3:
        if i1 >= 0 goto label4;

        return 0;

     label4:
        return i1;

     label5:
        $r2 = new com.adobe.xmp.XMPException;

        specialinvoke $r2.<com.adobe.xmp.XMPException: void <init>(java.lang.String,int)>(r1, 5);

        throw $r2;
    }
}
