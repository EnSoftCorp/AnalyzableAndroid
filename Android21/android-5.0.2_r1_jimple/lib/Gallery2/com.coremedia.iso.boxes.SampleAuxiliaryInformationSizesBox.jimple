public class com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private int defaultSampleInfoSize;
    private java.util.List sampleInfoSizes;
    private int sampleCount;
    private java.lang.String auxInfoType;
    private java.lang.String auxInfoTypeParameter;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.util.LinkedList $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("saiz");

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes> = $r1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        int i0, $i1, $i2, $i3, $i5, i6, i7;
        long $l4;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        i0 = 4;

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        i0 = i0 + 8;

     label1:
        i6 = i0 + 5;

        $i3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        if $i3 != 0 goto label2;

        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $i5 = interfaceinvoke $r1.<java.util.List: int size()>();

        goto label3;

     label2:
        $i5 = 0;

     label3:
        i7 = i6 + $i5;

        $l4 = (long) i7;

        return $l4;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.nio.ByteBuffer r1;
        java.util.Iterator r2;
        short s0;
        int $i1, $i2, $i3, $i4, $i5, $i7;
        long $l6, $l8;
        java.util.List $r3, $r4;
        boolean $z0;
        java.lang.Short $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r11;
        byte[] $r9, $r10;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        $r7 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType>;

        $r9 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r7);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r9);

        $r11 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter>;

        $r10 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r11);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r10);

     label1:
        $i3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i3);

        $i4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        if $i4 != 0 goto label4;

        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $i7 = interfaceinvoke $r3.<java.util.List: int size()>();

        $l8 = (long) $i7;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l8);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Short) $r6;

        s0 = virtualinvoke $r5.<java.lang.Short: short shortValue()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, s0);

        goto label2;

     label3:
        goto label5;

     label4:
        $i5 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        $l6 = (long) $i5;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l6);

     label5:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.nio.ByteBuffer r1;
        int i0, $i2, $i3, $i4, $i7, $i8, $i9, $i10;
        short $s5, $s11;
        long $l6;
        java.util.List $r2, $r3;
        java.lang.Short $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int getFlags()>();

        $i3 = $i2 & 1;

        if $i3 != 1 goto label1;

        $r6 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType> = $r6;

        $r5 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter> = $r5;

     label1:
        $i4 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        $s5 = (short) $i4;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize> = $s5;

        $l6 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i7 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l6);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount> = $i7;

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $i8 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        if $i8 != 0 goto label3;

        i0 = 0;

     label2:
        $i9 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        if i0 >= $i9 goto label3;

        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $i10 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        $s11 = (short) $i10;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s11);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public java.lang.String getAuxInfoType()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.String $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType>;

        return $r1;
    }

    public void setAuxInfoType(java.lang.String)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.lang.String;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType> = r1;

        return;
    }

    public java.lang.String getAuxInfoTypeParameter()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.String $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter>;

        return $r1;
    }

    public void setAuxInfoTypeParameter(java.lang.String)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.lang.String;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter> = r1;

        return;
    }

    public int getDefaultSampleInfoSize()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $i0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        return $i0;
    }

    public void setDefaultSampleInfoSize(int)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        int i0;
        boolean $z0;
        java.lang.AssertionError $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        i0 := @parameter0: int;

        $z0 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 <= 255 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize> = i0;

        return;
    }

    public java.util.List getSampleInfoSizes()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        return $r1;
    }

    public void setSampleInfoSizes(java.util.List)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.util.List r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.util.List;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes> = r1;

        return;
    }

    public int getSampleCount()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $i0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        return $i0;
    }

    public void setSampleCount(int)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount> = i0;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r15;
        int $i0, $i1;
        java.lang.String $r7, $r11, $r14;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SampleAuxiliaryInformationSizesBox{defaultSampleInfoSize=");

        $i0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleCount=");

        $i1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", auxInfoType=\'");

        $r7 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", auxInfoTypeParameter=\'");

        $r11 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String TYPE> = "saiz";

        $r0 = class "com/coremedia/iso/boxes/SampleAuxiliaryInformationSizesBox";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: boolean $assertionsDisabled> = $z1;

        return;
    }
}
