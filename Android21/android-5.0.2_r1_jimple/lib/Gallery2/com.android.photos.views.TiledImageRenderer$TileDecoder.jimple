class com.android.photos.views.TiledImageRenderer$TileDecoder extends java.lang.Thread
{
    final com.android.photos.views.TiledImageRenderer this$0;

    private void <init>(com.android.photos.views.TiledImageRenderer)
    {
        com.android.photos.views.TiledImageRenderer$TileDecoder r0;
        com.android.photos.views.TiledImageRenderer r1;

        r0 := @this: com.android.photos.views.TiledImageRenderer$TileDecoder;

        r1 := @parameter0: com.android.photos.views.TiledImageRenderer;

        r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: com.android.photos.views.TiledImageRenderer this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void finishAndWait()
    {
        com.android.photos.views.TiledImageRenderer$TileDecoder r0;
        java.lang.InterruptedException $r2;

        r0 := @this: com.android.photos.views.TiledImageRenderer$TileDecoder;

        virtualinvoke r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: void interrupt()>();

     label1:
        virtualinvoke r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: void join()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TiledImageRenderer", "Interrupted while waiting for TileDecoder thread to finish!");

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private com.android.photos.views.TiledImageRenderer$Tile waitForTile() throws java.lang.InterruptedException
    {
        com.android.photos.views.TiledImageRenderer$TileDecoder r0;
        java.lang.Object r1, $r5, $r9;
        com.android.photos.views.TiledImageRenderer$Tile r2;
        java.lang.Throwable r3, $r10;
        com.android.photos.views.TiledImageRenderer $r4, $r6, $r8;
        com.android.photos.views.TiledImageRenderer$TileQueue $r7;

        r0 := @this: com.android.photos.views.TiledImageRenderer$TileDecoder;

        $r4 = r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: com.android.photos.views.TiledImageRenderer this$0>;

        $r5 = staticinvoke <com.android.photos.views.TiledImageRenderer: java.lang.Object access$700(com.android.photos.views.TiledImageRenderer)>($r4);

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: com.android.photos.views.TiledImageRenderer this$0>;

        $r7 = staticinvoke <com.android.photos.views.TiledImageRenderer: com.android.photos.views.TiledImageRenderer$TileQueue access$800(com.android.photos.views.TiledImageRenderer)>($r6);

        r2 = virtualinvoke $r7.<com.android.photos.views.TiledImageRenderer$TileQueue: com.android.photos.views.TiledImageRenderer$Tile pop()>();

        if r2 == null goto label3;

        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r8 = r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: com.android.photos.views.TiledImageRenderer this$0>;

        $r9 = staticinvoke <com.android.photos.views.TiledImageRenderer: java.lang.Object access$700(com.android.photos.views.TiledImageRenderer)>($r8);

        virtualinvoke $r9.<java.lang.Object: void wait()>();

        goto label1;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public void run()
    {
        com.android.photos.views.TiledImageRenderer$TileDecoder r0;
        com.android.photos.views.TiledImageRenderer$Tile r1;
        boolean $z0;
        com.android.photos.views.TiledImageRenderer $r2;
        java.lang.InterruptedException $r3;

        r0 := @this: com.android.photos.views.TiledImageRenderer$TileDecoder;

     label1:
        $z0 = virtualinvoke r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: boolean isInterrupted()>();

        if $z0 != 0 goto label2;

        r1 = specialinvoke r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: com.android.photos.views.TiledImageRenderer$Tile waitForTile()>();

        $r2 = r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: com.android.photos.views.TiledImageRenderer this$0>;

        staticinvoke <com.android.photos.views.TiledImageRenderer: void access$900(com.android.photos.views.TiledImageRenderer,com.android.photos.views.TiledImageRenderer$Tile)>($r2, r1);

        goto label1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    void <init>(com.android.photos.views.TiledImageRenderer, com.android.photos.views.TiledImageRenderer$1)
    {
        com.android.photos.views.TiledImageRenderer$TileDecoder r0;
        com.android.photos.views.TiledImageRenderer r1;
        com.android.photos.views.TiledImageRenderer$1 r2;

        r0 := @this: com.android.photos.views.TiledImageRenderer$TileDecoder;

        r1 := @parameter0: com.android.photos.views.TiledImageRenderer;

        r2 := @parameter1: com.android.photos.views.TiledImageRenderer$1;

        specialinvoke r0.<com.android.photos.views.TiledImageRenderer$TileDecoder: void <init>(com.android.photos.views.TiledImageRenderer)>(r1);

        return;
    }
}
