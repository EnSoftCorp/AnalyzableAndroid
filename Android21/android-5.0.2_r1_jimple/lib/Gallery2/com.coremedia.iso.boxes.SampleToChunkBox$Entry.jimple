public class com.coremedia.iso.boxes.SampleToChunkBox$Entry extends java.lang.Object
{
    long firstChunk;
    long samplesPerChunk;
    long sampleDescriptionIndex;

    public void <init>(long, long, long)
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long l0, l1, l2;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk> = l0;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk> = l1;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex> = l2;

        return;
    }

    public long getFirstChunk()
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        return $l0;
    }

    public void setFirstChunk(long)
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk> = l0;

        return;
    }

    public long getSamplesPerChunk()
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        return $l0;
    }

    public void setSamplesPerChunk(long)
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk> = l0;

        return;
    }

    public long getSampleDescriptionIndex()
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        return $l0;
    }

    public void setSampleDescriptionIndex(long)
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex> = l0;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        long $l0, $l1, $l2;
        java.lang.String $r9;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry{firstChunk=");

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", samplesPerChunk=");

        $l1 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleDescriptionIndex=");

        $l2 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
