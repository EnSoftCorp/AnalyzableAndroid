public final class android.support.v8.renderscript.ScriptGroup$Builder extends java.lang.Object
{
    private android.support.v8.renderscript.RenderScript mRS;
    private java.util.ArrayList mNodes;
    private java.util.ArrayList mLines;
    private int mKernelCount;
    private android.support.v8.renderscript.ScriptGroupThunker$Builder mT;

    public void <init>(android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.RenderScript r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;
        android.support.v8.renderscript.ScriptGroupThunker$Builder $r4;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines> = $r3;

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 == 0 goto label1;

        $r4 = new android.support.v8.renderscript.ScriptGroupThunker$Builder;

        specialinvoke $r4.<android.support.v8.renderscript.ScriptGroupThunker$Builder: void <init>(android.support.v8.renderscript.RenderScript)>(r1);

        r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT> = $r4;

     label1:
        r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS> = r1;

        return;
    }

    private void validateCycle(android.support.v8.renderscript.ScriptGroup$Node, android.support.v8.renderscript.ScriptGroup$Node)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.ScriptGroup$Node r1, r2, r4, r16;
        int i0, $i1;
        android.support.v8.renderscript.ScriptGroup$ConnectLine r3;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;
        android.support.v8.renderscript.Script$KernelID $r8, $r12;
        android.support.v8.renderscript.Script$FieldID $r9, $r10;
        android.support.v8.renderscript.Script $r11, $r14;
        boolean $z0, $z1;
        android.support.v8.renderscript.RSInvalidStateException $r13, $r15;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.ScriptGroup$Node;

        r2 := @parameter1: android.support.v8.renderscript.ScriptGroup$Node;

        i0 = 0;

     label1:
        $r5 = r1.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label6;

        $r6 = r1.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (android.support.v8.renderscript.ScriptGroup$ConnectLine) $r7;

        $r8 = r3.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        if $r8 == null goto label3;

        $r12 = r3.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        $r14 = $r12.<android.support.v8.renderscript.Script$KernelID: android.support.v8.renderscript.Script mScript>;

        r4 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)>($r14);

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r15 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r15.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Loops in group not allowed.");

        throw $r15;

     label2:
        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateCycle(android.support.v8.renderscript.ScriptGroup$Node,android.support.v8.renderscript.ScriptGroup$Node)>(r4, r2);

     label3:
        $r9 = r3.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$FieldID mToF>;

        if $r9 == null goto label5;

        $r10 = r3.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$FieldID mToF>;

        $r11 = $r10.<android.support.v8.renderscript.Script$FieldID: android.support.v8.renderscript.Script mScript>;

        r16 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)>($r11);

        $z0 = virtualinvoke r16.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        $r13 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r13.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Loops in group not allowed.");

        throw $r13;

     label4:
        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateCycle(android.support.v8.renderscript.ScriptGroup$Node,android.support.v8.renderscript.ScriptGroup$Node)>(r16, r2);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;
    }

    private void mergeDAGs(int, int)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList $r1, $r2, $r5;
        java.lang.Object $r3, $r6;
        android.support.v8.renderscript.ScriptGroup$Node $r4, $r7;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = 0;

     label1:
        $r1 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label3;

        $r2 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.support.v8.renderscript.ScriptGroup$Node) $r3;

        $i4 = $r4.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber>;

        if $i4 != i1 goto label2;

        $r5 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (android.support.v8.renderscript.ScriptGroup$Node) $r6;

        $r7.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber> = i0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void validateDAGRecurse(android.support.v8.renderscript.ScriptGroup$Node, int)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.ScriptGroup$Node r1, r3, r13;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.support.v8.renderscript.ScriptGroup$ConnectLine r2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.support.v8.renderscript.Script$KernelID $r7, $r12;
        android.support.v8.renderscript.Script$FieldID $r8, $r9;
        android.support.v8.renderscript.Script $r10, $r11;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.ScriptGroup$Node;

        i0 := @parameter1: int;

        $i2 = r1.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber>;

        if $i2 == 0 goto label1;

        $i4 = r1.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber>;

        if $i4 == i0 goto label1;

        $i5 = r1.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber>;

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void mergeDAGs(int,int)>($i5, i0);

        return;

     label1:
        r1.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber> = i0;

        i1 = 0;

     label2:
        $r4 = r1.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label5;

        $r5 = r1.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.support.v8.renderscript.ScriptGroup$ConnectLine) $r6;

        $r7 = r2.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        if $r7 == null goto label3;

        $r12 = r2.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        $r11 = $r12.<android.support.v8.renderscript.Script$KernelID: android.support.v8.renderscript.Script mScript>;

        r3 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)>($r11);

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateDAGRecurse(android.support.v8.renderscript.ScriptGroup$Node,int)>(r3, i0);

     label3:
        $r8 = r2.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$FieldID mToF>;

        if $r8 == null goto label4;

        $r9 = r2.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$FieldID mToF>;

        $r10 = $r9.<android.support.v8.renderscript.Script$FieldID: android.support.v8.renderscript.Script mScript>;

        r13 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)>($r10);

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateDAGRecurse(android.support.v8.renderscript.ScriptGroup$Node,int)>(r13, i0);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return;
    }

    private void validateDAG()
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.support.v8.renderscript.ScriptGroup$Node r1, $r5, $r9;
        java.util.ArrayList $r2, $r3, $r6, $r7, $r11, $r12, $r14, $r15;
        java.lang.Object $r4, $r8, $r13;
        android.support.v8.renderscript.RSInvalidStateException $r10, $r16;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        i0 = 0;

     label1:
        $r2 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label4;

        $r11 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (android.support.v8.renderscript.ScriptGroup$Node) $r13;

        $r12 = r1.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mInputs>;

        $i4 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label3;

        $r14 = r1.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $i6 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i6 != 0 goto label2;

        $r15 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i7 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i7 <= 1 goto label2;

        $r16 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r16.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Groups cannot contain unconnected scripts");

        throw $r16;

     label2:
        $i5 = i0 + 1;

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateDAGRecurse(android.support.v8.renderscript.ScriptGroup$Node,int)>(r1, $i5);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = (android.support.v8.renderscript.ScriptGroup$Node) $r4;

        i8 = $r5.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber>;

        i9 = 0;

     label5:
        $r6 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i9 >= $i2 goto label7;

        $r7 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r9 = (android.support.v8.renderscript.ScriptGroup$Node) $r8;

        $i3 = $r9.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber>;

        if $i3 == i8 goto label6;

        $r10 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r10.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Multiple DAGs in group not allowed.");

        throw $r10;

     label6:
        i9 = i9 + 1;

        goto label5;

     label7:
        return;
    }

    private android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.Script r1, $r6;
        int i0, $i1;
        java.util.ArrayList $r2, $r3, $r7;
        java.lang.Object $r4, $r8;
        android.support.v8.renderscript.ScriptGroup$Node $r5, $r9;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.Script;

        i0 = 0;

     label1:
        $r2 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (android.support.v8.renderscript.ScriptGroup$Node) $r4;

        $r6 = $r5.<android.support.v8.renderscript.ScriptGroup$Node: android.support.v8.renderscript.Script mScript>;

        if r1 != $r6 goto label2;

        $r7 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (android.support.v8.renderscript.ScriptGroup$Node) $r8;

        return $r9;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    private android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script$KernelID)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.Script$KernelID r1;
        int i0, i1, $i2, $i3;
        android.support.v8.renderscript.ScriptGroup$Node r2;
        java.util.ArrayList $r3, $r4, $r6, $r7;
        java.lang.Object $r5, $r8;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.Script$KernelID;

        i0 = 0;

     label1:
        $r3 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label5;

        $r4 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.support.v8.renderscript.ScriptGroup$Node) $r5;

        i1 = 0;

     label2:
        $r6 = r2.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mKernels>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label4;

        $r7 = r2.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mKernels>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        if r1 != $r8 goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return null;
    }

    public android.support.v8.renderscript.ScriptGroup$Builder addKernel(android.support.v8.renderscript.Script$KernelID)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.Script$KernelID r1;
        android.support.v8.renderscript.ScriptGroup$Node r2, $r5, $r8;
        android.support.v8.renderscript.ScriptGroupThunker$Builder $r3, $r13;
        java.util.ArrayList $r4, $r7, $r10;
        int $i0, $i1, $i2;
        android.support.v8.renderscript.Script $r6, $r9;
        android.support.v8.renderscript.RSInvalidStateException $r11;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.Script$KernelID;

        $r3 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        if $r3 == null goto label1;

        $r13 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        virtualinvoke $r13.<android.support.v8.renderscript.ScriptGroupThunker$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder addKernel(android.support.v8.renderscript.Script$KernelID)>(r1);

        return r0;

     label1:
        $r4 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label2;

        $r11 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r11.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Kernels may not be added once connections exist.");

        throw $r11;

     label2:
        $r5 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script$KernelID)>(r1);

        if $r5 == null goto label3;

        return r0;

     label3:
        $i1 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: int mKernelCount>;

        $i2 = $i1 + 1;

        r0.<android.support.v8.renderscript.ScriptGroup$Builder: int mKernelCount> = $i2;

        $r6 = r1.<android.support.v8.renderscript.Script$KernelID: android.support.v8.renderscript.Script mScript>;

        r2 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)>($r6);

        if r2 != null goto label4;

        $r8 = new android.support.v8.renderscript.ScriptGroup$Node;

        $r9 = r1.<android.support.v8.renderscript.Script$KernelID: android.support.v8.renderscript.Script mScript>;

        specialinvoke $r8.<android.support.v8.renderscript.ScriptGroup$Node: void <init>(android.support.v8.renderscript.Script)>($r9);

        r2 = $r8;

        $r10 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label4:
        $r7 = r2.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mKernels>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.support.v8.renderscript.ScriptGroup$Builder addConnection(android.support.v8.renderscript.Type, android.support.v8.renderscript.Script$KernelID, android.support.v8.renderscript.Script$FieldID)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.Type r1;
        android.support.v8.renderscript.Script$KernelID r2;
        android.support.v8.renderscript.Script$FieldID r3;
        android.support.v8.renderscript.ScriptGroup$Node r4, r5;
        android.support.v8.renderscript.ScriptGroup$ConnectLine r6, $r9, $r10;
        android.support.v8.renderscript.ScriptGroupThunker$Builder $r7, $r15;
        android.support.v8.renderscript.Script $r8;
        java.util.ArrayList $r11, $r12, $r13;
        android.support.v8.renderscript.RSInvalidStateException $r14, $r16;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.Type;

        r2 := @parameter1: android.support.v8.renderscript.Script$KernelID;

        r3 := @parameter2: android.support.v8.renderscript.Script$FieldID;

        $r7 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        if $r7 == null goto label1;

        $r15 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        virtualinvoke $r15.<android.support.v8.renderscript.ScriptGroupThunker$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder addConnection(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$FieldID)>(r1, r2, r3);

        return r0;

     label1:
        r4 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script$KernelID)>(r2);

        if r4 != null goto label2;

        $r16 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r16.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("From script not found.");

        throw $r16;

     label2:
        $r8 = r3.<android.support.v8.renderscript.Script$FieldID: android.support.v8.renderscript.Script mScript>;

        r5 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script)>($r8);

        if r5 != null goto label3;

        $r14 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r14.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("To script not found.");

        throw $r14;

     label3:
        $r9 = new android.support.v8.renderscript.ScriptGroup$ConnectLine;

        specialinvoke $r9.<android.support.v8.renderscript.ScriptGroup$ConnectLine: void <init>(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$FieldID)>(r1, r2, r3);

        r6 = $r9;

        $r11 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $r10 = new android.support.v8.renderscript.ScriptGroup$ConnectLine;

        specialinvoke $r10.<android.support.v8.renderscript.ScriptGroup$ConnectLine: void <init>(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$FieldID)>(r1, r2, r3);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r12 = r4.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        $r13 = r5.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mInputs>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateCycle(android.support.v8.renderscript.ScriptGroup$Node,android.support.v8.renderscript.ScriptGroup$Node)>(r4, r4);

        return r0;
    }

    public android.support.v8.renderscript.ScriptGroup$Builder addConnection(android.support.v8.renderscript.Type, android.support.v8.renderscript.Script$KernelID, android.support.v8.renderscript.Script$KernelID)
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        android.support.v8.renderscript.Type r1;
        android.support.v8.renderscript.Script$KernelID r2, r3;
        android.support.v8.renderscript.ScriptGroup$Node r4, r5;
        android.support.v8.renderscript.ScriptGroup$ConnectLine r6, $r8, $r9;
        android.support.v8.renderscript.ScriptGroupThunker$Builder $r7, $r16;
        java.util.ArrayList $r10, $r11, $r12;
        android.support.v8.renderscript.RSInvalidStateException $r13, $r14;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        r1 := @parameter0: android.support.v8.renderscript.Type;

        r2 := @parameter1: android.support.v8.renderscript.Script$KernelID;

        r3 := @parameter2: android.support.v8.renderscript.Script$KernelID;

        $r7 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        if $r7 == null goto label1;

        $r16 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        virtualinvoke $r16.<android.support.v8.renderscript.ScriptGroupThunker$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder addConnection(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$KernelID)>(r1, r2, r3);

        return r0;

     label1:
        r4 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script$KernelID)>(r2);

        if r4 != null goto label2;

        $r13 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r13.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("From script not found.");

        throw $r13;

     label2:
        r5 = specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script$KernelID)>(r3);

        if r5 != null goto label3;

        $r14 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r14.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("To script not found.");

        throw $r14;

     label3:
        $r8 = new android.support.v8.renderscript.ScriptGroup$ConnectLine;

        specialinvoke $r8.<android.support.v8.renderscript.ScriptGroup$ConnectLine: void <init>(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$KernelID)>(r1, r2, r3);

        r6 = $r8;

        $r10 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $r9 = new android.support.v8.renderscript.ScriptGroup$ConnectLine;

        specialinvoke $r9.<android.support.v8.renderscript.ScriptGroup$ConnectLine: void <init>(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$KernelID)>(r1, r2, r3);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r11 = r4.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        $r12 = r5.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mInputs>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateCycle(android.support.v8.renderscript.ScriptGroup$Node,android.support.v8.renderscript.ScriptGroup$Node)>(r4, r4);

        return r0;
    }

    public android.support.v8.renderscript.ScriptGroup create()
    {
        android.support.v8.renderscript.ScriptGroup$Builder r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32;
        java.util.ArrayList r1, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r27, $r40, $r41, $r44, $r45, $r46, $r50, $r56, $r60, r65;
        int[] r2, r66, r67, r68, r69;
        android.support.v8.renderscript.ScriptGroup$Node r3, $r58;
        android.support.v8.renderscript.Script$KernelID r4, $r30, $r31, $r42, $r51, $r61;
        boolean z0, z1;
        android.support.v8.renderscript.ScriptGroupThunker$Builder $r5, $r63;
        android.support.v8.renderscript.ScriptGroup $r16, r71;
        android.support.v8.renderscript.RenderScript $r17, $r19, $r32, $r34, $r36, $r38, $r48;
        android.support.v8.renderscript.ScriptGroup$IO[] $r18, $r20, $r21, $r22;
        java.lang.Object $r23, $r24, $r26, $r39, $r47, $r49, $r55, $r59;
        android.support.v8.renderscript.ScriptGroup$IO $r25, $r29, $r53, $r54;
        android.support.v8.renderscript.RSRuntimeException $r28, $r43;
        android.support.v8.renderscript.Type $r33;
        android.support.v8.renderscript.Script$FieldID $r35, $r37;
        android.support.v8.renderscript.ScriptGroup$ConnectLine $r52, $r62, r70;
        android.support.v8.renderscript.RSInvalidStateException $r57;
        android.support.v8.renderscript.ScriptGroupThunker $r64;

        r0 := @this: android.support.v8.renderscript.ScriptGroup$Builder;

        $r5 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        if $r5 == null goto label01;

        $r63 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.ScriptGroupThunker$Builder mT>;

        $r64 = virtualinvoke $r63.<android.support.v8.renderscript.ScriptGroupThunker$Builder: android.support.v8.renderscript.ScriptGroupThunker create()>();

        return $r64;

     label01:
        $r6 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i5 != 0 goto label02;

        $r57 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r57.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Empty script groups are not allowed");

        throw $r57;

     label02:
        i0 = 0;

     label03:
        $r7 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i6 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i0 >= $i6 goto label04;

        $r56 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r55 = virtualinvoke $r56.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r58 = (android.support.v8.renderscript.ScriptGroup$Node) $r55;

        $r58.<android.support.v8.renderscript.ScriptGroup$Node: int dagNumber> = 0;

        i0 = i0 + 1;

        goto label03;

     label04:
        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup$Builder: void validateDAG()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r65 = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r1 = $r9;

        $i7 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: int mKernelCount>;

        r2 = newarray (int)[$i7];

        i1 = 0;

        i2 = 0;

     label05:
        $r10 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $i8 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i2 >= $i8 goto label16;

        $r44 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mNodes>;

        $r39 = virtualinvoke $r44.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (android.support.v8.renderscript.ScriptGroup$Node) $r39;

        i3 = 0;

     label06:
        $r40 = r3.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mKernels>;

        $i22 = virtualinvoke $r40.<java.util.ArrayList: int size()>();

        if i3 >= $i22 goto label15;

        $r41 = r3.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mKernels>;

        $r47 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (android.support.v8.renderscript.Script$KernelID) $r47;

        $i26 = i1;

        i1 = i1 + 1;

        $r48 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        $i27 = virtualinvoke r4.<android.support.v8.renderscript.Script$KernelID: int getID(android.support.v8.renderscript.RenderScript)>($r48);

        r2[$i26] = $i27;

        z0 = 0;

        z1 = 0;

        i4 = 0;

     label07:
        $r45 = r3.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mInputs>;

        $i24 = virtualinvoke $r45.<java.util.ArrayList: int size()>();

        if i4 >= $i24 goto label09;

        $r60 = r3.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mInputs>;

        $r59 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r62 = (android.support.v8.renderscript.ScriptGroup$ConnectLine) $r59;

        $r61 = $r62.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        if $r61 != r4 goto label08;

        z0 = 1;

     label08:
        i4 = i4 + 1;

        goto label07;

     label09:
        i28 = 0;

     label10:
        $r46 = r3.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $i25 = virtualinvoke $r46.<java.util.ArrayList: int size()>();

        if i28 >= $i25 goto label12;

        $r50 = r3.<android.support.v8.renderscript.ScriptGroup$Node: java.util.ArrayList mOutputs>;

        $r49 = virtualinvoke $r50.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        $r52 = (android.support.v8.renderscript.ScriptGroup$ConnectLine) $r49;

        $r51 = $r52.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mFrom>;

        if $r51 != r4 goto label11;

        z1 = 1;

     label11:
        i28 = i28 + 1;

        goto label10;

     label12:
        if z0 != 0 goto label13;

        $r54 = new android.support.v8.renderscript.ScriptGroup$IO;

        specialinvoke $r54.<android.support.v8.renderscript.ScriptGroup$IO: void <init>(android.support.v8.renderscript.Script$KernelID)>(r4);

        virtualinvoke r65.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);

     label13:
        if z1 != 0 goto label14;

        $r53 = new android.support.v8.renderscript.ScriptGroup$IO;

        specialinvoke $r53.<android.support.v8.renderscript.ScriptGroup$IO: void <init>(android.support.v8.renderscript.Script$KernelID)>(r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r53);

     label14:
        i3 = i3 + 1;

        goto label06;

     label15:
        i2 = i2 + 1;

        goto label05;

     label16:
        $i9 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: int mKernelCount>;

        if i1 == $i9 goto label17;

        $r43 = new android.support.v8.renderscript.RSRuntimeException;

        specialinvoke $r43.<android.support.v8.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Count mismatch, should not happen.");

        throw $r43;

     label17:
        $r11 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $i10 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        r66 = newarray (int)[$i10];

        $r12 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $i11 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        r67 = newarray (int)[$i11];

        $r13 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $i12 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        r68 = newarray (int)[$i12];

        $r14 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $i13 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        r69 = newarray (int)[$i13];

        i29 = 0;

     label18:
        $r15 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $i14 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if i29 >= $i14 goto label21;

        $r27 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: java.util.ArrayList mLines>;

        $r26 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r70 = (android.support.v8.renderscript.ScriptGroup$ConnectLine) $r26;

        $r31 = r70.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mFrom>;

        $r32 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        $i19 = virtualinvoke $r31.<android.support.v8.renderscript.Script$KernelID: int getID(android.support.v8.renderscript.RenderScript)>($r32);

        r66[i29] = $i19;

        $r30 = r70.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        if $r30 == null goto label19;

        $r42 = r70.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$KernelID mToK>;

        $r36 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        $i23 = virtualinvoke $r42.<android.support.v8.renderscript.Script$KernelID: int getID(android.support.v8.renderscript.RenderScript)>($r36);

        r67[i29] = $i23;

     label19:
        $r35 = r70.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$FieldID mToF>;

        if $r35 == null goto label20;

        $r37 = r70.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Script$FieldID mToF>;

        $r38 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        $i21 = virtualinvoke $r37.<android.support.v8.renderscript.Script$FieldID: int getID(android.support.v8.renderscript.RenderScript)>($r38);

        r68[i29] = $i21;

     label20:
        $r33 = r70.<android.support.v8.renderscript.ScriptGroup$ConnectLine: android.support.v8.renderscript.Type mAllocationType>;

        $r34 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        $i20 = virtualinvoke $r33.<android.support.v8.renderscript.Type: int getID(android.support.v8.renderscript.RenderScript)>($r34);

        r69[i29] = $i20;

        i29 = i29 + 1;

        goto label18;

     label21:
        $r17 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        i30 = virtualinvoke $r17.<android.support.v8.renderscript.RenderScript: int nScriptGroupCreate(int[],int[],int[],int[],int[])>(r2, r66, r67, r68, r69);

        if i30 != 0 goto label22;

        $r28 = new android.support.v8.renderscript.RSRuntimeException;

        specialinvoke $r28.<android.support.v8.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Object creation error, should not happen.");

        throw $r28;

     label22:
        $r16 = new android.support.v8.renderscript.ScriptGroup;

        $r19 = r0.<android.support.v8.renderscript.ScriptGroup$Builder: android.support.v8.renderscript.RenderScript mRS>;

        specialinvoke $r16.<android.support.v8.renderscript.ScriptGroup: void <init>(int,android.support.v8.renderscript.RenderScript)>(i30, $r19);

        r71 = $r16;

        $i16 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r18 = newarray (android.support.v8.renderscript.ScriptGroup$IO)[$i16];

        r71.<android.support.v8.renderscript.ScriptGroup: android.support.v8.renderscript.ScriptGroup$IO[] mOutputs> = $r18;

        i31 = 0;

     label23:
        $i15 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i31 >= $i15 goto label24;

        $r22 = r71.<android.support.v8.renderscript.ScriptGroup: android.support.v8.renderscript.ScriptGroup$IO[] mOutputs>;

        $r23 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i31);

        $r29 = (android.support.v8.renderscript.ScriptGroup$IO) $r23;

        $r22[i31] = $r29;

        i31 = i31 + 1;

        goto label23;

     label24:
        $i18 = virtualinvoke r65.<java.util.ArrayList: int size()>();

        $r21 = newarray (android.support.v8.renderscript.ScriptGroup$IO)[$i18];

        r71.<android.support.v8.renderscript.ScriptGroup: android.support.v8.renderscript.ScriptGroup$IO[] mInputs> = $r21;

        i32 = 0;

     label25:
        $i17 = virtualinvoke r65.<java.util.ArrayList: int size()>();

        if i32 >= $i17 goto label26;

        $r20 = r71.<android.support.v8.renderscript.ScriptGroup: android.support.v8.renderscript.ScriptGroup$IO[] mInputs>;

        $r24 = virtualinvoke r65.<java.util.ArrayList: java.lang.Object get(int)>(i32);

        $r25 = (android.support.v8.renderscript.ScriptGroup$IO) $r24;

        $r20[i32] = $r25;

        i32 = i32 + 1;

        goto label25;

     label26:
        return r71;
    }
}
