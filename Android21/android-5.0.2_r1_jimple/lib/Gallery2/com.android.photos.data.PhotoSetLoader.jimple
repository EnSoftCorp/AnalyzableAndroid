public class com.android.photos.data.PhotoSetLoader extends android.content.CursorLoader implements com.android.photos.shims.LoaderCompatShim
{
    public static final java.lang.String SUPPORTED_OPERATIONS;
    private static final android.net.Uri CONTENT_URI;
    public static final java.lang.String[] PROJECTION;
    private static final java.lang.String SORT_ORDER;
    private static final java.lang.String SELECTION;
    public static final int INDEX_ID;
    public static final int INDEX_DATA;
    public static final int INDEX_WIDTH;
    public static final int INDEX_HEIGHT;
    public static final int INDEX_DATE_ADDED;
    public static final int INDEX_MEDIA_TYPE;
    public static final int INDEX_SUPPORTED_OPERATIONS;
    private static final android.net.Uri GLOBAL_CONTENT_URI;
    private final android.database.ContentObserver mGlobalObserver;

    public void <init>(android.content.Context)
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.content.Context r1;
        java.lang.String[] $r2;
        android.net.Uri $r3;
        android.content.Loader$ForceLoadContentObserver $r4;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: android.content.Context;

        $r3 = <com.android.photos.data.PhotoSetLoader: android.net.Uri CONTENT_URI>;

        $r2 = <com.android.photos.data.PhotoSetLoader: java.lang.String[] PROJECTION>;

        specialinvoke r0.<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r3, $r2, "media_type == 1 OR media_type == 3", null, "date_added DESC");

        $r4 = new android.content.Loader$ForceLoadContentObserver;

        specialinvoke $r4.<android.content.Loader$ForceLoadContentObserver: void <init>(android.content.Loader)>(r0);

        r0.<com.android.photos.data.PhotoSetLoader: android.database.ContentObserver mGlobalObserver> = $r4;

        return;
    }

    protected void onStartLoading()
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.database.ContentObserver $r3;
        android.net.Uri $r4;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        specialinvoke r0.<android.content.CursorLoader: void onStartLoading()>();

        $r1 = virtualinvoke r0.<com.android.photos.data.PhotoSetLoader: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = <com.android.photos.data.PhotoSetLoader: android.net.Uri GLOBAL_CONTENT_URI>;

        $r3 = r0.<com.android.photos.data.PhotoSetLoader: android.database.ContentObserver mGlobalObserver>;

        virtualinvoke $r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 1, $r3);

        return;
    }

    protected void onReset()
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.database.ContentObserver $r3;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        specialinvoke r0.<android.content.CursorLoader: void onReset()>();

        $r1 = virtualinvoke r0.<com.android.photos.data.PhotoSetLoader: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<com.android.photos.data.PhotoSetLoader: android.database.ContentObserver mGlobalObserver>;

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r3);

        return;
    }

    public android.graphics.drawable.Drawable drawableForItem(android.database.Cursor, android.graphics.drawable.Drawable)
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.database.Cursor r1;
        android.graphics.drawable.Drawable r2;
        com.android.photos.drawables.DataUriThumbnailDrawable $r3, r5;
        java.lang.String $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r2 == null goto label1;

        $z0 = r2 instanceof com.android.photos.drawables.DataUriThumbnailDrawable;

        if $z0 != 0 goto label2;

     label1:
        $r3 = new com.android.photos.drawables.DataUriThumbnailDrawable;

        specialinvoke $r3.<com.android.photos.drawables.DataUriThumbnailDrawable: void <init>()>();

        r5 = $r3;

        goto label3;

     label2:
        r5 = (com.android.photos.drawables.DataUriThumbnailDrawable) r2;

     label3:
        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(2);

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(3);

        virtualinvoke r5.<com.android.photos.drawables.DataUriThumbnailDrawable: void setImage(java.lang.Object,int,int)>($r4, $i0, $i1);

        return r5;
    }

    public android.net.Uri uriForItem(android.database.Cursor)
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.database.Cursor r1;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: android.database.Cursor;

        return null;
    }

    public java.util.ArrayList urisForSubItems(android.database.Cursor)
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.database.Cursor r1;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: android.database.Cursor;

        return null;
    }

    public void deleteItemWithPath(java.lang.Object)
    {
        com.android.photos.data.PhotoSetLoader r0;
        java.lang.Object r1;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public java.lang.Object getPathForItem(android.database.Cursor)
    {
        com.android.photos.data.PhotoSetLoader r0;
        android.database.Cursor r1;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: android.database.Cursor;

        return null;
    }

    public volatile java.lang.Object getPathForItem(java.lang.Object)
    {
        com.android.photos.data.PhotoSetLoader r0;
        java.lang.Object r1, $r3;
        android.database.Cursor $r2;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $r3 = virtualinvoke r0.<com.android.photos.data.PhotoSetLoader: java.lang.Object getPathForItem(android.database.Cursor)>($r2);

        return $r3;
    }

    public volatile java.util.ArrayList urisForSubItems(java.lang.Object)
    {
        com.android.photos.data.PhotoSetLoader r0;
        java.lang.Object r1;
        android.database.Cursor $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $r3 = virtualinvoke r0.<com.android.photos.data.PhotoSetLoader: java.util.ArrayList urisForSubItems(android.database.Cursor)>($r2);

        return $r3;
    }

    public volatile android.net.Uri uriForItem(java.lang.Object)
    {
        com.android.photos.data.PhotoSetLoader r0;
        java.lang.Object r1;
        android.database.Cursor $r2;
        android.net.Uri $r3;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $r3 = virtualinvoke r0.<com.android.photos.data.PhotoSetLoader: android.net.Uri uriForItem(android.database.Cursor)>($r2);

        return $r3;
    }

    public volatile android.graphics.drawable.Drawable drawableForItem(java.lang.Object, android.graphics.drawable.Drawable)
    {
        com.android.photos.data.PhotoSetLoader r0;
        java.lang.Object r1;
        android.graphics.drawable.Drawable r2, $r4;
        android.database.Cursor $r3;

        r0 := @this: com.android.photos.data.PhotoSetLoader;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        $r3 = (android.database.Cursor) r1;

        $r4 = virtualinvoke r0.<com.android.photos.data.PhotoSetLoader: android.graphics.drawable.Drawable drawableForItem(android.database.Cursor,android.graphics.drawable.Drawable)>($r3, r2);

        return $r4;
    }

    static void <clinit>()
    {
        android.net.Uri $r0, $r2;
        java.lang.String[] $r1;

        <com.android.photos.data.PhotoSetLoader: int INDEX_SUPPORTED_OPERATIONS> = 6;

        <com.android.photos.data.PhotoSetLoader: int INDEX_MEDIA_TYPE> = 5;

        <com.android.photos.data.PhotoSetLoader: int INDEX_DATE_ADDED> = 4;

        <com.android.photos.data.PhotoSetLoader: int INDEX_HEIGHT> = 3;

        <com.android.photos.data.PhotoSetLoader: int INDEX_WIDTH> = 2;

        <com.android.photos.data.PhotoSetLoader: int INDEX_DATA> = 1;

        <com.android.photos.data.PhotoSetLoader: int INDEX_ID> = 0;

        <com.android.photos.data.PhotoSetLoader: java.lang.String SELECTION> = "media_type == 1 OR media_type == 3";

        <com.android.photos.data.PhotoSetLoader: java.lang.String SORT_ORDER> = "date_added DESC";

        <com.android.photos.data.PhotoSetLoader: java.lang.String SUPPORTED_OPERATIONS> = "supported_operations";

        $r0 = staticinvoke <android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String)>("external");

        <com.android.photos.data.PhotoSetLoader: android.net.Uri CONTENT_URI> = $r0;

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "_id";

        $r1[1] = "_data";

        $r1[2] = "width";

        $r1[3] = "height";

        $r1[4] = "date_added";

        $r1[5] = "media_type";

        $r1[6] = "supported_operations";

        <com.android.photos.data.PhotoSetLoader: java.lang.String[] PROJECTION> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://media/external/");

        <com.android.photos.data.PhotoSetLoader: android.net.Uri GLOBAL_CONTENT_URI> = $r2;

        return;
    }
}
