public class com.adobe.xmp.impl.XMPSerializerHelper extends java.lang.Object
{

    public void <init>()
    {
        com.adobe.xmp.impl.XMPSerializerHelper r0;

        r0 := @this: com.adobe.xmp.impl.XMPSerializerHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void serialize(com.adobe.xmp.impl.XMPMetaImpl, java.io.OutputStream, com.adobe.xmp.options.SerializeOptions) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.impl.XMPMetaImpl r0;
        java.io.OutputStream r1;
        com.adobe.xmp.options.SerializeOptions r2, $r3, r5;
        boolean $z0;
        com.adobe.xmp.impl.XMPSerializerRDF $r4;

        r0 := @parameter0: com.adobe.xmp.impl.XMPMetaImpl;

        r1 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: com.adobe.xmp.options.SerializeOptions;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = new com.adobe.xmp.options.SerializeOptions;

        specialinvoke $r3.<com.adobe.xmp.options.SerializeOptions: void <init>()>();

     label2:
        r5 = $r3;

        $z0 = virtualinvoke r5.<com.adobe.xmp.options.SerializeOptions: boolean getSort()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.adobe.xmp.impl.XMPMetaImpl: void sort()>();

     label3:
        $r4 = new com.adobe.xmp.impl.XMPSerializerRDF;

        specialinvoke $r4.<com.adobe.xmp.impl.XMPSerializerRDF: void <init>()>();

        virtualinvoke $r4.<com.adobe.xmp.impl.XMPSerializerRDF: void serialize(com.adobe.xmp.XMPMeta,java.io.OutputStream,com.adobe.xmp.options.SerializeOptions)>(r0, r1, r5);

        return;
    }

    public static java.lang.String serializeToString(com.adobe.xmp.impl.XMPMetaImpl, com.adobe.xmp.options.SerializeOptions) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.impl.XMPMetaImpl r0;
        com.adobe.xmp.options.SerializeOptions r1, $r4, r11;
        java.io.ByteArrayOutputStream r2, $r6;
        java.lang.String $r7, $r8, $r10;
        java.io.UnsupportedEncodingException $r9;

        r0 := @parameter0: com.adobe.xmp.impl.XMPMetaImpl;

        r1 := @parameter1: com.adobe.xmp.options.SerializeOptions;

        if r1 == null goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = new com.adobe.xmp.options.SerializeOptions;

        specialinvoke $r4.<com.adobe.xmp.options.SerializeOptions: void <init>()>();

     label2:
        r11 = $r4;

        virtualinvoke r11.<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setEncodeUTF16BE(boolean)>(1);

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>(2048);

        r2 = $r6;

        staticinvoke <com.adobe.xmp.impl.XMPSerializerHelper: void serialize(com.adobe.xmp.impl.XMPMetaImpl,java.io.OutputStream,com.adobe.xmp.options.SerializeOptions)>(r0, r2, r11);

     label3:
        $r7 = virtualinvoke r11.<com.adobe.xmp.options.SerializeOptions: java.lang.String getEncoding()>();

        $r8 = virtualinvoke r2.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r7);

     label4:
        return $r8;

     label5:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r10;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public static byte[] serializeToBuffer(com.adobe.xmp.impl.XMPMetaImpl, com.adobe.xmp.options.SerializeOptions) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.impl.XMPMetaImpl r0;
        com.adobe.xmp.options.SerializeOptions r1;
        java.io.ByteArrayOutputStream r2, $r3;
        byte[] $r4;

        r0 := @parameter0: com.adobe.xmp.impl.XMPMetaImpl;

        r1 := @parameter1: com.adobe.xmp.options.SerializeOptions;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>(int)>(2048);

        r2 = $r3;

        staticinvoke <com.adobe.xmp.impl.XMPSerializerHelper: void serialize(com.adobe.xmp.impl.XMPMetaImpl,java.io.OutputStream,com.adobe.xmp.options.SerializeOptions)>(r0, r2, r1);

        $r4 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }
}
