public class com.googlecode.mp4parser.authoring.tracks.Amf0Track extends com.googlecode.mp4parser.authoring.AbstractTrack
{
    java.util.SortedMap rawSamples;
    private com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData;

    public void <init>(java.util.Map)
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;
        java.util.Map r1;
        com.googlecode.mp4parser.authoring.tracks.Amf0Track$1 $r2;
        com.googlecode.mp4parser.authoring.TrackMetaData $r3, $r6, $r8, $r9, $r10;
        java.util.TreeMap $r4;
        java.util.Date $r5, $r7;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.AbstractTrack: void <init>()>();

        $r2 = new com.googlecode.mp4parser.authoring.tracks.Amf0Track$1;

        specialinvoke $r2.<com.googlecode.mp4parser.authoring.tracks.Amf0Track$1: void <init>(com.googlecode.mp4parser.authoring.tracks.Amf0Track)>(r0);

        r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: java.util.SortedMap rawSamples> = $r2;

        $r3 = new com.googlecode.mp4parser.authoring.TrackMetaData;

        specialinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData> = $r3;

        $r4 = new java.util.TreeMap;

        specialinvoke $r4.<java.util.TreeMap: void <init>(java.util.Map)>(r1);

        r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: java.util.SortedMap rawSamples> = $r4;

        $r6 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>()>();

        virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: void setCreationTime(java.util.Date)>($r5);

        $r8 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>()>();

        virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: void setModificationTime(java.util.Date)>($r7);

        $r9 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        virtualinvoke $r9.<com.googlecode.mp4parser.authoring.TrackMetaData: void setTimescale(long)>(1000L);

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: void setLanguage(java.lang.String)>("eng");

        return;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;
        java.util.LinkedList r1, $r4;
        java.util.Iterator r2;
        byte[] r3;
        java.util.SortedMap $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.nio.ByteBuffer $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: java.util.SortedMap rawSamples>;

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (byte[]) $r7;

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r1;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;
        com.coremedia.iso.boxes.SampleDescriptionBox r1, $r3;
        com.googlecode.mp4parser.boxes.adobe.ActionMessageFormat0SampleEntryBox r2, $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        $r3 = new com.coremedia.iso.boxes.SampleDescriptionBox;

        specialinvoke $r3.<com.coremedia.iso.boxes.SampleDescriptionBox: void <init>()>();

        r1 = $r3;

        $r4 = new com.googlecode.mp4parser.boxes.adobe.ActionMessageFormat0SampleEntryBox;

        specialinvoke $r4.<com.googlecode.mp4parser.boxes.adobe.ActionMessageFormat0SampleEntryBox: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<com.googlecode.mp4parser.boxes.adobe.ActionMessageFormat0SampleEntryBox: void setDataReferenceIndex(int)>(1);

        virtualinvoke r1.<com.coremedia.iso.boxes.SampleDescriptionBox: void addBox(com.coremedia.iso.boxes.Box)>(r2);

        return r1;
    }

    public java.util.List getDecodingTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;
        java.util.LinkedList r1, r2, $r5, $r6;
        long l0, l1, $l3, $l4, $l6, $l7;
        java.util.Iterator r3;
        java.lang.Long r4;
        java.util.SortedMap $r7;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9, $r11, $r13, $r14;
        int $i2;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry $r10, $r12, $r15, $r16;
        byte $b5;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r1 = $r5;

        $r6 = new java.util.LinkedList;

        $r7 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: java.util.SortedMap rawSamples>;

        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.util.Set keySet()>();

        specialinvoke $r6.<java.util.LinkedList: void <init>(java.util.Collection)>($r8);

        r2 = $r6;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        l0 = 0L;

        r3 = virtualinvoke r2.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Long) $r9;

        $l3 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        l1 = $l3 - l0;

        $i2 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        if $i2 <= 0 goto label2;

        $r11 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object peek()>();

        $r12 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r11;

        $l4 = virtualinvoke $r12.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $b5 = $l4 cmp l1;

        if $b5 != 0 goto label2;

        $r13 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object peek()>();

        $r15 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r13;

        $r14 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object peek()>();

        $r16 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r14;

        $l6 = virtualinvoke $r16.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l7 = $l6 + 1L;

        virtualinvoke $r15.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void setCount(long)>($l7);

        goto label3;

     label2:
        $r10 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        specialinvoke $r10.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>(1L, l1);

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

     label3:
        l0 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        goto label1;

     label4:
        return r1;
    }

    public java.util.List getCompositionTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        return null;
    }

    public long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        return null;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        return null;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;
        com.googlecode.mp4parser.authoring.TrackMetaData $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.Amf0Track: com.googlecode.mp4parser.authoring.TrackMetaData trackMetaData>;

        return $r1;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        return "data";
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;
        com.coremedia.iso.boxes.NullMediaHeaderBox $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        $r1 = new com.coremedia.iso.boxes.NullMediaHeaderBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.NullMediaHeaderBox: void <init>()>();

        return $r1;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.tracks.Amf0Track r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.Amf0Track;

        return null;
    }
}
