public class com.android.gallery3d.filtershow.crop.BoundedRect extends java.lang.Object
{
    private float rot;
    private android.graphics.RectF outer;
    private android.graphics.RectF inner;
    private float[] innerRotated;

    public void <init>(float, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        float f0;
        android.graphics.Rect r1, r2;
        android.graphics.RectF $r3, $r4, $r5;
        float[] $r6;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        f0 := @parameter0: float;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot> = f0;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r1);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r2);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner> = $r4;

        $r5 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $r6 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r5);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = $r6;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void rotateInner()>();

        $z0 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: boolean isConstrained()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

     label1:
        return;
    }

    public void <init>(float, android.graphics.RectF, android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        float f0;
        android.graphics.RectF r1, r2, $r3, $r4, $r5;
        float[] $r6;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        f0 := @parameter0: float;

        r1 := @parameter1: android.graphics.RectF;

        r2 := @parameter2: android.graphics.RectF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot> = f0;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r1);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r2);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner> = $r4;

        $r5 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $r6 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r5);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = $r6;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void rotateInner()>();

        $z0 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: boolean isConstrained()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

     label1:
        return;
    }

    public void resetTo(float, android.graphics.RectF, android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        float f0;
        android.graphics.RectF r1, r2, $r3, $r4, $r5;
        float[] $r6;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        f0 := @parameter0: float;

        r1 := @parameter1: android.graphics.RectF;

        r2 := @parameter2: android.graphics.RectF;

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot> = f0;

        $r3 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        virtualinvoke $r3.<android.graphics.RectF: void set(android.graphics.RectF)>(r1);

        $r4 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        virtualinvoke $r4.<android.graphics.RectF: void set(android.graphics.RectF)>(r2);

        $r5 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $r6 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r5);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = $r6;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void rotateInner()>();

        $z0 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: boolean isConstrained()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

     label1:
        return;
    }

    public void setInner(android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF r1, $r2, $r3;
        boolean $z0, $z1;
        float[] $r4;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $z0 = virtualinvoke $r2.<android.graphics.RectF: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner> = r1;

        $r3 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $r4 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r3);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = $r4;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void rotateInner()>();

        $z1 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: boolean isConstrained()>();

        if $z1 != 0 goto label2;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

     label2:
        return;
    }

    public void setRotation(float)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        float f0, $f1;
        byte $b0;
        android.graphics.RectF $r1;
        float[] $r2;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        f0 := @parameter0: float;

        $f1 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot>;

        $b0 = f0 cmpl $f1;

        if $b0 != 0 goto label1;

        return;

     label1:
        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot> = f0;

        $r1 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $r2 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r1);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = $r2;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void rotateInner()>();

        $z0 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: boolean isConstrained()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

     label2:
        return;
    }

    public void setToInner(android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF r1, $r2;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        virtualinvoke r1.<android.graphics.RectF: void set(android.graphics.RectF)>($r2);

        return;
    }

    public void setToOuter(android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF r1, $r2;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        virtualinvoke r1.<android.graphics.RectF: void set(android.graphics.RectF)>($r2);

        return;
    }

    public android.graphics.RectF getInner()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF $r1, $r2;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        $r1 = new android.graphics.RectF;

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        specialinvoke $r1.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r2);

        return $r1;
    }

    public android.graphics.RectF getOuter()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF $r1, $r2;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        $r1 = new android.graphics.RectF;

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        specialinvoke $r1.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r2);

        return $r1;
    }

    public void moveInner(float, float)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34, f35;
        android.graphics.Matrix r1;
        android.graphics.RectF r2, $r9, $r10, $r11, $r13, $r14, $r16;
        float[] r3, r4, r5, r6, r7, r8, $r12, $r15, $r17, r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0, $z1;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getInverseRotMatrix()>();

        $r9 = new android.graphics.RectF;

        $r10 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        specialinvoke $r9.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r10);

        r2 = $r9;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>(f0, f1);

        r3 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>(r2);

        $r11 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        r4 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r11);

        virtualinvoke r1.<android.graphics.Matrix: void mapPoints(float[])>(r3);

        $r12 = newarray (float)[2];

        $r12[0] = 0.0F;

        $r12[1] = 0.0F;

        r5 = $r12;

        i0 = 0;

     label1:
        $i1 = lengthof r3;

        if i0 >= $i1 goto label3;

        $f21 = r3[i0];

        $f22 = r5[0];

        f2 = $f21 + $f22;

        $i7 = i0 + 1;

        $f24 = r3[$i7];

        $f25 = r5[1];

        f3 = $f24 + $f25;

        $r16 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $z1 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: boolean inclusiveContains(android.graphics.RectF,float,float)>($r16, f2, f3);

        if $z1 != 0 goto label2;

        $r17 = newarray (float)[2];

        $r17[0] = f2;

        $r17[1] = f3;

        r6 = $r17;

        r7 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] closestSide(float[],float[])>(r6, r4);

        r8 = staticinvoke <com.android.gallery3d.filtershow.imageshow.GeometryMathUtils: float[] shortestVectorFromPointToLine(float[],float[])>(r6, r7);

        $f30 = r5[0];

        $f26 = r8[0];

        $f29 = $f30 + $f26;

        r5[0] = $f29;

        $f27 = r5[1];

        $f28 = r8[1];

        $f31 = $f27 + $f28;

        r5[1] = $f31;

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        i8 = 0;

     label4:
        $i3 = lengthof r3;

        if i8 >= $i3 goto label6;

        $f8 = r3[i8];

        $f9 = r5[0];

        f32 = $f8 + $f9;

        $i6 = i8 + 1;

        $f10 = r3[$i6];

        $f11 = r5[1];

        f33 = $f10 + $f11;

        $r13 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $z0 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: boolean inclusiveContains(android.graphics.RectF,float,float)>($r13, f32, f33);

        if $z0 != 0 goto label5;

        $r15 = newarray (float)[2];

        $r15[0] = f32;

        $r15[1] = f33;

        r18 = $r15;

        $r14 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: void getEdgePoints(android.graphics.RectF,float[])>($r14, r18);

        $f12 = r18[0];

        $f15 = $f12 - f32;

        r18[0] = $f15;

        $f16 = r18[1];

        $f13 = $f16 - f33;

        r18[1] = $f13;

        $f19 = r5[0];

        $f14 = r18[0];

        $f20 = $f19 + $f14;

        r5[0] = $f20;

        $f18 = r5[1];

        $f17 = r18[1];

        $f23 = $f18 + $f17;

        r5[1] = $f23;

     label5:
        i8 = i8 + 2;

        goto label4;

     label6:
        i9 = 0;

     label7:
        $i2 = lengthof r3;

        if i9 >= $i2 goto label8;

        $f4 = r3[i9];

        $f5 = r5[0];

        f34 = $f4 + $f5;

        $i4 = i9 + 1;

        $f7 = r3[$i4];

        $f6 = r5[1];

        f35 = $f7 + $f6;

        r3[i9] = f34;

        $i5 = i9 + 1;

        r3[$i5] = f35;

        i9 = i9 + 2;

        goto label7;

     label8:
        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = r3;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

        return;
    }

    public void resizeInner(android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF r1, r7, $r13, $r14, $r15, $r17;
        android.graphics.Matrix r2, r3;
        float[] r4, r5, r6, r8, r9, r10, r11, r12, $r16, $r18, r19;
        int i0, $i1, $i2, $i3, $i4, $i13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33;
        boolean $z0;
        byte $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        r1 := @parameter0: android.graphics.RectF;

        r2 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getRotMatrix()>();

        r3 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getInverseRotMatrix()>();

        $r13 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        r4 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r13);

        virtualinvoke r2.<android.graphics.Matrix: void mapPoints(float[])>(r4);

        $r14 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        r5 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r14);

        r6 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>(r1);

        $r15 = new android.graphics.RectF;

        specialinvoke $r15.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r1);

        r7 = $r15;

        i0 = 0;

     label01:
        $i1 = lengthof r6;

        if i0 >= $i1 goto label24;

        $r16 = newarray (float)[2];

        $f0 = r6[i0];

        $r16[0] = $f0;

        $i2 = i0 + 1;

        $f1 = r6[$i2];

        $r16[1] = $f1;

        r8 = $r16;

        r9 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r8, 2);

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r9);

        $r17 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $f3 = r9[0];

        $f2 = r9[1];

        $z0 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: boolean inclusiveContains(android.graphics.RectF,float,float)>($r17, $f3, $f2);

        if $z0 != 0 goto label23;

        r10 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] closestSide(float[],float[])>(r8, r4);

        $r18 = newarray (float)[4];

        $f4 = r6[i0];

        $r18[0] = $f4;

        $i4 = i0 + 1;

        $f6 = r6[$i4];

        $r18[1] = $f6;

        $f5 = r5[i0];

        $r18[2] = $f5;

        $i3 = i0 + 1;

        $f9 = r5[$i3];

        $r18[3] = $f9;

        r11 = $r18;

        r12 = staticinvoke <com.android.gallery3d.filtershow.imageshow.GeometryMathUtils: float[] lineIntersect(float[],float[])>(r11, r10);

        if r12 != null goto label02;

        r12 = newarray (float)[2];

        $f33 = r5[i0];

        r12[0] = $f33;

        $i13 = i0 + 1;

        $f31 = r5[$i13];

        r12[1] = $f31;

     label02:
        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label18;
            case 7: goto label18;
            default: goto label23;
        };

     label03:
        $f8 = r12[0];

        $f7 = r7.<android.graphics.RectF: float left>;

        $b5 = $f8 cmpl $f7;

        if $b5 <= 0 goto label04;

        $f12 = r12[0];

        goto label05;

     label04:
        $f12 = r7.<android.graphics.RectF: float left>;

     label05:
        r7.<android.graphics.RectF: float left> = $f12;

        $f11 = r12[1];

        $f10 = r7.<android.graphics.RectF: float top>;

        $b6 = $f11 cmpl $f10;

        if $b6 <= 0 goto label06;

        $f15 = r12[1];

        goto label07;

     label06:
        $f15 = r7.<android.graphics.RectF: float top>;

     label07:
        r7.<android.graphics.RectF: float top> = $f15;

        goto label23;

     label08:
        $f30 = r12[0];

        $f29 = r7.<android.graphics.RectF: float right>;

        $b10 = $f30 cmpg $f29;

        if $b10 >= 0 goto label09;

        $f25 = r12[0];

        goto label10;

     label09:
        $f25 = r7.<android.graphics.RectF: float right>;

     label10:
        r7.<android.graphics.RectF: float right> = $f25;

        $f27 = r12[1];

        $f26 = r7.<android.graphics.RectF: float top>;

        $b12 = $f27 cmpl $f26;

        if $b12 <= 0 goto label11;

        $f32 = r12[1];

        goto label12;

     label11:
        $f32 = r7.<android.graphics.RectF: float top>;

     label12:
        r7.<android.graphics.RectF: float top> = $f32;

        goto label23;

     label13:
        $f19 = r12[0];

        $f20 = r7.<android.graphics.RectF: float right>;

        $b9 = $f19 cmpg $f20;

        if $b9 >= 0 goto label14;

        $f24 = r12[0];

        goto label15;

     label14:
        $f24 = r7.<android.graphics.RectF: float right>;

     label15:
        r7.<android.graphics.RectF: float right> = $f24;

        $f22 = r12[1];

        $f23 = r7.<android.graphics.RectF: float bottom>;

        $b11 = $f22 cmpg $f23;

        if $b11 >= 0 goto label16;

        $f28 = r12[1];

        goto label17;

     label16:
        $f28 = r7.<android.graphics.RectF: float bottom>;

     label17:
        r7.<android.graphics.RectF: float bottom> = $f28;

        goto label23;

     label18:
        $f13 = r12[0];

        $f14 = r7.<android.graphics.RectF: float left>;

        $b7 = $f13 cmpl $f14;

        if $b7 <= 0 goto label19;

        $f18 = r12[0];

        goto label20;

     label19:
        $f18 = r7.<android.graphics.RectF: float left>;

     label20:
        r7.<android.graphics.RectF: float left> = $f18;

        $f16 = r12[1];

        $f17 = r7.<android.graphics.RectF: float bottom>;

        $b8 = $f16 cmpg $f17;

        if $b8 >= 0 goto label21;

        $f21 = r12[1];

        goto label22;

     label21:
        $f21 = r7.<android.graphics.RectF: float bottom>;

     label22:
        r7.<android.graphics.RectF: float bottom> = $f21;

        goto label23;

     label23:
        i0 = i0 + 2;

        goto label01;

     label24:
        r19 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>(r7);

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r19);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = r19;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

        return;
    }

    public void fixedAspectResizeInner(android.graphics.RectF)
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.RectF r1, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r23, $r24, $r25, $r26, r27;
        android.graphics.Matrix r2, r3;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, f51, f52;
        float[] r4, r5, r6, r7, r8, r9, r10, r11, $r20, $r22, r28;
        byte b0, $b3, $b5, $b11, $b12, $b13, $b14, $b15;
        int i2, $i4, $i6, $i7, $i8, $i9, $i10, i16;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        r1 := @parameter0: android.graphics.RectF;

        r2 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getRotMatrix()>();

        r3 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getInverseRotMatrix()>();

        $r12 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        f0 = virtualinvoke $r12.<android.graphics.RectF: float width()>();

        $r13 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        f1 = virtualinvoke $r13.<android.graphics.RectF: float height()>();

        f2 = f0 / f1;

        $r14 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        r4 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r14);

        virtualinvoke r2.<android.graphics.Matrix: void mapPoints(float[])>(r4);

        $r15 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        r5 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>($r15);

        r6 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>(r1);

        b0 = -1;

        $r16 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $f10 = $r16.<android.graphics.RectF: float top>;

        $f8 = r1.<android.graphics.RectF: float top>;

        $b3 = $f10 cmpl $f8;

        if $b3 != 0 goto label02;

        $r24 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $f50 = $r24.<android.graphics.RectF: float left>;

        $f44 = r1.<android.graphics.RectF: float left>;

        $b15 = $f50 cmpl $f44;

        if $b15 != 0 goto label01;

        b0 = 0;

        goto label04;

     label01:
        $r26 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $f48 = $r26.<android.graphics.RectF: float right>;

        $f49 = r1.<android.graphics.RectF: float right>;

        $b14 = $f48 cmpl $f49;

        if $b14 != 0 goto label04;

        b0 = 2;

        goto label04;

     label02:
        $r17 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $f11 = $r17.<android.graphics.RectF: float bottom>;

        $f9 = r1.<android.graphics.RectF: float bottom>;

        $b5 = $f11 cmpl $f9;

        if $b5 != 0 goto label04;

        $r23 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $f47 = $r23.<android.graphics.RectF: float right>;

        $f41 = r1.<android.graphics.RectF: float right>;

        $b13 = $f47 cmpl $f41;

        if $b13 != 0 goto label03;

        b0 = 4;

        goto label04;

     label03:
        $r25 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        $f45 = $r25.<android.graphics.RectF: float left>;

        $f46 = r1.<android.graphics.RectF: float left>;

        $b12 = $f45 cmpl $f46;

        if $b12 != 0 goto label04;

        b0 = 6;

     label04:
        if b0 != -1 goto label05;

        return;

     label05:
        f3 = virtualinvoke r1.<android.graphics.RectF: float width()>();

        i2 = 0;

     label06:
        $i4 = lengthof r6;

        if i2 >= $i4 goto label10;

        $r20 = newarray (float)[2];

        $f30 = r6[i2];

        $r20[0] = $f30;

        $i6 = i2 + 1;

        $f31 = r6[$i6];

        $r20[1] = $f31;

        r7 = $r20;

        r8 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r7, 2);

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r8);

        $r21 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $f29 = r8[0];

        $f28 = r8[1];

        $z0 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: boolean inclusiveContains(android.graphics.RectF,float,float)>($r21, $f29, $f28);

        if $z0 != 0 goto label09;

        i16 = i2;

        if i16 != b0 goto label07;

        goto label09;

     label07:
        r10 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] closestSide(float[],float[])>(r7, r4);

        $r22 = newarray (float)[4];

        $f35 = r6[i2];

        $r22[0] = $f35;

        $i8 = i2 + 1;

        $f32 = r6[$i8];

        $r22[1] = $f32;

        $f33 = r5[i2];

        $r22[2] = $f33;

        $i7 = i2 + 1;

        $f34 = r5[$i7];

        $r22[3] = $f34;

        r9 = $r22;

        r11 = staticinvoke <com.android.gallery3d.filtershow.imageshow.GeometryMathUtils: float[] lineIntersect(float[],float[])>(r9, r10);

        if r11 != null goto label08;

        r11 = newarray (float)[2];

        $f43 = r5[i2];

        r11[0] = $f43;

        $i10 = i2 + 1;

        $f40 = r5[$i10];

        r11[1] = $f40;

     label08:
        f4 = r5[b0];

        $i9 = b0 + 1;

        f6 = r5[$i9];

        $f39 = r11[0];

        $f38 = f4 - $f39;

        f5 = staticinvoke <java.lang.Math: float abs(float)>($f38);

        $f36 = r11[1];

        $f37 = f6 - $f36;

        f7 = staticinvoke <java.lang.Math: float abs(float)>($f37);

        $f42 = f2 * f7;

        f51 = staticinvoke <java.lang.Math: float max(float,float)>(f5, $f42);

        $b11 = f51 cmpg f3;

        if $b11 >= 0 goto label09;

        f3 = f51;

     label09:
        i2 = i2 + 2;

        goto label06;

     label10:
        f52 = f3 / f2;

        $r18 = new android.graphics.RectF;

        $r19 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner>;

        specialinvoke $r18.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r19);

        r27 = $r18;

        if b0 != 0 goto label11;

        $f21 = r27.<android.graphics.RectF: float left>;

        $f27 = $f21 + f3;

        r27.<android.graphics.RectF: float right> = $f27;

        $f26 = r27.<android.graphics.RectF: float top>;

        $f25 = $f26 + f52;

        r27.<android.graphics.RectF: float bottom> = $f25;

        goto label14;

     label11:
        if b0 != 2 goto label12;

        $f17 = r27.<android.graphics.RectF: float right>;

        $f24 = $f17 - f3;

        r27.<android.graphics.RectF: float left> = $f24;

        $f23 = r27.<android.graphics.RectF: float top>;

        $f22 = $f23 + f52;

        r27.<android.graphics.RectF: float bottom> = $f22;

        goto label14;

     label12:
        if b0 != 4 goto label13;

        $f13 = r27.<android.graphics.RectF: float right>;

        $f20 = $f13 - f3;

        r27.<android.graphics.RectF: float left> = $f20;

        $f19 = r27.<android.graphics.RectF: float bottom>;

        $f18 = $f19 - f52;

        r27.<android.graphics.RectF: float top> = $f18;

        goto label14;

     label13:
        if b0 != 6 goto label14;

        $f12 = r27.<android.graphics.RectF: float left>;

        $f16 = $f12 + f3;

        r27.<android.graphics.RectF: float right> = $f16;

        $f15 = r27.<android.graphics.RectF: float bottom>;

        $f14 = $f15 - f52;

        r27.<android.graphics.RectF: float top> = $f14;

     label14:
        r28 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: float[] getCornersFromRect(android.graphics.RectF)>(r27);

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r28);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated> = r28;

        specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: void reconstrain()>();

        return;
    }

    private boolean isConstrained()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        int i0, $i1;
        float[] $r1, $r2;
        float $f0, $f1;
        android.graphics.RectF $r3;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        i0 = 0;

     label1:
        if i0 >= 8 goto label3;

        $r3 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $r1 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated>;

        $f1 = $r1[i0];

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated>;

        $i1 = i0 + 1;

        $f0 = $r2[$i1];

        $z0 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: boolean inclusiveContains(android.graphics.RectF,float,float)>($r3, $f1, $f0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        return 1;
    }

    private void reconstrain()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.Matrix r1;
        float[] r2, $r3, $r5;
        android.graphics.RectF $r4, $r6;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        $r4 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $r3 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated>;

        staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: void getEdgePoints(android.graphics.RectF,float[])>($r4, $r3);

        r1 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getRotMatrix()>();

        $r5 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated>;

        r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r5, 8);

        virtualinvoke r1.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $r6 = staticinvoke <com.android.gallery3d.filtershow.crop.CropMath: android.graphics.RectF trapToRect(float[])>(r2);

        r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF inner> = $r6;

        return;
    }

    private void rotateInner()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.Matrix r1;
        float[] $r2;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        r1 = specialinvoke r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.Matrix getInverseRotMatrix()>();

        $r2 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float[] innerRotated>;

        virtualinvoke r1.<android.graphics.Matrix: void mapPoints(float[])>($r2);

        return;
    }

    private android.graphics.Matrix getRotMatrix()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.Matrix r1, $r2;
        android.graphics.RectF $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        $f0 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot>;

        $r3 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $f1 = virtualinvoke $r3.<android.graphics.RectF: float centerX()>();

        $r4 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $f2 = virtualinvoke $r4.<android.graphics.RectF: float centerY()>();

        virtualinvoke r1.<android.graphics.Matrix: void setRotate(float,float,float)>($f0, $f1, $f2);

        return r1;
    }

    private android.graphics.Matrix getInverseRotMatrix()
    {
        com.android.gallery3d.filtershow.crop.BoundedRect r0;
        android.graphics.Matrix r1, $r2;
        float $f0, $f1, $f2, $f3;
        android.graphics.RectF $r3, $r4;

        r0 := @this: com.android.gallery3d.filtershow.crop.BoundedRect;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        $f0 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: float rot>;

        $f1 = neg $f0;

        $r3 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $f2 = virtualinvoke $r3.<android.graphics.RectF: float centerX()>();

        $r4 = r0.<com.android.gallery3d.filtershow.crop.BoundedRect: android.graphics.RectF outer>;

        $f3 = virtualinvoke $r4.<android.graphics.RectF: float centerY()>();

        virtualinvoke r1.<android.graphics.Matrix: void setRotate(float,float,float)>($f1, $f2, $f3);

        return r1;
    }
}
