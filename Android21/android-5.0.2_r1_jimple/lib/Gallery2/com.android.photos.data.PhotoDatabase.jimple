public class com.android.photos.data.PhotoDatabase extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String TAG;
    static final int DB_VERSION;
    private static final java.lang.String SQL_CREATE_TABLE;
    private static final java.lang.String[][] CREATE_PHOTO;
    private static final java.lang.String[][] CREATE_ALBUM;
    private static final java.lang.String[][] CREATE_METADATA;
    private static final java.lang.String[][] CREATE_ACCOUNT;

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.photos.data.PhotoDatabase r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.util.List $r2, $r3, $r4, $r5;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.android.photos.data.PhotoDatabase: java.util.List getAccountTableDefinition()>();

        staticinvoke <com.android.photos.data.PhotoDatabase: void createTable(android.database.sqlite.SQLiteDatabase,java.lang.String,java.util.List)>(r1, "accounts", $r2);

        $r3 = virtualinvoke r0.<com.android.photos.data.PhotoDatabase: java.util.List getAlbumTableDefinition()>();

        staticinvoke <com.android.photos.data.PhotoDatabase: void createTable(android.database.sqlite.SQLiteDatabase,java.lang.String,java.util.List)>(r1, "albums", $r3);

        $r4 = virtualinvoke r0.<com.android.photos.data.PhotoDatabase: java.util.List getPhotoTableDefinition()>();

        staticinvoke <com.android.photos.data.PhotoDatabase: void createTable(android.database.sqlite.SQLiteDatabase,java.lang.String,java.util.List)>(r1, "photos", $r4);

        $r5 = virtualinvoke r0.<com.android.photos.data.PhotoDatabase: java.util.List getMetadataTableDefinition()>();

        staticinvoke <com.android.photos.data.PhotoDatabase: void createTable(android.database.sqlite.SQLiteDatabase,java.lang.String,java.util.List)>(r1, "metadata", $r5);

        return;
    }

    public void <init>(android.content.Context, java.lang.String, int)
    {
        com.android.photos.data.PhotoDatabase r0;
        android.content.Context r1;
        java.lang.String r2;
        int i0;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, r2, null, i0);

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        com.android.photos.data.PhotoDatabase r0;
        android.content.Context r1;
        java.lang.String r2;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, r2, null, 3);

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.photos.data.PhotoDatabase r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.photos.data.PhotoDatabase: void recreate(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    public void onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.photos.data.PhotoDatabase r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.photos.data.PhotoDatabase: void recreate(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    private void recreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.photos.data.PhotoDatabase r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        staticinvoke <com.android.photos.data.PhotoDatabase: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r1, "metadata");

        staticinvoke <com.android.photos.data.PhotoDatabase: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r1, "photos");

        staticinvoke <com.android.photos.data.PhotoDatabase: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r1, "albums");

        staticinvoke <com.android.photos.data.PhotoDatabase: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r1, "accounts");

        virtualinvoke r0.<com.android.photos.data.PhotoDatabase: void onCreate(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    protected java.util.List getAlbumTableDefinition()
    {
        com.android.photos.data.PhotoDatabase r0;
        java.lang.String[][] $r1;
        java.util.List $r2;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        $r1 = <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_ALBUM>;

        $r2 = staticinvoke <com.android.photos.data.PhotoDatabase: java.util.List tableCreationStrings(java.lang.String[][])>($r1);

        return $r2;
    }

    protected java.util.List getPhotoTableDefinition()
    {
        com.android.photos.data.PhotoDatabase r0;
        java.lang.String[][] $r1;
        java.util.List $r2;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        $r1 = <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_PHOTO>;

        $r2 = staticinvoke <com.android.photos.data.PhotoDatabase: java.util.List tableCreationStrings(java.lang.String[][])>($r1);

        return $r2;
    }

    protected java.util.List getMetadataTableDefinition()
    {
        com.android.photos.data.PhotoDatabase r0;
        java.lang.String[][] $r1;
        java.util.List $r2;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        $r1 = <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_METADATA>;

        $r2 = staticinvoke <com.android.photos.data.PhotoDatabase: java.util.List tableCreationStrings(java.lang.String[][])>($r1);

        return $r2;
    }

    protected java.util.List getAccountTableDefinition()
    {
        com.android.photos.data.PhotoDatabase r0;
        java.lang.String[][] $r1;
        java.util.List $r2;

        r0 := @this: com.android.photos.data.PhotoDatabase;

        $r1 = <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_ACCOUNT>;

        $r2 = staticinvoke <com.android.photos.data.PhotoDatabase: java.util.List tableCreationStrings(java.lang.String[][])>($r1);

        return $r2;
    }

    protected static void createTable(android.database.sqlite.SQLiteDatabase, java.lang.String, java.util.List)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r7, $r14;
        java.util.List r2;
        java.lang.StringBuilder r3, $r9, $r10, $r16;
        boolean z0, $z1;
        java.util.Iterator r4;
        java.lang.String[] r5, r6;
        int i0, i1;
        java.lang.Throwable r8, $r17;
        java.lang.Object $r13;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("CREATE TABLE ");

        r3 = $r9;

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        z0 = 1;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String[]) $r13;

        if z0 != 0 goto label02;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label02:
        z0 = 0;

        r6 = r5;

        i0 = lengthof r6;

        i1 = 0;

     label03:
        if i1 >= i0 goto label04;

        r7 = r6[i1];

        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i1 = i1 + 1;

        goto label03;

     label04:
        goto label01;

     label05:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label06:
        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r14);

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label07:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label10;

     label08:
        $r17 := @caughtexception;

        r8 = $r17;

     label09:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r8;

     label10:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected static java.lang.String[] createUniqueConstraint(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.String)[5];

        $r2[0] = "UNIQUE(";

        $r2[1] = r0;

        $r2[2] = ",";

        $r2[3] = r1;

        $r2[4] = ")";

        return $r2;
    }

    protected static java.util.List tableCreationStrings(java.lang.String[][])
    {
        java.lang.String[][] r0, r2;
        java.util.ArrayList r1, $r4;
        int i0, i1, $i2;
        java.lang.String[] r3;

        r0 := @parameter0: java.lang.String[][];

        $r4 = new java.util.ArrayList;

        $i2 = lengthof r0;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    protected static void addToTable(java.util.List, java.lang.String[][], java.lang.String[][])
    {
        java.util.List r0;
        java.lang.String[][] r1, r2, r3, r5;
        int i0, i1, i2, i3;
        java.lang.String[] r4, r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String[][];

        r2 := @parameter2: java.lang.String[][];

        if r1 == null goto label2;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>(0, r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        if r2 == null goto label4;

        r5 = r2;

        i2 = lengthof r5;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        r6 = r5[i3];

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>(r6);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    protected static void dropTable(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r6;
        java.lang.Throwable r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drop table if exists ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r6);

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label2:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.String[][] $r2, $r13, $r26, $r33;
        java.lang.String[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32;

        <com.android.photos.data.PhotoDatabase: java.lang.String SQL_CREATE_TABLE> = "CREATE TABLE ";

        <com.android.photos.data.PhotoDatabase: int DB_VERSION> = 3;

        $r0 = class "com/android/photos/data/PhotoDatabase";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.photos.data.PhotoDatabase: java.lang.String TAG> = $r1;

        $r2 = newarray (java.lang.String[])[10];

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "_id";

        $r3[1] = "INTEGER PRIMARY KEY AUTOINCREMENT";

        $r2[0] = $r3;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "account_id";

        $r4[1] = "INTEGER NOT NULL";

        $r2[1] = $r4;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "width";

        $r5[1] = "INTEGER NOT NULL";

        $r2[2] = $r5;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "height";

        $r6[1] = "INTEGER NOT NULL";

        $r2[3] = $r6;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "date_taken";

        $r7[1] = "INTEGER NOT NULL";

        $r2[4] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "album_id";

        $r8[1] = "INTEGER";

        $r2[5] = $r8;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "mime_type";

        $r9[1] = "TEXT NOT NULL";

        $r2[6] = $r9;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "title";

        $r10[1] = "TEXT";

        $r2[7] = $r10;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "date_modified";

        $r11[1] = "INTEGER";

        $r2[8] = $r11;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = "rotation";

        $r12[1] = "INTEGER";

        $r2[9] = $r12;

        <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_PHOTO> = $r2;

        $r13 = newarray (java.lang.String[])[11];

        $r14 = newarray (java.lang.String)[2];

        $r14[0] = "_id";

        $r14[1] = "INTEGER PRIMARY KEY AUTOINCREMENT";

        $r13[0] = $r14;

        $r15 = newarray (java.lang.String)[2];

        $r15[0] = "account_id";

        $r15[1] = "INTEGER NOT NULL";

        $r13[1] = $r15;

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "parent_id";

        $r17[1] = "INTEGER";

        $r13[2] = $r17;

        $r16 = newarray (java.lang.String)[2];

        $r16[0] = "album_type";

        $r16[1] = "TEXT";

        $r13[3] = $r16;

        $r19 = newarray (java.lang.String)[2];

        $r19[0] = "visibility";

        $r19[1] = "INTEGER NOT NULL";

        $r13[4] = $r19;

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = "location_string";

        $r18[1] = "TEXT";

        $r13[5] = $r18;

        $r21 = newarray (java.lang.String)[2];

        $r21[0] = "title";

        $r21[1] = "TEXT NOT NULL";

        $r13[6] = $r21;

        $r20 = newarray (java.lang.String)[2];

        $r20[0] = "summary";

        $r20[1] = "TEXT";

        $r13[7] = $r20;

        $r23 = newarray (java.lang.String)[2];

        $r23[0] = "date_published";

        $r23[1] = "INTEGER";

        $r13[8] = $r23;

        $r22 = newarray (java.lang.String)[2];

        $r22[0] = "date_modified";

        $r22[1] = "INTEGER";

        $r13[9] = $r22;

        $r24 = staticinvoke <com.android.photos.data.PhotoDatabase: java.lang.String[] createUniqueConstraint(java.lang.String,java.lang.String)>("parent_id", "title");

        $r13[10] = $r24;

        <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_ALBUM> = $r13;

        $r26 = newarray (java.lang.String[])[5];

        $r25 = newarray (java.lang.String)[2];

        $r25[0] = "_id";

        $r25[1] = "INTEGER PRIMARY KEY AUTOINCREMENT";

        $r26[0] = $r25;

        $r28 = newarray (java.lang.String)[2];

        $r28[0] = "photo_id";

        $r28[1] = "INTEGER NOT NULL";

        $r26[1] = $r28;

        $r27 = newarray (java.lang.String)[2];

        $r27[0] = "key";

        $r27[1] = "TEXT NOT NULL";

        $r26[2] = $r27;

        $r29 = newarray (java.lang.String)[2];

        $r29[0] = "value";

        $r29[1] = "TEXT NOT NULL";

        $r26[3] = $r29;

        $r32 = staticinvoke <com.android.photos.data.PhotoDatabase: java.lang.String[] createUniqueConstraint(java.lang.String,java.lang.String)>("photo_id", "key");

        $r26[4] = $r32;

        <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_METADATA> = $r26;

        $r33 = newarray (java.lang.String[])[2];

        $r30 = newarray (java.lang.String)[2];

        $r30[0] = "_id";

        $r30[1] = "INTEGER PRIMARY KEY AUTOINCREMENT";

        $r33[0] = $r30;

        $r31 = newarray (java.lang.String)[2];

        $r31[0] = "name";

        $r31[1] = "TEXT UNIQUE NOT NULL";

        $r33[1] = $r31;

        <com.android.photos.data.PhotoDatabase: java.lang.String[][] CREATE_ACCOUNT> = $r33;

        return;
    }
}
