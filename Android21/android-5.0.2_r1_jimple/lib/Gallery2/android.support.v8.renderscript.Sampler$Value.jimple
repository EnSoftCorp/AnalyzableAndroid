public final enum class android.support.v8.renderscript.Sampler$Value extends java.lang.Enum
{
    public static final enum android.support.v8.renderscript.Sampler$Value NEAREST;
    public static final enum android.support.v8.renderscript.Sampler$Value LINEAR;
    public static final enum android.support.v8.renderscript.Sampler$Value LINEAR_MIP_LINEAR;
    public static final enum android.support.v8.renderscript.Sampler$Value LINEAR_MIP_NEAREST;
    public static final enum android.support.v8.renderscript.Sampler$Value WRAP;
    public static final enum android.support.v8.renderscript.Sampler$Value CLAMP;
    public static final enum android.support.v8.renderscript.Sampler$Value MIRRORED_REPEAT;
    int mID;
    private static final android.support.v8.renderscript.Sampler$Value[] $VALUES;

    public static android.support.v8.renderscript.Sampler$Value[] values()
    {
        android.support.v8.renderscript.Sampler$Value[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.support.v8.renderscript.Sampler$Value[]) $r1;

        return $r2;
    }

    public static android.support.v8.renderscript.Sampler$Value valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.support.v8.renderscript.Sampler$Value $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "android/support/v8/renderscript/Sampler$Value", r0);

        $r2 = (android.support.v8.renderscript.Sampler$Value) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        android.support.v8.renderscript.Sampler$Value r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: android.support.v8.renderscript.Sampler$Value;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<android.support.v8.renderscript.Sampler$Value: int mID> = i1;

        return;
    }

    static void <clinit>()
    {
        android.support.v8.renderscript.Sampler$Value $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.support.v8.renderscript.Sampler$Value[] $r7;

        $r0 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r0.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("NEAREST", 0, 0);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value NEAREST> = $r0;

        $r1 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r1.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("LINEAR", 1, 1);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value LINEAR> = $r1;

        $r2 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r2.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("LINEAR_MIP_LINEAR", 2, 2);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value LINEAR_MIP_LINEAR> = $r2;

        $r3 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r3.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("LINEAR_MIP_NEAREST", 3, 5);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value LINEAR_MIP_NEAREST> = $r3;

        $r4 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r4.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("WRAP", 4, 3);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value WRAP> = $r4;

        $r5 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r5.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("CLAMP", 5, 4);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value CLAMP> = $r5;

        $r6 = new android.support.v8.renderscript.Sampler$Value;

        specialinvoke $r6.<android.support.v8.renderscript.Sampler$Value: void <init>(java.lang.String,int,int)>("MIRRORED_REPEAT", 6, 6);

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value MIRRORED_REPEAT> = $r6;

        $r7 = newarray (android.support.v8.renderscript.Sampler$Value)[7];

        $r8 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value NEAREST>;

        $r7[0] = $r8;

        $r9 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value LINEAR>;

        $r7[1] = $r9;

        $r10 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value LINEAR_MIP_LINEAR>;

        $r7[2] = $r10;

        $r11 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value LINEAR_MIP_NEAREST>;

        $r7[3] = $r11;

        $r12 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value WRAP>;

        $r7[4] = $r12;

        $r13 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value CLAMP>;

        $r7[5] = $r13;

        $r14 = <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value MIRRORED_REPEAT>;

        $r7[6] = $r14;

        <android.support.v8.renderscript.Sampler$Value: android.support.v8.renderscript.Sampler$Value[] $VALUES> = $r7;

        return;
    }
}
