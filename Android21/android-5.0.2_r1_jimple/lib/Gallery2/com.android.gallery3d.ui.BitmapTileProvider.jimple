public class com.android.gallery3d.ui.BitmapTileProvider extends java.lang.Object implements com.android.gallery3d.ui.TileImageView$TileSource
{
    private final com.android.gallery3d.ui.ScreenNail mScreenNail;
    private final android.graphics.Bitmap[] mMipmaps;
    private final android.graphics.Bitmap$Config mConfig;
    private final int mImageWidth;
    private final int mImageHeight;
    private boolean mRecycled;

    public void <init>(android.graphics.Bitmap, int)
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        android.graphics.Bitmap r1, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.ArrayList r2, $r3;
        com.android.gallery3d.ui.BitmapScreenNail $r4;
        java.lang.Object $r5;
        java.lang.Object[] $r7;
        android.graphics.Bitmap[] $r8, $r10;
        android.graphics.Bitmap$Config $r9;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.ui.BitmapTileProvider: boolean mRecycled> = 0;

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        r0.<com.android.gallery3d.ui.BitmapTileProvider: int mImageWidth> = $i1;

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        r0.<com.android.gallery3d.ui.BitmapTileProvider: int mImageHeight> = $i2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i3 > i0 goto label2;

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i4 <= i0 goto label3;

     label2:
        r1 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>(r1, 0.5F, 0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label1;

     label3:
        $r4 = new com.android.gallery3d.ui.BitmapScreenNail;

        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>($i6);

        $r6 = (android.graphics.Bitmap) $r5;

        specialinvoke $r4.<com.android.gallery3d.ui.BitmapScreenNail: void <init>(android.graphics.Bitmap)>($r6);

        r0.<com.android.gallery3d.ui.BitmapTileProvider: com.android.gallery3d.ui.ScreenNail mScreenNail> = $r4;

        $i7 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r8 = newarray (android.graphics.Bitmap)[$i7];

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (android.graphics.Bitmap[]) $r7;

        r0.<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap[] mMipmaps> = $r10;

        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r0.<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap$Config mConfig> = $r9;

        return;
    }

    public com.android.gallery3d.ui.ScreenNail getScreenNail()
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        com.android.gallery3d.ui.ScreenNail $r1;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        $r1 = r0.<com.android.gallery3d.ui.BitmapTileProvider: com.android.gallery3d.ui.ScreenNail mScreenNail>;

        return $r1;
    }

    public int getImageHeight()
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        $i0 = r0.<com.android.gallery3d.ui.BitmapTileProvider: int mImageHeight>;

        return $i0;
    }

    public int getImageWidth()
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        $i0 = r0.<com.android.gallery3d.ui.BitmapTileProvider: int mImageWidth>;

        return $i0;
    }

    public int getLevelCount()
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        android.graphics.Bitmap[] $r1;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        $r1 = r0.<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap[] mMipmaps>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public android.graphics.Bitmap getTile(int, int, int, int)
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        android.graphics.Bitmap r1, r2;
        android.graphics.Canvas r3, $r6;
        com.android.photos.data.GalleryBitmapPool $r4;
        android.graphics.Bitmap[] $r5;
        float $f0, $f1;
        android.graphics.Bitmap$Config $r7;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i6 = i1 >> i0;

        i7 = i2 >> i0;

        $r4 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        r1 = virtualinvoke $r4.<com.android.photos.data.GalleryBitmapPool: android.graphics.Bitmap get(int,int)>(i3, i3);

        if r1 != null goto label1;

        $r7 = r0.<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap$Config mConfig>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i3, $r7);

        goto label2;

     label1:
        virtualinvoke r1.<android.graphics.Bitmap: void eraseColor(int)>(0);

     label2:
        $r5 = r0.<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap[] mMipmaps>;

        r2 = $r5[i0];

        $r6 = new android.graphics.Canvas;

        specialinvoke $r6.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r3 = $r6;

        i4 = neg i6;

        i5 = neg i7;

        $f1 = (float) i4;

        $f0 = (float) i5;

        virtualinvoke r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r2, $f1, $f0, null);

        return r1;
    }

    public void recycle()
    {
        com.android.gallery3d.ui.BitmapTileProvider r0;
        android.graphics.Bitmap[] r1;
        int i0, i1;
        android.graphics.Bitmap r2;
        boolean $z0;
        com.android.gallery3d.ui.ScreenNail $r3, $r4;

        r0 := @this: com.android.gallery3d.ui.BitmapTileProvider;

        $z0 = r0.<com.android.gallery3d.ui.BitmapTileProvider: boolean mRecycled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.gallery3d.ui.BitmapTileProvider: boolean mRecycled> = 1;

        r1 = r0.<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap[] mMipmaps>;

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        staticinvoke <com.android.gallery3d.common.BitmapUtils: void recycleSilently(android.graphics.Bitmap)>(r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.android.gallery3d.ui.BitmapTileProvider: com.android.gallery3d.ui.ScreenNail mScreenNail>;

        if $r3 == null goto label4;

        $r4 = r0.<com.android.gallery3d.ui.BitmapTileProvider: com.android.gallery3d.ui.ScreenNail mScreenNail>;

        interfaceinvoke $r4.<com.android.gallery3d.ui.ScreenNail: void recycle()>();

     label4:
        return;
    }
}
