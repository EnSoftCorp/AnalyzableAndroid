public class com.coremedia.iso.boxes.mdat.SampleList extends java.util.AbstractList
{
    long[] offsets;
    long[] sizes;
    com.coremedia.iso.IsoFile isoFile;
    java.util.HashMap mdatStartCache;
    java.util.HashMap mdatEndCache;
    com.coremedia.iso.boxes.mdat.MediaDataBox[] mdats;

    public long[] getOffsetKeys()
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        long[] $r1;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        $r1 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        return $r1;
    }

    public void <init>(com.coremedia.iso.boxes.TrackBox)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        com.coremedia.iso.boxes.TrackBox r1;
        com.coremedia.iso.boxes.SampleSizeBox r2;
        com.coremedia.iso.boxes.ChunkOffsetBox r3;
        com.coremedia.iso.boxes.SampleToChunkBox r4;
        long[] r5, r6, $r19, $r20, $r22, $r23, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        int i0, i1, i4, $i6, $i13, $i14, $i17, $i18, $i20, $i21;
        long l2, l3, l5, $l7, $l9, $l10, $l12, $l16, $l19, $l22, $l24;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox r7;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox r8;
        java.util.HashMap $r9, $r10, $r17, r40;
        com.coremedia.iso.boxes.SampleTableBox $r11, $r13, $r14;
        com.coremedia.iso.IsoFile $r12, $r24;
        com.coremedia.iso.boxes.ContainerBox $r15;
        java.lang.Object $r16, $r21, $r26;
        com.coremedia.iso.boxes.fragment.MovieExtendsBox $r18;
        boolean $z0, $z1;
        byte $b8, $b11, $b15, $b23;
        com.coremedia.iso.boxes.TrackHeaderBox $r25, $r30;
        java.util.List $r27, $r28, r39, r41;
        java.util.Map $r29;
        java.util.Iterator r42, r43;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        r1 := @parameter0: com.coremedia.iso.boxes.TrackBox;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatStartCache> = $r10;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatEndCache> = $r9;

        $r12 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.IsoFile getIsoFile()>();

        specialinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: void initIsoFile(com.coremedia.iso.IsoFile)>($r12);

        $r11 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        r2 = virtualinvoke $r11.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleSizeBox getSampleSizeBox()>();

        $r13 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        r3 = virtualinvoke $r13.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.ChunkOffsetBox getChunkOffsetBox()>();

        $r14 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>();

        r4 = virtualinvoke $r14.<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleToChunkBox getSampleToChunkBox()>();

        if r3 == null goto label01;

        $r38 = virtualinvoke r3.<com.coremedia.iso.boxes.ChunkOffsetBox: long[] getChunkOffsets()>();

        goto label02;

     label01:
        $r38 = newarray (long)[0];

     label02:
        r5 = $r38;

        if r4 == null goto label08;

        $r28 = virtualinvoke r4.<com.coremedia.iso.boxes.SampleToChunkBox: java.util.List getEntries()>();

        $i14 = interfaceinvoke $r28.<java.util.List: int size()>();

        if $i14 <= 0 goto label08;

        $i13 = lengthof r5;

        if $i13 <= 0 goto label08;

        if r2 == null goto label08;

        $l12 = virtualinvoke r2.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>();

        $b11 = $l12 cmp 0L;

        if $b11 <= 0 goto label08;

        $i17 = lengthof r5;

        r6 = virtualinvoke r4.<com.coremedia.iso.boxes.SampleToChunkBox: long[] blowup(int)>($i17);

        i0 = 0;

        $l16 = virtualinvoke r2.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSize()>();

        $b15 = $l16 cmp 0L;

        if $b15 <= 0 goto label03;

        $l19 = virtualinvoke r2.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>();

        $i20 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l19);

        $r35 = newarray (long)[$i20];

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes> = $r35;

        $r37 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $l24 = virtualinvoke r2.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSize()>();

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r37, $l24);

        goto label04;

     label03:
        $r33 = virtualinvoke r2.<com.coremedia.iso.boxes.SampleSizeBox: long[] getSampleSizes()>();

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes> = $r33;

     label04:
        $r32 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $i18 = lengthof $r32;

        $r31 = newarray (long)[$i18];

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets> = $r31;

        i1 = 0;

     label05:
        $i21 = lengthof r6;

        if i1 >= $i21 goto label08;

        l2 = r6[i1];

        l3 = r5[i1];

        i4 = 0;

     label06:
        $l22 = (long) i4;

        $b23 = $l22 cmp l2;

        if $b23 >= 0 goto label07;

        $r36 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        l5 = $r36[i0];

        $r34 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        $r34[i0] = l3;

        l3 = l3 + l5;

        i0 = i0 + 1;

        i4 = i4 + 1;

        goto label06;

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        $r15 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.ContainerBox getParent()>();

        r39 = interfaceinvoke $r15.<com.coremedia.iso.boxes.ContainerBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/MovieExtendsBox");

        $i6 = interfaceinvoke r39.<java.util.List: int size()>();

        if $i6 <= 0 goto label15;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r40 = $r17;

        $r16 = interfaceinvoke r39.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (com.coremedia.iso.boxes.fragment.MovieExtendsBox) $r16;

        r41 = virtualinvoke $r18.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/TrackExtendsBox");

        r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r21 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.coremedia.iso.boxes.fragment.TrackExtendsBox) $r21;

        $l7 = virtualinvoke r7.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getTrackId()>();

        $r25 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>();

        $l9 = virtualinvoke $r25.<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>();

        $b8 = $l7 cmp $l9;

        if $b8 != 0 goto label11;

        $r24 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.IsoFile getIsoFile()>();

        $r27 = virtualinvoke $r24.<com.coremedia.iso.IsoFile: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/MovieFragmentBox");

        r43 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r26 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.coremedia.iso.boxes.fragment.MovieFragmentBox) $r26;

        $r30 = virtualinvoke r1.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>();

        $l10 = virtualinvoke $r30.<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>();

        $r29 = virtualinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.Map getOffsets(com.coremedia.iso.boxes.fragment.MovieFragmentBox,long,com.coremedia.iso.boxes.fragment.TrackExtendsBox)>(r8, $l10, r7);

        interfaceinvoke r40.<java.util.Map: void putAll(java.util.Map)>($r29);

        goto label10;

     label11:
        goto label09;

     label12:
        $r19 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        if $r19 == null goto label13;

        $r23 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        if $r23 != null goto label14;

     label13:
        $r20 = newarray (long)[0];

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes> = $r20;

        $r22 = newarray (long)[0];

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets> = $r22;

     label14:
        specialinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: void splitToArrays(java.util.Map)>(r40);

     label15:
        return;
    }

    private void splitToArrays(java.util.Map)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        java.util.Map r1;
        java.util.ArrayList r2, $r5;
        long[] r3, r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        java.util.Set $r6;
        java.lang.Long $r14, $r17;
        java.lang.Object $r15, $r18, $r19;
        long $l12, $l15;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        r1 := @parameter0: java.util.Map;

        $r5 = new java.util.ArrayList;

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r2 = $r5;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        $r7 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $i1 = lengthof $r7;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i3 = $i1 + $i2;

        r3 = newarray (long)[$i3];

        $r9 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $r8 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $i4 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, $i4);

        $r10 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        $i6 = lengthof $r10;

        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        $i7 = $i6 + $i5;

        r4 = newarray (long)[$i7];

        $r12 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        $r11 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        $i8 = lengthof $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, r4, 0, $i8);

        i0 = 0;

     label1:
        $i9 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i9 goto label2;

        $r13 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        $i11 = lengthof $r13;

        $i10 = i0 + $i11;

        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r14 = (java.lang.Long) $r15;

        $l12 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        r4[$i10] = $l12;

        $r16 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $i14 = lengthof $r16;

        $i13 = i0 + $i14;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r19 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        $r17 = (java.lang.Long) $r19;

        $l15 = virtualinvoke $r17.<java.lang.Long: long longValue()>();

        r3[$i13] = $l15;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes> = r3;

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets> = r4;

        return;
    }

    public void <init>(com.coremedia.iso.boxes.fragment.TrackFragmentBox)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox r1;
        java.util.HashMap r2, $r9, $r10, $r13;
        java.util.List r3, r6;
        long l0, $l2;
        java.util.Iterator r4, r7;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox r5;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r8, $r16;
        long[] $r11, $r12;
        com.coremedia.iso.IsoFile $r14, $r15;
        java.lang.Object $r17, $r18;
        boolean $z0, $z1;
        byte $b1;
        java.util.Map $r19;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        r1 := @parameter0: com.coremedia.iso.boxes.fragment.TrackFragmentBox;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatStartCache> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatEndCache> = $r10;

        $r11 = newarray (long)[0];

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes> = $r11;

        $r12 = newarray (long)[0];

        r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r2 = $r13;

        $r15 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.IsoFile getIsoFile()>();

        specialinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: void initIsoFile(com.coremedia.iso.IsoFile)>($r15);

        $r14 = r0.<com.coremedia.iso.boxes.mdat.SampleList: com.coremedia.iso.IsoFile isoFile>;

        r3 = virtualinvoke $r14.<com.coremedia.iso.IsoFile: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/MovieFragmentBox");

        $r16 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        l0 = virtualinvoke $r16.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>();

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.coremedia.iso.boxes.fragment.MovieFragmentBox) $r17;

        r6 = virtualinvoke r5.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: java.util.List getTrackFragmentHeaderBoxes()>();

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox) $r18;

        $l2 = virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>();

        $b1 = $l2 cmp l0;

        if $b1 != 0 goto label3;

        $r19 = virtualinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.Map getOffsets(com.coremedia.iso.boxes.fragment.MovieFragmentBox,long,com.coremedia.iso.boxes.fragment.TrackExtendsBox)>(r5, l0, null);

        interfaceinvoke r2.<java.util.Map: void putAll(java.util.Map)>($r19);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        specialinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: void splitToArrays(java.util.Map)>(r2);

        return;
    }

    private void initIsoFile(com.coremedia.iso.IsoFile)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        com.coremedia.iso.IsoFile r1, $r6;
        long l0, l1, l2, $l5, $l6;
        java.util.LinkedList r2, $r5;
        java.util.Iterator r3;
        com.coremedia.iso.boxes.Box r4;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        com.coremedia.iso.boxes.mdat.MediaDataBox[] $r8, $r9;
        int $i3, $i4;
        java.lang.Object[] $r10;
        java.lang.Object $r11;
        java.lang.String $r12, $r13;
        com.coremedia.iso.boxes.mdat.MediaDataBox $r14, $r19, $r24, $r25;
        java.lang.RuntimeException $r15;
        java.nio.ByteBuffer $r16;
        java.util.HashMap $r17, $r23;
        java.lang.Long $r20, $r21;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        r1 := @parameter0: com.coremedia.iso.IsoFile;

        r0.<com.coremedia.iso.boxes.mdat.SampleList: com.coremedia.iso.IsoFile isoFile> = r1;

        l0 = 0L;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r2 = $r5;

        $r6 = r0.<com.coremedia.iso.boxes.mdat.SampleList: com.coremedia.iso.IsoFile isoFile>;

        $r7 = virtualinvoke $r6.<com.coremedia.iso.IsoFile: java.util.List getBoxes()>();

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.Box) $r11;

        l1 = interfaceinvoke r4.<com.coremedia.iso.boxes.Box: long getSize()>();

        $r13 = "mdat";

        $r12 = interfaceinvoke r4.<com.coremedia.iso.boxes.Box: java.lang.String getType()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label3;

        $z1 = r4 instanceof com.coremedia.iso.boxes.mdat.MediaDataBox;

        if $z1 == 0 goto label2;

        $r14 = (com.coremedia.iso.boxes.mdat.MediaDataBox) r4;

        $r16 = virtualinvoke $r14.<com.coremedia.iso.boxes.mdat.MediaDataBox: java.nio.ByteBuffer getHeader()>();

        $i4 = virtualinvoke $r16.<java.nio.ByteBuffer: int limit()>();

        $l5 = (long) $i4;

        l2 = l0 + $l5;

        $r17 = r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatStartCache>;

        $r19 = (com.coremedia.iso.boxes.mdat.MediaDataBox) r4;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);

        $r23 = r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatEndCache>;

        $r24 = (com.coremedia.iso.boxes.mdat.MediaDataBox) r4;

        $l6 = l2 + l1;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r21);

        $r25 = (com.coremedia.iso.boxes.mdat.MediaDataBox) r4;

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r25);

        goto label3;

     label2:
        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>("Sample need to be in mdats and mdats need to be instanceof MediaDataBox");

        throw $r15;

     label3:
        l0 = l0 + l1;

        goto label1;

     label4:
        $i3 = virtualinvoke r2.<java.util.LinkedList: int size()>();

        $r8 = newarray (com.coremedia.iso.boxes.mdat.MediaDataBox)[$i3];

        $r10 = virtualinvoke r2.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r9 = (com.coremedia.iso.boxes.mdat.MediaDataBox[]) $r10;

        r0.<com.coremedia.iso.boxes.mdat.SampleList: com.coremedia.iso.boxes.mdat.MediaDataBox[] mdats> = $r9;

        return;
    }

    public int size()
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        long[] $r1;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        $r1 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.nio.ByteBuffer get(int)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        int i0, i2, i3, i4;
        long l1, l5, l6, $l7, $l8, $l9, $l12;
        com.coremedia.iso.boxes.mdat.MediaDataBox[] r1;
        com.coremedia.iso.boxes.mdat.MediaDataBox r2;
        long[] $r3, $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        java.util.HashMap $r12, $r16;
        java.lang.String $r13;
        java.lang.Long $r14, $r17;
        java.lang.Object $r15, $r18;
        byte $b10, $b11;
        java.nio.ByteBuffer $r19;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        i0 := @parameter0: int;

        $r3 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] offsets>;

        l1 = $r3[i0];

        $r4 = r0.<com.coremedia.iso.boxes.mdat.SampleList: long[] sizes>;

        $l7 = $r4[i0];

        i2 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l7);

        r1 = r0.<com.coremedia.iso.boxes.mdat.SampleList: com.coremedia.iso.boxes.mdat.MediaDataBox[] mdats>;

        i3 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i3 goto label3;

        r2 = r1[i4];

        $r12 = r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatStartCache>;

        $r15 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r14 = (java.lang.Long) $r15;

        l5 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $r16 = r0.<com.coremedia.iso.boxes.mdat.SampleList: java.util.HashMap mdatEndCache>;

        $r18 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r17 = (java.lang.Long) $r18;

        l6 = virtualinvoke $r17.<java.lang.Long: long longValue()>();

        $b10 = l5 cmp l1;

        if $b10 > 0 goto label2;

        $l8 = (long) i2;

        $l9 = l1 + $l8;

        $b11 = $l9 cmp l6;

        if $b11 > 0 goto label2;

        $l12 = l1 - l5;

        $r19 = virtualinvoke r2.<com.coremedia.iso.boxes.mdat.MediaDataBox: java.nio.ByteBuffer getContent(long,int)>($l12, i2);

        return $r19;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The sample with offset ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and size ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is NOT located within an mdat");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r5;
    }

    java.util.Map getOffsets(com.coremedia.iso.boxes.fragment.MovieFragmentBox, long, com.coremedia.iso.boxes.fragment.TrackExtendsBox)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox r1;
        long l0, l1, l2, l3, l4, $l6, $l7, $l9, $l10, $l11, l12, l13;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox r2;
        java.util.HashMap r3, $r12;
        java.util.List r4, $r16, $r19;
        java.util.Iterator r5, r7, r11;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox r6, $r20;
        com.coremedia.iso.boxes.fragment.TrackRunBox r8;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r9, $r13, $r15, $r32;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r14, $r18, $r21;
        byte $b5;
        com.coremedia.iso.boxes.ContainerBox $r17;
        int $i8;
        java.lang.Long $r22, $r23, $r27, $r28, $r30, $r31;
        java.lang.RuntimeException $r24;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        r1 := @parameter0: com.coremedia.iso.boxes.fragment.MovieFragmentBox;

        l0 := @parameter1: long;

        r2 := @parameter2: com.coremedia.iso.boxes.fragment.TrackExtendsBox;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r3 = $r12;

        r4 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/TrackFragmentBox");

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.fragment.TrackFragmentBox) $r14;

        $r13 = virtualinvoke r6.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        $l6 = virtualinvoke $r13.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>();

        $b5 = $l6 cmp l0;

        if $b5 != 0 goto label11;

        $r15 = virtualinvoke r6.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        $z1 = virtualinvoke $r15.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean hasBaseDataOffset()>();

        if $z1 == 0 goto label02;

        $r32 = virtualinvoke r6.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        l1 = virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getBaseDataOffset()>();

        goto label03;

     label02:
        l1 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: long getOffset()>();

     label03:
        $r16 = virtualinvoke r6.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/TrackRunBox");

        r7 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.coremedia.iso.boxes.fragment.TrackRunBox) $r18;

        $i8 = virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getDataOffset()>();

        $l7 = (long) $i8;

        l2 = l1 + $l7;

        $r17 = virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.ContainerBox getParent()>();

        $r20 = (com.coremedia.iso.boxes.fragment.TrackFragmentBox) $r17;

        r9 = virtualinvoke $r20.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        l3 = 0L;

        $r19 = virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        r11 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r21 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r21;

        $z3 = virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleSizePresent()>();

        if $z3 == 0 goto label06;

        l4 = virtualinvoke r10.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long getSampleSize()>();

        $l11 = l3 + l2;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r30);

        l3 = l3 + l4;

        goto label09;

     label06:
        $z4 = virtualinvoke r9.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean hasDefaultSampleSize()>();

        if $z4 == 0 goto label07;

        l12 = virtualinvoke r9.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleSize()>();

        $l10 = l3 + l2;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l12);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r27);

        l3 = l3 + l12;

        goto label09;

     label07:
        if r2 != null goto label08;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>("File doesn\'t contain trex box but track fragments aren\'t fully self contained. Cannot determine sample size.");

        throw $r24;

     label08:
        l13 = virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getDefaultSampleSize()>();

        $l9 = l3 + l2;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r22);

        l3 = l3 + l13;

     label09:
        goto label05;

     label10:
        goto label04;

     label11:
        goto label01;

     label12:
        return r3;
    }

    public volatile java.lang.Object get(int)
    {
        com.coremedia.iso.boxes.mdat.SampleList r0;
        int i0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.coremedia.iso.boxes.mdat.SampleList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.mdat.SampleList: java.nio.ByteBuffer get(int)>(i0);

        return $r1;
    }
}
