public abstract class com.android.gallery3d.filtershow.filters.ImageFilterRS extends com.android.gallery3d.filtershow.filters.ImageFilter
{
    private static final java.lang.String LOGTAG;
    private boolean DEBUG;
    private int mLastInputWidth;
    private int mLastInputHeight;
    private long mLastTimeCalled;
    public static boolean PERF_LOGGING;
    private static com.android.gallery3d.filtershow.filters.ScriptC_grey mGreyConvert;
    private static android.support.v8.renderscript.RenderScript mRScache;
    private volatile boolean mResourcesLoaded;

    public void <init>()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        specialinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilter: void <init>()>();

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean DEBUG> = 0;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputWidth> = 0;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputHeight> = 0;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean mResourcesLoaded> = 0;

        return;
    }

    protected abstract void createFilter(android.content.res.Resources, float, int);

    protected void createFilter(android.content.res.Resources, float, int, android.support.v8.renderscript.Allocation)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        android.content.res.Resources r1;
        float f0;
        int i0;
        android.support.v8.renderscript.Allocation r2;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        r1 := @parameter0: android.content.res.Resources;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        r2 := @parameter3: android.support.v8.renderscript.Allocation;

        return;
    }

    protected void bindScriptValues(android.support.v8.renderscript.Allocation)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        android.support.v8.renderscript.Allocation r1;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        return;
    }

    protected abstract void runFilter();

    protected void update(android.graphics.Bitmap)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        android.graphics.Bitmap r1;
        android.support.v8.renderscript.Allocation $r2;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation getOutPixelsAllocation()>();

        virtualinvoke $r2.<android.support.v8.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>(r1);

        return;
    }

    protected android.support.v8.renderscript.RenderScript getRenderScriptContext()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface r1;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r2;
        android.support.v8.renderscript.RenderScript $r3;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        $r2 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r1 = virtualinvoke $r2.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        $r3 = interfaceinvoke r1.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.support.v8.renderscript.RenderScript getRSContext()>();

        return $r3;
    }

    protected android.support.v8.renderscript.Allocation getInPixelsAllocation()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface r1;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r2;
        android.support.v8.renderscript.Allocation $r3;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        $r2 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r1 = virtualinvoke $r2.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        $r3 = interfaceinvoke r1.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.support.v8.renderscript.Allocation getInPixelsAllocation()>();

        return $r3;
    }

    protected android.support.v8.renderscript.Allocation getOutPixelsAllocation()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface r1;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r2;
        android.support.v8.renderscript.Allocation $r3;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        $r2 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r1 = virtualinvoke $r2.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        $r3 = interfaceinvoke r1.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.support.v8.renderscript.Allocation getOutPixelsAllocation()>();

        return $r3;
    }

    public void apply(android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        android.support.v8.renderscript.Allocation r1, r2;
        long l0, l1, l2, l3, $l6, $l7, $l10, $l11, l17, l18, l19;
        java.lang.String r3, r5, $r8, $r17, $r26, $r34, $r42, r44, r45, r46;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface r4;
        boolean $z0, $z1, $z2;
        android.support.v8.renderscript.RenderScript $r6;
        java.lang.Object[] $r7, $r15, $r22, $r28, $r37;
        android.support.v8.renderscript.Type $r9, $r12, $r32, $r38;
        java.lang.Integer $r10, $r11, $r33, $r39;
        int $i4, $i5, $i9, $i12, $i13;
        java.lang.StringBuilder $r13, $r14, $r19, $r20, $r21, $r27, $r35, $r36, $r43;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        java.lang.Float $r16, $r18, $r23, $r25, $r40, $r41;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r24, $r30, $r31;
        android.content.res.Resources $r29;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        r2 := @parameter1: android.support.v8.renderscript.Allocation;

        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $z0 = <com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean PERF_LOGGING>;

        if $z0 == 0 goto label1;

        $l10 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: long mLastTimeCalled>;

        $l11 = l0 - $l10;

        l1 = $l11 / 1000L;

        $r28 = newarray (java.lang.Object)[3];

        $r34 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: java.lang.String getName()>();

        $r28[0] = $r34;

        $r32 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i12 = virtualinvoke $r32.<android.support.v8.renderscript.Type: int getX()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r28[1] = $r33;

        $r38 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i13 = virtualinvoke $r38.<android.support.v8.renderscript.Type: int getY()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r28[2] = $r39;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s; image size %dx%d; ", $r28);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r37 = newarray (java.lang.Object)[2];

        $f9 = (float) l1;

        $f12 = $f9 / 1000.0F;

        $r41 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f12);

        $r37[0] = $r41;

        $f10 = (float) l1;

        $f11 = 1000000.0F / $f10;

        $r40 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        $r37[1] = $r40;

        $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("called after %.2f ms (%.2f FPS); ", $r37);

        $r43 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImageFilterRS", r44);

     label1:
        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: long mLastTimeCalled> = l0;

        $z1 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean mResourcesLoaded>;

        if $z1 != 0 goto label2;

        $r24 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r4 = virtualinvoke $r24.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        $r29 = interfaceinvoke r4.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.content.res.Resources getResources()>();

        $r30 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        $f8 = virtualinvoke $r30.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: float getScaleFactor()>();

        $r31 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        $i9 = virtualinvoke $r31.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: int getQuality()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void createFilter(android.content.res.Resources,float,int,android.support.v8.renderscript.Allocation)>($r29, $f8, $i9, r1);

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean mResourcesLoaded> = 1;

     label2:
        l17 = staticinvoke <java.lang.System: long nanoTime()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void bindScriptValues(android.support.v8.renderscript.Allocation)>(r1);

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void run(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation)>(r1, r2);

        $z2 = <com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean PERF_LOGGING>;

        if $z2 == 0 goto label3;

        $r6 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript getRenderScriptContext()>();

        virtualinvoke $r6.<android.support.v8.renderscript.RenderScript: void finish()>();

        l18 = staticinvoke <java.lang.System: long nanoTime()>();

        l19 = staticinvoke <java.lang.System: long nanoTime()>();

        $r7 = newarray (java.lang.Object)[3];

        $r8 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: java.lang.String getName()>();

        $r7[0] = $r8;

        $r9 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i4 = virtualinvoke $r9.<android.support.v8.renderscript.Type: int getX()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[1] = $r10;

        $r12 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i5 = virtualinvoke $r12.<android.support.v8.renderscript.Type: int getY()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r7[2] = $r11;

        r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s; image size %dx%d; ", $r7);

        $l7 = l19 - l0;

        l2 = $l7 / 1000L;

        $l6 = l18 - l17;

        l3 = $l6 / 1000L;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r15 = newarray (java.lang.Object)[2];

        $f0 = (float) l2;

        $f1 = $f0 / 1000.0F;

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r15[0] = $r16;

        $f2 = (float) l2;

        $f3 = 1000000.0F / $f2;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r15[1] = $r18;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("over all %.2f ms (%.2f FPS); ", $r15);

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r45 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r22 = newarray (java.lang.Object)[2];

        $f5 = (float) l3;

        $f4 = $f5 / 1000.0F;

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r22[0] = $r23;

        $f7 = (float) l3;

        $f6 = 1000000.0F / $f7;

        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r22[1] = $r25;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("run filter %.2f ms (%.2f FPS)", $r22);

        $r27 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        r46 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImageFilterRS", r46);

     label3:
        return;
    }

    protected void run(android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        android.support.v8.renderscript.Allocation r1, r2;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        r2 := @parameter1: android.support.v8.renderscript.Allocation;

        return;
    }

    public android.graphics.Bitmap apply(android.graphics.Bitmap, float, int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        android.graphics.Bitmap r1;
        float f0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface r2;
        android.content.res.Resources r3;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r4;
        android.support.v8.renderscript.Allocation $r5, $r6, $r9, $r19, $r21;
        android.support.v8.renderscript.Type $r7, $r8, $r18, $r20;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r22, $r23, $r24, $r27, $r30, $r31, $r32, $r33, $r34, $r38, $r39, $r40, $r42, $r45;
        java.lang.String $r11, $r16, $r17, $r25, $r26, $r29, $r36, $r37, $r41, $r43;
        android.renderscript.RSIllegalArgumentException $r28, r46;
        android.renderscript.RSRuntimeException $r35, r47;
        java.lang.OutOfMemoryError $r44, r48;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        r1 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        if r1 == null goto label01;

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i1 == 0 goto label01;

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i2 != 0 goto label02;

     label01:
        return r1;

     label02:
        $r4 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r2 = virtualinvoke $r4.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        $z1 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean DEBUG>;

        if $z1 == 0 goto label03;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("apply filter ");

        $r26 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: java.lang.String getName()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in pipeline ");

        $r25 = interfaceinvoke r2.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: java.lang.String getName()>();

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ImageFilterRS", $r29);

     label03:
        r3 = interfaceinvoke r2.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.content.res.Resources getResources()>();

        z0 = 0;

        $r5 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation getInPixelsAllocation()>();

        if $r5 == null goto label05;

        $r19 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation getInPixelsAllocation()>();

        $r18 = virtualinvoke $r19.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i6 = virtualinvoke $r18.<android.support.v8.renderscript.Type: int getX()>();

        $i8 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputWidth>;

        if $i6 != $i8 goto label04;

        $r21 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation getInPixelsAllocation()>();

        $r20 = virtualinvoke $r21.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i7 = virtualinvoke $r20.<android.support.v8.renderscript.Type: int getY()>();

        $i9 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputHeight>;

        if $i7 == $i9 goto label05;

     label04:
        z0 = 1;

     label05:
        $z2 = interfaceinvoke r2.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: boolean prepareRenderscriptAllocations(android.graphics.Bitmap)>(r1);

        if $z2 != 0 goto label06;

        $z4 = specialinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean isResourcesLoaded()>();

        if $z4 == 0 goto label06;

        if z0 == 0 goto label07;

     label06:
        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void freeResources()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void createFilter(android.content.res.Resources,float,int)>(r3, f0, i0);

        specialinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void setResourcesLoaded(boolean)>(1);

        $r6 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation getInPixelsAllocation()>();

        $r7 = virtualinvoke $r6.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i3 = virtualinvoke $r7.<android.support.v8.renderscript.Type: int getX()>();

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputWidth> = $i3;

        $r9 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation getInPixelsAllocation()>();

        $r8 = virtualinvoke $r9.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i4 = virtualinvoke $r8.<android.support.v8.renderscript.Type: int getY()>();

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputHeight> = $i4;

     label07:
        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void bindScriptValues()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void runFilter()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void update(android.graphics.Bitmap)>(r1);

        $z3 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean DEBUG>;

        if $z3 == 0 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DONE apply filter ");

        $r11 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in pipeline ");

        $r16 = interfaceinvoke r2.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ImageFilterRS", $r17);

     label08:
        goto label12;

     label09:
        $r28 := @caughtexception;

        r46 = $r28;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal argument? ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFilterRS", $r36);

        goto label12;

     label10:
        $r35 := @caughtexception;

        r47 = $r35;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RS runtime exception ? ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFilterRS", $r37);

        goto label12;

     label11:
        $r44 := @caughtexception;

        r48 = $r44;

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void displayLowMemoryToast()>();

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not enough memory for filter ");

        $r41 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: java.lang.String getName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageFilterRS", $r43, r48);

     label12:
        return r1;

        catch android.renderscript.RSIllegalArgumentException from label02 to label08 with label09;
        catch android.renderscript.RSRuntimeException from label02 to label08 with label10;
        catch java.lang.OutOfMemoryError from label02 to label08 with label11;
    }

    protected static android.support.v8.renderscript.Allocation convertBitmap(android.support.v8.renderscript.RenderScript, android.graphics.Bitmap)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.graphics.Bitmap r1;
        android.support.v8.renderscript.Allocation$MipmapControl $r2;
        android.support.v8.renderscript.Allocation $r3;

        r0 := @parameter0: android.support.v8.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        $r2 = <android.support.v8.renderscript.Allocation$MipmapControl: android.support.v8.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r3 = staticinvoke <android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Allocation createFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int)>(r0, r1, $r2, 3);

        return $r3;
    }

    private static android.support.v8.renderscript.Allocation convertRGBAtoA(android.support.v8.renderscript.RenderScript, android.graphics.Bitmap)
    {
        android.support.v8.renderscript.RenderScript r0, $r5;
        android.graphics.Bitmap r1;
        android.support.v8.renderscript.Type$Builder r2, $r9;
        android.support.v8.renderscript.Allocation r3, r4;
        com.android.gallery3d.filtershow.filters.ScriptC_grey $r6, $r20, $r21;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        android.support.v8.renderscript.Element $r10, $r12, $r13;
        android.support.v8.renderscript.Type $r11, $r14, $r15, $r19;
        boolean $z0;
        int $i0, $i1;
        android.support.v8.renderscript.Allocation$MipmapControl $r18;

        r0 := @parameter0: android.support.v8.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        $r5 = <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript mRScache>;

        if r0 != $r5 goto label1;

        $r21 = <com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.filters.ScriptC_grey mGreyConvert>;

        if $r21 != null goto label2;

     label1:
        $r6 = new com.android.gallery3d.filtershow.filters.ScriptC_grey;

        $r7 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: android.content.Context getApplicationContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r6.<com.android.gallery3d.filtershow.filters.ScriptC_grey: void <init>(android.support.v8.renderscript.RenderScript,android.content.res.Resources,int)>(r0, $r8, 2131230728);

        <com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.filters.ScriptC_grey mGreyConvert> = $r6;

        <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript mRScache> = r0;

     label2:
        $r9 = new android.support.v8.renderscript.Type$Builder;

        $r10 = staticinvoke <android.support.v8.renderscript.Element: android.support.v8.renderscript.Element A_8(android.support.v8.renderscript.RenderScript)>(r0);

        specialinvoke $r9.<android.support.v8.renderscript.Type$Builder: void <init>(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element)>(r0, $r10);

        r2 = $r9;

        r3 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation convertBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap)>(r0, r1);

        $r11 = virtualinvoke r3.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $r12 = virtualinvoke $r11.<android.support.v8.renderscript.Type: android.support.v8.renderscript.Element getElement()>();

        $r13 = staticinvoke <android.support.v8.renderscript.Element: android.support.v8.renderscript.Element A_8(android.support.v8.renderscript.RenderScript)>(r0);

        $z0 = virtualinvoke $r12.<android.support.v8.renderscript.Element: boolean isCompatible(android.support.v8.renderscript.Element)>($r13);

        if $z0 == 0 goto label3;

        return r3;

     label3:
        $r14 = virtualinvoke r3.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i0 = virtualinvoke $r14.<android.support.v8.renderscript.Type: int getX()>();

        virtualinvoke r2.<android.support.v8.renderscript.Type$Builder: android.support.v8.renderscript.Type$Builder setX(int)>($i0);

        $r15 = virtualinvoke r3.<android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Type getType()>();

        $i1 = virtualinvoke $r15.<android.support.v8.renderscript.Type: int getY()>();

        virtualinvoke r2.<android.support.v8.renderscript.Type$Builder: android.support.v8.renderscript.Type$Builder setY(int)>($i1);

        $r19 = virtualinvoke r2.<android.support.v8.renderscript.Type$Builder: android.support.v8.renderscript.Type create()>();

        $r18 = <android.support.v8.renderscript.Allocation$MipmapControl: android.support.v8.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        r4 = staticinvoke <android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Allocation createTyped(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Type,android.support.v8.renderscript.Allocation$MipmapControl,int)>(r0, $r19, $r18, 3);

        $r20 = <com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.filters.ScriptC_grey mGreyConvert>;

        virtualinvoke $r20.<com.android.gallery3d.filtershow.filters.ScriptC_grey: void forEach_RGBAtoA(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation)>(r3, r4);

        virtualinvoke r3.<android.support.v8.renderscript.Allocation: void destroy()>();

        return r4;
    }

    public android.support.v8.renderscript.Allocation loadScaledResourceAlpha(int, int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        int i0, i1;
        android.content.res.Resources r1;
        android.graphics.BitmapFactory$Options r2, $r7;
        android.graphics.Bitmap r3;
        android.support.v8.renderscript.Allocation r4;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r5;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface $r6;
        android.support.v8.renderscript.RenderScript $r8;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        $r6 = virtualinvoke $r5.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        r1 = interfaceinvoke $r6.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.content.res.Resources getResources()>();

        $r7 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r7;

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = i1;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>(r1, i0, r2);

        $r8 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript getRenderScriptContext()>();

        r4 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation convertRGBAtoA(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap)>($r8, r3);

        virtualinvoke r3.<android.graphics.Bitmap: void recycle()>();

        return r4;
    }

    public android.support.v8.renderscript.Allocation loadScaledResourceAlpha(int, int, int, int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        int i0, i1, i2, i3;
        android.content.res.Resources r1;
        android.graphics.BitmapFactory$Options r2, $r8;
        android.graphics.Bitmap r3, r4;
        android.support.v8.renderscript.Allocation r5;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r6;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface $r7;
        android.support.v8.renderscript.RenderScript $r9;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r6 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        $r7 = virtualinvoke $r6.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        r1 = interfaceinvoke $r7.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.content.res.Resources getResources()>();

        $r8 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r8.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r8;

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = i3;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>(r1, i0, r2);

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r3, i1, i2, 1);

        $r9 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript getRenderScriptContext()>();

        r5 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation convertRGBAtoA(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap)>($r9, r4);

        virtualinvoke r4.<android.graphics.Bitmap: void recycle()>();

        virtualinvoke r3.<android.graphics.Bitmap: void recycle()>();

        return r5;
    }

    public android.support.v8.renderscript.Allocation loadResourceAlpha(int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        int i0;
        android.support.v8.renderscript.Allocation $r1;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation loadScaledResourceAlpha(int,int)>(i0, 1);

        return $r1;
    }

    public android.support.v8.renderscript.Allocation loadResource(int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        int i0;
        android.content.res.Resources r1;
        android.graphics.BitmapFactory$Options r2, $r7;
        android.graphics.Bitmap r3;
        android.support.v8.renderscript.Allocation r4;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r5;
        com.android.gallery3d.filtershow.pipeline.PipelineInterface $r6;
        android.graphics.Bitmap$Config $r8;
        android.support.v8.renderscript.RenderScript $r9;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        i0 := @parameter0: int;

        $r5 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        $r6 = virtualinvoke $r5.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.PipelineInterface getPipeline()>();

        r1 = interfaceinvoke $r6.<com.android.gallery3d.filtershow.pipeline.PipelineInterface: android.content.res.Resources getResources()>();

        $r7 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r7;

        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r8;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>(r1, i0, r2);

        $r9 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript getRenderScriptContext()>();

        r4 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.Allocation convertBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap)>($r9, r3);

        virtualinvoke r3.<android.graphics.Bitmap: void recycle()>();

        return r4;
    }

    private boolean isResourcesLoaded()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        $z0 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean mResourcesLoaded>;

        return $z0;
    }

    private void setResourcesLoaded(boolean)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        boolean z0;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        z0 := @parameter0: boolean;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean mResourcesLoaded> = z0;

        return;
    }

    protected abstract void resetAllocations();

    public abstract void resetScripts();

    protected abstract void bindScriptValues();

    public void freeResources()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterRS r0;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterRS;

        $z0 = specialinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean isResourcesLoaded()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void resetAllocations()>();

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputWidth> = 0;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: int mLastInputHeight> = 0;

        specialinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterRS: void setResourcesLoaded(boolean)>(0);

        return;
    }

    static void <clinit>()
    {
        <com.android.gallery3d.filtershow.filters.ImageFilterRS: java.lang.String LOGTAG> = "ImageFilterRS";

        <com.android.gallery3d.filtershow.filters.ImageFilterRS: boolean PERF_LOGGING> = 0;

        <com.android.gallery3d.filtershow.filters.ImageFilterRS: com.android.gallery3d.filtershow.filters.ScriptC_grey mGreyConvert> = null;

        <com.android.gallery3d.filtershow.filters.ImageFilterRS: android.support.v8.renderscript.RenderScript mRScache> = null;

        return;
    }
}
