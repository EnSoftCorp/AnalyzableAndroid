public final class com.android.gallery3d.util.MotionEventHelper extends java.lang.Object
{

    private void <init>()
    {
        com.android.gallery3d.util.MotionEventHelper r0;

        r0 := @this: com.android.gallery3d.util.MotionEventHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.view.MotionEvent transformEvent(android.view.MotionEvent, android.graphics.Matrix)
    {
        android.view.MotionEvent r0, $r2, $r3;
        android.graphics.Matrix r1;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.graphics.Matrix;

        $z0 = <com.android.gallery3d.common.ApiHelper: boolean HAS_MOTION_EVENT_TRANSFORM>;

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.android.gallery3d.util.MotionEventHelper: android.view.MotionEvent transformEventNew(android.view.MotionEvent,android.graphics.Matrix)>(r0, r1);

        return $r3;

     label1:
        $r2 = staticinvoke <com.android.gallery3d.util.MotionEventHelper: android.view.MotionEvent transformEventOld(android.view.MotionEvent,android.graphics.Matrix)>(r0, r1);

        return $r2;
    }

    private static android.view.MotionEvent transformEventNew(android.view.MotionEvent, android.graphics.Matrix)
    {
        android.view.MotionEvent r0, r2;
        android.graphics.Matrix r1;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.graphics.Matrix;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r0);

        virtualinvoke r2.<android.view.MotionEvent: void transform(android.graphics.Matrix)>(r1);

        return r2;
    }

    private static android.view.MotionEvent transformEventOld(android.view.MotionEvent, android.graphics.Matrix)
    {
        android.view.MotionEvent r0, r11;
        android.graphics.Matrix r1;
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        int[] r2;
        android.view.MotionEvent$PointerCoords[] r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        float[] r4;
        android.view.MotionEvent$PointerCoords $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.graphics.Matrix;

        l0 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        l1 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        i2 = virtualinvoke r0.<android.view.MotionEvent: int getAction()>();

        i3 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        r2 = staticinvoke <com.android.gallery3d.util.MotionEventHelper: int[] getPointerIds(android.view.MotionEvent)>(r0);

        r3 = staticinvoke <com.android.gallery3d.util.MotionEventHelper: android.view.MotionEvent$PointerCoords[] getPointerCoords(android.view.MotionEvent)>(r0);

        i4 = virtualinvoke r0.<android.view.MotionEvent: int getMetaState()>();

        f0 = virtualinvoke r0.<android.view.MotionEvent: float getXPrecision()>();

        f1 = virtualinvoke r0.<android.view.MotionEvent: float getYPrecision()>();

        i5 = virtualinvoke r0.<android.view.MotionEvent: int getDeviceId()>();

        i6 = virtualinvoke r0.<android.view.MotionEvent: int getEdgeFlags()>();

        i7 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        i8 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $i11 = lengthof r3;

        $i12 = $i11 * 2;

        r4 = newarray (float)[$i12];

        i9 = 0;

     label1:
        if i9 >= i3 goto label2;

        $i16 = 2 * i9;

        $r8 = r3[i9];

        $f5 = $r8.<android.view.MotionEvent$PointerCoords: float x>;

        r4[$i16] = $f5;

        $i15 = 2 * i9;

        $i17 = $i15 + 1;

        $r10 = r3[i9];

        $f7 = $r10.<android.view.MotionEvent$PointerCoords: float y>;

        r4[$i17] = $f7;

        i9 = i9 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.graphics.Matrix: void mapPoints(float[])>(r4);

        i18 = 0;

     label3:
        if i18 >= i3 goto label4;

        $r5 = r3[i18];

        $i10 = 2 * i18;

        $f2 = r4[$i10];

        $r5.<android.view.MotionEvent$PointerCoords: float x> = $f2;

        $r7 = r3[i18];

        $i13 = 2 * i18;

        $i14 = $i13 + 1;

        $f4 = r4[$i14];

        $r7.<android.view.MotionEvent$PointerCoords: float y> = $f4;

        $r9 = r3[i18];

        $r6 = r3[i18];

        $f3 = $r6.<android.view.MotionEvent$PointerCoords: float orientation>;

        $f6 = staticinvoke <com.android.gallery3d.util.MotionEventHelper: float transformAngle(android.graphics.Matrix,float)>(r1, $f3);

        $r9.<android.view.MotionEvent$PointerCoords: float orientation> = $f6;

        i18 = i18 + 1;

        goto label3;

     label4:
        r11 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent$PointerCoords[],int,float,float,int,int,int,int)>(l0, l1, i2, i3, r2, r3, i4, f0, f1, i5, i6, i7, i8);

        return r11;
    }

    private static int[] getPointerIds(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        int[] r1;

        r0 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        r1 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r0.<android.view.MotionEvent: int getPointerId(int)>(i1);

        r1[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static android.view.MotionEvent$PointerCoords[] getPointerCoords(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        android.view.MotionEvent$PointerCoords[] r1;
        android.view.MotionEvent$PointerCoords $r2, $r3;

        r0 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        r1 = newarray (android.view.MotionEvent$PointerCoords)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r2.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r1[i1] = $r2;

        $r3 = r1[i1];

        virtualinvoke r0.<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>(i1, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static float transformAngle(android.graphics.Matrix, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        float[] r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0, $b1;

        r0 := @parameter0: android.graphics.Matrix;

        f0 := @parameter1: float;

        r1 = newarray (float)[2];

        $f2 = staticinvoke <android.util.FloatMath: float sin(float)>(f0);

        r1[0] = $f2;

        $f3 = staticinvoke <android.util.FloatMath: float cos(float)>(f0);

        $f4 = neg $f3;

        r1[1] = $f4;

        virtualinvoke r0.<android.graphics.Matrix: void mapVectors(float[])>(r1);

        $f5 = r1[0];

        $d1 = (double) $f5;

        $f6 = r1[1];

        $f7 = neg $f6;

        $d0 = (double) $f7;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        f1 = (float) $d2;

        $d3 = (double) f1;

        $b0 = $d3 cmpg -1.5707963267948966;

        if $b0 >= 0 goto label1;

        $d6 = (double) f1;

        $d8 = $d6 + 3.141592653589793;

        f1 = (float) $d8;

        goto label2;

     label1:
        $d4 = (double) f1;

        $b1 = $d4 cmpl 1.5707963267948966;

        if $b1 <= 0 goto label2;

        $d5 = (double) f1;

        $d7 = $d5 - 3.141592653589793;

        f1 = (float) $d7;

     label2:
        return f1;
    }
}
