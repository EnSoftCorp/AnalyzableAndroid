public class com.coremedia.iso.boxes.MovieBox extends com.googlecode.mp4parser.AbstractContainerBox
{
    public static final java.lang.String TYPE;

    public void <init>()
    {
        com.coremedia.iso.boxes.MovieBox r0;

        r0 := @this: com.coremedia.iso.boxes.MovieBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: void <init>(java.lang.String)>("moov");

        return;
    }

    public int getTrackCount()
    {
        com.coremedia.iso.boxes.MovieBox r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.MovieBox;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.MovieBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/TrackBox");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public long[] getTrackNumbers()
    {
        com.coremedia.iso.boxes.MovieBox r0;
        java.util.List r1;
        long[] r2;
        int i0, $i1, $i2;
        com.googlecode.mp4parser.AbstractBox r3;
        com.coremedia.iso.boxes.TrackBox r4;
        java.lang.Object $r5;
        com.coremedia.iso.boxes.TrackHeaderBox $r6;
        long $l3;

        r0 := @this: com.coremedia.iso.boxes.MovieBox;

        r1 = virtualinvoke r0.<com.coremedia.iso.boxes.MovieBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/TrackBox");

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (long)[$i1];

        i0 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i2 goto label2;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (com.googlecode.mp4parser.AbstractBox) $r5;

        r4 = (com.coremedia.iso.boxes.TrackBox) r3;

        $r6 = virtualinvoke r4.<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>();

        $l3 = virtualinvoke $r6.<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>();

        r2[i0] = $l3;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public com.coremedia.iso.boxes.MovieHeaderBox getMovieHeaderBox()
    {
        com.coremedia.iso.boxes.MovieBox r0;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.Box r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.coremedia.iso.boxes.MovieHeaderBox $r5;

        r0 := @this: com.coremedia.iso.boxes.MovieBox;

        $r3 = r0.<com.coremedia.iso.boxes.MovieBox: java.util.List boxes>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.Box) $r4;

        $z1 = r2 instanceof com.coremedia.iso.boxes.MovieHeaderBox;

        if $z1 == 0 goto label2;

        $r5 = (com.coremedia.iso.boxes.MovieHeaderBox) r2;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.MovieBox: java.lang.String TYPE> = "moov";

        return;
    }
}
