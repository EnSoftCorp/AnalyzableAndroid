public abstract class com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor extends java.lang.Object
{
    int tag;
    int sizeOfInstance;
    int sizeBytes;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getTag()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int tag>;

        return $i0;
    }

    public int getSize()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance>;

        $i2 = $i0 + 1;

        $i1 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeBytes>;

        $i3 = $i2 + $i1;

        return $i3;
    }

    public int getSizeOfInstance()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance>;

        return $i0;
    }

    public int getSizeBytes()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeBytes>;

        return $i0;
    }

    public final void parse(int, java.nio.ByteBuffer) throws java.io.IOException
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.nio.ByteBuffer r1, r2;
        byte b1;
        boolean $z0;
        java.lang.StringBuilder $r5, $r9, $r10;
        java.lang.AssertionError $r6;
        java.lang.String $r7, $r11;
        java.lang.Class $r8;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.ByteBuffer;

        r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int tag> = i0;

        b1 = 0;

        i2 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        i14 = b1 + 1;

        $i3 = i2 & 127;

        r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance> = $i3;

     label1:
        $i4 = i2 >>> 7;

        if $i4 != 1 goto label2;

        i2 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        i14 = i14 + 1;

        $i11 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance>;

        $i13 = $i11 << 7;

        $i10 = i2 & 127;

        $i12 = $i13 | $i10;

        r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance> = $i12;

        goto label1;

     label2:
        r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeBytes> = i14;

        r2 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $i5 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i5);

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: void parseDetail(java.nio.ByteBuffer)>(r2);

        $z0 = <com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i9 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        if $i9 == 0 goto label3;

        $r6 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not been fully parsed");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r6;

     label3:
        $i6 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $i7 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance>;

        $i8 = $i6 + $i7;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i8);

        return;
    }

    public abstract void parseDetail(java.nio.ByteBuffer) throws java.io.IOException;

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor r0;
        java.lang.StringBuilder r1, $r2, $r4, $r6;
        int $i0, $i1;
        java.lang.String $r9;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BaseDescriptor");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{tag=");

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int tag>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sizeOfInstance=");

        $i1 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: int sizeOfInstance>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/googlecode/mp4parser/boxes/mp4/objectdescriptors/BaseDescriptor";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: boolean $assertionsDisabled> = $z1;

        return;
    }
}
