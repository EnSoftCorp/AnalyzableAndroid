public class com.android.gallery3d.filtershow.imageshow.EclipseControl extends java.lang.Object
{
    private float mCenterX;
    private float mCenterY;
    private float mRadiusX;
    private float mRadiusY;
    private static int MIN_TOUCH_DIST;
    private static java.lang.String LOGTAG;
    private float[] handlex;
    private float[] handley;
    private int mSliderColor;
    private int mCenterDotSize;
    private float mDownX;
    private float mDownY;
    private float mDownCenterX;
    private float mDownCenterY;
    private float mDownRadiusX;
    private float mDownRadiusY;
    private android.graphics.Matrix mScrToImg;
    private boolean mShowReshapeHandles;
    public static final int HAN_CENTER;
    public static final int HAN_NORTH;
    public static final int HAN_NE;
    public static final int HAN_EAST;
    public static final int HAN_SE;
    public static final int HAN_SOUTH;
    public static final int HAN_SW;
    public static final int HAN_WEST;
    public static final int HAN_NW;
    private android.graphics.Rect mImageBounds;

    public void <init>(android.content.Context)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.content.Context r1;
        float[] $r2, $r3;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterX> = #NaNF;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterY> = 0.0F;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusX> = 200.0F;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusY> = 300.0F;

        $r2 = newarray (float)[9];

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex> = $r2;

        $r3 = newarray (float)[9];

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handley> = $r3;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mCenterDotSize> = 40;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: boolean mShowReshapeHandles> = 1;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mSliderColor> = -1;

        return;
    }

    public void setRadius(float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        float f0, f1;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusX> = f0;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusY> = f1;

        return;
    }

    public void setCenter(float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        float f0, f1;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterX> = f0;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterY> = f1;

        return;
    }

    public int getCloseHandle(float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, i9;
        float[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b6, $b8;
        double $d0, $d1;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 = 3.4028235E38F;

        i0 = -1;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex>;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $r5 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex>;

        $f12 = $r5[i1];

        f3 = $f12 - f0;

        $r6 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handley>;

        $f14 = $r6[i1];

        f4 = $f14 - f1;

        $f15 = f3 * f3;

        $f13 = f4 * f4;

        f5 = $f15 + $f13;

        $b8 = f5 cmpg f2;

        if $b8 >= 0 goto label2;

        f2 = f5;

        i0 = i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i4 = <com.android.gallery3d.filtershow.imageshow.EclipseControl: int MIN_TOUCH_DIST>;

        $i3 = <com.android.gallery3d.filtershow.imageshow.EclipseControl: int MIN_TOUCH_DIST>;

        $i5 = $i4 * $i3;

        $f6 = (float) $i5;

        $b6 = f2 cmpg $f6;

        if $b6 >= 0 goto label4;

        return i0;

     label4:
        i9 = 0;

     label5:
        $r2 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex>;

        $i7 = lengthof $r2;

        if i9 >= $i7 goto label6;

        $r3 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex>;

        $f7 = $r3[i9];

        f16 = $f7 - f0;

        $r4 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handley>;

        $f8 = $r4[i9];

        f17 = $f8 - f1;

        $f9 = f16 * f16;

        $f10 = f17 * f17;

        $f11 = $f9 + $f10;

        $d0 = (double) $f11;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f18 = (float) $d1;

        i9 = i9 + 1;

        goto label5;

     label6:
        return -1;
    }

    public void setScrImageInfo(android.graphics.Matrix, android.graphics.Rect)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Matrix r1;
        android.graphics.Rect r2, $r3;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: android.graphics.Rect;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: android.graphics.Matrix mScrToImg> = r1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r2);

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: android.graphics.Rect mImageBounds> = $r3;

        return;
    }

    private boolean centerIsOutside(float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        float f0, f1;
        int $i0, $i1;
        android.graphics.Rect $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: android.graphics.Rect mImageBounds>;

        $i1 = (int) f0;

        $i0 = (int) f1;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean contains(int,int)>($i1, $i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void actionDown(float, float, com.android.gallery3d.filtershow.imageshow.Oval)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        com.android.gallery3d.filtershow.imageshow.Oval r1;
        float[] r2, $r3;
        android.graphics.Matrix $r4;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: com.android.gallery3d.filtershow.imageshow.Oval;

        $r3 = newarray (float)[2];

        $r3[0] = f0;

        $r3[1] = f1;

        r2 = $r3;

        $r4 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: android.graphics.Matrix mScrToImg>;

        virtualinvoke $r4.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $f2 = r2[0];

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownX> = $f2;

        $f3 = r2[1];

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownY> = $f3;

        $f4 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterX()>();

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterX> = $f4;

        $f5 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterY()>();

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterY> = $f5;

        $f6 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getRadiusX()>();

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusX> = $f6;

        $f7 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getRadiusY()>();

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusY> = $f7;

        return;
    }

    public void actionMove(int, float, float, com.android.gallery3d.filtershow.imageshow.Oval)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        int i0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, f91, f92, f93, f94, f95, f96;
        com.android.gallery3d.filtershow.imageshow.Oval r1;
        float[] r2, $r3;
        boolean z0, $z1, $z2;
        byte b1, $b2;
        android.graphics.Matrix $r4, $r5;
        double $d0;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: com.android.gallery3d.filtershow.imageshow.Oval;

        $r3 = newarray (float)[2];

        $r3[0] = f0;

        $r3[1] = f1;

        r2 = $r3;

        $r5 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: android.graphics.Matrix mScrToImg>;

        virtualinvoke $r5.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        f91 = r2[0];

        f92 = r2[1];

        r2[0] = 0.0F;

        r2[1] = 1.0F;

        $r4 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: android.graphics.Matrix mScrToImg>;

        virtualinvoke $r4.<android.graphics.Matrix: void mapVectors(float[])>(r2);

        $f15 = r2[0];

        $b2 = $f15 cmpl 0.0F;

        if $b2 <= 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        b1 = 1;

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label08;
            case 2: goto label11;
            case 3: goto label06;
            case 4: goto label11;
            case 5: goto label09;
            case 6: goto label11;
            case 7: goto label05;
            case 8: goto label11;
            default: goto label12;
        };

     label03:
        $f16 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownX>;

        $f17 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterX>;

        f2 = $f16 - $f17;

        $f18 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownY>;

        $f19 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterY>;

        f3 = $f18 - $f19;

        $f20 = f91 - f2;

        $f21 = f92 - f3;

        $z1 = specialinvoke r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: boolean centerIsOutside(float,float)>($f20, $f21);

        if $z1 == 0 goto label04;

        goto label12;

     label04:
        $f22 = f91 - f2;

        $f24 = f92 - f3;

        interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: void setCenter(float,float)>($f22, $f24);

        goto label12;

     label05:
        b1 = -1;

     label06:
        if z0 == 0 goto label07;

        $f39 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusY>;

        $f34 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownX>;

        $f33 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterY>;

        $f40 = $f34 - $f33;

        $f38 = staticinvoke <java.lang.Math: float abs(float)>($f40);

        f4 = $f39 - $f38;

        $f37 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterY()>();

        $f42 = f91 - $f37;

        $f44 = (float) b1;

        $f43 = $f44 * f4;

        $f41 = $f42 + $f43;

        $f48 = staticinvoke <java.lang.Math: float abs(float)>($f41);

        interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: void setRadiusY(float)>($f48);

        goto label12;

     label07:
        $f25 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusY>;

        $f27 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownY>;

        $f23 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterY>;

        $f28 = $f27 - $f23;

        $f26 = staticinvoke <java.lang.Math: float abs(float)>($f28);

        f93 = $f25 - $f26;

        $f31 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterY()>();

        $f30 = f92 - $f31;

        $f32 = (float) b1;

        $f29 = $f32 * f93;

        $f35 = $f30 + $f29;

        $f36 = staticinvoke <java.lang.Math: float abs(float)>($f35);

        interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: void setRadiusY(float)>($f36);

        goto label12;

     label08:
        b1 = -1;

     label09:
        if z0 == 0 goto label10;

        $f56 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusX>;

        $f54 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownY>;

        $f53 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterX>;

        $f55 = $f54 - $f53;

        $f64 = staticinvoke <java.lang.Math: float abs(float)>($f55);

        f94 = $f56 - $f64;

        $f65 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterX()>();

        $f61 = f92 - $f65;

        $f66 = (float) b1;

        $f67 = $f66 * f94;

        $f62 = $f61 + $f67;

        $f63 = staticinvoke <java.lang.Math: float abs(float)>($f62);

        interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: void setRadiusX(float)>($f63);

        goto label12;

     label10:
        $f52 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusX>;

        $f46 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownX>;

        $f47 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterX>;

        $f45 = $f46 - $f47;

        $f51 = staticinvoke <java.lang.Math: float abs(float)>($f45);

        f95 = $f52 - $f51;

        $f50 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterX()>();

        $f58 = f91 - $f50;

        $f49 = (float) b1;

        $f57 = $f49 * f95;

        $f59 = $f58 - $f57;

        $f60 = staticinvoke <java.lang.Math: float abs(float)>($f59);

        interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: void setRadiusX(float)>($f60);

        goto label12;

     label11:
        $d0 = staticinvoke <java.lang.Math: double sin(double)>(45.0);

        f96 = (float) $d0;

        $f72 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusX>;

        $f73 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownRadiusY>;

        $f75 = $f72 + $f73;

        f5 = $f75 * f96;

        $f69 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownX>;

        $f74 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterX>;

        f6 = $f69 - $f74;

        $f71 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownY>;

        $f68 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mDownCenterY>;

        f7 = $f71 - $f68;

        $f70 = staticinvoke <java.lang.Math: float abs(float)>(f6);

        $f81 = staticinvoke <java.lang.Math: float abs(float)>(f7);

        $f80 = $f70 + $f81;

        f8 = $f80 - f5;

        f9 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getRadiusX()>();

        f11 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getRadiusY()>();

        $f77 = staticinvoke <java.lang.Math: float abs(float)>(f9);

        $f76 = staticinvoke <java.lang.Math: float abs(float)>(f11);

        $f79 = $f77 + $f76;

        f10 = $f79 * f96;

        $f78 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterX()>();

        f13 = f91 - $f78;

        $f87 = interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: float getCenterY()>();

        f12 = f92 - $f87;

        $f88 = staticinvoke <java.lang.Math: float abs(float)>(f13);

        $f85 = staticinvoke <java.lang.Math: float abs(float)>(f12);

        $f86 = $f88 + $f85;

        $f84 = $f86 - f8;

        f14 = staticinvoke <java.lang.Math: float abs(float)>($f84);

        $f82 = f9 * f14;

        $f90 = $f82 / f10;

        $f83 = f11 * f14;

        $f89 = $f83 / f10;

        interfaceinvoke r1.<com.android.gallery3d.filtershow.imageshow.Oval: void setRadius(float,float)>($f90, $f89);

     label12:
        return;
    }

    public void paintGrayPoint(android.graphics.Canvas, float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Canvas r1;
        float f0, f1, $f2, $f3;
        android.graphics.Paint r2, $r5;
        int[] r3, $r7;
        android.graphics.RadialGradient r4, $r8;
        byte $b0;
        android.graphics.Paint$Style $r6;
        int $i1, $i2;
        float[] $r9;
        android.graphics.Shader$TileMode $r10;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b0 = f0 cmpl #NaNF;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r2 = $r5;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16776961);

        $r7 = newarray (int)[4];

        $r7[0] = -7829368;

        $r7[1] = -3355444;

        $r7[2] = 1711276032;

        $r7[3] = 0;

        r3 = $r7;

        $r8 = new android.graphics.RadialGradient;

        $i1 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mCenterDotSize>;

        $f2 = (float) $i1;

        $r9 = newarray (float)[4];

        $r9[0] = 0.0F;

        $r9[1] = 0.3F;

        $r9[2] = 0.31F;

        $r9[3] = 1.0F;

        $r10 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r8.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f0, f1, $f2, r3, $r9, $r10);

        r4 = $r8;

        virtualinvoke r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r4);

        $i2 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mCenterDotSize>;

        $f3 = (float) $i2;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, f1, $f3, r2);

        return;
    }

    public void paintPoint(android.graphics.Canvas, float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Canvas r1;
        float f0, f1, $f2, $f3;
        android.graphics.Paint r2, $r5;
        int[] r3, $r7;
        android.graphics.RadialGradient r4, $r8;
        byte $b0;
        android.graphics.Paint$Style $r6;
        int $i1, $i2, $i3, $i4;
        float[] $r9;
        android.graphics.Shader$TileMode $r10;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b0 = f0 cmpl #NaNF;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r2 = $r5;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16776961);

        $r7 = newarray (int)[4];

        $i1 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mSliderColor>;

        $r7[0] = $i1;

        $i2 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mSliderColor>;

        $r7[1] = $i2;

        $r7[2] = 1711276032;

        $r7[3] = 0;

        r3 = $r7;

        $r8 = new android.graphics.RadialGradient;

        $i3 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mCenterDotSize>;

        $f2 = (float) $i3;

        $r9 = newarray (float)[4];

        $r9[0] = 0.0F;

        $r9[1] = 0.3F;

        $r9[2] = 0.31F;

        $r9[3] = 1.0F;

        $r10 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r8.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f0, f1, $f2, r3, $r9, $r10);

        r4 = $r8;

        virtualinvoke r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r4);

        $i4 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: int mCenterDotSize>;

        $f3 = (float) $i4;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, f1, $f3, r2);

        return;
    }

    void paintRadius(android.graphics.Canvas, float, float, float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.graphics.Paint r2, $r4;
        android.graphics.RectF r3, $r5;
        byte $b1;
        android.graphics.Paint$Style $r6;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        $b1 = f0 cmpl #NaNF;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r2 = $r4;

        $r5 = new android.graphics.RectF;

        $f7 = f0 - f2;

        $f6 = f1 - f3;

        $f5 = f0 + f2;

        $f4 = f1 + f3;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>($f7, $f6, $f5, $f4);

        r3 = $r5;

        virtualinvoke r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        virtualinvoke r2.<android.graphics.Paint: void setStrokeWidth(float)>(6.0F);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16777216);

        virtualinvoke r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: void paintOvallines(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint,float,float,float,float)>(r1, r3, r2, f0, f1, f2, f3);

        virtualinvoke r2.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-1);

        virtualinvoke r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: void paintOvallines(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint,float,float,float,float)>(r1, r3, r2, f0, f1, f2, f3);

        return;
    }

    public void paintOvallines(android.graphics.Canvas, android.graphics.RectF, android.graphics.Paint, float, float, float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Canvas r1;
        android.graphics.RectF r2;
        android.graphics.Paint r3;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34;
        int i0, i1;
        boolean $z0;
        android.graphics.Paint$Style $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.RectF;

        r3 := @parameter2: android.graphics.Paint;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        f3 := @parameter6: float;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>(r2, r3);

        f4 = 4.0F;

        f5 = f4 + f4;

        $z0 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: boolean mShowReshapeHandles>;

        if $z0 == 0 goto label2;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        i0 = 0;

     label1:
        if i0 >= 361 goto label2;

        f6 = f2 + 10.0F;

        f7 = f3 + 10.0F;

        $f22 = f0 - f6;

        r2.<android.graphics.RectF: float left> = $f22;

        $f20 = f1 - f7;

        r2.<android.graphics.RectF: float top> = $f20;

        $f21 = f0 + f6;

        r2.<android.graphics.RectF: float right> = $f21;

        $f25 = f1 + f7;

        r2.<android.graphics.RectF: float bottom> = $f25;

        $f26 = (float) i0;

        $f23 = $f26 - f4;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r2, $f23, f5, 0, r3);

        f32 = f2 - 10.0F;

        f33 = f3 - 10.0F;

        $f24 = f0 - f32;

        r2.<android.graphics.RectF: float left> = $f24;

        $f29 = f1 - f33;

        r2.<android.graphics.RectF: float top> = $f29;

        $f30 = f0 + f32;

        r2.<android.graphics.RectF: float right> = $f30;

        $f27 = f1 + f33;

        r2.<android.graphics.RectF: float bottom> = $f27;

        $f28 = (float) i0;

        $f31 = $f28 - f4;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r2, $f31, f5, 0, r3);

        i0 = i0 + 90;

        goto label1;

     label2:
        f34 = f4 * 2.0F;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        i1 = 45;

     label3:
        if i1 >= 361 goto label4;

        $d1 = (double) i1;

        $d0 = 3.141592653589793 * $d1;

        d8 = $d0 / 180.0;

        $d3 = (double) f2;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>(d8);

        $d4 = $d3 * $d2;

        $f14 = (float) $d4;

        f8 = f0 + $f14;

        $d6 = (double) f3;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>(d8);

        $d7 = $d6 * $d5;

        $f15 = (float) $d7;

        f9 = f1 + $f15;

        $f17 = f8 - f34;

        $f16 = f9 - f34;

        $f19 = f8 + f34;

        $f18 = f9 + f34;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f17, $f16, $f19, $f18, r3);

        i1 = i1 + 90;

        goto label3;

     label4:
        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $f11 = f0 - f2;

        r2.<android.graphics.RectF: float left> = $f11;

        $f10 = f1 - f3;

        r2.<android.graphics.RectF: float top> = $f10;

        $f13 = f0 + f2;

        r2.<android.graphics.RectF: float right> = $f13;

        $f12 = f1 + f3;

        r2.<android.graphics.RectF: float bottom> = $f12;

        return;
    }

    public void fillHandles(android.graphics.Canvas, float, float, float, float)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, f4, f5, $f6, $f7;
        int i0, i1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        float[] $r2, $r3, $r4, $r5;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        $r2 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex>;

        $r2[0] = f0;

        $r3 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handley>;

        $r3[0] = f1;

        i0 = 1;

        i1 = 0;

     label1:
        if i1 >= 360 goto label2;

        $d1 = (double) i1;

        $d2 = 3.141592653589793 * $d1;

        d0 = $d2 / 180.0;

        $d4 = (double) f2;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d5 = $d4 * $d3;

        $f6 = (float) $d5;

        f4 = f0 + $f6;

        $d7 = (double) f3;

        $d6 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d8 = $d7 * $d6;

        $f7 = (float) $d8;

        f5 = f1 + $f7;

        $r5 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handlex>;

        $r5[i0] = f4;

        $r4 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float[] handley>;

        $r4[i0] = f5;

        i0 = i0 + 1;

        i1 = i1 + 45;

        goto label1;

     label2:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        android.graphics.Canvas r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        r1 := @parameter0: android.graphics.Canvas;

        $f3 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterX>;

        $f2 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterY>;

        $f1 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusX>;

        $f0 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusY>;

        virtualinvoke r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: void paintRadius(android.graphics.Canvas,float,float,float,float)>(r1, $f3, $f2, $f1, $f0);

        $f7 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterX>;

        $f6 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterY>;

        $f5 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusX>;

        $f4 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mRadiusY>;

        virtualinvoke r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: void fillHandles(android.graphics.Canvas,float,float,float,float)>(r1, $f7, $f6, $f5, $f4);

        $f9 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterX>;

        $f8 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterY>;

        virtualinvoke r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: void paintPoint(android.graphics.Canvas,float,float)>(r1, $f9, $f8);

        return;
    }

    public boolean isUndefined()
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        float $f0;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        $f0 = r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: float mCenterX>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        return $z0;
    }

    public void setShowReshapeHandles(boolean)
    {
        com.android.gallery3d.filtershow.imageshow.EclipseControl r0;
        boolean z0;

        r0 := @this: com.android.gallery3d.filtershow.imageshow.EclipseControl;

        z0 := @parameter0: boolean;

        r0.<com.android.gallery3d.filtershow.imageshow.EclipseControl: boolean mShowReshapeHandles> = z0;

        return;
    }

    static void <clinit>()
    {
        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_NW> = 6;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_WEST> = 5;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_SW> = 4;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_SOUTH> = 3;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_SE> = 2;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_EAST> = 1;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_NE> = 8;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_NORTH> = 7;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int HAN_CENTER> = 0;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: int MIN_TOUCH_DIST> = 80;

        <com.android.gallery3d.filtershow.imageshow.EclipseControl: java.lang.String LOGTAG> = "EclipseControl";

        return;
    }
}
