class com.android.gallery3d.data.ActionImage$BitmapJob extends java.lang.Object implements com.android.gallery3d.util.ThreadPool$Job
{
    private int mType;
    final com.android.gallery3d.data.ActionImage this$0;

    protected void <init>(com.android.gallery3d.data.ActionImage, int)
    {
        com.android.gallery3d.data.ActionImage$BitmapJob r0;
        com.android.gallery3d.data.ActionImage r1;
        int i0;

        r0 := @this: com.android.gallery3d.data.ActionImage$BitmapJob;

        r1 := @parameter0: com.android.gallery3d.data.ActionImage;

        i0 := @parameter1: int;

        r0.<com.android.gallery3d.data.ActionImage$BitmapJob: com.android.gallery3d.data.ActionImage this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.data.ActionImage$BitmapJob: int mType> = i0;

        return;
    }

    public android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)
    {
        com.android.gallery3d.data.ActionImage$BitmapJob r0;
        com.android.gallery3d.util.ThreadPool$JobContext r1;
        int i0, $i1, $i2, $i3;
        android.graphics.Bitmap r2, r7;
        com.android.gallery3d.data.ActionImage $r3, $r6;
        com.android.gallery3d.app.GalleryApp $r4;
        android.content.res.Resources $r5;

        r0 := @this: com.android.gallery3d.data.ActionImage$BitmapJob;

        r1 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        $i1 = r0.<com.android.gallery3d.data.ActionImage$BitmapJob: int mType>;

        i0 = staticinvoke <com.android.gallery3d.data.MediaItem: int getTargetSize(int)>($i1);

        $r3 = r0.<com.android.gallery3d.data.ActionImage$BitmapJob: com.android.gallery3d.data.ActionImage this$0>;

        $r4 = staticinvoke <com.android.gallery3d.data.ActionImage: com.android.gallery3d.app.GalleryApp access$000(com.android.gallery3d.data.ActionImage)>($r3);

        $r5 = interfaceinvoke $r4.<com.android.gallery3d.app.GalleryApp: android.content.res.Resources getResources()>();

        $r6 = r0.<com.android.gallery3d.data.ActionImage$BitmapJob: com.android.gallery3d.data.ActionImage this$0>;

        $i2 = staticinvoke <com.android.gallery3d.data.ActionImage: int access$100(com.android.gallery3d.data.ActionImage)>($r6);

        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r5, $i2);

        $i3 = r0.<com.android.gallery3d.data.ActionImage$BitmapJob: int mType>;

        if $i3 != 2 goto label1;

        r7 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeAndCropCenter(android.graphics.Bitmap,int,boolean)>(r2, i0, 1);

        goto label2;

     label1:
        r7 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeDownBySideLength(android.graphics.Bitmap,int,boolean)>(r2, i0, 1);

     label2:
        return r7;
    }

    public volatile java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
    {
        com.android.gallery3d.data.ActionImage$BitmapJob r0;
        com.android.gallery3d.util.ThreadPool$JobContext r1;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.gallery3d.data.ActionImage$BitmapJob;

        r1 := @parameter0: com.android.gallery3d.util.ThreadPool$JobContext;

        $r2 = virtualinvoke r0.<com.android.gallery3d.data.ActionImage$BitmapJob: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)>(r1);

        return $r2;
    }
}
