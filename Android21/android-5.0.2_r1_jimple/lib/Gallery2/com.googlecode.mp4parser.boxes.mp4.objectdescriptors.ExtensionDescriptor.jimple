public class com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor extends com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor
{
    private static java.util.logging.Logger log;
    byte[] bytes;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor r0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor;

        specialinvoke r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: void <init>()>();

        return;
    }

    static int[] allTags()
    {
        int[] r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.util.logging.Logger $r2;
        java.lang.String $r5;

        r0 = newarray (int)[148];

        i0 = 106;

     label1:
        if i0 >= 254 goto label2;

        i1 = i0 - 106;

        $r2 = <com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: java.util.logging.Logger log>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pos:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.logging.Logger: void finest(java.lang.String)>($r5);

        r0[i1] = i0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    public void parseDetail(java.nio.ByteBuffer) throws java.io.IOException
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor r0;
        java.nio.ByteBuffer r1;
        int $i0, $i1;
        byte[] $r2, $r3;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor;

        r1 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: int getSize()>();

        if $i0 <= 0 goto label1;

        $i1 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: int sizeOfInstance>;

        $r2 = newarray (byte)[$i1];

        r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: byte[] bytes> = $r2;

        $r3 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: byte[] bytes>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r3);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor r0;
        java.lang.StringBuilder r1, $r2, $r4;
        byte[] $r5, $r6;
        java.lang.String $r7, $r10;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExtensionDescriptor");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{bytes=");

        $r5 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: byte[] bytes>;

        if $r5 != null goto label1;

        $r7 = "null";

        goto label2;

     label1:
        $r6 = r0.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: byte[] bytes>;

        $r7 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r6);

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/googlecode/mp4parser/boxes/mp4/objectdescriptors/ExtensionDescriptor";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ExtensionDescriptor: java.util.logging.Logger log> = $r2;

        return;
    }
}
