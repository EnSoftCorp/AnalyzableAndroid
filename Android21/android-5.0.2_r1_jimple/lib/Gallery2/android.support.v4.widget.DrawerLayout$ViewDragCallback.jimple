class android.support.v4.widget.DrawerLayout$ViewDragCallback extends android.support.v4.widget.ViewDragHelper$Callback
{
    private final int mAbsGravity;
    private android.support.v4.widget.ViewDragHelper mDragger;
    private final java.lang.Runnable mPeekRunnable;
    final android.support.v4.widget.DrawerLayout this$0;

    public void <init>(android.support.v4.widget.DrawerLayout, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.support.v4.widget.DrawerLayout r1;
        int i0;
        android.support.v4.widget.DrawerLayout$ViewDragCallback$1 $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.support.v4.widget.DrawerLayout;

        i0 := @parameter1: int;

        r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0> = r1;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper$Callback: void <init>()>();

        $r2 = new android.support.v4.widget.DrawerLayout$ViewDragCallback$1;

        specialinvoke $r2.<android.support.v4.widget.DrawerLayout$ViewDragCallback$1: void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback)>(r0);

        r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable> = $r2;

        r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity> = i0;

        return;
    }

    public void setDragger(android.support.v4.widget.ViewDragHelper)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.support.v4.widget.ViewDragHelper r1;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.support.v4.widget.ViewDragHelper;

        r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger> = r1;

        return;
    }

    public void removeCallbacks()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        java.lang.Runnable $r1;
        android.support.v4.widget.DrawerLayout $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public boolean tryCaptureView(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        int i0, $i1, $i2;
        android.support.v4.widget.DrawerLayout $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, $i1);

        if $z1 == 0 goto label1;

        $r4 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i2 = virtualinvoke $r4.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r1);

        if $i2 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void onViewDragStateChanged(int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int i0, $i1;
        android.support.v4.widget.ViewDragHelper $r1;
        android.support.v4.widget.DrawerLayout $r2;
        android.view.View $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $r3 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: android.view.View getCapturedView()>();

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)>($i1, i0, $r3);

        return;
    }

    public void onViewPositionChanged(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i8;
        float f0, $f1, $f2, $f3, $f4;
        android.support.v4.widget.DrawerLayout $r2, $r3, $r4, $r5;
        boolean $z0;
        byte $b7, $b9;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z0 == 0 goto label1;

        $i8 = i4 + i0;

        $f3 = (float) $i8;

        $f4 = (float) i4;

        f0 = $f3 / $f4;

        goto label2;

     label1:
        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        i5 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i6 = i5 - i0;

        $f2 = (float) $i6;

        $f1 = (float) i4;

        f0 = $f2 / $f1;

     label2:
        $r4 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r4.<android.support.v4.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>(r1, f0);

        $b7 = f0 cmpl 0.0F;

        if $b7 != 0 goto label3;

        $b9 = 4;

        goto label4;

     label3:
        $b9 = 0;

     label4:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>($b9);

        $r5 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r5.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void onViewCaptured(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        int i0;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r3;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 0;

        specialinvoke r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()>();

        return;
    }

    private void closeOtherDrawer()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        byte b0, $b2;
        android.view.View r1;
        int $i1;
        android.support.v4.widget.DrawerLayout $r2, $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        if $i1 != 3 goto label1;

        $b2 = 5;

        goto label2;

     label1:
        $b2 = 3;

     label2:
        b0 = $b2;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        r1 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(b0);

        if r1 == null goto label3;

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: void closeDrawer(android.view.View)>(r1);

     label3:
        return;
    }

    public void onViewReleased(android.view.View, float, float)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        float f0, f1, f2;
        int i0, i1, i2, $i4, $i5, $i9;
        android.support.v4.widget.DrawerLayout $r2, $r3, $r4, $r6;
        boolean $z0;
        byte $b3, $b6, $b7, $b8, $b10, $b11;
        android.support.v4.widget.ViewDragHelper $r5;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        f2 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>(r1);

        i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z0 == 0 goto label4;

        $b7 = f0 cmpl 0.0F;

        if $b7 > 0 goto label1;

        $b10 = f0 cmpl 0.0F;

        if $b10 != 0 goto label2;

        $b11 = f2 cmpl 0.5F;

        if $b11 <= 0 goto label2;

     label1:
        $i9 = 0;

        goto label3;

     label2:
        $i9 = neg i0;

     label3:
        i1 = $i9;

        goto label8;

     label4:
        $r4 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        i2 = virtualinvoke $r4.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $b3 = f0 cmpg 0.0F;

        if $b3 < 0 goto label5;

        $b6 = f0 cmpl 0.0F;

        if $b6 != 0 goto label6;

        $b8 = f2 cmpl 0.5F;

        if $b8 <= 0 goto label6;

     label5:
        $i5 = i2 - i0;

        goto label7;

     label6:
        $i5 = i2;

     label7:
        i1 = $i5;

     label8:
        $r5 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)>(i1, $i4);

        $r6 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r6.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void onEdgeTouched(int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int i0, i1;
        java.lang.Runnable $r1;
        android.support.v4.widget.DrawerLayout $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean postDelayed(java.lang.Runnable,long)>($r1, 160L);

        return;
    }

    private void peekDrawer()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z2;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.support.v4.widget.ViewDragHelper $r3, $r7;
        android.support.v4.widget.DrawerLayout $r4, $r5, $r6, $r9, $r10, $r11;
        android.view.ViewGroup$LayoutParams $r8;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        i1 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: int getEdgeSize()>();

        $i2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        if $i2 != 3 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label5;

        $r11 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        r1 = virtualinvoke $r11.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(3);

        if r1 == null goto label3;

        $i8 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i9 = neg $i8;

        goto label4;

     label3:
        $i9 = 0;

     label4:
        i0 = $i9 + i1;

        goto label6;

     label5:
        $r4 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        r1 = virtualinvoke $r4.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(5);

        $r5 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i3 = virtualinvoke $r5.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        i0 = $i3 - i1;

     label6:
        if r1 == null goto label9;

        if z0 == 0 goto label7;

        $i7 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if $i7 < i0 goto label8;

     label7:
        if z0 != 0 goto label9;

        $i4 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if $i4 <= i0 goto label9;

     label8:
        $r6 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i5 = virtualinvoke $r6.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r1);

        if $i5 != 0 goto label9;

        $r8 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r8;

        $r7 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, i0, $i6);

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 1;

        $r10 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r10.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        specialinvoke r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()>();

        $r9 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r9.<android.support.v4.widget.DrawerLayout: void cancelChildViewTouch()>();

     label9:
        return;
    }

    public boolean onEdgeLock(int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int i0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        i0 := @parameter0: int;

        return 0;
    }

    public void onEdgeDragStarted(int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int i0, i1, $i2, $i3;
        android.view.View r1;
        android.support.v4.widget.DrawerLayout $r2, $r3, $r5;
        android.support.v4.widget.ViewDragHelper $r4;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & 1;

        if $i2 != 1 goto label1;

        $r5 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        r1 = virtualinvoke $r5.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(3);

        goto label2;

     label1:
        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        r1 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(5);

     label2:
        if r1 == null goto label3;

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i3 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r1);

        if $i3 != 0 goto label3;

        $r4 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>(r1, i1);

     label3:
        return;
    }

    public int getViewHorizontalDragRange(android.view.View)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        android.support.v4.widget.DrawerLayout $r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int clampViewPositionHorizontal(android.view.View, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.support.v4.widget.DrawerLayout $r2, $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z0 == 0 goto label1;

        $i7 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i8 = neg $i7;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(i0, 0);

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        return $i10;

     label1:
        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        i2 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i3 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i4 = i2 - $i3;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        return $i6;
    }

    public int clampViewPositionVertical(android.view.View, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View r1;
        int i0, i1, $i2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        return $i2;
    }

    static void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;

        r0 := @parameter0: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        specialinvoke r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void peekDrawer()>();

        return;
    }
}
