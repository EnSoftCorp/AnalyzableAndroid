public class com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl extends java.lang.Object implements com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder
{
    private static java.util.logging.Logger LOG;
    private static java.util.Map getTimesCache;
    private static java.util.Map getSampleNumbersCache;
    private final int minFragmentDurationSeconds;

    public void <init>()
    {
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds> = 0;

        return;
    }

    public void <init>(int)
    {
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds> = i0;

        return;
    }

    public long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r0;
        com.googlecode.mp4parser.authoring.Track r1, r7, r10, r64, r70;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple r3, $r14;
        long[] r4, r6, r8, $r21, $r22, $r48, $r51, $r53, $r54, $r55, $r57, r66, r71, r72;
        java.util.List r5, $r20, $r25, $r26, $r29, $r30, $r34, $r35, $r45, $r46;
        long l0, l1, l2, l4, l6, $l11, $l12, $l13, $l17, $l18, $l19, $l21, $l23, $l25, $l28, l31, l34;
        java.util.Iterator r9, r65, r69;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r11, r67;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22;
        int i3, i5, $i7, $i8, $i9, $i10, $i14, $i16, $i20, $i24, $i26, $i27, $i29, i30, i32, i33;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r12, r68;
        java.util.Map $r13, $r28, $r38, $r63;
        java.lang.String $r15, $r17, $r18, $r19, $r39, $r43, $r49, $r50;
        java.lang.Object $r16, $r24, $r36, $r44, $r47, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.RuntimeException $r23, $r31, $r42, $r56;
        com.coremedia.iso.boxes.SampleDescriptionBox $r32, $r41;
        com.coremedia.iso.boxes.sampleentry.SampleEntry $r33, $r40;
        byte $b15, $b22;
        com.googlecode.mp4parser.authoring.TrackMetaData $r59;
        long[][] $r60, $r61;
        java.lang.Object[] $r62;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r14 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple;

        specialinvoke $r14.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple: void <init>(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        r3 = $r14;

        $r13 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        $r16 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (long[]) $r16;

        if r4 == null goto label01;

        return r4;

     label01:
        $r15 = "vide";

        $r17 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 == 0 goto label03;

        $r57 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r57 == null goto label02;

        $r55 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i26 = lengthof $r55;

        if $i26 <= 0 goto label02;

        r5 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.List getSyncSamplesTimestamps(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r1);

        $r54 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $r53 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] getTimes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        $r59 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l28 = virtualinvoke $r59.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $i29 = interfaceinvoke r5.<java.util.List: int size()>();

        $r60 = newarray (long[])[$i29];

        $r62 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r60);

        $r61 = (long[][]) $r62;

        r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] getCommonIndices(long[],long[],long,long[][])>($r54, $r53, $l28, $r61);

        $r63 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r6);

        return r6;

     label02:
        $r56 = new java.lang.RuntimeException;

        specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String)>("Video Tracks need sync samples. Only tracks other than video may have no sync samples.");

        throw $r56;

     label03:
        $r19 = "soun";

        $r18 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label16;

        r64 = null;

        $r29 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r65 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r52 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.googlecode.mp4parser.authoring.Track) $r52;

        $r51 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r51 == null goto label05;

        $r50 = "vide";

        $r49 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r49);

        if $z6 == 0 goto label05;

        $r48 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i27 = lengthof $r48;

        if $i27 <= 0 goto label05;

        r64 = r7;

     label05:
        goto label04;

     label06:
        if r64 == null goto label15;

        r66 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r64, r2);

        $r30 = interfaceinvoke r64.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        i30 = interfaceinvoke $r30.<java.util.List: int size()>();

        $i14 = lengthof r66;

        r8 = newarray (long)[$i14];

        l0 = 192000L;

        $r35 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r9 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r44 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.googlecode.mp4parser.authoring.Track) $r44;

        $r43 = "soun";

        $r39 = interfaceinvoke r10.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z5 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z5 == 0 goto label10;

        $r41 = interfaceinvoke r10.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r40 = virtualinvoke $r41.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.SampleEntry getSampleEntry()>();

        r11 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r40;

        $l21 = virtualinvoke r11.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $b22 = $l21 cmp l0;

        if $b22 >= 0 goto label10;

        l0 = virtualinvoke r11.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $r46 = interfaceinvoke r10.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i20 = interfaceinvoke $r46.<java.util.List: int size()>();

        l2 = (long) $i20;

        $d15 = (double) l2;

        $d16 = (double) i30;

        d1 = $d15 / $d16;

        $r45 = interfaceinvoke r10.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        $r47 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(0);

        r12 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r47;

        l4 = virtualinvoke r12.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        i5 = 0;

     label08:
        $i24 = lengthof r8;

        if i5 >= $i24 goto label09;

        $l25 = r66[i5];

        $l23 = $l25 - 1L;

        $d19 = (double) $l23;

        $d18 = d1 * $d19;

        $d17 = (double) l4;

        $d21 = $d18 * $d17;

        $d20 = staticinvoke <java.lang.Math: double ceil(double)>($d21);

        l6 = (long) $d20;

        r8[i5] = l6;

        i5 = i5 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        goto label07;

     label11:
        $r32 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r33 = virtualinvoke $r32.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.SampleEntry getSampleEntry()>();

        r67 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r33;

        $r34 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        $r36 = interfaceinvoke $r34.<java.util.List: java.lang.Object get(int)>(0);

        r68 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r36;

        l31 = virtualinvoke r68.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $l17 = virtualinvoke r67.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $d7 = (double) $l17;

        $d9 = (double) l0;

        d0 = $d7 / $d9;

        $d8 = staticinvoke <java.lang.Math: double rint(double)>(d0);

        $b15 = d0 cmpl $d8;

        if $b15 == 0 goto label12;

        $r42 = new java.lang.RuntimeException;

        specialinvoke $r42.<java.lang.RuntimeException: void <init>(java.lang.String)>("Sample rates must be a multiple of the lowest sample rate to create a correct file!");

        throw $r42;

     label12:
        i3 = 0;

     label13:
        $i16 = lengthof r8;

        if i3 >= $i16 goto label14;

        $l18 = r8[i3];

        $d14 = (double) $l18;

        $d10 = $d14 * d0;

        $d11 = (double) l31;

        $d13 = $d10 / $d11;

        $d12 = 1.0 + $d13;

        $l19 = (long) $d12;

        r8[i3] = $l19;

        i3 = i3 + 1;

        goto label13;

     label14:
        $r38 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r8);

        return r8;

     label15:
        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>("There was absolutely no Track with sync samples. I can\'t work with that!");

        throw $r31;

     label16:
        $r20 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r69 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r24 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r70 = (com.googlecode.mp4parser.authoring.Track) $r24;

        $r21 = interfaceinvoke r70.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r21 == null goto label20;

        $r22 = interfaceinvoke r70.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i7 = lengthof $r22;

        if $i7 <= 0 goto label20;

        r71 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r70, r2);

        $r25 = interfaceinvoke r70.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        i32 = interfaceinvoke $r25.<java.util.List: int size()>();

        $i9 = lengthof r71;

        r72 = newarray (long)[$i9];

        $r26 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i8 = interfaceinvoke $r26.<java.util.List: int size()>();

        l1 = (long) $i8;

        $d3 = (double) l1;

        $d2 = (double) i32;

        d22 = $d3 / $d2;

        i33 = 0;

     label18:
        $i10 = lengthof r72;

        if i33 >= $i10 goto label19;

        $l12 = r71[i33];

        $l11 = $l12 - 1L;

        $d5 = (double) $l11;

        $d4 = d22 * $d5;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $l13 = (long) $d6;

        l34 = $l13 + 1L;

        r72[i33] = l34;

        i33 = i33 + 1;

        goto label18;

     label19:
        $r28 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r72);

        return r72;

     label20:
        goto label17;

     label21:
        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>("There was absolutely no Track with sync samples. I can\'t work with that!");

        throw $r23;
    }

    public static java.util.List getSyncSamplesTimestamps(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Movie r0;
        com.googlecode.mp4parser.authoring.Track r1, r4;
        java.util.LinkedList r2, $r7;
        java.util.Iterator r3;
        long[] r5, r6;
        java.util.List $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        java.lang.String $r10, $r11;
        int $i0;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r2 = $r7;

        $r8 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Track) $r9;

        $r10 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $r11 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label2;

        r5 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if r5 == null goto label2;

        $i0 = lengthof r5;

        if $i0 <= 0 goto label2;

        r6 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] getTimes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r4, r0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        return r2;
    }

    public transient long[] getCommonIndices(long[], long[], long, long[][])
    {
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r0;
        long[] r1, r2, r7, r70, r75;
        long l0, l4, $l17, $l20, $l22, $l23, $l28, $l29, $l31, l32, l35, l36, l37;
        long[][] r3, r6;
        java.util.LinkedList r4, r5, $r8, $r9, $r10, r72;
        int i1, i2, i3, $i5, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i19, $i24, $i25, $i26, $i27, $i30, i33, i34, i38;
        boolean z0, $z1, $z2, $z4, $z7;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b8, $b11, $b18, $b21;
        java.lang.Object $r11, $r14, $r16, $r58;
        java.lang.Long $r12, $r13, $r15, $r17, $r50, $r57, $r59, $r62, $r63;
        java.lang.StringBuilder $r18, $r19, $r20, $r23, $r24, $r26, $r27, $r30, $r33, $r34, $r35, $r36, $r37, $r40, $r43, $r46, $r47, $r48, $r49, $r52, $r55, $r56, $r60;
        java.util.logging.Logger $r21, $r22, $r32, $r44, $r45;
        java.lang.Object[] $r25, $r41, $r53, $r54;
        java.lang.String $r28, $r29, $r38, $r51, $r61, r64, r65, r67, r68, r69, r71;
        java.lang.Integer $r31, $r39;
        java.lang.RuntimeException $r42;
        java.util.Iterator r66, r73, r74;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        r1 := @parameter0: long[];

        r2 := @parameter1: long[];

        l0 := @parameter2: long;

        r3 := @parameter3: long[][];

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r4 = $r8;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r5 = $r9;

        i1 = 0;

     label01:
        $i5 = lengthof r2;

        if i1 >= $i5 goto label07;

        z0 = 1;

        r6 = r3;

        i2 = lengthof r6;

        i3 = 0;

     label02:
        if i3 >= i2 goto label05;

        r7 = r6[i3];

        $l31 = r2[i1];

        $i30 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r7, $l31);

        if $i30 < 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z0 = z0 & $z7;

        i3 = i3 + 1;

        goto label02;

     label05:
        if z0 == 0 goto label06;

        $l29 = r1[i1];

        $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l29);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r59);

        $l28 = r2[i1];

        $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l28);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r63);

     label06:
        i1 = i1 + 1;

        goto label01;

     label07:
        $i7 = interfaceinvoke r4.<java.util.List: int size()>();

        $d2 = (double) $i7;

        $i6 = lengthof r1;

        $d1 = (double) $i6;

        $d0 = $d1 * 0.25;

        $b8 = $d2 cmpg $d0;

        if $b8 >= 0 goto label12;

        r64 = "";

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r25 = newarray (java.lang.Object)[1];

        $i26 = interfaceinvoke r4.<java.util.List: int size()>();

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);

        $r25[0] = $r31;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%5d - Common:  [", $r25);

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        r65 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        r66 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r58 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        $r57 = (java.lang.Long) $r58;

        l32 = virtualinvoke $r57.<java.lang.Long: long longValue()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r54 = newarray (java.lang.Object)[1];

        $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l32);

        $r54[0] = $r62;

        $r61 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r54);

        $r60 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        r65 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label09:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r67 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r32.<java.util.logging.Logger: void warning(java.lang.String)>(r67);

        r68 = "";

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

        $r41 = newarray (java.lang.Object)[1];

        $i27 = lengthof r1;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        $r41[0] = $r39;

        $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%5d - In    :  [", $r41);

        $r40 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r69 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        r70 = r1;

        i33 = lengthof r70;

        i34 = 0;

     label10:
        if i34 >= i33 goto label11;

        l35 = r70[i34];

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r53 = newarray (java.lang.Object)[1];

        $r50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l35);

        $r53[0] = $r50;

        $r51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r53);

        $r49 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        r69 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        i34 = i34 + 1;

        goto label10;

     label11:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r71 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r44.<java.util.logging.Logger: void warning(java.lang.String)>(r71);

        $r45 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r45.<java.util.logging.Logger: void warning(java.lang.String)>("There are less than 25% of common sync samples in the given track.");

        $r42 = new java.lang.RuntimeException;

        specialinvoke $r42.<java.lang.RuntimeException: void <init>(java.lang.String)>("There are less than 25% of common sync samples in the given track.");

        throw $r42;

     label12:
        $i10 = interfaceinvoke r4.<java.util.List: int size()>();

        $d5 = (double) $i10;

        $i9 = lengthof r1;

        $d4 = (double) $i9;

        $d3 = $d4 * 0.5;

        $b11 = $d5 cmpg $d3;

        if $b11 >= 0 goto label13;

        $r22 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r22.<java.util.logging.Logger: void fine(java.lang.String)>("There are less than 50% of common sync samples in the given track. This is implausible but I\'m ok to continue.");

        goto label14;

     label13:
        $i13 = interfaceinvoke r4.<java.util.List: int size()>();

        $i14 = lengthof r1;

        if $i13 >= $i14 goto label14;

        $r21 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Common SyncSample positions vs. this tracks SyncSample positions: ");

        $i24 = interfaceinvoke r4.<java.util.List: int size()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs. ");

        $i25 = lengthof r1;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.util.logging.Logger: void finest(java.lang.String)>($r28);

     label14:
        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r72 = $r10;

        $i12 = r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds>;

        if $i12 <= 0 goto label19;

        l36 = -1L;

        r73 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

        r74 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $z2 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r14 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.Long) $r14;

        l37 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $r16 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Long) $r16;

        l4 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        $b18 = l36 cmp -1L;

        if $b18 == 0 goto label16;

        $l20 = l4 - l36;

        $l22 = $l20 / l0;

        $i19 = r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds>;

        $l23 = (long) $i19;

        $b21 = $l22 cmp $l23;

        if $b21 < 0 goto label17;

     label16:
        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l37);

        interfaceinvoke r72.<java.util.List: boolean add(java.lang.Object)>($r17);

        l36 = l4;

     label17:
        goto label15;

     label18:
        goto label20;

     label19:
        r72 = r4;

     label20:
        $i15 = interfaceinvoke r72.<java.util.List: int size()>();

        r75 = newarray (long)[$i15];

        i38 = 0;

     label21:
        $i16 = lengthof r75;

        if i38 >= $i16 goto label22;

        $r11 = interfaceinvoke r72.<java.util.List: java.lang.Object get(int)>(i38);

        $r12 = (java.lang.Long) $r11;

        $l17 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        r75[i38] = $l17;

        i38 = i38 + 1;

        goto label21;

     label22:
        return r75;
    }

    private static long[] getTimes(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple r2, $r9;
        long[] r3, r4, r5;
        java.util.LinkedList r6, $r11;
        int i0, i3, $i6, $i7, $i8, $i14, $i18;
        long l1, l2, l4, l5, $l9, $l10, $l12, $l13, $l17, $l19, $l20;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r7;
        java.util.Map $r8, $r13;
        java.lang.Object $r10, $r15;
        java.util.List $r12;
        byte $b11, $b15, $b16;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r9 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple;

        specialinvoke $r9.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple: void <init>(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r0, r1);

        r2 = $r9;

        $r8 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getTimesCache>;

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (long[]) $r10;

        if r3 == null goto label1;

        return r3;

     label1:
        r4 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i6 = lengthof r4;

        r5 = newarray (long)[$i6];

        $r11 = new java.util.LinkedList;

        $r12 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        specialinvoke $r11.<java.util.LinkedList: void <init>(java.util.Collection)>($r12);

        r6 = $r11;

        i0 = 1;

        l1 = 0L;

        l2 = 0L;

        i3 = 0;

        l4 = 0L;

        l5 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long calculateTracktimesScalingFactor(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r1, r0);

     label2:
        $l9 = (long) i0;

        $i8 = lengthof r4;

        $i7 = $i8 - 1;

        $l10 = r4[$i7];

        $b11 = $l9 cmp $l10;

        if $b11 > 0 goto label5;

        $i14 = i0;

        i0 = i0 + 1;

        $l13 = (long) $i14;

        $l12 = r4[i3];

        $b16 = $l13 cmp $l12;

        if $b16 != 0 goto label3;

        $i18 = i3;

        i3 = i3 + 1;

        $l19 = l1 * l5;

        r5[$i18] = $l19;

     label3:
        $l17 = l4;

        l4 = l4 - 1L;

        $b15 = $l17 cmp 0L;

        if $b15 != 0 goto label4;

        $r15 = interfaceinvoke r6.<java.util.Queue: java.lang.Object poll()>();

        r7 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r15;

        $l20 = virtualinvoke r7.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        l4 = $l20 - 1L;

        l2 = virtualinvoke r7.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

     label4:
        l1 = l1 + l2;

        goto label2;

     label5:
        $r13 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getTimesCache>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r5);

        return r5;
    }

    private static long calculateTracktimesScalingFactor(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Movie r0;
        com.googlecode.mp4parser.authoring.Track r1, r3;
        long l0, $l1, $l3, $l4;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        com.googlecode.mp4parser.authoring.TrackMetaData $r8, $r9, $r10;
        byte $b2;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        l0 = 1L;

        $r4 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.googlecode.mp4parser.authoring.Track) $r5;

        $r6 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $r7 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $r9 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l3 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $b2 = $l1 cmp $l3;

        if $b2 == 0 goto label2;

        $r10 = interfaceinvoke r3.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l4 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l0 = staticinvoke <com.googlecode.mp4parser.util.Math: long lcm(long,long)>(l0, $l4);

     label2:
        goto label1;

     label3:
        return l0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        java.util.concurrent.ConcurrentHashMap $r3, $r4;

        $r0 = class "com/googlecode/mp4parser/authoring/builder/SyncSampleIntersectFinderImpl";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG> = $r2;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getTimesCache> = $r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache> = $r4;

        return;
    }
}
