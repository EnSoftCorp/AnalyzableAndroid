class android.support.v8.renderscript.ScriptCThunker extends android.renderscript.ScriptC
{
    private static final java.lang.String TAG;

    protected void <init>(android.support.v8.renderscript.RenderScriptThunker, android.content.res.Resources, int)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        android.support.v8.renderscript.RenderScriptThunker r1;
        android.content.res.Resources r2;
        int i0;
        android.renderscript.RenderScript $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        r1 := @parameter0: android.support.v8.renderscript.RenderScriptThunker;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        $r3 = r1.<android.support.v8.renderscript.RenderScriptThunker: android.renderscript.RenderScript mN>;

        specialinvoke r0.<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>($r3, r2, i0);

        return;
    }

    android.renderscript.Script$KernelID thunkCreateKernelID(int, int, android.support.v8.renderscript.Element, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0, i1;
        android.support.v8.renderscript.Element r1, r2;
        android.renderscript.Element r3, r4;
        android.renderscript.Script$KernelID r5;
        android.support.v8.renderscript.ElementThunker $r6, $r7;
        android.renderscript.RSRuntimeException $r8, r10;
        java.lang.RuntimeException $r9;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.support.v8.renderscript.Element;

        r2 := @parameter3: android.support.v8.renderscript.Element;

        r3 = null;

        r4 = null;

        if r1 == null goto label1;

        $r7 = (android.support.v8.renderscript.ElementThunker) r1;

        r3 = $r7.<android.support.v8.renderscript.ElementThunker: android.renderscript.Element mN>;

     label1:
        if r2 == null goto label2;

        $r6 = (android.support.v8.renderscript.ElementThunker) r2;

        r4 = $r6.<android.support.v8.renderscript.ElementThunker: android.renderscript.Element mN>;

     label2:
        r5 = virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: android.renderscript.Script$KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>(i0, i1, r3, r4);

     label3:
        return r5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r10);

        throw $r9;

        catch android.renderscript.RSRuntimeException from label2 to label3 with label4;
    }

    void thunkInvoke(int)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.renderscript.RSRuntimeException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void invoke(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r3;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkBindAllocation(android.support.v8.renderscript.Allocation, int)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        android.support.v8.renderscript.Allocation r1;
        int i0;
        android.renderscript.Allocation r2;
        android.renderscript.RSRuntimeException r3, $r5;
        android.support.v8.renderscript.AllocationThunker $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        i0 := @parameter1: int;

        r2 = null;

        if r1 == null goto label1;

        $r4 = (android.support.v8.renderscript.AllocationThunker) r1;

        r2 = $r4.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation mN>;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void bindAllocation(android.renderscript.Allocation,int)>(r2, i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r3);

        throw $r6;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetTimeZone(java.lang.String)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        java.lang.String r1;
        android.renderscript.RSRuntimeException r2, $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        r1 := @parameter0: java.lang.String;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setTimeZone(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r2);

        throw $r4;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkInvoke(int, android.support.v8.renderscript.FieldPacker)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.support.v8.renderscript.FieldPacker r1;
        android.renderscript.FieldPacker r2, $r3;
        byte[] $r4;
        android.renderscript.RSRuntimeException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.FieldPacker;

     label1:
        $r3 = new android.renderscript.FieldPacker;

        $r4 = virtualinvoke r1.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        specialinvoke $r3.<android.renderscript.FieldPacker: void <init>(byte[])>($r4);

        r2 = $r3;

        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void invoke(int,android.renderscript.FieldPacker)>(i0, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r7);

        throw $r6;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkForEach(int, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.FieldPacker)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.support.v8.renderscript.Allocation r1, r2;
        android.support.v8.renderscript.FieldPacker r3;
        android.renderscript.Allocation r4, r5;
        android.renderscript.FieldPacker r6, $r8;
        android.renderscript.RSRuntimeException r7, $r12;
        byte[] $r9;
        android.support.v8.renderscript.AllocationThunker $r10, $r11;
        java.lang.RuntimeException $r13;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.Allocation;

        r2 := @parameter2: android.support.v8.renderscript.Allocation;

        r3 := @parameter3: android.support.v8.renderscript.FieldPacker;

        r4 = null;

        r5 = null;

        r6 = null;

        if r1 == null goto label1;

        $r11 = (android.support.v8.renderscript.AllocationThunker) r1;

        r4 = $r11.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation mN>;

     label1:
        if r2 == null goto label2;

        $r10 = (android.support.v8.renderscript.AllocationThunker) r2;

        r5 = $r10.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation mN>;

     label2:
        if r3 == null goto label3;

        $r8 = new android.renderscript.FieldPacker;

        $r9 = virtualinvoke r3.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        specialinvoke $r8.<android.renderscript.FieldPacker: void <init>(byte[])>($r9);

        r6 = $r8;

     label3:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>(i0, r4, r5, r6);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        r7 = $r12;

        $r13 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r7);

        throw $r13;

     label6:
        return;

        catch android.renderscript.RSRuntimeException from label2 to label4 with label5;
    }

    void thunkForEach(int, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.FieldPacker, android.support.v8.renderscript.Script$LaunchOptions)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.support.v8.renderscript.Allocation r1, r2;
        android.support.v8.renderscript.FieldPacker r3;
        android.support.v8.renderscript.Script$LaunchOptions r4;
        android.renderscript.Script$LaunchOptions r5, $r13;
        android.renderscript.Allocation r6, r7;
        android.renderscript.FieldPacker r8, $r9;
        byte[] $r10;
        android.support.v8.renderscript.AllocationThunker $r11, $r12;
        android.renderscript.RSRuntimeException $r16, r19;
        java.lang.RuntimeException $r18;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.Allocation;

        r2 := @parameter2: android.support.v8.renderscript.Allocation;

        r3 := @parameter3: android.support.v8.renderscript.FieldPacker;

        r4 := @parameter4: android.support.v8.renderscript.Script$LaunchOptions;

     label01:
        r5 = null;

        if r4 == null goto label04;

        $r13 = new android.renderscript.Script$LaunchOptions;

        specialinvoke $r13.<android.renderscript.Script$LaunchOptions: void <init>()>();

        r5 = $r13;

        $i1 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getXEnd()>();

        if $i1 <= 0 goto label02;

        $i9 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getXStart()>();

        $i8 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getXEnd()>();

        virtualinvoke r5.<android.renderscript.Script$LaunchOptions: android.renderscript.Script$LaunchOptions setX(int,int)>($i9, $i8);

     label02:
        $i3 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getYEnd()>();

        if $i3 <= 0 goto label03;

        $i6 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getYStart()>();

        $i7 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getYEnd()>();

        virtualinvoke r5.<android.renderscript.Script$LaunchOptions: android.renderscript.Script$LaunchOptions setY(int,int)>($i6, $i7);

     label03:
        $i2 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getZEnd()>();

        if $i2 <= 0 goto label04;

        $i5 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getZStart()>();

        $i4 = virtualinvoke r4.<android.support.v8.renderscript.Script$LaunchOptions: int getZEnd()>();

        virtualinvoke r5.<android.renderscript.Script$LaunchOptions: android.renderscript.Script$LaunchOptions setZ(int,int)>($i5, $i4);

     label04:
        r6 = null;

        r7 = null;

        r8 = null;

        if r1 == null goto label05;

        $r12 = (android.support.v8.renderscript.AllocationThunker) r1;

        r6 = $r12.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation mN>;

     label05:
        if r2 == null goto label06;

        $r11 = (android.support.v8.renderscript.AllocationThunker) r2;

        r7 = $r11.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation mN>;

     label06:
        if r3 == null goto label07;

        $r9 = new android.renderscript.FieldPacker;

        $r10 = virtualinvoke r3.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        specialinvoke $r9.<android.renderscript.FieldPacker: void <init>(byte[])>($r10);

        r8 = $r9;

     label07:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script$LaunchOptions)>(i0, r6, r7, r8, r5);

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        r19 = $r16;

        $r18 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r19);

        throw $r18;

     label10:
        return;

        catch android.renderscript.RSRuntimeException from label01 to label08 with label09;
    }

    void thunkSetVar(int, float)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        float f0;
        android.renderscript.RSRuntimeException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,float)>(i0, f0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r3;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetVar(int, double)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        double d0;
        android.renderscript.RSRuntimeException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,double)>(i0, d0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r3;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetVar(int, int)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0, i1;
        android.renderscript.RSRuntimeException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r3;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetVar(int, long)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        long l1;
        android.renderscript.RSRuntimeException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,long)>(i0, l1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r3;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetVar(int, boolean)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        boolean z0;
        android.renderscript.RSRuntimeException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r3;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetVar(int, android.support.v8.renderscript.BaseObj)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.support.v8.renderscript.BaseObj r1;
        android.renderscript.RSRuntimeException r2, $r4, $r6, r8;
        android.renderscript.BaseObj $r3;
        java.lang.RuntimeException $r5, $r7;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.BaseObj;

        if r1 != null goto label5;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,int)>(i0, 0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r2);

        throw $r5;

     label4:
        return;

     label5:
        $r3 = virtualinvoke r1.<android.support.v8.renderscript.BaseObj: android.renderscript.BaseObj getNObj()>();

        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,android.renderscript.BaseObj)>(i0, $r3);

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r8);

        throw $r7;

     label8:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
        catch android.renderscript.RSRuntimeException from label5 to label6 with label7;
    }

    void thunkSetVar(int, android.support.v8.renderscript.FieldPacker)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.support.v8.renderscript.FieldPacker r1;
        android.renderscript.FieldPacker r2, $r3;
        byte[] $r4;
        android.renderscript.RSRuntimeException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.FieldPacker;

     label1:
        $r3 = new android.renderscript.FieldPacker;

        $r4 = virtualinvoke r1.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        specialinvoke $r3.<android.renderscript.FieldPacker: void <init>(byte[])>($r4);

        r2 = $r3;

        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,android.renderscript.FieldPacker)>(i0, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r7);

        throw $r6;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    void thunkSetVar(int, android.support.v8.renderscript.FieldPacker, android.support.v8.renderscript.Element, int[])
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.support.v8.renderscript.FieldPacker r1;
        android.support.v8.renderscript.Element r2;
        int[] r3;
        android.renderscript.FieldPacker r4, $r6;
        android.support.v8.renderscript.ElementThunker r5;
        byte[] $r7;
        android.renderscript.Element $r8;
        android.renderscript.RSRuntimeException $r9, r11;
        java.lang.RuntimeException $r10;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.FieldPacker;

        r2 := @parameter2: android.support.v8.renderscript.Element;

        r3 := @parameter3: int[];

     label1:
        $r6 = new android.renderscript.FieldPacker;

        $r7 = virtualinvoke r1.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        specialinvoke $r6.<android.renderscript.FieldPacker: void <init>(byte[])>($r7);

        r4 = $r6;

        r5 = (android.support.v8.renderscript.ElementThunker) r2;

        $r8 = r5.<android.support.v8.renderscript.ElementThunker: android.renderscript.Element mN>;

        virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])>(i0, r4, $r8, r3);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        $r10 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r11);

        throw $r10;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    android.renderscript.Script$FieldID thunkCreateFieldID(int, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.ScriptCThunker r0;
        int i0;
        android.support.v8.renderscript.Element r1;
        android.support.v8.renderscript.ElementThunker r2;
        android.renderscript.Element $r3;
        android.renderscript.Script$FieldID $r4;
        android.renderscript.RSRuntimeException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.support.v8.renderscript.ScriptCThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.Element;

     label1:
        r2 = (android.support.v8.renderscript.ElementThunker) r1;

        $r3 = virtualinvoke r2.<android.support.v8.renderscript.ElementThunker: android.renderscript.Element getNObj()>();

        $r4 = virtualinvoke r0.<android.support.v8.renderscript.ScriptCThunker: android.renderscript.Script$FieldID createFieldID(int,android.renderscript.Element)>(i0, $r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r7);

        throw $r6;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.support.v8.renderscript.ScriptCThunker: java.lang.String TAG> = "ScriptC";

        return;
    }
}
