public class com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private long baseMediaDecodeTime;

    public void <init>()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("tfdt");

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;
        int $i0;
        long $l1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: int getVersion()>();

        if $i0 != 0 goto label1;

        $l1 = 8L;

        goto label2;

     label1:
        $l1 = 12L;

     label2:
        return $l1;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;
        java.nio.ByteBuffer r1;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: int getVersion()>();

        if $i0 != 1 goto label1;

        $l2 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r1, $l2);

        goto label2;

     label1:
        $l1 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

     label2:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;
        java.nio.ByteBuffer r1;
        int $i1;
        long $l2, $l3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: int getVersion()>();

        if $i1 != 1 goto label1;

        $l3 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt64(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime> = $l3;

        goto label2;

     label1:
        $l2 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime> = $l2;

     label2:
        return;
    }

    public long getBaseMediaDecodeTime()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime>;

        return $l0;
    }

    public void setBaseMediaDecodeTime(long)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime> = l0;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        long $l0;
        java.lang.String $r5;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrackFragmentBaseMediaDecodeTimeBox{baseMediaDecodeTime=");

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: java.lang.String TYPE> = "tfdt";

        return;
    }
}
