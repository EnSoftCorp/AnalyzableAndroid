class com.android.gallery3d.glrenderer.NinePatchChunk extends java.lang.Object
{
    public static final int NO_COLOR;
    public static final int TRANSPARENT_COLOR;
    public android.graphics.Rect mPaddings;
    public int[] mDivX;
    public int[] mDivY;
    public int[] mColor;

    void <init>()
    {
        com.android.gallery3d.glrenderer.NinePatchChunk r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.gallery3d.glrenderer.NinePatchChunk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<com.android.gallery3d.glrenderer.NinePatchChunk: android.graphics.Rect mPaddings> = $r1;

        return;
    }

    private static void readIntArray(int[], java.nio.ByteBuffer)
    {
        int[] r0;
        java.nio.ByteBuffer r1;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.nio.ByteBuffer;

        i0 = 0;

        i1 = lengthof r0;

     label1:
        if i0 >= i1 goto label2;

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        r0[i0] = $i2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private static void checkDivCount(int)
    {
        int i0, $i1;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

     label1:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid nine-patch: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    public static com.android.gallery3d.glrenderer.NinePatchChunk deserialize(byte[])
    {
        byte[] r0;
        java.nio.ByteBuffer r1, $r3;
        byte b0, $b1, $b2, $b3;
        com.android.gallery3d.glrenderer.NinePatchChunk r2, $r5;
        java.nio.ByteOrder $r4;
        int[] $r6, $r7, $r8, $r9, $r10, $r15, $r16, $r17;
        int $i4, $i6, $i8, $i9, $i10, $i12;
        android.graphics.Rect $r11, $r12, $r13, $r14;

        r0 := @parameter0: byte[];

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r0);

        $r4 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        r1 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r4);

        b0 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        if b0 != 0 goto label1;

        return null;

     label1:
        $r5 = new com.android.gallery3d.glrenderer.NinePatchChunk;

        specialinvoke $r5.<com.android.gallery3d.glrenderer.NinePatchChunk: void <init>()>();

        r2 = $r5;

        $b1 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        $r6 = newarray (int)[$b1];

        r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mDivX> = $r6;

        $b2 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        $r7 = newarray (int)[$b2];

        r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mDivY> = $r7;

        $b3 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        $r8 = newarray (int)[$b3];

        r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mColor> = $r8;

        $r9 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mDivX>;

        $i4 = lengthof $r9;

        staticinvoke <com.android.gallery3d.glrenderer.NinePatchChunk: void checkDivCount(int)>($i4);

        $r10 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mDivY>;

        $i6 = lengthof $r10;

        staticinvoke <com.android.gallery3d.glrenderer.NinePatchChunk: void checkDivCount(int)>($i6);

        virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r11 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: android.graphics.Rect mPaddings>;

        $i8 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r11.<android.graphics.Rect: int left> = $i8;

        $r12 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: android.graphics.Rect mPaddings>;

        $i9 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r12.<android.graphics.Rect: int right> = $i9;

        $r13 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: android.graphics.Rect mPaddings>;

        $i10 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r13.<android.graphics.Rect: int top> = $i10;

        $r14 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: android.graphics.Rect mPaddings>;

        $i12 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r14.<android.graphics.Rect: int bottom> = $i12;

        virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r16 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mDivX>;

        staticinvoke <com.android.gallery3d.glrenderer.NinePatchChunk: void readIntArray(int[],java.nio.ByteBuffer)>($r16, r1);

        $r15 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mDivY>;

        staticinvoke <com.android.gallery3d.glrenderer.NinePatchChunk: void readIntArray(int[],java.nio.ByteBuffer)>($r15, r1);

        $r17 = r2.<com.android.gallery3d.glrenderer.NinePatchChunk: int[] mColor>;

        staticinvoke <com.android.gallery3d.glrenderer.NinePatchChunk: void readIntArray(int[],java.nio.ByteBuffer)>($r17, r1);

        return r2;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.glrenderer.NinePatchChunk: int TRANSPARENT_COLOR> = 0;

        <com.android.gallery3d.glrenderer.NinePatchChunk: int NO_COLOR> = 1;

        return;
    }
}
