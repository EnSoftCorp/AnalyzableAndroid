public class com.android.gallery3d.filtershow.filters.SplineMath extends java.lang.Object
{
    double[][] mPoints;
    double[] mDerivatives;

    void <init>(int)
    {
        com.android.gallery3d.filtershow.filters.SplineMath r0;
        int i0;
        double[][] $r1, $r2;

        r0 := @this: com.android.gallery3d.filtershow.filters.SplineMath;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newmultiarray (double)[6][2];

        r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints> = $r1;

        $r2 = newmultiarray (double)[i0][2];

        r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints> = $r2;

        return;
    }

    public void setPoint(int, double, double)
    {
        com.android.gallery3d.filtershow.filters.SplineMath r0;
        int i0;
        double d0, d1;
        double[][] $r1, $r3;
        double[] $r2, $r4;

        r0 := @this: com.android.gallery3d.filtershow.filters.SplineMath;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $r2 = $r1[i0];

        $r2[0] = d0;

        $r3 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $r4 = $r3[i0];

        $r4[1] = d1;

        r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] mDerivatives> = null;

        return;
    }

    public float[][] calculatetCurve(int)
    {
        com.android.gallery3d.filtershow.filters.SplineMath r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i24;
        float[][] r1;
        double[][] r2, $r3, $r4, $r21, $r25;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39;
        double[] $r5, $r6, $r7, $r8, $r11, $r12, $r17, $r20, $r22, $r23, $r24, $r26, r27, r28, r29;
        float[] $r9, $r10, $r13, $r14, $r15, $r16, $r18, $r19;
        byte $b18, $b23, $b25;

        r0 := @this: com.android.gallery3d.filtershow.filters.SplineMath;

        i0 := @parameter0: int;

        r1 = newmultiarray (float)[i0][2];

        $r4 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $i7 = lengthof $r4;

        r2 = newmultiarray (double)[$i7][2];

        i1 = 0;

     label1:
        $r3 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $i6 = lengthof $r3;

        if i1 >= $i6 goto label2;

        $r26 = r2[i1];

        $r21 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $r20 = $r21[i1];

        $d36 = $r20[0];

        $r26[0] = $d36;

        $r23 = r2[i1];

        $r25 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $r24 = $r25[i1];

        $d38 = $r24[1];

        $r23[1] = $d38;

        i1 = i1 + 1;

        goto label1;

     label2:
        r27 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] solveSystem(double[][])>(r2);

        $r5 = r2[0];

        $d13 = $r5[0];

        f0 = (float) $d13;

        $i8 = lengthof r2;

        $i9 = $i8 - 1;

        $r7 = r2[$i9];

        $d14 = $r7[0];

        f1 = (float) $d14;

        $r9 = r1[0];

        $r6 = r2[0];

        $d15 = $r6[0];

        $f2 = (float) $d15;

        $r9[0] = $f2;

        $r10 = r1[0];

        $r8 = r2[0];

        $d16 = $r8[1];

        $f3 = (float) $d16;

        $r10[1] = $f3;

        $i10 = lengthof r1;

        i2 = $i10 - 1;

        $r14 = r1[i2];

        $i12 = lengthof r2;

        $i11 = $i12 - 1;

        $r11 = r2[$i11];

        $d17 = $r11[0];

        $f5 = (float) $d17;

        $r14[0] = $f5;

        $r13 = r1[i2];

        $i13 = lengthof r2;

        $i14 = $i13 - 1;

        $r12 = r2[$i14];

        $d18 = $r12[1];

        $f4 = (float) $d18;

        $r13[1] = $f4;

        i3 = 0;

     label3:
        $i16 = lengthof r1;

        if i3 >= $i16 goto label9;

        $f10 = (float) i3;

        $f9 = f1 - f0;

        $f7 = $f10 * $f9;

        $i17 = lengthof r1;

        $i15 = $i17 - 1;

        $f6 = (float) $i15;

        $f8 = $f7 / $f6;

        $f12 = f0 + $f8;

        d0 = (double) $f12;

        i4 = 0;

        i5 = 0;

     label4:
        $i19 = lengthof r2;

        $i21 = $i19 - 1;

        if i5 >= $i21 goto label6;

        $r17 = r2[i5];

        $d33 = $r17[0];

        $b25 = d0 cmpl $d33;

        if $b25 < 0 goto label5;

        $i24 = i5 + 1;

        $r22 = r2[$i24];

        $d37 = $r22[0];

        $b23 = d0 cmpg $d37;

        if $b23 > 0 goto label5;

        i4 = i5;

     label5:
        i5 = i5 + 1;

        goto label4;

     label6:
        r28 = r2[i4];

        $i20 = i4 + 1;

        r29 = r2[$i20];

        $d19 = r29[0];

        $b18 = d0 cmpg $d19;

        if $b18 > 0 goto label7;

        d39 = r28[0];

        d1 = r29[0];

        d2 = r28[1];

        d3 = r29[1];

        d4 = d1 - d39;

        d5 = d4 * d4;

        $d22 = d0 - d39;

        d6 = $d22 / d4;

        d7 = 1.0 - d6;

        d8 = d7 * d2;

        d10 = d6 * d3;

        $d21 = d7 * d7;

        $d24 = $d21 * d7;

        $d31 = $d24 - d7;

        $d23 = r27[i4];

        d9 = $d31 * $d23;

        $d32 = d6 * d6;

        $d30 = $d32 * d6;

        $d29 = $d30 - d6;

        $i22 = i4 + 1;

        $d28 = r27[$i22];

        d12 = $d29 * $d28;

        $d35 = d8 + d10;

        $d27 = d5 / 6.0;

        $d26 = d9 + d12;

        $d34 = $d27 * $d26;

        d11 = $d35 + $d34;

        $r19 = r1[i3];

        $f15 = (float) d0;

        $r19[0] = $f15;

        $r18 = r1[i3];

        $f14 = (float) d11;

        $r18[1] = $f14;

        goto label8;

     label7:
        $r15 = r1[i3];

        $d20 = r29[0];

        $f11 = (float) $d20;

        $r15[0] = $f11;

        $r16 = r1[i3];

        $d25 = r29[1];

        $f13 = (float) $d25;

        $r16[1] = $f13;

     label8:
        i3 = i3 + 1;

        goto label3;

     label9:
        return r1;
    }

    public double getValue(double)
    {
        com.android.gallery3d.filtershow.filters.SplineMath r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27;
        int i0, i1, $i2, $i3, $i4, $i5;
        double[] $r1, $r5, $r6, $r9, $r10, r11, r12;
        double[][] $r2, $r3, $r4, $r7, $r8;
        byte $b6;

        r0 := @this: com.android.gallery3d.filtershow.filters.SplineMath;

        d0 := @parameter0: double;

        $r1 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] mDerivatives>;

        if $r1 != null goto label1;

        $r8 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $r10 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] solveSystem(double[][])>($r8);

        r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] mDerivatives> = $r10;

     label1:
        i0 = 0;

        i1 = 0;

     label2:
        $r2 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $i2 = lengthof $r2;

        $i3 = $i2 - 1;

        if i1 >= $i3 goto label4;

        i0 = i1;

        $r7 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $r9 = $r7[i1];

        $d26 = $r9[0];

        $b6 = d0 cmpg $d26;

        if $b6 > 0 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        r11 = $r4[i0];

        $r3 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[][] mPoints>;

        $i4 = i0 + 1;

        r12 = $r3[$i4];

        d27 = r11[0];

        d1 = r12[0];

        d2 = r11[1];

        d3 = r12[1];

        d4 = d1 - d27;

        d5 = d4 * d4;

        $d13 = d0 - d27;

        d6 = $d13 / d4;

        d7 = 1.0 - d6;

        d8 = d7 * d2;

        d9 = d6 * d3;

        $d15 = d7 * d7;

        $d16 = $d15 * d7;

        $d18 = $d16 - d7;

        $r5 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] mDerivatives>;

        $d14 = $r5[i0];

        d10 = $d18 * $d14;

        $d19 = d6 * d6;

        $d17 = $d19 * d6;

        $d21 = $d17 - d6;

        $r6 = r0.<com.android.gallery3d.filtershow.filters.SplineMath: double[] mDerivatives>;

        $i5 = i0 + 1;

        $d22 = $r6[$i5];

        d11 = $d21 * $d22;

        $d23 = d8 + d9;

        $d25 = d5 / 6.0;

        $d20 = d10 + d11;

        $d24 = $d25 * $d20;

        d12 = $d23 + $d24;

        return d12;
    }

    double[] solveSystem(double[][])
    {
        com.android.gallery3d.filtershow.filters.SplineMath r0;
        double[][] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        double[] r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, d43;

        r0 := @this: com.android.gallery3d.filtershow.filters.SplineMath;

        r1 := @parameter0: double[][];

        i0 = lengthof r1;

        r2 = newmultiarray (double)[i0][3];

        r3 = newarray (double)[i0];

        r4 = newarray (double)[i0];

        $r5 = r2[0];

        $r5[1] = 1.0;

        $i2 = i0 - 1;

        $r6 = r2[$i2];

        $r6[1] = 1.0;

        d0 = 0.16666666666666666;

        d1 = 0.3333333333333333;

        i1 = 1;

     label1:
        $i4 = i0 - 1;

        if i1 >= $i4 goto label2;

        $r16 = r1[i1];

        $d30 = $r16[0];

        $i11 = i1 - 1;

        $r15 = r1[$i11];

        $d27 = $r15[0];

        d2 = $d30 - $d27;

        $i13 = i1 + 1;

        $r18 = r1[$i13];

        $d29 = $r18[0];

        $i14 = i1 - 1;

        $r17 = r1[$i14];

        $d28 = $r17[0];

        d3 = $d29 - $d28;

        $i12 = i1 + 1;

        $r21 = r1[$i12];

        $d33 = $r21[0];

        $r22 = r1[i1];

        $d32 = $r22[0];

        d4 = $d33 - $d32;

        $i15 = i1 + 1;

        $r19 = r1[$i15];

        $d37 = $r19[1];

        $r20 = r1[i1];

        $d31 = $r20[1];

        d5 = $d37 - $d31;

        $r24 = r1[i1];

        $d34 = $r24[1];

        $i16 = i1 - 1;

        $r25 = r1[$i16];

        $d35 = $r25[1];

        d6 = $d34 - $d35;

        $r23 = r2[i1];

        $d36 = d0 * d2;

        $r23[0] = $d36;

        $r26 = r2[i1];

        $d41 = d1 * d3;

        $r26[1] = $d41;

        $r27 = r2[i1];

        $d42 = d0 * d4;

        $r27[2] = $d42;

        $d38 = d5 / d4;

        $d39 = d6 / d2;

        $d40 = $d38 - $d39;

        r3[i1] = $d40;

        i1 = i1 + 1;

        goto label1;

     label2:
        i17 = 1;

     label3:
        if i17 >= i0 goto label4;

        $r10 = r2[i17];

        $d17 = $r10[0];

        $i8 = i17 - 1;

        $r12 = r2[$i8];

        $d18 = $r12[1];

        d43 = $d17 / $d18;

        $r14 = r2[i17];

        $r11 = r2[i17];

        $d22 = $r11[1];

        $i9 = i17 - 1;

        $r13 = r2[$i9];

        $d20 = $r13[2];

        $d19 = d43 * $d20;

        $d21 = $d22 - $d19;

        $r14[1] = $d21;

        $d24 = r3[i17];

        $i10 = i17 - 1;

        $d26 = r3[$i10];

        $d25 = d43 * $d26;

        $d23 = $d24 - $d25;

        r3[i17] = $d23;

        i17 = i17 + 1;

        goto label3;

     label4:
        $i6 = i0 - 1;

        $i3 = i0 - 1;

        $d7 = r3[$i3];

        $i5 = i0 - 1;

        $r7 = r2[$i5];

        $d8 = $r7[1];

        $d9 = $d7 / $d8;

        r4[$i6] = $d9;

        i18 = i0 - 2;

     label5:
        if i18 < 0 goto label6;

        $d14 = r3[i18];

        $r8 = r2[i18];

        $d11 = $r8[2];

        $i7 = i18 + 1;

        $d10 = r4[$i7];

        $d13 = $d11 * $d10;

        $d15 = $d14 - $d13;

        $r9 = r2[i18];

        $d12 = $r9[1];

        $d16 = $d15 / $d12;

        r4[i18] = $d16;

        i18 = i18 + -1;

        goto label5;

     label6:
        return r4;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.gallery3d.filtershow.filters.SplineMath r1, $r2;
        int i0, i1, $i2;
        java.lang.StringBuilder $r3, $r6, $r7, $r9;
        java.io.PrintStream $r4;
        float[] $r5, $r8;
        float $f0, $f1;
        double $d0, $d1;
        java.lang.String $r10;
        float[][] r11;

        r0 := @parameter0: java.lang.String[];

        $r2 = new com.android.gallery3d.filtershow.filters.SplineMath;

        specialinvoke $r2.<com.android.gallery3d.filtershow.filters.SplineMath: void <init>(int)>(10);

        r1 = $r2;

        i0 = 0;

     label1:
        if i0 >= 10 goto label2;

        $d1 = (double) i0;

        $d0 = (double) i0;

        virtualinvoke r1.<com.android.gallery3d.filtershow.filters.SplineMath: void setPoint(int,double,double)>(i0, $d1, $d0);

        i0 = i0 + 1;

        goto label1;

     label2:
        r11 = virtualinvoke r1.<com.android.gallery3d.filtershow.filters.SplineMath: float[][] calculatetCurve(int)>(40);

        i1 = 0;

     label3:
        $i2 = lengthof r11;

        if i1 >= $i2 goto label4;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r11[i1];

        $f0 = $r5[0];

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r8 = r11[i1];

        $f1 = $r8[1];

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
}
