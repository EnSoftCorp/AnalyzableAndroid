public class com.coremedia.iso.boxes.TimeToSampleBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    java.util.List entries;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("stts");

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries> = $r1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        long $l3;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        $r1 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 * 8;

        $i2 = 8 + $i1;

        $l3 = (long) $i2;

        return $l3;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.nio.ByteBuffer r1;
        int i0, i1;
        long $l3, $l4, $l5;
        java.util.ArrayList $r2;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry $r3;
        java.util.List $r4;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.TimeToSampleBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l3 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        i0 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l3);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries> = $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $r3 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        $l4 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $l5 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        specialinvoke $r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>($l4, $l5);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.nio.ByteBuffer r1;
        java.util.Iterator r2;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r3;
        java.util.List $r4, $r5;
        int $i0;
        long $l1, $l2, $l3;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.TimeToSampleBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r4 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        $r5 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r6;

        $l2 = virtualinvoke r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l2);

        $l3 = virtualinvoke r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l3);

        goto label1;

     label2:
        return;
    }

    public java.util.List getEntries()
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        $r1 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        return $r1;
    }

    public void setEntries(java.util.List)
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.util.List r1;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        r1 := @parameter0: java.util.List;

        r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries> = r1;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.util.List $r3;
        int $i0;
        java.lang.String $r6;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeToSampleBox[entryCount=");

        $r3 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static long[] blowupTimeToSamples(java.util.List)
    {
        java.util.List r0;
        long l0, $l3, $l5, $l6, $l9;
        java.util.Iterator r1, r3;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r2, r4;
        int i1, $i2, $i7, i10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5, $r7;
        byte $b4, $b8;
        java.lang.AssertionError $r6;
        long[] r8;

        r0 := @parameter0: java.util.List;

        l0 = 0L;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r7;

        $l9 = virtualinvoke r2.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        l0 = l0 + $l9;

        goto label1;

     label2:
        $z1 = <com.coremedia.iso.boxes.TimeToSampleBox: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $b8 = l0 cmp 2147483647L;

        if $b8 <= 0 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        $i2 = (int) l0;

        r8 = newarray (long)[$i2];

        i10 = 0;

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r5;

        i1 = 0;

     label5:
        $l3 = (long) i1;

        $l5 = virtualinvoke r4.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $b4 = $l3 cmp $l5;

        if $b4 >= 0 goto label6;

        $i7 = i10;

        i10 = i10 + 1;

        $l6 = virtualinvoke r4.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        r8[$i7] = $l6;

        i1 = i1 + 1;

        goto label5;

     label6:
        goto label4;

     label7:
        return r8;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.TimeToSampleBox: java.lang.String TYPE> = "stts";

        $r0 = class "com/coremedia/iso/boxes/TimeToSampleBox";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.TimeToSampleBox: boolean $assertionsDisabled> = $z1;

        return;
    }
}
