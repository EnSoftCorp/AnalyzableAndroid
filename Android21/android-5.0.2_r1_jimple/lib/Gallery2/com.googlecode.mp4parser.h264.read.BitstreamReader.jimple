public class com.googlecode.mp4parser.h264.read.BitstreamReader extends java.lang.Object
{
    private java.io.InputStream is;
    private int curByte;
    private int nextByte;
    int nBit;
    protected static int bitsRead;
    protected com.googlecode.mp4parser.h264.CharCache debugBits;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        java.io.InputStream r1;
        com.googlecode.mp4parser.h264.CharCache $r2;
        int $i0, $i1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.googlecode.mp4parser.h264.CharCache;

        specialinvoke $r2.<com.googlecode.mp4parser.h264.CharCache: void <init>(int)>(50);

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: com.googlecode.mp4parser.h264.CharCache debugBits> = $r2;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: java.io.InputStream is> = r1;

        $i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte> = $i0;

        $i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte> = $i1;

        return;
    }

    public int read1Bit() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        com.googlecode.mp4parser.h264.CharCache $r1;
        char $c10;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i1 != 8 goto label1;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

        $i11 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        if $i11 != -1 goto label1;

        return -1;

     label1:
        $i4 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i2 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i3 = 7 - $i2;

        $i5 = $i4 >> $i3;

        i0 = $i5 & 1;

        $i6 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i7 = $i6 + 1;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit> = $i7;

        $r1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: com.googlecode.mp4parser.h264.CharCache debugBits>;

        if i0 != 0 goto label2;

        $c10 = 48;

        goto label3;

     label2:
        $c10 = 49;

     label3:
        virtualinvoke $r1.<com.googlecode.mp4parser.h264.CharCache: void append(char)>($c10);

        $i8 = <com.googlecode.mp4parser.h264.read.BitstreamReader: int bitsRead>;

        $i9 = $i8 + 1;

        <com.googlecode.mp4parser.h264.read.BitstreamReader: int bitsRead> = $i9;

        return i0;
    }

    public long readNBit(int) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int i0, i2, $i3;
        long l1, $l4, l5;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        i0 := @parameter0: int;

        if i0 <= 64 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not readByte more then 64 bit");

        throw $r1;

     label1:
        l1 = 0L;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        l5 = l1 << 1;

        $i3 = virtualinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int read1Bit()>();

        $l4 = (long) $i3;

        l1 = l5 | $l4;

        i2 = i2 + 1;

        goto label2;

     label3:
        return l1;
    }

    private void advance() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte>;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte> = $i0;

        $r1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: java.io.InputStream is>;

        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte> = $i1;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit> = 0;

        return;
    }

    public int readByte() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int i0, $i1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i1 <= 0 goto label1;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

     label1:
        i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

        return i0;
    }

    public boolean moreRBSPData() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1, $z2;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i2 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i2 != 8 goto label1;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

     label1:
        $i3 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i4 = 8 - $i3;

        $i5 = $i4 - 1;

        i0 = 1 << $i5;

        $i6 = i0 << 1;

        i1 = $i6 - 1;

        $i7 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i8 = $i7 & i1;

        if $i8 != i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $i9 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        if $i9 == -1 goto label5;

        $i10 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte>;

        if $i10 != -1 goto label4;

        if z0 != 0 goto label5;

     label4:
        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    public long getBitPosition()
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1, $i2, $i3, $i4;
        long $l5;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = <com.googlecode.mp4parser.h264.read.BitstreamReader: int bitsRead>;

        $i3 = $i0 * 8;

        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i2 = $i1 % 8;

        $i4 = $i3 + $i2;

        $l5 = (long) $i4;

        return $l5;
    }

    public long readRemainingByte() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i1 = 8 - $i0;

        $l2 = virtualinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: long readNBit(int)>($i1);

        return $l2;
    }

    public int peakNextBits(int) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21;
        int[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        i0 := @parameter0: int;

        if i0 <= 8 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("N should be less then 8");

        throw $r2;

     label1:
        $i4 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i4 != 8 goto label2;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

        $i18 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        if $i18 != -1 goto label2;

        return -1;

     label2:
        $i5 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i6 = 16 - $i5;

        r1 = newarray (int)[$i6];

        i1 = 0;

        i2 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

     label3:
        if i2 >= 8 goto label4;

        $i13 = i1;

        i1 = i1 + 1;

        $i14 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i15 = 7 - i2;

        $i17 = $i14 >> $i15;

        $i16 = $i17 & 1;

        r1[$i13] = $i16;

        i2 = i2 + 1;

        goto label3;

     label4:
        i19 = 0;

     label5:
        if i19 >= 8 goto label6;

        $i8 = i1;

        i1 = i1 + 1;

        $i10 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte>;

        $i9 = 7 - i19;

        $i11 = $i10 >> $i9;

        $i12 = $i11 & 1;

        r1[$i8] = $i12;

        i19 = i19 + 1;

        goto label5;

     label6:
        i20 = 0;

        i3 = 0;

     label7:
        if i3 >= i0 goto label8;

        i21 = i20 << 1;

        $i7 = r1[i3];

        i20 = i21 | $i7;

        i3 = i3 + 1;

        goto label7;

     label8:
        return i20;
    }

    public boolean isByteAligned()
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i1 = $i0 % 8;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        return;
    }

    public int getCurBit()
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        return $i0;
    }
}
