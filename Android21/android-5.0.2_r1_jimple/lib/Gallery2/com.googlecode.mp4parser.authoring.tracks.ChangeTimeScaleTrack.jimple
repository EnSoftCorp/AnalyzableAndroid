public class com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack extends java.lang.Object implements com.googlecode.mp4parser.authoring.Track
{
    private static final java.util.logging.Logger LOG;
    com.googlecode.mp4parser.authoring.Track source;
    java.util.List ctts;
    java.util.List tts;
    long timeScale;

    public void <init>(com.googlecode.mp4parser.authoring.Track, long, long[])
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track r1;
        long l0, $l1;
        long[] r2, $r7;
        double d0, $d1, $d2;
        com.googlecode.mp4parser.authoring.TrackMetaData $r3;
        java.util.List $r4, $r5, $r6, $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 := @parameter1: long;

        r2 := @parameter2: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source> = r1;

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long timeScale> = l0;

        $d1 = (double) l0;

        $r3 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $d2 = (double) $l1;

        d0 = $d1 / $d2;

        $r4 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        $r5 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List adjustCtts(java.util.List,double)>($r4, d0);

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List ctts> = $r5;

        $r6 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        $r7 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long[] getTimes(com.googlecode.mp4parser.authoring.Track,long[],long)>(r1, r2, l0);

        $r8 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List adjustTts(java.util.List,double,long[],long[])>($r6, d0, r2, $r7);

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List tts> = $r8;

        return;
    }

    private static long[] getTimes(com.googlecode.mp4parser.authoring.Track, long[], long)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        long[] r1, r2;
        long l0, l2, l3, l5, $l9, $l10, $l13, $l14, $l15, $l18, $l19, $l21, $l22;
        java.util.LinkedList r3, $r6;
        int i1, i4, $i6, $i7, $i8, $i11, $i20;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r4;
        java.util.List $r5;
        byte $b12, $b16, $b17;
        java.lang.Object $r7;
        com.googlecode.mp4parser.authoring.TrackMetaData $r8;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r1 := @parameter1: long[];

        l0 := @parameter2: long;

        $i6 = lengthof r1;

        r2 = newarray (long)[$i6];

        $r6 = new java.util.LinkedList;

        $r5 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        specialinvoke $r6.<java.util.LinkedList: void <init>(java.util.Collection)>($r5);

        r3 = $r6;

        i1 = 1;

        l2 = 0L;

        l3 = 0L;

        i4 = 0;

        l5 = 0L;

     label1:
        $l9 = (long) i1;

        $i8 = lengthof r1;

        $i7 = $i8 - 1;

        $l10 = r1[$i7];

        $b12 = $l9 cmp $l10;

        if $b12 > 0 goto label4;

        $i11 = i1;

        i1 = i1 + 1;

        $l13 = (long) $i11;

        $l14 = r1[i4];

        $b16 = $l13 cmp $l14;

        if $b16 != 0 goto label2;

        $i20 = i4;

        i4 = i4 + 1;

        $l21 = l2 * l0;

        $r8 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l19 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $l22 = $l21 / $l19;

        r2[$i20] = $l22;

     label2:
        $l15 = l5;

        l5 = l5 - 1L;

        $b17 = $l15 cmp 0L;

        if $b17 != 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Queue: java.lang.Object poll()>();

        r4 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r7;

        $l18 = virtualinvoke r4.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        l5 = $l18 - 1L;

        l3 = virtualinvoke r4.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

     label3:
        l2 = l2 + l3;

        goto label1;

     label4:
        return r2;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        return $r2;
    }

    public java.util.List getDecodingTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        java.util.List $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List tts>;

        return $r1;
    }

    public java.util.List getCompositionTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        java.util.List $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List ctts>;

        return $r1;
    }

    public long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        long[] $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        return $r2;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        return $r2;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.TrackMetaData r1, $r3;
        com.googlecode.mp4parser.authoring.Track $r2;
        java.lang.Object $r4;
        long $l0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r2 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r3 = interfaceinvoke $r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r4 = virtualinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.Object clone()>();

        r1 = (com.googlecode.mp4parser.authoring.TrackMetaData) $r4;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long timeScale>;

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.TrackMetaData: void setTimescale(long)>($l0);

        return r1;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.lang.String $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        return $r2;
    }

    public boolean isEnabled()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $z0 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: boolean isEnabled()>();

        return $z0;
    }

    public boolean isInMovie()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $z0 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: boolean isInMovie()>();

        return $z0;
    }

    public boolean isInPreview()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $z0 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: boolean isInPreview()>();

        return $z0;
    }

    public boolean isInPoster()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $z0 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: boolean isInPoster()>();

        return $z0;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        return $r2;
    }

    static java.util.List adjustCtts(java.util.List, double)
    {
        java.util.List r0;
        double d0, $d1, $d2;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry r3, $r6;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r5;
        long $l4;

        r0 := @parameter0: java.util.List;

        d0 := @parameter1: double;

        if r0 == null goto label3;

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = $r4;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r5;

        $r6 = new com.coremedia.iso.boxes.CompositionTimeToSample$Entry;

        $i1 = virtualinvoke r3.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        $i2 = virtualinvoke r3.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>();

        $d1 = (double) $i2;

        $d2 = d0 * $d1;

        $l4 = staticinvoke <java.lang.Math: long round(double)>($d2);

        $i3 = (int) $l4;

        specialinvoke $r6.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: void <init>(int,int)>($i1, $i3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r1;

     label3:
        return null;
    }

    static java.util.List adjustTts(java.util.List, double, long[], long[])
    {
        java.util.List r0;
        double d0, $d1, $d2;
        long[] r1, r2, r3;
        long l0, l2, l3, l5, $l8, $l10, $l12, $l14, $l16, $l17, $l18, $l19;
        java.util.LinkedList r4, $r6;
        int i1, i4, $i6, $i7, $i9, $i11;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r5, $r8, $r9;
        java.lang.Object $r7;
        byte $b13, $b15;
        java.util.logging.Logger $r10;
        java.lang.Object[] $r11;
        java.lang.Long $r12, $r14, $r16;
        java.lang.Integer $r13;
        java.lang.String $r15;

        r0 := @parameter0: java.util.List;

        d0 := @parameter1: double;

        r1 := @parameter2: long[];

        r2 := @parameter3: long[];

        r3 = staticinvoke <com.coremedia.iso.boxes.TimeToSampleBox: long[] blowupTimeToSamples(java.util.List)>(r0);

        l0 = 0L;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r4 = $r6;

        i1 = 1;

     label1:
        $i7 = lengthof r3;

        if i1 > $i7 goto label6;

        $i6 = i1 - 1;

        l2 = r3[$i6];

        $d2 = (double) l2;

        $d1 = d0 * $d2;

        l3 = staticinvoke <java.lang.Math: long round(double)>($d1);

        $r7 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object peekLast()>();

        r5 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r7;

        $i9 = i1 + 1;

        $l8 = (long) $i9;

        $i11 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r1, $l8);

        i4 = $i11;

        if $i11 < 0 goto label2;

        $l17 = r2[i4];

        $b15 = $l17 cmp l0;

        if $b15 == 0 goto label2;

        $l18 = r2[i4];

        $l16 = l0 + l3;

        l5 = $l18 - $l16;

        $r10 = <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.logging.Logger LOG>;

        $r11 = newarray (java.lang.Object)[4];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11[0] = $r13;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r11[1] = $r12;

        $l19 = r2[i4];

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l19);

        $r11[2] = $r14;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r11[3] = $r16;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Sample %d %d / %d - correct by %d", $r11);

        virtualinvoke $r10.<java.util.logging.Logger: void finest(java.lang.String)>($r15);

        l3 = l3 + l5;

     label2:
        l0 = l0 + l3;

        if r5 != null goto label3;

        $r8 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        specialinvoke $r8.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>(1L, l3);

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label5;

     label3:
        $l10 = virtualinvoke r5.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $b13 = $l10 cmp l3;

        if $b13 == 0 goto label4;

        $r9 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        specialinvoke $r9.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>(1L, l3);

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

        goto label5;

     label4:
        $l12 = virtualinvoke r5.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l14 = $l12 + 1L;

        virtualinvoke r5.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void setCount(long)>($l14);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return r4;
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.Box $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        com.googlecode.mp4parser.authoring.Track $r3;
        java.lang.String $r6;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChangeTimeScaleTrack{source=");

        $r3 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/googlecode/mp4parser/authoring/tracks/ChangeTimeScaleTrack";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
