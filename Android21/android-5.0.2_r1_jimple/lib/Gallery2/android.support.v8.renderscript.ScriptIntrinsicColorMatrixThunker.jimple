class android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker extends android.support.v8.renderscript.ScriptIntrinsicColorMatrix
{
    android.renderscript.ScriptIntrinsicColorMatrix mN;

    android.renderscript.ScriptIntrinsicColorMatrix getNObj()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.renderscript.ScriptIntrinsicColorMatrix $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        $r1 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        return $r1;
    }

    private void <init>(int, android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        int i0;
        android.support.v8.renderscript.RenderScript r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrix: void <init>(int,android.support.v8.renderscript.RenderScript)>(i0, r1);

        return;
    }

    public static android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker create(android.support.v8.renderscript.RenderScript, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.Element r1;
        android.support.v8.renderscript.RenderScriptThunker r2;
        android.support.v8.renderscript.ElementThunker r3;
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r4, $r6;
        android.renderscript.RSRuntimeException r5, $r10;
        android.renderscript.RenderScript $r7;
        android.renderscript.Element $r8;
        android.renderscript.ScriptIntrinsicColorMatrix $r9;
        java.lang.RuntimeException $r11;

        r0 := @parameter0: android.support.v8.renderscript.RenderScript;

        r1 := @parameter1: android.support.v8.renderscript.Element;

        r2 = (android.support.v8.renderscript.RenderScriptThunker) r0;

        r3 = (android.support.v8.renderscript.ElementThunker) r1;

        $r6 = new android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        specialinvoke $r6.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: void <init>(int,android.support.v8.renderscript.RenderScript)>(0, r0);

        r4 = $r6;

     label1:
        $r7 = r2.<android.support.v8.renderscript.RenderScriptThunker: android.renderscript.RenderScript mN>;

        $r8 = virtualinvoke r3.<android.support.v8.renderscript.ElementThunker: android.renderscript.Element getNObj()>();

        $r9 = staticinvoke <android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript,android.renderscript.Element)>($r7, $r8);

        r4.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN> = $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r5 = $r10;

        $r11 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r5);

        throw $r11;

     label4:
        return r4;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void setColorMatrix(android.support.v8.renderscript.Matrix4f)
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.support.v8.renderscript.Matrix4f r1;
        android.renderscript.RSRuntimeException r2, $r6;
        android.renderscript.Matrix4f $r3;
        android.renderscript.ScriptIntrinsicColorMatrix $r4;
        float[] $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        r1 := @parameter0: android.support.v8.renderscript.Matrix4f;

     label1:
        $r4 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        $r3 = new android.renderscript.Matrix4f;

        $r5 = virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: float[] getArray()>();

        specialinvoke $r3.<android.renderscript.Matrix4f: void <init>(float[])>($r5);

        virtualinvoke $r4.<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix4f)>($r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r2);

        throw $r7;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void setColorMatrix(android.support.v8.renderscript.Matrix3f)
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.support.v8.renderscript.Matrix3f r1;
        android.renderscript.RSRuntimeException r2, $r6;
        android.renderscript.Matrix3f $r3;
        android.renderscript.ScriptIntrinsicColorMatrix $r4;
        float[] $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        r1 := @parameter0: android.support.v8.renderscript.Matrix3f;

     label1:
        $r4 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        $r3 = new android.renderscript.Matrix3f;

        $r5 = virtualinvoke r1.<android.support.v8.renderscript.Matrix3f: float[] getArray()>();

        specialinvoke $r3.<android.renderscript.Matrix3f: void <init>(float[])>($r5);

        virtualinvoke $r4.<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix3f)>($r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r2);

        throw $r7;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void setGreyscale()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.renderscript.RSRuntimeException r1, $r3;
        android.renderscript.ScriptIntrinsicColorMatrix $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

     label1:
        $r2 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        virtualinvoke $r2.<android.renderscript.ScriptIntrinsicColorMatrix: void setGreyscale()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r4;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void setYUVtoRGB()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.renderscript.RSRuntimeException r1, $r3;
        android.renderscript.ScriptIntrinsicColorMatrix $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

     label1:
        $r2 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        virtualinvoke $r2.<android.renderscript.ScriptIntrinsicColorMatrix: void setYUVtoRGB()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r4;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void setRGBtoYUV()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.renderscript.RSRuntimeException r1, $r3;
        android.renderscript.ScriptIntrinsicColorMatrix $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

     label1:
        $r2 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        virtualinvoke $r2.<android.renderscript.ScriptIntrinsicColorMatrix: void setRGBtoYUV()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r4;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void forEach(android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation)
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.support.v8.renderscript.Allocation r1, r2;
        android.support.v8.renderscript.AllocationThunker r3, r4;
        android.renderscript.RSRuntimeException r5, $r9;
        android.renderscript.ScriptIntrinsicColorMatrix $r6;
        android.renderscript.Allocation $r7, $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        r2 := @parameter1: android.support.v8.renderscript.Allocation;

        r3 = (android.support.v8.renderscript.AllocationThunker) r1;

        r4 = (android.support.v8.renderscript.AllocationThunker) r2;

     label1:
        $r6 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        $r7 = virtualinvoke r3.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation getNObj()>();

        $r8 = virtualinvoke r4.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation getNObj()>();

        virtualinvoke $r6.<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>($r7, $r8);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        $r10 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r5);

        throw $r10;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public android.support.v8.renderscript.Script$KernelID getKernelID()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.support.v8.renderscript.Script$KernelID r1;
        android.renderscript.RSRuntimeException r2, $r5;
        android.renderscript.ScriptIntrinsicColorMatrix $r3;
        android.renderscript.Script$KernelID $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.support.v8.renderscript.Script$KernelID createKernelID(int,int,android.support.v8.renderscript.Element,android.support.v8.renderscript.Element)>(0, 3, null, null);

     label1:
        $r3 = r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix mN>;

        $r4 = virtualinvoke $r3.<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script$KernelID getKernelID()>();

        r1.<android.support.v8.renderscript.Script$KernelID: android.renderscript.Script$KernelID mN> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r2);

        throw $r6;

     label4:
        return r1;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    volatile android.renderscript.Script getNObj()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.renderscript.ScriptIntrinsicColorMatrix $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix getNObj()>();

        return $r1;
    }

    volatile android.renderscript.BaseObj getNObj()
    {
        android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker r0;
        android.renderscript.ScriptIntrinsicColorMatrix $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker: android.renderscript.ScriptIntrinsicColorMatrix getNObj()>();

        return $r1;
    }
}
