public class com.coremedia.iso.boxes.sampleentry.AudioSampleEntry extends com.coremedia.iso.boxes.sampleentry.SampleEntry implements com.coremedia.iso.boxes.ContainerBox
{
    public static final java.lang.String TYPE1;
    public static final java.lang.String TYPE2;
    public static final java.lang.String TYPE3;
    public static final java.lang.String TYPE4;
    public static final java.lang.String TYPE5;
    public static final java.lang.String TYPE7;
    public static final java.lang.String TYPE8;
    public static final java.lang.String TYPE9;
    public static final java.lang.String TYPE10;
    public static final java.lang.String TYPE11;
    public static final java.lang.String TYPE12;
    public static final java.lang.String TYPE13;
    public static final java.lang.String TYPE_ENCRYPTED;
    private int channelCount;
    private int sampleSize;
    private long sampleRate;
    private int soundVersion;
    private int compressionId;
    private int packetSize;
    private long samplesPerPacket;
    private long bytesPerPacket;
    private long bytesPerFrame;
    private long bytesPerSample;
    private int reserved1;
    private long reserved2;
    private byte[] soundVersion2Data;
    private com.coremedia.iso.BoxParser boxParser;

    public void <init>(java.lang.String)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.coremedia.iso.boxes.sampleentry.SampleEntry: void <init>(java.lang.String)>(r1);

        return;
    }

    public int getChannelCount()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount>;

        return $i0;
    }

    public int getSampleSize()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize>;

        return $i0;
    }

    public long getSampleRate()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate>;

        return $l0;
    }

    public int getSoundVersion()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        return $i0;
    }

    public int getCompressionId()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId>;

        return $i0;
    }

    public int getPacketSize()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize>;

        return $i0;
    }

    public long getSamplesPerPacket()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        return $l0;
    }

    public long getBytesPerPacket()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        return $l0;
    }

    public long getBytesPerFrame()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        return $l0;
    }

    public long getBytesPerSample()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        return $l0;
    }

    public byte[] getSoundVersion2Data()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        byte[] $r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r1 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data>;

        return $r1;
    }

    public int getReserved1()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int $i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1>;

        return $i0;
    }

    public long getReserved2()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2>;

        return $l0;
    }

    public void setChannelCount(int)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount> = i0;

        return;
    }

    public void setSampleSize(int)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize> = i0;

        return;
    }

    public void setSampleRate(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate> = l0;

        return;
    }

    public void setSoundVersion(int)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion> = i0;

        return;
    }

    public void setCompressionId(int)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId> = i0;

        return;
    }

    public void setPacketSize(int)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize> = i0;

        return;
    }

    public void setSamplesPerPacket(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket> = l0;

        return;
    }

    public void setBytesPerPacket(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket> = l0;

        return;
    }

    public void setBytesPerFrame(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame> = l0;

        return;
    }

    public void setBytesPerSample(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample> = l0;

        return;
    }

    public void setReserved1(int)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        int i0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1> = i0;

        return;
    }

    public void setReserved2(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2> = l0;

        return;
    }

    public void setSoundVersion2Data(byte[])
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        byte[] r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: byte[];

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data> = r1;

        return;
    }

    public void setBoxParser(com.coremedia.iso.BoxParser)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        com.coremedia.iso.BoxParser r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: com.coremedia.iso.BoxParser;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: com.coremedia.iso.BoxParser boxParser> = r1;

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        java.nio.ByteBuffer r1;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9;
        long $l2, $l7, $l11, $l12, $l13, $l14, $l15, $l16;
        java.lang.String $r2;
        boolean $z0;
        byte[] $r3;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void _parseReservedAndDataReferenceIndex(java.nio.ByteBuffer)>(r1);

        $i0 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion> = $i0;

        $i1 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1> = $i1;

        $l2 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2> = $l2;

        $i3 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount> = $i3;

        $i4 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize> = $i4;

        $i5 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId> = $i5;

        $i6 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize> = $i6;

        $l7 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate> = $l7;

        $r2 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String type>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("mlpa");

        if $z0 != 0 goto label1;

        $l16 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate>;

        $l15 = $l16 >>> 16;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate> = $l15;

     label1:
        $i8 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i8 <= 0 goto label2;

        $l12 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket> = $l12;

        $l11 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket> = $l11;

        $l14 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame> = $l14;

        $l13 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample> = $l13;

     label2:
        $i9 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i9 != 2 goto label3;

        $r3 = newarray (byte)[20];

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data> = $r3;

        virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(20);

     label3:
        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void _parseChildBoxes(java.nio.ByteBuffer)>(r1);

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0, $l3, $l4, $l5, l6, l7;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.Box r2;
        int $i1, $i2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 = 28L;

        $i1 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i1 <= 0 goto label1;

        $l5 = 16L;

        goto label2;

     label1:
        $l5 = 0L;

     label2:
        l6 = l0 + $l5;

        $i2 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i2 != 2 goto label3;

        $l4 = 20L;

        goto label4;

     label3:
        $l4 = 0L;

     label4:
        l7 = l6 + $l4;

        $r3 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List boxes>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.Box) $r4;

        $l3 = interfaceinvoke r2.<com.coremedia.iso.boxes.Box: long getSize()>();

        l7 = l7 + $l3;

        goto label5;

     label6:
        return l7;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        long $l0, $l1, $l2, $l3, $l7;
        int $i4, $i5, $i6, $i8, $i9;
        java.util.List $r25;
        java.lang.String $r26;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioSampleEntry{bytesPerSample=");

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bytesPerFrame=");

        $l1 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bytesPerPacket=");

        $l2 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", samplesPerPacket=");

        $l3 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", packetSize=");

        $i4 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", compressionId=");

        $i5 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", soundVersion=");

        $i6 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleRate=");

        $l7 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleSize=");

        $i8 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", channelCount=");

        $i9 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", boxes=");

        $r25 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        java.nio.ByteBuffer r1;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i9, $i10;
        long $l2, $l7, $l8, $l11, $l12, $l13, $l14, $l15;
        java.lang.String $r2;
        boolean $z0;
        byte[] $r3;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void _writeReservedAndDataReferenceIndex(java.nio.ByteBuffer)>(r1);

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i0);

        $i1 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i1);

        $l2 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l2);

        $i3 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i3);

        $i4 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i4);

        $i5 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i5);

        $i6 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i6);

        $r2 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String type>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("mlpa");

        if $z0 == 0 goto label1;

        $l14 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l14);

        goto label2;

     label1:
        $l7 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $l8 = $l7 << 16;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l8);

     label2:
        $i9 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i9 <= 0 goto label3;

        $l11 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l11);

        $l13 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l13);

        $l12 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l12);

        $l15 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l15);

     label3:
        $i10 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i10 != 2 goto label4;

        $r3 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r3);

     label4:
        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void _writeChildBoxes(java.nio.ByteBuffer)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE_ENCRYPTED> = "enca";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE13> = "dtse";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE12> = "dtsh";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE11> = "dtsl";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE10> = "mlpa";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE9> = "ec-3";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE8> = "ac-3";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE7> = "owma";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE5> = "alac";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE4> = "drms";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE3> = "mp4a";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE2> = "sawb";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE1> = "samr";

        return;
    }
}
