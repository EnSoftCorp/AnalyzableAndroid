public class com.googlecode.mp4parser.h264.model.ScalingList extends java.lang.Object
{
    public int[] scalingList;
    public boolean useDefaultScalingMatrixFlag;

    public void <init>()
    {
        com.googlecode.mp4parser.h264.model.ScalingList r0;

        r0 := @this: com.googlecode.mp4parser.h264.model.ScalingList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void write(com.googlecode.mp4parser.h264.write.CAVLCWriter) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.model.ScalingList r0;
        com.googlecode.mp4parser.h264.write.CAVLCWriter r1;
        int i0, i2, i3, $i4, $i5, $i6;
        byte b1;
        boolean $z0;
        int[] $r2, $r3, $r4;

        r0 := @this: com.googlecode.mp4parser.h264.model.ScalingList;

        r1 := @parameter0: com.googlecode.mp4parser.h264.write.CAVLCWriter;

        $z0 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: boolean useDefaultScalingMatrixFlag>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.googlecode.mp4parser.h264.write.CAVLCWriter: void writeSE(int,java.lang.String)>(0, "SPS: ");

        return;

     label1:
        i0 = 8;

        b1 = 8;

        i2 = 0;

     label2:
        $r2 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $i4 = lengthof $r2;

        if i2 >= $i4 goto label4;

        if b1 == 0 goto label3;

        $r4 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $i5 = $r4[i2];

        $i6 = $i5 - i0;

        i3 = $i6 - 256;

        virtualinvoke r1.<com.googlecode.mp4parser.h264.write.CAVLCWriter: void writeSE(int,java.lang.String)>(i3, "SPS: ");

     label3:
        $r3 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        i0 = $r3[i2];

        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    public static com.googlecode.mp4parser.h264.model.ScalingList read(com.googlecode.mp4parser.h264.read.CAVLCReader, int) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.CAVLCReader r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        com.googlecode.mp4parser.h264.model.ScalingList r1, $r2;
        int[] $r3, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: com.googlecode.mp4parser.h264.read.CAVLCReader;

        i0 := @parameter1: int;

        $r2 = new com.googlecode.mp4parser.h264.model.ScalingList;

        specialinvoke $r2.<com.googlecode.mp4parser.h264.model.ScalingList: void <init>()>();

        r1 = $r2;

        $r3 = newarray (int)[i0];

        r1.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList> = $r3;

        i1 = 8;

        i2 = 8;

        i3 = 0;

     label1:
        if i3 >= i0 goto label7;

        if i2 == 0 goto label4;

        i4 = virtualinvoke r0.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readSE(java.lang.String)>("deltaScale");

        $i6 = i1 + i4;

        $i7 = $i6 + 256;

        i2 = $i7 % 256;

        if i3 != 0 goto label2;

        if i2 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r1.<com.googlecode.mp4parser.h264.model.ScalingList: boolean useDefaultScalingMatrixFlag> = $z0;

     label4:
        $r4 = r1.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        if i2 != 0 goto label5;

        $i5 = i1;

        goto label6;

     label5:
        $i5 = i2;

     label6:
        $r4[i3] = $i5;

        $r5 = r1.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        i1 = $r5[i3];

        i3 = i3 + 1;

        goto label1;

     label7:
        return r1;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.h264.model.ScalingList r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        int[] $r3;
        boolean $z0;
        java.lang.String $r8;

        r0 := @this: com.googlecode.mp4parser.h264.model.ScalingList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScalingList{scalingList=");

        $r3 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useDefaultScalingMatrixFlag=");

        $z0 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: boolean useDefaultScalingMatrixFlag>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
