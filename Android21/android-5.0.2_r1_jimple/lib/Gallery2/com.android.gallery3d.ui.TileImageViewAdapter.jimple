public class com.android.gallery3d.ui.TileImageViewAdapter extends java.lang.Object implements com.android.gallery3d.ui.TileImageView$TileSource
{
    private static final java.lang.String TAG;
    protected com.android.gallery3d.ui.ScreenNail mScreenNail;
    protected boolean mOwnScreenNail;
    protected android.graphics.BitmapRegionDecoder mRegionDecoder;
    protected int mImageWidth;
    protected int mImageHeight;
    protected int mLevelCount;

    public void <init>()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public synchronized void clear()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: com.android.gallery3d.ui.ScreenNail mScreenNail> = null;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth> = 0;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageHeight> = 0;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mLevelCount> = 0;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.BitmapRegionDecoder mRegionDecoder> = null;

        return;
    }

    public synchronized void setScreenNail(com.android.gallery3d.ui.ScreenNail, int, int)
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        com.android.gallery3d.ui.ScreenNail r1;
        int i0, i1;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        r1 := @parameter0: com.android.gallery3d.ui.ScreenNail;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: com.android.gallery3d.ui.ScreenNail mScreenNail> = r1;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth> = i0;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageHeight> = i1;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.BitmapRegionDecoder mRegionDecoder> = null;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mLevelCount> = 0;

        return;
    }

    public synchronized void setRegionDecoder(android.graphics.BitmapRegionDecoder)
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        android.graphics.BitmapRegionDecoder r1, $r3;
        java.lang.Object $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        r1 := @parameter0: android.graphics.BitmapRegionDecoder;

        $r2 = staticinvoke <com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.graphics.BitmapRegionDecoder) $r2;

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.BitmapRegionDecoder mRegionDecoder> = $r3;

        $i0 = virtualinvoke r1.<android.graphics.BitmapRegionDecoder: int getWidth()>();

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth> = $i0;

        $i1 = virtualinvoke r1.<android.graphics.BitmapRegionDecoder: int getHeight()>();

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageHeight> = $i1;

        $i2 = specialinvoke r0.<com.android.gallery3d.ui.TileImageViewAdapter: int calculateLevelCount()>();

        r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mLevelCount> = $i2;

        return;
    }

    private int calculateLevelCount()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        int $i0, $i1, $i2, $i3;
        com.android.gallery3d.ui.ScreenNail $r1;
        float $f0, $f1, $f2;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        $i0 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth>;

        $f0 = (float) $i0;

        $r1 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: com.android.gallery3d.ui.ScreenNail mScreenNail>;

        $i1 = interfaceinvoke $r1.<com.android.gallery3d.ui.ScreenNail: int getWidth()>();

        $f1 = (float) $i1;

        $f2 = $f0 / $f1;

        $i2 = staticinvoke <com.android.gallery3d.common.Utils: int ceilLog2(float)>($f2);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        return $i3;
    }

    public android.graphics.Bitmap getTile(int, int, int, int)
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0, r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Rect r1, $r7, $r8;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r3, r5, r6, $r20, $r23, $r24;
        android.graphics.BitmapRegionDecoder r4, r27;
        com.android.photos.data.GalleryBitmapPool $r10, $r18, $r26;
        android.graphics.Bitmap$Config $r11, $r12;
        android.graphics.BitmapFactory$Options $r13, r29;
        android.graphics.Bitmap $r15, $r16, $r17, $r19, $r21, $r22, $r25, r28;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z1 = <com.android.gallery3d.common.ApiHelper: boolean HAS_REUSING_BITMAP_IN_BITMAP_REGION_DECODER>;

        if $z1 != 0 goto label01;

        $r19 = specialinvoke r0.<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.Bitmap getTileWithoutReusingBitmap(int,int,int,int)>(i0, i1, i2, i3);

        return $r19;

     label01:
        i4 = i3 << i0;

        $r7 = new android.graphics.Rect;

        $i5 = i1 + i4;

        $i6 = i2 + i4;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(i1, i2, $i5, $i6);

        r1 = $r7;

        r2 = r0;

        entermonitor r0;

     label02:
        r27 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.BitmapRegionDecoder mRegionDecoder>;

        if r27 != null goto label04;

        exitmonitor r2;

     label03:
        return null;

     label04:
        $r8 = new android.graphics.Rect;

        $i7 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth>;

        $i8 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageHeight>;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i7, $i8);

        $z2 = virtualinvoke $r8.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r1);

        if $z2 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z0 = $z3;

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r24 := @caughtexception;

        r3 = $r24;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r10 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        r28 = virtualinvoke $r10.<com.android.photos.data.GalleryBitmapPool: android.graphics.Bitmap get(int,int)>(i3, i3);

        if r28 == null goto label11;

        if z0 == 0 goto label12;

        virtualinvoke r28.<android.graphics.Bitmap: void eraseColor(int)>(0);

        goto label12;

     label11:
        $r11 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r28 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i3, $r11);

     label12:
        $r13 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r13.<android.graphics.BitmapFactory$Options: void <init>()>();

        r29 = $r13;

        $r12 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r12;

        r29.<android.graphics.BitmapFactory$Options: boolean inPreferQualityOverSpeed> = 1;

        $i9 = 1 << i0;

        r29.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i9;

        r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = r28;

     label13:
        r4 = r27;

        entermonitor r27;

     label14:
        r28 = virtualinvoke r27.<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, r29);

        exitmonitor r4;

     label15:
        goto label18;

     label16:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r4;

     label17:
        throw r5;

     label18:
        $r15 = r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r15 == r28 goto label22;

        $r17 = r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r17 == null goto label22;

        $r18 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $r16 = r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        virtualinvoke $r18.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>($r16);

        r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

        goto label22;

     label19:
        $r23 := @caughtexception;

        r6 = $r23;

     label20:
        $r21 = r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r21 == r28 goto label21;

        $r22 = r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r22 == null goto label21;

        $r26 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $r25 = r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        virtualinvoke $r26.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>($r25);

        r29.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = null;

     label21:
        throw r6;

     label22:
        if r28 != null goto label23;

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.String)>("TileImageViewAdapter", "fail in decoding region");

     label23:
        return r28;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label13 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    private android.graphics.Bitmap getTileWithoutReusingBitmap(int, int, int, int)
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0, r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.graphics.Rect r1, r3, $r8, $r9;
        android.graphics.BitmapRegionDecoder r2, r6;
        java.lang.Throwable r5, r7, $r16, $r17;
        boolean $z0, $z1;
        android.graphics.Bitmap$Config $r11, $r14;
        android.graphics.BitmapFactory$Options $r12, r18;
        android.graphics.Canvas $r15, r21;
        float $f0, $f1;
        android.graphics.Bitmap r19, r20;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = i3 << i0;

        $r8 = new android.graphics.Rect;

        $i6 = i1 + i4;

        $i5 = i2 + i4;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>(i1, i2, $i6, $i5);

        r1 = $r8;

        r4 = r0;

        entermonitor r0;

     label01:
        r2 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.BitmapRegionDecoder mRegionDecoder>;

        if r2 != null goto label03;

        exitmonitor r4;

     label02:
        return null;

     label03:
        $r9 = new android.graphics.Rect;

        $i7 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth>;

        $i8 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageHeight>;

        specialinvoke $r9.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i7, $i8);

        r3 = $r9;

        $z0 = virtualinvoke r3.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r1);

        staticinvoke <com.android.gallery3d.common.Utils: void assertTrue(boolean)>($z0);

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        $r12 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r12.<android.graphics.BitmapFactory$Options: void <init>()>();

        r18 = $r12;

        $r11 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r18.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r11;

        r18.<android.graphics.BitmapFactory$Options: boolean inPreferQualityOverSpeed> = 1;

        $i9 = 1 << i0;

        r18.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i9;

        r6 = r2;

        entermonitor r2;

     label08:
        r19 = virtualinvoke r2.<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r3, r18);

        exitmonitor r6;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r6;

     label11:
        throw r7;

     label12:
        if r19 != null goto label13;

        staticinvoke <com.android.gallery3d.ui.Log: int w(java.lang.String,java.lang.String)>("TileImageViewAdapter", "fail in decoding region");

     label13:
        $z1 = virtualinvoke r1.<android.graphics.Rect: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label14;

        return r19;

     label14:
        $r14 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r20 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i3, $r14);

        $r15 = new android.graphics.Canvas;

        specialinvoke $r15.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r20);

        r21 = $r15;

        $i13 = r3.<android.graphics.Rect: int left>;

        $i12 = r1.<android.graphics.Rect: int left>;

        $i10 = $i13 - $i12;

        $i11 = $i10 >> i0;

        $f1 = (float) $i11;

        $i17 = r3.<android.graphics.Rect: int top>;

        $i16 = r1.<android.graphics.Rect: int top>;

        $i14 = $i17 - $i16;

        $i15 = $i14 >> i0;

        $f0 = (float) $i15;

        virtualinvoke r21.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r19, $f1, $f0, null);

        return r20;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public com.android.gallery3d.ui.ScreenNail getScreenNail()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        com.android.gallery3d.ui.ScreenNail $r1;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        $r1 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: com.android.gallery3d.ui.ScreenNail mScreenNail>;

        return $r1;
    }

    public int getImageHeight()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        $i0 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageHeight>;

        return $i0;
    }

    public int getImageWidth()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        $i0 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mImageWidth>;

        return $i0;
    }

    public int getLevelCount()
    {
        com.android.gallery3d.ui.TileImageViewAdapter r0;
        int $i0;

        r0 := @this: com.android.gallery3d.ui.TileImageViewAdapter;

        $i0 = r0.<com.android.gallery3d.ui.TileImageViewAdapter: int mLevelCount>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.ui.TileImageViewAdapter: java.lang.String TAG> = "TileImageViewAdapter";

        return;
    }
}
