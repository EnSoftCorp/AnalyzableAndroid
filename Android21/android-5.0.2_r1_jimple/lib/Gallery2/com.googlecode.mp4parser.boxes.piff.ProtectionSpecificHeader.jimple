public class com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader extends java.lang.Object
{
    protected static java.util.Map uuidRegistry;
    java.nio.ByteBuffer data;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r0;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r0, $r4;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r2, $r3;
        java.nio.ByteBuffer $r5, $r6;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r0.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.nio.ByteBuffer data>;

        $r4 = (com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader) r1;

        $r5 = $r4.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.nio.ByteBuffer data>;

        $z2 = virtualinvoke $r6.<java.nio.ByteBuffer: boolean equals(java.lang.Object)>($r5);

        return $z2;

     label1:
        return 0;
    }

    public static com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader createFor(java.util.UUID, java.nio.ByteBuffer)
    {
        java.util.UUID r0;
        java.nio.ByteBuffer r1;
        java.lang.Class r2;
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r3, $r7;
        java.lang.InstantiationException r4, $r9;
        java.util.Map $r5;
        java.lang.Object $r6, $r8;
        java.lang.RuntimeException $r10, $r12;
        java.lang.IllegalAccessException $r11, r13;

        r0 := @parameter0: java.util.UUID;

        r1 := @parameter1: java.nio.ByteBuffer;

        $r5 = <com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.util.Map uuidRegistry>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (java.lang.Class) $r6;

        $r7 = new com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        specialinvoke $r7.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: void <init>()>();

        r3 = $r7;

        if r2 == null goto label5;

     label1:
        $r8 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        r3 = (com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader) $r8;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r10;

     label4:
        $r11 := @caughtexception;

        r13 = $r11;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r12;

     label5:
        virtualinvoke r3.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: void parse(java.nio.ByteBuffer)>(r1);

        return r3;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public void parse(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        r1 := @parameter0: java.nio.ByteBuffer;

        r0.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.nio.ByteBuffer data> = r1;

        return;
    }

    public java.nio.ByteBuffer getData()
    {
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        $r1 = r0.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.nio.ByteBuffer data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r0;
        java.lang.StringBuilder r1, $r4;
        java.nio.ByteBuffer r2, $r7;
        byte[] r3;
        int $i0;
        java.lang.String $r10, $r13;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProtectionSpecificHeader");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{data=");

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.nio.ByteBuffer getData()>();

        r2 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i0 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();

        r3 = newarray (byte)[$i0];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r3);

        $r10 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>(r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1;
        java.util.UUID $r2;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.util.Map uuidRegistry> = $r0;

        $r1 = <com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.util.Map uuidRegistry>;

        $r2 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>("9A04F079-9840-4286-AB92-E65BE0885F95");

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, class "com/googlecode/mp4parser/boxes/piff/PlayReadyHeader");

        return;
    }
}
