public abstract class com.coremedia.iso.AbstractBoxParser extends java.lang.Object implements com.coremedia.iso.BoxParser
{
    private static java.util.logging.Logger LOG;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.coremedia.iso.AbstractBoxParser r0;

        r0 := @this: com.coremedia.iso.AbstractBoxParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract com.coremedia.iso.boxes.Box createBox(java.lang.String, byte[], java.lang.String);

    public com.coremedia.iso.boxes.Box parseBox(java.nio.channels.ReadableByteChannel, com.coremedia.iso.boxes.ContainerBox) throws java.io.IOException
    {
        com.coremedia.iso.AbstractBoxParser r0;
        java.nio.channels.ReadableByteChannel r1;
        com.coremedia.iso.boxes.ContainerBox r2;
        java.nio.ByteBuffer r3, r6, r47;
        long l0, l1, $l5, $l6, $l8, $l12, $l14, $l15, $l16, $l19, $l20;
        java.lang.String r4, $r7, $r8, $r13, $r14, $r20, $r28, $r42;
        byte[] r5, $r18, $r32, $r35;
        byte $b2, $b3, $b4, $b13, $b18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9, $r10, $r12, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r41, $r43, $r45, $r46;
        java.util.logging.Logger $r11, $r44;
        int $i7, $i9, $i10, $i11;
        java.lang.RuntimeException $r15, $r36;
        java.lang.AssertionError $r19;
        java.nio.channels.FileChannel $r37, $r38;
        com.coremedia.iso.boxes.Box r48;

        r0 := @this: com.coremedia.iso.AbstractBoxParser;

        r1 := @parameter0: java.nio.channels.ReadableByteChannel;

        r2 := @parameter1: com.coremedia.iso.boxes.ContainerBox;

        r3 = staticinvoke <com.coremedia.iso.ChannelHelper: java.nio.ByteBuffer readFully(java.nio.channels.ReadableByteChannel,long)>(r1, 8L);

        l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r3);

        $b2 = l0 cmp 8L;

        if $b2 >= 0 goto label01;

        $b18 = l0 cmp 1L;

        if $b18 <= 0 goto label01;

        $r44 = <com.coremedia.iso.AbstractBoxParser: java.util.logging.Logger LOG>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Plausibility check failed: size < 8 (size = ");

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Stop parsing!");

        $r42 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.util.logging.Logger: void severe(java.lang.String)>($r42);

        return null;

     label01:
        r4 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r3);

        r5 = null;

        $b3 = l0 cmp 1L;

        if $b3 != 0 goto label02;

        r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        interfaceinvoke r1.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6);

        virtualinvoke r6.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt64(java.nio.ByteBuffer)>(r6);

        l1 = l0 - 16L;

        goto label06;

     label02:
        $b4 = l0 cmp 0L;

        if $b4 != 0 goto label05;

        $z2 = r1 instanceof java.nio.channels.FileChannel;

        if $z2 == 0 goto label03;

        $r37 = (java.nio.channels.FileChannel) r1;

        $l16 = virtualinvoke $r37.<java.nio.channels.FileChannel: long size()>();

        $r38 = (java.nio.channels.FileChannel) r1;

        $l19 = virtualinvoke $r38.<java.nio.channels.FileChannel: long position()>();

        $l20 = $l16 - $l19;

        l0 = $l20 - 8L;

        goto label04;

     label03:
        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>("Only FileChannel inputs may use size == 0 (box reaches to the end of file)");

        throw $r36;

     label04:
        l1 = l0 - 8L;

        goto label06;

     label05:
        l1 = l0 - 8L;

     label06:
        $r7 = "uuid";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label07;

        r47 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(16);

        interfaceinvoke r1.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r47);

        virtualinvoke r47.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        r5 = virtualinvoke r47.<java.nio.ByteBuffer: byte[] array()>();

        l1 = l1 - 16L;

     label07:
        $r8 = interfaceinvoke r2.<com.coremedia.iso.boxes.ContainerBox: java.lang.String getType()>();

        r48 = virtualinvoke r0.<com.coremedia.iso.AbstractBoxParser: com.coremedia.iso.boxes.Box createBox(java.lang.String,byte[],java.lang.String)>(r4, r5, $r8);

        interfaceinvoke r48.<com.coremedia.iso.boxes.Box: void setParent(com.coremedia.iso.boxes.ContainerBox)>(r2);

        $r11 = <com.coremedia.iso.AbstractBoxParser: java.util.logging.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing ");

        $r13 = interfaceinvoke r48.<com.coremedia.iso.boxes.Box: java.lang.String getType()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void finest(java.lang.String)>($r14);

        $l5 = l0 - l1;

        $i7 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        if $i7 != 8 goto label08;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        goto label12;

     label08:
        $l6 = l0 - l1;

        $i9 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l6);

        if $i9 != 16 goto label09;

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(16);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r3, 1L);

        $r35 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>(r4);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r35);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r3, l0);

        goto label12;

     label09:
        $l8 = l0 - l1;

        $i11 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l8);

        if $i11 != 24 goto label10;

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(24);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r3, l0);

        $r32 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>(r4);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r32);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r5);

        goto label12;

     label10:
        $l12 = l0 - l1;

        $i10 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l12);

        if $i10 != 32 goto label11;

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(32);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r3, l0);

        $r18 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>(r4);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r18);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r3, l0);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r5);

        goto label12;

     label11:
        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>("I didn\'t expect that");

        throw $r15;

     label12:
        interfaceinvoke r48.<com.coremedia.iso.boxes.Box: void parse(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer,long,com.coremedia.iso.BoxParser)>(r1, r3, l1, r0);

        $z1 = <com.coremedia.iso.AbstractBoxParser: boolean $assertionsDisabled>;

        if $z1 != 0 goto label13;

        $l14 = interfaceinvoke r48.<com.coremedia.iso.boxes.Box: long getSize()>();

        $b13 = l0 cmp $l14;

        if $b13 == 0 goto label13;

        $r19 = new java.lang.AssertionError;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reconstructed Size is not x to the number of parsed bytes! (");

        $r20 = interfaceinvoke r48.<com.coremedia.iso.boxes.Box: java.lang.String getType()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Actual Box size: ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Calculated size: ");

        $l15 = interfaceinvoke r48.<com.coremedia.iso.boxes.Box: long getSize()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>($r28);

        throw $r19;

     label13:
        return r48;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;

        $r0 = class "com/coremedia/iso/AbstractBoxParser";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.AbstractBoxParser: boolean $assertionsDisabled> = $z1;

        $r1 = class "com/coremedia/iso/AbstractBoxParser";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.coremedia.iso.AbstractBoxParser: java.util.logging.Logger LOG> = $r3;

        return;
    }
}
