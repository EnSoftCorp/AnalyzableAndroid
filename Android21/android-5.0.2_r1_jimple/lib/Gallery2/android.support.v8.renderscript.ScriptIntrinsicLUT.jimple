public class android.support.v8.renderscript.ScriptIntrinsicLUT extends android.support.v8.renderscript.ScriptIntrinsic
{
    private final android.support.v8.renderscript.Matrix4f mMatrix;
    private android.support.v8.renderscript.Allocation mTables;
    private final byte[] mCache;
    private boolean mDirty;

    protected void <init>(int, android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        int i0;
        android.support.v8.renderscript.RenderScript r1;
        android.support.v8.renderscript.Matrix4f $r2;
        byte[] $r3;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsic: void <init>(int,android.support.v8.renderscript.RenderScript)>(i0, r1);

        $r2 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r2.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: android.support.v8.renderscript.Matrix4f mMatrix> = $r2;

        $r3 = newarray (byte)[1024];

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache> = $r3;

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public static android.support.v8.renderscript.ScriptIntrinsicLUT create(android.support.v8.renderscript.RenderScript, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.Element r1, $r5;
        android.support.v8.renderscript.RenderScriptThunker r2;
        android.support.v8.renderscript.ScriptIntrinsicLUT r3, $r4;
        int i0, $i1, $i4, $i5, $i8, i9;
        boolean $z0;
        android.support.v8.renderscript.Allocation $r6, $r7;
        byte $b2, $b3, $b6, $b7;
        byte[] $r8, $r9, $r10, $r11;
        android.support.v8.renderscript.ScriptIntrinsicLUTThunker $r12;

        r0 := @parameter0: android.support.v8.renderscript.RenderScript;

        r1 := @parameter1: android.support.v8.renderscript.Element;

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 == 0 goto label1;

        r2 = (android.support.v8.renderscript.RenderScriptThunker) r0;

        $r12 = staticinvoke <android.support.v8.renderscript.ScriptIntrinsicLUTThunker: android.support.v8.renderscript.ScriptIntrinsicLUTThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element)>(r0, r1);

        return $r12;

     label1:
        $i1 = virtualinvoke r1.<android.support.v8.renderscript.Element: int getID(android.support.v8.renderscript.RenderScript)>(r0);

        i9 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int nScriptIntrinsicCreate(int,int)>(3, $i1);

        $r4 = new android.support.v8.renderscript.ScriptIntrinsicLUT;

        specialinvoke $r4.<android.support.v8.renderscript.ScriptIntrinsicLUT: void <init>(int,android.support.v8.renderscript.RenderScript)>(i9, r0);

        r3 = $r4;

        $r5 = staticinvoke <android.support.v8.renderscript.Element: android.support.v8.renderscript.Element U8(android.support.v8.renderscript.RenderScript)>(r0);

        $r6 = staticinvoke <android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Allocation createSized(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element,int)>(r0, $r5, 1024);

        r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: android.support.v8.renderscript.Allocation mTables> = $r6;

        i0 = 0;

     label2:
        if i0 >= 256 goto label3;

        $r8 = r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $b2 = (byte) i0;

        $r8[i0] = $b2;

        $r9 = r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i4 = i0 + 256;

        $b3 = (byte) i0;

        $r9[$i4] = $b3;

        $r10 = r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i5 = i0 + 512;

        $b6 = (byte) i0;

        $r10[$i5] = $b6;

        $r11 = r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i8 = i0 + 768;

        $b7 = (byte) i0;

        $r11[$i8] = $b7;

        i0 = i0 + 1;

        goto label2;

     label3:
        $r7 = r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: android.support.v8.renderscript.Allocation mTables>;

        virtualinvoke r3.<android.support.v8.renderscript.ScriptIntrinsicLUT: void setVar(int,android.support.v8.renderscript.BaseObj)>(0, $r7);

        return r3;
    }

    private void validate(int, int)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1;
        android.support.v8.renderscript.RSIllegalArgumentException $r1, $r2;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 <= 255 goto label2;

     label1:
        $r1 = new android.support.v8.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Index out of range (0-255).");

        throw $r1;

     label2:
        if i1 < 0 goto label3;

        if i1 <= 255 goto label4;

     label3:
        $r2 = new android.support.v8.renderscript.RSIllegalArgumentException;

        specialinvoke $r2.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Value out of range (0-255).");

        throw $r2;

     label4:
        return;
    }

    public void setRed(int, int)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1;
        byte $b2;
        byte[] $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $b2 = (byte) i1;

        $r1[i0] = $b2;

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void setGreen(int, int)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1, $i3;
        byte $b2;
        byte[] $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i3 = i0 + 256;

        $b2 = (byte) i1;

        $r1[$i3] = $b2;

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void setBlue(int, int)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1, $i3;
        byte $b2;
        byte[] $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i3 = i0 + 512;

        $b2 = (byte) i1;

        $r1[$i3] = $b2;

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void setAlpha(int, int)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        int i0, i1, $i3;
        byte $b2;
        byte[] $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: void validate(int,int)>(i0, i1);

        $r1 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        $i3 = i0 + 768;

        $b2 = (byte) i1;

        $r1[$i3] = $b2;

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 1;

        return;
    }

    public void forEach(android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation)
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        android.support.v8.renderscript.Allocation r1, r2, $r4;
        boolean $z0;
        byte[] $r3;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        r2 := @parameter1: android.support.v8.renderscript.Allocation;

        $z0 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty>;

        if $z0 == 0 goto label1;

        r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: boolean mDirty> = 0;

        $r4 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: android.support.v8.renderscript.Allocation mTables>;

        $r3 = r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: byte[] mCache>;

        virtualinvoke $r4.<android.support.v8.renderscript.Allocation: void copyFromUnchecked(byte[])>($r3);

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: void forEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker)>(0, r1, r2, null);

        return;
    }

    public android.support.v8.renderscript.Script$KernelID getKernelID()
    {
        android.support.v8.renderscript.ScriptIntrinsicLUT r0;
        android.support.v8.renderscript.Script$KernelID $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicLUT;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicLUT: android.support.v8.renderscript.Script$KernelID createKernelID(int,int,android.support.v8.renderscript.Element,android.support.v8.renderscript.Element)>(0, 3, null, null);

        return $r1;
    }
}
