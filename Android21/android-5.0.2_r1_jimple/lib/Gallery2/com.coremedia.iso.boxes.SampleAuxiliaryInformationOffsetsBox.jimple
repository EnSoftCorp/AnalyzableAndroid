public class com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private java.util.List offsets;
    private long auxInfoType;
    private long auxInfoTypeParameter;

    public void <init>()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.LinkedList $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("saio");

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets> = $r1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10;
        java.util.List $r1, $r2;
        long $l8;
        byte $b9;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getVersion()>();

        if $i1 != 0 goto label1;

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $i10 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i3 = 4 * $i10;

        goto label2;

     label1:
        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = 8 * $i2;

     label2:
        $i4 = 8 + $i3;

        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getFlags()>();

        $i6 = $i5 & 1;

        if $i6 != 1 goto label3;

        $b9 = 8;

        goto label4;

     label3:
        $b9 = 0;

     label4:
        $i7 = $i4 + $b9;

        $l8 = (long) $i7;

        return $l8;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.nio.ByteBuffer r1;
        java.util.Iterator r2;
        java.lang.Long r3;
        int $i0, $i1, $i2, $i4;
        java.util.List $r4, $r5;
        long $l3, $l5, $l6, $l7, $l8;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $l8 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoType>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l8);

        $l7 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoTypeParameter>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l7);

     label1:
        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l3 = (long) $i2;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l3);

        $r5 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Long) $r6;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getVersion()>();

        if $i4 != 0 goto label3;

        $l6 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l6);

        goto label4;

     label3:
        $l5 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r1, $l5);

     label4:
        goto label2;

     label5:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.nio.ByteBuffer r1;
        int i0, i1, $i3, $i4, $i6;
        long $l5, $l7, $l8, $l9, $l10;
        java.util.List $r2, $r3, $r5;
        java.lang.Long $r4, $r6;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getFlags()>();

        $i4 = $i3 & 1;

        if $i4 != 1 goto label1;

        $l9 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoType> = $l9;

        $l10 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoTypeParameter> = $l10;

     label1:
        $l5 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        i0 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $i6 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: int getVersion()>();

        if $i6 != 0 goto label3;

        $r5 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $l8 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label4;

     label3:
        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        $l7 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt64(java.nio.ByteBuffer)>(r1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return;
    }

    public long getAuxInfoType()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $l0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoType>;

        return $l0;
    }

    public void setAuxInfoType(long)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoType> = l0;

        return;
    }

    public long getAuxInfoTypeParameter()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $l0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoTypeParameter>;

        return $l0;
    }

    public void setAuxInfoTypeParameter(long)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: long auxInfoTypeParameter> = l0;

        return;
    }

    public java.util.List getOffsets()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets>;

        return $r1;
    }

    public void setOffsets(java.util.List)
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox r0;
        java.util.List r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox;

        r1 := @parameter0: java.util.List;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.util.List offsets> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.SampleAuxiliaryInformationOffsetsBox: java.lang.String TYPE> = "saio";

        return;
    }
}
