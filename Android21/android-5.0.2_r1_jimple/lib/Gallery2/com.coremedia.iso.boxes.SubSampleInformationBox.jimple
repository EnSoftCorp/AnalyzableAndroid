public class com.coremedia.iso.boxes.SubSampleInformationBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private long entryCount;
    private java.util.List entries;

    public void <init>()
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.util.ArrayList $r1;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("subs");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries> = $r1;

        return;
    }

    public java.util.List getEntries()
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.util.List $r1;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        $r1 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        return $r1;
    }

    public void setEntries(java.util.List)
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.util.List r1;
        int $i0;
        long $l1;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        r1 := @parameter0: java.util.List;

        r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries> = r1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $l1 = (long) $i0;

        r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount> = $l1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        long l0, $l2, $l3, $l4, $l5;
        int i1, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        byte $b12;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        $l2 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount>;

        $l3 = 6L * $l2;

        l0 = 8L + $l3;

        i1 = 0;

        $r3 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry) $r4;

        $i6 = virtualinvoke r2.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: int getSubsampleCount()>();

        $i7 = virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: int getVersion()>();

        if $i7 != 1 goto label2;

        $b12 = 4;

        goto label3;

     label2:
        $b12 = 2;

     label3:
        $i9 = $b12 + 1;

        $i8 = $i9 + 1;

        $i11 = $i8 + 4;

        $i10 = $i6 * $i11;

        i1 = i1 + $i10;

        goto label1;

     label4:
        $l4 = (long) i1;

        $l5 = l0 + $l4;

        return $l5;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.nio.ByteBuffer r1;
        int i0, i1, i2, $i9, $i10, $i11, $i14;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry r2, $r4;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry r3, $r6;
        long $l4, $l5, $l6, $l8, $l12, $l13;
        byte $b7;
        java.util.List $r5;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l4 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount> = $l4;

        i0 = 0;

     label1:
        $l6 = (long) i0;

        $l5 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount>;

        $b7 = $l6 cmp $l5;

        if $b7 >= 0 goto label6;

        $r4 = new com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry;

        specialinvoke $r4.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: void <init>()>();

        r2 = $r4;

        $l8 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        virtualinvoke r2.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: void setSampleDelta(long)>($l8);

        i1 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        $r6 = new com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry;

        specialinvoke $r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void <init>()>();

        r3 = $r6;

        $i10 = virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: int getVersion()>();

        if $i10 != 1 goto label3;

        $l12 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        goto label4;

     label3:
        $i9 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        $l12 = (long) $i9;

     label4:
        virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setSubsampleSize(long)>($l12);

        $i11 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setSubsamplePriority(int)>($i11);

        $i14 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setDiscardable(int)>($i14);

        $l13 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setReserved(long)>($l13);

        virtualinvoke r2.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: void addSubsampleEntry(com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry)>(r3);

        i2 = i2 + 1;

        goto label2;

     label5:
        $r5 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        i0 = i0 + 1;

        goto label1;

     label6:
        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.nio.ByteBuffer r1;
        java.util.Iterator r2, r5;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry r3;
        java.util.List r4, $r7, $r8;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry r6;
        int $i0, $i3, $i5, $i6, $i7, $i9;
        long $l1, $l2, $l4, $l8, $l10;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r7 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        $r8 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry) $r9;

        $l2 = virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: long getSampleDelta()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l2);

        $i3 = virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: int getSubsampleCount()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i3);

        r4 = virtualinvoke r3.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: java.util.List getSubsampleEntries()>();

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry) $r10;

        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: int getVersion()>();

        if $i5 != 1 goto label3;

        $l10 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: long getSubsampleSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l10);

        goto label4;

     label3:
        $l4 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: long getSubsampleSize()>();

        $i7 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l4);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i7);

     label4:
        $i6 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: int getSubsamplePriority()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i6);

        $i9 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: int getDiscardable()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i9);

        $l8 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: long getReserved()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l8);

        goto label2;

     label5:
        goto label1;

     label6:
        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7;
        long $l0;
        java.util.List $r5;
        java.lang.String $r8;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SubSampleInformationBox{entryCount=");

        $l0 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", entries=");

        $r5 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.SubSampleInformationBox: java.lang.String TYPE> = "subs";

        return;
    }
}
