class com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper extends java.lang.Object
{
    private java.io.InputStream inputStream;
    private long pos;
    private long markPos;
    final com.googlecode.mp4parser.authoring.tracks.H264TrackImpl this$0;

    private void <init>(com.googlecode.mp4parser.authoring.tracks.H264TrackImpl, java.io.InputStream)
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl r1;
        java.io.InputStream r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl;

        r2 := @parameter1: java.io.InputStream;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos> = 0L;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long markPos> = 0L;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: java.io.InputStream inputStream> = r2;

        return;
    }

    int read() throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        long $l0, $l1;
        java.io.InputStream $r1;
        int $i2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        $l1 = $l0 + 1L;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos> = $l1;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: java.io.InputStream inputStream>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i2;
    }

    long read(byte[]) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        byte[] r1;
        long l0, $l2, $l3;
        java.io.InputStream $r2;
        int $i1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: java.io.InputStream inputStream>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>(r1);

        l0 = (long) $i1;

        $l2 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        $l3 = $l2 + l0;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos> = $l3;

        return l0;
    }

    long seek(int) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        int i0;
        long l1, $l2, $l3, $l4;
        java.io.InputStream $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: java.io.InputStream inputStream>;

        $l2 = (long) i0;

        l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l2);

        $l3 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        $l4 = $l3 + l1;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos> = $l4;

        return l1;
    }

    public long getPos()
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        long $l0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        return $l0;
    }

    public void mark()
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        int i0;
        java.util.logging.Logger $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        long $l1, $l2;
        java.lang.String $r7;
        java.io.InputStream $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        i0 = 1048576;

        $r1 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl: java.util.logging.Logger access$100()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Marking with ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $l1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void fine(java.lang.String)>($r7);

        $r8 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: java.io.InputStream inputStream>;

        virtualinvoke $r8.<java.io.InputStream: void mark(int)>(i0);

        $l2 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long markPos> = $l2;

        return;
    }

    public void reset() throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        long l0, $l1, $l2, $l3, $l4, $l5;
        java.util.logging.Logger $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        java.io.InputStream $r10;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        $l2 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        $l1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long markPos>;

        l0 = $l2 - $l1;

        $r1 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl: java.util.logging.Logger access$100()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resetting to ");

        $l3 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long markPos>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pos is ");

        $l4 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") which makes the buffersize ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void fine(java.lang.String)>($r9);

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: java.io.InputStream inputStream>;

        virtualinvoke $r10.<java.io.InputStream: void reset()>();

        $l5 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long markPos>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: long pos> = $l5;

        return;
    }

    void <init>(com.googlecode.mp4parser.authoring.tracks.H264TrackImpl, java.io.InputStream, com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$1)
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper r0;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl r1;
        java.io.InputStream r2;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$1 r3;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$1;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$ReaderWrapper: void <init>(com.googlecode.mp4parser.authoring.tracks.H264TrackImpl,java.io.InputStream)>(r1, r2);

        return;
    }
}
