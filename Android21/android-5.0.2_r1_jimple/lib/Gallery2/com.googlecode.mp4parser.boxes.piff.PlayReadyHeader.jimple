public class com.googlecode.mp4parser.boxes.piff.PlayReadyHeader extends com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader
{
    private long length;
    private java.util.List records;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader r0;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader;

        specialinvoke r0.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: void <init>()>();

        return;
    }

    public void parse(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader r0;
        java.nio.ByteBuffer r1;
        int i0;
        long $l1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader;

        r1 := @parameter0: java.nio.ByteBuffer;

        $l1 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32BE(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: long length> = $l1;

        i0 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16BE(java.nio.ByteBuffer)>(r1);

        $r2 = staticinvoke <com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: java.util.List createFor(java.nio.ByteBuffer,int)>(r1, i0);

        r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records> = $r2;

        return;
    }

    public java.nio.ByteBuffer getData()
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader r0;
        int i0, $i2, $i3, $i4, $i5, i6;
        java.util.Iterator r1, r15;
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord r2, r3;
        java.nio.ByteBuffer r4, $r9, $r11, r14;
        java.util.List $r5, $r6, $r7;
        boolean $z0, $z1;
        long $l1;
        java.lang.Object $r8, $r12;
        java.nio.Buffer $r13;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader;

        i0 = 6;

        $r5 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records>;

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord) $r12;

        i6 = i0 + 4;

        $r11 = virtualinvoke r2.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: java.nio.ByteBuffer getValue()>();

        $r13 = virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i5 = virtualinvoke $r13.<java.nio.Buffer: int limit()>();

        i0 = i6 + $i5;

        goto label1;

     label2:
        r14 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        $l1 = (long) i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32BE(java.nio.ByteBuffer,long)>(r14, $l1);

        $r6 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16BE(java.nio.ByteBuffer,int)>(r14, $i2);

        $r7 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records>;

        r15 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord) $r8;

        $i3 = r3.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: int type>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16BE(java.nio.ByteBuffer,int)>(r14, $i3);

        $r9 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: java.nio.ByteBuffer getValue()>();

        $i4 = virtualinvoke $r9.<java.nio.ByteBuffer: int limit()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16BE(java.nio.ByteBuffer,int)>(r14, $i4);

        r4 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: java.nio.ByteBuffer getValue()>();

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r4);

        goto label3;

     label4:
        return r14;
    }

    public void setRecords(java.util.List)
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader r0;
        java.util.List r1;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader;

        r1 := @parameter0: java.util.List;

        r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records> = r1;

        return;
    }

    public java.util.List getRecords()
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader r0;
        java.util.List $r1, $r2;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader;

        $r1 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader r0;
        java.lang.StringBuilder r1, $r2, $r4, $r6, $r9;
        long $l0;
        java.util.List $r7, $r10;
        int $i1;
        java.lang.String $r13;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PlayReadyHeader");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{length=");

        $l0 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: long length>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", recordCount=");

        $r7 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", records=");

        $r10 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader: java.util.List records>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
