public class com.android.photos.views.TiledImageView extends android.widget.FrameLayout
{
    private static final boolean USE_TEXTURE_VIEW;
    private static final boolean IS_SUPPORTED;
    private static final boolean USE_CHOREOGRAPHER;
    private com.android.photos.views.BlockingGLTextureView mTextureView;
    private android.opengl.GLSurfaceView mGLSurfaceView;
    private boolean mInvalPending;
    private android.view.Choreographer$FrameCallback mFrameCallback;
    private float[] mValues;
    private java.lang.Object mLock;
    private com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer;
    private java.lang.Runnable mFreeTextures;
    private android.graphics.RectF mTempRectF;

    public static boolean isTilingSupported()
    {
        boolean $z0;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        return $z0;
    }

    public void <init>(android.content.Context)
    {
        com.android.photos.views.TiledImageView r0;
        android.content.Context r1;

        r0 := @this: com.android.photos.views.TiledImageView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.photos.views.TiledImageView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.photos.views.TiledImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.opengl.GLSurfaceView r3, $r11, $r12, $r14, $r16;
        float[] $r4;
        java.lang.Object $r5;
        com.android.photos.views.TiledImageView$1 $r6;
        android.graphics.RectF $r7;
        boolean $z0;
        com.android.photos.views.TiledImageView$ImageRendererWrapper $r8, $r10;
        com.android.photos.views.TiledImageRenderer $r9;
        com.android.photos.views.TiledImageView$TileRenderer $r13;
        android.widget.FrameLayout$LayoutParams $r15;

        r0 := @this: com.android.photos.views.TiledImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.photos.views.TiledImageView: boolean mInvalPending> = 0;

        $r4 = newarray (float)[9];

        r0.<com.android.photos.views.TiledImageView: float[] mValues> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.photos.views.TiledImageView: java.lang.Object mLock> = $r5;

        $r6 = new com.android.photos.views.TiledImageView$1;

        specialinvoke $r6.<com.android.photos.views.TiledImageView$1: void <init>(com.android.photos.views.TiledImageView)>(r0);

        r0.<com.android.photos.views.TiledImageView: java.lang.Runnable mFreeTextures> = $r6;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF> = $r7;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r8 = new com.android.photos.views.TiledImageView$ImageRendererWrapper;

        specialinvoke $r8.<com.android.photos.views.TiledImageView$ImageRendererWrapper: void <init>(com.android.photos.views.TiledImageView$1)>(null);

        r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer> = $r8;

        $r10 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r9 = new com.android.photos.views.TiledImageRenderer;

        specialinvoke $r9.<com.android.photos.views.TiledImageRenderer: void <init>(android.view.View)>(r0);

        $r10.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer image> = $r9;

        $r11 = new android.opengl.GLSurfaceView;

        specialinvoke $r11.<android.opengl.GLSurfaceView: void <init>(android.content.Context)>(r1);

        r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView> = $r11;

        $r12 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        virtualinvoke $r12.<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>(2);

        $r14 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        $r13 = new com.android.photos.views.TiledImageView$TileRenderer;

        specialinvoke $r13.<com.android.photos.views.TiledImageView$TileRenderer: void <init>(com.android.photos.views.TiledImageView,com.android.photos.views.TiledImageView$1)>(r0, null);

        virtualinvoke $r14.<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView$Renderer)>($r13);

        $r16 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        virtualinvoke $r16.<android.opengl.GLSurfaceView: void setRenderMode(int)>(0);

        r3 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        $r15 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r15.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r0.<com.android.photos.views.TiledImageView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r3, $r15);

        return;
    }

    public void destroy()
    {
        com.android.photos.views.TiledImageView r0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.opengl.GLSurfaceView $r2;

        r0 := @this: com.android.photos.views.TiledImageView;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        $r1 = r0.<com.android.photos.views.TiledImageView: java.lang.Runnable mFreeTextures>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>($r1);

        return;
    }

    public void onPause()
    {
        com.android.photos.views.TiledImageView r0;
        boolean $z0;
        android.opengl.GLSurfaceView $r1;

        r0 := @this: com.android.photos.views.TiledImageView;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView: void onPause()>();

        return;
    }

    public void onResume()
    {
        com.android.photos.views.TiledImageView r0;
        boolean $z0;
        android.opengl.GLSurfaceView $r1;

        r0 := @this: com.android.photos.views.TiledImageView;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView: void onResume()>();

        return;
    }

    public void setTileSource(com.android.photos.views.TiledImageRenderer$TileSource, java.lang.Runnable)
    {
        com.android.photos.views.TiledImageView r0;
        com.android.photos.views.TiledImageRenderer$TileSource r1;
        java.lang.Runnable r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r13;
        boolean $z0;
        com.android.photos.views.TiledImageView$ImageRendererWrapper $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.photos.views.TiledImageView;

        r1 := @parameter0: com.android.photos.views.TiledImageRenderer$TileSource;

        r2 := @parameter1: java.lang.Runnable;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<com.android.photos.views.TiledImageView: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label02:
        $r6 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r6.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source> = r1;

        $r7 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r7.<com.android.photos.views.TiledImageView$ImageRendererWrapper: java.lang.Runnable isReadyCallback> = r2;

        $r8 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        if r1 == null goto label03;

        $i4 = interfaceinvoke r1.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageWidth()>();

        $i3 = $i4 / 2;

        goto label04;

     label03:
        $i3 = 0;

     label04:
        $r8.<com.android.photos.views.TiledImageView$ImageRendererWrapper: int centerX> = $i3;

        $r9 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        if r1 == null goto label05;

        $i2 = interfaceinvoke r1.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageHeight()>();

        $i1 = $i2 / 2;

        goto label06;

     label05:
        $i1 = 0;

     label06:
        $r9.<com.android.photos.views.TiledImageView$ImageRendererWrapper: int centerY> = $i1;

        $r10 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        if r1 == null goto label07;

        $i0 = interfaceinvoke r1.<com.android.photos.views.TiledImageRenderer$TileSource: int getRotation()>();

        goto label08;

     label07:
        $i0 = 0;

     label08:
        $r10.<com.android.photos.views.TiledImageView$ImageRendererWrapper: int rotation> = $i0;

        $r11 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r11.<com.android.photos.views.TiledImageView$ImageRendererWrapper: float scale> = 0.0F;

        $r12 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        specialinvoke r0.<com.android.photos.views.TiledImageView: void updateScaleIfNecessaryLocked(com.android.photos.views.TiledImageView$ImageRendererWrapper)>($r12);

        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        virtualinvoke r0.<com.android.photos.views.TiledImageView: void invalidate()>();

        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.photos.views.TiledImageView r0;
        boolean z0, $z1;
        int i0, i1, i2, i3;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.photos.views.TiledImageView$ImageRendererWrapper $r4;

        r0 := @this: com.android.photos.views.TiledImageView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $z1 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.photos.views.TiledImageView: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        specialinvoke r0.<com.android.photos.views.TiledImageView: void updateScaleIfNecessaryLocked(com.android.photos.views.TiledImageView$ImageRendererWrapper)>($r4);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void updateScaleIfNecessaryLocked(com.android.photos.views.TiledImageView$ImageRendererWrapper)
    {
        com.android.photos.views.TiledImageView r0;
        com.android.photos.views.TiledImageView$ImageRendererWrapper r1;
        com.android.photos.views.TiledImageRenderer$TileSource $r2, $r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.photos.views.TiledImageView;

        r1 := @parameter0: com.android.photos.views.TiledImageView$ImageRendererWrapper;

        if r1 == null goto label1;

        $r2 = r1.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        if $r2 == null goto label1;

        $f0 = r1.<com.android.photos.views.TiledImageView$ImageRendererWrapper: float scale>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 > 0 goto label1;

        $i1 = virtualinvoke r0.<com.android.photos.views.TiledImageView: int getWidth()>();

        if $i1 != 0 goto label2;

     label1:
        return;

     label2:
        $i2 = virtualinvoke r0.<com.android.photos.views.TiledImageView: int getWidth()>();

        $f1 = (float) $i2;

        $r3 = r1.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        $i3 = interfaceinvoke $r3.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageWidth()>();

        $f2 = (float) $i3;

        $f3 = $f1 / $f2;

        $i4 = virtualinvoke r0.<com.android.photos.views.TiledImageView: int getHeight()>();

        $f4 = (float) $i4;

        $r4 = r1.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        $i5 = interfaceinvoke $r4.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageHeight()>();

        $f6 = (float) $i5;

        $f5 = $f4 / $f6;

        $f7 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f5);

        r1.<com.android.photos.views.TiledImageView$ImageRendererWrapper: float scale> = $f7;

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        com.android.photos.views.TiledImageView r0;
        android.graphics.Canvas r1;
        boolean $z0;

        r0 := @this: com.android.photos.views.TiledImageView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void dispatchDraw(android.graphics.Canvas)>(r1);

        return;
    }

    public void setTranslationX(float)
    {
        com.android.photos.views.TiledImageView r0;
        float f0;
        boolean $z0;

        r0 := @this: com.android.photos.views.TiledImageView;

        f0 := @parameter0: float;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void setTranslationX(float)>(f0);

        return;
    }

    public void invalidate()
    {
        com.android.photos.views.TiledImageView r0;
        boolean $z0, $z1;
        android.opengl.GLSurfaceView $r1;

        r0 := @this: com.android.photos.views.TiledImageView;

        $z0 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <com.android.photos.views.TiledImageView: boolean USE_CHOREOGRAPHER>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.photos.views.TiledImageView: void invalOnVsync()>();

        goto label3;

     label2:
        $r1 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView: void requestRender()>();

     label3:
        return;
    }

    private void invalOnVsync()
    {
        com.android.photos.views.TiledImageView r0;
        boolean $z0;
        android.view.Choreographer$FrameCallback $r1, $r3;
        android.view.Choreographer $r2;
        com.android.photos.views.TiledImageView$2 $r4;

        r0 := @this: com.android.photos.views.TiledImageView;

        $z0 = r0.<com.android.photos.views.TiledImageView: boolean mInvalPending>;

        if $z0 != 0 goto label2;

        r0.<com.android.photos.views.TiledImageView: boolean mInvalPending> = 1;

        $r1 = r0.<com.android.photos.views.TiledImageView: android.view.Choreographer$FrameCallback mFrameCallback>;

        if $r1 != null goto label1;

        $r4 = new com.android.photos.views.TiledImageView$2;

        specialinvoke $r4.<com.android.photos.views.TiledImageView$2: void <init>(com.android.photos.views.TiledImageView)>(r0);

        r0.<com.android.photos.views.TiledImageView: android.view.Choreographer$FrameCallback mFrameCallback> = $r4;

     label1:
        $r2 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        $r3 = r0.<com.android.photos.views.TiledImageView: android.view.Choreographer$FrameCallback mFrameCallback>;

        virtualinvoke $r2.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>($r3);

     label2:
        return;
    }

    public void positionFromMatrix(android.graphics.Matrix)
    {
        com.android.photos.views.TiledImageView r0;
        android.graphics.Matrix r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        boolean z0, $z1, $z3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36;
        com.android.photos.views.TiledImageView$ImageRendererWrapper $r2, $r4, $r7, $r8, $r18, $r19, $r20, $r25, $r26;
        com.android.photos.views.TiledImageRenderer$TileSource $r3, $r5, $r6, $r9, $r23, $r24;
        android.graphics.RectF $r10, $r11, $r14, $r15, $r16, $r17, $r21, $r22;
        float[] $r12, $r13;

        r0 := @this: com.android.photos.views.TiledImageView;

        r1 := @parameter0: android.graphics.Matrix;

        $z1 = <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED>;

        if $z1 != 0 goto label01;

        return;

     label01:
        $r2 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r3 = $r2.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        if $r3 == null goto label18;

        $r4 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r5 = $r4.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        i0 = interfaceinvoke $r5.<com.android.photos.views.TiledImageRenderer$TileSource: int getRotation()>();

        $i7 = i0 % 180;

        if $i7 == 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z0 = $z3;

        if z0 == 0 goto label04;

        $r26 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r23 = $r26.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        $i8 = interfaceinvoke $r23.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageHeight()>();

        goto label05;

     label04:
        $r7 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r6 = $r7.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        $i8 = interfaceinvoke $r6.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageWidth()>();

     label05:
        i1 = $i8;

        if z0 == 0 goto label06;

        $r25 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r24 = $r25.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        $i9 = interfaceinvoke $r24.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageWidth()>();

        goto label07;

     label06:
        $r8 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r9 = $r8.<com.android.photos.views.TiledImageView$ImageRendererWrapper: com.android.photos.views.TiledImageRenderer$TileSource source>;

        $i9 = interfaceinvoke $r9.<com.android.photos.views.TiledImageRenderer$TileSource: int getImageHeight()>();

     label07:
        i2 = $i9;

        $r11 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f1 = (float) i1;

        $f2 = (float) i2;

        virtualinvoke $r11.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f2);

        $r10 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        virtualinvoke r1.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r10);

        $r12 = r0.<com.android.photos.views.TiledImageView: float[] mValues>;

        virtualinvoke r1.<android.graphics.Matrix: void getValues(float[])>($r12);

        i3 = i1 / 2;

        i4 = i2 / 2;

        $r13 = r0.<com.android.photos.views.TiledImageView: float[] mValues>;

        f0 = $r13[0];

        $i10 = virtualinvoke r0.<com.android.photos.views.TiledImageView: int getWidth()>();

        $f5 = (float) $i10;

        $r14 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f3 = virtualinvoke $r14.<android.graphics.RectF: float width()>();

        $f4 = $f5 - $f3;

        $f6 = $f4 / 2.0F;

        $f7 = $f6 / f0;

        i5 = staticinvoke <java.lang.Math: int round(float)>($f7);

        $i11 = virtualinvoke r0.<com.android.photos.views.TiledImageView: int getHeight()>();

        $f10 = (float) $i11;

        $r15 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f8 = virtualinvoke $r15.<android.graphics.RectF: float height()>();

        $f9 = $f10 - $f8;

        $f11 = $f9 / 2.0F;

        $f12 = $f11 / f0;

        i6 = staticinvoke <java.lang.Math: int round(float)>($f12);

        if i0 == 90 goto label08;

        if i0 != 180 goto label09;

     label08:
        $f19 = (float) i3;

        $r16 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f16 = $r16.<android.graphics.RectF: float left>;

        $f14 = $f16 / f0;

        $f15 = (float) i5;

        $f13 = $f14 - $f15;

        $f18 = $f19 + $f13;

        i14 = (int) $f18;

        goto label10;

     label09:
        $f32 = (float) i3;

        $r22 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f35 = $r22.<android.graphics.RectF: float left>;

        $f30 = $f35 / f0;

        $f36 = (float) i5;

        $f31 = $f30 - $f36;

        $f33 = $f32 - $f31;

        i14 = (int) $f33;

     label10:
        if i0 == 180 goto label11;

        if i0 != 270 goto label12;

     label11:
        $f20 = (float) i4;

        $r17 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f17 = $r17.<android.graphics.RectF: float top>;

        $f22 = $f17 / f0;

        $f23 = (float) i6;

        $f21 = $f22 - $f23;

        $f24 = $f20 + $f21;

        i15 = (int) $f24;

        goto label13;

     label12:
        $f28 = (float) i4;

        $r21 = r0.<com.android.photos.views.TiledImageView: android.graphics.RectF mTempRectF>;

        $f29 = $r21.<android.graphics.RectF: float top>;

        $f26 = $f29 / f0;

        $f25 = (float) i6;

        $f27 = $f26 - $f25;

        $f34 = $f28 - $f27;

        i15 = (int) $f34;

     label13:
        $r20 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        $r20.<com.android.photos.views.TiledImageView$ImageRendererWrapper: float scale> = f0;

        $r19 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        if z0 == 0 goto label14;

        $i13 = i15;

        goto label15;

     label14:
        $i13 = i14;

     label15:
        $r19.<com.android.photos.views.TiledImageView$ImageRendererWrapper: int centerX> = $i13;

        $r18 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        if z0 == 0 goto label16;

        $i12 = i14;

        goto label17;

     label16:
        $i12 = i15;

     label17:
        $r18.<com.android.photos.views.TiledImageView$ImageRendererWrapper: int centerY> = $i12;

        virtualinvoke r0.<com.android.photos.views.TiledImageView: void invalidate()>();

     label18:
        return;
    }

    static com.android.photos.views.TiledImageView$ImageRendererWrapper access$200(com.android.photos.views.TiledImageView)
    {
        com.android.photos.views.TiledImageView r0;
        com.android.photos.views.TiledImageView$ImageRendererWrapper $r1;

        r0 := @parameter0: com.android.photos.views.TiledImageView;

        $r1 = r0.<com.android.photos.views.TiledImageView: com.android.photos.views.TiledImageView$ImageRendererWrapper mRenderer>;

        return $r1;
    }

    static boolean access$302(com.android.photos.views.TiledImageView, boolean)
    {
        com.android.photos.views.TiledImageView r0;
        boolean z0;

        r0 := @parameter0: com.android.photos.views.TiledImageView;

        z0 := @parameter1: boolean;

        r0.<com.android.photos.views.TiledImageView: boolean mInvalPending> = z0;

        return z0;
    }

    static android.opengl.GLSurfaceView access$400(com.android.photos.views.TiledImageView)
    {
        com.android.photos.views.TiledImageView r0;
        android.opengl.GLSurfaceView $r1;

        r0 := @parameter0: com.android.photos.views.TiledImageView;

        $r1 = r0.<com.android.photos.views.TiledImageView: android.opengl.GLSurfaceView mGLSurfaceView>;

        return $r1;
    }

    static java.lang.Object access$500(com.android.photos.views.TiledImageView)
    {
        com.android.photos.views.TiledImageView r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.photos.views.TiledImageView;

        $r1 = r0.<com.android.photos.views.TiledImageView: java.lang.Object mLock>;

        return $r1;
    }

    static void <clinit>()
    {
        int $i0, $i1;
        boolean $z0, $z1;

        <com.android.photos.views.TiledImageView: boolean USE_TEXTURE_VIEW> = 0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.photos.views.TiledImageView: boolean IS_SUPPORTED> = $z1;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        <com.android.photos.views.TiledImageView: boolean USE_CHOREOGRAPHER> = $z0;

        return;
    }
}
