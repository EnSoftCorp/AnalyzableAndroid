public class com.adobe.xmp.impl.Latin1Converter extends java.lang.Object
{
    private static final int STATE_START;
    private static final int STATE_UTF8CHAR;

    private void <init>()
    {
        com.adobe.xmp.impl.Latin1Converter r0;

        r0 := @this: com.adobe.xmp.impl.Latin1Converter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.adobe.xmp.impl.ByteBuffer convert(com.adobe.xmp.impl.ByteBuffer)
    {
        com.adobe.xmp.impl.ByteBuffer r0, r2, $r5;
        byte[] r1, r6, r7, r8;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i9, $i11, $i13, $i16, $i18, i19;
        byte b2, $b10, $b12, $b14, $b15, $b17, b20;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @parameter0: com.adobe.xmp.impl.ByteBuffer;

        $r3 = "UTF-8";

        $r4 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: java.lang.String getEncoding()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label13;

        r1 = newarray (byte)[8];

        i0 = 0;

        i1 = 0;

        $r5 = new com.adobe.xmp.impl.ByteBuffer;

        $i6 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: int length()>();

        $i7 = $i6 * 4;

        $i8 = $i7 / 3;

        specialinvoke $r5.<com.adobe.xmp.impl.ByteBuffer: void <init>(int)>($i8);

        r2 = $r5;

        b2 = 0;

        i3 = 0;

     label01:
        $i9 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: int length()>();

        if i3 >= $i9 goto label10;

        i4 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: int charAt(int)>(i3);

        lookupswitch(b2)
        {
            case 0: goto label02;
            case 11: goto label07;
            default: goto label02;
        };

     label02:
        if i4 >= 127 goto label03;

        $b17 = (byte) i4;

        virtualinvoke r2.<com.adobe.xmp.impl.ByteBuffer: void append(byte)>($b17);

        goto label09;

     label03:
        if i4 < 192 goto label06;

        i1 = -1;

        i5 = i4;

     label04:
        if i1 >= 8 goto label05;

        $i18 = i5 & 128;

        if $i18 != 128 goto label05;

        i1 = i1 + 1;

        i5 = i5 << 1;

        goto label04;

     label05:
        $i16 = i0;

        i0 = i0 + 1;

        $b15 = (byte) i4;

        r1[$i16] = $b15;

        b2 = 11;

        goto label09;

     label06:
        $b14 = (byte) i4;

        r6 = staticinvoke <com.adobe.xmp.impl.Latin1Converter: byte[] convertToUTF8(byte)>($b14);

        virtualinvoke r2.<com.adobe.xmp.impl.ByteBuffer: void append(byte[])>(r6);

        goto label09;

     label07:
        if i1 <= 0 goto label08;

        $i11 = i4 & 192;

        if $i11 != 128 goto label08;

        $i13 = i0;

        i0 = i0 + 1;

        $b12 = (byte) i4;

        r1[$i13] = $b12;

        i1 = i1 + -1;

        if i1 != 0 goto label09;

        virtualinvoke r2.<com.adobe.xmp.impl.ByteBuffer: void append(byte[],int,int)>(r1, 0, i0);

        i0 = 0;

        b2 = 0;

        goto label09;

     label08:
        $b10 = r1[0];

        r7 = staticinvoke <com.adobe.xmp.impl.Latin1Converter: byte[] convertToUTF8(byte)>($b10);

        virtualinvoke r2.<com.adobe.xmp.impl.ByteBuffer: void append(byte[])>(r7);

        i3 = i3 - i0;

        i0 = 0;

        b2 = 0;

     label09:
        i3 = i3 + 1;

        goto label01;

     label10:
        if b2 != 11 goto label12;

        i19 = 0;

     label11:
        if i19 >= i0 goto label12;

        b20 = r1[i19];

        r8 = staticinvoke <com.adobe.xmp.impl.Latin1Converter: byte[] convertToUTF8(byte)>(b20);

        virtualinvoke r2.<com.adobe.xmp.impl.ByteBuffer: void append(byte[])>(r8);

        i19 = i19 + 1;

        goto label11;

     label12:
        return r2;

     label13:
        return r0;
    }

    private static byte[] convertToUTF8(byte)
    {
        byte b0;
        short s1;
        byte[] $r1, $r2, $r4, $r5;
        java.lang.String $r3;
        java.io.UnsupportedEncodingException $r6;

        b0 := @parameter0: byte;

        s1 = b0 & 255;

     label1:
        if s1 < 128 goto label6;

        if s1 == 129 goto label2;

        if s1 == 141 goto label2;

        if s1 == 143 goto label2;

        if s1 == 144 goto label2;

        if s1 != 157 goto label4;

     label2:
        $r2 = newarray (byte)[1];

        $r2[0] = 32;

     label3:
        return $r2;

     label4:
        $r3 = new java.lang.String;

        $r4 = newarray (byte)[1];

        $r4[0] = b0;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "cp1252");

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label5:
        return $r5;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

     label8:
        $r1 = newarray (byte)[1];

        $r1[0] = b0;

        return $r1;

        catch java.io.UnsupportedEncodingException from label1 to label3 with label7;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.impl.Latin1Converter: int STATE_UTF8CHAR> = 11;

        <com.adobe.xmp.impl.Latin1Converter: int STATE_START> = 0;

        return;
    }
}
