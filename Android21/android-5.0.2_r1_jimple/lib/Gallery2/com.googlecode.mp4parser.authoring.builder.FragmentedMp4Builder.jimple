public class com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder extends java.lang.Object implements com.googlecode.mp4parser.authoring.builder.Mp4Builder
{
    private static final java.util.logging.Logger LOG;
    protected com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder;

    public void <init>()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        specialinvoke $r1.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = $r1;

        return;
    }

    public java.util.List getAllowedHandlers()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "soun";

        $r1[1] = "vide";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public com.coremedia.iso.boxes.Box createFtyp(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        java.util.LinkedList r2, $r3;
        com.coremedia.iso.boxes.FileTypeBox $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r2 = $r3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("isom");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("iso2");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("avc1");

        $r4 = new com.coremedia.iso.boxes.FileTypeBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.FileTypeBox: void <init>(java.lang.String,long,java.util.List)>("isom", 0L, r2);

        return $r4;
    }

    protected java.util.List sortTracksInSequence(java.util.List, int, java.util.Map)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        java.util.List r1;
        int i0;
        java.util.Map r2;
        java.util.LinkedList $r3, r5;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1 $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Map;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);

        r5 = $r3;

        $r4 = new com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1;

        specialinvoke $r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder,java.util.Map,int)>(r0, r2, i0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r4);

        return r5;
    }

    protected java.util.List createMoofMdat(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        java.util.LinkedList r2, $r10;
        java.util.HashMap r3, $r12;
        int i0, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, i13, i14;
        java.util.Iterator r4, r7;
        com.googlecode.mp4parser.authoring.Track r5, r8;
        long[] r6, r9;
        long l1, l2, $l11;
        java.util.List $r11, $r13, $r14, $r17, $r20, r25;
        boolean $z0, $z1, $z2, $z5;
        java.lang.Object $r15, $r16, $r23;
        byte $b6;
        com.coremedia.iso.boxes.Box $r18, $r19;
        java.lang.String $r21;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r22;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r2 = $r10;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r3 = $r12;

        i0 = 0;

        $r11 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r23 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r23;

        $r22 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        r6 = interfaceinvoke $r22.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r5, r1);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        $i12 = lengthof r6;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i12);

        goto label01;

     label02:
        i13 = 1;

        i14 = 0;

     label03:
        if i14 >= i0 goto label10;

        $r13 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r25 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List sortTracksInSequence(java.util.List,int,java.util.Map)>($r13, i14, r3);

        r7 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.googlecode.mp4parser.authoring.Track) $r15;

        $r14 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getAllowedHandlers()>();

        $z2 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label05;

        $r20 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getAllowedHandlers()>();

        $r21 = interfaceinvoke r8.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z5 = interfaceinvoke $r20.<java.util.List: boolean contains(java.lang.Object)>($r21);

        if $z5 == 0 goto label08;

     label05:
        $r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (long[]) $r16;

        $i4 = lengthof r9;

        if i14 >= $i4 goto label08;

        l1 = r9[i14];

        $i5 = i14 + 1;

        $i3 = lengthof r9;

        if $i5 >= $i3 goto label06;

        $i10 = i14 + 1;

        $l11 = r9[$i10];

        goto label07;

     label06:
        $r17 = interfaceinvoke r8.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i7 = interfaceinvoke $r17.<java.util.List: int size()>();

        $i8 = $i7 + 1;

        $l11 = (long) $i8;

     label07:
        l2 = $l11;

        $b6 = l1 cmp l2;

        if $b6 == 0 goto label08;

        $r18 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMoof(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l1, l2, r8, i13);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18);

        $i9 = i13;

        i13 = i13 + 1;

        $r19 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdat(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l1, l2, r8, $i9);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19);

     label08:
        goto label04;

     label09:
        i14 = i14 + 1;

        goto label03;

     label10:
        return r2;
    }

    public com.coremedia.iso.IsoFile build(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.IsoFile r2, $r10;
        java.util.Iterator r3;
        com.coremedia.iso.boxes.Box r4, $r11, $r12, $r15;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.util.logging.Logger $r6;
        java.lang.String $r9;
        java.util.List $r13;
        boolean $z0;
        java.lang.Object $r14;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r6 = <com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.logging.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating movie ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void fine(java.lang.String)>($r9);

        $r10 = new com.coremedia.iso.IsoFile;

        specialinvoke $r10.<com.coremedia.iso.IsoFile: void <init>()>();

        r2 = $r10;

        $r11 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createFtyp(com.googlecode.mp4parser.authoring.Movie)>(r1);

        virtualinvoke r2.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>($r11);

        $r12 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMoov(com.googlecode.mp4parser.authoring.Movie)>(r1);

        virtualinvoke r2.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>($r12);

        $r13 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List createMoofMdat(com.googlecode.mp4parser.authoring.Movie)>(r1);

        r3 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.Box) $r14;

        virtualinvoke r2.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>(r4);

        goto label1;

     label2:
        $r15 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMfra(com.googlecode.mp4parser.authoring.Movie,com.coremedia.iso.IsoFile)>(r1, r2);

        virtualinvoke r2.<com.coremedia.iso.IsoFile: void addBox(com.coremedia.iso.boxes.Box)>($r15);

        return r2;
    }

    protected com.coremedia.iso.boxes.Box createMdat(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r2 = new com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        specialinvoke $r2.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder,long,long,com.googlecode.mp4parser.authoring.Track,int)>(r0, l0, l1, r1, i2);

        return $r2;
    }

    protected com.coremedia.iso.boxes.Box createTfhd(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1, $l3;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r2, $r4;
        com.coremedia.iso.boxes.fragment.SampleFlags r3, $r5;
        com.googlecode.mp4parser.authoring.TrackMetaData $r6;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r4 = new com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void <init>()>();

        r2 = $r4;

        $r5 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r5.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>()>();

        r3 = $r5;

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setDefaultSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)>(r3);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setBaseDataOffset(long)>(-1L);

        $r6 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l3 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setTrackId(long)>($l3);

        return r2;
    }

    protected com.coremedia.iso.boxes.Box createMfhd(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1, $l3;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2;
        com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox r2, $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r3 = new com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox;

        specialinvoke $r3.<com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox: void <init>()>();

        r2 = $r3;

        $l3 = (long) i2;

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox: void setSequenceNumber(long)>($l3);

        return r2;
    }

    protected com.coremedia.iso.boxes.Box createTraf(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox r2, $r5;
        java.util.Iterator r3;
        com.coremedia.iso.boxes.Box r4, $r6;
        java.util.List $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r5 = new com.coremedia.iso.boxes.fragment.TrackFragmentBox;

        specialinvoke $r5.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void <init>()>();

        r2 = $r5;

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTfhd(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List createTruns(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.Box) $r8;

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>(r4);

        goto label1;

     label2:
        return r2;
    }

    protected java.util.List getSamples(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2, $i3, $i4, $i5, $i6;
        java.util.List $r2, $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i3 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l0);

        $i4 = $i3 - 1;

        $i5 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l1);

        $i6 = $i5 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>($i4, $i6);

        return $r3;
    }

    protected long[] getSampleSizes(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1, $l7;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2, i3, $i4, $i5, $i6;
        java.util.List r2;
        long[] r3;
        java.lang.Object $r4;
        java.nio.ByteBuffer $r5;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        r2 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getSamples(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = newarray (long)[$i4];

        i3 = 0;

     label1:
        $i5 = lengthof r3;

        if i3 >= $i5 goto label2;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (java.nio.ByteBuffer) $r4;

        $i6 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        $l7 = (long) $i6;

        r3[i3] = $l7;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r3;
    }

    protected java.util.List createTruns(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1, l3, l4, l5, l7, $l9, $l14, $l15, $l17, $l21, $l25, $l26, $l31, $l38, l39;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2, i6, $i8, $i12, $i18, $i19, $i22, $i23, $i24, $i27, $i28, $i29, $i30, $i32, $i34, $i35, $i36, $i37;
        com.coremedia.iso.boxes.fragment.TrackRunBox r2, $r9;
        long[] r3, $r17, $r31, $r34, $r35, $r39;
        java.util.ArrayList r4, $r11;
        java.util.LinkedList r5, r6, $r13, $r50;
        com.coremedia.iso.boxes.fragment.SampleFlags r7, $r32;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r8, $r21;
        com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry r10;
        java.util.List $r12, $r16, $r18, $r20, $r33, $r37, $r38, $r40, $r48, $r51;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry $r14, $r22, $r28, $r47;
        java.lang.Object $r15, $r19, $r24, $r27, $r29, $r36, $r41, $r43, $r46;
        byte $b10, $b11, $b13, $b16, $b20, $b33;
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry $r23, $r26, $r42, $r45;
        boolean $z1, $z2, $z3, $z4, z5;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r9 = new com.coremedia.iso.boxes.fragment.TrackRunBox;

        specialinvoke $r9.<com.coremedia.iso.boxes.fragment.TrackRunBox: void <init>()>();

        r2 = $r9;

        r3 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long[] getSampleSizes(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleDurationPresent(boolean)>(1);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleSizePresent(boolean)>(1);

        $r11 = new java.util.ArrayList;

        $l9 = l1 - l0;

        $i8 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l9);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i8);

        r4 = $r11;

        $r13 = new java.util.LinkedList;

        $r12 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        specialinvoke $r13.<java.util.LinkedList: void <init>(java.util.Collection)>($r12);

        r5 = $r13;

        l3 = l0 - 1L;

        $r15 = interfaceinvoke r5.<java.util.Queue: java.lang.Object peek()>();

        $r14 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r15;

        l4 = virtualinvoke $r14.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

     label01:
        $b11 = l3 cmp l4;

        if $b11 <= 0 goto label02;

        l3 = l3 - l4;

        interfaceinvoke r5.<java.util.Queue: java.lang.Object remove()>();

        $r46 = interfaceinvoke r5.<java.util.Queue: java.lang.Object peek()>();

        $r47 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r46;

        l4 = virtualinvoke $r47.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        goto label01;

     label02:
        l39 = l4 - l3;

        $r16 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        if $r16 == null goto label03;

        $r51 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        $i37 = interfaceinvoke $r51.<java.util.List: int size()>();

        if $i37 <= 0 goto label03;

        $r50 = new java.util.LinkedList;

        $r48 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        specialinvoke $r50.<java.util.LinkedList: void <init>(java.util.Collection)>($r48);

        goto label04;

     label03:
        $r50 = null;

     label04:
        r6 = $r50;

        if r6 == null goto label05;

        $r41 = interfaceinvoke r6.<java.util.Queue: java.lang.Object peek()>();

        $r42 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r41;

        $i35 = virtualinvoke $r42.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        $l38 = (long) $i35;

        goto label06;

     label05:
        $l38 = -1L;

     label06:
        l5 = $l38;

        $b10 = l5 cmp 0L;

        if $b10 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleCompositionTimeOffsetPresent(boolean)>($z4);

        l7 = 1L;

     label09:
        $b13 = l7 cmp l0;

        if $b13 >= 0 goto label11;

        if r6 == null goto label10;

        $l31 = l5 - 1L;

        l5 = $l31;

        $b33 = $l31 cmp 0L;

        if $b33 != 0 goto label10;

        $i32 = interfaceinvoke r6.<java.util.Queue: int size()>();

        if $i32 <= 1 goto label10;

        interfaceinvoke r6.<java.util.Queue: java.lang.Object remove()>();

        $r43 = interfaceinvoke r6.<java.util.Queue: java.lang.Object element()>();

        $r45 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r43;

        $i36 = virtualinvoke $r45.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        l5 = (long) $i36;

     label10:
        l7 = l7 + 1L;

        goto label09;

     label11:
        $r18 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r18 == null goto label12;

        $r40 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z2 = interfaceinvoke $r40.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label13;

     label12:
        $r17 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r17 == null goto label14;

        $r39 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i34 = lengthof $r39;

        if $i34 == 0 goto label14;

     label13:
        $z3 = 1;

        goto label15;

     label14:
        $z3 = 0;

     label15:
        z5 = $z3;

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleFlagsPresent(boolean)>(z5);

        i6 = 0;

     label16:
        $i12 = lengthof r3;

        if i6 >= $i12 goto label23;

        $r21 = new com.coremedia.iso.boxes.fragment.TrackRunBox$Entry;

        specialinvoke $r21.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void <init>()>();

        r8 = $r21;

        $l14 = r3[i6];

        virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleSize(long)>($l14);

        if z5 == 0 goto label20;

        $r32 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>()>();

        r7 = $r32;

        $r33 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r33 == null goto label17;

        $r37 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z1 = interfaceinvoke $r37.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label17;

        $r38 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $r36 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(i6);

        r10 = (com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry) $r36;

        $i27 = virtualinvoke r10.<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleDependsOn()>();

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>($i27);

        $i28 = virtualinvoke r10.<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleIsDependentOn()>();

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDependedOn(int)>($i28);

        $i29 = virtualinvoke r10.<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleHasRedundancy()>();

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleHasRedundancy(int)>($i29);

     label17:
        $r34 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r34 == null goto label19;

        $r35 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i24 = lengthof $r35;

        if $i24 <= 0 goto label19;

        $r31 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $l25 = (long) i6;

        $l26 = l0 + $l25;

        $i30 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r31, $l26);

        if $i30 < 0 goto label18;

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDifferenceSample(boolean)>(0);

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>(2);

        goto label19;

     label18:
        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDifferenceSample(boolean)>(1);

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>(1);

     label19:
        virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)>(r7);

     label20:
        $r19 = interfaceinvoke r5.<java.util.Queue: java.lang.Object peek()>();

        $r22 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r19;

        $l17 = virtualinvoke $r22.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleDuration(long)>($l17);

        $l15 = l39 - 1L;

        l39 = $l15;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label21;

        $i22 = interfaceinvoke r5.<java.util.Queue: int size()>();

        if $i22 <= 1 goto label21;

        interfaceinvoke r5.<java.util.Queue: java.lang.Object remove()>();

        $r29 = interfaceinvoke r5.<java.util.Queue: java.lang.Object peek()>();

        $r28 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r29;

        l39 = virtualinvoke $r28.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

     label21:
        if r6 == null goto label22;

        $r24 = interfaceinvoke r6.<java.util.Queue: java.lang.Object peek()>();

        $r23 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r24;

        $i18 = virtualinvoke $r23.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>();

        virtualinvoke r8.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleCompositionTimeOffset(int)>($i18);

        $l21 = l5 - 1L;

        l5 = $l21;

        $b20 = $l21 cmp 0L;

        if $b20 != 0 goto label22;

        $i19 = interfaceinvoke r6.<java.util.Queue: int size()>();

        if $i19 <= 1 goto label22;

        interfaceinvoke r6.<java.util.Queue: java.lang.Object remove()>();

        $r27 = interfaceinvoke r6.<java.util.Queue: java.lang.Object element()>();

        $r26 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r27;

        $i23 = virtualinvoke $r26.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        l5 = (long) $i23;

     label22:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8);

        i6 = i6 + 1;

        goto label16;

     label23:
        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setEntries(java.util.List)>(r4);

        $r20 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        return $r20;
    }

    protected com.coremedia.iso.boxes.Box createMoof(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1, $l3, $l5;
        com.googlecode.mp4parser.authoring.Track r1;
        int i2, $i4;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox r2, $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r3;
        com.coremedia.iso.boxes.Box $r5, $r6;
        java.util.List $r7;
        java.lang.Object $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r4 = new com.coremedia.iso.boxes.fragment.MovieFragmentBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: void <init>()>();

        r2 = $r4;

        $r5 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMfhd(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTraf(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        $r7 = virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: java.util.List getTrackRunBoxes()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (com.coremedia.iso.boxes.fragment.TrackRunBox) $r8;

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setDataOffset(int)>(1);

        $l3 = virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: long getSize()>();

        $l5 = 8L + $l3;

        $i4 = (int) $l5;

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setDataOffset(int)>($i4);

        return r2;
    }

    protected com.coremedia.iso.boxes.Box createMvhd(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.boxes.MovieHeaderBox r2, $r6;
        long l0, l1, l2, $l3, $l4, $l5, $l7, $l8, $l9, $l10, $l12, l13;
        java.util.Iterator r3, r16;
        com.googlecode.mp4parser.authoring.Track r4, r5;
        java.util.Date $r7, $r8;
        java.util.List $r9, $r10;
        boolean $z0, $z1;
        com.googlecode.mp4parser.authoring.TrackMetaData $r11, $r13, $r15;
        java.lang.Object $r12, $r14;
        byte $b6, $b11;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r6 = new com.coremedia.iso.boxes.MovieHeaderBox;

        specialinvoke $r6.<com.coremedia.iso.boxes.MovieHeaderBox: void <init>()>();

        r2 = $r6;

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieHeaderBox: void setVersion(int)>(1);

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>()>();

        $l3 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r7);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieHeaderBox: void setCreationTime(long)>($l3);

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>()>();

        $l4 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r8);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieHeaderBox: void setModificationTime(long)>($l4);

        l0 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: long getTimescale()>();

        l1 = 0L;

        $r9 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Track) $r14;

        $l9 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r4);

        $l12 = $l9 * l0;

        $r15 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l10 = virtualinvoke $r15.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l2 = $l12 / $l10;

        $b11 = l2 cmp l1;

        if $b11 <= 0 goto label2;

        l1 = l2;

     label2:
        goto label1;

     label3:
        virtualinvoke r2.<com.coremedia.iso.boxes.MovieHeaderBox: void setDuration(long)>(l1);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieHeaderBox: void setTimescale(long)>(l0);

        l13 = 0L;

        $r10 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r16 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r12 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r12;

        $r11 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l7 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b6 = l13 cmp $l7;

        if $b6 >= 0 goto label5;

        $r13 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l8 = virtualinvoke $r13.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        goto label6;

     label5:
        $l8 = l13;

     label6:
        l13 = $l8;

        goto label4;

     label7:
        $l5 = l13 + 1L;

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieHeaderBox: void setNextTrackId(long)>($l5);

        return r2;
    }

    protected com.coremedia.iso.boxes.Box createMoov(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.boxes.MovieBox r2, $r5;
        java.util.Iterator r3;
        com.googlecode.mp4parser.authoring.Track r4;
        com.coremedia.iso.boxes.Box $r6, $r7, $r10;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r5 = new com.coremedia.iso.boxes.MovieBox;

        specialinvoke $r5.<com.coremedia.iso.boxes.MovieBox: void <init>()>();

        r2 = $r5;

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMvhd(com.googlecode.mp4parser.authoring.Movie)>(r1);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMvex(com.googlecode.mp4parser.authoring.Movie)>(r1);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r7);

        $r8 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Track) $r9;

        $r10 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTrak(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r4, r1);

        virtualinvoke r2.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r10);

        goto label1;

     label2:
        return r2;
    }

    protected com.coremedia.iso.boxes.Box createTfra(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.IsoFile)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.IsoFile r2;
        com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox r3, $r22;
        java.util.LinkedList r4, r11, $r21, $r31;
        java.util.List r5, r8, r10, r16, r17, $r29, $r32, $r34, $r36;
        long l0, l1, $l5, $l6, $l7, $l10, $l17, $l19, $l22, $l23, $l24, $l26;
        java.util.Iterator r6, r15, r20;
        com.coremedia.iso.boxes.Box r7;
        int i2, i3, i4, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i20, $i21;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox r9;
        com.coremedia.iso.boxes.fragment.TrackRunBox r12;
        com.coremedia.iso.boxes.fragment.SampleFlags r13;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r14;
        com.coremedia.iso.boxes.fragment.MovieExtendsBox r18;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox r19;
        java.lang.Object $r23, $r27, $r30, $r33, $r35, $r40, $r42;
        boolean $z0, $z1, $z3, $z5, $z7, $z8;
        com.googlecode.mp4parser.authoring.TrackMetaData $r24, $r28, $r41;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox $r25;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox $r26;
        byte $b9, $b25;
        com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry $r37;
        com.coremedia.iso.boxes.MovieBox $r38;
        java.lang.RuntimeException $r39;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.IsoFile;

        $r22 = new com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox;

        specialinvoke $r22.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void <init>()>();

        r3 = $r22;

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void setVersion(int)>(1);

        $r21 = new java.util.LinkedList;

        specialinvoke $r21.<java.util.LinkedList: void <init>()>();

        r4 = $r21;

        r5 = virtualinvoke r2.<com.coremedia.iso.IsoFile: java.util.List getBoxes()>();

        l0 = 0L;

        l1 = 0L;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.coremedia.iso.boxes.Box) $r23;

        $z1 = r7 instanceof com.coremedia.iso.boxes.fragment.MovieFragmentBox;

        if $z1 == 0 goto label18;

        $r25 = (com.coremedia.iso.boxes.fragment.MovieFragmentBox) r7;

        r8 = virtualinvoke $r25.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/TrackFragmentBox");

        i2 = 0;

     label02:
        $i8 = interfaceinvoke r8.<java.util.List: int size()>();

        if i2 >= $i8 goto label18;

        $r27 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i2);

        r9 = (com.coremedia.iso.boxes.fragment.TrackFragmentBox) $r27;

        $r26 = virtualinvoke r9.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        $l7 = virtualinvoke $r26.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>();

        $r28 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l10 = virtualinvoke $r28.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b9 = $l7 cmp $l10;

        if $b9 != 0 goto label17;

        r10 = virtualinvoke r9.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/TrackRunBox");

        i3 = 0;

     label03:
        $i11 = interfaceinvoke r10.<java.util.List: int size()>();

        if i3 >= $i11 goto label17;

        $r31 = new java.util.LinkedList;

        specialinvoke $r31.<java.util.LinkedList: void <init>()>();

        r11 = $r31;

        $r30 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i3);

        r12 = (com.coremedia.iso.boxes.fragment.TrackRunBox) $r30;

        i4 = 0;

     label04:
        $r29 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $i14 = interfaceinvoke $r29.<java.util.List: int size()>();

        if i4 >= $i14 goto label14;

        $r36 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $r35 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(i4);

        r14 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r35;

        r13 = null;

        if i4 != 0 goto label05;

        $z8 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isFirstSampleFlagsPresent()>();

        if $z8 == 0 goto label05;

        r13 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags getFirstSampleFlags()>();

        goto label11;

     label05:
        $z3 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleFlagsPresent()>();

        if $z3 == 0 goto label06;

        r13 = virtualinvoke r14.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: com.coremedia.iso.boxes.fragment.SampleFlags getSampleFlags()>();

        goto label11;

     label06:
        $r38 = virtualinvoke r2.<com.coremedia.iso.IsoFile: com.coremedia.iso.boxes.MovieBox getMovieBox()>();

        r16 = virtualinvoke $r38.<com.coremedia.iso.boxes.MovieBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/MovieExtendsBox");

        r15 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r40 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.coremedia.iso.boxes.fragment.MovieExtendsBox) $r40;

        r17 = virtualinvoke r18.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/fragment/TrackExtendsBox");

        r20 = interfaceinvoke r17.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z7 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        $r42 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.coremedia.iso.boxes.fragment.TrackExtendsBox) $r42;

        $l24 = virtualinvoke r19.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getTrackId()>();

        $r41 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l26 = virtualinvoke $r41.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b25 = $l24 cmp $l26;

        if $b25 != 0 goto label09;

        r13 = virtualinvoke r19.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: com.coremedia.iso.boxes.fragment.SampleFlags getDefaultSampleFlags()>();

     label09:
        goto label08;

     label10:
        goto label07;

     label11:
        if r13 != null goto label12;

        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find any SampleFlags to indicate random access or not");

        throw $r39;

     label12:
        $i16 = virtualinvoke r13.<com.coremedia.iso.boxes.fragment.SampleFlags: int getSampleDependsOn()>();

        if $i16 != 2 goto label13;

        $r37 = new com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry;

        $i18 = i2 + 1;

        $l19 = (long) $i18;

        $i20 = i3 + 1;

        $l23 = (long) $i20;

        $i21 = i4 + 1;

        $l22 = (long) $i21;

        specialinvoke $r37.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry: void <init>(long,long,long,long,long)>(l1, l0, $l19, $l23, $l22);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r37);

     label13:
        $l17 = virtualinvoke r14.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long getSampleDuration()>();

        l1 = l1 + $l17;

        i4 = i4 + 1;

        goto label04;

     label14:
        $i13 = interfaceinvoke r11.<java.util.List: int size()>();

        $r32 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $i12 = interfaceinvoke $r32.<java.util.List: int size()>();

        if $i13 != $i12 goto label15;

        $r34 = virtualinvoke r12.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $i15 = interfaceinvoke $r34.<java.util.List: int size()>();

        if $i15 <= 0 goto label15;

        $r33 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label16;

     label15:
        interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>(r11);

     label16:
        i3 = i3 + 1;

        goto label03;

     label17:
        i2 = i2 + 1;

        goto label02;

     label18:
        $l6 = interfaceinvoke r7.<com.coremedia.iso.boxes.Box: long getSize()>();

        l0 = l0 + $l6;

        goto label01;

     label19:
        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void setEntries(java.util.List)>(r4);

        $r24 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l5 = virtualinvoke $r24.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void setTrackId(long)>($l5);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createMfra(com.googlecode.mp4parser.authoring.Movie, com.coremedia.iso.IsoFile)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.IsoFile r2;
        com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox r3, $r6;
        java.util.Iterator r4;
        com.googlecode.mp4parser.authoring.Track r5;
        java.util.List $r7;
        boolean $z0;
        com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox $r8, r11;
        long $l0;
        java.lang.Object $r9;
        com.coremedia.iso.boxes.Box $r10;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.coremedia.iso.IsoFile;

        $r6 = new com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox;

        specialinvoke $r6.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: void <init>()>();

        r3 = $r6;

        $r7 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r9;

        $r10 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTfra(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.IsoFile)>(r5, r2);

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: void addBox(com.coremedia.iso.boxes.Box)>($r10);

        goto label1;

     label2:
        $r8 = new com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox;

        specialinvoke $r8.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox: void <init>()>();

        r11 = $r8;

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: void addBox(com.coremedia.iso.boxes.Box)>(r11);

        $l0 = virtualinvoke r3.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: long getSize()>();

        virtualinvoke r11.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox: void setMfraSize(long)>($l0);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createTrex(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox r3, $r5;
        com.coremedia.iso.boxes.fragment.SampleFlags r4, $r7;
        com.googlecode.mp4parser.authoring.TrackMetaData $r6;
        long $l0;
        java.lang.String $r8, $r9;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r5 = new com.coremedia.iso.boxes.fragment.TrackExtendsBox;

        specialinvoke $r5.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void <init>()>();

        r3 = $r5;

        $r6 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setTrackId(long)>($l0);

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleDescriptionIndex(long)>(1L);

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleDuration(long)>(0L);

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleSize(long)>(0L);

        $r7 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>()>();

        r4 = $r7;

        $r8 = "soun";

        $r9 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>(2);

        virtualinvoke r4.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDependedOn(int)>(2);

     label1:
        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)>(r4);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createMvex(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.boxes.fragment.MovieExtendsBox r2, $r6;
        com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox r3, $r7;
        java.util.Iterator r4, r13;
        com.googlecode.mp4parser.authoring.Track r5, r14;
        long l0, $l2;
        java.util.List $r8, $r9;
        boolean $z0, $z1;
        com.coremedia.iso.boxes.Box $r10;
        java.lang.Object $r11, $r12;
        byte $b1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r6 = new com.coremedia.iso.boxes.fragment.MovieExtendsBox;

        specialinvoke $r6.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: void <init>()>();

        r2 = $r6;

        $r7 = new com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox;

        specialinvoke $r7.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: void <init>()>();

        r3 = $r7;

        $r8 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r12;

        l0 = specialinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long getTrackDuration(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r1, r5);

        $l2 = virtualinvoke r3.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: long getFragmentDuration()>();

        $b1 = $l2 cmp l0;

        if $b1 >= 0 goto label2;

        virtualinvoke r3.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: void setFragmentDuration(long)>(l0);

     label2:
        goto label1;

     label3:
        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: void addBox(com.coremedia.iso.boxes.Box)>(r3);

        $r9 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r13 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.googlecode.mp4parser.authoring.Track) $r11;

        $r10 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTrex(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r1, r14);

        virtualinvoke r2.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: void addBox(com.coremedia.iso.boxes.Box)>($r10);

        goto label4;

     label5:
        return r2;
    }

    protected com.coremedia.iso.boxes.Box createTkhd(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.TrackHeaderBox r3, $r4;
        int i0, $i1, $i4;
        boolean $z0, $z1, $z2, $z3;
        com.googlecode.mp4parser.authoring.TrackMetaData $r5, $r6, $r8, $r9, $r10, $r12, $r13;
        java.util.Date $r7, $r11;
        long $l2, $l3, $l5, $l6;
        double $d0, $d1;
        float $f0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r4 = new com.coremedia.iso.boxes.TrackHeaderBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.TrackHeaderBox: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setVersion(int)>(1);

        i0 = 0;

        $z0 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        i0 = i0 + 1;

     label1:
        $z1 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: boolean isInMovie()>();

        if $z1 == 0 goto label2;

        i0 = i0 + 2;

     label2:
        $z2 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: boolean isInPreview()>();

        if $z2 == 0 goto label3;

        i0 = i0 + 4;

     label3:
        $z3 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: boolean isInPoster()>();

        if $z3 == 0 goto label4;

        i0 = i0 + 8;

     label4:
        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setFlags(int)>(i0);

        $r5 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i1 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: int getGroup()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setAlternateGroup(int)>($i1);

        $r6 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r7 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        $l2 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r7);

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setCreationTime(long)>($l2);

        $l3 = specialinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long getTrackDuration(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r1, r2);

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setDuration(long)>($l3);

        $r8 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d0 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: double getHeight()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setHeight(double)>($d0);

        $r9 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d1 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.TrackMetaData: double getWidth()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setWidth(double)>($d1);

        $r10 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i4 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: int getLayer()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setLayer(int)>($i4);

        $r11 = new java.util.Date;

        specialinvoke $r11.<java.util.Date: void <init>()>();

        $l5 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r11);

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setModificationTime(long)>($l5);

        $r12 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l6 = virtualinvoke $r12.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setTrackId(long)>($l6);

        $r13 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $f0 = virtualinvoke $r13.<com.googlecode.mp4parser.authoring.TrackMetaData: float getVolume()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackHeaderBox: void setVolume(float)>($f0);

        return r3;
    }

    private long getTrackDuration(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.Track r2;
        long $l0, $l1, $l2, $l3, $l4;
        com.googlecode.mp4parser.authoring.TrackMetaData $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r2);

        $l1 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: long getTimescale()>();

        $l2 = $l0 * $l1;

        $r3 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l3 = virtualinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $l4 = $l2 / $l3;

        return $l4;
    }

    protected com.coremedia.iso.boxes.Box createMdhd(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.MediaHeaderBox r3, $r4;
        com.googlecode.mp4parser.authoring.TrackMetaData $r5, $r7, $r8;
        java.util.Date $r6;
        long $l0, $l1, $l2;
        java.lang.String $r9;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r4 = new com.coremedia.iso.boxes.MediaHeaderBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.MediaHeaderBox: void <init>()>();

        r3 = $r4;

        $r5 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r6 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        $l0 = staticinvoke <com.googlecode.mp4parser.authoring.DateHelper: long convert(java.util.Date)>($r6);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaHeaderBox: void setCreationTime(long)>($l0);

        $l1 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r2);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaHeaderBox: void setDuration(long)>($l1);

        $r7 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l2 = virtualinvoke $r7.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaHeaderBox: void setTimescale(long)>($l2);

        $r8 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r9 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.String getLanguage()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaHeaderBox: void setLanguage(java.lang.String)>($r9);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createStbl(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.SampleTableBox r3, $r4;
        com.coremedia.iso.boxes.SampleDescriptionBox $r5;
        com.coremedia.iso.boxes.TimeToSampleBox $r6;
        com.coremedia.iso.boxes.StaticChunkOffsetBox $r7;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r4 = new com.coremedia.iso.boxes.SampleTableBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.SampleTableBox: void <init>()>();

        r3 = $r4;

        $r5 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = new com.coremedia.iso.boxes.TimeToSampleBox;

        specialinvoke $r6.<com.coremedia.iso.boxes.TimeToSampleBox: void <init>()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        $r7 = new com.coremedia.iso.boxes.StaticChunkOffsetBox;

        specialinvoke $r7.<com.coremedia.iso.boxes.StaticChunkOffsetBox: void <init>()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r7);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createMinf(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.coremedia.iso.boxes.MediaInformationBox r3, $r4;
        com.coremedia.iso.boxes.Box $r5, $r7;
        com.coremedia.iso.boxes.DataInformationBox $r6;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r4 = new com.coremedia.iso.boxes.MediaInformationBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.MediaInformationBox: void <init>()>();

        r3 = $r4;

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.DataInformationBox createDinf(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createStbl(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r7);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createMdiaHdlr(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.coremedia.iso.boxes.HandlerBox r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r4 = new com.coremedia.iso.boxes.HandlerBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.HandlerBox: void <init>()>();

        r3 = $r4;

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        virtualinvoke r3.<com.coremedia.iso.boxes.HandlerBox: void setHandlerType(java.lang.String)>($r5);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createMdia(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.coremedia.iso.boxes.MediaBox r3, $r4;
        com.coremedia.iso.boxes.Box $r5, $r6, $r7;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r4 = new com.coremedia.iso.boxes.MediaBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.MediaBox: void <init>()>();

        r3 = $r4;

        $r5 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdhd(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdiaHdlr(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMinf(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        virtualinvoke r3.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r7);

        return r3;
    }

    protected com.coremedia.iso.boxes.Box createTrak(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.coremedia.iso.boxes.TrackBox r3, $r9;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.util.logging.Logger $r5;
        java.lang.String $r8;
        com.coremedia.iso.boxes.Box $r10, $r11;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r5 = <com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.logging.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Track ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void fine(java.lang.String)>($r8);

        $r9 = new com.coremedia.iso.boxes.TrackBox;

        specialinvoke $r9.<com.coremedia.iso.boxes.TrackBox: void <init>()>();

        r3 = $r9;

        $r10 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTkhd(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r10);

        $r11 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdia(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        virtualinvoke r3.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r11);

        return r3;
    }

    protected com.coremedia.iso.boxes.DataInformationBox createDinf(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.DataInformationBox r3, $r6;
        com.coremedia.iso.boxes.DataReferenceBox r4, $r7;
        com.coremedia.iso.boxes.DataEntryUrlBox r5, $r8;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r6 = new com.coremedia.iso.boxes.DataInformationBox;

        specialinvoke $r6.<com.coremedia.iso.boxes.DataInformationBox: void <init>()>();

        r3 = $r6;

        $r7 = new com.coremedia.iso.boxes.DataReferenceBox;

        specialinvoke $r7.<com.coremedia.iso.boxes.DataReferenceBox: void <init>()>();

        r4 = $r7;

        virtualinvoke r3.<com.coremedia.iso.boxes.DataInformationBox: void addBox(com.coremedia.iso.boxes.Box)>(r4);

        $r8 = new com.coremedia.iso.boxes.DataEntryUrlBox;

        specialinvoke $r8.<com.coremedia.iso.boxes.DataEntryUrlBox: void <init>()>();

        r5 = $r8;

        virtualinvoke r5.<com.coremedia.iso.boxes.DataEntryUrlBox: void setFlags(int)>(1);

        virtualinvoke r4.<com.coremedia.iso.boxes.DataReferenceBox: void addBox(com.coremedia.iso.boxes.Box)>(r5);

        return r3;
    }

    public com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder getFragmentIntersectionFinder()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        $r1 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        return $r1;
    }

    public void setIntersectionFinder(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = r1;

        return;
    }

    protected long getDuration(com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.Track r1;
        long l0, $l1, $l2, $l3;
        java.util.Iterator r2;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 = 0L;

        $r4 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r5;

        $l1 = virtualinvoke r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l2 = virtualinvoke r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $l3 = $l1 * $l2;

        l0 = l0 + $l3;

        goto label1;

     label2:
        return l0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/googlecode/mp4parser/authoring/builder/FragmentedMp4Builder";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
