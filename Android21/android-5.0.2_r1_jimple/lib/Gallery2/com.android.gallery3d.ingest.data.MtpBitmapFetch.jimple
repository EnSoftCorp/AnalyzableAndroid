public class com.android.gallery3d.ingest.data.MtpBitmapFetch extends java.lang.Object
{
    private static int sMaxSize;

    public void <init>()
    {
        com.android.gallery3d.ingest.data.MtpBitmapFetch r0;

        r0 := @this: com.android.gallery3d.ingest.data.MtpBitmapFetch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void recycleThumbnail(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        com.android.photos.data.GalleryBitmapPool $r1;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 == null goto label1;

        $r1 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        virtualinvoke $r1.<com.android.photos.data.GalleryBitmapPool: boolean put(android.graphics.Bitmap)>(r0);

     label1:
        return;
    }

    public static android.graphics.Bitmap getThumbnail(android.mtp.MtpDevice, com.android.gallery3d.ingest.data.IngestObjectInfo)
    {
        android.mtp.MtpDevice r0;
        com.android.gallery3d.ingest.data.IngestObjectInfo r1;
        byte[] r2;
        android.graphics.BitmapFactory$Options r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.photos.data.GalleryBitmapPool $r7;
        android.graphics.Bitmap $r8, $r9, $r11;
        java.lang.IllegalArgumentException $r10;

        r0 := @parameter0: android.mtp.MtpDevice;

        r1 := @parameter1: com.android.gallery3d.ingest.data.IngestObjectInfo;

        $i0 = virtualinvoke r1.<com.android.gallery3d.ingest.data.IngestObjectInfo: int getObjectHandle()>();

        r2 = virtualinvoke r0.<android.mtp.MtpDevice: byte[] getThumbnail(int)>($i0);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r5.<android.graphics.BitmapFactory$Options: void <init>()>();

        r3 = $r5;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i1 = lengthof r2;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i1, r3);

        $i2 = r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 == 0 goto label2;

        $i3 = r3.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 != 0 goto label3;

     label2:
        return null;

     label3:
        $r7 = staticinvoke <com.android.photos.data.GalleryBitmapPool: com.android.photos.data.GalleryBitmapPool getInstance()>();

        $i5 = r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i4 = r3.<android.graphics.BitmapFactory$Options: int outHeight>;

        $r8 = virtualinvoke $r7.<com.android.photos.data.GalleryBitmapPool: android.graphics.Bitmap get(int,int)>($i5, $i4);

        r3.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = $r8;

        r3.<android.graphics.BitmapFactory$Options: boolean inMutable> = 1;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

     label4:
        $i6 = lengthof r2;

        $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i6, r3);

     label5:
        return $r9;

     label6:
        $r10 := @caughtexception;

        $i7 = lengthof r2;

        $r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r2, 0, $i7);

        return $r11;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }

    public static com.android.gallery3d.ingest.data.BitmapWithMetadata getFullsize(android.mtp.MtpDevice, com.android.gallery3d.ingest.data.IngestObjectInfo)
    {
        android.mtp.MtpDevice r0;
        com.android.gallery3d.ingest.data.IngestObjectInfo r1;
        int $i0;
        com.android.gallery3d.ingest.data.BitmapWithMetadata $r2;

        r0 := @parameter0: android.mtp.MtpDevice;

        r1 := @parameter1: com.android.gallery3d.ingest.data.IngestObjectInfo;

        $i0 = <com.android.gallery3d.ingest.data.MtpBitmapFetch: int sMaxSize>;

        $r2 = staticinvoke <com.android.gallery3d.ingest.data.MtpBitmapFetch: com.android.gallery3d.ingest.data.BitmapWithMetadata getFullsize(android.mtp.MtpDevice,com.android.gallery3d.ingest.data.IngestObjectInfo,int)>(r0, r1, $i0);

        return $r2;
    }

    public static com.android.gallery3d.ingest.data.BitmapWithMetadata getFullsize(android.mtp.MtpDevice, com.android.gallery3d.ingest.data.IngestObjectInfo, int)
    {
        android.mtp.MtpDevice r0;
        com.android.gallery3d.ingest.data.IngestObjectInfo r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        byte[] r2;
        android.graphics.Bitmap r3;
        android.graphics.BitmapFactory$Options r4, $r5;
        com.android.gallery3d.ingest.data.BitmapWithMetadata $r6;

        r0 := @parameter0: android.mtp.MtpDevice;

        r1 := @parameter1: com.android.gallery3d.ingest.data.IngestObjectInfo;

        i0 := @parameter2: int;

        $i5 = virtualinvoke r1.<com.android.gallery3d.ingest.data.IngestObjectInfo: int getObjectHandle()>();

        $i6 = virtualinvoke r1.<com.android.gallery3d.ingest.data.IngestObjectInfo: int getCompressedSize()>();

        r2 = virtualinvoke r0.<android.mtp.MtpDevice: byte[] getObject(int,int)>($i5, $i6);

        if r2 != null goto label1;

        return null;

     label1:
        if i0 <= 0 goto label4;

        $r5 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r5.<android.graphics.BitmapFactory$Options: void <init>()>();

        r4 = $r5;

        r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i8 = lengthof r2;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i8, r4);

        i1 = r4.<android.graphics.BitmapFactory$Options: int outWidth>;

        i2 = r4.<android.graphics.BitmapFactory$Options: int outHeight>;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i1);

        i4 = 1;

     label2:
        $i9 = i3 >> 1;

        if $i9 < i0 goto label3;

        i3 = i3 >> 1;

        i4 = i4 + 1;

        goto label2;

     label3:
        r4.<android.graphics.BitmapFactory$Options: int inSampleSize> = i4;

        r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $i10 = lengthof r2;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i10, r4);

        goto label5;

     label4:
        $i7 = lengthof r2;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r2, 0, $i7);

     label5:
        if r3 != null goto label6;

        return null;

     label6:
        i11 = staticinvoke <com.android.gallery3d.data.Exif: int getOrientation(byte[])>(r2);

        $r6 = new com.android.gallery3d.ingest.data.BitmapWithMetadata;

        specialinvoke $r6.<com.android.gallery3d.ingest.data.BitmapWithMetadata: void <init>(android.graphics.Bitmap,int)>(r3, i11);

        return $r6;
    }

    public static void configureForContext(android.content.Context)
    {
        android.content.Context r0;
        android.util.DisplayMetrics r1, $r3;
        android.view.WindowManager r2;
        java.lang.Object $r4;
        android.view.Display $r5;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.Context;

        $r3 = new android.util.DisplayMetrics;

        specialinvoke $r3.<android.util.DisplayMetrics: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r2 = (android.view.WindowManager) $r4;

        $r5 = interfaceinvoke r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $i1 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        <com.android.gallery3d.ingest.data.MtpBitmapFetch: int sMaxSize> = $i2;

        return;
    }

    static void <clinit>()
    {
        <com.android.gallery3d.ingest.data.MtpBitmapFetch: int sMaxSize> = 0;

        return;
    }
}
