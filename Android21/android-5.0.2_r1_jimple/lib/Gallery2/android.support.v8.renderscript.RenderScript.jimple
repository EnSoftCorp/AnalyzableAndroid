public class android.support.v8.renderscript.RenderScript extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final boolean DEBUG;
    static final boolean LOG_ENABLED;
    private android.content.Context mApplicationContext;
    static boolean sInitialized;
    static boolean sUseGCHooks;
    static java.lang.Object sRuntime;
    static java.lang.reflect.Method registerNativeAllocation;
    static java.lang.reflect.Method registerNativeFree;
    static java.lang.Object lock;
    static boolean isNative;
    private static int sThunk;
    private static int sSdkVersion;
    private static final java.lang.String CACHE_PATH;
    static java.lang.String mCachePath;
    int mDev;
    int mContext;
    java.util.concurrent.locks.ReentrantReadWriteLock mRWLock;
    android.support.v8.renderscript.RenderScript$MessageThread mMessageThread;
    android.support.v8.renderscript.Element mElement_U8;
    android.support.v8.renderscript.Element mElement_I8;
    android.support.v8.renderscript.Element mElement_U16;
    android.support.v8.renderscript.Element mElement_I16;
    android.support.v8.renderscript.Element mElement_U32;
    android.support.v8.renderscript.Element mElement_I32;
    android.support.v8.renderscript.Element mElement_U64;
    android.support.v8.renderscript.Element mElement_I64;
    android.support.v8.renderscript.Element mElement_F32;
    android.support.v8.renderscript.Element mElement_F64;
    android.support.v8.renderscript.Element mElement_BOOLEAN;
    android.support.v8.renderscript.Element mElement_ELEMENT;
    android.support.v8.renderscript.Element mElement_TYPE;
    android.support.v8.renderscript.Element mElement_ALLOCATION;
    android.support.v8.renderscript.Element mElement_SAMPLER;
    android.support.v8.renderscript.Element mElement_SCRIPT;
    android.support.v8.renderscript.Element mElement_A_8;
    android.support.v8.renderscript.Element mElement_RGB_565;
    android.support.v8.renderscript.Element mElement_RGB_888;
    android.support.v8.renderscript.Element mElement_RGBA_5551;
    android.support.v8.renderscript.Element mElement_RGBA_4444;
    android.support.v8.renderscript.Element mElement_RGBA_8888;
    android.support.v8.renderscript.Element mElement_FLOAT_2;
    android.support.v8.renderscript.Element mElement_FLOAT_3;
    android.support.v8.renderscript.Element mElement_FLOAT_4;
    android.support.v8.renderscript.Element mElement_DOUBLE_2;
    android.support.v8.renderscript.Element mElement_DOUBLE_3;
    android.support.v8.renderscript.Element mElement_DOUBLE_4;
    android.support.v8.renderscript.Element mElement_UCHAR_2;
    android.support.v8.renderscript.Element mElement_UCHAR_3;
    android.support.v8.renderscript.Element mElement_UCHAR_4;
    android.support.v8.renderscript.Element mElement_CHAR_2;
    android.support.v8.renderscript.Element mElement_CHAR_3;
    android.support.v8.renderscript.Element mElement_CHAR_4;
    android.support.v8.renderscript.Element mElement_USHORT_2;
    android.support.v8.renderscript.Element mElement_USHORT_3;
    android.support.v8.renderscript.Element mElement_USHORT_4;
    android.support.v8.renderscript.Element mElement_SHORT_2;
    android.support.v8.renderscript.Element mElement_SHORT_3;
    android.support.v8.renderscript.Element mElement_SHORT_4;
    android.support.v8.renderscript.Element mElement_UINT_2;
    android.support.v8.renderscript.Element mElement_UINT_3;
    android.support.v8.renderscript.Element mElement_UINT_4;
    android.support.v8.renderscript.Element mElement_INT_2;
    android.support.v8.renderscript.Element mElement_INT_3;
    android.support.v8.renderscript.Element mElement_INT_4;
    android.support.v8.renderscript.Element mElement_ULONG_2;
    android.support.v8.renderscript.Element mElement_ULONG_3;
    android.support.v8.renderscript.Element mElement_ULONG_4;
    android.support.v8.renderscript.Element mElement_LONG_2;
    android.support.v8.renderscript.Element mElement_LONG_3;
    android.support.v8.renderscript.Element mElement_LONG_4;
    android.support.v8.renderscript.Element mElement_MATRIX_4X4;
    android.support.v8.renderscript.Element mElement_MATRIX_3X3;
    android.support.v8.renderscript.Element mElement_MATRIX_2X2;
    android.support.v8.renderscript.Sampler mSampler_CLAMP_NEAREST;
    android.support.v8.renderscript.Sampler mSampler_CLAMP_LINEAR;
    android.support.v8.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR;
    android.support.v8.renderscript.Sampler mSampler_WRAP_NEAREST;
    android.support.v8.renderscript.Sampler mSampler_WRAP_LINEAR;
    android.support.v8.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR;
    android.support.v8.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST;
    android.support.v8.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR;
    android.support.v8.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR;
    android.support.v8.renderscript.RenderScript$RSMessageHandler mMessageCallback;
    android.support.v8.renderscript.RenderScript$RSErrorHandler mErrorCallback;

    native int nDeviceCreate();

    native void nDeviceDestroy(int);

    native void nDeviceSetConfig(int, int, int);

    native int nContextGetUserMessage(int, int[]);

    native java.lang.String nContextGetErrorMessage(int);

    native int nContextPeekMessage(int, int[]);

    native void nContextInitToClient(int);

    native void nContextDeinitToClient(int);

    static boolean shouldThunk()
    {
        int $i0, $i1;
        android.support.v8.renderscript.RSRuntimeException $r0;

        $i0 = <android.support.v8.renderscript.RenderScript: int sThunk>;

        if $i0 != -1 goto label1;

        $r0 = new android.support.v8.renderscript.RSRuntimeException;

        specialinvoke $r0.<android.support.v8.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Can\'t use RS classes before setting up a RenderScript context");

        throw $r0;

     label1:
        $i1 = <android.support.v8.renderscript.RenderScript: int sThunk>;

        if $i1 != 1 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static boolean setupThunk(int, android.content.Context)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.Context r0;
        java.lang.Class r1, $r7, r27;
        java.lang.Class[] r2, $r6, $r14;
        java.lang.reflect.Method r3, r5;
        java.lang.Object[] r4, $r8, $r15;
        java.lang.Integer $r9, $r11;
        java.lang.Object $r10, $r17;
        android.content.pm.PackageManager $r12;
        java.lang.String $r13;
        java.lang.Long $r16;
        android.os.Bundle $r18, $r19, $r20;
        boolean $z0, $z1;
        byte $b8;
        java.lang.Exception $r21, $r22;
        android.content.pm.PackageManager$NameNotFoundException $r23;
        android.content.pm.ApplicationInfo r25;
        long l9;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $i2 = <android.support.v8.renderscript.RenderScript: int sThunk>;

        if $i2 != -1 goto label17;

        i1 = 0;

     label01:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

        $r6 = newarray (java.lang.Class)[2];

        $r6[0] = class "java/lang/String";

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        $r6[1] = $r7;

        r2 = $r6;

        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getInt", r2);

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "debug.rs.forcecompat";

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(0);

        $r8[1] = $r9;

        r4 = $r8;

        $r10 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r4);

        $r11 = (java.lang.Integer) $r10;

        i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

     label04:
        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 != 18 goto label05;

        if i0 < 19 goto label05;

        <android.support.v8.renderscript.RenderScript: int sThunk> = 0;

        goto label07;

     label05:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 18 goto label06;

        if i1 != 0 goto label06;

        <android.support.v8.renderscript.RenderScript: int sThunk> = 1;

        goto label07;

     label06:
        <android.support.v8.renderscript.RenderScript: int sThunk> = 0;

     label07:
        $i6 = <android.support.v8.renderscript.RenderScript: int sThunk>;

        if $i6 != 1 goto label17;

     label08:
        $r12 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r13 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        r25 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r13, 128);

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

        return 1;

     label11:
        l9 = 0L;

     label12:
        r27 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.renderscript.RenderScript");

        $r14 = newarray (java.lang.Class)[0];

        r5 = virtualinvoke r27.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getMinorID", $r14);

        $r15 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r15);

        $r16 = (java.lang.Long) $r17;

        l9 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

     label13:
        goto label15;

     label14:
        $r21 := @caughtexception;

     label15:
        $r19 = r25.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r19 == null goto label17;

        $r18 = r25.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r18.<android.os.Bundle: boolean getBoolean(java.lang.String)>("com.android.support.v8.renderscript.EnableAsyncTeardown");

        if $z0 != 1 goto label16;

        $b8 = l9 cmp 0L;

        if $b8 != 0 goto label16;

        <android.support.v8.renderscript.RenderScript: int sThunk> = 0;

     label16:
        $r20 = r25.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $z1 = virtualinvoke $r20.<android.os.Bundle: boolean getBoolean(java.lang.String)>("com.android.support.v8.renderscript.EnableBlurWorkaround");

        if $z1 != 1 goto label17;

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 > 19 goto label17;

        <android.support.v8.renderscript.RenderScript: int sThunk> = 0;

     label17:
        $i3 = <android.support.v8.renderscript.RenderScript: int sThunk>;

        if $i3 != 1 goto label18;

        return 1;

     label18:
        return 0;

        catch java.lang.Exception from label01 to label02 with label03;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static void setupDiskCache(java.io.File)
    {
        java.io.File r0, r1, $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.io.File;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "com.android.renderscript.cache");

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.support.v8.renderscript.RenderScript: java.lang.String mCachePath> = $r3;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        return;
    }

    native int rsnContextCreate(int, int, int, int);

    synchronized int nContextCreate(int, int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnContextCreate(int,int,int,int)>(i0, i1, i2, i3);

        return $i4;
    }

    native void rsnContextDestroy(int);

    synchronized void nContextDestroy()
    {
        android.support.v8.renderscript.RenderScript r0;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r1;
        int i0;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $r2 = r0.<android.support.v8.renderscript.RenderScript: java.util.concurrent.locks.ReentrantReadWriteLock mRWLock>;

        r1 = virtualinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke r1.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

        i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        r0.<android.support.v8.renderscript.RenderScript: int mContext> = 0;

        virtualinvoke r1.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnContextDestroy(int)>(i0);

        return;
    }

    native void rsnContextSetPriority(int, int);

    synchronized void nContextSetPriority(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnContextSetPriority(int,int)>($i1, i0);

        return;
    }

    native void rsnContextDump(int, int);

    synchronized void nContextDump(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnContextDump(int,int)>($i1, i0);

        return;
    }

    native void rsnContextFinish(int);

    synchronized void nContextFinish()
    {
        android.support.v8.renderscript.RenderScript r0;
        int $i0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnContextFinish(int)>($i0);

        return;
    }

    native void rsnContextSendMessage(int, int, int[]);

    synchronized void nContextSendMessage(int, int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnContextSendMessage(int,int,int[])>($i1, i0, r1);

        return;
    }

    native void rsnObjDestroy(int, int);

    void nObjDestroy(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1, $i2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        if $i1 == 0 goto label1;

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnObjDestroy(int,int)>($i2, i0);

     label1:
        return;
    }

    native int rsnElementCreate(int, int, int, boolean, int);

    synchronized int nElementCreate(int, int, boolean, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnElementCreate(int,int,int,boolean,int)>($i3, i0, i1, z0, i2);

        return $i4;
    }

    native int rsnElementCreate2(int, int[], java.lang.String[], int[]);

    synchronized int nElementCreate2(int[], java.lang.String[], int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int[] r1, r3;
        java.lang.String[] r2;
        int $i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnElementCreate2(int,int[],java.lang.String[],int[])>($i0, r1, r2, r3);

        return $i1;
    }

    native void rsnElementGetNativeData(int, int, int[]);

    synchronized void nElementGetNativeData(int, int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnElementGetNativeData(int,int,int[])>($i1, i0, r1);

        return;
    }

    native void rsnElementGetSubElements(int, int, int[], java.lang.String[], int[]);

    synchronized void nElementGetSubElements(int, int[], java.lang.String[], int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1, r3;
        java.lang.String[] r2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnElementGetSubElements(int,int,int[],java.lang.String[],int[])>($i1, i0, r1, r2, r3);

        return;
    }

    native int rsnTypeCreate(int, int, int, int, int, boolean, boolean, int);

    synchronized int nTypeCreate(int, int, int, int, boolean, boolean, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        boolean z0, z1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        i4 := @parameter6: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i6 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnTypeCreate(int,int,int,int,int,boolean,boolean,int)>($i5, i0, i1, i2, i3, z0, z1, i4);

        return $i6;
    }

    native void rsnTypeGetNativeData(int, int, int[]);

    synchronized void nTypeGetNativeData(int, int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnTypeGetNativeData(int,int,int[])>($i1, i0, r1);

        return;
    }

    native int rsnAllocationCreateTyped(int, int, int, int, int);

    synchronized int nAllocationCreateTyped(int, int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i5 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationCreateTyped(int,int,int,int,int)>($i4, i0, i1, i2, i3);

        return $i5;
    }

    native int rsnAllocationCreateFromBitmap(int, int, int, android.graphics.Bitmap, int);

    synchronized int nAllocationCreateFromBitmap(int, int, android.graphics.Bitmap, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        i2 := @parameter3: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationCreateFromBitmap(int,int,int,android.graphics.Bitmap,int)>($i3, i0, i1, r1, i2);

        return $i4;
    }

    native int rsnAllocationCreateBitmapBackedAllocation(int, int, int, android.graphics.Bitmap, int);

    synchronized int nAllocationCreateBitmapBackedAllocation(int, int, android.graphics.Bitmap, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        i2 := @parameter3: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationCreateBitmapBackedAllocation(int,int,int,android.graphics.Bitmap,int)>($i3, i0, i1, r1, i2);

        return $i4;
    }

    native int rsnAllocationCubeCreateFromBitmap(int, int, int, android.graphics.Bitmap, int);

    synchronized int nAllocationCubeCreateFromBitmap(int, int, android.graphics.Bitmap, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        i2 := @parameter3: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationCubeCreateFromBitmap(int,int,int,android.graphics.Bitmap,int)>($i3, i0, i1, r1, i2);

        return $i4;
    }

    native int rsnAllocationCreateBitmapRef(int, int, android.graphics.Bitmap);

    synchronized int nAllocationCreateBitmapRef(int, android.graphics.Bitmap)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1, $i2;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationCreateBitmapRef(int,int,android.graphics.Bitmap)>($i1, i0, r1);

        return $i2;
    }

    native int rsnAllocationCreateFromAssetStream(int, int, int, int);

    synchronized int nAllocationCreateFromAssetStream(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationCreateFromAssetStream(int,int,int,int)>($i3, i0, i1, i2);

        return $i4;
    }

    native void rsnAllocationCopyToBitmap(int, int, android.graphics.Bitmap);

    synchronized void nAllocationCopyToBitmap(int, android.graphics.Bitmap)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationCopyToBitmap(int,int,android.graphics.Bitmap)>($i1, i0, r1);

        return;
    }

    native void rsnAllocationSyncAll(int, int, int);

    synchronized void nAllocationSyncAll(int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationSyncAll(int,int,int)>($i2, i0, i1);

        return;
    }

    native void rsnAllocationIoSend(int, int);

    synchronized void nAllocationIoSend(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationIoSend(int,int)>($i1, i0);

        return;
    }

    native void rsnAllocationIoReceive(int, int);

    synchronized void nAllocationIoReceive(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationIoReceive(int,int)>($i1, i0);

        return;
    }

    native void rsnAllocationGenerateMipmaps(int, int);

    synchronized void nAllocationGenerateMipmaps(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationGenerateMipmaps(int,int)>($i1, i0);

        return;
    }

    native void rsnAllocationCopyFromBitmap(int, int, android.graphics.Bitmap);

    synchronized void nAllocationCopyFromBitmap(int, android.graphics.Bitmap)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationCopyFromBitmap(int,int,android.graphics.Bitmap)>($i1, i0, r1);

        return;
    }

    native void rsnAllocationData1D(int, int, int, int, int, int[], int);

    synchronized void nAllocationData1D(int, int, int, int, int[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,int[],int)>($i5, i0, i1, i2, i3, r1, i4);

        return;
    }

    native void rsnAllocationData1D(int, int, int, int, int, short[], int);

    synchronized void nAllocationData1D(int, int, int, int, short[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        short[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: short[];

        i4 := @parameter5: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,short[],int)>($i5, i0, i1, i2, i3, r1, i4);

        return;
    }

    native void rsnAllocationData1D(int, int, int, int, int, byte[], int);

    synchronized void nAllocationData1D(int, int, int, int, byte[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        i4 := @parameter5: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,byte[],int)>($i5, i0, i1, i2, i3, r1, i4);

        return;
    }

    native void rsnAllocationData1D(int, int, int, int, int, float[], int);

    synchronized void nAllocationData1D(int, int, int, int, float[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        float[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: float[];

        i4 := @parameter5: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,float[],int)>($i5, i0, i1, i2, i3, r1, i4);

        return;
    }

    native void rsnAllocationElementData1D(int, int, int, int, int, byte[], int);

    synchronized void nAllocationElementData1D(int, int, int, int, byte[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        i4 := @parameter5: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationElementData1D(int,int,int,int,int,byte[],int)>($i5, i0, i1, i2, i3, r1, i4);

        return;
    }

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, int, int, int, int, int);

    synchronized void nAllocationData2D(int, int, int, int, int, int, int, int, int, int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i12 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,int,int,int,int,int)>($i12, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11);

        return;
    }

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, byte[], int);

    synchronized void nAllocationData2D(int, int, int, int, int, int, int, byte[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: byte[];

        i7 := @parameter8: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,byte[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

        return;
    }

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, short[], int);

    synchronized void nAllocationData2D(int, int, int, int, int, int, int, short[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        short[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: short[];

        i7 := @parameter8: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,short[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

        return;
    }

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, int[], int);

    synchronized void nAllocationData2D(int, int, int, int, int, int, int, int[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: int[];

        i7 := @parameter8: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,int[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

        return;
    }

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, float[], int);

    synchronized void nAllocationData2D(int, int, int, int, int, int, int, float[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        float[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: float[];

        i7 := @parameter8: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,float[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

        return;
    }

    native void rsnAllocationData2D(int, int, int, int, int, int, android.graphics.Bitmap);

    synchronized void nAllocationData2D(int, int, int, int, int, android.graphics.Bitmap)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        android.graphics.Bitmap r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: android.graphics.Bitmap;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,android.graphics.Bitmap)>($i5, i0, i1, i2, i3, i4, r1);

        return;
    }

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, int, int, int, int, int);

    synchronized void nAllocationData3D(int, int, int, int, int, int, int, int, int, int, int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        i12 := @parameter12: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i13 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,int,int,int,int,int)>($i13, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12);

        return;
    }

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, byte[], int);

    synchronized void nAllocationData3D(int, int, int, int, int, int, int, int, byte[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: byte[];

        i8 := @parameter9: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,byte[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

        return;
    }

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, short[], int);

    synchronized void nAllocationData3D(int, int, int, int, int, int, int, int, short[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        short[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: short[];

        i8 := @parameter9: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,short[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

        return;
    }

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, int[], int);

    synchronized void nAllocationData3D(int, int, int, int, int, int, int, int, int[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: int[];

        i8 := @parameter9: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,int[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

        return;
    }

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, float[], int);

    synchronized void nAllocationData3D(int, int, int, int, int, int, int, int, float[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        float[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: float[];

        i8 := @parameter9: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,float[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

        return;
    }

    native void rsnAllocationRead(int, int, byte[]);

    synchronized void nAllocationRead(int, byte[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationRead(int,int,byte[])>($i1, i0, r1);

        return;
    }

    native void rsnAllocationRead(int, int, short[]);

    synchronized void nAllocationRead(int, short[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        short[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: short[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationRead(int,int,short[])>($i1, i0, r1);

        return;
    }

    native void rsnAllocationRead(int, int, int[]);

    synchronized void nAllocationRead(int, int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationRead(int,int,int[])>($i1, i0, r1);

        return;
    }

    native void rsnAllocationRead(int, int, float[]);

    synchronized void nAllocationRead(int, float[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        float[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationRead(int,int,float[])>($i1, i0, r1);

        return;
    }

    native int rsnAllocationGetType(int, int);

    synchronized int nAllocationGetType(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1, $i2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnAllocationGetType(int,int)>($i1, i0);

        return $i2;
    }

    native void rsnAllocationResize1D(int, int, int);

    synchronized void nAllocationResize1D(int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationResize1D(int,int,int)>($i2, i0, i1);

        return;
    }

    native void rsnAllocationResize2D(int, int, int, int);

    synchronized void nAllocationResize2D(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnAllocationResize2D(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    native void rsnScriptBindAllocation(int, int, int, int);

    synchronized void nScriptBindAllocation(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptBindAllocation(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    native void rsnScriptSetTimeZone(int, int, byte[]);

    synchronized void nScriptSetTimeZone(int, byte[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetTimeZone(int,int,byte[])>($i1, i0, r1);

        return;
    }

    native void rsnScriptInvoke(int, int, int);

    synchronized void nScriptInvoke(int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptInvoke(int,int,int)>($i2, i0, i1);

        return;
    }

    native void rsnScriptForEach(int, int, int, int, int, byte[]);

    native void rsnScriptForEach(int, int, int, int, int);

    native void rsnScriptForEachClipped(int, int, int, int, int, byte[], int, int, int, int, int, int);

    native void rsnScriptForEachClipped(int, int, int, int, int, int, int, int, int, int, int);

    synchronized void nScriptForEach(int, int, int, int, byte[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4, $i5;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        if r1 != null goto label1;

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptForEach(int,int,int,int,int)>($i5, i0, i1, i2, i3);

        goto label2;

     label1:
        $i4 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptForEach(int,int,int,int,int,byte[])>($i4, i0, i1, i2, i3, r1);

     label2:
        return;
    }

    synchronized void nScriptForEachClipped(int, int, int, int, byte[], int, int, int, int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        i9 := @parameter10: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        if r1 != null goto label1;

        $i11 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptForEachClipped(int,int,int,int,int,int,int,int,int,int,int)>($i11, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9);

        goto label2;

     label1:
        $i10 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptForEachClipped(int,int,int,int,int,byte[],int,int,int,int,int,int)>($i10, i0, i1, i2, i3, r1, i4, i5, i6, i7, i8, i9);

     label2:
        return;
    }

    native void rsnScriptInvokeV(int, int, int, byte[]);

    synchronized void nScriptInvokeV(int, int, byte[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptInvokeV(int,int,int,byte[])>($i2, i0, i1, r1);

        return;
    }

    native void rsnScriptSetVarI(int, int, int, int);

    synchronized void nScriptSetVarI(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarI(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    native void rsnScriptSetVarJ(int, int, int, long);

    synchronized void nScriptSetVarJ(int, int, long)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i3;
        long l2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarJ(int,int,int,long)>($i3, i0, i1, l2);

        return;
    }

    native void rsnScriptSetVarF(int, int, int, float);

    synchronized void nScriptSetVarF(int, int, float)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;
        float f0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarF(int,int,int,float)>($i2, i0, i1, f0);

        return;
    }

    native void rsnScriptSetVarD(int, int, int, double);

    synchronized void nScriptSetVarD(int, int, double)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;
        double d0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarD(int,int,int,double)>($i2, i0, i1, d0);

        return;
    }

    native void rsnScriptSetVarV(int, int, int, byte[]);

    synchronized void nScriptSetVarV(int, int, byte[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2;
        byte[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarV(int,int,int,byte[])>($i2, i0, i1, r1);

        return;
    }

    native void rsnScriptSetVarVE(int, int, int, byte[], int, int[]);

    synchronized void nScriptSetVarVE(int, int, byte[], int, int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        byte[] r1;
        int[] r2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        i2 := @parameter3: int;

        r2 := @parameter4: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarVE(int,int,int,byte[],int,int[])>($i3, i0, i1, r1, i2, r2);

        return;
    }

    native void rsnScriptSetVarObj(int, int, int, int);

    synchronized void nScriptSetVarObj(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptSetVarObj(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    native int rsnScriptCCreate(int, java.lang.String, java.lang.String, byte[], int);

    synchronized int nScriptCCreate(java.lang.String, java.lang.String, byte[], int)
    {
        android.support.v8.renderscript.RenderScript r0;
        java.lang.String r1, r2;
        byte[] r3;
        int i0, $i1, $i2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnScriptCCreate(int,java.lang.String,java.lang.String,byte[],int)>($i1, r1, r2, r3, i0);

        return $i2;
    }

    native int rsnScriptIntrinsicCreate(int, int, int);

    synchronized int nScriptIntrinsicCreate(int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i3 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnScriptIntrinsicCreate(int,int,int)>($i2, i0, i1);

        return $i3;
    }

    native int rsnScriptKernelIDCreate(int, int, int, int);

    synchronized int nScriptKernelIDCreate(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i4 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnScriptKernelIDCreate(int,int,int,int)>($i3, i0, i1, i2);

        return $i4;
    }

    native int rsnScriptFieldIDCreate(int, int, int);

    synchronized int nScriptFieldIDCreate(int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, $i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i3 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnScriptFieldIDCreate(int,int,int)>($i2, i0, i1);

        return $i3;
    }

    native int rsnScriptGroupCreate(int, int[], int[], int[], int[], int[]);

    synchronized int nScriptGroupCreate(int[], int[], int[], int[], int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int[] r1, r2, r3, r4, r5;
        int $i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        r5 := @parameter4: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnScriptGroupCreate(int,int[],int[],int[],int[],int[])>($i0, r1, r2, r3, r4, r5);

        return $i1;
    }

    native void rsnScriptGroupSetInput(int, int, int, int);

    synchronized void nScriptGroupSetInput(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptGroupSetInput(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    native void rsnScriptGroupSetOutput(int, int, int, int);

    synchronized void nScriptGroupSetOutput(int, int, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptGroupSetOutput(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    native void rsnScriptGroupExecute(int, int);

    synchronized void nScriptGroupExecute(int)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, $i1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void rsnScriptGroupExecute(int,int)>($i1, i0);

        return;
    }

    native int rsnSamplerCreate(int, int, int, int, int, int, float);

    synchronized int nSamplerCreate(int, int, int, int, int, float)
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        float f0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        f0 := @parameter5: float;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        $i6 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int rsnSamplerCreate(int,int,int,int,int,int,float)>($i5, i0, i1, i2, i3, i4, f0);

        return $i6;
    }

    public void setMessageHandler(android.support.v8.renderscript.RenderScript$RSMessageHandler)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.RenderScript$RSMessageHandler r1;
        android.support.v8.renderscript.RenderScriptThunker r2;
        boolean $z0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: android.support.v8.renderscript.RenderScript$RSMessageHandler;

        r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$RSMessageHandler mMessageCallback> = r1;

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 == 0 goto label1;

        r2 = (android.support.v8.renderscript.RenderScriptThunker) r0;

        virtualinvoke r2.<android.support.v8.renderscript.RenderScriptThunker: void setMessageHandler(android.support.v8.renderscript.RenderScript$RSMessageHandler)>(r1);

     label1:
        return;
    }

    public android.support.v8.renderscript.RenderScript$RSMessageHandler getMessageHandler()
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.RenderScript$RSMessageHandler $r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        $r1 = r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$RSMessageHandler mMessageCallback>;

        return $r1;
    }

    public void sendMessage(int, int[])
    {
        android.support.v8.renderscript.RenderScript r0;
        int i0;
        int[] r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextSendMessage(int,int[])>(i0, r1);

        return;
    }

    public void setErrorHandler(android.support.v8.renderscript.RenderScript$RSErrorHandler)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.RenderScript$RSErrorHandler r1;
        android.support.v8.renderscript.RenderScriptThunker r2;
        boolean $z0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: android.support.v8.renderscript.RenderScript$RSErrorHandler;

        r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$RSErrorHandler mErrorCallback> = r1;

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 == 0 goto label1;

        r2 = (android.support.v8.renderscript.RenderScriptThunker) r0;

        virtualinvoke r2.<android.support.v8.renderscript.RenderScriptThunker: void setErrorHandler(android.support.v8.renderscript.RenderScript$RSErrorHandler)>(r1);

     label1:
        return;
    }

    public android.support.v8.renderscript.RenderScript$RSErrorHandler getErrorHandler()
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.RenderScript$RSErrorHandler $r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        $r1 = r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$RSErrorHandler mErrorCallback>;

        return $r1;
    }

    void validate()
    {
        android.support.v8.renderscript.RenderScript r0;
        int $i0;
        android.support.v8.renderscript.RSInvalidStateException $r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        $i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        if $i0 != 0 goto label1;

        $r1 = new android.support.v8.renderscript.RSInvalidStateException;

        specialinvoke $r1.<android.support.v8.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Calling RS with no Context active.");

        throw $r1;

     label1:
        return;
    }

    public void setPriority(android.support.v8.renderscript.RenderScript$Priority)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.RenderScript$Priority r1;
        int $i0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: android.support.v8.renderscript.RenderScript$Priority;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        $i0 = r1.<android.support.v8.renderscript.RenderScript$Priority: int mID>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextSetPriority(int)>($i0);

        return;
    }

    void <init>(android.content.Context)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.content.Context r1, $r3;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$RSMessageHandler mMessageCallback> = null;

        r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$RSErrorHandler mErrorCallback> = null;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.support.v8.renderscript.RenderScript: android.content.Context mApplicationContext> = $r3;

     label1:
        $r2 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<android.support.v8.renderscript.RenderScript: java.util.concurrent.locks.ReentrantReadWriteLock mRWLock> = $r2;

        return;
    }

    public final android.content.Context getApplicationContext()
    {
        android.support.v8.renderscript.RenderScript r0;
        android.content.Context $r1;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        $r1 = r0.<android.support.v8.renderscript.RenderScript: android.content.Context mApplicationContext>;

        return $r1;
    }

    public static android.support.v8.renderscript.RenderScript create(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.support.v8.renderscript.RenderScript$ContextType $r1;
        android.support.v8.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = <android.support.v8.renderscript.RenderScript$ContextType: android.support.v8.renderscript.RenderScript$ContextType NORMAL>;

        $r2 = staticinvoke <android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript create(android.content.Context,int,android.support.v8.renderscript.RenderScript$ContextType)>(r0, i0, $r1);

        return $r2;
    }

    public static android.support.v8.renderscript.RenderScript create(android.content.Context, int, android.support.v8.renderscript.RenderScript$ContextType)
    {
        android.content.Context r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11;
        android.support.v8.renderscript.RenderScript$ContextType r1;
        android.support.v8.renderscript.RenderScript r2, $r7, $r21;
        java.lang.Object r3, $r8, $r13;
        java.lang.Class r4, $r15, $r17;
        java.lang.reflect.Method r5, $r18, $r19;
        java.lang.Throwable r6, $r32;
        boolean $z0, $z1;
        android.support.v8.renderscript.RenderScript$MessageThread $r9, $r10;
        android.support.v8.renderscript.RSDriverException $r11;
        java.lang.Class[] $r12, $r16, $r20;
        java.lang.Object[] $r14;
        android.support.v8.renderscript.RSRuntimeException $r22, $r31;
        java.lang.UnsatisfiedLinkError $r23, r36;
        java.lang.StringBuilder $r24, $r26, $r28, $r29, $r30, $r34;
        java.lang.Exception $r25;
        java.lang.String $r27, $r33;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.support.v8.renderscript.RenderScript$ContextType;

        $r7 = new android.support.v8.renderscript.RenderScript;

        specialinvoke $r7.<android.support.v8.renderscript.RenderScript: void <init>(android.content.Context)>(r0);

        r2 = $r7;

        $i1 = <android.support.v8.renderscript.RenderScript: int sSdkVersion>;

        if $i1 != -1 goto label01;

        <android.support.v8.renderscript.RenderScript: int sSdkVersion> = i0;

        goto label02;

     label01:
        $i2 = <android.support.v8.renderscript.RenderScript: int sSdkVersion>;

        if $i2 == i0 goto label02;

        $r22 = new android.support.v8.renderscript.RSRuntimeException;

        specialinvoke $r22.<android.support.v8.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Can\'t have two contexts with different SDK versions in support lib");

        throw $r22;

     label02:
        $i3 = <android.support.v8.renderscript.RenderScript: int sSdkVersion>;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean setupThunk(int,android.content.Context)>($i3, r0);

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("RenderScript_jni", "RS native mode");

        $i11 = <android.support.v8.renderscript.RenderScript: int sSdkVersion>;

        $r21 = staticinvoke <android.support.v8.renderscript.RenderScriptThunker: android.support.v8.renderscript.RenderScript create(android.content.Context,int)>(r0, $i11);

        return $r21;

     label03:
        $r8 = <android.support.v8.renderscript.RenderScript: java.lang.Object lock>;

        r3 = $r8;

        entermonitor $r8;

     label04:
        $z1 = <android.support.v8.renderscript.RenderScript: boolean sInitialized>;

        if $z1 != 0 goto label11;

     label05:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("dalvik.system.VMRuntime");

        $r12 = newarray (java.lang.Class)[0];

        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getRuntime", $r12);

        $r14 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r14);

        <android.support.v8.renderscript.RenderScript: java.lang.Object sRuntime> = $r13;

        $r16 = newarray (java.lang.Class)[1];

        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        $r16[0] = $r15;

        $r19 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerNativeAllocation", $r16);

        <android.support.v8.renderscript.RenderScript: java.lang.reflect.Method registerNativeAllocation> = $r19;

        $r20 = newarray (java.lang.Class)[1];

        $r17 = <java.lang.Integer: java.lang.Class TYPE>;

        $r20[0] = $r17;

        $r18 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerNativeFree", $r20);

        <android.support.v8.renderscript.RenderScript: java.lang.reflect.Method registerNativeFree> = $r18;

        <android.support.v8.renderscript.RenderScript: boolean sUseGCHooks> = 1;

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", "No GC methods");

        <android.support.v8.renderscript.RenderScript: boolean sUseGCHooks> = 0;

     label08:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("RSSupport");

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("rsjni");

        <android.support.v8.renderscript.RenderScript: boolean sInitialized> = 1;

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

        r36 = $r23;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading RS jni library: ");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", $r27);

        $r31 = new android.support.v8.renderscript.RSRuntimeException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading RS jni library: ");

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<android.support.v8.renderscript.RSRuntimeException: void <init>(java.lang.String)>($r33);

        throw $r31;

     label11:
        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r32 := @caughtexception;

        r6 = $r32;

        exitmonitor r3;

     label14:
        throw r6;

     label15:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("RenderScript_jni", "RS compat mode");

        $i4 = virtualinvoke r2.<android.support.v8.renderscript.RenderScript: int nDeviceCreate()>();

        r2.<android.support.v8.renderscript.RenderScript: int mDev> = $i4;

        $i6 = r2.<android.support.v8.renderscript.RenderScript: int mDev>;

        $i7 = r1.<android.support.v8.renderscript.RenderScript$ContextType: int mID>;

        $i9 = virtualinvoke r2.<android.support.v8.renderscript.RenderScript: int nContextCreate(int,int,int,int)>($i6, 0, i0, $i7);

        r2.<android.support.v8.renderscript.RenderScript: int mContext> = $i9;

        $i8 = r2.<android.support.v8.renderscript.RenderScript: int mContext>;

        if $i8 != 0 goto label16;

        $r11 = new android.support.v8.renderscript.RSDriverException;

        specialinvoke $r11.<android.support.v8.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create RS context.");

        throw $r11;

     label16:
        $r10 = new android.support.v8.renderscript.RenderScript$MessageThread;

        specialinvoke $r10.<android.support.v8.renderscript.RenderScript$MessageThread: void <init>(android.support.v8.renderscript.RenderScript)>(r2);

        r2.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$MessageThread mMessageThread> = $r10;

        $r9 = r2.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r9.<android.support.v8.renderscript.RenderScript$MessageThread: void start()>();

        return r2;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.UnsatisfiedLinkError from label08 to label09 with label10;
        catch java.lang.Throwable from label04 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static android.support.v8.renderscript.RenderScript create(android.content.Context)
    {
        android.content.Context r0;
        android.support.v8.renderscript.RenderScript$ContextType $r1;
        android.support.v8.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.support.v8.renderscript.RenderScript$ContextType: android.support.v8.renderscript.RenderScript$ContextType NORMAL>;

        $r2 = staticinvoke <android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript create(android.content.Context,android.support.v8.renderscript.RenderScript$ContextType)>(r0, $r1);

        return $r2;
    }

    public static android.support.v8.renderscript.RenderScript create(android.content.Context, android.support.v8.renderscript.RenderScript$ContextType)
    {
        android.content.Context r0;
        android.support.v8.renderscript.RenderScript$ContextType r1;
        int i0;
        android.content.pm.ApplicationInfo $r2;
        android.support.v8.renderscript.RenderScript $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript$ContextType;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r3 = staticinvoke <android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript create(android.content.Context,int,android.support.v8.renderscript.RenderScript$ContextType)>(r0, i0, r1);

        return $r3;
    }

    public void contextDump()
    {
        android.support.v8.renderscript.RenderScript r0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextDump(int)>(0);

        return;
    }

    public void finish()
    {
        android.support.v8.renderscript.RenderScript r0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextFinish()>();

        return;
    }

    public void destroy()
    {
        android.support.v8.renderscript.RenderScript r0;
        int $i0, $i1;
        android.support.v8.renderscript.RenderScript$MessageThread $r2, $r3;
        java.lang.InterruptedException $r4;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void validate()>();

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextFinish()>();

        $i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextDeinitToClient(int)>($i0);

        $r2 = r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$MessageThread mMessageThread>;

        $r2.<android.support.v8.renderscript.RenderScript$MessageThread: boolean mRun> = 0;

     label1:
        $r3 = r0.<android.support.v8.renderscript.RenderScript: android.support.v8.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript$MessageThread: void join()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nContextDestroy()>();

        $i1 = r0.<android.support.v8.renderscript.RenderScript: int mDev>;

        virtualinvoke r0.<android.support.v8.renderscript.RenderScript: void nDeviceDestroy(int)>($i1);

        r0.<android.support.v8.renderscript.RenderScript: int mDev> = 0;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    boolean isAlive()
    {
        android.support.v8.renderscript.RenderScript r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        $i0 = r0.<android.support.v8.renderscript.RenderScript: int mContext>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int safeID(android.support.v8.renderscript.BaseObj)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.BaseObj r1;
        int $i0;

        r0 := @this: android.support.v8.renderscript.RenderScript;

        r1 := @parameter0: android.support.v8.renderscript.BaseObj;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.support.v8.renderscript.BaseObj: int getID(android.support.v8.renderscript.RenderScript)>(r0);

        return $i0;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.support.v8.renderscript.RenderScript: java.lang.String CACHE_PATH> = "com.android.renderscript.cache";

        <android.support.v8.renderscript.RenderScript: boolean LOG_ENABLED> = 0;

        <android.support.v8.renderscript.RenderScript: boolean DEBUG> = 0;

        <android.support.v8.renderscript.RenderScript: java.lang.String LOG_TAG> = "RenderScript_jni";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.support.v8.renderscript.RenderScript: java.lang.Object lock> = $r0;

        <android.support.v8.renderscript.RenderScript: boolean isNative> = 0;

        <android.support.v8.renderscript.RenderScript: int sThunk> = -1;

        <android.support.v8.renderscript.RenderScript: int sSdkVersion> = -1;

        return;
    }
}
