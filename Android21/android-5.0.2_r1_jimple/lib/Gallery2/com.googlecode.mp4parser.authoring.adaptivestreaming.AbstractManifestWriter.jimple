public abstract class com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter extends java.lang.Object implements com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter
{
    private static final java.util.logging.Logger LOG;
    private com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder;
    protected long[] audioFragmentsDurations;
    protected long[] videoFragmentsDurations;

    protected void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = r1;

        return;
    }

    public long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r2;
        long[] r3, r4;
        int i0, i1, i2, $i3, $i5, $i6, $i8, $i12;
        java.util.Iterator r5;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r6;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r7;
        java.util.List $r8;
        boolean $z0;
        long $l4, $l7, $l9, $l10, $l11, $l14;
        java.lang.Object $r9;
        byte $b13;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r7 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        r3 = interfaceinvoke $r7.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, r2);

        $i3 = lengthof r3;

        r4 = newarray (long)[$i3];

        i0 = 0;

        i1 = 1;

        $r8 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r9;

        $l4 = virtualinvoke r6.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $i6 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l4);

        i2 = i1 + $i6;

     label2:
        if i1 >= i2 goto label4;

        $i5 = lengthof r3;

        $i8 = $i5 - 1;

        if i0 == $i8 goto label3;

        $l14 = (long) i1;

        $i12 = i0 + 1;

        $l11 = r3[$i12];

        $b13 = $l14 cmp $l11;

        if $b13 != 0 goto label3;

        i0 = i0 + 1;

     label3:
        $l7 = r4[i0];

        $l10 = virtualinvoke r6.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $l9 = $l7 + $l10;

        r4[i0] = $l9;

        i1 = i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return r4;
    }

    public long getBitrate(com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;
        com.googlecode.mp4parser.authoring.Track r1;
        long l0, $l1, $l2, $l3, l5, l6;
        java.util.Iterator r2;
        java.nio.ByteBuffer r3;
        java.util.List $r4;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4;
        com.googlecode.mp4parser.authoring.TrackMetaData $r5;
        java.lang.Object $r6;
        int $i4;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 = 0L;

        $r4 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.nio.ByteBuffer) $r6;

        $i4 = virtualinvoke r3.<java.nio.ByteBuffer: int limit()>();

        $l3 = (long) $i4;

        l0 = l0 + $l3;

        goto label1;

     label2:
        l5 = l0 * 8L;

        $d0 = (double) l5;

        $l1 = staticinvoke <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: long getDuration(com.googlecode.mp4parser.authoring.Track)>(r1);

        $d1 = (double) $l1;

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l2 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $d2 = (double) $l2;

        $d3 = $d1 / $d2;

        $d4 = $d0 / $d3;

        l6 = (long) $d4;

        return l6;
    }

    protected static long getDuration(com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        long l0, $l1, $l2, $l3;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 = 0L;

        $r3 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r4;

        $l1 = virtualinvoke r2.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l2 = virtualinvoke r2.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $l3 = $l1 * $l2;

        l0 = l0 + $l3;

        goto label1;

     label2:
        return l0;
    }

    protected long[] checkFragmentsAlign(long[], long[]) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;
        long[] r1, r2, r3, r4, r6, r46;
        java.lang.String r5, $r34, $r38, r40, r41, r42, r43, r44, r45, r47;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        long l2, l16;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r32, $r33, $r36, $r39;
        boolean $z0;
        java.util.logging.Logger $r15, $r29;
        java.io.IOException $r28;
        java.lang.Long $r30, $r37;
        java.lang.Object[] $r31, $r35;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: long[];

        r2 := @parameter1: long[];

        if r1 == null goto label1;

        $i3 = lengthof r1;

        if $i3 != 0 goto label2;

     label1:
        return r2;

     label2:
        $i4 = lengthof r1;

        $i5 = $i4 - 1;

        r3 = newarray (long)[$i5];

        $i6 = lengthof r1;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, $i7);

        $i9 = lengthof r2;

        $i8 = $i9 - 1;

        r4 = newarray (long)[$i8];

        $i11 = lengthof r2;

        $i10 = $i11 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, $i10);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>(r4, r3);

        if $z0 != 0 goto label7;

        r5 = "";

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $i12 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        r40 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reference     :  [");

        r41 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = r1;

        i0 = lengthof r6;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        l2 = r6[i1];

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r35 = newarray (java.lang.Object)[1];

        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r35[0] = $r37;

        $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r35);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label3;

     label4:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r42 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: java.util.logging.Logger LOG>;

        virtualinvoke $r15.<java.util.logging.Logger: void warning(java.lang.String)>(r42);

        r43 = "";

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $i13 = lengthof r2;

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        r44 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current       :  [");

        r45 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r46 = r2;

        i14 = lengthof r46;

        i15 = 0;

     label5:
        if i15 >= i14 goto label6;

        l16 = r46[i15];

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r31 = newarray (java.lang.Object)[1];

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16);

        $r31[0] = $r30;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r31);

        $r33 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        r45 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        i15 = i15 + 1;

        goto label5;

     label6:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r47 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: java.util.logging.Logger LOG>;

        virtualinvoke $r29.<java.util.logging.Logger: void warning(java.lang.String)>(r47);

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Track does not have the same fragment borders as its predecessor.");

        throw $r28;

     label7:
        return r2;
    }

    protected java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;
        com.coremedia.iso.boxes.sampleentry.SampleEntry r1;
        java.lang.String r2;
        com.coremedia.iso.boxes.OriginalFormatBox r3;
        boolean $z0, $z1, $z2;
        java.util.List $r4;
        java.lang.Object $r5;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: com.coremedia.iso.boxes.sampleentry.SampleEntry;

        r2 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.SampleEntry: java.lang.String getType()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("encv");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("enca");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("encv");

        if $z2 == 0 goto label2;

     label1:
        $r4 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.SampleEntry: java.util.List getBoxes(java.lang.Class,boolean)>(class "com/coremedia/iso/boxes/OriginalFormatBox", 1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (com.coremedia.iso.boxes.OriginalFormatBox) $r5;

        r2 = virtualinvoke r3.<com.coremedia.iso.boxes.OriginalFormatBox: java.lang.String getDataFormat()>();

     label2:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/googlecode/mp4parser/authoring/adaptivestreaming/AbstractManifestWriter";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
