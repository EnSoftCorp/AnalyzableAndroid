public class com.coremedia.iso.boxes.DataReferenceBox extends com.googlecode.mp4parser.FullContainerBox
{
    public static final java.lang.String TYPE;

    public void <init>()
    {
        com.coremedia.iso.boxes.DataReferenceBox r0;

        r0 := @this: com.coremedia.iso.boxes.DataReferenceBox;

        specialinvoke r0.<com.googlecode.mp4parser.FullContainerBox: void <init>(java.lang.String)>("dref");

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.DataReferenceBox r0;
        long $l0, $l1;

        r0 := @this: com.coremedia.iso.boxes.DataReferenceBox;

        $l0 = specialinvoke r0.<com.googlecode.mp4parser.FullContainerBox: long getContentSize()>();

        $l1 = $l0 + 4L;

        return $l1;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.DataReferenceBox r0;
        java.nio.ByteBuffer r1;
        byte[] $r2;

        r0 := @this: com.coremedia.iso.boxes.DataReferenceBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.DataReferenceBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = newarray (byte)[4];

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r2);

        virtualinvoke r0.<com.coremedia.iso.boxes.DataReferenceBox: void parseChildBoxes(java.nio.ByteBuffer)>(r1);

        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.DataReferenceBox r0;
        java.nio.ByteBuffer r1;
        java.util.List $r2;
        int $i0;
        long $l1;

        r0 := @this: com.coremedia.iso.boxes.DataReferenceBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.DataReferenceBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = virtualinvoke r0.<com.coremedia.iso.boxes.DataReferenceBox: java.util.List getBoxes()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        virtualinvoke r0.<com.coremedia.iso.boxes.DataReferenceBox: void writeChildBoxes(java.nio.ByteBuffer)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.DataReferenceBox: java.lang.String TYPE> = "dref";

        return;
    }
}
