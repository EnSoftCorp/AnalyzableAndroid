public class com.android.gallery3d.filtershow.tools.XmpPresets extends java.lang.Object
{
    public static final java.lang.String XMP_GOOGLE_FILTER_NAMESPACE;
    public static final java.lang.String XMP_GOOGLE_FILTER_PREFIX;
    public static final java.lang.String XMP_SRC_FILE_URI;
    public static final java.lang.String XMP_FILTERSTACK;
    private static final java.lang.String LOGTAG;

    public void <init>()
    {
        com.android.gallery3d.filtershow.tools.XmpPresets r0;

        r0 := @this: com.android.gallery3d.filtershow.tools.XmpPresets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeFilterXMP(android.content.Context, android.net.Uri, java.io.File, com.android.gallery3d.filtershow.pipeline.ImagePreset)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.io.File r2;
        com.android.gallery3d.filtershow.pipeline.ImagePreset r3;
        java.io.InputStream r4;
        com.adobe.xmp.XMPMeta r5;
        java.lang.Throwable r7, $r17;
        android.content.ContentResolver $r8;
        java.lang.String $r9, $r10, $r11, $r15, $r16, $r22, $r24;
        java.lang.StringBuilder $r12, $r13, $r14, $r20, $r21, $r23;
        boolean $z0;
        com.adobe.xmp.XMPException $r18;
        java.io.FileNotFoundException $r19;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.io.File;

        r3 := @parameter3: com.android.gallery3d.filtershow.pipeline.ImagePreset;

        r4 = null;

        r5 = null;

     label01:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke $r8.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r1);

        r5 = staticinvoke <com.android.gallery3d.util.XmpUtilHelper: com.adobe.xmp.XMPMeta extractXMPMeta(java.io.InputStream)>(r4);

     label02:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r4);

        goto label07;

     label03:
        $r19 := @caughtexception;

     label04:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r4);

        goto label07;

     label05:
        $r17 := @caughtexception;

        r7 = $r17;

     label06:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r4);

        throw r7;

     label07:
        if r5 != null goto label08;

        r5 = staticinvoke <com.adobe.xmp.XMPMetaFactory: com.adobe.xmp.XMPMeta create()>();

     label08:
        $r9 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r5.<com.adobe.xmp.XMPMeta: void setProperty(java.lang.String,java.lang.String,java.lang.Object)>("http://ns.google.com/photos/1.0/filter/", "SourceFileUri", $r9);

        $r11 = virtualinvoke r3.<com.android.gallery3d.filtershow.pipeline.ImagePreset: java.lang.String getJsonString(java.lang.String)>("Saved");

        interfaceinvoke r5.<com.adobe.xmp.XMPMeta: void setProperty(java.lang.String,java.lang.String,java.lang.Object)>("http://ns.google.com/photos/1.0/filter/", "filterstack", $r11);

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Write XMP meta to file failed:");

        $r24 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("XmpPresets", $r22);

        return;

     label11:
        $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = staticinvoke <com.android.gallery3d.util.XmpUtilHelper: boolean writeXMPMeta(java.lang.String,java.lang.Object)>($r10, r5);

        if $z0 != 0 goto label12;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Write XMP meta to file failed:");

        $r15 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("XmpPresets", $r16);

     label12:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch com.adobe.xmp.XMPException from label08 to label09 with label10;
    }

    public static com.android.gallery3d.filtershow.tools.XmpPresets$XMresults extractXMPData(android.content.Context, com.android.gallery3d.filtershow.imageshow.MasterImage, android.net.Uri)
    {
        android.content.Context r0;
        com.android.gallery3d.filtershow.imageshow.MasterImage r1;
        android.net.Uri r2, r8;
        com.android.gallery3d.filtershow.tools.XmpPresets$XMresults r3, $r9;
        java.io.InputStream r4;
        com.adobe.xmp.XMPMeta r5;
        java.lang.Throwable r7, $r15;
        boolean z0;
        android.content.ContentResolver $r10;
        com.android.gallery3d.filtershow.pipeline.ImagePreset $r11, $r12;
        com.adobe.xmp.XMPException $r13, r18;
        java.io.FileNotFoundException $r14;
        java.lang.String r16, r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.gallery3d.filtershow.imageshow.MasterImage;

        r2 := @parameter2: android.net.Uri;

        $r9 = new com.android.gallery3d.filtershow.tools.XmpPresets$XMresults;

        specialinvoke $r9.<com.android.gallery3d.filtershow.tools.XmpPresets$XMresults: void <init>()>();

        r3 = $r9;

        r4 = null;

        r5 = null;

     label01:
        $r10 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke $r10.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r2);

        r5 = staticinvoke <com.android.gallery3d.util.XmpUtilHelper: com.adobe.xmp.XMPMeta extractXMPMeta(java.io.InputStream)>(r4);

     label02:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r4);

        goto label07;

     label03:
        $r14 := @caughtexception;

     label04:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r4);

        goto label07;

     label05:
        $r15 := @caughtexception;

        r7 = $r15;

     label06:
        staticinvoke <com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>(r4);

        throw r7;

     label07:
        if r5 != null goto label08;

        return null;

     label08:
        r16 = interfaceinvoke r5.<com.adobe.xmp.XMPMeta: java.lang.String getPropertyString(java.lang.String,java.lang.String)>("http://ns.google.com/photos/1.0/filter/", "SourceFileUri");

        if r16 == null goto label11;

        r17 = interfaceinvoke r5.<com.adobe.xmp.XMPMeta: java.lang.String getPropertyString(java.lang.String,java.lang.String)>("http://ns.google.com/photos/1.0/filter/", "filterstack");

        r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r16);

        r3.<com.android.gallery3d.filtershow.tools.XmpPresets$XMresults: android.net.Uri originalimage> = r8;

        $r11 = new com.android.gallery3d.filtershow.pipeline.ImagePreset;

        specialinvoke $r11.<com.android.gallery3d.filtershow.pipeline.ImagePreset: void <init>()>();

        r3.<com.android.gallery3d.filtershow.tools.XmpPresets$XMresults: com.android.gallery3d.filtershow.pipeline.ImagePreset preset> = $r11;

        r3.<com.android.gallery3d.filtershow.tools.XmpPresets$XMresults: java.lang.String presetString> = r17;

        $r12 = r3.<com.android.gallery3d.filtershow.tools.XmpPresets$XMresults: com.android.gallery3d.filtershow.pipeline.ImagePreset preset>;

        z0 = virtualinvoke $r12.<com.android.gallery3d.filtershow.pipeline.ImagePreset: boolean readJsonFromString(java.lang.String)>(r17);

        if z0 != 0 goto label10;

     label09:
        return null;

     label10:
        return r3;

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        r18 = $r13;

        virtualinvoke r18.<com.adobe.xmp.XMPException: void printStackTrace()>();

     label13:
        return null;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch com.adobe.xmp.XMPException from label08 to label09 with label12;
    }

    static void <clinit>()
    {
        com.adobe.xmp.XMPException r0, $r3;
        com.adobe.xmp.XMPSchemaRegistry $r1;

        <com.android.gallery3d.filtershow.tools.XmpPresets: java.lang.String LOGTAG> = "XmpPresets";

        <com.android.gallery3d.filtershow.tools.XmpPresets: java.lang.String XMP_FILTERSTACK> = "filterstack";

        <com.android.gallery3d.filtershow.tools.XmpPresets: java.lang.String XMP_SRC_FILE_URI> = "SourceFileUri";

        <com.android.gallery3d.filtershow.tools.XmpPresets: java.lang.String XMP_GOOGLE_FILTER_PREFIX> = "AFltr";

        <com.android.gallery3d.filtershow.tools.XmpPresets: java.lang.String XMP_GOOGLE_FILTER_NAMESPACE> = "http://ns.google.com/photos/1.0/filter/";

     label1:
        $r1 = staticinvoke <com.adobe.xmp.XMPMetaFactory: com.adobe.xmp.XMPSchemaRegistry getSchemaRegistry()>();

        interfaceinvoke $r1.<com.adobe.xmp.XMPSchemaRegistry: java.lang.String registerNamespace(java.lang.String,java.lang.String)>("http://ns.google.com/photos/1.0/filter/", "AFltr");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("XmpPresets", "Register XMP name space failed", r0);

     label4:
        return;

        catch com.adobe.xmp.XMPException from label1 to label2 with label3;
    }
}
