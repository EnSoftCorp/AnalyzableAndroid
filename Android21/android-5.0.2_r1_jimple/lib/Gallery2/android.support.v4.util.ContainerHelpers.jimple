class android.support.v4.util.ContainerHelpers extends java.lang.Object
{
    static final int[] EMPTY_INTS;
    static final long[] EMPTY_LONGS;
    static final java.lang.Object[] EMPTY_OBJECTS;

    void <init>()
    {
        android.support.v4.util.ContainerHelpers r0;

        r0 := @this: android.support.v4.util.ContainerHelpers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int idealIntArraySize(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 * 4;

        $i2 = staticinvoke <android.support.v4.util.ContainerHelpers: int idealByteArraySize(int)>($i1);

        $i3 = $i2 / 4;

        return $i3;
    }

    public static int idealLongArraySize(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 * 8;

        $i2 = staticinvoke <android.support.v4.util.ContainerHelpers: int idealByteArraySize(int)>($i1);

        $i3 = $i2 / 8;

        return $i3;
    }

    public static int idealByteArraySize(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 = 4;

     label1:
        if i1 >= 32 goto label3;

        $i2 = 1 << i1;

        $i3 = $i2 - 12;

        if i0 > $i3 goto label2;

        $i4 = 1 << i1;

        $i5 = $i4 - 12;

        return $i5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == r1 goto label1;

        if r0 == null goto label2;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static int binarySearch(int[], int, int)
    {
        int[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        i3 = i0 - 1;

     label1:
        if i2 > i3 goto label5;

        $i7 = i2 + i3;

        i4 = $i7 >>> 1;

        i5 = r0[i4];

        if i5 >= i1 goto label2;

        i2 = i4 + 1;

        goto label4;

     label2:
        if i5 <= i1 goto label3;

        i3 = i4 - 1;

        goto label4;

     label3:
        return i4;

     label4:
        goto label1;

     label5:
        $i6 = i2 ^ -1;

        return $i6;
    }

    static int binarySearch(long[], int, long)
    {
        long[] r0;
        int i0, i2, i3, i4, $i6, $i7;
        long l1, l5;
        byte $b8, $b9;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i2 = 0;

        i3 = i0 - 1;

     label1:
        if i2 > i3 goto label5;

        $i7 = i2 + i3;

        i4 = $i7 >>> 1;

        l5 = r0[i4];

        $b8 = l5 cmp l1;

        if $b8 >= 0 goto label2;

        i2 = i4 + 1;

        goto label4;

     label2:
        $b9 = l5 cmp l1;

        if $b9 <= 0 goto label3;

        i3 = i4 - 1;

        goto label4;

     label3:
        return i4;

     label4:
        goto label1;

     label5:
        $i6 = i2 ^ -1;

        return $i6;
    }

    static void <clinit>()
    {
        int[] $r0;
        long[] $r1;
        java.lang.Object[] $r2;

        $r0 = newarray (int)[0];

        <android.support.v4.util.ContainerHelpers: int[] EMPTY_INTS> = $r0;

        $r1 = newarray (long)[0];

        <android.support.v4.util.ContainerHelpers: long[] EMPTY_LONGS> = $r1;

        $r2 = newarray (java.lang.Object)[0];

        <android.support.v4.util.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS> = $r2;

        return;
    }
}
