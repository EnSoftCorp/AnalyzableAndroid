public class com.android.gallery3d.filtershow.pipeline.Buffer extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private android.graphics.Bitmap mBitmap;
    private android.support.v8.renderscript.Allocation mAllocation;
    private boolean mUseAllocation;
    private com.android.gallery3d.filtershow.pipeline.ImagePreset mPreset;

    public void <init>(android.graphics.Bitmap)
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        android.graphics.Bitmap r1, $r5, $r8;
        android.support.v8.renderscript.RenderScript r2;
        com.android.gallery3d.filtershow.cache.BitmapCache r3;
        boolean $z0;
        android.support.v8.renderscript.Allocation$MipmapControl $r4;
        android.support.v8.renderscript.Allocation $r6;
        com.android.gallery3d.filtershow.imageshow.MasterImage $r7;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.filtershow.pipeline.Buffer: boolean mUseAllocation> = 0;

        r2 = staticinvoke <com.android.gallery3d.filtershow.pipeline.CachingPipeline: android.support.v8.renderscript.RenderScript getRenderScriptContext()>();

        if r1 == null goto label1;

        $r7 = staticinvoke <com.android.gallery3d.filtershow.imageshow.MasterImage: com.android.gallery3d.filtershow.imageshow.MasterImage getImage()>();

        r3 = virtualinvoke $r7.<com.android.gallery3d.filtershow.imageshow.MasterImage: com.android.gallery3d.filtershow.cache.BitmapCache getBitmapCache()>();

        $r8 = virtualinvoke r3.<com.android.gallery3d.filtershow.cache.BitmapCache: android.graphics.Bitmap getBitmapCopy(android.graphics.Bitmap,int)>(r1, 1);

        r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap> = $r8;

     label1:
        $z0 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: boolean mUseAllocation>;

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        $r4 = <android.support.v8.renderscript.Allocation$MipmapControl: android.support.v8.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r6 = staticinvoke <android.support.v8.renderscript.Allocation: android.support.v8.renderscript.Allocation createFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int)>(r2, $r5, $r4, 129);

        r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.support.v8.renderscript.Allocation mAllocation> = $r6;

     label2:
        return;
    }

    public boolean isSameSize(android.graphics.Bitmap)
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        android.graphics.Bitmap r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        if $r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i0 != $i1 goto label3;

        $r4 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        $i2 = virtualinvoke $r4.<android.graphics.Bitmap: int getHeight()>();

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i2 != $i3 goto label3;

        return 1;

     label3:
        return 0;
    }

    public synchronized void useBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0, r2;
        com.android.gallery3d.filtershow.pipeline.Buffer r1;
        android.graphics.Canvas r3, $r4;

        r1 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        r2 := @parameter0: android.graphics.Bitmap;

        $r4 = new android.graphics.Canvas;

        $r0 = r1.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        specialinvoke $r4.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r0);

        r3 = $r4;

        virtualinvoke r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r2, 0.0F, 0.0F, null);

        return;
    }

    public synchronized android.graphics.Bitmap getBitmap()
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        $r1 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        return $r1;
    }

    public android.support.v8.renderscript.Allocation getAllocation()
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        android.support.v8.renderscript.Allocation $r1;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        $r1 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.support.v8.renderscript.Allocation mAllocation>;

        return $r1;
    }

    public void sync()
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        boolean $z0;
        android.graphics.Bitmap $r1;
        android.support.v8.renderscript.Allocation $r2;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        $z0 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: boolean mUseAllocation>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.support.v8.renderscript.Allocation mAllocation>;

        $r1 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r2.<android.support.v8.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>($r1);

     label1:
        return;
    }

    public com.android.gallery3d.filtershow.pipeline.ImagePreset getPreset()
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        com.android.gallery3d.filtershow.pipeline.ImagePreset $r1;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        $r1 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: com.android.gallery3d.filtershow.pipeline.ImagePreset mPreset>;

        return $r1;
    }

    public void setPreset(com.android.gallery3d.filtershow.pipeline.ImagePreset)
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        com.android.gallery3d.filtershow.pipeline.ImagePreset r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        r1 := @parameter0: com.android.gallery3d.filtershow.pipeline.ImagePreset;

        $r2 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: com.android.gallery3d.filtershow.pipeline.ImagePreset mPreset>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: com.android.gallery3d.filtershow.pipeline.ImagePreset mPreset>;

        $z0 = virtualinvoke $r4.<com.android.gallery3d.filtershow.pipeline.ImagePreset: boolean same(com.android.gallery3d.filtershow.pipeline.ImagePreset)>(r1);

        if $z0 != 0 goto label2;

     label1:
        $r3 = new com.android.gallery3d.filtershow.pipeline.ImagePreset;

        specialinvoke $r3.<com.android.gallery3d.filtershow.pipeline.ImagePreset: void <init>(com.android.gallery3d.filtershow.pipeline.ImagePreset)>(r1);

        r0.<com.android.gallery3d.filtershow.pipeline.Buffer: com.android.gallery3d.filtershow.pipeline.ImagePreset mPreset> = $r3;

        goto label3;

     label2:
        $r5 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: com.android.gallery3d.filtershow.pipeline.ImagePreset mPreset>;

        virtualinvoke $r5.<com.android.gallery3d.filtershow.pipeline.ImagePreset: void updateWith(com.android.gallery3d.filtershow.pipeline.ImagePreset)>(r1);

     label3:
        return;
    }

    public void remove()
    {
        com.android.gallery3d.filtershow.pipeline.Buffer r0;
        com.android.gallery3d.filtershow.cache.BitmapCache r1;
        com.android.gallery3d.filtershow.imageshow.MasterImage $r2;
        android.graphics.Bitmap $r3;
        boolean $z0;

        r0 := @this: com.android.gallery3d.filtershow.pipeline.Buffer;

        $r2 = staticinvoke <com.android.gallery3d.filtershow.imageshow.MasterImage: com.android.gallery3d.filtershow.imageshow.MasterImage getImage()>();

        r1 = virtualinvoke $r2.<com.android.gallery3d.filtershow.imageshow.MasterImage: com.android.gallery3d.filtershow.cache.BitmapCache getBitmapCache()>();

        $r3 = r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap>;

        $z0 = virtualinvoke r1.<com.android.gallery3d.filtershow.cache.BitmapCache: boolean cache(android.graphics.Bitmap)>($r3);

        if $z0 == 0 goto label1;

        r0.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap mBitmap> = null;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.filtershow.pipeline.Buffer: java.lang.String LOGTAG> = "Buffer";

        return;
    }
}
