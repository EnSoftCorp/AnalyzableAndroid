public class com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox extends com.googlecode.mp4parser.AbstractFullBox
{
    private static java.util.logging.Logger log;
    public com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor descriptor;
    public java.nio.ByteBuffer data;

    public void <init>(java.lang.String)
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        java.lang.String r1;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        java.nio.ByteBuffer r1, $r2, $r4;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r4);

        return;
    }

    protected long getContentSize()
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        java.nio.ByteBuffer $r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        $r1 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        $i1 = 4 + $i0;

        $l2 = (long) $i1;

        return $l2;
    }

    public com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor getDescriptor()
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        $r1 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor descriptor>;

        return $r1;
    }

    public java.lang.String getDescriptorAsString()
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor $r1;
        java.lang.String $r2;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        $r1 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor descriptor>;

        $r2 = virtualinvoke $r1.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor: java.lang.String toString()>();

        return $r2;
    }

    public void setData(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data> = r1;

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox r0;
        java.nio.ByteBuffer r1, $r3, $r5, $r7;
        java.io.IOException r2, $r9;
        int $i1, $i2, $i3;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor $r8;
        java.util.logging.Level $r10, $r12;
        java.util.logging.Logger $r11, $r14;
        java.lang.IndexOutOfBoundsException $r13, r15;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r3 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data> = $r3;

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $i3 = $i1 + $i2;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i3);

     label1:
        $r5 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r7 = r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.nio.ByteBuffer data>;

        $r8 = staticinvoke <com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ObjectDescriptorFactory: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor createFrom(int,java.nio.ByteBuffer)>(-1, $r7);

        r0.<com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.BaseDescriptor descriptor> = $r8;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r11 = <com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.util.logging.Logger log>;

        $r10 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r11.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r10, "Error parsing ObjectDescriptor", r2);

        goto label5;

     label4:
        $r13 := @caughtexception;

        r15 = $r13;

        $r14 = <com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.util.logging.Logger log>;

        $r12 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r12, "Error parsing ObjectDescriptor", r15);

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/googlecode/mp4parser/boxes/mp4/AbstractDescriptorBox";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.boxes.mp4.AbstractDescriptorBox: java.util.logging.Logger log> = $r2;

        return;
    }
}
