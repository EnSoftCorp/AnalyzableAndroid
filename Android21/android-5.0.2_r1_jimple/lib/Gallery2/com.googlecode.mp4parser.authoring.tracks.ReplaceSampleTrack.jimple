public class com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack extends com.googlecode.mp4parser.authoring.AbstractTrack
{
    com.googlecode.mp4parser.authoring.Track origTrack;
    private long sampleNumber;
    private java.nio.ByteBuffer sampleContent;
    private java.util.List samples;

    public void <init>(com.googlecode.mp4parser.authoring.Track, long, java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track r1;
        long l0;
        java.nio.ByteBuffer r2;
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack$ReplaceASingleEntryList $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 := @parameter1: long;

        r2 := @parameter2: java.nio.ByteBuffer;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.AbstractTrack: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack> = r1;

        r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: long sampleNumber> = l0;

        r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: java.nio.ByteBuffer sampleContent> = r2;

        $r3 = new com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack$ReplaceASingleEntryList;

        specialinvoke $r3.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack$ReplaceASingleEntryList: void <init>(com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack,com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack$1)>(r0, null);

        r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: java.util.List samples> = $r3;

        return;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        java.util.List $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: java.util.List samples>;

        return $r1;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        return $r2;
    }

    public java.util.List getDecodingTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        return $r2;
    }

    public java.util.List getCompositionTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        return $r2;
    }

    public synchronized long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        long[] $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        return $r2;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        return $r2;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        return $r2;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.lang.String $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.Box $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()>();

        return $r2;
    }

    static long access$100(com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack)
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        long $l0;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: long sampleNumber>;

        return $l0;
    }

    static java.nio.ByteBuffer access$200(com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack)
    {
        com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack r0;
        java.nio.ByteBuffer $r1;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ReplaceSampleTrack: java.nio.ByteBuffer sampleContent>;

        return $r1;
    }
}
