public class com.android.gallery3d.util.ThreadPool extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int CORE_POOL_SIZE;
    private static final int MAX_POOL_SIZE;
    private static final int KEEP_ALIVE_TIME;
    public static final int MODE_NONE;
    public static final int MODE_CPU;
    public static final int MODE_NETWORK;
    public static final com.android.gallery3d.util.ThreadPool$JobContext JOB_CONTEXT_STUB;
    com.android.gallery3d.util.ThreadPool$ResourceCounter mCpuCounter;
    com.android.gallery3d.util.ThreadPool$ResourceCounter mNetworkCounter;
    private final java.util.concurrent.Executor mExecutor;

    public void <init>()
    {
        com.android.gallery3d.util.ThreadPool r0;

        r0 := @this: com.android.gallery3d.util.ThreadPool;

        specialinvoke r0.<com.android.gallery3d.util.ThreadPool: void <init>(int,int)>(4, 8);

        return;
    }

    public void <init>(int, int)
    {
        com.android.gallery3d.util.ThreadPool r0;
        int i0, i1;
        com.android.gallery3d.util.ThreadPool$ResourceCounter $r1, $r2;
        java.util.concurrent.ThreadPoolExecutor $r3;
        java.util.concurrent.LinkedBlockingQueue $r4;
        java.util.concurrent.TimeUnit $r5;
        com.android.gallery3d.util.PriorityThreadFactory $r6;

        r0 := @this: com.android.gallery3d.util.ThreadPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.gallery3d.util.ThreadPool$ResourceCounter;

        specialinvoke $r1.<com.android.gallery3d.util.ThreadPool$ResourceCounter: void <init>(int)>(2);

        r0.<com.android.gallery3d.util.ThreadPool: com.android.gallery3d.util.ThreadPool$ResourceCounter mCpuCounter> = $r1;

        $r2 = new com.android.gallery3d.util.ThreadPool$ResourceCounter;

        specialinvoke $r2.<com.android.gallery3d.util.ThreadPool$ResourceCounter: void <init>(int)>(2);

        r0.<com.android.gallery3d.util.ThreadPool: com.android.gallery3d.util.ThreadPool$ResourceCounter mNetworkCounter> = $r2;

        $r3 = new java.util.concurrent.ThreadPoolExecutor;

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r4 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        $r6 = new com.android.gallery3d.util.PriorityThreadFactory;

        specialinvoke $r6.<com.android.gallery3d.util.PriorityThreadFactory: void <init>(java.lang.String,int)>("thread-pool", 10);

        specialinvoke $r3.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(i0, i1, 10L, $r5, $r4, $r6);

        r0.<com.android.gallery3d.util.ThreadPool: java.util.concurrent.Executor mExecutor> = $r3;

        return;
    }

    public com.android.gallery3d.util.Future submit(com.android.gallery3d.util.ThreadPool$Job, com.android.gallery3d.util.FutureListener)
    {
        com.android.gallery3d.util.ThreadPool r0;
        com.android.gallery3d.util.ThreadPool$Job r1;
        com.android.gallery3d.util.FutureListener r2;
        com.android.gallery3d.util.ThreadPool$Worker r3, $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: com.android.gallery3d.util.ThreadPool;

        r1 := @parameter0: com.android.gallery3d.util.ThreadPool$Job;

        r2 := @parameter1: com.android.gallery3d.util.FutureListener;

        $r4 = new com.android.gallery3d.util.ThreadPool$Worker;

        specialinvoke $r4.<com.android.gallery3d.util.ThreadPool$Worker: void <init>(com.android.gallery3d.util.ThreadPool,com.android.gallery3d.util.ThreadPool$Job,com.android.gallery3d.util.FutureListener)>(r0, r1, r2);

        r3 = $r4;

        $r5 = r0.<com.android.gallery3d.util.ThreadPool: java.util.concurrent.Executor mExecutor>;

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r3);

        return r3;
    }

    public com.android.gallery3d.util.Future submit(com.android.gallery3d.util.ThreadPool$Job)
    {
        com.android.gallery3d.util.ThreadPool r0;
        com.android.gallery3d.util.ThreadPool$Job r1;
        com.android.gallery3d.util.Future $r2;

        r0 := @this: com.android.gallery3d.util.ThreadPool;

        r1 := @parameter0: com.android.gallery3d.util.ThreadPool$Job;

        $r2 = virtualinvoke r0.<com.android.gallery3d.util.ThreadPool: com.android.gallery3d.util.Future submit(com.android.gallery3d.util.ThreadPool$Job,com.android.gallery3d.util.FutureListener)>(r1, null);

        return $r2;
    }

    static void <clinit>()
    {
        com.android.gallery3d.util.ThreadPool$JobContextStub $r0;

        <com.android.gallery3d.util.ThreadPool: int MODE_NETWORK> = 2;

        <com.android.gallery3d.util.ThreadPool: int MODE_CPU> = 1;

        <com.android.gallery3d.util.ThreadPool: int MODE_NONE> = 0;

        <com.android.gallery3d.util.ThreadPool: int KEEP_ALIVE_TIME> = 10;

        <com.android.gallery3d.util.ThreadPool: int MAX_POOL_SIZE> = 8;

        <com.android.gallery3d.util.ThreadPool: int CORE_POOL_SIZE> = 4;

        <com.android.gallery3d.util.ThreadPool: java.lang.String TAG> = "ThreadPool";

        $r0 = new com.android.gallery3d.util.ThreadPool$JobContextStub;

        specialinvoke $r0.<com.android.gallery3d.util.ThreadPool$JobContextStub: void <init>(com.android.gallery3d.util.ThreadPool$1)>(null);

        <com.android.gallery3d.util.ThreadPool: com.android.gallery3d.util.ThreadPool$JobContext JOB_CONTEXT_STUB> = $r0;

        return;
    }
}
