public class com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl extends java.lang.Object implements com.googlecode.mp4parser.authoring.adaptivestreaming.PackageWriter
{
    private static java.util.logging.Logger LOG;
    long timeScale;
    private java.io.File outputDirectory;
    private boolean debugOutput;
    private com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder;
    com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r1, $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r2, $r4;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl $r5;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: long timeScale> = 10000000L;

        $r2 = new com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        specialinvoke $r2.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder> = $r2;

        $r3 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        specialinvoke $r3.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: void <init>()>();

        r1 = $r3;

        $r4 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder>;

        virtualinvoke $r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: void setIntersectionFinder(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>(r1);

        $r5 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        specialinvoke $r5.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>(r1);

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter> = $r5;

        return;
    }

    public void <init>(int)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        int i0;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r1, $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r2, $r4;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl $r5;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: long timeScale> = 10000000L;

        $r2 = new com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        specialinvoke $r2.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder> = $r2;

        $r3 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        specialinvoke $r3.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: void <init>(int)>(i0);

        r1 = $r3;

        $r4 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder>;

        virtualinvoke $r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: void setIntersectionFinder(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>(r1);

        $r5 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        specialinvoke $r5.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>(r1);

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter> = $r5;

        return;
    }

    public void setOutputDirectory(java.io.File)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        java.io.File r1;
        boolean $z0, $z1;
        java.lang.AssertionError $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        r1 := @parameter0: java.io.File;

        $z0 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory> = r1;

        return;
    }

    public void setDebugOutput(boolean)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        boolean z0;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        z0 := @parameter0: boolean;

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean debugOutput> = z0;

        return;
    }

    public void setIsmvBuilder(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl $r2;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder> = r1;

        $r2 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        $r3 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder getFragmentIntersectionFinder()>();

        specialinvoke $r2.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>($r3);

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter> = $r2;

        return;
    }

    public void setManifestWriter(com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter r1;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter;

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter> = r1;

        return;
    }

    public void write(com.googlecode.mp4parser.authoring.Movie) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        com.googlecode.mp4parser.authoring.Movie r1, r79, r80;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r2, $r65, $r71, r81;
        com.coremedia.iso.IsoFile r3, r82, r83;
        java.io.File r4, r6, r9, r10, $r21, $r22, $r37, $r42, $r43, $r56, $r58, $r63, $r66, $r68, $r69, $r70, $r73, $r74, $r78, r84;
        java.io.FileOutputStream r5, r7, r14, $r51, $r67, $r75, $r77, r85;
        long l0, l1, $l3, $l4, $l6, $l7;
        java.util.Iterator r8, r86;
        long[] r11, $r50;
        com.coremedia.iso.boxes.Box r12, r15, $r27, $r28, $r34;
        int i2, $i8, $i9;
        java.nio.channels.FileChannel r13, $r64, $r72, $r76;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r16;
        java.util.List $r17, $r25;
        java.io.FileWriter $r18, r89;
        com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter $r19, $r24, $r45;
        java.lang.String $r20, $r29, $r38, $r40, $r44, $r48, $r55, $r60, r88;
        java.lang.Object $r23, $r52, $r54;
        com.googlecode.mp4parser.authoring.TrackMetaData $r26;
        java.lang.StringBuilder $r30, $r32, $r35, $r36, $r39, $r41, $r47, $r49;
        java.io.PrintStream $r31;
        java.lang.Class $r33;
        java.util.logging.Logger $r46;
        byte $b5;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox $r53, $r57;
        java.lang.AssertionError $r59, $r62;
        com.googlecode.mp4parser.authoring.Track r87;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $z0 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean debugOutput>;

        if $z0 == 0 goto label01;

        $r73 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        virtualinvoke $r73.<java.io.File: boolean mkdirs()>();

        $r71 = new com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        specialinvoke $r71.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void <init>()>();

        r2 = $r71;

        r3 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.IsoFile build(com.googlecode.mp4parser.authoring.Movie)>(r1);

        $r70 = new java.io.File;

        $r78 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        specialinvoke $r70.<java.io.File: void <init>(java.io.File,java.lang.String)>($r78, "debug_1_muxed.mp4");

        r4 = $r70;

        $r77 = new java.io.FileOutputStream;

        specialinvoke $r77.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        r5 = $r77;

        $r76 = virtualinvoke r5.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        virtualinvoke r3.<com.coremedia.iso.IsoFile: void getBox(java.nio.channels.WritableByteChannel)>($r76);

        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

     label01:
        r79 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.Movie removeUnknownTracks(com.googlecode.mp4parser.authoring.Movie)>(r1);

        r80 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.Movie correctTimescale(com.googlecode.mp4parser.authoring.Movie)>(r79);

        $z1 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean debugOutput>;

        if $z1 == 0 goto label02;

        $r65 = new com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        specialinvoke $r65.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void <init>()>();

        r81 = $r65;

        r82 = virtualinvoke r81.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.IsoFile build(com.googlecode.mp4parser.authoring.Movie)>(r80);

        $r63 = new java.io.File;

        $r74 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        specialinvoke $r63.<java.io.File: void <init>(java.io.File,java.lang.String)>($r74, "debug_2_timescale.mp4");

        r6 = $r63;

        $r75 = new java.io.FileOutputStream;

        specialinvoke $r75.<java.io.FileOutputStream: void <init>(java.io.File)>(r6);

        r7 = $r75;

        $r72 = virtualinvoke r7.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        virtualinvoke r82.<com.coremedia.iso.IsoFile: void getBox(java.nio.channels.WritableByteChannel)>($r72);

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label02:
        $r16 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder>;

        r83 = virtualinvoke $r16.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.IsoFile build(com.googlecode.mp4parser.authoring.Movie)>(r80);

        $z2 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean debugOutput>;

        if $z2 == 0 goto label03;

        $r69 = new java.io.File;

        $r66 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        specialinvoke $r69.<java.io.File: void <init>(java.io.File,java.lang.String)>($r66, "debug_3_fragmented.mp4");

        r84 = $r69;

        $r67 = new java.io.FileOutputStream;

        specialinvoke $r67.<java.io.FileOutputStream: void <init>(java.io.File)>(r84);

        r85 = $r67;

        $r64 = virtualinvoke r85.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        virtualinvoke r83.<com.coremedia.iso.IsoFile: void getBox(java.nio.channels.WritableByteChannel)>($r64);

        virtualinvoke r85.<java.io.FileOutputStream: void close()>();

     label03:
        $r17 = virtualinvoke r80.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r86 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r23 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (com.googlecode.mp4parser.authoring.Track) $r23;

        $r24 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter>;

        $l3 = interfaceinvoke $r24.<com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r87);

        r88 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        $r26 = interfaceinvoke r87.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l0 = virtualinvoke $r26.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r25 = virtualinvoke r83.<com.coremedia.iso.IsoFile: java.util.List getBoxes()>();

        r8 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

        $r28 = interfaceinvoke r87.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $z5 = $r28 instanceof com.coremedia.iso.boxes.SoundMediaHeaderBox;

        if $z5 == 0 goto label05;

        $r58 = new java.io.File;

        $r68 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        specialinvoke $r58.<java.io.File: void <init>(java.io.File,java.lang.String)>($r68, "audio");

        r9 = $r58;

        goto label07;

     label05:
        $r27 = interfaceinvoke r87.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $z4 = $r27 instanceof com.coremedia.iso.boxes.VideoMediaHeaderBox;

        if $z4 == 0 goto label06;

        $r37 = new java.io.File;

        $r43 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        specialinvoke $r37.<java.io.File: void <init>(java.io.File,java.lang.String)>($r43, "video");

        r9 = $r37;

        goto label07;

     label06:
        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping Track with handler ");

        $r29 = interfaceinvoke r87.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r34 = interfaceinvoke r87.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $r33 = virtualinvoke $r34.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r33.<java.lang.Class: java.lang.String getSimpleName()>();

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r38);

        goto label04;

     label07:
        $r42 = new java.io.File;

        specialinvoke $r42.<java.io.File: void <init>(java.io.File,java.lang.String)>(r9, r88);

        r10 = $r42;

        virtualinvoke r10.<java.io.File: boolean mkdirs()>();

        $r46 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.util.logging.Logger LOG>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created : ");

        $r48 = virtualinvoke r10.<java.io.File: java.lang.String getCanonicalPath()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.util.logging.Logger: void finer(java.lang.String)>($r44);

        $r45 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter>;

        r11 = interfaceinvoke $r45.<com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter: long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r87, r80);

        l1 = 0L;

        i2 = 0;

     label08:
        $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label12;

        $r52 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.coremedia.iso.boxes.Box) $r52;

        $z8 = r12 instanceof com.coremedia.iso.boxes.fragment.MovieFragmentBox;

        if $z8 == 0 goto label11;

        $z9 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean $assertionsDisabled>;

        if $z9 != 0 goto label09;

        $r57 = (com.coremedia.iso.boxes.fragment.MovieFragmentBox) r12;

        $i9 = virtualinvoke $r57.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: int getTrackCount()>();

        if $i9 == 1 goto label09;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>()>();

        throw $r59;

     label09:
        $r53 = (com.coremedia.iso.boxes.fragment.MovieFragmentBox) r12;

        $r50 = virtualinvoke $r53.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: long[] getTrackNumbers()>();

        $l4 = $r50[0];

        $b5 = $l4 cmp l0;

        if $b5 != 0 goto label11;

        $r51 = new java.io.FileOutputStream;

        $r56 = new java.io.File;

        $r55 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        specialinvoke $r56.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, $r55);

        specialinvoke $r51.<java.io.FileOutputStream: void <init>(java.io.File)>($r56);

        r14 = $r51;

        $i8 = i2;

        i2 = i2 + 1;

        $l7 = r11[$i8];

        l1 = l1 + $l7;

        r13 = virtualinvoke r14.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        $r54 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.coremedia.iso.boxes.Box) $r54;

        $z10 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean $assertionsDisabled>;

        if $z10 != 0 goto label10;

        $r60 = interfaceinvoke r15.<com.coremedia.iso.boxes.Box: java.lang.String getType()>();

        $z11 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>("mdat");

        if $z11 != 0 goto label10;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>()>();

        throw $r62;

     label10:
        interfaceinvoke r12.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>(r13);

        interfaceinvoke r15.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>(r13);

        $l6 = virtualinvoke r13.<java.nio.channels.FileChannel: long position()>();

        virtualinvoke r13.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>($l6);

        virtualinvoke r13.<java.nio.channels.FileChannel: void close()>();

     label11:
        goto label08;

     label12:
        goto label04;

     label13:
        $r18 = new java.io.FileWriter;

        $r21 = new java.io.File;

        $r22 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.io.File outputDirectory>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, "Manifest");

        specialinvoke $r18.<java.io.FileWriter: void <init>(java.io.File)>($r21);

        r89 = $r18;

        $r19 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter manifestWriter>;

        $r20 = interfaceinvoke $r19.<com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter: java.lang.String getManifest(com.googlecode.mp4parser.authoring.Movie)>(r80);

        virtualinvoke r89.<java.io.FileWriter: void write(java.lang.String)>($r20);

        virtualinvoke r89.<java.io.FileWriter: void close()>();

        return;
    }

    private com.googlecode.mp4parser.authoring.Movie removeUnknownTracks(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        com.googlecode.mp4parser.authoring.Movie r1, r2, $r5;
        java.util.Iterator r3;
        com.googlecode.mp4parser.authoring.Track r4;
        java.util.List $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r10, $r11, $r16;
        java.util.logging.Logger $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r5 = new com.googlecode.mp4parser.authoring.Movie;

        specialinvoke $r5.<com.googlecode.mp4parser.authoring.Movie: void <init>()>();

        r2 = $r5;

        $r6 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Track) $r7;

        $r8 = "vide";

        $r9 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label2;

        $r10 = "soun";

        $r11 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label3;

     label2:
        virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: void addTrack(com.googlecode.mp4parser.authoring.Track)>(r4);

        goto label4;

     label3:
        $r12 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.util.logging.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed track ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void fine(java.lang.String)>($r16);

     label4:
        goto label1;

     label5:
        return r2;
    }

    public com.googlecode.mp4parser.authoring.Movie correctTimescale(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl r0;
        com.googlecode.mp4parser.authoring.Movie r1, r2, $r5;
        java.util.Iterator r3;
        com.googlecode.mp4parser.authoring.Track r4;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack $r8;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder $r9;
        long $l0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r10;
        long[] $r11;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r5 = new com.googlecode.mp4parser.authoring.Movie;

        specialinvoke $r5.<com.googlecode.mp4parser.authoring.Movie: void <init>()>();

        r2 = $r5;

        $r6 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Track) $r7;

        $r8 = new com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $l0 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: long timeScale>;

        $r9 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder ismvBuilder>;

        $r10 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder getFragmentIntersectionFinder()>();

        $r11 = interfaceinvoke $r10.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r4, r1);

        specialinvoke $r8.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: void <init>(com.googlecode.mp4parser.authoring.Track,long,long[])>(r4, $l0, $r11);

        virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: void addTrack(com.googlecode.mp4parser.authoring.Track)>($r8);

        goto label1;

     label2:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;

        $r0 = class "com/googlecode/mp4parser/authoring/adaptivestreaming/FlatPackageWriterImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: boolean $assertionsDisabled> = $z1;

        $r1 = class "com/googlecode/mp4parser/authoring/adaptivestreaming/FlatPackageWriterImpl";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatPackageWriterImpl: java.util.logging.Logger LOG> = $r3;

        return;
    }
}
