public class com.googlecode.mp4parser.h264.Debug extends java.lang.Object
{
    public static final boolean debug;

    public void <init>()
    {
        com.googlecode.mp4parser.h264.Debug r0;

        r0 := @this: com.googlecode.mp4parser.h264.Debug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void print8x8(int[])
    {
        int[] r0;
        int i0, i1, i2, $i3;
        java.io.PrintStream $r1, $r3;
        java.lang.Object[] $r2;
        java.lang.Integer $r4;

        r0 := @parameter0: int[];

        i0 = 0;

        i1 = 0;

     label1:
        if i1 >= 8 goto label4;

        i2 = 0;

     label2:
        if i2 >= 8 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $i3 = r0[i0];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2[0] = $r4;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%3d, ", $r2);

        i0 = i0 + 1;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static final void print8x8(short[])
    {
        short[] r0;
        int i0, i1, i2;
        java.io.PrintStream $r1, $r3;
        java.lang.Object[] $r2;
        short $s3;
        java.lang.Short $r4;

        r0 := @parameter0: short[];

        i0 = 0;

        i1 = 0;

     label1:
        if i1 >= 8 goto label4;

        i2 = 0;

     label2:
        if i2 >= 8 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $s3 = r0[i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r2[0] = $r4;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%3d, ", $r2);

        i0 = i0 + 1;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static final void print8x8(java.nio.ShortBuffer)
    {
        java.nio.ShortBuffer r0;
        int i0, i1;
        java.io.PrintStream $r1, $r3;
        java.lang.Object[] $r2;
        short $s2;
        java.lang.Short $r4;

        r0 := @parameter0: java.nio.ShortBuffer;

        i0 = 0;

     label1:
        if i0 >= 8 goto label4;

        i1 = 0;

     label2:
        if i1 >= 8 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $s2 = virtualinvoke r0.<java.nio.ShortBuffer: short get()>();

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r2[0] = $r4;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%3d, ", $r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    public static void print(short[])
    {
        short[] r0;
        int i0, i1, i2;
        java.io.PrintStream $r1, $r3;
        java.lang.Object[] $r2;
        short $s3;
        java.lang.Short $r4;

        r0 := @parameter0: short[];

        i0 = 0;

        i1 = 0;

     label1:
        if i1 >= 8 goto label4;

        i2 = 0;

     label2:
        if i2 >= 8 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $s3 = r0[i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r2[0] = $r4;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%3d, ", $r2);

        i0 = i0 + 1;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static transient void trace(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        return;
    }

    public static void print(int)
    {
        int i0;

        i0 := @parameter0: int;

        return;
    }

    public static void print(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    public static void println(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    public static void <clinit>()
    {
        <com.googlecode.mp4parser.h264.Debug: boolean debug> = 0;

        return;
    }
}
