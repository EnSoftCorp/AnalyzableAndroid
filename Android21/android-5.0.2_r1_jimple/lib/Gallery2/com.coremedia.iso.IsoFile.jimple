public class com.coremedia.iso.IsoFile extends com.googlecode.mp4parser.AbstractContainerBox implements java.io.Closeable
{
    protected com.coremedia.iso.BoxParser boxParser;
    java.nio.channels.ReadableByteChannel byteChannel;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.coremedia.iso.IsoFile r0;
        com.coremedia.iso.PropertyBoxParserImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: com.coremedia.iso.IsoFile;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: void <init>(java.lang.String)>("");

        $r1 = new com.coremedia.iso.PropertyBoxParserImpl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<com.coremedia.iso.PropertyBoxParserImpl: void <init>(java.lang.String[])>($r2);

        r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = $r1;

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        com.coremedia.iso.IsoFile r0;
        java.io.File r1;
        com.coremedia.iso.PropertyBoxParserImpl $r2;
        java.lang.String[] $r3;
        java.io.FileInputStream $r4;
        java.nio.channels.FileChannel $r5;
        com.coremedia.iso.BoxParser $r6;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: void <init>(java.lang.String)>("");

        $r2 = new com.coremedia.iso.PropertyBoxParserImpl;

        $r3 = newarray (java.lang.String)[0];

        specialinvoke $r2.<com.coremedia.iso.PropertyBoxParserImpl: void <init>(java.lang.String[])>($r3);

        r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = $r2;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r5 = virtualinvoke $r4.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        r0.<com.coremedia.iso.IsoFile: java.nio.channels.ReadableByteChannel byteChannel> = $r5;

        $r6 = virtualinvoke r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser createBoxParser()>();

        r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = $r6;

        specialinvoke r0.<com.coremedia.iso.IsoFile: void parse()>();

        return;
    }

    public void <init>(java.nio.channels.ReadableByteChannel) throws java.io.IOException
    {
        com.coremedia.iso.IsoFile r0;
        java.nio.channels.ReadableByteChannel r1;
        com.coremedia.iso.PropertyBoxParserImpl $r2;
        java.lang.String[] $r3;
        com.coremedia.iso.BoxParser $r4;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: java.nio.channels.ReadableByteChannel;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: void <init>(java.lang.String)>("");

        $r2 = new com.coremedia.iso.PropertyBoxParserImpl;

        $r3 = newarray (java.lang.String)[0];

        specialinvoke $r2.<com.coremedia.iso.PropertyBoxParserImpl: void <init>(java.lang.String[])>($r3);

        r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = $r2;

        r0.<com.coremedia.iso.IsoFile: java.nio.channels.ReadableByteChannel byteChannel> = r1;

        $r4 = virtualinvoke r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser createBoxParser()>();

        r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = $r4;

        specialinvoke r0.<com.coremedia.iso.IsoFile: void parse()>();

        return;
    }

    public void <init>(java.nio.channels.ReadableByteChannel, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        java.lang.String[] $r0;
        com.coremedia.iso.IsoFile r1;
        java.nio.channels.ReadableByteChannel r2;
        com.coremedia.iso.BoxParser r3;
        com.coremedia.iso.PropertyBoxParserImpl $r4;

        r1 := @this: com.coremedia.iso.IsoFile;

        r2 := @parameter0: java.nio.channels.ReadableByteChannel;

        r3 := @parameter1: com.coremedia.iso.BoxParser;

        specialinvoke r1.<com.googlecode.mp4parser.AbstractContainerBox: void <init>(java.lang.String)>("");

        $r4 = new com.coremedia.iso.PropertyBoxParserImpl;

        $r0 = newarray (java.lang.String)[0];

        specialinvoke $r4.<com.coremedia.iso.PropertyBoxParserImpl: void <init>(java.lang.String[])>($r0);

        r1.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = $r4;

        r1.<com.coremedia.iso.IsoFile: java.nio.channels.ReadableByteChannel byteChannel> = r2;

        r1.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser> = r3;

        specialinvoke r1.<com.coremedia.iso.IsoFile: void parse()>();

        return;
    }

    protected com.coremedia.iso.BoxParser createBoxParser()
    {
        com.coremedia.iso.IsoFile r0;
        com.coremedia.iso.PropertyBoxParserImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: com.coremedia.iso.IsoFile;

        $r1 = new com.coremedia.iso.PropertyBoxParserImpl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<com.coremedia.iso.PropertyBoxParserImpl: void <init>(java.lang.String[])>($r2);

        return $r1;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.IsoFile r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: java.nio.ByteBuffer;

        return;
    }

    public void parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, long, com.coremedia.iso.AbstractBoxParser) throws java.io.IOException
    {
        com.coremedia.iso.IsoFile r0;
        java.nio.channels.ReadableByteChannel r1;
        java.nio.ByteBuffer r2;
        long l0;
        com.coremedia.iso.AbstractBoxParser r3;
        java.io.IOException $r4;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: java.nio.channels.ReadableByteChannel;

        r2 := @parameter1: java.nio.ByteBuffer;

        l0 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.AbstractBoxParser;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("This method is not meant to be called. Use #parse() directly.");

        throw $r4;
    }

    private void parse() throws java.io.IOException
    {
        com.coremedia.iso.IsoFile r0;
        boolean z0;
        com.coremedia.iso.boxes.Box r1;
        java.nio.channels.ReadableByteChannel $r2;
        com.coremedia.iso.BoxParser $r3;
        java.util.List $r4;
        java.io.EOFException $r5;

        r0 := @this: com.coremedia.iso.IsoFile;

        z0 = 0;

     label1:
        if z0 != 0 goto label6;

     label2:
        $r3 = r0.<com.coremedia.iso.IsoFile: com.coremedia.iso.BoxParser boxParser>;

        $r2 = r0.<com.coremedia.iso.IsoFile: java.nio.channels.ReadableByteChannel byteChannel>;

        r1 = interfaceinvoke $r3.<com.coremedia.iso.BoxParser: com.coremedia.iso.boxes.Box parseBox(java.nio.channels.ReadableByteChannel,com.coremedia.iso.boxes.ContainerBox)>($r2, r0);

        if r1 == null goto label3;

        $r4 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label4;

     label3:
        z0 = 1;

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;

        z0 = 1;

        goto label1;

     label6:
        return;

        catch java.io.EOFException from label2 to label4 with label5;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.IsoFile r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1;
        java.util.List $r4, $r5, $r8;
        java.lang.String $r7, $r11;
        java.lang.Object $r9;
        com.coremedia.iso.boxes.Box $r10;

        r0 := @this: com.coremedia.iso.IsoFile;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IsoFile[");

        $r4 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        if $r4 != null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unparsed");

        goto label4;

     label1:
        i0 = 0;

     label2:
        $r5 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        if i0 <= 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

     label3:
        $r8 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (com.coremedia.iso.boxes.Box) $r9;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static byte[] fourCCtoBytes(java.lang.String)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, $i1, $i2;
        char $c3;
        byte $b4;

        r0 := @parameter0: java.lang.String;

        r1 = newarray (byte)[4];

        if r0 == null goto label2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(4, $i1);

        if i0 >= $i2 goto label2;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $b4 = (byte) $c3;

        r1[i0] = $b4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.String bytesToFourCC(byte[])
    {
        byte[] r0, r1, $r3;
        java.io.UnsupportedEncodingException r2, $r5;
        java.lang.String $r4;
        int $i0, $i1;
        java.lang.Error $r6;

        r0 := @parameter0: byte[];

        $r3 = newarray (byte)[4];

        $r3[0] = 0;

        $r3[1] = 0;

        $r3[2] = 0;

        $r3[3] = 0;

        r1 = $r3;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 4);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

     label1:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "ISO-8859-1");

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("Required character encoding is missing", r2);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public long getNumOfBytesToFirstChild()
    {
        com.coremedia.iso.IsoFile r0;

        r0 := @this: com.coremedia.iso.IsoFile;

        return 0L;
    }

    public long getSize()
    {
        com.coremedia.iso.IsoFile r0;
        long l0, $l1;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.Box r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.coremedia.iso.IsoFile;

        l0 = 0L;

        $r3 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.Box) $r4;

        $l1 = interfaceinvoke r2.<com.coremedia.iso.boxes.Box: long getSize()>();

        l0 = l0 + $l1;

        goto label1;

     label2:
        return l0;
    }

    public com.coremedia.iso.IsoFile getIsoFile()
    {
        com.coremedia.iso.IsoFile r0;

        r0 := @this: com.coremedia.iso.IsoFile;

        return r0;
    }

    public com.coremedia.iso.boxes.MovieBox getMovieBox()
    {
        com.coremedia.iso.IsoFile r0;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.Box r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.coremedia.iso.boxes.MovieBox $r5;

        r0 := @this: com.coremedia.iso.IsoFile;

        $r3 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.Box) $r4;

        $z1 = r2 instanceof com.coremedia.iso.boxes.MovieBox;

        if $z1 == 0 goto label2;

        $r5 = (com.coremedia.iso.boxes.MovieBox) r2;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.coremedia.iso.IsoFile r0;
        java.nio.channels.WritableByteChannel r1;
        java.util.Iterator r2;
        com.coremedia.iso.boxes.Box r3;
        long l0, l1, $l2, $l4;
        java.util.List $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        java.nio.channels.FileChannel $r6, $r7;
        byte $b3;
        java.lang.AssertionError $r8;

        r0 := @this: com.coremedia.iso.IsoFile;

        r1 := @parameter0: java.nio.channels.WritableByteChannel;

        $r4 = r0.<com.coremedia.iso.IsoFile: java.util.List boxes>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.coremedia.iso.boxes.Box) $r5;

        $z1 = r1 instanceof java.nio.channels.FileChannel;

        if $z1 == 0 goto label3;

        $r6 = (java.nio.channels.FileChannel) r1;

        l0 = virtualinvoke $r6.<java.nio.channels.FileChannel: long position()>();

        interfaceinvoke r3.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>(r1);

        $r7 = (java.nio.channels.FileChannel) r1;

        $l2 = virtualinvoke $r7.<java.nio.channels.FileChannel: long position()>();

        l1 = $l2 - l0;

        $z2 = <com.coremedia.iso.IsoFile: boolean $assertionsDisabled>;

        if $z2 != 0 goto label2;

        $l4 = interfaceinvoke r3.<com.coremedia.iso.boxes.Box: long getSize()>();

        $b3 = l1 cmp $l4;

        if $b3 == 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        goto label4;

     label3:
        interfaceinvoke r3.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>(r1);

     label4:
        goto label1;

     label5:
        return;
    }

    public void close() throws java.io.IOException
    {
        com.coremedia.iso.IsoFile r0;
        java.nio.channels.ReadableByteChannel $r1;

        r0 := @this: com.coremedia.iso.IsoFile;

        $r1 = r0.<com.coremedia.iso.IsoFile: java.nio.channels.ReadableByteChannel byteChannel>;

        interfaceinvoke $r1.<java.nio.channels.ReadableByteChannel: void close()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/coremedia/iso/IsoFile";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.IsoFile: boolean $assertionsDisabled> = $z1;

        return;
    }
}
