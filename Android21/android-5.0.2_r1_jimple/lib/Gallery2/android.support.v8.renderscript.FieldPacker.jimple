public class android.support.v8.renderscript.FieldPacker extends java.lang.Object
{
    private android.support.v8.renderscript.FieldPackerThunker mN;
    private final byte[] mData;
    private int mPos;
    private int mLen;

    public void <init>(int)
    {
        android.support.v8.renderscript.FieldPacker r0;
        int i0;
        byte[] $r1;
        boolean $z0;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = 0;

        r0.<android.support.v8.renderscript.FieldPacker: int mLen> = i0;

        $r1 = newarray (byte)[i0];

        r0.<android.support.v8.renderscript.FieldPacker: byte[] mData> = $r1;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = new android.support.v8.renderscript.FieldPackerThunker;

        specialinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void <init>(int)>(i0);

        r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN> = $r2;

     label1:
        return;
    }

    public void align(int)
    {
        android.support.v8.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.support.v8.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        byte[] $r6;
        android.support.v8.renderscript.FieldPackerThunker $r7;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r7.<android.support.v8.renderscript.FieldPackerThunker: void align(int)>(i0);

        return;

     label1:
        if i0 <= 0 goto label2;

        $i1 = i0 - 1;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label3;

     label2:
        $r1 = new android.support.v8.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        $i4 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i3 = i0 - 1;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label4;

        $r6 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i6 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i7 = $i6 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i7;

        $r6[$i6] = 0;

        goto label3;

     label4:
        return;
    }

    public void reset()
    {
        android.support.v8.renderscript.FieldPacker r0;
        boolean $z0;
        android.support.v8.renderscript.FieldPackerThunker $r1;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r1.<android.support.v8.renderscript.FieldPackerThunker: void reset()>();

        return;

     label1:
        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = 0;

        return;
    }

    public void reset(int)
    {
        android.support.v8.renderscript.FieldPacker r0;
        int i0, $i1;
        boolean $z0;
        android.support.v8.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        android.support.v8.renderscript.FieldPackerThunker $r6;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r6.<android.support.v8.renderscript.FieldPackerThunker: void reset(int)>(i0);

        return;

     label1:
        if i0 < 0 goto label2;

        $i1 = r0.<android.support.v8.renderscript.FieldPacker: int mLen>;

        if i0 < $i1 goto label3;

     label2:
        $r1 = new android.support.v8.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = i0;

        return;
    }

    public void skip(int)
    {
        android.support.v8.renderscript.FieldPacker r0;
        int i0, i1, $i2, $i3;
        boolean $z0;
        android.support.v8.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        android.support.v8.renderscript.FieldPackerThunker $r6;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r6.<android.support.v8.renderscript.FieldPackerThunker: void skip(int)>(i0);

        return;

     label1:
        $i2 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        i1 = $i2 + i0;

        if i1 < 0 goto label2;

        $i3 = r0.<android.support.v8.renderscript.FieldPacker: int mLen>;

        if i1 <= $i3 goto label3;

     label2:
        $r1 = new android.support.v8.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = i1;

        return;
    }

    public void addI8(byte)
    {
        android.support.v8.renderscript.FieldPacker r0;
        byte b0;
        boolean $z0;
        int $i1, $i2;
        byte[] $r1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        b0 := @parameter0: byte;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI8(byte)>(b0);

        return;

     label1:
        $r1 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i2;

        $r1[$i1] = b0;

        return;
    }

    public void addI16(short)
    {
        android.support.v8.renderscript.FieldPacker r0;
        short s0, $s3, $s7;
        boolean $z0;
        int $i1, $i2, $i5, $i6;
        byte[] $r1, $r2;
        byte $b4, $b8;
        android.support.v8.renderscript.FieldPackerThunker $r3;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        s0 := @parameter0: short;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r3.<android.support.v8.renderscript.FieldPackerThunker: void addI16(short)>(s0);

        return;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void align(int)>(2);

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i2;

        $s3 = s0 & 255;

        $b4 = (byte) $s3;

        $r1[$i1] = $b4;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i5 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i6 = $i5 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i6;

        $s7 = s0 >> 8;

        $b8 = (byte) $s7;

        $r2[$i5] = $b8;

        return;
    }

    public void addI32(int)
    {
        android.support.v8.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19;
        boolean $z0;
        byte[] $r1, $r2, $r3, $r4;
        byte $b4, $b9, $b13, $b18;
        android.support.v8.renderscript.FieldPackerThunker $r5;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r5.<android.support.v8.renderscript.FieldPackerThunker: void addI32(int)>(i0);

        return;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void align(int)>(4);

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i2;

        $i3 = i0 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i5 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i6 = $i5 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i6;

        $i7 = i0 >> 8;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        $r2[$i5] = $b9;

        $r3 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i10 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i11 = $i10 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i11;

        $i12 = i0 >> 16;

        $i14 = $i12 & 255;

        $b13 = (byte) $i14;

        $r3[$i10] = $b13;

        $r4 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i16 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i15 = $i16 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i15;

        $i17 = i0 >> 24;

        $i19 = $i17 & 255;

        $b18 = (byte) $i19;

        $r4[$i16] = $b18;

        return;
    }

    public void addI64(long)
    {
        android.support.v8.renderscript.FieldPacker r0;
        long l0, $l3, $l8, $l9, $l14, $l15, $l20, $l22, $l25, $l26, $l32, $l34, $l40, $l41, $l42, $l47;
        boolean $z0;
        int $i1, $i2, $i4, $i6, $i7, $i10, $i11, $i13, $i17, $i18, $i19, $i21, $i23, $i27, $i28, $i29, $i30, $i33, $i35, $i37, $i39, $i43, $i44, $i46;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b5, $b12, $b16, $b24, $b31, $b36, $b38, $b45;
        android.support.v8.renderscript.FieldPackerThunker $r9;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r9.<android.support.v8.renderscript.FieldPackerThunker: void addI64(long)>(l0);

        return;

     label1:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void align(int)>(8);

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i2;

        $l3 = l0 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i1] = $b5;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i6 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i7 = $i6 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i7;

        $l8 = l0 >> 8;

        $l9 = $l8 & 255L;

        $i10 = (int) $l9;

        $b12 = (byte) $i10;

        $r2[$i6] = $b12;

        $r3 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i11 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i13 = $i11 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i13;

        $l15 = l0 >> 16;

        $l14 = $l15 & 255L;

        $i17 = (int) $l14;

        $b16 = (byte) $i17;

        $r3[$i11] = $b16;

        $r4 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i19 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i18 = $i19 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i18;

        $l20 = l0 >> 24;

        $l22 = $l20 & 255L;

        $i21 = (int) $l22;

        $b24 = (byte) $i21;

        $r4[$i19] = $b24;

        $r5 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i23 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i27 = $i23 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i27;

        $l25 = l0 >> 32;

        $l26 = $l25 & 255L;

        $i30 = (int) $l26;

        $b31 = (byte) $i30;

        $r5[$i23] = $b31;

        $r6 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i28 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i29 = $i28 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i29;

        $l34 = l0 >> 40;

        $l32 = $l34 & 255L;

        $i33 = (int) $l32;

        $b36 = (byte) $i33;

        $r6[$i28] = $b36;

        $r7 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i37 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i35 = $i37 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i35;

        $l41 = l0 >> 48;

        $l40 = $l41 & 255L;

        $i39 = (int) $l40;

        $b38 = (byte) $i39;

        $r7[$i37] = $b38;

        $r8 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i44 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i43 = $i44 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i43;

        $l42 = l0 >> 56;

        $l47 = $l42 & 255L;

        $i46 = (int) $l47;

        $b45 = (byte) $i46;

        $r8[$i44] = $b45;

        return;
    }

    public void addU8(short)
    {
        android.support.v8.renderscript.FieldPacker r0;
        short s0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        int $i1, $i2;
        byte[] $r2;
        byte $b3;
        android.support.v8.renderscript.FieldPackerThunker $r3;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        s0 := @parameter0: short;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r3.<android.support.v8.renderscript.FieldPackerThunker: void addU8(short)>(s0);

        return;

     label1:
        if s0 < 0 goto label2;

        if s0 <= 255 goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r1;

     label3:
        $r2 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i2;

        $b3 = (byte) s0;

        $r2[$i1] = $b3;

        return;
    }

    public void addU16(int)
    {
        android.support.v8.renderscript.FieldPacker r0;
        int i0, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        byte[] $r7, $r8;
        byte $b5, $b9;
        android.support.v8.renderscript.FieldPackerThunker $r9;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r9.<android.support.v8.renderscript.FieldPackerThunker: void addU16(int)>(i0);

        return;

     label1:
        if i0 < 0 goto label2;

        if i0 <= 65535 goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU16( ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;

     label3:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void align(int)>(2);

        $r7 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i2 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i3 = $i2 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i3;

        $i4 = i0 & 255;

        $b5 = (byte) $i4;

        $r7[$i2] = $b5;

        $r8 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i6 = $i7 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i6;

        $i8 = i0 >> 8;

        $b9 = (byte) $i8;

        $r8[$i7] = $b9;

        return;
    }

    public void addU32(long)
    {
        android.support.v8.renderscript.FieldPacker r0;
        long l0, $l6, $l11, $l13, $l17, $l18, $l23, $l25;
        boolean $z0;
        byte $b1, $b3, $b7, $b15, $b22, $b26;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        int $i4, $i5, $i8, $i9, $i10, $i12, $i14, $i16, $i19, $i20, $i21, $i24;
        byte[] $r7, $r8, $r9, $r10;
        android.support.v8.renderscript.FieldPackerThunker $r11;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r11.<android.support.v8.renderscript.FieldPackerThunker: void addU32(long)>(l0);

        return;

     label1:
        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label2;

        $b3 = l0 cmp 4294967295L;

        if $b3 <= 0 goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU32( ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;

     label3:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void align(int)>(4);

        $r7 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i4 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i5 = $i4 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i5;

        $l6 = l0 & 255L;

        $i8 = (int) $l6;

        $b7 = (byte) $i8;

        $r7[$i4] = $b7;

        $r8 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i10 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i9 = $i10 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i9;

        $l11 = l0 >> 8;

        $l13 = $l11 & 255L;

        $i12 = (int) $l13;

        $b15 = (byte) $i12;

        $r8[$i10] = $b15;

        $r9 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i14 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i16 = $i14 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i16;

        $l18 = l0 >> 16;

        $l17 = $l18 & 255L;

        $i21 = (int) $l17;

        $b22 = (byte) $i21;

        $r9[$i14] = $b22;

        $r10 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i19 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i20 = $i19 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i20;

        $l25 = l0 >> 24;

        $l23 = $l25 & 255L;

        $i24 = (int) $l23;

        $b26 = (byte) $i24;

        $r10[$i19] = $b26;

        return;
    }

    public void addU64(long)
    {
        android.support.v8.renderscript.FieldPacker r0;
        long l0, $l4, $l9, $l10, $l15, $l17, $l21, $l22, $l25, $l30, $l32, $l33, $l40, $l41, $l47, $l48;
        boolean $z0;
        byte $b1, $b6, $b11, $b19, $b23, $b28, $b38, $b44, $b45;
        int $i2, $i3, $i5, $i7, $i8, $i12, $i13, $i14, $i16, $i18, $i20, $i24, $i26, $i27, $i29, $i31, $i34, $i35, $i36, $i37, $i39, $i42, $i43, $i46;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        android.support.v8.renderscript.FieldPackerThunker $r12;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r12.<android.support.v8.renderscript.FieldPackerThunker: void addU64(long)>(l0);

        return;

     label1:
        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU64( ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r14);

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r15;

     label2:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void align(int)>(8);

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i2 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i3 = $i2 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i3;

        $l4 = l0 & 255L;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        $r1[$i2] = $b6;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i8 = $i7 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i8;

        $l9 = l0 >> 8;

        $l10 = $l9 & 255L;

        $i12 = (int) $l10;

        $b11 = (byte) $i12;

        $r2[$i7] = $b11;

        $r3 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i14 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i13 = $i14 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i13;

        $l15 = l0 >> 16;

        $l17 = $l15 & 255L;

        $i16 = (int) $l17;

        $b19 = (byte) $i16;

        $r3[$i14] = $b19;

        $r4 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i18 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i20 = $i18 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i20;

        $l22 = l0 >> 24;

        $l21 = $l22 & 255L;

        $i24 = (int) $l21;

        $b23 = (byte) $i24;

        $r4[$i18] = $b23;

        $r5 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i26 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i27 = $i26 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i27;

        $l25 = l0 >> 32;

        $l30 = $l25 & 255L;

        $i31 = (int) $l30;

        $b28 = (byte) $i31;

        $r5[$i26] = $b28;

        $r6 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i29 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i34 = $i29 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i34;

        $l32 = l0 >> 40;

        $l33 = $l32 & 255L;

        $i37 = (int) $l33;

        $b38 = (byte) $i37;

        $r6[$i29] = $b38;

        $r7 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i35 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i36 = $i35 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i36;

        $l41 = l0 >> 48;

        $l40 = $l41 & 255L;

        $i39 = (int) $l40;

        $b44 = (byte) $i39;

        $r7[$i35] = $b44;

        $r8 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        $i43 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        $i42 = $i43 + 1;

        r0.<android.support.v8.renderscript.FieldPacker: int mPos> = $i42;

        $l48 = l0 >> 56;

        $l47 = $l48 & 255L;

        $i46 = (int) $l47;

        $b45 = (byte) $i46;

        $r8[$i43] = $b45;

        return;
    }

    public void addF32(float)
    {
        android.support.v8.renderscript.FieldPacker r0;
        float f0;
        boolean $z0;
        int $i0;
        android.support.v8.renderscript.FieldPackerThunker $r1;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        f0 := @parameter0: float;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r1.<android.support.v8.renderscript.FieldPackerThunker: void addF32(float)>(f0);

        return;

     label1:
        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i0);

        return;
    }

    public void addF64(double)
    {
        android.support.v8.renderscript.FieldPacker r0;
        double d0;
        boolean $z0;
        long $l0;
        android.support.v8.renderscript.FieldPackerThunker $r1;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        d0 := @parameter0: double;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r1.<android.support.v8.renderscript.FieldPackerThunker: void addF64(double)>(d0);

        return;

     label1:
        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l0);

        return;
    }

    public void addObj(android.support.v8.renderscript.BaseObj)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.BaseObj r1;
        boolean $z0;
        int $i0;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.BaseObj;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addObj(android.support.v8.renderscript.BaseObj)>(r1);

        return;

     label1:
        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<android.support.v8.renderscript.BaseObj: int getID(android.support.v8.renderscript.RenderScript)>(null);

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i0);

        goto label3;

     label2:
        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>(0);

     label3:
        return;
    }

    public void addF32(android.support.v8.renderscript.Float2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Float2 r1;
        boolean $z0;
        float $f0, $f1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Float2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addF32(android.support.v8.renderscript.Float2)>(r1);

        return;

     label1:
        $f0 = r1.<android.support.v8.renderscript.Float2: float x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.support.v8.renderscript.Float2: float y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f1);

        return;
    }

    public void addF32(android.support.v8.renderscript.Float3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Float3 r1;
        boolean $z0;
        float $f0, $f1, $f2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Float3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addF32(android.support.v8.renderscript.Float3)>(r1);

        return;

     label1:
        $f0 = r1.<android.support.v8.renderscript.Float3: float x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.support.v8.renderscript.Float3: float y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.support.v8.renderscript.Float3: float z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f2);

        return;
    }

    public void addF32(android.support.v8.renderscript.Float4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Float4 r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Float4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addF32(android.support.v8.renderscript.Float4)>(r1);

        return;

     label1:
        $f0 = r1.<android.support.v8.renderscript.Float4: float x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.support.v8.renderscript.Float4: float y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.support.v8.renderscript.Float4: float z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f2);

        $f3 = r1.<android.support.v8.renderscript.Float4: float w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f3);

        return;
    }

    public void addF64(android.support.v8.renderscript.Double2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Double2 r1;
        boolean $z0;
        double $d0, $d1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Double2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addF64(android.support.v8.renderscript.Double2)>(r1);

        return;

     label1:
        $d0 = r1.<android.support.v8.renderscript.Double2: double x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.support.v8.renderscript.Double2: double y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d1);

        return;
    }

    public void addF64(android.support.v8.renderscript.Double3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Double3 r1;
        boolean $z0;
        double $d0, $d1, $d2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Double3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addF64(android.support.v8.renderscript.Double3)>(r1);

        return;

     label1:
        $d0 = r1.<android.support.v8.renderscript.Double3: double x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.support.v8.renderscript.Double3: double y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.support.v8.renderscript.Double3: double z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d2);

        return;
    }

    public void addF64(android.support.v8.renderscript.Double4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Double4 r1;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Double4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addF64(android.support.v8.renderscript.Double4)>(r1);

        return;

     label1:
        $d0 = r1.<android.support.v8.renderscript.Double4: double x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.support.v8.renderscript.Double4: double y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.support.v8.renderscript.Double4: double z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d2);

        $d3 = r1.<android.support.v8.renderscript.Double4: double w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF64(double)>($d3);

        return;
    }

    public void addI8(android.support.v8.renderscript.Byte2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Byte2 r1;
        boolean $z0;
        byte $b0, $b1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Byte2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI8(android.support.v8.renderscript.Byte2)>(r1);

        return;

     label1:
        $b0 = r1.<android.support.v8.renderscript.Byte2: byte x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.support.v8.renderscript.Byte2: byte y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b1);

        return;
    }

    public void addI8(android.support.v8.renderscript.Byte3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Byte3 r1;
        boolean $z0;
        byte $b0, $b1, $b2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Byte3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI8(android.support.v8.renderscript.Byte3)>(r1);

        return;

     label1:
        $b0 = r1.<android.support.v8.renderscript.Byte3: byte x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.support.v8.renderscript.Byte3: byte y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.support.v8.renderscript.Byte3: byte z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b2);

        return;
    }

    public void addI8(android.support.v8.renderscript.Byte4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Byte4 r1;
        boolean $z0;
        byte $b0, $b1, $b2, $b3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Byte4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI8(android.support.v8.renderscript.Byte4)>(r1);

        return;

     label1:
        $b0 = r1.<android.support.v8.renderscript.Byte4: byte x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.support.v8.renderscript.Byte4: byte y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.support.v8.renderscript.Byte4: byte z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b2);

        $b3 = r1.<android.support.v8.renderscript.Byte4: byte w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b3);

        return;
    }

    public void addU8(android.support.v8.renderscript.Short2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Short2 r1;
        boolean $z0;
        short $s0, $s1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Short2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU8(android.support.v8.renderscript.Short2)>(r1);

        return;

     label1:
        $s0 = r1.<android.support.v8.renderscript.Short2: short x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.support.v8.renderscript.Short2: short y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s1);

        return;
    }

    public void addU8(android.support.v8.renderscript.Short3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Short3 r1;
        boolean $z0;
        short $s0, $s1, $s2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Short3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU8(android.support.v8.renderscript.Short3)>(r1);

        return;

     label1:
        $s0 = r1.<android.support.v8.renderscript.Short3: short x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.support.v8.renderscript.Short3: short y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.support.v8.renderscript.Short3: short z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s2);

        return;
    }

    public void addU8(android.support.v8.renderscript.Short4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Short4 r1;
        boolean $z0;
        short $s0, $s1, $s2, $s3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Short4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU8(android.support.v8.renderscript.Short4)>(r1);

        return;

     label1:
        $s0 = r1.<android.support.v8.renderscript.Short4: short x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.support.v8.renderscript.Short4: short y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.support.v8.renderscript.Short4: short z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s2);

        $s3 = r1.<android.support.v8.renderscript.Short4: short w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU8(short)>($s3);

        return;
    }

    public void addI16(android.support.v8.renderscript.Short2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Short2 r1;
        boolean $z0;
        short $s0, $s1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Short2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI16(android.support.v8.renderscript.Short2)>(r1);

        return;

     label1:
        $s0 = r1.<android.support.v8.renderscript.Short2: short x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.support.v8.renderscript.Short2: short y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s1);

        return;
    }

    public void addI16(android.support.v8.renderscript.Short3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Short3 r1;
        boolean $z0;
        short $s0, $s1, $s2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Short3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI16(android.support.v8.renderscript.Short3)>(r1);

        return;

     label1:
        $s0 = r1.<android.support.v8.renderscript.Short3: short x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.support.v8.renderscript.Short3: short y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.support.v8.renderscript.Short3: short z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s2);

        return;
    }

    public void addI16(android.support.v8.renderscript.Short4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Short4 r1;
        boolean $z0;
        short $s0, $s1, $s2, $s3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Short4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI16(android.support.v8.renderscript.Short4)>(r1);

        return;

     label1:
        $s0 = r1.<android.support.v8.renderscript.Short4: short x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.support.v8.renderscript.Short4: short y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.support.v8.renderscript.Short4: short z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s2);

        $s3 = r1.<android.support.v8.renderscript.Short4: short w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI16(short)>($s3);

        return;
    }

    public void addU16(android.support.v8.renderscript.Int2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Int2 r1;
        boolean $z0;
        int $i0, $i1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Int2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU16(android.support.v8.renderscript.Int2)>(r1);

        return;

     label1:
        $i0 = r1.<android.support.v8.renderscript.Int2: int x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.support.v8.renderscript.Int2: int y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i1);

        return;
    }

    public void addU16(android.support.v8.renderscript.Int3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Int3 r1;
        boolean $z0;
        int $i0, $i1, $i2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Int3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU16(android.support.v8.renderscript.Int3)>(r1);

        return;

     label1:
        $i0 = r1.<android.support.v8.renderscript.Int3: int x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.support.v8.renderscript.Int3: int y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.support.v8.renderscript.Int3: int z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i2);

        return;
    }

    public void addU16(android.support.v8.renderscript.Int4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Int4 r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Int4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU16(android.support.v8.renderscript.Int4)>(r1);

        return;

     label1:
        $i0 = r1.<android.support.v8.renderscript.Int4: int x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.support.v8.renderscript.Int4: int y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.support.v8.renderscript.Int4: int z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i2);

        $i3 = r1.<android.support.v8.renderscript.Int4: int w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU16(int)>($i3);

        return;
    }

    public void addI32(android.support.v8.renderscript.Int2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Int2 r1;
        boolean $z0;
        int $i0, $i1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Int2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI32(android.support.v8.renderscript.Int2)>(r1);

        return;

     label1:
        $i0 = r1.<android.support.v8.renderscript.Int2: int x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.support.v8.renderscript.Int2: int y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i1);

        return;
    }

    public void addI32(android.support.v8.renderscript.Int3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Int3 r1;
        boolean $z0;
        int $i0, $i1, $i2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Int3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI32(android.support.v8.renderscript.Int3)>(r1);

        return;

     label1:
        $i0 = r1.<android.support.v8.renderscript.Int3: int x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.support.v8.renderscript.Int3: int y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.support.v8.renderscript.Int3: int z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i2);

        return;
    }

    public void addI32(android.support.v8.renderscript.Int4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Int4 r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Int4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI32(android.support.v8.renderscript.Int4)>(r1);

        return;

     label1:
        $i0 = r1.<android.support.v8.renderscript.Int4: int x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.support.v8.renderscript.Int4: int y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.support.v8.renderscript.Int4: int z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i2);

        $i3 = r1.<android.support.v8.renderscript.Int4: int w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI32(int)>($i3);

        return;
    }

    public void addU32(android.support.v8.renderscript.Long2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long2 r1;
        boolean $z0;
        long $l0, $l1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU32(android.support.v8.renderscript.Long2)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long2: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long2: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l1);

        return;
    }

    public void addU32(android.support.v8.renderscript.Long3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long3 r1;
        boolean $z0;
        long $l0, $l1, $l2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU32(android.support.v8.renderscript.Long3)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long3: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long3: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.support.v8.renderscript.Long3: long z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l2);

        return;
    }

    public void addU32(android.support.v8.renderscript.Long4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long4 r1;
        boolean $z0;
        long $l0, $l1, $l2, $l3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU32(android.support.v8.renderscript.Long4)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long4: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long4: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.support.v8.renderscript.Long4: long z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l2);

        $l3 = r1.<android.support.v8.renderscript.Long4: long w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU32(long)>($l3);

        return;
    }

    public void addI64(android.support.v8.renderscript.Long2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long2 r1;
        boolean $z0;
        long $l0, $l1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI64(android.support.v8.renderscript.Long2)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long2: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long2: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l1);

        return;
    }

    public void addI64(android.support.v8.renderscript.Long3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long3 r1;
        boolean $z0;
        long $l0, $l1, $l2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI64(android.support.v8.renderscript.Long3)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long3: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long3: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.support.v8.renderscript.Long3: long z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l2);

        return;
    }

    public void addI64(android.support.v8.renderscript.Long4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long4 r1;
        boolean $z0;
        long $l0, $l1, $l2, $l3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addI64(android.support.v8.renderscript.Long4)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long4: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long4: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.support.v8.renderscript.Long4: long z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l2);

        $l3 = r1.<android.support.v8.renderscript.Long4: long w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI64(long)>($l3);

        return;
    }

    public void addU64(android.support.v8.renderscript.Long2)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long2 r1;
        boolean $z0;
        long $l0, $l1;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long2;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU64(android.support.v8.renderscript.Long2)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long2: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long2: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l1);

        return;
    }

    public void addU64(android.support.v8.renderscript.Long3)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long3 r1;
        boolean $z0;
        long $l0, $l1, $l2;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long3;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU64(android.support.v8.renderscript.Long3)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long3: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long3: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.support.v8.renderscript.Long3: long z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l2);

        return;
    }

    public void addU64(android.support.v8.renderscript.Long4)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Long4 r1;
        boolean $z0;
        long $l0, $l1, $l2, $l3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Long4;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: void addU64(android.support.v8.renderscript.Long4)>(r1);

        return;

     label1:
        $l0 = r1.<android.support.v8.renderscript.Long4: long x>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.support.v8.renderscript.Long4: long y>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.support.v8.renderscript.Long4: long z>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l2);

        $l3 = r1.<android.support.v8.renderscript.Long4: long w>;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addU64(long)>($l3);

        return;
    }

    public void addMatrix(android.support.v8.renderscript.Matrix4f)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Matrix4f r1;
        int i0, $i1;
        boolean $z0;
        float[] $r2, $r3;
        float $f0;
        android.support.v8.renderscript.FieldPackerThunker $r4;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Matrix4f;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r4.<android.support.v8.renderscript.FieldPackerThunker: void addMatrix(android.support.v8.renderscript.Matrix4f)>(r1);

        return;

     label1:
        i0 = 0;

     label2:
        $r2 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void addMatrix(android.support.v8.renderscript.Matrix3f)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Matrix3f r1;
        int i0, $i1;
        boolean $z0;
        float[] $r2, $r3;
        float $f0;
        android.support.v8.renderscript.FieldPackerThunker $r4;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Matrix3f;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r4.<android.support.v8.renderscript.FieldPackerThunker: void addMatrix(android.support.v8.renderscript.Matrix3f)>(r1);

        return;

     label1:
        i0 = 0;

     label2:
        $r2 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void addMatrix(android.support.v8.renderscript.Matrix2f)
    {
        android.support.v8.renderscript.FieldPacker r0;
        android.support.v8.renderscript.Matrix2f r1;
        int i0, $i1;
        boolean $z0;
        float[] $r2, $r3;
        float $f0;
        android.support.v8.renderscript.FieldPackerThunker $r4;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        r1 := @parameter0: android.support.v8.renderscript.Matrix2f;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r4.<android.support.v8.renderscript.FieldPackerThunker: void addMatrix(android.support.v8.renderscript.Matrix2f)>(r1);

        return;

     label1:
        i0 = 0;

     label2:
        $r2 = r1.<android.support.v8.renderscript.Matrix2f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = r1.<android.support.v8.renderscript.Matrix2f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void addBoolean(boolean)
    {
        android.support.v8.renderscript.FieldPacker r0;
        boolean z0, $z1, $z2;
        byte $b0;
        android.support.v8.renderscript.FieldPackerThunker $r1;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        z0 := @parameter0: boolean;

        $z1 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        virtualinvoke $r1.<android.support.v8.renderscript.FieldPackerThunker: void addBoolean(boolean)>(z0);

        return;

     label1:
        if z0 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $b0 = (byte) $z2;

        virtualinvoke r0.<android.support.v8.renderscript.FieldPacker: void addI8(byte)>($b0);

        return;
    }

    public final byte[] getData()
    {
        android.support.v8.renderscript.FieldPacker r0;
        boolean $z0;
        byte[] $r1, $r3;
        android.support.v8.renderscript.FieldPackerThunker $r2;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        $r3 = virtualinvoke $r2.<android.support.v8.renderscript.FieldPackerThunker: byte[] getData()>();

        return $r3;

     label1:
        $r1 = r0.<android.support.v8.renderscript.FieldPacker: byte[] mData>;

        return $r1;
    }

    public int getPos()
    {
        android.support.v8.renderscript.FieldPacker r0;
        boolean $z0;
        int $i0, $i1;
        android.support.v8.renderscript.FieldPackerThunker $r1;

        r0 := @this: android.support.v8.renderscript.FieldPacker;

        $z0 = staticinvoke <android.support.v8.renderscript.RenderScript: boolean shouldThunk()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v8.renderscript.FieldPacker: android.support.v8.renderscript.FieldPackerThunker mN>;

        $i1 = virtualinvoke $r1.<android.support.v8.renderscript.FieldPackerThunker: int getPos()>();

        return $i1;

     label1:
        $i0 = r0.<android.support.v8.renderscript.FieldPacker: int mPos>;

        return $i0;
    }
}
