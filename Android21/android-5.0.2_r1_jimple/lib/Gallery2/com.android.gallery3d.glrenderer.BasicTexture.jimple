public abstract class com.android.gallery3d.glrenderer.BasicTexture extends java.lang.Object implements com.android.gallery3d.glrenderer.Texture
{
    private static final java.lang.String TAG;
    protected static final int UNSPECIFIED;
    protected static final int STATE_UNLOADED;
    protected static final int STATE_LOADED;
    protected static final int STATE_ERROR;
    private static final int MAX_TEXTURE_SIZE;
    protected int mId;
    protected int mState;
    protected int mWidth;
    protected int mHeight;
    protected int mTextureWidth;
    protected int mTextureHeight;
    private boolean mHasBorder;
    protected com.android.gallery3d.glrenderer.GLCanvas mCanvasRef;
    private static java.util.WeakHashMap sAllTextures;
    private static java.lang.ThreadLocal sInFinalizer;

    protected void <init>(com.android.gallery3d.glrenderer.GLCanvas, int, int)
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        int i0, i1;
        java.util.WeakHashMap r2, $r4, $r5;
        java.lang.Throwable r3, $r7;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mId> = -1;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mWidth> = -1;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mHeight> = -1;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: com.android.gallery3d.glrenderer.GLCanvas mCanvasRef> = null;

        virtualinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)>(r1);

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mId> = i0;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mState> = i1;

        $r4 = <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures>;

        virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, null);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void <init>()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        specialinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: void <init>(com.android.gallery3d.glrenderer.GLCanvas,int,int)>(null, 0, 0);

        return;
    }

    protected void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        com.android.gallery3d.glrenderer.GLCanvas r1;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: com.android.gallery3d.glrenderer.GLCanvas mCanvasRef> = r1;

        return;
    }

    public void setSize(int, int)
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4;
        java.lang.Exception $r5;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mWidth> = i0;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mHeight> = i1;

        if i0 <= 0 goto label1;

        $i8 = staticinvoke <com.android.gallery3d.common.Utils: int nextPowerOf2(int)>(i0);

        goto label2;

     label1:
        $i8 = 0;

     label2:
        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureWidth> = $i8;

        if i1 <= 0 goto label3;

        $i6 = staticinvoke <com.android.gallery3d.common.Utils: int nextPowerOf2(int)>(i1);

        goto label4;

     label3:
        $i6 = 0;

     label4:
        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureHeight> = $i6;

        $i2 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureWidth>;

        if $i2 > 4096 goto label5;

        $i7 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureHeight>;

        if $i7 <= 4096 goto label6;

     label5:
        $r1 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureWidth>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[0] = $r2;

        $i4 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureHeight>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("texture is too large: %d x %d", $r1);

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BasicTexture", $r4, $r5);

     label6:
        return;
    }

    public boolean isFlippedVertically()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        return 0;
    }

    public int getId()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int $i0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mId>;

        return $i0;
    }

    public int getWidth()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int $i0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mWidth>;

        return $i0;
    }

    public int getHeight()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int $i0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mHeight>;

        return $i0;
    }

    public int getTextureWidth()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int $i0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureWidth>;

        return $i0;
    }

    public int getTextureHeight()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int $i0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mTextureHeight>;

        return $i0;
    }

    public boolean hasBorder()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        boolean $z0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $z0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: boolean mHasBorder>;

        return $z0;
    }

    protected void setBorder(boolean)
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        boolean z0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        z0 := @parameter0: boolean;

        r0.<com.android.gallery3d.glrenderer.BasicTexture: boolean mHasBorder> = z0;

        return;
    }

    public void draw(com.android.gallery3d.glrenderer.GLCanvas, int, int)
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: int getWidth()>();

        $i3 = virtualinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: int getHeight()>();

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>(r0, i0, i1, $i2, $i3);

        return;
    }

    public void draw(com.android.gallery3d.glrenderer.GLCanvas, int, int, int, int)
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        int i0, i1, i2, i3;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        r1 := @parameter0: com.android.gallery3d.glrenderer.GLCanvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>(r0, i0, i1, i2, i3);

        return;
    }

    protected abstract boolean onBind(com.android.gallery3d.glrenderer.GLCanvas);

    protected abstract int getTarget();

    public boolean isLoaded()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mState>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void recycle()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        specialinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: void freeResource()>();

        return;
    }

    public void yield()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        specialinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: void freeResource()>();

        return;
    }

    private void freeResource()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        com.android.gallery3d.glrenderer.GLCanvas r1;
        int $i0;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        r1 = r0.<com.android.gallery3d.glrenderer.BasicTexture: com.android.gallery3d.glrenderer.GLCanvas mCanvasRef>;

        if r1 == null goto label1;

        $i0 = r0.<com.android.gallery3d.glrenderer.BasicTexture: int mId>;

        if $i0 == -1 goto label1;

        interfaceinvoke r1.<com.android.gallery3d.glrenderer.GLCanvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>(r0);

        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mId> = -1;

     label1:
        r0.<com.android.gallery3d.glrenderer.BasicTexture: int mState> = 0;

        virtualinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)>(null);

        return;
    }

    protected void finalize()
    {
        com.android.gallery3d.glrenderer.BasicTexture r0;
        java.lang.ThreadLocal $r1, $r2;

        r0 := @this: com.android.gallery3d.glrenderer.BasicTexture;

        $r1 = <com.android.gallery3d.glrenderer.BasicTexture: java.lang.ThreadLocal sInFinalizer>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(class "com/android/gallery3d/glrenderer/BasicTexture");

        virtualinvoke r0.<com.android.gallery3d.glrenderer.BasicTexture: void recycle()>();

        $r2 = <com.android.gallery3d.glrenderer.BasicTexture: java.lang.ThreadLocal sInFinalizer>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        return;
    }

    public static boolean inFinalizer()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 = <com.android.gallery3d.glrenderer.BasicTexture: java.lang.ThreadLocal sInFinalizer>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void yieldAllTextures()
    {
        java.util.WeakHashMap r0, $r4, $r5;
        java.util.Iterator r1;
        com.android.gallery3d.glrenderer.BasicTexture r2;
        java.lang.Throwable r3, $r8;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;

        $r4 = <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures>;

        r0 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.gallery3d.glrenderer.BasicTexture) $r7;

        virtualinvoke r2.<com.android.gallery3d.glrenderer.BasicTexture: void yield()>();

        goto label2;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r0;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void invalidateAllTextures()
    {
        java.util.WeakHashMap r0, $r4, $r5;
        java.util.Iterator r1;
        com.android.gallery3d.glrenderer.BasicTexture r2;
        java.lang.Throwable r3, $r8;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7;

        $r4 = <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures>;

        r0 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.gallery3d.glrenderer.BasicTexture) $r7;

        r2.<com.android.gallery3d.glrenderer.BasicTexture: int mState> = 0;

        virtualinvoke r2.<com.android.gallery3d.glrenderer.BasicTexture: void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)>(null);

        goto label2;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r0;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;
        java.lang.ThreadLocal $r1;

        <com.android.gallery3d.glrenderer.BasicTexture: int MAX_TEXTURE_SIZE> = 4096;

        <com.android.gallery3d.glrenderer.BasicTexture: int STATE_ERROR> = -1;

        <com.android.gallery3d.glrenderer.BasicTexture: int STATE_LOADED> = 1;

        <com.android.gallery3d.glrenderer.BasicTexture: int STATE_UNLOADED> = 0;

        <com.android.gallery3d.glrenderer.BasicTexture: int UNSPECIFIED> = -1;

        <com.android.gallery3d.glrenderer.BasicTexture: java.lang.String TAG> = "BasicTexture";

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <com.android.gallery3d.glrenderer.BasicTexture: java.util.WeakHashMap sAllTextures> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <com.android.gallery3d.glrenderer.BasicTexture: java.lang.ThreadLocal sInFinalizer> = $r1;

        return;
    }
}
