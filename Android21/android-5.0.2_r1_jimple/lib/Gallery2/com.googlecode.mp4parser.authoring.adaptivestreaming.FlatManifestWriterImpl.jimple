public class com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl extends com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter
{
    private static final java.util.logging.Logger LOG;
    static final boolean $assertionsDisabled;

    protected void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)>(r1);

        return;
    }

    protected org.w3c.dom.Document customizeManifest(org.w3c.dom.Document)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        org.w3c.dom.Document r1;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: org.w3c.dom.Document;

        return r1;
    }

    public java.lang.String getManifest(com.googlecode.mp4parser.authoring.Movie) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        java.util.LinkedList r2, r3, $r13, $r16;
        long l0, l1, $l11, $l13, $l14, $l18, $l19, $l21, $l23, $l27, $l30;
        java.util.Iterator r4;
        com.googlecode.mp4parser.authoring.Track r5;
        com.coremedia.iso.boxes.SampleDescriptionBox r6, r94;
        org.w3c.dom.Element r7, r8, r10, r12, r99, r100, r102;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i15, $i16, $i17, $i20, $i22, $i24, i31, i32, i33;
        com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality r9, $r80;
        javax.xml.transform.Transformer r11;
        javax.xml.transform.TransformerConfigurationException r14, $r91;
        java.util.List $r15;
        boolean $z0, $z2, $z3, $z5, $z6;
        java.lang.String $r17, $r21, $r23, $r25, $r31, $r34, $r35, $r36, $r37, $r42, $r43, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r53, $r54, $r57, $r59, $r60, $r61, $r62, $r63, $r64, $r71;
        org.w3c.dom.Comment $r20;
        long[] $r22, $r26, $r28, $r33, $r38, $r40, $r58, $r65, $r66, $r75, $r76, $r77, $r84;
        javax.xml.transform.dom.DOMSource $r27, r103;
        javax.xml.transform.stream.StreamResult $r29, r105;
        java.io.StringWriter $r30, r104;
        java.lang.StringBuffer $r32;
        java.lang.Object $r41, $r56, $r73;
        com.coremedia.iso.boxes.sampleentry.SampleEntry $r67, $r78;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r68, r101;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry $r69;
        byte $b25, $b26, $b28, $b29;
        com.coremedia.iso.boxes.Box $r72, $r74;
        com.coremedia.iso.boxes.sampleentry.VisualSampleEntry $r79;
        com.googlecode.mp4parser.authoring.TrackMetaData $r81, $r83, $r90, $r92;
        java.lang.AssertionError $r82, $r93;
        javax.xml.parsers.ParserConfigurationException $r85, r97;
        java.io.IOException $r86, $r88, $r89;
        javax.xml.transform.TransformerException $r87, r107;
        javax.xml.parsers.DocumentBuilderFactory r95;
        javax.xml.parsers.DocumentBuilder r96;
        org.w3c.dom.Document r98;
        javax.xml.transform.TransformerFactory r106;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r2 = $r13;

        l0 = -1L;

        $r16 = new java.util.LinkedList;

        specialinvoke $r16.<java.util.LinkedList: void <init>()>();

        r3 = $r16;

        l1 = -1L;

        $r15 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r73 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r73;

        $r72 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $z2 = $r72 instanceof com.coremedia.iso.boxes.VideoMediaHeaderBox;

        if $z2 == 0 goto label03;

        $r84 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $r76 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r5, r1);

        $r77 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] checkFragmentsAlign(long[],long[])>($r84, $r76);

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations> = $r77;

        r6 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r78 = virtualinvoke r6.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.SampleEntry getSampleEntry()>();

        $r79 = (com.coremedia.iso.boxes.sampleentry.VisualSampleEntry) $r78;

        $r80 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality getVideoQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.VisualSampleEntry)>(r5, $r79);

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r80);

        $b26 = l0 cmp -1L;

        if $b26 != 0 goto label02;

        $r92 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l0 = virtualinvoke $r92.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        goto label03;

     label02:
        $z6 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: boolean $assertionsDisabled>;

        if $z6 != 0 goto label03;

        $r90 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l30 = virtualinvoke $r90.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $b29 = l0 cmp $l30;

        if $b29 == 0 goto label03;

        $r93 = new java.lang.AssertionError;

        specialinvoke $r93.<java.lang.AssertionError: void <init>()>();

        throw $r93;

     label03:
        $r74 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        $z3 = $r74 instanceof com.coremedia.iso.boxes.SoundMediaHeaderBox;

        if $z3 == 0 goto label05;

        $r75 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $r66 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r5, r1);

        $r65 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] checkFragmentsAlign(long[],long[])>($r75, $r66);

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations> = $r65;

        r94 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r67 = virtualinvoke r94.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.SampleEntry getSampleEntry()>();

        $r69 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r67;

        $r68 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r5, $r69);

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r68);

        $b25 = l1 cmp -1L;

        if $b25 != 0 goto label04;

        $r83 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l1 = virtualinvoke $r83.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        goto label05;

     label04:
        $z5 = <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: boolean $assertionsDisabled>;

        if $z5 != 0 goto label05;

        $r81 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l27 = virtualinvoke $r81.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $b28 = l1 cmp $l27;

        if $b28 == 0 goto label05;

        $r82 = new java.lang.AssertionError;

        specialinvoke $r82.<java.lang.AssertionError: void <init>()>();

        throw $r82;

     label05:
        goto label01;

     label06:
        r95 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label07:
        r96 = virtualinvoke r95.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label08:
        goto label10;

     label09:
        $r85 := @caughtexception;

        r97 = $r85;

        $r89 = new java.io.IOException;

        specialinvoke $r89.<java.io.IOException: void <init>(java.lang.Throwable)>(r97);

        throw $r89;

     label10:
        r98 = virtualinvoke r96.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        r7 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("SmoothStreamingMedia");

        interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        interfaceinvoke r7.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MajorVersion", "2");

        interfaceinvoke r7.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MinorVersion", "1");

        interfaceinvoke r7.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Duration", "0");

        $r17 = <com.googlecode.mp4parser.Version: java.lang.String VERSION>;

        $r20 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r17);

        interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

        r8 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("StreamIndex");

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Type", "video");

        $r21 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("TimeScale", $r21);

        $r22 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $i3 = lengthof $r22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Chunks", $r23);

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Url", "video/{bitrate}/{start time}");

        $i5 = virtualinvoke r2.<java.util.LinkedList: int size()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("QualityLevels", $r25);

        interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r8);

        i2 = 0;

     label11:
        $i4 = virtualinvoke r2.<java.util.LinkedList: int size()>();

        if i2 >= $i4 goto label12;

        $r56 = virtualinvoke r2.<java.util.LinkedList: java.lang.Object get(int)>(i2);

        r9 = (com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality) $r56;

        r10 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("QualityLevel");

        $r61 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Index", $r61);

        $l21 = r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: long bitrate>;

        $r60 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l21);

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Bitrate", $r60);

        $r59 = r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String fourCC>;

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("FourCC", $r59);

        $i20 = r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int width>;

        $l19 = (long) $i20;

        $r64 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l19);

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MaxWidth", $r64);

        $i24 = r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int height>;

        $l23 = (long) $i24;

        $r63 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l23);

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("MaxHeight", $r63);

        $r62 = r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String codecPrivateData>;

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("CodecPrivateData", $r62);

        $i22 = r9.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int nalLength>;

        $r71 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i22);

        interfaceinvoke r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("NALUnitLengthField", $r71);

        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r10);

        i2 = i2 + 1;

        goto label11;

     label12:
        i31 = 0;

     label13:
        $r28 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $i6 = lengthof $r28;

        if i31 >= $i6 goto label14;

        r99 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("c");

        $r51 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i31);

        interfaceinvoke r99.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("n", $r51);

        $r58 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] videoFragmentsDurations>;

        $l18 = $r58[i31];

        $r57 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l18);

        interfaceinvoke r99.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("d", $r57);

        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r99);

        i31 = i31 + 1;

        goto label13;

     label14:
        $r26 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        if $r26 == null goto label18;

        r100 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("StreamIndex");

        interfaceinvoke r100.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Type", "audio");

        $r34 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        interfaceinvoke r100.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("TimeScale", $r34);

        $r33 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $i7 = lengthof $r33;

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke r100.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Chunks", $r36);

        interfaceinvoke r100.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Url", "audio/{bitrate}/{start time}");

        $i8 = virtualinvoke r3.<java.util.LinkedList: int size()>();

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke r100.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("QualityLevels", $r35);

        interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r100);

        i32 = 0;

     label15:
        $i9 = virtualinvoke r3.<java.util.LinkedList: int size()>();

        if i32 >= $i9 goto label16;

        $r41 = virtualinvoke r3.<java.util.LinkedList: java.lang.Object get(int)>(i32);

        r101 = (com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality) $r41;

        r12 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("QualityLevel");

        $r42 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i32);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Index", $r42);

        $r46 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC>;

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("FourCC", $r46);

        $l14 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate>;

        $r47 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l14);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Bitrate", $r47);

        $i12 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("AudioTag", $r45);

        $l13 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate>;

        $r50 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l13);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("SamplingRate", $r50);

        $i16 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i16);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Channels", $r48);

        $i15 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("BitsPerSample", $r49);

        $i17 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize>;

        $r53 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("PacketSize", $r53);

        $r54 = r101.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData>;

        interfaceinvoke r12.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("CodecPrivateData", $r54);

        interfaceinvoke r100.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r12);

        i32 = i32 + 1;

        goto label15;

     label16:
        i33 = 0;

     label17:
        $r40 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $i10 = lengthof $r40;

        if i33 >= $i10 goto label18;

        r102 = interfaceinvoke r98.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("c");

        $r37 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i33);

        interfaceinvoke r102.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("n", $r37);

        $r38 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long[] audioFragmentsDurations>;

        $l11 = $r38[i33];

        $r43 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l11);

        interfaceinvoke r102.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("d", $r43);

        interfaceinvoke r100.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r102);

        i33 = i33 + 1;

        goto label17;

     label18:
        interfaceinvoke r98.<org.w3c.dom.Document: void setXmlStandalone(boolean)>(1);

        $r27 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r27.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r98);

        r103 = $r27;

        $r30 = new java.io.StringWriter;

        specialinvoke $r30.<java.io.StringWriter: void <init>()>();

        r104 = $r30;

        $r29 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r29.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r104);

        r105 = $r29;

        r106 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

     label19:
        r11 = virtualinvoke r106.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke r11.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r103, r105);

     label20:
        goto label23;

     label21:
        $r91 := @caughtexception;

        r14 = $r91;

        $r88 = new java.io.IOException;

        specialinvoke $r88.<java.io.IOException: void <init>(java.lang.Throwable)>(r14);

        throw $r88;

     label22:
        $r87 := @caughtexception;

        r107 = $r87;

        $r86 = new java.io.IOException;

        specialinvoke $r86.<java.io.IOException: void <init>(java.lang.Throwable)>(r107);

        throw $r86;

     label23:
        $r32 = virtualinvoke r104.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r31;

        catch javax.xml.parsers.ParserConfigurationException from label07 to label08 with label09;
        catch javax.xml.transform.TransformerConfigurationException from label19 to label20 with label21;
        catch javax.xml.transform.TransformerException from label19 to label20 with label22;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r2;
        java.lang.String $r3, $r4, $r5, $r9, $r11;
        boolean $z0, $z1, $z2;
        java.lang.InternalError $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r12, $r13, $r14;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r3 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mp4a");

        if $z0 == 0 goto label1;

        $r13 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAacAudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r1, r2);

        return $r13;

     label1:
        $r4 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ec-3");

        if $z1 == 0 goto label2;

        $r14 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getEc3AudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r1, r2);

        return $r14;

     label2:
        $r5 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("dts");

        if $z2 == 0 goto label3;

        $r12 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getDtsAudioQuality(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)>(r1, r2);

        return $r12;

     label3:
        $r6 = new java.lang.InternalError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I don\'t know what to do with audio of type ");

        $r9 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.InternalError: void <init>(java.lang.String)>($r11);

        throw $r6;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getAacAudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r2;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality r3, $r6;
        com.googlecode.mp4parser.boxes.mp4.ESDescriptorBox r4;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig r5;
        java.util.List $r7;
        java.lang.Object $r8;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ESDescriptor $r9;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.DecoderConfigDescriptor $r10;
        int $i0, $i1, $i4, $i5;
        long $l2, $l3;
        java.lang.String $r11;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r6 = new com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality;

        specialinvoke $r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: void <init>()>();

        r3 = $r6;

        $r7 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "com/googlecode/mp4parser/boxes/mp4/ESDescriptorBox");

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (com.googlecode.mp4parser.boxes.mp4.ESDescriptorBox) $r8;

        $r9 = virtualinvoke r4.<com.googlecode.mp4parser.boxes.mp4.ESDescriptorBox: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ESDescriptor getEsDescriptor()>();

        $r10 = virtualinvoke $r9.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.ESDescriptor: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.DecoderConfigDescriptor getDecoderConfigDescriptor()>();

        r5 = virtualinvoke $r10.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.DecoderConfigDescriptor: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig getAudioSpecificInfo()>();

        $i0 = virtualinvoke r5.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig: int getSbrPresentFlag()>();

        if $i0 != 1 goto label1;

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "AACH";

        goto label3;

     label1:
        $i1 = virtualinvoke r5.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig: int getPsPresentFlag()>();

        if $i1 != 1 goto label2;

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "AACP";

        goto label3;

     label2:
        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "AACL";

     label3:
        $l2 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r1);

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate> = $l2;

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag> = 255;

        $l3 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate> = $l3;

        $i5 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int getChannelCount()>();

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels> = $i5;

        $i4 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int getSampleSize()>();

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample> = $i4;

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize> = 4;

        $r11 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getAudioCodecPrivateData(com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig)>(r5);

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData> = $r11;

        return r3;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getEc3AudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r2;
        com.googlecode.mp4parser.boxes.EC3SpecificBox r3;
        short s0, s1, $s13, $s22, $s28, $s36, $s41, $s43, $s48, $s51, s66;
        byte b2, b3, $b16, $b18, $b19, $b20, $b21, $b25, $b29, $b30, $b31, $b32, $b33, $b34, $b37, $b38, $b39, $b40, $b44, $b45, $b47, $b50, $b54, $b55, $b57, $b58, $b60, $b61, $b62, $b63, $b64, $b65;
        java.util.Iterator r4;
        com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry r5;
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask r6, $r32, $r33, $r34, $r35, $r36, $r37, $r38, r40, r41, r42, r43, r44, r45;
        java.util.List $r7, $r9, $r20;
        java.lang.Object $r8, $r21, $r31;
        boolean $z0;
        byte[] $r10, $r13, $r15, $r25, $r28;
        long $l4, $l6, $l8;
        int $i5, $i7, $i9, $i10, $i11, $i12, $i14, $i15, $i17, $i23, $i24, $i26, $i27, $i35, $i42, $i46, $i49, $i52, $i53, $i56, $i59;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality $r18, r48;
        java.nio.ByteBuffer $r19, r46, r47;
        java.lang.String $r22, $r27, $r29;
        java.lang.StringBuilder $r23, $r24, $r26;
        java.lang.RuntimeException $r30, $r39;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r7 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "com/googlecode/mp4parser/boxes/EC3SpecificBox");

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (com.googlecode.mp4parser.boxes.EC3SpecificBox) $r8;

        if r3 != null goto label01;

        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>("EC-3 track misses EC3SpecificBox!");

        throw $r39;

     label01:
        s0 = 0;

        s1 = 0;

        b2 = 0;

        b3 = 0;

        $r9 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.EC3SpecificBox: java.util.List getEntries()>();

        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r31 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry) $r31;

        $i11 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int acmod>;

        tableswitch($i11)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label14;
            case 7: goto label16;
            default: goto label18;
        };

     label03:
        $i10 = s0 + 2;

        s66 = (short) $i10;

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String)>("Smooth Streaming doesn\'t support DDP 1+1 mode");

        throw $r30;

     label04:
        $i59 = s0 + 1;

        s0 = (short) $i59;

        $i56 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i56 <= 0 goto label05;

        $r38 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r38.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r6 = virtualinvoke $r38.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b65 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b64 = b2 | $b65;

        b2 = (byte) $b64;

        $b63 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b62 = b3 | $b63;

        b3 = (byte) $b62;

        goto label18;

     label05:
        $b57 = b2 | 32;

        b2 = (byte) $b57;

        goto label18;

     label06:
        $i52 = s0 + 2;

        s0 = (short) $i52;

        $i53 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i53 <= 0 goto label07;

        $r37 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r37.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r40 = virtualinvoke $r37.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b50 = virtualinvoke r40.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b60 = b2 | $b50;

        b2 = (byte) $b60;

        $b61 = virtualinvoke r40.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b58 = b3 | $b61;

        b3 = (byte) $b58;

        goto label18;

     label07:
        $s51 = b2 | 192;

        b2 = (byte) $s51;

        goto label18;

     label08:
        $i46 = s0 + 3;

        s0 = (short) $i46;

        $i49 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i49 <= 0 goto label09;

        $r36 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r36.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r41 = virtualinvoke $r36.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b45 = virtualinvoke r41.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b44 = b2 | $b45;

        b2 = (byte) $b44;

        $b54 = virtualinvoke r41.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b55 = b3 | $b54;

        b3 = (byte) $b55;

        goto label18;

     label09:
        $s48 = b2 | 224;

        b2 = (byte) $s48;

        goto label18;

     label10:
        $i35 = s0 + 3;

        s0 = (short) $i35;

        $i42 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i42 <= 0 goto label11;

        $r35 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r35.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r42 = virtualinvoke $r35.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b38 = virtualinvoke r42.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b40 = b2 | $b38;

        b2 = (byte) $b40;

        $b39 = virtualinvoke r42.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b47 = b3 | $b39;

        b3 = (byte) $b47;

        goto label18;

     label11:
        $s41 = b2 | 192;

        b2 = (byte) $s41;

        $s43 = b3 | 128;

        b3 = (byte) $s43;

        goto label18;

     label12:
        $i26 = s0 + 4;

        s0 = (short) $i26;

        $i27 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i27 <= 0 goto label13;

        $r34 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r34.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r43 = virtualinvoke $r34.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b37 = virtualinvoke r43.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b32 = b2 | $b37;

        b2 = (byte) $b32;

        $b33 = virtualinvoke r43.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b34 = b3 | $b33;

        b3 = (byte) $b34;

        goto label18;

     label13:
        $s28 = b2 | 224;

        b2 = (byte) $s28;

        $s36 = b3 | 128;

        b3 = (byte) $s36;

        goto label18;

     label14:
        $i24 = s0 + 4;

        s0 = (short) $i24;

        $i23 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i23 <= 0 goto label15;

        $r33 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r33.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r44 = virtualinvoke $r33.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b29 = virtualinvoke r44.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b30 = b2 | $b29;

        b2 = (byte) $b30;

        $b31 = virtualinvoke r44.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b25 = b3 | $b31;

        b3 = (byte) $b25;

        goto label18;

     label15:
        $s22 = b2 | 204;

        b2 = (byte) $s22;

        goto label18;

     label16:
        $i15 = s0 + 5;

        s0 = (short) $i15;

        $i14 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int num_dep_sub>;

        if $i14 <= 0 goto label17;

        $r32 = new com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask;

        specialinvoke $r32.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: void <init>(com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl,byte,byte,com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry)>(r0, b2, b3, r5);

        r45 = virtualinvoke $r32.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask process()>();

        $b21 = virtualinvoke r45.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskFirstByte()>();

        $b20 = b2 | $b21;

        b2 = (byte) $b20;

        $b19 = virtualinvoke r45.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl$DependentSubstreamMask: byte getdWChannelMaskSecondByte()>();

        $b18 = b3 | $b19;

        b3 = (byte) $b18;

        goto label18;

     label17:
        $s13 = b2 | 236;

        b2 = (byte) $s13;

     label18:
        $i12 = r5.<com.googlecode.mp4parser.boxes.EC3SpecificBox$Entry: int lfeon>;

        if $i12 != 1 goto label19;

        $i17 = s1 + 1;

        s1 = (short) $i17;

        $b16 = b2 | 16;

        b2 = (byte) $b16;

     label19:
        goto label02;

     label20:
        r46 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(22);

        $r10 = newarray (byte)[2];

        $r10[0] = 0;

        $r10[1] = 6;

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r10);

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b2);

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b3);

        $r13 = newarray (byte)[2];

        $r13[0] = 0;

        $r13[1] = 0;

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r13);

        $r15 = newarray (byte)[16];

        $r15[0] = -81;

        $r15[1] = -121;

        $r15[2] = -5;

        $r15[3] = -89;

        $r15[4] = 2;

        $r15[5] = 45;

        $r15[6] = -5;

        $r15[7] = 66;

        $r15[8] = -92;

        $r15[9] = -44;

        $r15[10] = 5;

        $r15[11] = -51;

        $r15[12] = -109;

        $r15[13] = -124;

        $r15[14] = 59;

        $r15[15] = -35;

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r15);

        $l4 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.EC3SpecificBox: long getContentSize()>();

        $i5 = (int) $l4;

        r47 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i5);

        virtualinvoke r3.<com.googlecode.mp4parser.boxes.EC3SpecificBox: void getContent(java.nio.ByteBuffer)>(r47);

        $r18 = new com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality;

        specialinvoke $r18.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: void <init>()>();

        r48 = $r18;

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = "EC-3";

        $l6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r1);

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate> = $l6;

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag> = 65534;

        $l8 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate> = $l8;

        $i7 = s0 + s1;

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels> = $i7;

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample> = 16;

        $r20 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = (java.nio.ByteBuffer) $r21;

        $i9 = virtualinvoke $r19.<java.nio.ByteBuffer: int limit()>();

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize> = $i9;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r46.<java.nio.ByteBuffer: byte[] array()>();

        $r22 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r25);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r28 = virtualinvoke r47.<java.nio.ByteBuffer: byte[] array()>();

        $r29 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r28);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        r48.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData> = $r27;

        return r48;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality getDtsAudioQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.AudioSampleEntry)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r2;
        com.googlecode.mp4parser.boxes.DTSSpecificBox r3;
        java.nio.ByteBuffer r4, r5, $r29;
        int i0, i2, i3, $i9, $i12, $i13, $i15, $i17, $i19, $i22, $i23, $i25, $i26, $i27, $i29, $i30, $i32, $i34;
        short s1, $s6, $s7;
        byte b4, $b5, $b8, $b10, $b11, $b14, $b16, $b18, $b20, $b21, $b24, $b28, b35;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality r6, $r26;
        java.util.List $r7, $r32;
        java.lang.Object $r8, $r28;
        int[] $r11, $r31;
        byte[] $r16, $r23, $r37, $r40;
        long $l31, $l33;
        java.lang.String $r25, $r33, $r35, $r38;
        java.lang.StringBuilder $r30, $r34, $r39;
        java.lang.RuntimeException $r36;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r7 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "com/googlecode/mp4parser/boxes/DTSSpecificBox");

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (com.googlecode.mp4parser.boxes.DTSSpecificBox) $r8;

        if r3 != null goto label1;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>("DTS track misses DTSSpecificBox!");

        throw $r36;

     label1:
        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(22);

        i0 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getFrameDuration()>();

        s1 = 0;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        s1 = 512;

        goto label6;

     label3:
        s1 = 1024;

        goto label6;

     label4:
        s1 = 2048;

        goto label6;

     label5:
        s1 = 4096;

     label6:
        $s6 = s1 & 255;

        $b5 = (byte) $s6;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5);

        $s7 = s1 >>> 8;

        $b8 = (byte) $s7;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b8);

        $r11 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: int[] getNumChannelsAndMask(com.googlecode.mp4parser.boxes.DTSSpecificBox)>(r3);

        i2 = $r11[1];

        $i9 = i2 & 255;

        $b10 = (byte) $i9;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b10);

        $i12 = i2 >>> 8;

        $b11 = (byte) $i12;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b11);

        $i13 = i2 >>> 16;

        $b14 = (byte) $i13;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b14);

        $i15 = i2 >>> 24;

        $b16 = (byte) $i15;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b16);

        $r16 = newarray (byte)[16];

        $r16[0] = -82;

        $r16[1] = -28;

        $r16[2] = -65;

        $r16[3] = 94;

        $r16[4] = 97;

        $r16[5] = 94;

        $r16[6] = 65;

        $r16[7] = -121;

        $r16[8] = -110;

        $r16[9] = -4;

        $r16[10] = -92;

        $r16[11] = -127;

        $r16[12] = 38;

        $r16[13] = -103;

        $r16[14] = 2;

        $r16[15] = 17;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r16);

        r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        $i17 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getStreamConstruction()>();

        $b18 = (byte) $i17;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b18);

        i3 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getChannelLayout()>();

        $i19 = i3 & 255;

        $b20 = (byte) $i19;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b20);

        $i22 = i3 >>> 8;

        $b21 = (byte) $i22;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b21);

        $i25 = i3 >>> 16;

        $b24 = (byte) $i25;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b24);

        $i23 = i3 >>> 24;

        $b28 = (byte) $i23;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b28);

        $i27 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getMultiAssetFlag()>();

        $i26 = $i27 << 1;

        b4 = (byte) $i26;

        $i30 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getLBRDurationMod()>();

        $i29 = b4 | $i30;

        b35 = (byte) $i29;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b35);

        $r23 = newarray (byte)[2];

        $r23[0] = 0;

        $r23[1] = 0;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r23);

        $r26 = new com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality;

        specialinvoke $r26.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: void <init>()>();

        r6 = $r26;

        $r25 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String fourCC> = $r25;

        $l31 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: long getAvgBitRate()>();

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long bitrate> = $l31;

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int audioTag> = 65534;

        $l33 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.DTSSpecificBox: long getDTSSamplingFrequency()>();

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: long samplingRate> = $l33;

        $r31 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: int[] getNumChannelsAndMask(com.googlecode.mp4parser.boxes.DTSSpecificBox)>(r3);

        $i34 = $r31[0];

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int channels> = $i34;

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int bitPerSample> = 16;

        $r32 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $r28 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0);

        $r29 = (java.nio.ByteBuffer) $r28;

        $i32 = virtualinvoke $r29.<java.nio.ByteBuffer: int limit()>();

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: int packetSize> = $i32;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke r4.<java.nio.ByteBuffer: byte[] array()>();

        $r38 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r37);

        $r39 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke r5.<java.nio.ByteBuffer: byte[] array()>();

        $r33 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r40);

        $r34 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        r6.<com.googlecode.mp4parser.authoring.adaptivestreaming.AudioQuality: java.lang.String codecPrivateData> = $r35;

        return r6;
    }

    private int[] getNumChannelsAndMask(com.googlecode.mp4parser.boxes.DTSSpecificBox)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.boxes.DTSSpecificBox r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27, i28, i29;
        int[] $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.boxes.DTSSpecificBox;

        i0 = virtualinvoke r1.<com.googlecode.mp4parser.boxes.DTSSpecificBox: int getChannelLayout()>();

        i1 = 0;

        i2 = 0;

        $i3 = i0 & 1;

        if $i3 != 1 goto label01;

        i1 = i1 + 1;

        i2 = i2 | 4;

     label01:
        $i4 = i0 & 2;

        if $i4 != 2 goto label02;

        i1 = i1 + 2;

        i21 = i2 | 1;

        i2 = i21 | 2;

     label02:
        $i5 = i0 & 4;

        if $i5 != 4 goto label03;

        i1 = i1 + 2;

        i22 = i2 | 16;

        i2 = i22 | 32;

     label03:
        $i6 = i0 & 8;

        if $i6 != 8 goto label04;

        i1 = i1 + 1;

        i2 = i2 | 8;

     label04:
        $i7 = i0 & 16;

        if $i7 != 16 goto label05;

        i1 = i1 + 1;

        i2 = i2 | 256;

     label05:
        $i8 = i0 & 32;

        if $i8 != 32 goto label06;

        i1 = i1 + 2;

        i23 = i2 | 4096;

        i2 = i23 | 16384;

     label06:
        $i9 = i0 & 64;

        if $i9 != 64 goto label07;

        i1 = i1 + 2;

        i24 = i2 | 16;

        i2 = i24 | 32;

     label07:
        $i10 = i0 & 128;

        if $i10 != 128 goto label08;

        i1 = i1 + 1;

        i2 = i2 | 8192;

     label08:
        $i11 = i0 & 256;

        if $i11 != 256 goto label09;

        i1 = i1 + 1;

        i2 = i2 | 2048;

     label09:
        $i12 = i0 & 512;

        if $i12 != 512 goto label10;

        i1 = i1 + 2;

        i25 = i2 | 64;

        i2 = i25 | 128;

     label10:
        $i14 = i0 & 1024;

        if $i14 != 1024 goto label11;

        i1 = i1 + 2;

        i26 = i2 | 512;

        i2 = i26 | 1024;

     label11:
        $i13 = i0 & 2048;

        if $i13 != 2048 goto label12;

        i1 = i1 + 2;

        i27 = i2 | 16;

        i2 = i27 | 32;

     label12:
        $i16 = i0 & 4096;

        if $i16 != 4096 goto label13;

        i1 = i1 + 1;

        i2 = i2 | 8;

     label13:
        $i15 = i0 & 8192;

        if $i15 != 8192 goto label14;

        i1 = i1 + 2;

        i28 = i2 | 16;

        i2 = i28 | 32;

     label14:
        $i18 = i0 & 16384;

        if $i18 != 16384 goto label15;

        i1 = i1 + 1;

        i2 = i2 | 65536;

     label15:
        $i17 = i0 & 32768;

        if $i17 != 32768 goto label16;

        i1 = i1 + 2;

        i29 = i2 | 32768;

        i2 = i29 | 131072;

     label16:
        $i20 = i0 & 65536;

        if $i20 != 65536 goto label17;

        i1 = i1 + 1;

     label17:
        $i19 = i0 & 131072;

        if $i19 != 131072 goto label18;

        i1 = i1 + 2;

     label18:
        $r2 = newarray (int)[2];

        $r2[0] = i1;

        $r2[1] = i2;

        return $r2;
    }

    private java.lang.String getAudioCodecPrivateData(com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig r1;
        byte[] r2;
        java.lang.String $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig;

        r2 = virtualinvoke r1.<com.googlecode.mp4parser.boxes.mp4.objectdescriptors.AudioSpecificConfig: byte[] getConfigBytes()>();

        $r3 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>(r2);

        return $r3;
    }

    private com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality getVideoQuality(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.sampleentry.VisualSampleEntry)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.sampleentry.VisualSampleEntry r2;
        com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality r3, $r15;
        com.coremedia.iso.boxes.h264.AvcConfigurationBox r4;
        java.lang.String $r5, $r6, $r10, $r12, $r16;
        boolean $z0;
        java.lang.InternalError $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.util.List $r13;
        java.lang.Object $r14;
        long $l0;
        byte[] $r17;
        int $i1, $i2, $i3, $i4;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.boxes.sampleentry.VisualSampleEntry;

        $r5 = "avc1";

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: java.util.List getBoxes(java.lang.Class)>(class "com/coremedia/iso/boxes/h264/AvcConfigurationBox");

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (com.coremedia.iso.boxes.h264.AvcConfigurationBox) $r14;

        $r15 = new com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality;

        specialinvoke $r15.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: void <init>()>();

        r3 = $r15;

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: long getBitrate(com.googlecode.mp4parser.authoring.Track)>(r1);

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: long bitrate> = $l0;

        $r17 = specialinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: byte[] getAvcCodecPrivateData(com.coremedia.iso.boxes.h264.AvcConfigurationBox)>(r4);

        $r16 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>($r17);

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String codecPrivateData> = $r16;

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: java.lang.String fourCC> = "AVC1";

        $i2 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: int getWidth()>();

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int width> = $i2;

        $i1 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: int getHeight()>();

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int height> = $i1;

        $i4 = virtualinvoke r4.<com.coremedia.iso.boxes.h264.AvcConfigurationBox: int getLengthSizeMinusOne()>();

        $i3 = $i4 + 1;

        r3.<com.googlecode.mp4parser.authoring.adaptivestreaming.VideoQuality: int nalLength> = $i3;

        goto label2;

     label1:
        $r7 = new java.lang.InternalError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I don\'t know how to handle video of type ");

        $r10 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.SampleEntry)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.InternalError: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        return r3;
    }

    private byte[] getAvcCodecPrivateData(com.coremedia.iso.boxes.h264.AvcConfigurationBox)
    {
        com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl r0;
        com.coremedia.iso.boxes.h264.AvcConfigurationBox r1;
        java.util.List r2, r3;
        java.io.ByteArrayOutputStream r4, $r7;
        java.util.Iterator r5, r15;
        byte[] r6, $r8, $r9, $r11, r16;
        boolean $z0, $z1;
        java.lang.Object $r10, $r13;
        java.io.IOException $r12;
        java.lang.RuntimeException $r14;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl;

        r1 := @parameter0: com.coremedia.iso.boxes.h264.AvcConfigurationBox;

        r2 = virtualinvoke r1.<com.coremedia.iso.boxes.h264.AvcConfigurationBox: java.util.List getSequenceParameterSets()>();

        r3 = virtualinvoke r1.<com.coremedia.iso.boxes.h264.AvcConfigurationBox: java.util.List getPictureParameterSets()>();

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r4 = $r7;

     label1:
        $r8 = newarray (byte)[4];

        $r8[0] = 0;

        $r8[1] = 0;

        $r8[2] = 0;

        $r8[3] = 1;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(byte[])>($r8);

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (byte[]) $r13;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(byte[])>(r6);

        goto label2;

     label3:
        $r9 = newarray (byte)[4];

        $r9[0] = 0;

        $r9[1] = 0;

        $r9[2] = 0;

        $r9[3] = 1;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(byte[])>($r9);

        r15 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (byte[]) $r10;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(byte[])>(r16);

        goto label4;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>("ByteArrayOutputStream do not throw IOException ?!?!?");

        throw $r14;

     label7:
        $r11 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r11;

        catch java.io.IOException from label1 to label5 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;

        $r0 = class "com/googlecode/mp4parser/authoring/adaptivestreaming/FlatManifestWriterImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: boolean $assertionsDisabled> = $z1;

        $r1 = class "com/googlecode/mp4parser/authoring/adaptivestreaming/FlatManifestWriterImpl";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.googlecode.mp4parser.authoring.adaptivestreaming.FlatManifestWriterImpl: java.util.logging.Logger LOG> = $r3;

        return;
    }
}
