public class android.support.v8.renderscript.ScriptC extends android.support.v8.renderscript.Script
{
    private static final java.lang.String TAG;

    protected void <init>(int, android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.ScriptC r0;
        int i0;
        android.support.v8.renderscript.RenderScript r1;

        r0 := @this: android.support.v8.renderscript.ScriptC;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<android.support.v8.renderscript.Script: void <init>(int,android.support.v8.renderscript.RenderScript)>(i0, r1);

        return;
    }

    protected void <init>(android.support.v8.renderscript.RenderScript, android.content.res.Resources, int)
    {
        android.support.v8.renderscript.ScriptC r0;
        android.support.v8.renderscript.RenderScript r1;
        android.content.res.Resources r2;
        int i0, i1;
        android.support.v8.renderscript.RenderScriptThunker r3;
        android.support.v8.renderscript.ScriptCThunker r4, $r6;
        boolean $z0;
        android.support.v8.renderscript.RSRuntimeException $r5;

        r0 := @this: android.support.v8.renderscript.ScriptC;

        r1 := @parameter0: android.support.v8.renderscript.RenderScript;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.v8.renderscript.Script: void <init>(int,android.support.v8.renderscript.RenderScript)>(0, r1);

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 == 0 goto label1;

        r3 = (android.support.v8.renderscript.RenderScriptThunker) r1;

        $r6 = new android.support.v8.renderscript.ScriptCThunker;

        specialinvoke $r6.<android.support.v8.renderscript.ScriptCThunker: void <init>(android.support.v8.renderscript.RenderScriptThunker,android.content.res.Resources,int)>(r3, r2, i0);

        r4 = $r6;

        r0.<android.support.v8.renderscript.ScriptC: android.support.v8.renderscript.ScriptCThunker mT> = r4;

        return;

     label1:
        i1 = staticinvoke <android.support.v8.renderscript.ScriptC: int internalCreate(android.support.v8.renderscript.RenderScript,android.content.res.Resources,int)>(r1, r2, i0);

        if i1 != 0 goto label2;

        $r5 = new android.support.v8.renderscript.RSRuntimeException;

        specialinvoke $r5.<android.support.v8.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Loading of ScriptC script failed.");

        throw $r5;

     label2:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptC: void setID(int)>(i1);

        return;
    }

    private static synchronized int internalCreate(android.support.v8.renderscript.RenderScript, android.content.res.Resources, int)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.content.res.Resources r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        byte[] r2, r4;
        java.io.InputStream r3;
        java.lang.Throwable r5, $r8;
        android.content.Context $r6;
        java.io.File $r7;
        android.content.res.Resources$NotFoundException $r9;
        java.io.IOException $r10;
        java.lang.String r12, r13;

        r0 := @parameter0: android.support.v8.renderscript.RenderScript;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i0);

     label01:
        r2 = newarray (byte)[1024];

        i1 = 0;

     label02:
        $i3 = lengthof r2;

        i2 = $i3 - i1;

        if i2 != 0 goto label03;

        $i4 = lengthof r2;

        $i7 = $i4 * 2;

        r4 = newarray (byte)[$i7];

        $i6 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, $i6);

        r2 = r4;

        $i8 = lengthof r2;

        i2 = $i8 - i1;

     label03:
        i9 = virtualinvoke r3.<java.io.InputStream: int read(byte[],int,int)>(r2, i1, i2);

        if i9 > 0 goto label04;

        goto label05;

     label04:
        i1 = i1 + i9;

        goto label02;

     label05:
        virtualinvoke r3.<java.io.InputStream: void close()>();

        goto label08;

     label06:
        $r8 := @caughtexception;

        r5 = $r8;

     label07:
        virtualinvoke r3.<java.io.InputStream: void close()>();

        throw r5;

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

        $r9 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r9.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r9;

     label10:
        r12 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i0);

        $r6 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: android.content.Context getApplicationContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.io.File getCacheDir()>();

        r13 = virtualinvoke $r7.<java.io.File: java.lang.String toString()>();

        $i5 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int nScriptCCreate(java.lang.String,java.lang.String,byte[],int)>(r12, r13, r2, i1);

        return $i5;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.IOException from label01 to label08 with label09;
    }

    public static void <clinit>()
    {
        <android.support.v8.renderscript.ScriptC: java.lang.String TAG> = "ScriptC";

        return;
    }
}
