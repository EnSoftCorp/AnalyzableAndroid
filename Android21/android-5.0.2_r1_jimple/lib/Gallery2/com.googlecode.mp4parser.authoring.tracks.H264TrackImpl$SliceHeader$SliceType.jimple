public final enum class com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType extends java.lang.Enum
{
    public static final enum com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType P;
    public static final enum com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType B;
    public static final enum com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType I;
    public static final enum com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SP;
    public static final enum com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SI;
    private static final com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[] $VALUES;

    public static com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[] values()
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[]) $r1;

        return $r2;
    }

    public static com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/googlecode/mp4parser/authoring/tracks/H264TrackImpl$SliceHeader$SliceType", r0);

        $r2 = (com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[] $r5;

        $r0 = new com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType;

        specialinvoke $r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: void <init>(java.lang.String,int)>("P", 0);

        <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType P> = $r0;

        $r1 = new com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType;

        specialinvoke $r1.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: void <init>(java.lang.String,int)>("B", 1);

        <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType B> = $r1;

        $r2 = new com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType;

        specialinvoke $r2.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: void <init>(java.lang.String,int)>("I", 2);

        <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType I> = $r2;

        $r3 = new com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType;

        specialinvoke $r3.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: void <init>(java.lang.String,int)>("SP", 3);

        <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SP> = $r3;

        $r4 = new com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType;

        specialinvoke $r4.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: void <init>(java.lang.String,int)>("SI", 4);

        <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SI> = $r4;

        $r5 = newarray (com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType)[5];

        $r6 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType P>;

        $r5[0] = $r6;

        $r7 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType B>;

        $r5[1] = $r7;

        $r8 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType I>;

        $r5[2] = $r8;

        $r9 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SP>;

        $r5[3] = $r9;

        $r10 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SI>;

        $r5[4] = $r10;

        <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType[] $VALUES> = $r5;

        return;
    }
}
