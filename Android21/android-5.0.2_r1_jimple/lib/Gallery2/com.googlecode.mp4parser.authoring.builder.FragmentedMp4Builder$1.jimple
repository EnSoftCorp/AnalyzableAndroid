class com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1 extends java.lang.Object implements java.util.Comparator
{
    final java.util.Map val$intersectionMap;
    final int val$cycle;
    final com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0;

    void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder, java.util.Map, int)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1 r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        java.util.Map r2;
        int i0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter1: java.util.Map;

        i0 := @parameter2: int;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder this$0> = r1;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: java.util.Map val$intersectionMap> = r2;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1 r0;
        com.googlecode.mp4parser.authoring.Track r1, r2;
        long[] r3, r4;
        long l0, l1, l2, l3, $l30, $l33;
        java.util.List r5, r6, $r12, $r15, $r16, $r17;
        int i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, i34;
        java.nio.ByteBuffer r7, r10;
        java.util.Iterator r8, r20;
        java.util.Map $r9, $r14;
        java.lang.Object $r11, $r13, $r18, $r19;
        boolean $z0, $z1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r9 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: java.util.Map val$intersectionMap>;

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (long[]) $r11;

        $i5 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle>;

        l0 = r3[$i5];

        $i7 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle>;

        $i8 = $i7 + 1;

        $i6 = lengthof r3;

        if $i8 >= $i6 goto label1;

        $i32 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle>;

        $i31 = $i32 + 1;

        $l30 = r3[$i31];

        goto label2;

     label1:
        $r12 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i10 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i9 = $i10 + 1;

        $l30 = (long) $i9;

     label2:
        l1 = $l30;

        $r14 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: java.util.Map val$intersectionMap>;

        $r13 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (long[]) $r13;

        $i12 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle>;

        l2 = r4[$i12];

        $i11 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle>;

        $i15 = $i11 + 1;

        $i14 = lengthof r4;

        if $i15 >= $i14 goto label3;

        $i28 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int val$cycle>;

        $i27 = $i28 + 1;

        $l33 = r4[$i27];

        goto label4;

     label3:
        $r15 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i13 = interfaceinvoke $r15.<java.util.List: int size()>();

        $i18 = $i13 + 1;

        $l33 = (long) $i18;

     label4:
        l3 = $l33;

        $r16 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i16 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l0);

        $i17 = $i16 - 1;

        $i19 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l1);

        $i20 = $i19 - 1;

        r5 = interfaceinvoke $r16.<java.util.List: java.util.List subList(int,int)>($i17, $i20);

        $r17 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i23 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l2);

        $i24 = $i23 - 1;

        $i21 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l3);

        $i22 = $i21 - 1;

        r6 = interfaceinvoke $r17.<java.util.List: java.util.List subList(int,int)>($i24, $i22);

        i4 = 0;

        r8 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r19 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.nio.ByteBuffer) $r19;

        $i29 = virtualinvoke r7.<java.nio.ByteBuffer: int limit()>();

        i4 = i4 + $i29;

        goto label5;

     label6:
        i34 = 0;

        r20 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r18 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.nio.ByteBuffer) $r18;

        $i25 = virtualinvoke r10.<java.nio.ByteBuffer: int limit()>();

        i34 = i34 + $i25;

        goto label7;

     label8:
        $i26 = i4 - i34;

        return $i26;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1 r0;
        java.lang.Object r1, r2;
        com.googlecode.mp4parser.authoring.Track $r3, $r4;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.googlecode.mp4parser.authoring.Track) r1;

        $r3 = (com.googlecode.mp4parser.authoring.Track) r2;

        $i0 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: int compare(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Track)>($r4, $r3);

        return $i0;
    }
}
