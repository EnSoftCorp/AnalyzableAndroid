public class com.googlecode.mp4parser.authoring.tracks.CroppedTrack extends com.googlecode.mp4parser.authoring.AbstractTrack
{
    com.googlecode.mp4parser.authoring.Track origTrack;
    private int fromSample;
    private int toSample;
    private long[] syncSampleArray;
    static final boolean $assertionsDisabled;

    public void <init>(com.googlecode.mp4parser.authoring.Track, long, long)
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track r1;
        long l0, l1;
        boolean $z0, $z1;
        int $i2, $i3;
        byte $b4, $b5;
        java.lang.AssertionError $r2, $r3;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.AbstractTrack: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack> = r1;

        $z0 = <com.googlecode.mp4parser.authoring.tracks.CroppedTrack: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b5 = l0 cmp 2147483647L;

        if $b5 <= 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z1 = <com.googlecode.mp4parser.authoring.tracks.CroppedTrack: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $b4 = l1 cmp 2147483647L;

        if $b4 <= 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $i2 = (int) l0;

        r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample> = $i2;

        $i3 = (int) l1;

        r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample> = $i3;

        return;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2, $r3;
        int $i0, $i1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i0 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>($i1, $i0);

        return $r3;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        return $r2;
    }

    public java.util.List getDecodingTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        long[] r1, r2, r4;
        java.util.LinkedList r3, $r12;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        long l2, $l10, $l11, $l12;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r5, $r13, $r15, r17;
        com.googlecode.mp4parser.authoring.Track $r6, $r8, $r10;
        java.util.List $r7, $r9, $r11;
        boolean $z0, $z1;
        java.lang.Object $r14, $r16;
        byte $b13;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r6 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r7 = interfaceinvoke $r6.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        if $r7 == null goto label6;

        $r8 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r9 = interfaceinvoke $r8.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r11 = interfaceinvoke $r10.<com.googlecode.mp4parser.authoring.Track: java.util.List getDecodingTimeEntries()>();

        r1 = staticinvoke <com.coremedia.iso.boxes.TimeToSampleBox: long[] blowupTimeToSamples(java.util.List)>($r11);

        $i3 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $i4 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i6 = $i3 - $i4;

        r2 = newarray (long)[$i6];

        $i9 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i8 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $i5 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i7 = $i8 - $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i9, r2, 0, $i7);

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        r3 = $r12;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        l2 = r4[i1];

        $z1 = virtualinvoke r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r14 = virtualinvoke r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r15 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r14;

        $l10 = virtualinvoke $r15.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $b13 = $l10 cmp l2;

        if $b13 == 0 goto label3;

     label2:
        $r13 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        specialinvoke $r13.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>(1L, l2);

        r5 = $r13;

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r5);

        goto label4;

     label3:
        $r16 = virtualinvoke r3.<java.util.LinkedList: java.lang.Object getLast()>();

        r17 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r16;

        $l11 = virtualinvoke r17.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l12 = $l11 + 1L;

        virtualinvoke r17.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void setCount(long)>($l12);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return r3;

     label6:
        return null;
    }

    public java.util.List getCompositionTimeEntries()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        int[] r1, r2, r4;
        java.util.LinkedList r3, $r12;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry r5, $r13, $r14, r17;
        com.googlecode.mp4parser.authoring.Track $r6, $r8, $r10;
        java.util.List $r7, $r9, $r11;
        boolean $z0, $z1;
        java.lang.Object $r15, $r16;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r6 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r7 = interfaceinvoke $r6.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        if $r7 == null goto label6;

        $r8 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r9 = interfaceinvoke $r8.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r11 = interfaceinvoke $r10.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        r1 = staticinvoke <com.coremedia.iso.boxes.CompositionTimeToSample: int[] blowupCompositionTimes(java.util.List)>($r11);

        $i5 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $i3 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i4 = $i5 - $i3;

        r2 = newarray (int)[$i4];

        $i8 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i6 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $i7 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i9 = $i6 - $i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i8, r2, 0, $i9);

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        r3 = $r12;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        i2 = r4[i1];

        $z1 = virtualinvoke r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r15 = virtualinvoke r3.<java.util.LinkedList: java.lang.Object getLast()>();

        $r14 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r15;

        $i10 = virtualinvoke $r14.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>();

        if $i10 == i2 goto label3;

     label2:
        $r13 = new com.coremedia.iso.boxes.CompositionTimeToSample$Entry;

        specialinvoke $r13.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: void <init>(int,int)>(1, i2);

        r5 = $r13;

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r5);

        goto label4;

     label3:
        $r16 = virtualinvoke r3.<java.util.LinkedList: java.lang.Object getLast()>();

        r17 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r16;

        $i11 = virtualinvoke r17.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        $i12 = $i11 + 1;

        virtualinvoke r17.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: void setCount(int)>($i12);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return r3;

     label6:
        return null;
    }

    public synchronized long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        java.util.LinkedList r1, $r9;
        long[] r2, $r3, $r4, $r6, $r8, $r11, $r12, $r13, $r15;
        int i0, i1, $i3, $i4, $i5, $i8, $i9, $i14, i16;
        long l2, $l6, $l7, $l12, $l13, $l15;
        com.googlecode.mp4parser.authoring.Track $r5, $r7, $r10;
        java.lang.Object $r14;
        java.lang.Long $r16, $r17;
        byte $b10, $b11;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r3 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] syncSampleArray>;

        if $r3 != null goto label7;

        $r5 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r6 = interfaceinvoke $r5.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r6 == null goto label6;

        $r7 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r8 = interfaceinvoke $r7.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i3 = lengthof $r8;

        if $i3 <= 0 goto label6;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r1 = $r9;

        $r10 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        r2 = interfaceinvoke $r10.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        l2 = r2[i1];

        $i8 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $l7 = (long) $i8;

        $b10 = l2 cmp $l7;

        if $b10 < 0 goto label2;

        $i9 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $l12 = (long) $i9;

        $b11 = l2 cmp $l12;

        if $b11 >= 0 goto label2;

        $i14 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $l15 = (long) $i14;

        $l13 = l2 - $l15;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        $r12 = newarray (long)[$i4];

        r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] syncSampleArray> = $r12;

        i16 = 0;

     label4:
        $r11 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] syncSampleArray>;

        $i5 = lengthof $r11;

        if i16 >= $i5 goto label5;

        $r15 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] syncSampleArray>;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i16);

        $r16 = (java.lang.Long) $r14;

        $l6 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        $r15[i16] = $l6;

        i16 = i16 + 1;

        goto label4;

     label5:
        $r13 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] syncSampleArray>;

        return $r13;

     label6:
        return null;

     label7:
        $r4 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] syncSampleArray>;

        return $r4;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1, $r3, $r5;
        java.util.List $r2, $r4, $r6, $r7;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r4 = interfaceinvoke $r3.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r6 = interfaceinvoke $r5.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $i1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int fromSample>;

        $i0 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: int toSample>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.List subList(int,int)>($i1, $i0);

        return $r7;

     label1:
        return null;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        return $r2;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.lang.String $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.Box $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.tracks.CroppedTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.CroppedTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.Track origTrack>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/googlecode/mp4parser/authoring/tracks/CroppedTrack";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.authoring.tracks.CroppedTrack: boolean $assertionsDisabled> = $z1;

        return;
    }
}
