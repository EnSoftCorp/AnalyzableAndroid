public class com.googlecode.mp4parser.srt.SrtParser extends java.lang.Object
{

    public void <init>()
    {
        com.googlecode.mp4parser.srt.SrtParser r0;

        r0 := @this: com.googlecode.mp4parser.srt.SrtParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.googlecode.mp4parser.authoring.tracks.TextTrackImpl parse(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.LineNumberReader r1, $r7;
        com.googlecode.mp4parser.authoring.tracks.TextTrackImpl r2, $r9;
        java.lang.String r4, r5, r6, $r10, $r12, $r13, $r14, $r18;
        long l0, l1;
        java.io.InputStreamReader $r8;
        java.lang.String[] $r11, $r15;
        java.util.List $r16;
        com.googlecode.mp4parser.authoring.tracks.TextTrackImpl$Line $r17;
        boolean $z1;
        java.lang.StringBuilder $r19, $r20, $r21, $r22;

        r0 := @parameter0: java.io.InputStream;

        $r7 = new java.io.LineNumberReader;

        $r8 = new java.io.InputStreamReader;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r0, "UTF-8");

        specialinvoke $r7.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r8);

        r1 = $r7;

        $r9 = new com.googlecode.mp4parser.authoring.tracks.TextTrackImpl;

        specialinvoke $r9.<com.googlecode.mp4parser.authoring.tracks.TextTrackImpl: void <init>()>();

        r2 = $r9;

     label1:
        $r10 = virtualinvoke r1.<java.io.LineNumberReader: java.lang.String readLine()>();

        if $r10 == null goto label4;

        r4 = virtualinvoke r1.<java.io.LineNumberReader: java.lang.String readLine()>();

        r5 = "";

     label2:
        $r12 = virtualinvoke r1.<java.io.LineNumberReader: java.lang.String readLine()>();

        r6 = $r12;

        if $r12 == null goto label3;

        $r18 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label3;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r5 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label3:
        $r11 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("-->");

        $r13 = $r11[0];

        l0 = staticinvoke <com.googlecode.mp4parser.srt.SrtParser: long parse(java.lang.String)>($r13);

        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("-->");

        $r14 = $r15[1];

        l1 = staticinvoke <com.googlecode.mp4parser.srt.SrtParser: long parse(java.lang.String)>($r14);

        $r16 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.tracks.TextTrackImpl: java.util.List getSubs()>();

        $r17 = new com.googlecode.mp4parser.authoring.tracks.TextTrackImpl$Line;

        specialinvoke $r17.<com.googlecode.mp4parser.authoring.tracks.TextTrackImpl$Line: void <init>(long,long,java.lang.String)>(l0, l1, r5);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label1;

     label4:
        return r2;
    }

    private static long parse(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r5, $r6, $r9, $r10, $r11, $r14, $r15, $r16;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12;
        java.lang.String[] $r1, $r4, $r7, $r8, $r12, $r13;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r5 = $r4[1];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r9 = $r7[2];

        $r8 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r11 = $r8[0];

        $r10 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r14 = $r12[2];

        $r13 = virtualinvoke $r14.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r16 = $r13[1];

        $r15 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r15);

        $l4 = l0 * 60L;

        $l6 = $l4 * 60L;

        $l10 = $l6 * 1000L;

        $l5 = l1 * 60L;

        $l9 = $l5 * 1000L;

        $l8 = $l10 + $l9;

        $l7 = l2 * 1000L;

        $l11 = $l8 + $l7;

        $l12 = $l11 + l3;

        return $l12;
    }
}
