public class com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet extends com.android.gallery3d.filtershow.filters.SimpleImageFilter
{
    private static final java.lang.String LOGTAG;
    public static final java.lang.String GOOGLE_PANO_NAMESPACE;
    com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation mParameters;
    public static final java.lang.String CROPPED_AREA_IMAGE_WIDTH_PIXELS;
    public static final java.lang.String CROPPED_AREA_IMAGE_HEIGHT_PIXELS;
    public static final java.lang.String CROPPED_AREA_FULL_PANO_WIDTH_PIXELS;
    public static final java.lang.String CROPPED_AREA_FULL_PANO_HEIGHT_PIXELS;
    public static final java.lang.String CROPPED_AREA_LEFT;
    public static final java.lang.String CROPPED_AREA_TOP;

    public void <init>()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet r0;
        com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation $r1;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet;

        specialinvoke r0.<com.android.gallery3d.filtershow.filters.SimpleImageFilter: void <init>()>();

        $r1 = new com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation;

        specialinvoke $r1.<com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation: void <init>()>();

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation mParameters> = $r1;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String mName> = "TinyPlanet";

        return;
    }

    public void useRepresentation(com.android.gallery3d.filtershow.filters.FilterRepresentation)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet r0;
        com.android.gallery3d.filtershow.filters.FilterRepresentation r1;
        com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation r2;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet;

        r1 := @parameter0: com.android.gallery3d.filtershow.filters.FilterRepresentation;

        r2 = (com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation) r1;

        r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation mParameters> = r2;

        return;
    }

    public com.android.gallery3d.filtershow.filters.FilterRepresentation getDefaultRepresentation()
    {
        com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet r0;
        com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation $r1;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet;

        $r1 = new com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation;

        specialinvoke $r1.<com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation: void <init>()>();

        return $r1;
    }

    protected native void nativeApplyFilter(android.graphics.Bitmap, int, int, android.graphics.Bitmap, int, float, float);

    public android.graphics.Bitmap apply(android.graphics.Bitmap, float, int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet r0;
        android.graphics.Bitmap r1, r3;
        float f0, $f1, $f2, $f3, $f4, $f5;
        int i0, i1, i3, $i4, $i5, $i6, $i7;
        com.android.gallery3d.filtershow.pipeline.ImagePreset r2;
        com.adobe.xmp.XMPMeta r4;
        com.android.gallery3d.filtershow.pipeline.FilterEnvironment $r5, $r8;
        com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation $r6, $r7;
        com.android.gallery3d.filtershow.imageshow.MasterImage $r9;
        com.android.gallery3d.filtershow.FilterShowActivity $r10;
        java.lang.OutOfMemoryError $r11;
        java.lang.String $r12;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet;

        r1 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) i1;

        $f2 = $f1 / 2.0F;

        i3 = (int) $f2;

        $r5 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r2 = virtualinvoke $r5.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: com.android.gallery3d.filtershow.pipeline.ImagePreset getImagePreset()>();

        r3 = null;

        if r2 == null goto label1;

        $r9 = staticinvoke <com.android.gallery3d.filtershow.imageshow.MasterImage: com.android.gallery3d.filtershow.imageshow.MasterImage getImage()>();

        $r10 = virtualinvoke $r9.<com.android.gallery3d.filtershow.imageshow.MasterImage: com.android.gallery3d.filtershow.FilterShowActivity getActivity()>();

        r4 = staticinvoke <com.android.gallery3d.filtershow.cache.ImageLoader: com.adobe.xmp.XMPMeta getXmpObject(android.content.Context)>($r10);

        if r4 == null goto label1;

        r1 = specialinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: android.graphics.Bitmap applyXmp(android.graphics.Bitmap,com.adobe.xmp.XMPMeta,int)>(r1, r4, i1);

     label1:
        if r3 == null goto label2;

        $i7 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        if i3 == $i7 goto label2;

        r3 = null;

     label2:
        if r3 != null goto label6;

     label3:
        $r8 = virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: com.android.gallery3d.filtershow.pipeline.FilterEnvironment getEnvironment()>();

        r3 = virtualinvoke $r8.<com.android.gallery3d.filtershow.pipeline.FilterEnvironment: android.graphics.Bitmap getBitmap(int,int,int)>(i3, i3, 10);

     label4:
        goto label2;

     label5:
        $r11 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        i3 = i3 / 2;

        $r12 = <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String LOGTAG>;

        staticinvoke <com.android.gallery3d.app.Log: int v(java.lang.String,java.lang.String)>($r12, "No memory to create Full Tiny Planet create half");

        goto label2;

     label6:
        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $r6 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation mParameters>;

        $i6 = virtualinvoke $r6.<com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation: int getZoom()>();

        $f3 = (float) $i6;

        $f5 = $f3 / 100.0F;

        $r7 = r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation mParameters>;

        $f4 = virtualinvoke $r7.<com.android.gallery3d.filtershow.filters.FilterTinyPlanetRepresentation: float getAngle()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: void nativeApplyFilter(android.graphics.Bitmap,int,int,android.graphics.Bitmap,int,float,float)>(r1, $i5, $i4, r3, i3, $f5, $f4);

        return r3;

        catch java.lang.OutOfMemoryError from label3 to label4 with label5;
    }

    private android.graphics.Bitmap applyXmp(android.graphics.Bitmap, com.adobe.xmp.XMPMeta, int)
    {
        com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet r0;
        android.graphics.Bitmap r1, r3;
        com.adobe.xmp.XMPMeta r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        android.graphics.RectF r5, $r6;
        android.graphics.Canvas $r7, r11;
        android.graphics.Bitmap$Config $r8;
        com.adobe.xmp.XMPException $r9;
        java.lang.OutOfMemoryError $r10;

        r0 := @this: com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: com.adobe.xmp.XMPMeta;

        i0 := @parameter2: int;

     label01:
        i1 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: int getInt(com.adobe.xmp.XMPMeta,java.lang.String)>(r2, "CroppedAreaImageWidthPixels");

        i2 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: int getInt(com.adobe.xmp.XMPMeta,java.lang.String)>(r2, "CroppedAreaImageHeightPixels");

        i3 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: int getInt(com.adobe.xmp.XMPMeta,java.lang.String)>(r2, "FullPanoWidthPixels");

        i4 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: int getInt(com.adobe.xmp.XMPMeta,java.lang.String)>(r2, "FullPanoHeightPixels");

        i5 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: int getInt(com.adobe.xmp.XMPMeta,java.lang.String)>(r2, "CroppedAreaLeftPixels");

        i6 = staticinvoke <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: int getInt(com.adobe.xmp.XMPMeta,java.lang.String)>(r2, "CroppedAreaTopPixels");

        if i3 == 0 goto label02;

        if i4 != 0 goto label03;

     label02:
        return r1;

     label03:
        r3 = null;

        $f1 = (float) i0;

        $f2 = (float) i3;

        f0 = $f1 / $f2;

     label04:
        if r3 != null goto label08;

     label05:
        $f9 = (float) i3;

        $f10 = $f9 * f0;

        $i10 = (int) $f10;

        $f13 = (float) i4;

        $f14 = $f13 * f0;

        $i9 = (int) $f14;

        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i10, $i9, $r8);

     label06:
        goto label04;

     label07:
        $r10 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        f0 = f0 / 2.0F;

        goto label04;

     label08:
        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r11 = $r7;

        i7 = i5 + i1;

        i8 = i6 + i2;

        $r6 = new android.graphics.RectF;

        $f4 = (float) i5;

        $f12 = $f4 * f0;

        $f3 = (float) i6;

        $f11 = $f3 * f0;

        $f6 = (float) i7;

        $f7 = $f6 * f0;

        $f5 = (float) i8;

        $f8 = $f5 * f0;

        specialinvoke $r6.<android.graphics.RectF: void <init>(float,float,float,float)>($f12, $f11, $f7, $f8);

        r5 = $r6;

        virtualinvoke r11.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>(r1, null, r5, null);

        r1 = r3;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        return r1;

        catch java.lang.OutOfMemoryError from label05 to label06 with label07;
        catch com.adobe.xmp.XMPException from label01 to label02 with label10;
        catch com.adobe.xmp.XMPException from label03 to label09 with label10;
    }

    private static int getInt(com.adobe.xmp.XMPMeta, java.lang.String) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.XMPMeta r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0;

        r0 := @parameter0: com.adobe.xmp.XMPMeta;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r0.<com.adobe.xmp.XMPMeta: boolean doesPropertyExist(java.lang.String,java.lang.String)>("http://ns.google.com/photos/1.0/panorama/", r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<com.adobe.xmp.XMPMeta: java.lang.Integer getPropertyInteger(java.lang.String,java.lang.String)>("http://ns.google.com/photos/1.0/panorama/", r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String CROPPED_AREA_TOP> = "CroppedAreaTopPixels";

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String CROPPED_AREA_LEFT> = "CroppedAreaLeftPixels";

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String CROPPED_AREA_FULL_PANO_HEIGHT_PIXELS> = "FullPanoHeightPixels";

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String CROPPED_AREA_FULL_PANO_WIDTH_PIXELS> = "FullPanoWidthPixels";

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String CROPPED_AREA_IMAGE_HEIGHT_PIXELS> = "CroppedAreaImageHeightPixels";

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String CROPPED_AREA_IMAGE_WIDTH_PIXELS> = "CroppedAreaImageWidthPixels";

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String GOOGLE_PANO_NAMESPACE> = "http://ns.google.com/photos/1.0/panorama/";

        $r0 = class "com/android/gallery3d/filtershow/filters/ImageFilterTinyPlanet";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: java.lang.String LOGTAG> = $r1;

        return;
    }
}
