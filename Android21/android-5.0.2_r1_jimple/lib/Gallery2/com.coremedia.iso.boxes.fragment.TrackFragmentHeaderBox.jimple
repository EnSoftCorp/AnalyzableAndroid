public class com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private long trackId;
    private long baseDataOffset;
    private long sampleDescriptionIndex;
    private long defaultSampleDuration;
    private long defaultSampleSize;
    private com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags;
    private boolean durationIsEmpty;

    public void <init>()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("tfhd");

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset> = -1L;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration> = -1L;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize> = -1L;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 = 8L;

        i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i2 = i1 & 1;

        if $i2 != 1 goto label1;

        l0 = l0 + 8L;

     label1:
        $i3 = i1 & 2;

        if $i3 != 2 goto label2;

        l0 = l0 + 4L;

     label2:
        $i4 = i1 & 8;

        if $i4 != 8 goto label3;

        l0 = l0 + 4L;

     label3:
        $i5 = i1 & 16;

        if $i5 != 16 goto label4;

        l0 = l0 + 4L;

     label4:
        $i6 = i1 & 32;

        if $i6 != 32 goto label5;

        l0 = l0 + 4L;

     label5:
        return l0;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        java.nio.ByteBuffer r1;
        long $l0, $l11, $l12, $l13, $l14;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.coremedia.iso.boxes.fragment.SampleFlags $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l0);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        $l13 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getBaseDataOffset()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r1, $l13);

     label1:
        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i4 = $i3 & 2;

        if $i4 != 2 goto label2;

        $l14 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getSampleDescriptionIndex()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l14);

     label2:
        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i6 = $i5 & 8;

        if $i6 != 8 goto label3;

        $l12 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleDuration()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l12);

     label3:
        $i7 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i8 = $i7 & 16;

        if $i8 != 16 goto label4;

        $l11 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l11);

     label4:
        $i9 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i10 = $i9 & 32;

        if $i10 != 32 goto label5;

        $r2 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags>;

        virtualinvoke $r2.<com.coremedia.iso.boxes.fragment.SampleFlags: void getContent(java.nio.ByteBuffer)>(r1);

     label5:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        java.nio.ByteBuffer r1;
        long $l1, $l14, $l15, $l16, $l17;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        com.coremedia.iso.boxes.fragment.SampleFlags $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l1 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId> = $l1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i3 = $i2 & 1;

        if $i3 != 1 goto label1;

        $l17 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt64(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset> = $l17;

     label1:
        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i5 = $i4 & 2;

        if $i5 != 2 goto label2;

        $l15 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex> = $l15;

     label2:
        $i6 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i7 = $i6 & 8;

        if $i7 != 8 goto label3;

        $l16 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration> = $l16;

     label3:
        $i8 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i9 = $i8 & 16;

        if $i9 != 16 goto label4;

        $l14 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize> = $l14;

     label4:
        $i10 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i11 = $i10 & 32;

        if $i11 != 32 goto label5;

        $r2 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r2.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags> = $r2;

     label5:
        $i12 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i13 = $i12 & 65536;

        if $i13 != 65536 goto label6;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty> = 1;

     label6:
        return;
    }

    public boolean hasBaseDataOffset()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasSampleDescriptionIndex()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDefaultSampleDuration()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDefaultSampleSize()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDefaultSampleFlags()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getTrackId()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId>;

        return $l0;
    }

    public long getBaseDataOffset()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset>;

        return $l0;
    }

    public long getSampleDescriptionIndex()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex>;

        return $l0;
    }

    public long getDefaultSampleDuration()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration>;

        return $l0;
    }

    public long getDefaultSampleSize()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize>;

        return $l0;
    }

    public com.coremedia.iso.boxes.fragment.SampleFlags getDefaultSampleFlags()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        com.coremedia.iso.boxes.fragment.SampleFlags $r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags>;

        return $r1;
    }

    public boolean isDurationIsEmpty()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $z0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty>;

        return $z0;
    }

    public void setTrackId(long)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId> = l0;

        return;
    }

    public void setBaseDataOffset(long)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long l0;
        byte $b1;
        int $i2, $i3, $i4, $i5;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i5 = $i4 & 2147483646;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i5);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i3 = $i2 | 1;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i3);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset> = l0;

        return;
    }

    public void setSampleDescriptionIndex(long)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long l0;
        byte $b1;
        int $i2, $i3, $i4, $i5;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i5 = $i4 & 2147483645;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i5);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i3 = $i2 | 2;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i3);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex> = l0;

        return;
    }

    public void setDefaultSampleDuration(long)
    {
        int $i0, $i2;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long l1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l1 := @parameter0: long;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i0 = $i2 | 8;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i0);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration> = l1;

        return;
    }

    public void setDefaultSampleSize(long)
    {
        int $i0, $i2;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        long l1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l1 := @parameter0: long;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i0 = $i2 | 16;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i0);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize> = l1;

        return;
    }

    public void setDefaultSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        com.coremedia.iso.boxes.fragment.SampleFlags r1;
        int $i0, $i1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        r1 := @parameter0: com.coremedia.iso.boxes.fragment.SampleFlags;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 | 32;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags> = r1;

        return;
    }

    public void setDurationIsEmpty(boolean)
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        boolean z0;
        int $i0, $i1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        z0 := @parameter0: boolean;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 | 65536;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty> = z0;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        java.lang.StringBuilder r1, $r2, $r4, $r6, $r8, $r10, $r12, $r13, $r17;
        long $l0, $l1, $l2, $l3, $l4;
        com.coremedia.iso.boxes.fragment.SampleFlags $r16;
        boolean $z0;
        java.lang.String $r20;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrackFragmentHeaderBox");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{trackId=");

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", baseDataOffset=");

        $l1 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleDescriptionIndex=");

        $l2 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultSampleDuration=");

        $l3 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultSampleSize=");

        $l4 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultSampleFlags=");

        $r16 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", durationIsEmpty=");

        $z0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: java.lang.String TYPE> = "tfhd";

        return;
    }
}
