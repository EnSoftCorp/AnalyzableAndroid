public class android.support.v8.renderscript.Matrix4f extends java.lang.Object
{
    final float[] mMat;

    public void <init>()
    {
        android.support.v8.renderscript.Matrix4f r0;
        float[] $r1;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[16];

        r0.<android.support.v8.renderscript.Matrix4f: float[] mMat> = $r1;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadIdentity()>();

        return;
    }

    public void <init>(float[])
    {
        android.support.v8.renderscript.Matrix4f r0;
        float[] r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        r1 := @parameter0: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (float)[16];

        r0.<android.support.v8.renderscript.Matrix4f: float[] mMat> = $r2;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r4, 0, $i0);

        return;
    }

    public float[] getArray()
    {
        android.support.v8.renderscript.Matrix4f r0;
        float[] $r1;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        return $r1;
    }

    public float get(int, int)
    {
        android.support.v8.renderscript.Matrix4f r0;
        int i0, i1, $i2, $i3;
        float[] $r1;
        float $f0;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        $f0 = $r1[$i3];

        return $f0;
    }

    public void set(int, int, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        int i0, i1, $i2, $i3;
        float f0;
        float[] $r1;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        $r1[$i3] = f0;

        return;
    }

    public void loadIdentity()
    {
        android.support.v8.renderscript.Matrix4f r0;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r1[0] = 1.0F;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r2[1] = 0.0F;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r3[2] = 0.0F;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r4[3] = 0.0F;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r5[4] = 0.0F;

        $r6 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r6[5] = 1.0F;

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r7[6] = 0.0F;

        $r8 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r8[7] = 0.0F;

        $r9 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r9[8] = 0.0F;

        $r10 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r10[9] = 0.0F;

        $r11 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r11[10] = 1.0F;

        $r12 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r12[11] = 0.0F;

        $r13 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r13[12] = 0.0F;

        $r14 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r14[13] = 0.0F;

        $r15 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r15[14] = 0.0F;

        $r16 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r16[15] = 1.0F;

        return;
    }

    public void load(android.support.v8.renderscript.Matrix4f)
    {
        android.support.v8.renderscript.Matrix4f r0, r1;
        float[] $r2, $r3, $r4;
        int $i0;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        r1 := @parameter0: android.support.v8.renderscript.Matrix4f;

        $r2 = virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: float[] getArray()>();

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0);

        return;
    }

    public void load(android.support.v8.renderscript.Matrix3f)
    {
        android.support.v8.renderscript.Matrix4f r0;
        android.support.v8.renderscript.Matrix3f r1;
        float[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        r1 := @parameter0: android.support.v8.renderscript.Matrix3f;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r2 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f0 = $r2[0];

        $r3[0] = $f0;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r4 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f1 = $r4[1];

        $r5[1] = $f1;

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r6 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f2 = $r6[2];

        $r7[2] = $f2;

        $r8 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r8[3] = 0.0F;

        $r10 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r9 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f3 = $r9[3];

        $r10[4] = $f3;

        $r12 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r11 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f4 = $r11[4];

        $r12[5] = $f4;

        $r15 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r13 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f5 = $r13[5];

        $r15[6] = $f5;

        $r14 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r14[7] = 0.0F;

        $r18 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r16 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f6 = $r16[6];

        $r18[8] = $f6;

        $r19 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r17 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f7 = $r17[7];

        $r19[9] = $f7;

        $r22 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r20 = r1.<android.support.v8.renderscript.Matrix3f: float[] mMat>;

        $f8 = $r20[8];

        $r22[10] = $f8;

        $r21 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r21[11] = 0.0F;

        $r25 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r25[12] = 0.0F;

        $r26 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r26[13] = 0.0F;

        $r23 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r23[14] = 0.0F;

        $r24 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r24[15] = 1.0F;

        return;
    }

    public void loadRotate(float, float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, f40, f41;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r1[3] = 0.0F;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r3[7] = 0.0F;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r2[11] = 0.0F;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r5[12] = 0.0F;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r4[13] = 0.0F;

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r7[14] = 0.0F;

        $r6 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r6[15] = 1.0F;

        f40 = f0 * 0.017453292F;

        $d1 = (double) f40;

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        f4 = (float) $d0;

        $d3 = (double) f40;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        f5 = (float) $d2;

        $f14 = f1 * f1;

        $f15 = f2 * f2;

        $f16 = $f14 + $f15;

        $f17 = f3 * f3;

        $f18 = $f16 + $f17;

        $d4 = (double) $f18;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f6 = (float) $d5;

        $b0 = f6 cmpl 1.0F;

        if $b0 != 0 goto label1;

        f7 = 1.0F / f6;

        f1 = f1 * f7;

        f2 = f2 * f7;

        f3 = f3 * f7;

     label1:
        f41 = 1.0F - f4;

        f8 = f1 * f2;

        f9 = f2 * f3;

        f10 = f3 * f1;

        f11 = f1 * f5;

        f12 = f2 * f5;

        f13 = f3 * f5;

        $r8 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f19 = f1 * f1;

        $f20 = $f19 * f41;

        $f23 = $f20 + f4;

        $r8[0] = $f23;

        $r10 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f21 = f8 * f41;

        $f22 = $f21 - f13;

        $r10[4] = $f22;

        $r9 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f25 = f10 * f41;

        $f24 = $f25 + f12;

        $r9[8] = $f24;

        $r11 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f27 = f8 * f41;

        $f28 = $f27 + f13;

        $r11[1] = $f28;

        $r12 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f26 = f2 * f2;

        $f31 = $f26 * f41;

        $f30 = $f31 + f4;

        $r12[5] = $f30;

        $r13 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f29 = f9 * f41;

        $f34 = $f29 - f11;

        $r13[9] = $f34;

        $r15 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f33 = f10 * f41;

        $f32 = $f33 - f12;

        $r15[2] = $f32;

        $r14 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f36 = f9 * f41;

        $f35 = $f36 + f11;

        $r14[6] = $f35;

        $r16 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f39 = f3 * f3;

        $f38 = $f39 * f41;

        $f37 = $f38 + f4;

        $r16[10] = $f37;

        return;
    }

    public void loadScale(float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        float f0, f1, f2;
        float[] $r1, $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadIdentity()>();

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r1[0] = f0;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r2[5] = f1;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r3[10] = f2;

        return;
    }

    public void loadTranslate(float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        float f0, f1, f2;
        float[] $r1, $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadIdentity()>();

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r1[12] = f0;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r2[13] = f1;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r3[14] = f2;

        return;
    }

    public void loadMultiply(android.support.v8.renderscript.Matrix4f, android.support.v8.renderscript.Matrix4f)
    {
        android.support.v8.renderscript.Matrix4f r0, r1, r2;
        int i0, i1;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        r1 := @parameter0: android.support.v8.renderscript.Matrix4f;

        r2 := @parameter1: android.support.v8.renderscript.Matrix4f;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        f0 = 0.0F;

        f1 = 0.0F;

        f2 = 0.0F;

        f3 = 0.0F;

        i1 = 0;

     label2:
        if i1 >= 4 goto label3;

        f4 = virtualinvoke r2.<android.support.v8.renderscript.Matrix4f: float get(int,int)>(i0, i1);

        $f5 = virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: float get(int,int)>(i1, 0);

        $f6 = $f5 * f4;

        f0 = f0 + $f6;

        $f7 = virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: float get(int,int)>(i1, 1);

        $f8 = $f7 * f4;

        f1 = f1 + $f8;

        $f9 = virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: float get(int,int)>(i1, 2);

        $f11 = $f9 * f4;

        f2 = f2 + $f11;

        $f10 = virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: float get(int,int)>(i1, 3);

        $f12 = $f10 * f4;

        f3 = f3 + $f12;

        i1 = i1 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void set(int,int,float)>(i0, 0, f0);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void set(int,int,float)>(i0, 1, f1);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void set(int,int,float)>(i0, 2, f2);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void set(int,int,float)>(i0, 3, f3);

        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    public void loadOrtho(float, float, float, float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        float[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadIdentity()>();

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f6 = f1 - f0;

        $f7 = 2.0F / $f6;

        $r1[0] = $f7;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f8 = f3 - f2;

        $f9 = 2.0F / $f8;

        $r2[5] = $f9;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f10 = f5 - f4;

        $f11 = -2.0F / $f10;

        $r3[10] = $f11;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f13 = f1 + f0;

        $f15 = neg $f13;

        $f12 = f1 - f0;

        $f14 = $f15 / $f12;

        $r4[12] = $f14;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f16 = f3 + f2;

        $f17 = neg $f16;

        $f18 = f3 - f2;

        $f19 = $f17 / $f18;

        $r5[13] = $f19;

        $r6 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f21 = f5 + f4;

        $f23 = neg $f21;

        $f20 = f5 - f4;

        $f22 = $f23 / $f20;

        $r6[14] = $f22;

        return;
    }

    public void loadOrthoWindow(int, int)
    {
        android.support.v8.renderscript.Matrix4f r0;
        int i0, i1;
        float $f0, $f1;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>(0.0F, $f1, $f0, 0.0F, -1.0F, 1.0F);

        return;
    }

    public void loadFrustum(float, float, float, float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadIdentity()>();

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f7 = 2.0F * f4;

        $f6 = f1 - f0;

        $f8 = $f7 / $f6;

        $r1[0] = $f8;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f10 = 2.0F * f4;

        $f9 = f3 - f2;

        $f11 = $f10 / $f9;

        $r2[5] = $f11;

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f14 = f1 + f0;

        $f12 = f1 - f0;

        $f13 = $f14 / $f12;

        $r3[8] = $f13;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f17 = f3 + f2;

        $f15 = f3 - f2;

        $f16 = $f17 / $f15;

        $r4[9] = $f16;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f18 = f5 + f4;

        $f19 = neg $f18;

        $f20 = f5 - f4;

        $f21 = $f19 / $f20;

        $r5[10] = $f21;

        $r6 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r6[11] = -1.0F;

        $r8 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f22 = -2.0F * f5;

        $f23 = $f22 * f4;

        $f24 = f5 - f4;

        $f25 = $f23 / $f24;

        $r8[14] = $f25;

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r7[15] = 0.0F;

        return;
    }

    public void loadPerspective(float, float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $d0 = (double) f0;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 360.0;

        $f8 = (float) $d2;

        $d3 = (double) $f8;

        $d4 = staticinvoke <java.lang.Math: double tan(double)>($d3);

        $f9 = (float) $d4;

        f4 = f2 * $f9;

        f5 = neg f4;

        f6 = f5 * f1;

        f7 = f4 * f1;

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>(f6, f7, f5, f4, f2, f3);

        return;
    }

    public void loadProjectionNormalized(int, int)
    {
        android.support.v8.renderscript.Matrix4f r0, r1, r2, $r3, $r4;
        int i0, i1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r3.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r1 = $r3;

        $r4 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r4.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r2 = $r4;

        if i0 <= i1 goto label1;

        $f5 = (float) i0;

        $f4 = (float) i1;

        f0 = $f5 / $f4;

        $f6 = neg f0;

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>($f6, f0, -1.0F, 1.0F, 1.0F, 100.0F);

        goto label2;

     label1:
        $f2 = (float) i1;

        $f1 = (float) i0;

        f7 = $f2 / $f1;

        $f3 = neg f7;

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>(-1.0F, 1.0F, $f3, f7, 1.0F, 100.0F);

     label2:
        virtualinvoke r2.<android.support.v8.renderscript.Matrix4f: void loadRotate(float,float,float,float)>(180.0F, 0.0F, 1.0F, 0.0F);

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadMultiply(android.support.v8.renderscript.Matrix4f,android.support.v8.renderscript.Matrix4f)>(r1, r2);

        virtualinvoke r2.<android.support.v8.renderscript.Matrix4f: void loadScale(float,float,float)>(-2.0F, 2.0F, 1.0F);

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadMultiply(android.support.v8.renderscript.Matrix4f,android.support.v8.renderscript.Matrix4f)>(r1, r2);

        virtualinvoke r2.<android.support.v8.renderscript.Matrix4f: void loadTranslate(float,float,float)>(0.0F, 0.0F, 2.0F);

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadMultiply(android.support.v8.renderscript.Matrix4f,android.support.v8.renderscript.Matrix4f)>(r1, r2);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void load(android.support.v8.renderscript.Matrix4f)>(r1);

        return;
    }

    public void multiply(android.support.v8.renderscript.Matrix4f)
    {
        android.support.v8.renderscript.Matrix4f r0, r1, r2, $r3;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        r1 := @parameter0: android.support.v8.renderscript.Matrix4f;

        $r3 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r3.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.support.v8.renderscript.Matrix4f: void loadMultiply(android.support.v8.renderscript.Matrix4f,android.support.v8.renderscript.Matrix4f)>(r0, r1);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void load(android.support.v8.renderscript.Matrix4f)>(r2);

        return;
    }

    public void rotate(float, float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0, r1, $r2;
        float f0, f1, f2, f3;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r2 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r2.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadRotate(float,float,float,float)>(f0, f1, f2, f3);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void multiply(android.support.v8.renderscript.Matrix4f)>(r1);

        return;
    }

    public void scale(float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0, r1, $r2;
        float f0, f1, f2;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r2 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r2.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadScale(float,float,float)>(f0, f1, f2);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void multiply(android.support.v8.renderscript.Matrix4f)>(r1);

        return;
    }

    public void translate(float, float, float)
    {
        android.support.v8.renderscript.Matrix4f r0, r1, $r2;
        float f0, f1, f2;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r2 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r2.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.support.v8.renderscript.Matrix4f: void loadTranslate(float,float,float)>(f0, f1, f2);

        virtualinvoke r0.<android.support.v8.renderscript.Matrix4f: void multiply(android.support.v8.renderscript.Matrix4f)>(r1);

        return;
    }

    private float computeCofactor(int, int)
    {
        android.support.v8.renderscript.Matrix4f r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i8 = i0 + 1;

        i2 = $i8 % 4;

        $i9 = i0 + 2;

        i3 = $i9 % 4;

        $i10 = i0 + 3;

        i4 = $i10 % 4;

        $i11 = i1 + 1;

        i5 = $i11 % 4;

        $i12 = i1 + 2;

        i6 = $i12 % 4;

        $i14 = i1 + 3;

        i7 = $i14 % 4;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i13 = 4 * i5;

        $i15 = i2 + $i13;

        $f7 = $r1[$i15];

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i17 = 4 * i6;

        $i16 = i3 + $i17;

        $f2 = $r2[$i16];

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i18 = 4 * i7;

        $i19 = i4 + $i18;

        $f3 = $r3[$i19];

        $f9 = $f2 * $f3;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i21 = 4 * i7;

        $i20 = i3 + $i21;

        $f5 = $r4[$i20];

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i22 = 4 * i6;

        $i23 = i4 + $i22;

        $f4 = $r5[$i23];

        $f8 = $f5 * $f4;

        $f6 = $f9 - $f8;

        $f19 = $f7 * $f6;

        $r6 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i25 = 4 * i6;

        $i26 = i2 + $i25;

        $f16 = $r6[$i26];

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i24 = 4 * i5;

        $i29 = i3 + $i24;

        $f10 = $r7[$i29];

        $r8 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i27 = 4 * i7;

        $i28 = i4 + $i27;

        $f11 = $r8[$i28];

        $f18 = $f10 * $f11;

        $r9 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i30 = 4 * i7;

        $i33 = i3 + $i30;

        $f13 = $r9[$i33];

        $r10 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i32 = 4 * i5;

        $i31 = i4 + $i32;

        $f14 = $r10[$i31];

        $f12 = $f13 * $f14;

        $f17 = $f18 - $f12;

        $f15 = $f16 * $f17;

        $f29 = $f19 - $f15;

        $r12 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i37 = 4 * i7;

        $i38 = i2 + $i37;

        $f24 = $r12[$i38];

        $r11 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i34 = 4 * i5;

        $i35 = i3 + $i34;

        $f21 = $r11[$i35];

        $r14 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i36 = 4 * i6;

        $i42 = i4 + $i36;

        $f20 = $r14[$i42];

        $f22 = $f21 * $f20;

        $r13 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i39 = 4 * i6;

        $i40 = i3 + $i39;

        $f26 = $r13[$i40];

        $r15 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i41 = 4 * i5;

        $i43 = i4 + $i41;

        $f27 = $r15[$i43];

        $f23 = $f26 * $f27;

        $f25 = $f22 - $f23;

        $f30 = $f24 * $f25;

        f0 = $f29 + $f30;

        $i45 = i0 + i1;

        $i44 = $i45 & 1;

        if $i44 == 0 goto label1;

        $f28 = neg f0;

        goto label2;

     label1:
        $f28 = f0;

     label2:
        f1 = $f28;

        return f1;
    }

    public boolean inverse()
    {
        android.support.v8.renderscript.Matrix4f r0, r1, $r2;
        int i0, i1, $i3, $i4, i5;
        float[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19;
        byte $b2;
        double $d0;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        $r2 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r2.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        i1 = 0;

     label2:
        if i1 >= 4 goto label3;

        $r12 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i3 = 4 * i0;

        $i4 = $i3 + i1;

        $f17 = specialinvoke r0.<android.support.v8.renderscript.Matrix4f: float computeCofactor(int,int)>(i0, i1);

        $r12[$i4] = $f17;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f1 = $r3[0];

        $r4 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f0 = $r4[0];

        $f5 = $f1 * $f0;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f3 = $r5[4];

        $r6 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f2 = $r6[1];

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f8 = $r7[8];

        $r8 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f6 = $r8[2];

        $f7 = $f8 * $f6;

        $f14 = $f9 + $f7;

        $r9 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f12 = $r9[12];

        $r10 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f10 = $r10[3];

        $f11 = $f12 * $f10;

        f18 = $f14 + $f11;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>(f18);

        $d0 = (double) $f13;

        $b2 = $d0 cmpg 1.0E-6;

        if $b2 >= 0 goto label5;

        return 0;

     label5:
        f19 = 1.0F / f18;

        i5 = 0;

     label6:
        if i5 >= 16 goto label7;

        $r13 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r11 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f15 = $r11[i5];

        $f16 = $f15 * f19;

        $r13[i5] = $f16;

        i5 = i5 + 1;

        goto label6;

     label7:
        return 1;
    }

    public boolean inverseTranspose()
    {
        android.support.v8.renderscript.Matrix4f r0, r1, $r2;
        int i0, i1, $i3, $i4, i5;
        float[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19;
        byte $b2;
        double $d0;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        $r2 = new android.support.v8.renderscript.Matrix4f;

        specialinvoke $r2.<android.support.v8.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        i1 = 0;

     label2:
        if i1 >= 4 goto label3;

        $r12 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i3 = 4 * i1;

        $i4 = $i3 + i0;

        $f17 = specialinvoke r0.<android.support.v8.renderscript.Matrix4f: float computeCofactor(int,int)>(i0, i1);

        $r12[$i4] = $f17;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f1 = $r3[0];

        $r4 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f0 = $r4[0];

        $f5 = $f1 * $f0;

        $r5 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f3 = $r5[4];

        $r6 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f2 = $r6[4];

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $r7 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f8 = $r7[8];

        $r8 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f6 = $r8[8];

        $f7 = $f8 * $f6;

        $f14 = $f9 + $f7;

        $r9 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f12 = $r9[12];

        $r10 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f10 = $r10[12];

        $f11 = $f12 * $f10;

        f18 = $f14 + $f11;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>(f18);

        $d0 = (double) $f13;

        $b2 = $d0 cmpg 1.0E-6;

        if $b2 >= 0 goto label5;

        return 0;

     label5:
        f19 = 1.0F / f18;

        i5 = 0;

     label6:
        if i5 >= 16 goto label7;

        $r13 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $r11 = r1.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $f15 = $r11[i5];

        $f16 = $f15 * f19;

        $r13[i5] = $f16;

        i5 = i5 + 1;

        goto label6;

     label7:
        return 1;
    }

    public void transpose()
    {
        android.support.v8.renderscript.Matrix4f r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, $f1;
        float[] $r1, $r2, $r3, $r4;

        r0 := @this: android.support.v8.renderscript.Matrix4f;

        i0 = 0;

     label1:
        if i0 >= 3 goto label4;

        i1 = i0 + 1;

     label2:
        if i1 >= 4 goto label3;

        $r1 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i2 = i0 * 4;

        $i3 = $i2 + i1;

        f0 = $r1[$i3];

        $r3 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i4 = i0 * 4;

        $i7 = $i4 + i1;

        $r2 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i5 = i1 * 4;

        $i6 = $i5 + i0;

        $f1 = $r2[$i6];

        $r3[$i7] = $f1;

        $r4 = r0.<android.support.v8.renderscript.Matrix4f: float[] mMat>;

        $i8 = i1 * 4;

        $i9 = $i8 + i0;

        $r4[$i9] = f0;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }
}
