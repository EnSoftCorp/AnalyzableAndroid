public class com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry extends com.googlecode.mp4parser.boxes.mp4.samplegrouping.GroupEntry
{
    public static final java.lang.String TYPE;
    private short operationPointCut;
    private short targetRateShare;
    private java.util.List entries;
    private int maximumBitrate;
    private int minimumBitrate;
    private short discardPriority;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        java.util.LinkedList $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        specialinvoke r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.GroupEntry: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries> = $r1;

        return;
    }

    public void parse(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        java.nio.ByteBuffer r1;
        int i0, $i3, $i5, $i7, $i8, $i11;
        short $s1, $s2, $s9, $s12, $s13;
        long $l4, $l6, $l10;
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry $r2;
        java.util.List $r3;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        r1 := @parameter0: java.nio.ByteBuffer;

        $s1 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut> = $s1;

        $s2 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        if $s2 != 1 goto label1;

        $s13 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare> = $s13;

        goto label3;

     label1:
        i0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

     label2:
        $i3 = i0;

        i0 = i0 + -1;

        if $i3 <= 0 goto label3;

        $r3 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        $r2 = new com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry;

        $l10 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i11 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l10);

        $s12 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        specialinvoke $r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry: void <init>(int,short)>($i11, $s12);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label2;

     label3:
        $l4 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i5 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l4);

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate> = $i5;

        $l6 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i7 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l6);

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate> = $i7;

        $i8 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        $s9 = (short) $i8;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority> = $s9;

        return;
    }

    public java.nio.ByteBuffer get()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        java.nio.ByteBuffer r1;
        java.util.Iterator r2;
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry r3;
        short $s0, $s1, $s4, $s5, $s8, $s10, $s11;
        int $i2, $i3, $i6, $i7, $i9;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $s0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        if $s0 != 1 goto label1;

        $i3 = 13;

        goto label2;

     label1:
        $s1 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        $i2 = $s1 * 6;

        $i3 = $i2 + 11;

     label2:
        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i3);

        $s4 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s4);

        $s5 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        if $s5 != 1 goto label3;

        $s11 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s11);

        goto label5;

     label3:
        $r5 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry) $r8;

        $i9 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry: int getAvailableBitrate()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i9);

        $s10 = virtualinvoke r3.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry$Entry: short getTargetRateShare()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s10);

        goto label4;

     label5:
        $i6 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $i7 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i7);

        $s8 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $s8);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        short $s0, $s1, $s6, $s7, $s8, $s9;
        int $i2, $i3, $i4, $i5;
        java.util.List $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label03;

     label02:
        return 0;

     label03:
        r2 = (com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry) r1;

        $s1 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority>;

        $s0 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority>;

        if $s1 == $s0 goto label04;

        return 0;

     label04:
        $i3 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate>;

        $i2 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate>;

        if $i3 == $i2 goto label05;

        return 0;

     label05:
        $i5 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate>;

        $i4 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate>;

        if $i5 == $i4 goto label06;

        return 0;

     label06:
        $s7 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        $s6 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        if $s7 == $s6 goto label07;

        return 0;

     label07:
        $s9 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare>;

        $s8 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare>;

        if $s9 == $s8 goto label08;

        return 0;

     label08:
        $r5 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        if $r5 == null goto label09;

        $r8 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        $r6 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        $z0 = interfaceinvoke $r8.<java.util.List: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label11;

        goto label10;

     label09:
        $r7 = r2.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        if $r7 == null goto label11;

     label10:
        return 0;

     label11:
        return 1;
    }

    public int hashCode()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short s0, $s1, $s8;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, i12, i13, i14, i15;
        java.util.List $r1, $r2;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        s0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        $i2 = 31 * s0;

        $s1 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare>;

        i11 = $i2 + $s1;

        $i3 = 31 * i11;

        $r1 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        if $r1 == null goto label1;

        $r2 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        $i10 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        goto label2;

     label1:
        $i10 = 0;

     label2:
        i12 = $i3 + $i10;

        $i5 = 31 * i12;

        $i4 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate>;

        i13 = $i5 + $i4;

        $i7 = 31 * i13;

        $i6 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate>;

        i14 = $i7 + $i6;

        $i9 = 31 * i14;

        $s8 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority>;

        i15 = $i9 + $s8;

        return i15;
    }

    public short getOperationPointCut()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short $s0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $s0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut>;

        return $s0;
    }

    public void setOperationPointCut(short)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short s0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        s0 := @parameter0: short;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short operationPointCut> = s0;

        return;
    }

    public short getTargetRateShare()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short $s0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $s0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare>;

        return $s0;
    }

    public void setTargetRateShare(short)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short s0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        s0 := @parameter0: short;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short targetRateShare> = s0;

        return;
    }

    public java.util.List getEntries()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        java.util.List $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $r1 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries>;

        return $r1;
    }

    public void setEntries(java.util.List)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        java.util.List r1;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        r1 := @parameter0: java.util.List;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.util.List entries> = r1;

        return;
    }

    public int getMaximumBitrate()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate>;

        return $i0;
    }

    public void setMaximumBitrate(int)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        i0 := @parameter0: int;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int maximumBitrate> = i0;

        return;
    }

    public int getMinimumBitrate()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $i0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate>;

        return $i0;
    }

    public void setMinimumBitrate(int)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        i0 := @parameter0: int;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: int minimumBitrate> = i0;

        return;
    }

    public short getDiscardPriority()
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short $s0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        $s0 = r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority>;

        return $s0;
    }

    public void setDiscardPriority(short)
    {
        com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry r0;
        short s0;

        r0 := @this: com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry;

        s0 := @parameter0: short;

        r0.<com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: short discardPriority> = s0;

        return;
    }

    public static void <clinit>()
    {
        <com.googlecode.mp4parser.boxes.mp4.samplegrouping.RateShareEntry: java.lang.String TYPE> = "rash";

        return;
    }
}
