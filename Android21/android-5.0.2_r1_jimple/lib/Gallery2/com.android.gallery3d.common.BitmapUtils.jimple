public class com.android.gallery3d.common.BitmapUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int DEFAULT_JPEG_QUALITY;
    public static final int UNCONSTRAINED;

    private void <init>()
    {
        com.android.gallery3d.common.BitmapUtils r0;

        r0 := @this: com.android.gallery3d.common.BitmapUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int computeSampleSize(int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = staticinvoke <com.android.gallery3d.common.BitmapUtils: int computeInitialSampleSize(int,int,int,int)>(i0, i1, i2, i3);

        if i4 > 8 goto label1;

        $i7 = staticinvoke <com.android.gallery3d.common.Utils: int nextPowerOf2(int)>(i4);

        goto label2;

     label1:
        $i5 = i4 + 7;

        $i6 = $i5 / 8;

        $i7 = $i6 * 8;

     label2:
        return $i7;
    }

    private static int computeInitialSampleSize(int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        float $f0, $f1, $f2, $f3, $f4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i3 != -1 goto label1;

        if i2 != -1 goto label1;

        return 1;

     label1:
        if i3 != -1 goto label2;

        $i10 = 1;

        goto label3;

     label2:
        $i6 = i0 * i1;

        $f1 = (float) $i6;

        $f0 = (float) i3;

        $f2 = $f1 / $f0;

        $f3 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f2);

        $f4 = staticinvoke <android.util.FloatMath: float ceil(float)>($f3);

        $i10 = (int) $f4;

     label3:
        i4 = $i10;

        if i2 != -1 goto label4;

        return i4;

     label4:
        $i8 = i0 / i2;

        $i7 = i1 / i2;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i7);

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i4);

        return $i9;
    }

    public static int computeSampleSizeLarger(int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i5 = i0 / i2;

        $i4 = i1 / i2;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        if i3 > 1 goto label1;

        return 1;

     label1:
        if i3 > 8 goto label2;

        $i7 = staticinvoke <com.android.gallery3d.common.Utils: int prevPowerOf2(int)>(i3);

        goto label3;

     label2:
        $i6 = i3 / 8;

        $i7 = $i6 * 8;

     label3:
        return $i7;
    }

    public static int computeSampleSizeLarger(float)
    {
        float f0, $f1, $f2;
        int i0, $i1, $i2;

        f0 := @parameter0: float;

        $f1 = 1.0F / f0;

        $f2 = staticinvoke <android.util.FloatMath: float floor(float)>($f1);

        i0 = (int) $f2;

        if i0 > 1 goto label1;

        return 1;

     label1:
        if i0 > 8 goto label2;

        $i2 = staticinvoke <com.android.gallery3d.common.Utils: int prevPowerOf2(int)>(i0);

        goto label3;

     label2:
        $i1 = i0 / 8;

        $i2 = $i1 * 8;

     label3:
        return $i2;
    }

    public static int computeSampleSize(float)
    {
        float f0, $f1, $f2;
        int i0, $i2, $i3, $i4, $i5;
        byte $b1;
        boolean $z0;

        f0 := @parameter0: float;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.gallery3d.common.Utils: void assertTrue(boolean)>($z0);

        $f1 = 1.0F / f0;

        $f2 = staticinvoke <android.util.FloatMath: float ceil(float)>($f1);

        $i2 = (int) $f2;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2);

        if i0 > 8 goto label3;

        $i5 = staticinvoke <com.android.gallery3d.common.Utils: int nextPowerOf2(int)>(i0);

        goto label4;

     label3:
        $i3 = i0 + 7;

        $i4 = $i3 / 8;

        $i5 = $i4 * 8;

     label4:
        return $i5;
    }

    public static android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap, float, boolean)
    {
        android.graphics.Bitmap r0, r1;
        float f0, $f1, $f2, $f3, $f4;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.Canvas r2, $r5;
        android.graphics.Paint r3, $r6;
        android.graphics.Bitmap$Config $r4;

        r0 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        $i2 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i2;

        $f2 = $f1 * f0;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i3 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f3 = (float) $i3;

        $f4 = $f3 * f0;

        i1 = staticinvoke <java.lang.Math: int round(float)>($f4);

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        if i0 != $i4 goto label1;

        $i5 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if i1 != $i5 goto label1;

        return r0;

     label1:
        $r4 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap$Config getConfig(android.graphics.Bitmap)>(r0);

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r4);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r5;

        virtualinvoke r2.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(6);

        r3 = $r6;

        virtualinvoke r2.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r0, 0.0F, 0.0F, r3);

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

     label2:
        return r1;
    }

    private static android.graphics.Bitmap$Config getConfig(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        android.graphics.Bitmap$Config r1;

        r0 := @parameter0: android.graphics.Bitmap;

        r1 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if r1 != null goto label1;

        r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        return r1;
    }

    public static android.graphics.Bitmap resizeDownBySideLength(android.graphics.Bitmap, int, boolean)
    {
        android.graphics.Bitmap r0, $r1;
        int i0, i1, i2;
        boolean z0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        byte $b3;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i2 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) i0;

        $f1 = (float) i1;

        $f6 = $f2 / $f1;

        $f4 = (float) i0;

        $f3 = (float) i2;

        $f5 = $f4 / $f3;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f6, $f5);

        $b3 = f0 cmpl 1.0F;

        if $b3 < 0 goto label1;

        return r0;

     label1:
        $r1 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>(r0, f0, z0);

        return $r1;
    }

    public static android.graphics.Bitmap resizeAndCropCenter(android.graphics.Bitmap, int, boolean)
    {
        android.graphics.Bitmap r0, r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.Canvas r2, $r5;
        android.graphics.Paint r3, $r6;
        android.graphics.Bitmap$Config $r4;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i2 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if i1 != i0 goto label1;

        if i2 != i0 goto label1;

        return r0;

     label1:
        $f1 = (float) i0;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $f2 = (float) $i5;

        f0 = $f1 / $f2;

        $r4 = staticinvoke <com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap$Config getConfig(android.graphics.Bitmap)>(r0);

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r4);

        $i6 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f3 = (float) $i6;

        $f4 = f0 * $f3;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f4);

        $i7 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f5 = (float) $i7;

        $f6 = f0 * $f5;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f6);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r5;

        $i8 = i0 - i3;

        $f7 = (float) $i8;

        $f10 = $f7 / 2.0F;

        $i9 = i0 - i4;

        $f9 = (float) $i9;

        $f8 = $f9 / 2.0F;

        virtualinvoke r2.<android.graphics.Canvas: void translate(float,float)>($f10, $f8);

        virtualinvoke r2.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(6);

        r3 = $r6;

        virtualinvoke r2.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r0, 0.0F, 0.0F, r3);

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

     label2:
        return r1;
    }

    public static void recycleSilently(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        java.lang.Throwable r1, $r2;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapUtils", "unable recycle bitmap", r1);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap, int, boolean)
    {
        android.graphics.Bitmap r0, r2;
        int i0, i1, i2;
        boolean z0;
        android.graphics.Matrix r1, $r3;
        float $f0;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 0 goto label1;

        return r0;

     label1:
        i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i2 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r1 = $r3;

        $f0 = (float) i0;

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float)>($f0);

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r0, 0, 0, i1, i2, r1, 1);

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

     label2:
        return r2;
    }

    public static android.graphics.Bitmap createVideoThumbnail(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Class r1;
        java.lang.Object r2, $r17, $r20, $r31;
        java.lang.reflect.Method r3, $r15, $r18, $r22, $r29, $r33, $r37, $r39, $r47, $r49, $r58, $r60, $r75, $r80, $r82;
        android.graphics.Bitmap r4, r6, r90, r91;
        java.lang.Throwable r8, $r56;
        java.lang.Class[] $r10, $r13, $r19, $r23, $r28, $r32, $r36, $r38, $r48, $r50, $r57, $r59, $r66, $r73, $r78;
        java.lang.Object[] $r11, $r14, $r21, $r25, $r26, $r30, $r34, $r44, $r46, $r54, $r61, $r67, $r74, $r79, $r81;
        int $i0, $i1;
        byte[] $r16, r89;
        java.lang.Exception $r40, $r55, $r63, $r64, $r69, $r70, $r72, $r76, $r85, $r86, $r88;
        java.lang.IllegalArgumentException $r41;
        java.lang.reflect.InvocationTargetException $r42, r99;
        java.lang.ClassNotFoundException $r51, r101;
        java.lang.InstantiationException $r52, r97;
        java.lang.RuntimeException $r65;
        java.lang.NoSuchMethodException $r71, r103;
        java.lang.IllegalAccessException $r83, r105;

        r0 := @parameter0: java.lang.String;

        r1 = null;

        r2 = null;

     label01:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.media.MediaMetadataRetriever");

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "java/lang/String";

        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setDataSource", $r10);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r0;

        virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r11);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 9 goto label06;

        $r32 = newarray (java.lang.Class)[0];

        $r33 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("captureFrame", $r32);

        $r30 = newarray (java.lang.Object)[0];

        $r31 = virtualinvoke $r33.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r30);

        r4 = (android.graphics.Bitmap) $r31;

     label02:
        if r2 == null goto label03;

        $r36 = newarray (java.lang.Class)[0];

        $r37 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r36);

        $r34 = newarray (java.lang.Object)[0];

        virtualinvoke $r37.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r34);

     label03:
        goto label05;

     label04:
        $r88 := @caughtexception;

     label05:
        return r4;

     label06:
        $r13 = newarray (java.lang.Class)[0];

        $r15 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getEmbeddedPicture", $r13);

        $r14 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r14);

        $r16 = (byte[]) $r17;

        r89 = (byte[]) $r16;

        if r89 == null goto label11;

        $i1 = lengthof r89;

        r90 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r89, 0, $i1);

        if r90 == null goto label11;

        r6 = r90;

     label07:
        if r2 == null goto label08;

        $r28 = newarray (java.lang.Class)[0];

        $r29 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r28);

        $r26 = newarray (java.lang.Object)[0];

        virtualinvoke $r29.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r26);

     label08:
        goto label10;

     label09:
        $r64 := @caughtexception;

     label10:
        return r6;

     label11:
        $r19 = newarray (java.lang.Class)[0];

        $r18 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getFrameAtTime", $r19);

        $r21 = newarray (java.lang.Object)[0];

        $r20 = virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r21);

        r91 = (android.graphics.Bitmap) $r20;

     label12:
        if r2 == null goto label13;

        $r23 = newarray (java.lang.Class)[0];

        $r22 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r23);

        $r25 = newarray (java.lang.Object)[0];

        virtualinvoke $r22.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r25);

     label13:
        goto label15;

     label14:
        $r70 := @caughtexception;

     label15:
        return r91;

     label16:
        $r41 := @caughtexception;

     label17:
        if r2 == null goto label18;

        $r38 = newarray (java.lang.Class)[0];

        $r39 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r38);

        $r44 = newarray (java.lang.Object)[0];

        virtualinvoke $r39.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r44);

     label18:
        goto label49;

     label19:
        $r55 := @caughtexception;

        goto label49;

     label20:
        $r65 := @caughtexception;

     label21:
        if r2 == null goto label22;

        $r66 = newarray (java.lang.Class)[0];

        $r75 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r66);

        $r74 = newarray (java.lang.Object)[0];

        virtualinvoke $r75.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r74);

     label22:
        goto label49;

     label23:
        $r76 := @caughtexception;

        goto label49;

     label24:
        $r52 := @caughtexception;

        r97 = $r52;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapUtils", "createVideoThumbnail", r97);

     label25:
        if r2 == null goto label26;

        $r59 = newarray (java.lang.Class)[0];

        $r60 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r59);

        $r61 = newarray (java.lang.Object)[0];

        virtualinvoke $r60.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r61);

     label26:
        goto label49;

     label27:
        $r85 := @caughtexception;

        goto label49;

     label28:
        $r42 := @caughtexception;

        r99 = $r42;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapUtils", "createVideoThumbnail", r99);

     label29:
        if r2 == null goto label30;

        $r48 = newarray (java.lang.Class)[0];

        $r47 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r48);

        $r46 = newarray (java.lang.Object)[0];

        virtualinvoke $r47.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r46);

     label30:
        goto label49;

     label31:
        $r63 := @caughtexception;

        goto label49;

     label32:
        $r51 := @caughtexception;

        r101 = $r51;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapUtils", "createVideoThumbnail", r101);

     label33:
        if r2 == null goto label34;

        $r50 = newarray (java.lang.Class)[0];

        $r49 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r50);

        $r54 = newarray (java.lang.Object)[0];

        virtualinvoke $r49.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r54);

     label34:
        goto label49;

     label35:
        $r40 := @caughtexception;

        goto label49;

     label36:
        $r71 := @caughtexception;

        r103 = $r71;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapUtils", "createVideoThumbnail", r103);

     label37:
        if r2 == null goto label38;

        $r73 = newarray (java.lang.Class)[0];

        $r82 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r73);

        $r81 = newarray (java.lang.Object)[0];

        virtualinvoke $r82.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r81);

     label38:
        goto label49;

     label39:
        $r72 := @caughtexception;

        goto label49;

     label40:
        $r83 := @caughtexception;

        r105 = $r83;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BitmapUtils", "createVideoThumbnail", r105);

     label41:
        if r2 == null goto label42;

        $r78 = newarray (java.lang.Class)[0];

        $r80 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r78);

        $r79 = newarray (java.lang.Object)[0];

        virtualinvoke $r80.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r79);

     label42:
        goto label49;

     label43:
        $r69 := @caughtexception;

        goto label49;

     label44:
        $r56 := @caughtexception;

        r8 = $r56;

     label45:
        if r2 == null goto label46;

        $r57 = newarray (java.lang.Class)[0];

        $r58 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("release", $r57);

        $r67 = newarray (java.lang.Object)[0];

        virtualinvoke $r58.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r67);

     label46:
        goto label48;

     label47:
        $r86 := @caughtexception;

     label48:
        throw r8;

     label49:
        return null;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.IllegalArgumentException from label01 to label02 with label16;
        catch java.lang.IllegalArgumentException from label06 to label07 with label16;
        catch java.lang.IllegalArgumentException from label11 to label12 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.RuntimeException from label01 to label02 with label20;
        catch java.lang.RuntimeException from label06 to label07 with label20;
        catch java.lang.RuntimeException from label11 to label12 with label20;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.InstantiationException from label01 to label02 with label24;
        catch java.lang.InstantiationException from label06 to label07 with label24;
        catch java.lang.InstantiationException from label11 to label12 with label24;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label28;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label28;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label28;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.ClassNotFoundException from label01 to label02 with label32;
        catch java.lang.ClassNotFoundException from label06 to label07 with label32;
        catch java.lang.ClassNotFoundException from label11 to label12 with label32;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.NoSuchMethodException from label01 to label02 with label36;
        catch java.lang.NoSuchMethodException from label06 to label07 with label36;
        catch java.lang.NoSuchMethodException from label11 to label12 with label36;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.IllegalAccessException from label01 to label02 with label40;
        catch java.lang.IllegalAccessException from label06 to label07 with label40;
        catch java.lang.IllegalAccessException from label11 to label12 with label40;
        catch java.lang.Exception from label41 to label42 with label43;
        catch java.lang.Throwable from label01 to label02 with label44;
        catch java.lang.Throwable from label06 to label07 with label44;
        catch java.lang.Throwable from label11 to label12 with label44;
        catch java.lang.Throwable from label16 to label17 with label44;
        catch java.lang.Throwable from label20 to label21 with label44;
        catch java.lang.Throwable from label24 to label25 with label44;
        catch java.lang.Throwable from label28 to label29 with label44;
        catch java.lang.Throwable from label32 to label33 with label44;
        catch java.lang.Throwable from label36 to label37 with label44;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Exception from label45 to label46 with label47;
        catch java.lang.Throwable from label44 to label45 with label44;
    }

    public static byte[] compressToBytes(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        byte[] $r1;

        r0 := @parameter0: android.graphics.Bitmap;

        $r1 = staticinvoke <com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap,int)>(r0, 90);

        return $r1;
    }

    public static byte[] compressToBytes(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap r0;
        int i0;
        java.io.ByteArrayOutputStream r1, $r2;
        android.graphics.Bitmap$CompressFormat $r3;
        byte[] $r4;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(65536);

        r1 = $r2;

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, i0, r1);

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }

    public static boolean isSupportedByRegionDecoder(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("image/");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/gif");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("bmp");

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static boolean isRotationSupported(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/jpeg");

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.common.BitmapUtils: int UNCONSTRAINED> = -1;

        <com.android.gallery3d.common.BitmapUtils: int DEFAULT_JPEG_QUALITY> = 90;

        <com.android.gallery3d.common.BitmapUtils: java.lang.String TAG> = "BitmapUtils";

        return;
    }
}
