public class com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader extends java.lang.Object
{
    public int first_mb_in_slice;
    public com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type;
    public int pic_parameter_set_id;
    public int colour_plane_id;
    public int frame_num;
    public boolean field_pic_flag;
    public boolean bottom_field_flag;
    public int idr_pic_id;
    public int pic_order_cnt_lsb;
    public int delta_pic_order_cnt_bottom;

    public void <init>(java.io.InputStream, com.googlecode.mp4parser.h264.model.SeqParameterSet, com.googlecode.mp4parser.h264.model.PictureParameterSet, boolean) throws java.io.IOException
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader r0;
        java.io.InputStream r1;
        com.googlecode.mp4parser.h264.model.SeqParameterSet r2;
        com.googlecode.mp4parser.h264.model.PictureParameterSet r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.googlecode.mp4parser.h264.read.CAVLCReader r4, $r5;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.googlecode.mp4parser.h264.model.SeqParameterSet;

        r3 := @parameter2: com.googlecode.mp4parser.h264.model.PictureParameterSet;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean field_pic_flag> = 0;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean bottom_field_flag> = 0;

        virtualinvoke r1.<java.io.InputStream: int read()>();

        $r5 = new com.googlecode.mp4parser.h264.read.CAVLCReader;

        specialinvoke $r5.<com.googlecode.mp4parser.h264.read.CAVLCReader: void <init>(java.io.InputStream)>(r1);

        r4 = $r5;

        $i1 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readUE(java.lang.String)>("SliceHeader: first_mb_in_slice");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int first_mb_in_slice> = $i1;

        $i2 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readUE(java.lang.String)>("SliceHeader: slice_type");

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label4;
            case 9: goto label5;
            default: goto label6;
        };

     label1:
        $r6 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType P>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type> = $r6;

        goto label6;

     label2:
        $r10 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType B>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type> = $r10;

        goto label6;

     label3:
        $r8 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType I>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type> = $r8;

        goto label6;

     label4:
        $r9 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SP>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type> = $r9;

        goto label6;

     label5:
        $r7 = <com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType SI>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type> = $r7;

     label6:
        $i3 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readUE(java.lang.String)>("SliceHeader: pic_parameter_set_id");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int pic_parameter_set_id> = $i3;

        $z1 = r2.<com.googlecode.mp4parser.h264.model.SeqParameterSet: boolean residual_color_transform_flag>;

        if $z1 == 0 goto label7;

        $i13 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readU(int,java.lang.String)>(2, "SliceHeader: colour_plane_id");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int colour_plane_id> = $i13;

     label7:
        $i4 = r2.<com.googlecode.mp4parser.h264.model.SeqParameterSet: int log2_max_frame_num_minus4>;

        $i5 = $i4 + 4;

        $i6 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readU(int,java.lang.String)>($i5, "SliceHeader: frame_num");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int frame_num> = $i6;

        $z2 = r2.<com.googlecode.mp4parser.h264.model.SeqParameterSet: boolean frame_mbs_only_flag>;

        if $z2 != 0 goto label8;

        $z5 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: boolean readBool(java.lang.String)>("SliceHeader: field_pic_flag");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean field_pic_flag> = $z5;

        $z7 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean field_pic_flag>;

        if $z7 == 0 goto label8;

        $z6 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: boolean readBool(java.lang.String)>("SliceHeader: bottom_field_flag");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean bottom_field_flag> = $z6;

     label8:
        if z0 == 0 goto label9;

        $i7 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readUE(java.lang.String)>("SliceHeader: idr_pic_id");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int idr_pic_id> = $i7;

        $i9 = r2.<com.googlecode.mp4parser.h264.model.SeqParameterSet: int pic_order_cnt_type>;

        if $i9 != 0 goto label9;

        $i8 = r2.<com.googlecode.mp4parser.h264.model.SeqParameterSet: int log2_max_pic_order_cnt_lsb_minus4>;

        $i11 = $i8 + 4;

        $i10 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readU(int,java.lang.String)>($i11, "SliceHeader: pic_order_cnt_lsb");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int pic_order_cnt_lsb> = $i10;

        $z4 = r3.<com.googlecode.mp4parser.h264.model.PictureParameterSet: boolean pic_order_present_flag>;

        if $z4 == 0 goto label9;

        $z3 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean field_pic_flag>;

        if $z3 != 0 goto label9;

        $i12 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readSE(java.lang.String)>("SliceHeader: delta_pic_order_cnt_bottom");

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int delta_pic_order_cnt_bottom> = $i12;

     label9:
        return;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType $r5;
        boolean $z0, $z1;
        java.lang.String $r24;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SliceHeader{first_mb_in_slice=");

        $i0 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int first_mb_in_slice>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slice_type=");

        $r5 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader$SliceType slice_type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pic_parameter_set_id=");

        $i1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int pic_parameter_set_id>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", colour_plane_id=");

        $i2 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int colour_plane_id>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", frame_num=");

        $i3 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int frame_num>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", field_pic_flag=");

        $z0 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean field_pic_flag>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bottom_field_flag=");

        $z1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: boolean bottom_field_flag>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", idr_pic_id=");

        $i4 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int idr_pic_id>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pic_order_cnt_lsb=");

        $i5 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int pic_order_cnt_lsb>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", delta_pic_order_cnt_bottom=");

        $i6 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$SliceHeader: int delta_pic_order_cnt_bottom>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }
}
