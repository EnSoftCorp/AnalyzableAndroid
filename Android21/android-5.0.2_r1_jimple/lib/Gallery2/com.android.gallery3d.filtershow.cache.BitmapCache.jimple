public class com.android.gallery3d.filtershow.cache.BitmapCache extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private java.util.HashMap mBitmapCache;
    private final int mMaxItemsPerKey;
    private static final boolean DEBUG;
    private com.android.gallery3d.filtershow.pipeline.CacheProcessing mCacheProcessing;
    public static final int PREVIEW_CACHE;
    public static final int NEW_LOOK;
    public static final int ICON;
    public static final int FILTERS;
    public static final int GEOMETRY;
    public static final int HIGHRES;
    public static final int UTIL_GEOMETRY;
    public static final int RENDERING_REQUEST;
    public static final int REGION;
    public static final int TINY_PLANET;
    public static final int PREVIEW_CACHE_NO_FILTERS;
    public static final int PREVIEW_CACHE_NO_ROOT;
    public static final int PREVIEW_CACHE_NO_APPLY;
    public static final int TRACKING_COUNT;
    private int[] mTracking;
    private java.util.ArrayList mBitmapTracking;

    public void <init>()
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        java.util.HashMap $r1;
        int[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.HashMap mBitmapCache> = $r1;

        r0.<com.android.gallery3d.filtershow.cache.BitmapCache: int mMaxItemsPerKey> = 4;

        $r2 = newarray (int)[14];

        r0.<com.android.gallery3d.filtershow.cache.BitmapCache: int[] mTracking> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking> = $r3;

        return;
    }

    private void track(android.graphics.Bitmap, int)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        android.graphics.Bitmap r1, $r9;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking r2, $r4, r10;
        java.util.ArrayList $r3, $r5, $r7;
        int[] $r6;
        java.lang.Object $r8;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        $r7 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking) $r8;

        $r9 = r2.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: android.graphics.Bitmap bitmap>;

        if $r9 != r1 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BitmapCache", "giving a bitmap already given!!!");

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking;

        specialinvoke $r4.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: void <init>(com.android.gallery3d.filtershow.cache.BitmapCache)>(r0);

        r10 = $r4;

        r10.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: android.graphics.Bitmap bitmap> = r1;

        r10.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: int type> = i0;

        $r5 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        $r6 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: int[] mTracking>;

        $i3 = r10.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: int type>;

        $i4 = $r6[$i3];

        $i5 = $i4 + 1;

        $r6[$i3] = $i5;

        return;
    }

    private void untrack(android.graphics.Bitmap)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        android.graphics.Bitmap r1, $r6;
        int i0, $i1, $i2, $i3, $i4;
        com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking r2;
        java.util.ArrayList $r3, $r4, $r8;
        java.lang.Object $r5;
        int[] $r7;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking) $r5;

        $r6 = r2.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: android.graphics.Bitmap bitmap>;

        if $r6 != r1 goto label2;

        $r7 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: int[] mTracking>;

        $i2 = r2.<com.android.gallery3d.filtershow.cache.BitmapCache$BitmapTracking: int type>;

        $i3 = $r7[$i2];

        $i4 = $i3 - 1;

        $r7[$i2] = $i4;

        $r8 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.ArrayList mBitmapTracking>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public java.lang.String getTrackingName(int)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        int i0;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label02;
            case 12: goto label03;
            case 13: goto label04;
            default: goto label14;
        };

     label01:
        return "PREVIEW_CACHE";

     label02:
        return "PREVIEW_CACHE_NO_FILTERS";

     label03:
        return "PREVIEW_CACHE_NO_ROOT";

     label04:
        return "PREVIEW_CACHE_NO_APPLY";

     label05:
        return "NEW_LOOK";

     label06:
        return "ICON";

     label07:
        return "FILTERS";

     label08:
        return "GEOMETRY";

     label09:
        return "HIGHRES";

     label10:
        return "UTIL_GEOMETRY";

     label11:
        return "RENDERING_REQUEST";

     label12:
        return "REGION";

     label13:
        return "TINY_PLANET";

     label14:
        return "UNKNOWN";
    }

    public void showBitmapCounts()
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        return;
    }

    public void setCacheProcessing(com.android.gallery3d.filtershow.pipeline.CacheProcessing)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        com.android.gallery3d.filtershow.pipeline.CacheProcessing r1;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        r1 := @parameter0: com.android.gallery3d.filtershow.pipeline.CacheProcessing;

        r0.<com.android.gallery3d.filtershow.cache.BitmapCache: com.android.gallery3d.filtershow.pipeline.CacheProcessing mCacheProcessing> = r1;

        return;
    }

    public void cache(com.android.gallery3d.filtershow.pipeline.Buffer)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        com.android.gallery3d.filtershow.pipeline.Buffer r1;
        android.graphics.Bitmap r2;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        r1 := @parameter0: com.android.gallery3d.filtershow.pipeline.Buffer;

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<com.android.gallery3d.filtershow.pipeline.Buffer: android.graphics.Bitmap getBitmap()>();

        virtualinvoke r0.<com.android.gallery3d.filtershow.cache.BitmapCache: boolean cache(android.graphics.Bitmap)>(r2);

        return;
    }

    public synchronized boolean cache(android.graphics.Bitmap)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        android.graphics.Bitmap r1;
        java.lang.Long r2;
        java.util.ArrayList r3, $r18;
        int i0, $i1, $i3, $i5, $i6, $i7, $i8, i11, i12;
        java.lang.ref.WeakReference r4, $r8, $r13, $r17;
        com.android.gallery3d.filtershow.pipeline.CacheProcessing $r5, $r20;
        boolean $z0, $z2;
        long $l2, $l4;
        java.util.HashMap $r6, $r21;
        java.lang.Object $r7, $r9, $r10, $r11, $r12, $r14, $r16;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        r1 := @parameter0: android.graphics.Bitmap;

        if r1 != null goto label01;

        return 1;

     label01:
        $r5 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: com.android.gallery3d.filtershow.pipeline.CacheProcessing mCacheProcessing>;

        if $r5 == null goto label02;

        $r20 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: com.android.gallery3d.filtershow.pipeline.CacheProcessing mCacheProcessing>;

        $z2 = virtualinvoke $r20.<com.android.gallery3d.filtershow.pipeline.CacheProcessing: boolean contains(android.graphics.Bitmap)>(r1);

        if $z2 == 0 goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BitmapCache", "Trying to cache a bitmap still used in the pipeline");

        return 0;

     label02:
        $z0 = virtualinvoke r1.<android.graphics.Bitmap: boolean isMutable()>();

        if $z0 != 0 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BitmapCache", "Trying to cache a non mutable bitmap");

        return 1;

     label03:
        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $l2 = (long) $i1;

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $l4 = (long) $i3;

        r2 = specialinvoke r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.lang.Long calcKey(long,long)>($l2, $l4);

        $r6 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.HashMap mBitmapCache>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.util.ArrayList) $r7;

        if r3 != null goto label04;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r3 = $r18;

        $r21 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.HashMap mBitmapCache>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label04:
        i0 = 0;

     label05:
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i5 goto label07;

        $r14 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r17 = (java.lang.ref.WeakReference) $r14;

        $r16 = virtualinvoke $r17.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r16 != null goto label06;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        goto label05;

     label06:
        i0 = i0 + 1;

        goto label05;

     label07:
        i11 = 0;

     label08:
        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i11 >= $i7 goto label10;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r13 = (java.lang.ref.WeakReference) $r10;

        $r12 = virtualinvoke $r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r12 != null goto label09;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>(i11);

     label09:
        i11 = i11 + 1;

        goto label08;

     label10:
        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i6 >= 4 goto label14;

        i12 = 0;

     label11:
        $i8 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i12 >= $i8 goto label13;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r4 = (java.lang.ref.WeakReference) $r9;

        $r11 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r11 != r1 goto label12;

        return 1;

     label12:
        i12 = i12 + 1;

        goto label11;

     label13:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label14:
        return 1;
    }

    public synchronized android.graphics.Bitmap getBitmap(int, int, int)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8;
        java.lang.Long r1;
        java.lang.ref.WeakReference r2;
        java.util.ArrayList r3;
        android.graphics.Bitmap r4;
        long $l3, $l4;
        java.util.HashMap $r5, $r10;
        java.lang.Object $r6, $r8, $r9;
        android.graphics.Bitmap$Config $r7;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $l4 = (long) i0;

        $l3 = (long) i1;

        r1 = specialinvoke r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.lang.Long calcKey(long,long)>($l4, $l3);

        r2 = null;

        $r5 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.HashMap mBitmapCache>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.ArrayList) $r6;

        if r3 == null goto label1;

        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label1;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r2 = (java.lang.ref.WeakReference) $r9;

        $i8 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i8 != 0 goto label1;

        $r10 = r0.<com.android.gallery3d.filtershow.cache.BitmapCache: java.util.HashMap mBitmapCache>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        r4 = null;

        if r2 == null goto label2;

        $r8 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.graphics.Bitmap) $r8;

     label2:
        if r4 == null goto label3;

        $i5 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        if $i5 != i0 goto label3;

        $i6 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        if $i6 == i1 goto label4;

     label3:
        $r7 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r7);

        virtualinvoke r0.<com.android.gallery3d.filtershow.cache.BitmapCache: void showBitmapCounts()>();

     label4:
        return r4;
    }

    public synchronized android.graphics.Bitmap getBitmapCopy(android.graphics.Bitmap, int)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        android.graphics.Bitmap r1, r2;
        int i0, $i1, $i2;
        android.graphics.Canvas r3, $r4;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        r2 = virtualinvoke r0.<com.android.gallery3d.filtershow.cache.BitmapCache: android.graphics.Bitmap getBitmap(int,int,int)>($i1, $i2, i0);

        $r4 = new android.graphics.Canvas;

        specialinvoke $r4.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        r3 = $r4;

        virtualinvoke r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r1, 0.0F, 0.0F, null);

        return r2;
    }

    private java.lang.Long calcKey(long, long)
    {
        com.android.gallery3d.filtershow.cache.BitmapCache r0;
        long l0, l1, $l2, $l3;
        java.lang.Long $r1;

        r0 := @this: com.android.gallery3d.filtershow.cache.BitmapCache;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l0 << 32;

        $l3 = $l2 | l1;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.gallery3d.filtershow.cache.BitmapCache: int TRACKING_COUNT> = 14;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int PREVIEW_CACHE_NO_APPLY> = 13;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int PREVIEW_CACHE_NO_ROOT> = 12;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int PREVIEW_CACHE_NO_FILTERS> = 11;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int TINY_PLANET> = 10;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int REGION> = 9;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int RENDERING_REQUEST> = 8;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int UTIL_GEOMETRY> = 7;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int HIGHRES> = 6;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int GEOMETRY> = 5;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int FILTERS> = 4;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int ICON> = 3;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int NEW_LOOK> = 2;

        <com.android.gallery3d.filtershow.cache.BitmapCache: int PREVIEW_CACHE> = 1;

        <com.android.gallery3d.filtershow.cache.BitmapCache: boolean DEBUG> = 0;

        <com.android.gallery3d.filtershow.cache.BitmapCache: java.lang.String LOGTAG> = "BitmapCache";

        return;
    }
}
