public class android.support.v8.renderscript.Script extends android.support.v8.renderscript.BaseObj
{
    android.support.v8.renderscript.ScriptCThunker mT;
    private final android.util.SparseArray mKIDs;
    private final android.util.SparseArray mFIDs;

    android.renderscript.Script getNObj()
    {
        android.support.v8.renderscript.Script r0;
        android.support.v8.renderscript.ScriptCThunker $r1;

        r0 := @this: android.support.v8.renderscript.Script;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        return $r1;
    }

    protected android.support.v8.renderscript.Script$KernelID createKernelID(int, int, android.support.v8.renderscript.Element, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.Script r0;
        int i0, i1, i2, $i3;
        android.support.v8.renderscript.Element r1, r2;
        android.support.v8.renderscript.Script$KernelID r3, $r9, $r12, r19, r20;
        android.util.SparseArray $r4, $r10, $r17;
        java.lang.Object $r5;
        boolean $z0;
        android.support.v8.renderscript.RenderScript $r7, $r8, $r11, $r15;
        android.support.v8.renderscript.RSDriverException $r13;
        android.support.v8.renderscript.ScriptCThunker $r14, $r16;
        android.renderscript.Script$KernelID $r18;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.support.v8.renderscript.Element;

        r2 := @parameter3: android.support.v8.renderscript.Element;

        $r4 = r0.<android.support.v8.renderscript.Script: android.util.SparseArray mKIDs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.support.v8.renderscript.Script$KernelID) $r5;

        if r3 == null goto label1;

        return r3;

     label1:
        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 != 1 goto label3;

        $r12 = new android.support.v8.renderscript.Script$KernelID;

        $r15 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        specialinvoke $r12.<android.support.v8.renderscript.Script$KernelID: void <init>(int,android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Script,int,int)>(0, $r15, r0, i0, i1);

        r19 = $r12;

        $r14 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r14 == null goto label2;

        $r16 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        $r18 = virtualinvoke $r16.<android.support.v8.renderscript.ScriptCThunker: android.renderscript.Script$KernelID thunkCreateKernelID(int,int,android.support.v8.renderscript.Element,android.support.v8.renderscript.Element)>(i0, i1, r1, r2);

        r19.<android.support.v8.renderscript.Script$KernelID: android.renderscript.Script$KernelID mN> = $r18;

     label2:
        $r17 = r0.<android.support.v8.renderscript.Script: android.util.SparseArray mKIDs>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r19);

        return r19;

     label3:
        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r7 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i3 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r7);

        i2 = virtualinvoke $r8.<android.support.v8.renderscript.RenderScript: int nScriptKernelIDCreate(int,int,int)>($i3, i0, i1);

        if i2 != 0 goto label4;

        $r13 = new android.support.v8.renderscript.RSDriverException;

        specialinvoke $r13.<android.support.v8.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create KernelID");

        throw $r13;

     label4:
        $r9 = new android.support.v8.renderscript.Script$KernelID;

        $r11 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        specialinvoke $r9.<android.support.v8.renderscript.Script$KernelID: void <init>(int,android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Script,int,int)>(i2, $r11, r0, i0, i1);

        r20 = $r9;

        $r10 = r0.<android.support.v8.renderscript.Script: android.util.SparseArray mKIDs>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r20);

        return r20;
    }

    protected android.support.v8.renderscript.Script$FieldID createFieldID(int, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.Script r0;
        int i0, i1, $i2;
        android.support.v8.renderscript.Element r1;
        android.support.v8.renderscript.Script$FieldID r2, $r8, $r11, r18, r19;
        boolean $z0;
        android.util.SparseArray $r4, $r10, $r16;
        java.lang.Object $r5;
        android.support.v8.renderscript.RenderScript $r6, $r7, $r9, $r14;
        android.support.v8.renderscript.RSDriverException $r12;
        android.support.v8.renderscript.ScriptCThunker $r13, $r15;
        android.renderscript.Script$FieldID $r17;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.Element;

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 != 1 goto label2;

        $r11 = new android.support.v8.renderscript.Script$FieldID;

        $r14 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        specialinvoke $r11.<android.support.v8.renderscript.Script$FieldID: void <init>(int,android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Script,int)>(0, $r14, r0, i0);

        r2 = $r11;

        $r13 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r13 == null goto label1;

        $r15 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        $r17 = virtualinvoke $r15.<android.support.v8.renderscript.ScriptCThunker: android.renderscript.Script$FieldID thunkCreateFieldID(int,android.support.v8.renderscript.Element)>(i0, r1);

        r2.<android.support.v8.renderscript.Script$FieldID: android.renderscript.Script$FieldID mN> = $r17;

     label1:
        $r16 = r0.<android.support.v8.renderscript.Script: android.util.SparseArray mFIDs>;

        virtualinvoke $r16.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        return r2;

     label2:
        $r4 = r0.<android.support.v8.renderscript.Script: android.util.SparseArray mFIDs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r18 = (android.support.v8.renderscript.Script$FieldID) $r5;

        if r18 == null goto label3;

        return r18;

     label3:
        $r7 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r6);

        i1 = virtualinvoke $r7.<android.support.v8.renderscript.RenderScript: int nScriptFieldIDCreate(int,int)>($i2, i0);

        if i1 != 0 goto label4;

        $r12 = new android.support.v8.renderscript.RSDriverException;

        specialinvoke $r12.<android.support.v8.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create FieldID");

        throw $r12;

     label4:
        $r8 = new android.support.v8.renderscript.Script$FieldID;

        $r9 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        specialinvoke $r8.<android.support.v8.renderscript.Script$FieldID: void <init>(int,android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Script,int)>(i1, $r9, r0, i0);

        r19 = $r8;

        $r10 = r0.<android.support.v8.renderscript.Script: android.util.SparseArray mFIDs>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r19);

        return r19;
    }

    protected void invoke(int)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1;
        android.support.v8.renderscript.ScriptCThunker $r1, $r4;
        android.support.v8.renderscript.RenderScript $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r4.<android.support.v8.renderscript.ScriptCThunker: void thunkInvoke(int)>(i0);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void nScriptInvoke(int,int)>($i1, i0);

        return;
    }

    protected void invoke(int, android.support.v8.renderscript.FieldPacker)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1, $i2;
        android.support.v8.renderscript.FieldPacker r1;
        android.support.v8.renderscript.ScriptCThunker $r2, $r8;
        android.support.v8.renderscript.RenderScript $r3, $r4, $r5, $r6;
        byte[] $r7;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.FieldPacker;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r2 == null goto label1;

        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r8.<android.support.v8.renderscript.ScriptCThunker: void thunkInvoke(int,android.support.v8.renderscript.FieldPacker)>(i0, r1);

        return;

     label1:
        if r1 == null goto label2;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r5 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r5);

        $r7 = virtualinvoke r1.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        virtualinvoke $r6.<android.support.v8.renderscript.RenderScript: void nScriptInvokeV(int,int,byte[])>($i2, i0, $r7);

        goto label3;

     label2:
        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r3);

        virtualinvoke $r4.<android.support.v8.renderscript.RenderScript: void nScriptInvoke(int,int)>($i1, i0);

     label3:
        return;
    }

    public void bindAllocation(android.support.v8.renderscript.Allocation, int)
    {
        android.support.v8.renderscript.Script r0;
        android.support.v8.renderscript.Allocation r1;
        int i0, $i1, $i2, $i3;
        android.support.v8.renderscript.ScriptCThunker $r2, $r9;
        android.support.v8.renderscript.RenderScript $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.support.v8.renderscript.Script;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r2 == null goto label1;

        $r9 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r9.<android.support.v8.renderscript.ScriptCThunker: void thunkBindAllocation(android.support.v8.renderscript.Allocation,int)>(r1, i0);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void validate()>();

        if r1 == null goto label2;

        $r7 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r6);

        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i3 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: int getID(android.support.v8.renderscript.RenderScript)>($r8);

        virtualinvoke $r7.<android.support.v8.renderscript.RenderScript: void nScriptBindAllocation(int,int,int)>($i2, $i3, i0);

        goto label3;

     label2:
        $r5 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r4);

        virtualinvoke $r5.<android.support.v8.renderscript.RenderScript: void nScriptBindAllocation(int,int,int)>($i1, 0, i0);

     label3:
        return;
    }

    public void setTimeZone(java.lang.String)
    {
        android.support.v8.renderscript.Script r0;
        java.lang.String r1;
        java.io.UnsupportedEncodingException r2, $r9;
        android.support.v8.renderscript.ScriptCThunker $r3, $r8;
        android.support.v8.renderscript.RenderScript $r4, $r5, $r6;
        int $i0;
        byte[] $r7;
        java.lang.RuntimeException $r10;

        r0 := @this: android.support.v8.renderscript.Script;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r3 == null goto label1;

        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r8.<android.support.v8.renderscript.ScriptCThunker: void thunkSetTimeZone(java.lang.String)>(r1);

        return;

     label1:
        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        virtualinvoke $r4.<android.support.v8.renderscript.RenderScript: void validate()>();

     label2:
        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r5 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i0 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r5);

        $r7 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r6.<android.support.v8.renderscript.RenderScript: void nScriptSetTimeZone(int,byte[])>($i0, $r7);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r10;

     label5:
        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    protected void forEach(int, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.FieldPacker)
    {
        android.support.v8.renderscript.Script r0;
        int i0, i1, i2, $i3;
        android.support.v8.renderscript.Allocation r1, r2;
        android.support.v8.renderscript.FieldPacker r3;
        byte[] r4;
        android.support.v8.renderscript.ScriptCThunker $r5, $r11;
        android.support.v8.renderscript.RenderScript $r6, $r7, $r8, $r9;
        android.support.v8.renderscript.RSIllegalArgumentException $r10;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.Allocation;

        r2 := @parameter2: android.support.v8.renderscript.Allocation;

        r3 := @parameter3: android.support.v8.renderscript.FieldPacker;

        $r5 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r5 == null goto label1;

        $r11 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r11.<android.support.v8.renderscript.ScriptCThunker: void thunkForEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker)>(i0, r1, r2, r3);

        return;

     label1:
        if r1 != null goto label2;

        if r2 != null goto label2;

        $r10 = new android.support.v8.renderscript.RSIllegalArgumentException;

        specialinvoke $r10.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("At least one of ain or aout is required to be non-null.");

        throw $r10;

     label2:
        i1 = 0;

        if r1 == null goto label3;

        $r9 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        i1 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: int getID(android.support.v8.renderscript.RenderScript)>($r9);

     label3:
        i2 = 0;

        if r2 == null goto label4;

        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        i2 = virtualinvoke r2.<android.support.v8.renderscript.Allocation: int getID(android.support.v8.renderscript.RenderScript)>($r8);

     label4:
        r4 = null;

        if r3 == null goto label5;

        r4 = virtualinvoke r3.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

     label5:
        $r7 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i3 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r6);

        virtualinvoke $r7.<android.support.v8.renderscript.RenderScript: void nScriptForEach(int,int,int,int,byte[])>($i3, i0, i1, i2, r4);

        return;
    }

    protected void forEach(int, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.Allocation, android.support.v8.renderscript.FieldPacker, android.support.v8.renderscript.Script$LaunchOptions)
    {
        android.support.v8.renderscript.Script r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.support.v8.renderscript.Allocation r1, r2;
        android.support.v8.renderscript.FieldPacker r3;
        android.support.v8.renderscript.Script$LaunchOptions r4;
        byte[] r5;
        android.support.v8.renderscript.ScriptCThunker $r6, $r11;
        android.support.v8.renderscript.RenderScript $r7, $r8, $r9, $r10;
        android.support.v8.renderscript.RSIllegalArgumentException $r12;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.Allocation;

        r2 := @parameter2: android.support.v8.renderscript.Allocation;

        r3 := @parameter3: android.support.v8.renderscript.FieldPacker;

        r4 := @parameter4: android.support.v8.renderscript.Script$LaunchOptions;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r6 == null goto label1;

        $r11 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r11.<android.support.v8.renderscript.ScriptCThunker: void thunkForEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker,android.support.v8.renderscript.Script$LaunchOptions)>(i0, r1, r2, r3, r4);

        return;

     label1:
        if r1 != null goto label2;

        if r2 != null goto label2;

        $r12 = new android.support.v8.renderscript.RSIllegalArgumentException;

        specialinvoke $r12.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("At least one of ain or aout is required to be non-null.");

        throw $r12;

     label2:
        if r4 != null goto label3;

        virtualinvoke r0.<android.support.v8.renderscript.Script: void forEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker)>(i0, r1, r2, r3);

        return;

     label3:
        i1 = 0;

        if r1 == null goto label4;

        $r10 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        i1 = virtualinvoke r1.<android.support.v8.renderscript.Allocation: int getID(android.support.v8.renderscript.RenderScript)>($r10);

     label4:
        i2 = 0;

        if r2 == null goto label5;

        $r9 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        i2 = virtualinvoke r2.<android.support.v8.renderscript.Allocation: int getID(android.support.v8.renderscript.RenderScript)>($r9);

     label5:
        r5 = null;

        if r3 == null goto label6;

        r5 = virtualinvoke r3.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

     label6:
        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r7 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i3 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r7);

        $i4 = staticinvoke <android.support.v8.renderscript.Script$LaunchOptions: int access$000(android.support.v8.renderscript.Script$LaunchOptions)>(r4);

        $i5 = staticinvoke <android.support.v8.renderscript.Script$LaunchOptions: int access$100(android.support.v8.renderscript.Script$LaunchOptions)>(r4);

        $i6 = staticinvoke <android.support.v8.renderscript.Script$LaunchOptions: int access$200(android.support.v8.renderscript.Script$LaunchOptions)>(r4);

        $i8 = staticinvoke <android.support.v8.renderscript.Script$LaunchOptions: int access$300(android.support.v8.renderscript.Script$LaunchOptions)>(r4);

        $i7 = staticinvoke <android.support.v8.renderscript.Script$LaunchOptions: int access$400(android.support.v8.renderscript.Script$LaunchOptions)>(r4);

        $i9 = staticinvoke <android.support.v8.renderscript.Script$LaunchOptions: int access$500(android.support.v8.renderscript.Script$LaunchOptions)>(r4);

        virtualinvoke $r8.<android.support.v8.renderscript.RenderScript: void nScriptForEachClipped(int,int,int,int,byte[],int,int,int,int,int,int)>($i3, i0, i1, i2, r5, $i4, $i5, $i6, $i8, $i7, $i9);

        return;
    }

    void <init>(int, android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.Script r0;
        int i0;
        android.support.v8.renderscript.RenderScript r1;
        android.util.SparseArray $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<android.support.v8.renderscript.BaseObj: void <init>(int,android.support.v8.renderscript.RenderScript)>(i0, r1);

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.support.v8.renderscript.Script: android.util.SparseArray mKIDs> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.support.v8.renderscript.Script: android.util.SparseArray mFIDs> = $r3;

        return;
    }

    public void setVar(int, float)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1;
        float f0;
        android.support.v8.renderscript.ScriptCThunker $r1, $r4;
        android.support.v8.renderscript.RenderScript $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r4.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,float)>(i0, f0);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void nScriptSetVarF(int,int,float)>($i1, i0, f0);

        return;
    }

    public void setVar(int, double)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1;
        double d0;
        android.support.v8.renderscript.ScriptCThunker $r1, $r4;
        android.support.v8.renderscript.RenderScript $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r4.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,double)>(i0, d0);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void nScriptSetVarD(int,int,double)>($i1, i0, d0);

        return;
    }

    public void setVar(int, int)
    {
        android.support.v8.renderscript.Script r0;
        int i0, i1, $i2;
        android.support.v8.renderscript.ScriptCThunker $r1, $r4;
        android.support.v8.renderscript.RenderScript $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r4.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,int)>(i0, i1);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void nScriptSetVarI(int,int,int)>($i2, i0, i1);

        return;
    }

    public void setVar(int, long)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i2;
        long l1;
        android.support.v8.renderscript.ScriptCThunker $r1, $r4;
        android.support.v8.renderscript.RenderScript $r2, $r3;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r4.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,long)>(i0, l1);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void nScriptSetVarJ(int,int,long)>($i2, i0, l1);

        return;
    }

    public void setVar(int, boolean)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1;
        boolean z0;
        android.support.v8.renderscript.ScriptCThunker $r1, $r4;
        android.support.v8.renderscript.RenderScript $r2, $r3;
        byte $b2;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r1 == null goto label1;

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r4.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,boolean)>(i0, z0);

        return;

     label1:
        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r2);

        if z0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        virtualinvoke $r3.<android.support.v8.renderscript.RenderScript: void nScriptSetVarI(int,int,int)>($i1, i0, $b2);

        return;
    }

    public void setVar(int, android.support.v8.renderscript.BaseObj)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1, $i2;
        android.support.v8.renderscript.BaseObj r1;
        android.support.v8.renderscript.ScriptCThunker $r2, $r6;
        android.support.v8.renderscript.RenderScript $r3, $r4, $r5;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.BaseObj;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r2 == null goto label1;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r6.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,android.support.v8.renderscript.BaseObj)>(i0, r1);

        return;

     label1:
        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r3);

        if r1 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $r5 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r1.<android.support.v8.renderscript.BaseObj: int getID(android.support.v8.renderscript.RenderScript)>($r5);

     label3:
        virtualinvoke $r4.<android.support.v8.renderscript.RenderScript: void nScriptSetVarObj(int,int,int)>($i1, i0, $i2);

        return;
    }

    public void setVar(int, android.support.v8.renderscript.FieldPacker)
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1;
        android.support.v8.renderscript.FieldPacker r1;
        android.support.v8.renderscript.ScriptCThunker $r2, $r6;
        android.support.v8.renderscript.RenderScript $r3, $r4;
        byte[] $r5;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.FieldPacker;

        $r2 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r2 == null goto label1;

        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r6.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,android.support.v8.renderscript.FieldPacker)>(i0, r1);

        return;

     label1:
        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r3 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r3);

        $r5 = virtualinvoke r1.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        virtualinvoke $r4.<android.support.v8.renderscript.RenderScript: void nScriptSetVarV(int,int,byte[])>($i1, i0, $r5);

        return;
    }

    public void setVar(int, android.support.v8.renderscript.FieldPacker, android.support.v8.renderscript.Element, int[])
    {
        android.support.v8.renderscript.Script r0;
        int i0, $i1, $i2;
        android.support.v8.renderscript.FieldPacker r1;
        android.support.v8.renderscript.Element r2;
        int[] r3;
        android.support.v8.renderscript.ScriptCThunker $r4, $r9;
        android.support.v8.renderscript.RenderScript $r5, $r6, $r8;
        byte[] $r7;

        r0 := @this: android.support.v8.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.FieldPacker;

        r2 := @parameter2: android.support.v8.renderscript.Element;

        r3 := @parameter3: int[];

        $r4 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        if $r4 == null goto label1;

        $r9 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.ScriptCThunker mT>;

        virtualinvoke $r9.<android.support.v8.renderscript.ScriptCThunker: void thunkSetVar(int,android.support.v8.renderscript.FieldPacker,android.support.v8.renderscript.Element,int[])>(i0, r1, r2, r3);

        return;

     label1:
        $r6 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $r5 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i1 = virtualinvoke r0.<android.support.v8.renderscript.Script: int getID(android.support.v8.renderscript.RenderScript)>($r5);

        $r7 = virtualinvoke r1.<android.support.v8.renderscript.FieldPacker: byte[] getData()>();

        $r8 = r0.<android.support.v8.renderscript.Script: android.support.v8.renderscript.RenderScript mRS>;

        $i2 = virtualinvoke r2.<android.support.v8.renderscript.Element: int getID(android.support.v8.renderscript.RenderScript)>($r8);

        virtualinvoke $r6.<android.support.v8.renderscript.RenderScript: void nScriptSetVarVE(int,int,byte[],int,int[])>($i1, i0, $r7, $i2, r3);

        return;
    }

    volatile android.renderscript.BaseObj getNObj()
    {
        android.support.v8.renderscript.Script r0;
        android.renderscript.Script $r1;

        r0 := @this: android.support.v8.renderscript.Script;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.Script: android.renderscript.Script getNObj()>();

        return $r1;
    }
}
