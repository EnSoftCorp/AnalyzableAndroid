class android.support.v8.renderscript.ScriptGroupThunker extends android.support.v8.renderscript.ScriptGroup
{
    android.renderscript.ScriptGroup mN;

    android.renderscript.ScriptGroup getNObj()
    {
        android.support.v8.renderscript.ScriptGroupThunker r0;
        android.renderscript.ScriptGroup $r1;

        r0 := @this: android.support.v8.renderscript.ScriptGroupThunker;

        $r1 = r0.<android.support.v8.renderscript.ScriptGroupThunker: android.renderscript.ScriptGroup mN>;

        return $r1;
    }

    void <init>(int, android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.ScriptGroupThunker r0;
        int i0;
        android.support.v8.renderscript.RenderScript r1;

        r0 := @this: android.support.v8.renderscript.ScriptGroupThunker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<android.support.v8.renderscript.ScriptGroup: void <init>(int,android.support.v8.renderscript.RenderScript)>(i0, r1);

        return;
    }

    public void setInput(android.support.v8.renderscript.Script$KernelID, android.support.v8.renderscript.Allocation)
    {
        android.support.v8.renderscript.ScriptGroupThunker r0;
        android.support.v8.renderscript.Script$KernelID r1;
        android.support.v8.renderscript.Allocation r2;
        android.support.v8.renderscript.AllocationThunker r3;
        android.renderscript.RSRuntimeException r4, $r8;
        android.renderscript.ScriptGroup $r5;
        android.renderscript.Script$KernelID $r6;
        android.renderscript.Allocation $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.support.v8.renderscript.ScriptGroupThunker;

        r1 := @parameter0: android.support.v8.renderscript.Script$KernelID;

        r2 := @parameter1: android.support.v8.renderscript.Allocation;

        r3 = (android.support.v8.renderscript.AllocationThunker) r2;

     label1:
        $r5 = r0.<android.support.v8.renderscript.ScriptGroupThunker: android.renderscript.ScriptGroup mN>;

        $r6 = r1.<android.support.v8.renderscript.Script$KernelID: android.renderscript.Script$KernelID mN>;

        $r7 = virtualinvoke r3.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation getNObj()>();

        virtualinvoke $r5.<android.renderscript.ScriptGroup: void setInput(android.renderscript.Script$KernelID,android.renderscript.Allocation)>($r6, $r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r4);

        throw $r9;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void setOutput(android.support.v8.renderscript.Script$KernelID, android.support.v8.renderscript.Allocation)
    {
        android.support.v8.renderscript.ScriptGroupThunker r0;
        android.support.v8.renderscript.Script$KernelID r1;
        android.support.v8.renderscript.Allocation r2;
        android.support.v8.renderscript.AllocationThunker r3;
        android.renderscript.RSRuntimeException r4, $r8;
        android.renderscript.ScriptGroup $r5;
        android.renderscript.Script$KernelID $r6;
        android.renderscript.Allocation $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.support.v8.renderscript.ScriptGroupThunker;

        r1 := @parameter0: android.support.v8.renderscript.Script$KernelID;

        r2 := @parameter1: android.support.v8.renderscript.Allocation;

        r3 = (android.support.v8.renderscript.AllocationThunker) r2;

     label1:
        $r5 = r0.<android.support.v8.renderscript.ScriptGroupThunker: android.renderscript.ScriptGroup mN>;

        $r6 = r1.<android.support.v8.renderscript.Script$KernelID: android.renderscript.Script$KernelID mN>;

        $r7 = virtualinvoke r3.<android.support.v8.renderscript.AllocationThunker: android.renderscript.Allocation getNObj()>();

        virtualinvoke $r5.<android.renderscript.ScriptGroup: void setOutput(android.renderscript.Script$KernelID,android.renderscript.Allocation)>($r6, $r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r4);

        throw $r9;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    public void execute()
    {
        android.support.v8.renderscript.ScriptGroupThunker r0;
        android.renderscript.RSRuntimeException r1, $r3;
        android.renderscript.ScriptGroup $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.support.v8.renderscript.ScriptGroupThunker;

     label1:
        $r2 = r0.<android.support.v8.renderscript.ScriptGroupThunker: android.renderscript.ScriptGroup mN>;

        virtualinvoke $r2.<android.renderscript.ScriptGroup: void execute()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = staticinvoke <android.support.v8.renderscript.ExceptionThunker: java.lang.RuntimeException convertException(java.lang.RuntimeException)>(r1);

        throw $r4;

     label4:
        return;

        catch android.renderscript.RSRuntimeException from label1 to label2 with label3;
    }

    volatile android.renderscript.BaseObj getNObj()
    {
        android.support.v8.renderscript.ScriptGroupThunker r0;
        android.renderscript.ScriptGroup $r1;

        r0 := @this: android.support.v8.renderscript.ScriptGroupThunker;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptGroupThunker: android.renderscript.ScriptGroup getNObj()>();

        return $r1;
    }
}
