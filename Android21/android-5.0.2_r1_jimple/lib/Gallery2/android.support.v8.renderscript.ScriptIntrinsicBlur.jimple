public class android.support.v8.renderscript.ScriptIntrinsicBlur extends android.support.v8.renderscript.ScriptIntrinsic
{
    private final float[] mValues;
    private android.support.v8.renderscript.Allocation mInput;

    protected void <init>(int, android.support.v8.renderscript.RenderScript)
    {
        android.support.v8.renderscript.ScriptIntrinsicBlur r0;
        int i0;
        android.support.v8.renderscript.RenderScript r1;
        float[] $r2;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicBlur;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v8.renderscript.RenderScript;

        specialinvoke r0.<android.support.v8.renderscript.ScriptIntrinsic: void <init>(int,android.support.v8.renderscript.RenderScript)>(i0, r1);

        $r2 = newarray (float)[9];

        r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: float[] mValues> = $r2;

        return;
    }

    public static android.support.v8.renderscript.ScriptIntrinsicBlur create(android.support.v8.renderscript.RenderScript, android.support.v8.renderscript.Element)
    {
        android.support.v8.renderscript.RenderScript r0;
        android.support.v8.renderscript.Element r1, $r4, $r6;
        android.support.v8.renderscript.RenderScriptThunker r2;
        android.support.v8.renderscript.ScriptIntrinsicBlur r3, $r5;
        boolean $z0, $z1, $z2;
        int $i0, i1;
        android.support.v8.renderscript.RSIllegalArgumentException $r7;
        android.support.v8.renderscript.ScriptIntrinsicBlurThunker $r8;

        r0 := @parameter0: android.support.v8.renderscript.RenderScript;

        r1 := @parameter1: android.support.v8.renderscript.Element;

        $z0 = <android.support.v8.renderscript.RenderScript: boolean isNative>;

        if $z0 == 0 goto label1;

        r2 = (android.support.v8.renderscript.RenderScriptThunker) r0;

        $r8 = staticinvoke <android.support.v8.renderscript.ScriptIntrinsicBlurThunker: android.support.v8.renderscript.ScriptIntrinsicBlurThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element)>(r0, r1);

        return $r8;

     label1:
        $r4 = staticinvoke <android.support.v8.renderscript.Element: android.support.v8.renderscript.Element U8_4(android.support.v8.renderscript.RenderScript)>(r0);

        $z1 = virtualinvoke r1.<android.support.v8.renderscript.Element: boolean isCompatible(android.support.v8.renderscript.Element)>($r4);

        if $z1 != 0 goto label2;

        $r6 = staticinvoke <android.support.v8.renderscript.Element: android.support.v8.renderscript.Element U8(android.support.v8.renderscript.RenderScript)>(r0);

        $z2 = virtualinvoke r1.<android.support.v8.renderscript.Element: boolean isCompatible(android.support.v8.renderscript.Element)>($r6);

        if $z2 != 0 goto label2;

        $r7 = new android.support.v8.renderscript.RSIllegalArgumentException;

        specialinvoke $r7.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Unsuported element type.");

        throw $r7;

     label2:
        $i0 = virtualinvoke r1.<android.support.v8.renderscript.Element: int getID(android.support.v8.renderscript.RenderScript)>(r0);

        i1 = virtualinvoke r0.<android.support.v8.renderscript.RenderScript: int nScriptIntrinsicCreate(int,int)>(5, $i0);

        $r5 = new android.support.v8.renderscript.ScriptIntrinsicBlur;

        specialinvoke $r5.<android.support.v8.renderscript.ScriptIntrinsicBlur: void <init>(int,android.support.v8.renderscript.RenderScript)>(i1, r0);

        r3 = $r5;

        virtualinvoke r3.<android.support.v8.renderscript.ScriptIntrinsicBlur: void setRadius(float)>(5.0F);

        return r3;
    }

    public void setInput(android.support.v8.renderscript.Allocation)
    {
        android.support.v8.renderscript.ScriptIntrinsicBlur r0;
        android.support.v8.renderscript.Allocation r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicBlur;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: android.support.v8.renderscript.Allocation mInput> = r1;

        virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: void setVar(int,android.support.v8.renderscript.BaseObj)>(1, r1);

        return;
    }

    public void setRadius(float)
    {
        android.support.v8.renderscript.ScriptIntrinsicBlur r0;
        float f0;
        byte $b0, $b1;
        android.support.v8.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicBlur;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 <= 0 goto label1;

        $b1 = f0 cmpl 25.0F;

        if $b1 <= 0 goto label2;

     label1:
        $r1 = new android.support.v8.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.support.v8.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Radius out of range (0 < r <= 25).");

        throw $r1;

     label2:
        virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: void setVar(int,float)>(0, f0);

        return;
    }

    public void forEach(android.support.v8.renderscript.Allocation)
    {
        android.support.v8.renderscript.ScriptIntrinsicBlur r0;
        android.support.v8.renderscript.Allocation r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicBlur;

        r1 := @parameter0: android.support.v8.renderscript.Allocation;

        virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: void forEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker)>(0, null, r1, null);

        return;
    }

    public android.support.v8.renderscript.Script$KernelID getKernelID()
    {
        android.support.v8.renderscript.ScriptIntrinsicBlur r0;
        android.support.v8.renderscript.Script$KernelID $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicBlur;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: android.support.v8.renderscript.Script$KernelID createKernelID(int,int,android.support.v8.renderscript.Element,android.support.v8.renderscript.Element)>(0, 2, null, null);

        return $r1;
    }

    public android.support.v8.renderscript.Script$FieldID getFieldID_Input()
    {
        android.support.v8.renderscript.ScriptIntrinsicBlur r0;
        android.support.v8.renderscript.Script$FieldID $r1;

        r0 := @this: android.support.v8.renderscript.ScriptIntrinsicBlur;

        $r1 = virtualinvoke r0.<android.support.v8.renderscript.ScriptIntrinsicBlur: android.support.v8.renderscript.Script$FieldID createFieldID(int,android.support.v8.renderscript.Element)>(1, null);

        return $r1;
    }
}
