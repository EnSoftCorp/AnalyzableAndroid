public class com.coremedia.iso.boxes.sampleentry.MpegSampleEntry extends com.coremedia.iso.boxes.sampleentry.SampleEntry implements com.coremedia.iso.boxes.ContainerBox
{
    private com.coremedia.iso.BoxParser boxParser;

    public void <init>(java.lang.String)
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.coremedia.iso.boxes.sampleentry.SampleEntry: void <init>(java.lang.String)>(r1);

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: void _parseReservedAndDataReferenceIndex(java.nio.ByteBuffer)>(r1);

        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: void _parseChildBoxes(java.nio.ByteBuffer)>(r1);

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;
        long l0, $l1;
        java.util.Iterator r1;
        com.coremedia.iso.boxes.Box r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        l0 = 8L;

        $r3 = r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: java.util.List boxes>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.coremedia.iso.boxes.Box) $r4;

        $l1 = interfaceinvoke r2.<com.coremedia.iso.boxes.Box: long getSize()>();

        l0 = l0 + $l1;

        goto label1;

     label2:
        return l0;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.util.List[] $r3;
        java.util.List $r4, $r5;
        java.lang.String $r7;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MpegSampleEntry");

        $r3 = newarray (java.util.List)[1];

        $r4 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: java.util.List getBoxes()>();

        $r3[0] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: void _writeReservedAndDataReferenceIndex(java.nio.ByteBuffer)>(r1);

        virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: void _writeChildBoxes(java.nio.ByteBuffer)>(r1);

        return;
    }
}
