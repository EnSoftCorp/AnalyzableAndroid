public abstract class com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord extends java.lang.Object
{
    int type;

    public void <init>(int)
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord r0;
        int i0;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: int type> = i0;

        return;
    }

    public static java.util.List createFor(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0, $r5, $r7;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.ArrayList r1, $r3;
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord r2;
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$RMHeader $r4;
        java.nio.Buffer $r6;
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$DefaulPlayReadyRecord $r9, $r11;
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$EmeddedLicenseStore $r10;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r1 = $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        i2 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16BE(java.nio.ByteBuffer)>(r0);

        i3 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16BE(java.nio.ByteBuffer)>(r0);

        tableswitch(i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        $r4 = new com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$RMHeader;

        specialinvoke $r4.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$RMHeader: void <init>()>();

        r2 = $r4;

        goto label6;

     label3:
        $r9 = new com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$DefaulPlayReadyRecord;

        specialinvoke $r9.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$DefaulPlayReadyRecord: void <init>(int)>(2);

        r2 = $r9;

        goto label6;

     label4:
        $r10 = new com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$EmeddedLicenseStore;

        specialinvoke $r10.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$EmeddedLicenseStore: void <init>()>();

        r2 = $r10;

        goto label6;

     label5:
        $r11 = new com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$DefaulPlayReadyRecord;

        specialinvoke $r11.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord$DefaulPlayReadyRecord: void <init>(int)>(i2);

        r2 = $r11;

     label6:
        $r5 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i3);

        $r7 = (java.nio.ByteBuffer) $r6;

        virtualinvoke r2.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: void parse(java.nio.ByteBuffer)>($r7);

        $i4 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i5 = $i4 + i3;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i5);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label7:
        return r1;
    }

    public abstract void parse(java.nio.ByteBuffer);

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord r0;
        java.lang.StringBuilder r1, $r2, $r4, $r6;
        int $i0, $i1;
        java.nio.ByteBuffer $r7;
        java.lang.String $r10;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PlayReadyRecord");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{type=");

        $i0 = r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: int type>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length=");

        $r7 = virtualinvoke r0.<com.googlecode.mp4parser.boxes.piff.PlayReadyHeader$PlayReadyRecord: java.nio.ByteBuffer getValue()>();

        $i1 = virtualinvoke $r7.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public abstract java.nio.ByteBuffer getValue();
}
