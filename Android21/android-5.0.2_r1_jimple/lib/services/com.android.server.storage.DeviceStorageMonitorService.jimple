public class com.android.server.storage.DeviceStorageMonitorService extends com.android.server.SystemService
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final boolean localLOGV;
    static final int DEVICE_MEMORY_WHAT;
    private static final int MONITOR_INTERVAL;
    private static final int LOW_MEMORY_NOTIFICATION_ID;
    private static final int DEFAULT_FREE_STORAGE_LOG_INTERVAL_IN_MINUTES;
    private static final long DEFAULT_DISK_FREE_CHANGE_REPORTING_THRESHOLD;
    private static final long DEFAULT_CHECK_INTERVAL;
    private long mFreeMem;
    private long mFreeMemAfterLastCacheClear;
    private long mLastReportedFreeMem;
    private long mLastReportedFreeMemTime;
    boolean mLowMemFlag;
    private boolean mMemFullFlag;
    private final boolean mIsBootImageOnDisk;
    private final android.content.ContentResolver mResolver;
    private final long mTotalMemory;
    private final android.os.StatFs mDataFileStats;
    private final android.os.StatFs mSystemFileStats;
    private final android.os.StatFs mCacheFileStats;
    private static final java.io.File DATA_PATH;
    private static final java.io.File SYSTEM_PATH;
    private static final java.io.File CACHE_PATH;
    private long mThreadStartTime;
    boolean mClearSucceeded;
    boolean mClearingCache;
    private final android.content.Intent mStorageLowIntent;
    private final android.content.Intent mStorageOkIntent;
    private final android.content.Intent mStorageFullIntent;
    private final android.content.Intent mStorageNotFullIntent;
    private com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver mClearCacheObserver;
    private com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver mCacheFileDeletedObserver;
    private static final int _TRUE;
    private static final int _FALSE;
    long mMemLowThreshold;
    private long mMemCacheStartTrimThreshold;
    private long mMemCacheTrimToThreshold;
    private long mMemFullThreshold;
    static final java.lang.String SERVICE;
    private final android.os.Handler mHandler;
    private final com.android.server.storage.DeviceStorageMonitorInternal mLocalService;
    private final android.os.IBinder mRemoteService;

    private void restatDataDir()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        long l0, l1, l2, l3, $l5, $l6, $l8, $l9, $l10, $l12, $l14, $l15, $l19, $l20, $l21, $l23, $l25, $l26, $l27, $l28, $l30, $l31, $l33, l35, l36;
        java.io.File $r3, $r11, $r15;
        android.os.StatFs $r4, $r6, $r7, $r10, $r12, $r14, $r16, $r17, $r19;
        java.lang.String $r5, $r8, $r13, $r18, r28;
        int $i4, $i7, $i13, $i16, $i17, $i18;
        boolean $z0;
        android.content.ContentResolver $r9, $r23;
        byte $b11, $b24, $b29, $b34;
        java.lang.Object[] $r20;
        java.lang.Long $r21, $r22, $r24;
        java.lang.IllegalArgumentException $r25, $r26, $r27;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

     label01:
        $r4 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mDataFileStats>;

        $r3 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File DATA_PATH>;

        $r5 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r4.<android.os.StatFs: void restat(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mDataFileStats>;

        $i4 = virtualinvoke $r6.<android.os.StatFs: int getAvailableBlocks()>();

        $l5 = (long) $i4;

        $r7 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mDataFileStats>;

        $i7 = virtualinvoke $r7.<android.os.StatFs: int getBlockSize()>();

        $l6 = (long) $i7;

        $l8 = $l5 * $l6;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem> = $l8;

     label02:
        goto label04;

     label03:
        $r25 := @caughtexception;

     label04:
        r28 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.freemem");

        $r8 = "";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z0 != 0 goto label05;

        $l30 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r28);

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem> = $l30;

     label05:
        $r9 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.ContentResolver mResolver>;

        $l9 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r9, "sys_free_storage_log_interval", 720L);

        $l10 = $l9 * 60L;

        l0 = $l10 * 1000L;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMemTime>;

        $b11 = $l12 cmp 0L;

        if $b11 == 0 goto label06;

        $l27 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMemTime>;

        $l28 = l1 - $l27;

        $b29 = $l28 cmp l0;

        if $b29 < 0 goto label14;

     label06:
        r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMemTime> = l1;

        l2 = -1L;

        l3 = -1L;

     label07:
        $r10 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mSystemFileStats>;

        $r11 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File SYSTEM_PATH>;

        $r13 = virtualinvoke $r11.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r10.<android.os.StatFs: void restat(java.lang.String)>($r13);

        $r14 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mSystemFileStats>;

        $i13 = virtualinvoke $r14.<android.os.StatFs: int getAvailableBlocks()>();

        $l15 = (long) $i13;

        $r12 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mSystemFileStats>;

        $i16 = virtualinvoke $r12.<android.os.StatFs: int getBlockSize()>();

        $l14 = (long) $i16;

        l2 = $l15 * $l14;

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

     label10:
        $r17 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mCacheFileStats>;

        $r15 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File CACHE_PATH>;

        $r18 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r17.<android.os.StatFs: void restat(java.lang.String)>($r18);

        $r16 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mCacheFileStats>;

        $i17 = virtualinvoke $r16.<android.os.StatFs: int getAvailableBlocks()>();

        $l20 = (long) $i17;

        $r19 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mCacheFileStats>;

        $i18 = virtualinvoke $r19.<android.os.StatFs: int getBlockSize()>();

        $l19 = (long) $i18;

        l3 = $l20 * $l19;

     label11:
        goto label13;

     label12:
        $r27 := @caughtexception;

     label13:
        $r20 = newarray (java.lang.Object)[3];

        $l21 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l21);

        $r20[0] = $r22;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r20[1] = $r21;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r20[2] = $r24;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2746, $r20);

     label14:
        $r23 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.ContentResolver mResolver>;

        l35 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r23, "disk_free_change_reporting_threshold", 2097152L);

        $l25 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $l26 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMem>;

        l36 = $l25 - $l26;

        $b24 = l36 cmp l35;

        if $b24 > 0 goto label15;

        $l33 = neg l35;

        $b34 = l36 cmp $l33;

        if $b34 >= 0 goto label16;

     label15:
        $l23 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMem> = $l23;

        $l31 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(2744, $l31);

     label16:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
    }

    private void clearCache()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.os.RemoteException r1, $r7;
        com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver $r2, $r5, $r6;
        android.os.IBinder $r3;
        android.content.pm.IPackageManager $r4;
        long $l0;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        $r2 = r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver mClearCacheObserver>;

        if $r2 != null goto label1;

        $r6 = new com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver;

        specialinvoke $r6.<com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver: void <init>(com.android.server.storage.DeviceStorageMonitorService,com.android.server.storage.DeviceStorageMonitorService$1)>(r0, null);

        r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver mClearCacheObserver> = $r6;

     label1:
        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearingCache> = 1;

     label2:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r4 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r3);

        $l0 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheTrimToThreshold>;

        $r5 = r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver mClearCacheObserver>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>($l0, $r5);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get handle for PackageManger Exception: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceStorageMonitorService", $r11);

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearingCache> = 0;

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearSucceeded> = 0;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void checkMemory(boolean)
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long l0, $l1, $l2, $l4, $l5, $l6, $l9, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l25;
        byte $b3, $b7, $b15, $b24, $b26;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearingCache>;

        if $z1 == 0 goto label2;

        $l22 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l23 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mThreadStartTime>;

        l0 = $l22 - $l23;

        $b26 = l0 cmp 600000L;

        if $b26 <= 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceStorageMonitorService", "Thread that clears cache file seems to run for ever");

     label1:
        goto label8;

     label2:
        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void restatDataDir()>();

        $l2 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $l1 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold>;

        $b3 = $l2 cmp $l1;

        if $b3 >= 0 goto label4;

        if z0 == 0 goto label3;

        $l12 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $l13 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheStartTrimThreshold>;

        $b15 = $l12 cmp $l13;

        if $b15 >= 0 goto label5;

        $l17 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMemAfterLastCacheClear>;

        $l14 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $l20 = $l17 - $l14;

        $l19 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold>;

        $l16 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheStartTrimThreshold>;

        $l18 = $l19 - $l16;

        $l21 = $l18 / 4L;

        $b24 = $l20 cmp $l21;

        if $b24 < 0 goto label5;

        $l25 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mThreadStartTime> = $l25;

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearSucceeded> = 0;

        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void clearCache()>();

        goto label5;

     label3:
        $l9 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMemAfterLastCacheClear> = $l9;

        $z7 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag>;

        if $z7 != 0 goto label5;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DeviceStorageMonitorService", "Running low on memory. Sending notification");

        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void sendNotification()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag> = 1;

        goto label5;

     label4:
        $l4 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMemAfterLastCacheClear> = $l4;

        $z2 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag>;

        if $z2 == 0 goto label5;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DeviceStorageMonitorService", "Memory available. Cancelling notification");

        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void cancelNotification()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag> = 0;

     label5:
        $z3 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag>;

        if $z3 != 0 goto label6;

        $z6 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mIsBootImageOnDisk>;

        if $z6 != 0 goto label6;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DeviceStorageMonitorService", "No boot image on disk due to lack of space. Sending notification");

        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void sendNotification()>();

     label6:
        $l6 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $l5 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemFullThreshold>;

        $b7 = $l6 cmp $l5;

        if $b7 >= 0 goto label7;

        $z5 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mMemFullFlag>;

        if $z5 != 0 goto label8;

        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void sendFullNotification()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mMemFullFlag> = 1;

        goto label8;

     label7:
        $z4 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mMemFullFlag>;

        if $z4 == 0 goto label8;

        specialinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void cancelFullNotification()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mMemFullFlag> = 0;

     label8:
        virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void postCheckMemoryMsg(boolean,long)>(1, 60000L);

        return;
    }

    void postCheckMemoryMsg(boolean, long)
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        boolean z0;
        long l0;
        android.os.Handler $r1, $r2, $r3;
        android.os.Message $r4;
        byte $b1;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        $r1 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r3 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.Handler mHandler>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        $r4 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(1, $b1, 0);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r4, l0);

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.content.Context r1;
        com.android.server.storage.DeviceStorageMonitorService$1 $r2;
        com.android.server.storage.DeviceStorageMonitorService$2 $r3;
        com.android.server.storage.DeviceStorageMonitorService$3 $r4;
        android.content.ContentResolver $r5;
        boolean $z0;
        android.os.StatFs $r6, $r9, $r12, $r15, $r16;
        java.io.File $r7, $r10, $r13;
        java.lang.String $r8, $r11, $r14;
        int $i0, $i3;
        long $l1, $l2, $l4;
        android.content.Intent $r17, $r19, $r20, $r21, $r22, $r25, $r27, $r28;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag> = 0;

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mMemFullFlag> = 0;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mThreadStartTime> = -1L;

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearSucceeded> = 0;

        $r2 = new com.android.server.storage.DeviceStorageMonitorService$1;

        specialinvoke $r2.<com.android.server.storage.DeviceStorageMonitorService$1: void <init>(com.android.server.storage.DeviceStorageMonitorService)>(r0);

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.Handler mHandler> = $r2;

        $r3 = new com.android.server.storage.DeviceStorageMonitorService$2;

        specialinvoke $r3.<com.android.server.storage.DeviceStorageMonitorService$2: void <init>(com.android.server.storage.DeviceStorageMonitorService)>(r0);

        r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorInternal mLocalService> = $r3;

        $r4 = new com.android.server.storage.DeviceStorageMonitorService$3;

        specialinvoke $r4.<com.android.server.storage.DeviceStorageMonitorService$3: void <init>(com.android.server.storage.DeviceStorageMonitorService)>(r0);

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.IBinder mRemoteService> = $r4;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMemTime> = 0L;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.ContentResolver mResolver> = $r5;

        $z0 = staticinvoke <com.android.server.storage.DeviceStorageMonitorService: boolean isBootImageOnDisk()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mIsBootImageOnDisk> = $z0;

        $r6 = new android.os.StatFs;

        $r7 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File DATA_PATH>;

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r6.<android.os.StatFs: void <init>(java.lang.String)>($r8);

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mDataFileStats> = $r6;

        $r9 = new android.os.StatFs;

        $r10 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File SYSTEM_PATH>;

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r9.<android.os.StatFs: void <init>(java.lang.String)>($r11);

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mSystemFileStats> = $r9;

        $r12 = new android.os.StatFs;

        $r13 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File CACHE_PATH>;

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r12.<android.os.StatFs: void <init>(java.lang.String)>($r14);

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mCacheFileStats> = $r12;

        $r15 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mDataFileStats>;

        $i0 = virtualinvoke $r15.<android.os.StatFs: int getBlockCount()>();

        $l1 = (long) $i0;

        $r16 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.StatFs mDataFileStats>;

        $i3 = virtualinvoke $r16.<android.os.StatFs: int getBlockSize()>();

        $l2 = (long) $i3;

        $l4 = $l1 * $l2;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mTotalMemory> = $l4;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DEVICE_STORAGE_LOW");

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageLowIntent> = $r17;

        $r19 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageLowIntent>;

        virtualinvoke $r19.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r21 = new android.content.Intent;

        specialinvoke $r21.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DEVICE_STORAGE_OK");

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageOkIntent> = $r21;

        $r20 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageOkIntent>;

        virtualinvoke $r20.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DEVICE_STORAGE_FULL");

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageFullIntent> = $r22;

        $r25 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageFullIntent>;

        virtualinvoke $r25.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DEVICE_STORAGE_NOT_FULL");

        r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageNotFullIntent> = $r27;

        $r28 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageNotFullIntent>;

        virtualinvoke $r28.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        return;
    }

    private static boolean isBootImageOnDisk()
    {
        java.lang.String[] r0;
        int i0, i1;
        java.lang.String r1;
        boolean $z0;

        r0 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAllDexCodeInstructionSets()>();

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = staticinvoke <dalvik.system.VMRuntime: boolean isBootClassPathOnDisk(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public void onStart()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.os.storage.StorageManager r1;
        android.content.Context $r2;
        java.io.File $r3, $r4;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver $r5, $r6;
        com.android.server.storage.DeviceStorageMonitorInternal $r7;
        android.os.IBinder $r8;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        $r2 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        r1 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageManager 'from'(android.content.Context)>($r2);

        $r3 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File DATA_PATH>;

        $l0 = virtualinvoke r1.<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>($r3);

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold> = $l0;

        $r4 = <com.android.server.storage.DeviceStorageMonitorService: java.io.File DATA_PATH>;

        $l1 = virtualinvoke r1.<android.os.storage.StorageManager: long getStorageFullBytes(java.io.File)>($r4);

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemFullThreshold> = $l1;

        $l2 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold>;

        $l4 = $l2 * 3L;

        $l3 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemFullThreshold>;

        $l5 = $l4 + $l3;

        $l6 = $l5 / 4L;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheStartTrimThreshold> = $l6;

        $l10 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold>;

        $l8 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold>;

        $l7 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheStartTrimThreshold>;

        $l9 = $l8 - $l7;

        $l11 = $l9 * 2L;

        $l13 = $l10 + $l11;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheTrimToThreshold> = $l13;

        $l12 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mTotalMemory>;

        r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMemAfterLastCacheClear> = $l12;

        virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void checkMemory(boolean)>(1);

        $r6 = new com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver;

        specialinvoke $r6.<com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver: void <init>()>();

        r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver mCacheFileDeletedObserver> = $r6;

        $r5 = r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver mCacheFileDeletedObserver>;

        virtualinvoke $r5.<com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver: void startWatching()>();

        $r8 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.os.IBinder mRemoteService>;

        virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void publishBinderService(java.lang.String,android.os.IBinder)>("devicestoragemonitor", $r8);

        $r7 = r0.<com.android.server.storage.DeviceStorageMonitorService: com.android.server.storage.DeviceStorageMonitorInternal mLocalService>;

        virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "com/android/server/storage/DeviceStorageMonitorInternal", $r7);

        return;
    }

    void dumpImpl(java.io.PrintWriter)
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        java.io.PrintWriter r1;
        android.content.Context r2;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Current DeviceStorageMonitor state:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mFreeMem=");

        $l0 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        $r3 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mTotalMemory=");

        $l1 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mTotalMemory>;

        $r4 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mFreeMemAfterLastCacheClear=");

        $l2 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMemAfterLastCacheClear>;

        $r5 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mLastReportedFreeMem=");

        $l3 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMem>;

        $r6 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLastReportedFreeMemTime=");

        $l4 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mLastReportedFreeMemTime>;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l4, $l5, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mLowMemFlag=");

        $z0 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mLowMemFlag>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mMemFullFlag=");

        $z1 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mMemFullFlag>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mIsBootImageOnDisk=");

        $z3 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mIsBootImageOnDisk>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mClearSucceeded=");

        $z2 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearSucceeded>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mClearingCache=");

        $z4 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mClearingCache>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemLowThreshold=");

        $l6 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemLowThreshold>;

        $r7 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mMemFullThreshold=");

        $l7 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemFullThreshold>;

        $r8 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l7);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemCacheStartTrimThreshold=");

        $l8 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheStartTrimThreshold>;

        $r9 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mMemCacheTrimToThreshold=");

        $l9 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mMemCacheTrimToThreshold>;

        $r10 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>(r2, $l9);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return;
    }

    private void sendNotification()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.content.Context r1;
        android.content.Intent r2, $r8, $r29;
        android.app.NotificationManager r3;
        java.lang.CharSequence r4, r5;
        android.app.PendingIntent r6;
        android.app.Notification r7;
        long $l0, $l2;
        boolean $z0, $z1;
        java.lang.Object $r11;
        android.os.UserHandle $r12, $r26, $r28;
        android.app.Notification$Builder $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r25;
        android.content.res.Resources $r15;
        int $i3, $i4, $i5, $i6;
        android.app.Notification$BigTextStyle $r20, $r24;
        java.lang.String $r27;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        r1 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        $l0 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(2745, $l0);

        $r8 = new android.content.Intent;

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        if $z0 == 0 goto label1;

        $r27 = "android.settings.INTERNAL_STORAGE_SETTINGS";

        goto label2;

     label1:
        $r27 = "android.intent.action.MANAGE_PACKAGE_STORAGE";

     label2:
        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>($r27);

        r2 = $r8;

        $l2 = r0.<com.android.server.storage.DeviceStorageMonitorService: long mFreeMem>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("memory", $l2);

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r11 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        r3 = (android.app.NotificationManager) $r11;

        r4 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>(17040472);

        $z1 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mIsBootImageOnDisk>;

        if $z1 == 0 goto label3;

        $i6 = 17040473;

        goto label4;

     label3:
        $i6 = 17040474;

     label4:
        r5 = virtualinvoke r1.<android.content.Context: java.lang.CharSequence getText(int)>($i6);

        $r12 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r1, 0, r2, 0, null, $r12);

        $r14 = new android.app.Notification$Builder;

        specialinvoke $r14.<android.app.Notification$Builder: void <init>(android.content.Context)>(r1);

        $r13 = virtualinvoke $r14.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17303119);

        $r16 = virtualinvoke $r13.<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>(r4);

        $r15 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r15.<android.content.res.Resources: int getColor(int)>(17170520);

        $r17 = virtualinvoke $r16.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i3);

        $r19 = virtualinvoke $r17.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>(r4);

        $r18 = virtualinvoke $r19.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r5);

        $r21 = virtualinvoke $r18.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>(r6);

        $r20 = new android.app.Notification$BigTextStyle;

        specialinvoke $r20.<android.app.Notification$BigTextStyle: void <init>()>();

        $r24 = virtualinvoke $r20.<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>(r5);

        $r25 = virtualinvoke $r21.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>($r24);

        $r22 = virtualinvoke $r25.<android.app.Notification$Builder: android.app.Notification$Builder setVisibility(int)>(1);

        $r23 = virtualinvoke $r22.<android.app.Notification$Builder: android.app.Notification$Builder setCategory(java.lang.String)>("sys");

        r7 = virtualinvoke $r23.<android.app.Notification$Builder: android.app.Notification build()>();

        $i5 = r7.<android.app.Notification: int flags>;

        $i4 = $i5 | 32;

        r7.<android.app.Notification: int flags> = $i4;

        $r26 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r3.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 1, r7, $r26);

        $r29 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageLowIntent>;

        $r28 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r1.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r29, $r28);

        return;
    }

    private void cancelNotification()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.content.Context r1;
        android.app.NotificationManager r2;
        java.lang.Object $r3;
        android.os.UserHandle $r4, $r5, $r7;
        android.content.Intent $r6, $r8;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        r1 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        r2 = (android.app.NotificationManager) $r3;

        $r4 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r2.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 1, $r4);

        $r6 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageLowIntent>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r1.<android.content.Context: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r6, $r5);

        $r8 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageOkIntent>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r1.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r8, $r7);

        return;
    }

    private void sendFullNotification()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.content.Context $r1;
        android.os.UserHandle $r2;
        android.content.Intent $r3;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        $r1 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        $r3 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageFullIntent>;

        $r2 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r1.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r2);

        return;
    }

    private void cancelFullNotification()
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        android.content.Context $r1, $r4;
        android.os.UserHandle $r2, $r5;
        android.content.Intent $r3, $r6;

        r0 := @this: com.android.server.storage.DeviceStorageMonitorService;

        $r1 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        $r3 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageFullIntent>;

        $r2 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r1.<android.content.Context: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r2);

        $r4 = virtualinvoke r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Context getContext()>();

        $r6 = r0.<com.android.server.storage.DeviceStorageMonitorService: android.content.Intent mStorageNotFullIntent>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r4.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r6, $r5);

        return;
    }

    static boolean access$100(com.android.server.storage.DeviceStorageMonitorService)
    {
        com.android.server.storage.DeviceStorageMonitorService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.storage.DeviceStorageMonitorService;

        $z0 = r0.<com.android.server.storage.DeviceStorageMonitorService: boolean mIsBootImageOnDisk>;

        return $z0;
    }

    static void <clinit>()
    {
        java.io.File $r0, $r1, $r2;

        <com.android.server.storage.DeviceStorageMonitorService: java.lang.String SERVICE> = "devicestoragemonitor";

        <com.android.server.storage.DeviceStorageMonitorService: int _FALSE> = 0;

        <com.android.server.storage.DeviceStorageMonitorService: int _TRUE> = 1;

        <com.android.server.storage.DeviceStorageMonitorService: long DEFAULT_CHECK_INTERVAL> = 60000L;

        <com.android.server.storage.DeviceStorageMonitorService: long DEFAULT_DISK_FREE_CHANGE_REPORTING_THRESHOLD> = 2097152L;

        <com.android.server.storage.DeviceStorageMonitorService: int DEFAULT_FREE_STORAGE_LOG_INTERVAL_IN_MINUTES> = 720;

        <com.android.server.storage.DeviceStorageMonitorService: int LOW_MEMORY_NOTIFICATION_ID> = 1;

        <com.android.server.storage.DeviceStorageMonitorService: int MONITOR_INTERVAL> = 1;

        <com.android.server.storage.DeviceStorageMonitorService: int DEVICE_MEMORY_WHAT> = 1;

        <com.android.server.storage.DeviceStorageMonitorService: boolean localLOGV> = 0;

        <com.android.server.storage.DeviceStorageMonitorService: boolean DEBUG> = 0;

        <com.android.server.storage.DeviceStorageMonitorService: java.lang.String TAG> = "DeviceStorageMonitorService";

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        <com.android.server.storage.DeviceStorageMonitorService: java.io.File DATA_PATH> = $r0;

        $r1 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        <com.android.server.storage.DeviceStorageMonitorService: java.io.File SYSTEM_PATH> = $r1;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDownloadCacheDirectory()>();

        <com.android.server.storage.DeviceStorageMonitorService: java.io.File CACHE_PATH> = $r2;

        return;
    }
}
