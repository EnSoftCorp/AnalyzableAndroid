class com.android.server.am.ActivityStackSupervisor$ActivityContainer extends android.app.IActivityContainer$Stub
{
    static final int FORCE_NEW_TASK_FLAGS;
    final int mStackId;
    android.app.IActivityContainerCallback mCallback;
    final com.android.server.am.ActivityStack mStack;
    com.android.server.am.ActivityRecord mParentActivity;
    java.lang.String mIdString;
    boolean mVisible;
    com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay;
    static final int CONTAINER_STATE_HAS_SURFACE;
    static final int CONTAINER_STATE_NO_SURFACE;
    static final int CONTAINER_STATE_FINISHING;
    int mContainerState;
    final com.android.server.am.ActivityStackSupervisor this$0;

    void <init>(com.android.server.am.ActivityStackSupervisor, int)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor r1;
        int i0, $i1;
        com.android.server.am.ActivityManagerService r2, $r4;
        java.lang.Throwable r3, $r11;
        com.android.server.am.ActivityStack $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter1: int;

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0> = r1;

        specialinvoke r0.<android.app.IActivityContainer$Stub: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: android.app.IActivityContainerCallback mCallback> = null;

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityRecord mParentActivity> = null;

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean mVisible> = 1;

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mContainerState> = 0;

        $r4 = r1.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId> = i0;

        $r5 = new com.android.server.am.ActivityStack;

        specialinvoke $r5.<com.android.server.am.ActivityStack: void <init>(com.android.server.am.ActivityStackSupervisor$ActivityContainer)>(r0);

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivtyContainer{");

        $i1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: java.lang.String mIdString> = $r10;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void attachToDisplayLocked(com.android.server.am.ActivityStackSupervisor$ActivityDisplay)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r1;
        int $i0, $i1, $i2;
        com.android.server.am.ActivityStack $r2, $r4, $r5;
        java.util.ArrayList $r3;
        com.android.server.am.ActivityStackSupervisor $r6;
        com.android.server.wm.WindowManagerService $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: com.android.server.am.ActivityStackSupervisor$ActivityDisplay;

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay> = r1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        $i0 = r1.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

        $r2.<com.android.server.am.ActivityStack: int mDisplayId> = $i0;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        $r3 = r1.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $r4.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks> = $r3;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        virtualinvoke r1.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void attachActivities(com.android.server.am.ActivityStack)>($r5);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r7 = $r6.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId>;

        $i1 = r1.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void attachStack(int,int)>($i2, $i1);

        return;
    }

    public void attachToDisplay(int)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r5;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r2;
        java.lang.Throwable r3, $r9;
        com.android.server.am.ActivityStackSupervisor $r4, $r6;
        android.util.SparseArray $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r5 = $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r7 = staticinvoke <com.android.server.am.ActivityStackSupervisor: android.util.SparseArray access$500(com.android.server.am.ActivityStackSupervisor)>($r6);

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r8;

        if r2 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void attachToDisplayLocked(com.android.server.am.ActivityStackSupervisor$ActivityDisplay)>(r2);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getDisplayId()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityManagerService r1, $r4;
        java.lang.Throwable r2, $r7;
        com.android.server.am.ActivityStackSupervisor $r3;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r5, $r6;
        int $i0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r4 = $r3.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r5 == null goto label3;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $i0 = $r6.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean injectEvent(android.view.InputEvent)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.view.InputEvent r1;
        long l0;
        com.android.server.am.ActivityManagerService r2, $r6;
        boolean z0, z1;
        java.lang.Throwable r3, r4, $r11, $r12;
        com.android.server.am.ActivityStackSupervisor $r5, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7, $r9;
        int $i1;
        android.hardware.input.InputManagerInternal $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.view.InputEvent;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r7 == null goto label04;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r10 = $r8.<com.android.server.am.ActivityStackSupervisor: android.hardware.input.InputManagerInternal mInputManagerInternal>;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $i1 = $r9.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

        z0 = virtualinvoke $r10.<android.hardware.input.InputManagerInternal: boolean injectInputEvent(android.view.InputEvent,int,int)>(r1, $i1, 0);

        exitmonitor r2;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label04:
        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label07:
        throw r3;

     label08:
        z1 = 0;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label10:
        $r12 := @caughtexception;

        r4 = $r12;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void release()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityManagerService r1, $r6;
        android.os.Message r2;
        long l0;
        java.lang.Throwable r3, r4, $r14, $r15;
        com.android.server.am.ActivityStackSupervisor $r5, $r7, $r9, $r12;
        int $i1;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r8, $r10;
        com.android.server.am.ActivityStack $r11, $r13;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $i1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mContainerState>;

        if $i1 != 2 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mContainerState> = 2;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r8 = $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        r2 = virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(112, r0);

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r10 = $r9.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 2000L);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r11 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        virtualinvoke $r11.<com.android.server.am.ActivityStack: void finishAllActivitiesLocked(boolean)>(0);

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: void removePendingActivityLaunchesLocked(com.android.server.am.ActivityStack)>($r13);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label08;

     label06:
        $r15 := @caughtexception;

        r3 = $r15;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r1;

     label11:
        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void detachLocked()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r1, $r3;
        com.android.server.am.ActivityStack $r2, $r4, $r5;
        com.android.server.am.ActivityStackSupervisor $r6;
        int $i0;
        com.android.server.wm.WindowManagerService $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void detachActivitiesLocked(com.android.server.am.ActivityStack)>($r2);

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay> = null;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        $r4.<com.android.server.am.ActivityStack: int mDisplayId> = -1;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        $r5.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks> = null;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r7 = $r6.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void detachStack(int)>($i0);

     label1:
        return;
    }

    public final int startActivity(android.content.Intent)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.content.Intent r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r12, $r13;
        com.android.server.am.ActivityStackSupervisor $r3, $r5, $r7, $r9, $r15;
        com.android.server.am.ActivityManagerService $r4, $r6, $r14;
        android.net.Uri $r10, $r11, $r16;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r4 = $r3.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("ActivityContainer.startActivity");

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $i3 = staticinvoke <com.android.server.am.ActivityStackSupervisor: int access$600(com.android.server.am.ActivityStackSupervisor)>($r7);

        i0 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i1, $i2, $i3, 0, 2, "ActivityContainer", null);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(402718720);

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        if r2 != null goto label1;

        $r10 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if $r10 == null goto label1;

        $r12 = "content";

        $r11 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $r13 = virtualinvoke $r11.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label1;

        $r15 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r14 = $r15.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r16 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        r2 = virtualinvoke $r14.<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>($r16, i0);

     label1:
        $r9 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $i4 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(null, -1, null, r1, r2, null, null, null, null, 0, 0, null, null, null, null, i0, r0, null);

        return $i4;
    }

    public final int startActivityIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.content.IIntentSender r1;
        com.android.server.am.ActivityStackSupervisor $r2;
        com.android.server.am.ActivityManagerService $r3;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.content.IIntentSender;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r3 = $r2.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("ActivityContainer.startActivityIntentSender");

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad PendingIntent object");

        throw $r5;

     label1:
        $r4 = (com.android.server.am.PendingIntentRecord) r1;

        $i0 = virtualinvoke $r4.<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,android.app.IActivityContainer)>(0, null, null, null, null, null, null, 0, 402718720, 402718720, null, r0);

        return $i0;
    }

    private void checkEmbeddedAllowedInner(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.content.Intent r1;
        java.lang.String r2, $r9, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.ActivityInfo r3;
        com.android.server.am.ActivityStackSupervisor $r4, $r6, $r7, $r13;
        com.android.server.am.ActivityManagerService $r5, $r15;
        java.lang.SecurityException $r8;
        android.net.Uri $r10, $r12, $r14;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r5 = $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $i3 = staticinvoke <com.android.server.am.ActivityStackSupervisor: int access$600(com.android.server.am.ActivityStackSupervisor)>($r6);

        i0 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i1, $i2, $i3, 0, 2, "ActivityContainer", null);

        if r2 != null goto label1;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        if r2 != null goto label1;

        $r10 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if $r10 == null goto label1;

        $r9 = "content";

        $r12 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $r11 = virtualinvoke $r12.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label1;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r15 = $r13.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r14 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        r2 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>($r14, i0);

     label1:
        $r7 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        r3 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,android.app.ProfilerInfo,int)>(r1, r2, 0, null, i0);

        if r3 == null goto label2;

        $i4 = r3.<android.content.pm.ActivityInfo: int flags>;

        $i5 = $i4 & -2147483648;

        if $i5 != 0 goto label2;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Attempt to embed activity that has not set allowEmbedded=\"true\"");

        throw $r8;

     label2:
        return;
    }

    public final void checkEmbeddedAllowed(android.content.Intent)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.content.Intent r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void checkEmbeddedAllowedInner(android.content.Intent,java.lang.String)>(r1, null);

        return;
    }

    public final void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r2;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r3, $r4;
        java.lang.String $r5;
        android.content.Intent $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad PendingIntent object");

        throw $r7;

     label1:
        r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r3 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r3.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        $r4 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r5 = $r4.<com.android.server.am.PendingIntentRecord$Key: java.lang.String requestResolvedType>;

        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void checkEmbeddedAllowedInner(android.content.Intent,java.lang.String)>($r6, $r5);

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        return r0;
    }

    public void setSurface(android.view.Surface, int, int, int)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.view.Surface r1;
        int i0, i1, i2;
        com.android.server.am.ActivityStackSupervisor $r2;
        com.android.server.am.ActivityManagerService $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.view.Surface;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r3 = $r2.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("ActivityContainer.attachToSurface");

        return;
    }

    com.android.server.am.ActivityStackSupervisor getOuter()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        return $r1;
    }

    boolean isAttachedLocked()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void getBounds(android.graphics.Point)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        android.graphics.Point r1;
        com.android.server.am.ActivityManagerService r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.am.ActivityStackSupervisor $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r6, $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r1 := @parameter0: android.graphics.Point;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r5 = $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r6 == null goto label2;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void getBounds(android.graphics.Point)>(r1);

        goto label3;

     label2:
        virtualinvoke r1.<android.graphics.Point: void set(int,int)>(0, 0);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void setVisible(boolean)
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        boolean z0, $z1;
        android.app.IActivityContainerCallback $r1;
        com.android.server.am.ActivityStackSupervisor $r2;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r3;
        android.os.Message $r4;
        byte $b0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean mVisible>;

        if $z1 == z0 goto label3;

        r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean mVisible> = z0;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: android.app.IActivityContainerCallback mCallback>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r3 = $r2.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        $r4 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(108, $b0, 0, r0);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label3:
        return;
    }

    void setDrawn()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        return;
    }

    boolean isEligibleForNewTasks()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        return 1;
    }

    void onTaskListEmptyLocked()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r2, $r6, $r7;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: java.lang.String mIdString>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r4 != null goto label1;

        $r7 = "N";

        goto label2;

     label1:
        $r7 = "A";

     label2:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityStackSupervisor$ActivityContainer: int CONTAINER_STATE_FINISHING> = 2;

        <com.android.server.am.ActivityStackSupervisor$ActivityContainer: int CONTAINER_STATE_NO_SURFACE> = 1;

        <com.android.server.am.ActivityStackSupervisor$ActivityContainer: int CONTAINER_STATE_HAS_SURFACE> = 0;

        <com.android.server.am.ActivityStackSupervisor$ActivityContainer: int FORCE_NEW_TASK_FLAGS> = 402718720;

        return;
    }
}
