class com.android.server.am.ActiveServices$ServiceMap extends android.os.Handler
{
    final int mUserId;
    final android.util.ArrayMap mServicesByName;
    final android.util.ArrayMap mServicesByIntent;
    final java.util.ArrayList mDelayedStartList;
    final java.util.ArrayList mStartingBackground;
    static final int MSG_BG_START_TIMEOUT;
    final com.android.server.am.ActiveServices this$0;

    void <init>(com.android.server.am.ActiveServices, android.os.Looper, int)
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        com.android.server.am.ActiveServices r1;
        android.os.Looper r2;
        int i0;
        android.util.ArrayMap $r3, $r4;
        java.util.ArrayList $r5, $r6;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        r1 := @parameter0: com.android.server.am.ActiveServices;

        r2 := @parameter1: android.os.Looper;

        i0 := @parameter2: int;

        r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground> = $r6;

        r0.<com.android.server.am.ActiveServices$ServiceMap: int mUserId> = i0;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        android.os.Message r1;
        com.android.server.am.ActivityManagerService r2, $r5;
        java.lang.Throwable r3, $r6;
        int $i0;
        com.android.server.am.ActiveServices $r4;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            default: goto label6;
        };

     label1:
        $r4 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $r5 = $r4.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStarts()>();

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void ensureNotStartingBackground(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        com.android.server.am.ServiceRecord r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStarts()>();

     label1:
        $r3 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label2:
        return;
    }

    void rescheduleDelayedStarts()
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        long l0, $l8, $l10, $l16, l18;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i11, $i12, $i13;
        com.android.server.am.ServiceRecord r1, r39, r40;
        android.os.Message r2;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r9, $r12, $r14, $r15, $r19, $r31, $r37;
        com.android.server.am.ActiveServices $r7, $r8, $r13, $r20;
        com.android.server.am.ActivityManagerService $r10;
        java.lang.Object $r11, $r16, $r17, $r30;
        byte $b9, $b15;
        com.android.server.am.ServiceRecord$StartItem $r18;
        java.lang.StringBuilder $r21, $r24, $r25, $r26, $r27, $r28, $r29, $r33, $r35, $r36;
        android.content.Intent $r22;
        boolean $z1, $z2;
        java.lang.String $r32, $r34;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void removeMessages(int)>(1);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i1 = 0;

        $r3 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i2 goto label3;

        $r31 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $r30 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ServiceRecord) $r30;

        $l16 = r1.<com.android.server.am.ServiceRecord: long startingBgTimeout>;

        $b15 = $l16 cmp l0;

        if $b15 > 0 goto label2;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waited long enough for: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r34);

        $r37 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        virtualinvoke $r37.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i2 = i2 + -1;

        i1 = i1 + -1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label5;

        $r12 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i11 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $r13 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $i12 = $r13.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i11 >= $i12 goto label5;

        $r15 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r39 = (com.android.server.am.ServiceRecord) $r16;

        $r14 = r39.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i13 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i13 > 0 goto label4;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**** NO PENDING STARTS! ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startReq=");

        $z1 = r39.<com.android.server.am.ServiceRecord: boolean startRequested>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delayedStop=");

        $z2 = r39.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r32);

     label4:
        r39.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

        $r20 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $r19 = r39.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r17 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r18 = (com.android.server.am.ServiceRecord$StartItem) $r17;

        $r22 = $r18.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        virtualinvoke $r20.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>(r0, $r22, r39, 0, 1);

        goto label3;

     label5:
        $r5 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label8;

        $r9 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r40 = (com.android.server.am.ServiceRecord) $r11;

        $l8 = r40.<com.android.server.am.ServiceRecord: long startingBgTimeout>;

        $b9 = $l8 cmp l0;

        if $b9 <= 0 goto label6;

        $l10 = r40.<com.android.server.am.ServiceRecord: long startingBgTimeout>;

        goto label7;

     label6:
        $l10 = l0;

     label7:
        l18 = $l10;

        r2 = virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: boolean sendMessageAtTime(android.os.Message,long)>(r2, l18);

     label8:
        $r6 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r7 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $i6 = $r7.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i5 >= $i6 goto label9;

        $r8 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $r10 = $r8.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i7 = r0.<com.android.server.am.ActiveServices$ServiceMap: int mUserId>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService: void backgroundServicesFinishedLocked(int)>($i7);

     label9:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActiveServices$ServiceMap: int MSG_BG_START_TIMEOUT> = 1;

        return;
    }
}
