final class com.android.server.print.UserState extends java.lang.Object implements com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks, com.android.server.print.RemotePrintService$PrintServiceCallbacks
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DEBUG;
    private static final char COMPONENT_NAME_SEPARATOR;
    private final android.text.TextUtils$SimpleStringSplitter mStringColonSplitter;
    private final android.content.Intent mQueryIntent;
    private final android.util.ArrayMap mActiveServices;
    private final java.util.List mInstalledServices;
    private final java.util.Set mEnabledServices;
    private final com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache;
    private final java.lang.Object mLock;
    private final android.content.Context mContext;
    private final int mUserId;
    private final com.android.server.print.RemotePrintSpooler mSpooler;
    private final android.os.Handler mHandler;
    private com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession;
    private java.util.List mPrintJobStateChangeListenerRecords;
    private boolean mDestroyed;

    public void <init>(android.content.Context, int, java.lang.Object)
    {
        com.android.server.print.UserState r0;
        android.content.Context r1;
        int i0;
        java.lang.Object r2, r3, $r14;
        java.lang.Throwable r4, $r15;
        android.text.TextUtils$SimpleStringSplitter $r5;
        android.content.Intent $r6;
        android.util.ArrayMap $r7;
        java.util.ArrayList $r8;
        android.util.ArraySet $r9;
        com.android.server.print.UserState$PrintJobForAppCache $r10;
        com.android.server.print.RemotePrintSpooler $r11;
        com.android.server.print.UserState$UserStateHandler $r12;
        android.os.Looper $r13;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r5.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(58);

        r0.<com.android.server.print.UserState: android.text.TextUtils$SimpleStringSplitter mStringColonSplitter> = $r5;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.printservice.PrintService");

        r0.<com.android.server.print.UserState: android.content.Intent mQueryIntent> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.UserState: java.util.List mInstalledServices> = $r8;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.print.UserState: java.util.Set mEnabledServices> = $r9;

        $r10 = new com.android.server.print.UserState$PrintJobForAppCache;

        specialinvoke $r10.<com.android.server.print.UserState$PrintJobForAppCache: void <init>(com.android.server.print.UserState,com.android.server.print.UserState$1)>(r0, null);

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache> = $r10;

        r0.<com.android.server.print.UserState: android.content.Context mContext> = r1;

        r0.<com.android.server.print.UserState: int mUserId> = i0;

        r0.<com.android.server.print.UserState: java.lang.Object mLock> = r2;

        $r11 = new com.android.server.print.RemotePrintSpooler;

        specialinvoke $r11.<com.android.server.print.RemotePrintSpooler: void <init>(android.content.Context,int,com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks)>(r1, i0, r0);

        r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler> = $r11;

        $r12 = new com.android.server.print.UserState$UserStateHandler;

        $r13 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r12.<com.android.server.print.UserState$UserStateHandler: void <init>(com.android.server.print.UserState,android.os.Looper)>(r0, $r13);

        r0.<com.android.server.print.UserState: android.os.Handler mHandler> = $r12;

        $r14 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r3 = $r14;

        entermonitor $r14;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void enableSystemPrintServicesLocked()>();

        specialinvoke r0.<com.android.server.print.UserState: void onConfigurationChangedLocked()>();

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onPrintJobQueued(android.print.PrintJobInfo)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobInfo r1;
        com.android.server.print.RemotePrintService r2;
        java.lang.Object r3, $r6, $r9;
        android.content.ComponentName r4;
        java.lang.Throwable r5, $r14;
        android.print.PrinterId $r7;
        android.util.ArrayMap $r8;
        com.android.server.print.RemotePrintSpooler $r10;
        android.print.PrintJobId $r11;
        android.content.Context $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r6 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r7 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        r4 = virtualinvoke $r7.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $r8 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r2 = (com.android.server.print.RemotePrintService) $r9;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r3;

     label4:
        throw r5;

     label5:
        if r2 == null goto label6;

        virtualinvoke r2.<com.android.server.print.RemotePrintService: void onPrintJobQueued(android.print.PrintJobInfo)>(r1);

        goto label7;

     label6:
        $r10 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        $r11 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r12 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.String getString(int)>(17040980);

        virtualinvoke $r10.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>($r11, 6, $r13);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onAllPrintJobsForServiceHandled(android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;
        com.android.server.print.RemotePrintService r2;
        java.lang.Object r3, $r5, $r7;
        java.lang.Throwable r4, $r8;
        android.util.ArrayMap $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.ComponentName;

        $r5 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r6 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.print.RemotePrintService) $r7;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        virtualinvoke r2.<com.android.server.print.RemotePrintService: void onAllPrintJobsHandled()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeObsoletePrintJobs()
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintSpooler $r1;

        r0 := @this: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r1.<com.android.server.print.RemotePrintSpooler: void removeObsoletePrintJobs()>();

        return;
    }

    public android.os.Bundle print(java.lang.String, android.print.IPrintDocumentAdapter, android.print.PrintAttributes, java.lang.String, int)
    {
        com.android.server.print.UserState r0;
        java.lang.String r1, r4, $r22;
        android.print.IPrintDocumentAdapter r2;
        android.print.PrintAttributes r3;
        int i0, $i3;
        android.print.PrintJobInfo r5, $r11;
        long l1, $l2;
        android.content.Intent r6, $r19;
        android.content.IntentSender r7;
        android.os.Bundle r8, r9, $r31;
        java.lang.Throwable r10, $r32;
        android.print.PrintJobId $r12, $r20;
        com.android.server.print.UserState$PrintJobForAppCache $r13;
        boolean $z0;
        android.os.IBinder $r14, $r26;
        java.lang.Void[] $r15;
        com.android.server.print.UserState$1 $r16;
        java.util.concurrent.Executor $r18;
        android.net.Uri $r21;
        android.content.Context $r28;
        android.os.UserHandle $r29;
        android.app.PendingIntent $r30;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.print.IPrintDocumentAdapter;

        r3 := @parameter2: android.print.PrintAttributes;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $r11 = new android.print.PrintJobInfo;

        specialinvoke $r11.<android.print.PrintJobInfo: void <init>()>();

        r5 = $r11;

        $r12 = new android.print.PrintJobId;

        specialinvoke $r12.<android.print.PrintJobId: void <init>()>();

        virtualinvoke r5.<android.print.PrintJobInfo: void setId(android.print.PrintJobId)>($r12);

        virtualinvoke r5.<android.print.PrintJobInfo: void setAppId(int)>(i0);

        virtualinvoke r5.<android.print.PrintJobInfo: void setLabel(java.lang.String)>(r1);

        virtualinvoke r5.<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>(r3);

        virtualinvoke r5.<android.print.PrintJobInfo: void setState(int)>(1);

        virtualinvoke r5.<android.print.PrintJobInfo: void setCopies(int)>(1);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r5.<android.print.PrintJobInfo: void setCreationTime(long)>($l2);

        $r13 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        $r14 = interfaceinvoke r2.<android.print.IPrintDocumentAdapter: android.os.IBinder asBinder()>();

        $z0 = virtualinvoke $r13.<com.android.server.print.UserState$PrintJobForAppCache: boolean onPrintJobCreated(android.os.IBinder,int,android.print.PrintJobInfo)>($r14, i0, r5);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r16 = new com.android.server.print.UserState$1;

        specialinvoke $r16.<com.android.server.print.UserState$1: void <init>(com.android.server.print.UserState,android.print.PrintJobInfo)>(r0, r5);

        $r18 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r15 = (java.lang.Void[]) null;

        virtualinvoke $r16.<com.android.server.print.UserState$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r18, $r15);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>(java.lang.String)>("android.print.PRINT_DIALOG");

        r6 = $r19;

        $r20 = virtualinvoke r5.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r22 = virtualinvoke $r20.<android.print.PrintJobId: java.lang.String flattenToString()>();

        $r21 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("printjob", $r22, null);

        virtualinvoke r6.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r21);

        $r26 = interfaceinvoke r2.<android.print.IPrintDocumentAdapter: android.os.IBinder asBinder()>();

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("android.print.intent.extra.EXTRA_PRINT_DOCUMENT_ADAPTER", $r26);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.print.intent.extra.EXTRA_PRINT_JOB", r5);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.PACKAGE_NAME", r4);

        $r28 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r29 = new android.os.UserHandle;

        $i3 = r0.<com.android.server.print.UserState: int mUserId>;

        specialinvoke $r29.<android.os.UserHandle: void <init>(int)>($i3);

        $r30 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r28, 0, r6, 1342177280, null, $r29);

        r7 = virtualinvoke $r30.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        $r31 = new android.os.Bundle;

        specialinvoke $r31.<android.os.Bundle: void <init>()>();

        r8 = $r31;

        virtualinvoke r8.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.print.intent.extra.EXTRA_PRINT_JOB", r5);

        virtualinvoke r8.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.print.intent.extra.EXTRA_PRINT_DIALOG_INTENT", r7);

        r9 = r8;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r9;

     label4:
        $r32 := @caughtexception;

        r10 = $r32;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List getPrintJobInfos(int)
    {
        com.android.server.print.UserState r0;
        int i0, i1, i2, i3, i4;
        java.util.List r1, r16;
        android.util.ArrayMap r2, $r6;
        android.print.PrintJobInfo r3, r4;
        com.android.server.print.UserState$PrintJobForAppCache $r5;
        com.android.server.print.RemotePrintSpooler $r7;
        java.util.ArrayList $r8;
        java.util.Collection $r9;
        android.print.PrintJobId $r10, $r15;
        java.lang.Object $r11, $r12;

        r0 := @this: com.android.server.print.UserState;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        r1 = virtualinvoke $r5.<com.android.server.print.UserState$PrintJobForAppCache: java.util.List getPrintJobs(int)>(i0);

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r2 = $r6;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (android.print.PrintJobInfo) $r12;

        $r15 = virtualinvoke r3.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r3);

        virtualinvoke r3.<android.print.PrintJobInfo: void setTag(java.lang.String)>(null);

        virtualinvoke r3.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(null);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r16 = virtualinvoke $r7.<com.android.server.print.RemotePrintSpooler: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>(null, -1, i0);

        if r16 == null goto label4;

        i4 = interfaceinvoke r16.<java.util.List: int size()>();

        i3 = 0;

     label3:
        if i3 >= i4 goto label4;

        $r11 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i3);

        r4 = (android.print.PrintJobInfo) $r11;

        $r10 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4);

        virtualinvoke r4.<android.print.PrintJobInfo: void setTag(java.lang.String)>(null);

        virtualinvoke r4.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(null);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r8 = new java.util.ArrayList;

        $r9 = virtualinvoke r2.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        return $r8;
    }

    public android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0;
        android.print.PrintJobInfo r2;
        com.android.server.print.UserState$PrintJobForAppCache $r3;
        com.android.server.print.RemotePrintSpooler $r4;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        r2 = virtualinvoke $r3.<com.android.server.print.UserState$PrintJobForAppCache: android.print.PrintJobInfo getPrintJob(android.print.PrintJobId,int)>(r1, i0);

        if r2 != null goto label1;

        $r4 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r2 = virtualinvoke $r4.<com.android.server.print.RemotePrintSpooler: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, i0);

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<android.print.PrintJobInfo: void setTag(java.lang.String)>(null);

        virtualinvoke r2.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(null);

     label2:
        return r2;
    }

    public void cancelPrintJob(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0, $i1;
        android.print.PrintJobInfo r2;
        android.content.ComponentName r3;
        java.lang.Object r4, $r11, $r12;
        java.lang.Throwable r5, $r13;
        com.android.server.print.RemotePrintSpooler $r6, $r7, $r8;
        android.print.PrinterId $r9;
        android.util.ArrayMap $r10;
        com.android.server.print.RemotePrintService r14;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r2 = virtualinvoke $r6.<com.android.server.print.RemotePrintSpooler: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, i0);

        if r2 != null goto label1;

        return;

     label1:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r7.<com.android.server.print.RemotePrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>(r1, 1);

        $i1 = virtualinvoke r2.<android.print.PrintJobInfo: int getState()>();

        if $i1 == 6 goto label8;

        $r9 = virtualinvoke r2.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        r3 = virtualinvoke $r9.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $r11 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r4 = $r11;

        entermonitor $r11;

     label2:
        $r10 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r14 = (com.android.server.print.RemotePrintService) $r12;

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        if r14 != null goto label7;

        return;

     label7:
        virtualinvoke r14.<com.android.server.print.RemotePrintService: void onRequestCancelPrintJob(android.print.PrintJobInfo)>(r2);

        goto label9;

     label8:
        $r8 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r8.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>(r1, 7, null);

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void restartPrintJob(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0, $i1;
        android.print.PrintJobInfo r2;
        com.android.server.print.RemotePrintSpooler $r3;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.server.print.UserState: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, i0);

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<android.print.PrintJobInfo: int getState()>();

        if $i1 == 6 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r3.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>(r1, 2, null);

        return;
    }

    public java.util.List getEnabledPrintServices()
    {
        com.android.server.print.UserState r0;
        java.lang.Object r1, $r6, $r9;
        java.util.ArrayList r2, $r19;
        int i0, i1;
        android.printservice.PrintServiceInfo r3;
        android.content.ComponentName r4, $r10;
        java.lang.Throwable r5, $r18;
        java.util.List $r7, $r8;
        android.content.pm.ResolveInfo $r11, $r15;
        java.lang.String $r12, $r17;
        android.content.pm.ServiceInfo $r13, $r14;
        android.util.ArrayMap $r16;
        boolean $z1;

        r0 := @this: com.android.server.print.UserState;

        $r6 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        r2 = null;

        $r7 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r8 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.printservice.PrintServiceInfo) $r9;

        $r10 = new android.content.ComponentName;

        $r11 = virtualinvoke r3.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r13 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r13.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r15 = virtualinvoke r3.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r14 = $r15.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r17 = $r14.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r12, $r17);

        r4 = $r10;

        $r16 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z1 = virtualinvoke $r16.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        if r2 != null goto label3;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r2 = $r19;

     label3:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return r2;

     label7:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r1;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.util.List getInstalledPrintServices()
    {
        com.android.server.print.UserState r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.List $r4;

        r0 := @this: com.android.server.print.UserState;

        $r3 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7, $r10;
        com.android.server.print.UserState$2 $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label4;

        $r8 = new com.android.server.print.UserState$2;

        $r9 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        specialinvoke $r8.<com.android.server.print.UserState$2: void <init>(com.android.server.print.UserState,android.content.Context)>(r0, $r9);

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession> = $r8;

        $r10 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r10.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void addObserverLocked(android.print.IPrinterDiscoveryObserver)>(r1);

        goto label5;

     label4:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void addObserverLocked(android.print.IPrinterDiscoveryObserver)>(r1);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void removeObserverLocked(android.print.IPrinterDiscoveryObserver)>(r1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver, java.util.List)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.util.List r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        android.util.ArrayMap $r6;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r7, $r8;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        r2 := @parameter1: java.util.List;

        $r5 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r6 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r6.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r7 != null goto label5;

        exitmonitor r3;

     label4:
        return;

     label5:
        $r8 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r8.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void startPrinterDiscoveryLocked(android.print.IPrinterDiscoveryObserver,java.util.List)>(r1, r2);

        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void stopPrinterDiscoveryLocked(android.print.IPrinterDiscoveryObserver)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void validatePrinters(java.util.List)
    {
        com.android.server.print.UserState r0;
        java.util.List r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void validatePrintersLocked(java.util.List)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void startPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.UserState r0;
        android.print.PrinterId r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrinterId;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void startPrinterStateTrackingLocked(android.print.PrinterId)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void stopPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.UserState r0;
        android.print.PrinterId r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrinterId;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void stopPrinterStateTrackingLocked(android.print.PrinterId)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener, int) throws android.os.RemoteException
    {
        com.android.server.print.UserState r0;
        android.print.IPrintJobStateChangeListener r1;
        int i0;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r9;
        java.util.List $r5, $r7;
        com.android.server.print.UserState$3 $r6;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrintJobStateChangeListener;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        if $r5 != null goto label2;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords> = $r8;

     label2:
        $r7 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        $r6 = new com.android.server.print.UserState$3;

        specialinvoke $r6.<com.android.server.print.UserState$3: void <init>(com.android.server.print.UserState,android.print.IPrintJobStateChangeListener,int)>(r0, r1, i0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener)
    {
        com.android.server.print.UserState r0;
        android.print.IPrintJobStateChangeListener r1, $r12;
        java.lang.Object r2, $r5, $r10;
        int i0, i1;
        com.android.server.print.UserState$PrintJobStateChangeListenerRecord r3;
        java.lang.Throwable r4, $r16;
        java.util.List $r6, $r7, $r8, $r9, $r15;
        boolean $z0, $z1;
        android.os.IBinder $r11, $r13;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrintJobStateChangeListener;

        $r5 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r6 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        if $r6 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r7 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        i1 = 0;

     label04:
        if i1 >= i0 goto label06;

        $r9 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.print.UserState$PrintJobStateChangeListenerRecord) $r10;

        $r12 = r3.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: android.print.IPrintJobStateChangeListener listener>;

        $r11 = interfaceinvoke $r12.<android.print.IPrintJobStateChangeListener: android.os.IBinder asBinder()>();

        $r13 = interfaceinvoke r1.<android.print.IPrintJobStateChangeListener: android.os.IBinder asBinder()>();

        $z1 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label05;

        $r15 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(i1);

        goto label06;

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        $r8 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords> = null;

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onPrintJobStateChanged(android.print.PrintJobInfo)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobInfo r1;
        com.android.server.print.UserState$PrintJobForAppCache $r2;
        android.os.Handler $r3;
        int $i0;
        android.print.PrintJobId $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        virtualinvoke $r2.<com.android.server.print.UserState$PrintJobForAppCache: void onPrintJobStateChanged(android.print.PrintJobInfo)>(r1);

        $r3 = r0.<com.android.server.print.UserState: android.os.Handler mHandler>;

        $i0 = virtualinvoke r1.<android.print.PrintJobInfo: int getAppId()>();

        $r4 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, $i0, 0, $r4);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onPrintersAdded(java.util.List)
    {
        com.android.server.print.UserState r0;
        java.util.List r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onPrintersAddedLocked(java.util.List)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onPrintersRemoved(java.util.List)
    {
        com.android.server.print.UserState r0;
        java.util.List r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onPrintersRemovedLocked(java.util.List)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onServiceDied(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintService r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r9;
        android.util.ArrayMap $r5;
        boolean $z0;
        android.content.ComponentName $r6;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r7, $r8;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: com.android.server.print.RemotePrintService;

        $r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = virtualinvoke r1.<com.android.server.print.RemotePrintService: android.content.ComponentName getComponentName()>();

        specialinvoke r0.<com.android.server.print.UserState: void failActivePrintJobsForService(android.content.ComponentName)>($r6);

        virtualinvoke r1.<com.android.server.print.RemotePrintService: void onAllPrintJobsHandled()>();

        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r7 != null goto label5;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r8 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r8.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onServiceDiedLocked(com.android.server.print.RemotePrintService)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void updateIfNeededLocked()
    {
        com.android.server.print.UserState r0;
        boolean $z0;

        r0 := @this: com.android.server.print.UserState;

        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $z0 = specialinvoke r0.<com.android.server.print.UserState: boolean readConfigurationLocked()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.print.UserState: void onConfigurationChangedLocked()>();

     label1:
        return;
    }

    public java.util.Set getEnabledServices()
    {
        com.android.server.print.UserState r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.Set $r4;

        r0 := @this: com.android.server.print.UserState;

        $r3 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void destroyLocked()
    {
        com.android.server.print.UserState r0;
        java.util.Iterator r1;
        com.android.server.print.RemotePrintService r2;
        com.android.server.print.RemotePrintSpooler $r3;
        android.util.ArrayMap $r4, $r6;
        java.util.Collection $r5;
        boolean $z0;
        java.util.List $r7;
        java.util.Set $r8;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r9, $r10;
        java.lang.Object $r11;

        r0 := @this: com.android.server.print.UserState;

        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r3.<com.android.server.print.RemotePrintSpooler: void destroy()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.print.RemotePrintService) $r11;

        virtualinvoke r2.<com.android.server.print.RemotePrintService: void destroy()>();

        goto label1;

     label2:
        $r6 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        virtualinvoke $r6.<android.util.ArrayMap: void clear()>();

        $r7 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        $r8 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r8.<java.util.Set: void clear()>();

        $r9 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r9 == null goto label3;

        $r10 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r10.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void destroyLocked()>();

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession> = null;

     label3:
        r0.<com.android.server.print.UserState: boolean mDestroyed> = 1;

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String)
    {
        com.android.server.print.UserState r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r33, $r34, $r37, $r38, $r39, $r44, $r65, $r66, $r67, $r70, $r71, $r83, $r84, $r86, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r96, $r98, $r99, $r101, $r102, $r104, $r105;
        java.lang.String r3, r4, r6, $r11, $r36, $r46, $r56, $r64, $r68, $r81, $r82, $r91, $r97, $r100, $r103, r108;
        int i0, i1, $i2, i3, i4;
        android.printservice.PrintServiceInfo r5;
        android.content.pm.ResolveInfo r7;
        android.content.ComponentName r8, $r85, r107;
        java.util.List $r17, $r75;
        java.util.Set $r20;
        boolean $z0;
        android.util.ArrayMap $r24, $r55;
        java.lang.StringBuilder $r29, $r30, $r31, $r35, $r41, $r43, $r45, $r47, $r48, $r49, $r50, $r51, $r53, $r58, $r59, $r60, $r61, $r62, $r63, $r69, $r72, $r73, $r74, $r77;
        com.android.server.print.UserState$PrintJobForAppCache $r32;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r40, $r52;
        com.android.server.print.RemotePrintSpooler $r42;
        java.lang.Object $r54, $r57, $r78;
        android.content.pm.ServiceInfo $r79, $r80;
        java.util.Iterator r106;
        com.android.server.print.RemotePrintService r109;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        $r9 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r10 = virtualinvoke $r9.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("user state ");

        $i2 = r0.<com.android.server.print.UserState: int mUserId>;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $r12 = virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r11);

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        r4 = "  ";

        $r13 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r16 = virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r15 = virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("installed services:");

        virtualinvoke $r15.<java.io.PrintWriter: void println()>();

        $r17 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r17.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r75 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r78 = interfaceinvoke $r75.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (android.printservice.PrintServiceInfo) $r78;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r6 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        $r84 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r83 = virtualinvoke $r84.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("service:");

        virtualinvoke $r83.<java.io.PrintWriter: void println()>();

        r7 = virtualinvoke r5.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r85 = new android.content.ComponentName;

        $r80 = r7.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r81 = $r80.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r79 = r7.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r82 = $r79.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r85.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r81, $r82);

        r8 = $r85;

        $r92 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r93 = virtualinvoke $r92.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r90 = virtualinvoke $r93.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("componentName=");

        $r91 = virtualinvoke r8.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r88 = virtualinvoke $r90.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r91);

        virtualinvoke $r88.<java.io.PrintWriter: void println()>();

        $r89 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r86 = virtualinvoke $r89.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r87 = virtualinvoke $r86.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("settingsActivity=");

        $r100 = virtualinvoke r5.<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>();

        $r101 = virtualinvoke $r87.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r100);

        virtualinvoke $r101.<java.io.PrintWriter: void println()>();

        $r98 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r99 = virtualinvoke $r98.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r96 = virtualinvoke $r99.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("addPrintersActivity=");

        $r97 = virtualinvoke r5.<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>();

        $r94 = virtualinvoke $r96.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r97);

        virtualinvoke $r94.<java.io.PrintWriter: void println()>();

        $r95 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r105 = virtualinvoke $r95.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r104 = virtualinvoke $r105.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("avancedOptionsActivity=");

        $r103 = virtualinvoke r5.<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()>();

        $r102 = virtualinvoke $r104.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r103);

        virtualinvoke $r102.<java.io.PrintWriter: void println()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r19 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r18 = virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r21 = virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("enabled services:");

        virtualinvoke $r21.<java.io.PrintWriter: void println()>();

        $r20 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        r106 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r57 = interfaceinvoke r106.<java.util.Iterator: java.lang.Object next()>();

        r107 = (android.content.ComponentName) $r57;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r69 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r108 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        $r70 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r108);

        $r71 = virtualinvoke $r70.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("service:");

        virtualinvoke $r71.<java.io.PrintWriter: void println()>();

        $r65 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r108);

        $r66 = virtualinvoke $r65.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r67 = virtualinvoke $r66.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("componentName=");

        $r68 = virtualinvoke r107.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r67.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r68);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label3;

     label4:
        $r23 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r22 = virtualinvoke $r23.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r25 = virtualinvoke $r22.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("active services:");

        virtualinvoke $r25.<java.io.PrintWriter: void println()>();

        $r24 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        i3 = virtualinvoke $r24.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label5:
        if i4 >= i3 goto label6;

        $r55 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r54 = virtualinvoke $r55.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r109 = (com.android.server.print.RemotePrintService) $r54;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r109.<com.android.server.print.RemotePrintService: void dump(java.io.PrintWriter,java.lang.String)>(r2, $r64);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i4 = i4 + 1;

        goto label5;

     label6:
        $r28 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r26 = virtualinvoke $r28.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r27 = virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("cached print jobs:");

        virtualinvoke $r27.<java.io.PrintWriter: void println()>();

        $r32 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<com.android.server.print.UserState$PrintJobForAppCache: void dump(java.io.PrintWriter,java.lang.String)>(r2, $r36);

        $r33 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r34 = virtualinvoke $r33.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r39 = virtualinvoke $r34.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("discovery mediator:");

        virtualinvoke $r39.<java.io.PrintWriter: void println()>();

        $r40 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r40 == null goto label7;

        $r52 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void dump(java.io.PrintWriter,java.lang.String)>(r2, $r56);

     label7:
        $r37 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r38 = virtualinvoke $r37.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        $r44 = virtualinvoke $r38.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("print spooler:");

        virtualinvoke $r44.<java.io.PrintWriter: void println()>();

        $r42 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<com.android.server.print.RemotePrintSpooler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String)>(r1, r2, $r46);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        return;
    }

    private boolean readConfigurationLocked()
    {
        com.android.server.print.UserState r0;
        boolean z0, $z1, $z2, z3, z4;

        r0 := @this: com.android.server.print.UserState;

        z0 = 0;

        $z1 = specialinvoke r0.<com.android.server.print.UserState: boolean readInstalledPrintServicesLocked()>();

        z3 = z0 | $z1;

        $z2 = specialinvoke r0.<com.android.server.print.UserState: boolean readEnabledPrintServicesLocked()>();

        z4 = z3 | $z2;

        return z4;
    }

    private boolean readInstalledPrintServicesLocked()
    {
        com.android.server.print.UserState r0;
        java.util.HashSet r1, $r6;
        java.util.List r2, $r10, $r11, $r12, $r13, $r15;
        int i0, i1, i2, $i3, $i4, $i5, i7;
        android.content.pm.ResolveInfo r3;
        android.content.ComponentName r4, $r28;
        android.printservice.PrintServiceInfo r5, $r30, r42;
        android.content.Context $r7, $r25;
        android.content.pm.PackageManager $r8;
        android.content.Intent $r9;
        boolean $z0, $z2, $z3, $z4, $z5, z7;
        java.lang.Object $r14, $r17, $r22;
        java.lang.String $r16, $r18, $r19, $r20, $r21, $r24, $r26, $r27, $r32, $r33, $r36, $r38;
        android.content.pm.ServiceInfo $r23, $r29, $r34;
        java.lang.StringBuilder $r31, $r35, $r37, $r39, $r40;
        java.util.Iterator r41;

        r0 := @this: com.android.server.print.UserState;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r1 = $r6;

        $r7 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = r0.<com.android.server.print.UserState: android.content.Intent mQueryIntent>;

        $i3 = r0.<com.android.server.print.UserState: int mUserId>;

        r2 = virtualinvoke $r8.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r9, 132, $i3);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

        i2 = i0;

     label01:
        if i1 >= i2 goto label04;

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.ResolveInfo) $r22;

        $r27 = "android.permission.BIND_PRINT_SERVICE";

        $r23 = r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r26 = $r23.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 != 0 goto label02;

        $r28 = new android.content.ComponentName;

        $r29 = r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r32 = $r29.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r34 = r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r33 = $r34.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r28.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r32, $r33);

        r4 = $r28;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping print service ");

        $r36 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it does not require permission ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_PRINT_SERVICE");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserState", $r38);

        goto label03;

     label02:
        $r25 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r30 = staticinvoke <android.printservice.PrintServiceInfo: android.printservice.PrintServiceInfo create(android.content.pm.ResolveInfo,android.content.Context)>(r3, $r25);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r30);

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        z7 = 0;

        $i4 = interfaceinvoke r1.<java.util.Set: int size()>();

        $r10 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $i5 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i4 == $i5 goto label05;

        z7 = 1;

        goto label10;

     label05:
        r41 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r14 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (android.printservice.PrintServiceInfo) $r14;

        $r13 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i7 = interfaceinvoke $r13.<java.util.List: int indexOf(java.lang.Object)>(r42);

        if i7 >= 0 goto label07;

        z7 = 1;

        goto label10;

     label07:
        $r15 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i7);

        r5 = (android.printservice.PrintServiceInfo) $r17;

        $r16 = virtualinvoke r5.<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>();

        $r18 = virtualinvoke r42.<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r16, $r18);

        if $z2 == 0 goto label08;

        $r20 = virtualinvoke r5.<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()>();

        $r21 = virtualinvoke r42.<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r20, $r21);

        if $z3 == 0 goto label08;

        $r19 = virtualinvoke r5.<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>();

        $r24 = virtualinvoke r42.<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r19, $r24);

        if $z4 != 0 goto label09;

     label08:
        z7 = 1;

        goto label10;

     label09:
        goto label06;

     label10:
        if z7 == 0 goto label11;

        $r11 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        interfaceinvoke $r11.<java.util.List: void clear()>();

        $r12 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return 1;

     label11:
        return 0;
    }

    private boolean readEnabledPrintServicesLocked()
    {
        com.android.server.print.UserState r0;
        java.util.HashSet r1, $r2;
        java.util.Set $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.print.UserState;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        specialinvoke r0.<com.android.server.print.UserState: void readPrintServicesFromSettingLocked(java.lang.String,java.util.Set)>("enabled_print_services", r1);

        $r3 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r4.<java.util.Set: void clear()>();

        $r5 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r5.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        return 1;

     label1:
        return 0;
    }

    private void readPrintServicesFromSettingLocked(java.lang.String, java.util.Set)
    {
        com.android.server.print.UserState r0;
        java.lang.String r1, r3, r5;
        java.util.Set r2;
        android.text.TextUtils$SimpleStringSplitter r4;
        android.content.ComponentName r6;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        $r7 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = r0.<com.android.server.print.UserState: int mUserId>;

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r8, r1, $i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label4;

        r4 = r0.<com.android.server.print.UserState: android.text.TextUtils$SimpleStringSplitter mStringColonSplitter>;

        virtualinvoke r4.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r3);

     label1:
        $z1 = virtualinvoke r4.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r5 = virtualinvoke r4.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 == 0 goto label2;

        goto label1;

     label2:
        r6 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r5);

        if r6 == null goto label3;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label3:
        goto label1;

     label4:
        return;
    }

    private void enableSystemPrintServicesLocked()
    {
        com.android.server.print.UserState r0;
        java.util.HashSet r1, $r5;
        java.lang.StringBuilder r2, $r6, $r10, $r11, $r12, $r13, $r18, $r19, $r21, $r22;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.pm.ServiceInfo r3;
        android.content.ComponentName r4, $r30;
        java.util.List $r7, $r23;
        android.content.Context $r8, $r14, $r16, $r20;
        android.content.ContentResolver $r9, $r15, $r17, $r24;
        boolean $z2, $z4, $z6, $z7;
        android.content.pm.ResolveInfo $r25;
        android.content.pm.ApplicationInfo $r26;
        java.lang.Object $r27;
        android.printservice.PrintServiceInfo $r28;
        java.lang.String $r29, $r32, $r35, r36, r37, r38, r39, r40;
        java.util.Set $r31;

        r0 := @this: com.android.server.print.UserState;

        specialinvoke r0.<com.android.server.print.UserState: boolean readEnabledPrintServicesLocked()>();

        specialinvoke r0.<com.android.server.print.UserState: boolean readInstalledPrintServicesLocked()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r1 = $r5;

        specialinvoke r0.<com.android.server.print.UserState: void readPrintServicesFromSettingLocked(java.lang.String,java.util.Set)>("enabled_on_first_boot_system_print_services", r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = $r6;

        $r7 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r23 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r27 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i1);

        $r28 = (android.printservice.PrintServiceInfo) $r27;

        $r25 = virtualinvoke $r28.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        r3 = $r25.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r26 = r3.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r26.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i8 & 1;

        if $i7 == 0 goto label3;

        $r30 = new android.content.ComponentName;

        $r32 = r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r29 = r3.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r30.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r32, $r29);

        r4 = $r30;

        $r31 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        $z7 = interfaceinvoke $r31.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z7 != 0 goto label3;

        $z6 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z6 != 0 goto label3;

        $i9 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i9 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label2:
        $r35 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i2 > 0 goto label5;

        return;

     label5:
        r36 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = r0.<com.android.server.print.UserState: int mUserId>;

        r37 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r9, "enabled_print_services", $i3);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r37);

        if $z2 == 0 goto label6;

        r38 = r36;

        goto label7;

     label6:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        r38 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r14 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = r0.<com.android.server.print.UserState: int mUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r15, "enabled_print_services", r38, $i4);

        $r16 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i5 = r0.<com.android.server.print.UserState: int mUserId>;

        r39 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r17, "enabled_on_first_boot_system_print_services", $i5);

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r39);

        if $z4 == 0 goto label8;

        r40 = r36;

        goto label9;

     label8:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        r40 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        $r20 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r24 = virtualinvoke $r20.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i6 = r0.<com.android.server.print.UserState: int mUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r24, "enabled_on_first_boot_system_print_services", r40, $i6);

        return;
    }

    private void onConfigurationChangedLocked()
    {
        com.android.server.print.UserState r0;
        android.util.ArraySet r1, $r5;
        int i0, i1, $i2;
        android.content.pm.ResolveInfo r2;
        android.content.ComponentName r3, $r16, r30;
        com.android.server.print.RemotePrintService r4, $r23, r27, r31;
        java.util.List $r6, $r13;
        android.util.ArrayMap $r7, $r22, $r25;
        java.util.Set $r8, $r20;
        boolean $z0, $z1, $z3, $z4;
        java.lang.Object $r9, $r10, $r11, $r12, $r21;
        android.printservice.PrintServiceInfo $r14;
        android.content.pm.ServiceInfo $r15, $r18;
        java.lang.String $r17, $r19;
        com.android.server.print.RemotePrintSpooler $r24;
        android.content.Context $r26;
        java.util.Iterator r28;
        java.util.Map$Entry r29;

        r0 := @this: com.android.server.print.UserState;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r1 = $r5;

        $r6 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r13 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r12 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (android.printservice.PrintServiceInfo) $r12;

        r2 = virtualinvoke $r14.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r16 = new android.content.ComponentName;

        $r15 = r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r19 = $r15.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r18 = r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r17 = $r18.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r16.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r19, $r17);

        r3 = $r16;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r3);

        $r20 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        $z3 = interfaceinvoke $r20.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z3 == 0 goto label2;

        $r25 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z4 = virtualinvoke $r25.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r3);

        if $z4 != 0 goto label3;

        $r23 = new com.android.server.print.RemotePrintService;

        $r26 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $i2 = r0.<com.android.server.print.UserState: int mUserId>;

        $r24 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        specialinvoke $r23.<com.android.server.print.RemotePrintService: void <init>(android.content.Context,android.content.ComponentName,int,com.android.server.print.RemotePrintSpooler,com.android.server.print.RemotePrintService$PrintServiceCallbacks)>($r26, r3, $i2, $r24, r0);

        r4 = $r23;

        specialinvoke r0.<com.android.server.print.UserState: void addServiceLocked(com.android.server.print.RemotePrintService)>(r4);

        goto label3;

     label2:
        $r22 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r21 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r3);

        r27 = (com.android.server.print.RemotePrintService) $r21;

        if r27 == null goto label3;

        specialinvoke r0.<com.android.server.print.UserState: void removeServiceLocked(com.android.server.print.RemotePrintService)>(r27);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r7 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Set entrySet()>();

        r28 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        r30 = (android.content.ComponentName) $r10;

        $r11 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        r31 = (com.android.server.print.RemotePrintService) $r11;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r30);

        if $z1 != 0 goto label6;

        specialinvoke r0.<com.android.server.print.UserState: void removeServiceLocked(com.android.server.print.RemotePrintService)>(r31);

        interfaceinvoke r28.<java.util.Iterator: void remove()>();

     label6:
        goto label5;

     label7:
        return;
    }

    private void addServiceLocked(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintService r1;
        android.util.ArrayMap $r2;
        android.content.ComponentName $r3;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: com.android.server.print.RemotePrintService;

        $r2 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r3 = virtualinvoke r1.<com.android.server.print.RemotePrintService: android.content.ComponentName getComponentName()>();

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onServiceAddedLocked(com.android.server.print.RemotePrintService)>(r1);

     label1:
        return;
    }

    private void removeServiceLocked(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintService r1;
        android.content.ComponentName $r2;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r3, $r4;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: com.android.server.print.RemotePrintService;

        $r2 = virtualinvoke r1.<com.android.server.print.RemotePrintService: android.content.ComponentName getComponentName()>();

        specialinvoke r0.<com.android.server.print.UserState: void failActivePrintJobsForService(android.content.ComponentName)>($r2);

        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r4.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onServiceRemovedLocked(com.android.server.print.RemotePrintService)>(r1);

        goto label2;

     label1:
        virtualinvoke r1.<com.android.server.print.RemotePrintService: void destroy()>();

     label2:
        return;
    }

    private void failActivePrintJobsForService(android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;
        android.os.Looper $r2;
        boolean $z0;
        android.os.Handler $r3;
        com.android.server.print.UserState$4 $r4;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $z0 = virtualinvoke $r2.<android.os.Looper: boolean isCurrentThread()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r4 = new com.android.server.print.UserState$4;

        specialinvoke $r4.<com.android.server.print.UserState$4: void <init>(com.android.server.print.UserState,android.content.ComponentName)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void failScheduledPrintJobsForServiceInternal(android.content.ComponentName)>(r1);

     label2:
        return;
    }

    private void failScheduledPrintJobsForServiceInternal(android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;
        java.util.List r2;
        long l0;
        int i1, i2;
        android.print.PrintJobInfo r3;
        java.lang.Throwable r4, $r11;
        com.android.server.print.RemotePrintSpooler $r5, $r7;
        java.lang.Object $r6;
        android.print.PrintJobId $r8;
        android.content.Context $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.ComponentName;

        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r2 = virtualinvoke $r5.<com.android.server.print.RemotePrintSpooler: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>(r1, -4, -2);

        if r2 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (android.print.PrintJobInfo) $r6;

        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        $r8 = virtualinvoke r3.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r9 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int)>(17040980);

        virtualinvoke $r7.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>($r8, 6, $r10);

        i2 = i2 + 1;

        goto label3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void throwIfDestroyedLocked()
    {
        com.android.server.print.UserState r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.print.UserState;

        $z0 = r0.<com.android.server.print.UserState: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot interact with a destroyed instance.");

        throw $r1;

     label1:
        return;
    }

    private void handleDispatchPrintJobStateChanged(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0, $i1, $i2, i4, i5;
        java.util.ArrayList r2, $r9;
        java.lang.Object r3, $r7, $r11;
        java.lang.Throwable r4, $r14;
        com.android.server.print.UserState$PrintJobStateChangeListenerRecord r5;
        android.os.RemoteException r6, $r13;
        java.util.List $r8, $r10;
        android.print.IPrintJobStateChangeListener $r12;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        $r7 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        if $r8 != null goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r9 = new java.util.ArrayList;

        $r10 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r2 = $r9;

        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label06:
        throw r4;

     label07:
        i4 = interfaceinvoke r2.<java.util.List: int size()>();

        i5 = 0;

     label08:
        if i5 >= i4 goto label13;

        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        r5 = (com.android.server.print.UserState$PrintJobStateChangeListenerRecord) $r11;

        $i1 = r5.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: int appId>;

        if $i1 == -2 goto label09;

        $i2 = r5.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: int appId>;

        if $i2 != i0 goto label12;

     label09:
        $r12 = r5.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: android.print.IPrintJobStateChangeListener listener>;

        interfaceinvoke $r12.<android.print.IPrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>(r1);

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

        r6 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserState", "Error notifying for print job state change", r6);

     label12:
        i5 = i5 + 1;

        goto label08;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    static com.android.server.print.RemotePrintSpooler access$100(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintSpooler $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        return $r1;
    }

    static com.android.server.print.UserState$PrinterDiscoverySessionMediator access$202(com.android.server.print.UserState, com.android.server.print.UserState$PrinterDiscoverySessionMediator)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator r1;

        r0 := @parameter0: com.android.server.print.UserState;

        r1 := @parameter1: com.android.server.print.UserState$PrinterDiscoverySessionMediator;

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession> = r1;

        return r1;
    }

    static java.util.List access$300(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        return $r1;
    }

    static void access$400(com.android.server.print.UserState, android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;

        r0 := @parameter0: com.android.server.print.UserState;

        r1 := @parameter1: android.content.ComponentName;

        specialinvoke r0.<com.android.server.print.UserState: void failScheduledPrintJobsForServiceInternal(android.content.ComponentName)>(r1);

        return;
    }

    static void access$500(com.android.server.print.UserState, android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0;

        r0 := @parameter0: com.android.server.print.UserState;

        r1 := @parameter1: android.print.PrintJobId;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.print.UserState: void handleDispatchPrintJobStateChanged(android.print.PrintJobId,int)>(r1, i0);

        return;
    }

    static java.lang.Object access$600(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.ArrayMap access$700(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        return $r1;
    }

    static boolean access$800(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.UserState;

        $z0 = r0.<com.android.server.print.UserState: boolean mDestroyed>;

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.print.UserState: char COMPONENT_NAME_SEPARATOR> = 58;

        <com.android.server.print.UserState: boolean DEBUG> = 0;

        <com.android.server.print.UserState: java.lang.String LOG_TAG> = "UserState";

        return;
    }
}
