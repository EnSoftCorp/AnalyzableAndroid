class com.android.server.backup.BackupManagerService$PerformAdbRestoreTask extends java.lang.Object implements java.lang.Runnable
{
    android.os.ParcelFileDescriptor mInputFile;
    java.lang.String mCurrentPassword;
    java.lang.String mDecryptPassword;
    android.app.backup.IFullBackupRestoreObserver mObserver;
    java.util.concurrent.atomic.AtomicBoolean mLatchObject;
    android.app.IBackupAgent mAgent;
    java.lang.String mAgentPackage;
    android.content.pm.ApplicationInfo mTargetApp;
    com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection;
    android.os.ParcelFileDescriptor[] mPipes;
    byte[] mWidgetData;
    long mBytes;
    final java.util.HashMap mPackagePolicies;
    final java.util.HashMap mPackageInstallers;
    final java.util.HashMap mManifestSignatures;
    final java.util.HashSet mClearedPackages;
    final com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver;
    final com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver mDeleteObserver;
    final com.android.server.backup.BackupManagerService this$0;

    void <init>(com.android.server.backup.BackupManagerService, android.os.ParcelFileDescriptor, java.lang.String, java.lang.String, android.app.backup.IFullBackupRestoreObserver, java.util.concurrent.atomic.AtomicBoolean)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        com.android.server.backup.BackupManagerService r1;
        android.os.ParcelFileDescriptor r2;
        java.lang.String r3, r4;
        android.app.backup.IFullBackupRestoreObserver r5;
        java.util.concurrent.atomic.AtomicBoolean r6;
        java.util.HashMap $r7, $r8, $r9;
        java.util.HashSet $r10, $r14, $r15;
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver $r11;
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver $r12;
        com.android.server.backup.BackupManagerService$FullBackupObbConnection $r13;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.backup.IFullBackupRestoreObserver;

        r6 := @parameter5: java.util.concurrent.atomic.AtomicBoolean;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: byte[] mWidgetData> = null;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackageInstallers> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mManifestSignatures> = $r9;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashSet mClearedPackages> = $r10;

        $r11 = new com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver;

        specialinvoke $r11.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: void <init>(com.android.server.backup.BackupManagerService$PerformAdbRestoreTask)>(r0);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver> = $r11;

        $r12 = new com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver;

        specialinvoke $r12.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver: void <init>(com.android.server.backup.BackupManagerService$PerformAdbRestoreTask)>(r0);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver mDeleteObserver> = $r12;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile> = r2;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mCurrentPassword> = r3;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mDecryptPassword> = r4;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = r5;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject> = r6;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mAgentPackage> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp> = null;

        $r13 = new com.android.server.backup.BackupManagerService$FullBackupObbConnection;

        specialinvoke $r13.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void <init>(com.android.server.backup.BackupManagerService)>(r1);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection> = $r13;

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashSet mClearedPackages>;

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>("android");

        $r15 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashSet mClearedPackages>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>("com.android.providers.settings");

        return;
    }

    public void run()
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.FileInputStream r1, r135;
        java.io.DataInputStream r2, r136;
        java.io.IOException r3, r16, $r76, $r87, $r110, $r112, $r114, $r115, r123, r126, r130;
        java.lang.Throwable r4, r5, r10, r11, r12, r13, r14, r15, r17, r18, r19, $r77, $r78, $r79, $r88, $r89, $r90, $r95, $r102, $r111, $r113, $r116;
        java.io.InputStream r6, $r42, r120;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9;
        int i0, i1, $i9, $i11;
        byte[] r7, r8, r119;
        java.lang.String r9, $r21, $r23, $r26, $r29, $r58, $r59, $r62, r121, r122;
        com.android.server.backup.BackupManagerService$FullBackupObbConnection $r20, $r40, $r49, $r75, $r93, $r99;
        com.android.server.backup.BackupManagerService $r22, $r32, $r34, $r39, $r44, $r46, $r56, $r66, $r68, $r74, $r82, $r84, $r94, $r100, $r105, $r107;
        android.os.ParcelFileDescriptor $r27, $r31, $r47, $r60, $r85, $r104;
        java.io.FileDescriptor $r28;
        android.content.pm.ApplicationInfo $r30, $r41, $r61, $r86, $r103;
        android.util.SparseArray $r33, $r50, $r67, $r81, $r108;
        java.lang.Object $r35, $r45, $r69, $r83, $r106, r117, r124, r127, r131, r133;
        java.util.concurrent.atomic.AtomicBoolean $r36, $r37, $r38, $r48, $r51, $r52, $r63, $r64, $r65, $r80, $r91, $r92, $r97, $r98, $r109, r118, r125, r128, r132, r134;
        android.os.PowerManager$WakeLock $r43, $r57, $r72, $r96, $r101;
        java.lang.StringBuilder $r54, $r55, r137;
        java.util.HashMap $r70;
        com.android.server.backup.BackupManagerService$RestorePolicy $r73;
        java.util.zip.InflaterInputStream r138;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "--- Performing full-dataset restore ---");

        $r20 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r20.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void establish()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendStartRestore()>();

        $r21 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z2 == 0 goto label001;

        $r70 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r73 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT>;

        virtualinvoke $r70.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.android.sharedstoragebackup", $r73);

     label001:
        r1 = null;

        r2 = null;

     label002:
        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r23 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mCurrentPassword>;

        $z3 = staticinvoke <com.android.server.backup.BackupManagerService: boolean access$1800(com.android.server.backup.BackupManagerService,java.lang.String)>($r22, $r23);

        if $z3 != 0 goto label020;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Backup password mismatch; aborting");

     label003:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r61 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r61);

     label004:
        if r2 == null goto label005;

        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label005:
        if r1 == null goto label006;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label006:
        $r60 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r60.<android.os.ParcelFileDescriptor: void close()>();

     label007:
        goto label009;

     label008:
        $r115 := @caughtexception;

        r3 = $r115;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r3);

     label009:
        $r68 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r69 = $r68.<com.android.server.backup.BackupManagerService: java.lang.Object mCurrentOpLock>;

        r117 = $r69;

        entermonitor $r69;

     label010:
        $r66 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r67 = $r66.<com.android.server.backup.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r67.<android.util.SparseArray: void clear()>();

        exitmonitor r117;

     label011:
        goto label014;

     label012:
        $r113 := @caughtexception;

        r4 = $r113;

        exitmonitor r117;

     label013:
        throw r4;

     label014:
        $r65 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        r118 = $r65;

        entermonitor $r65;

     label015:
        $r63 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r63.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r64 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r64.<java.lang.Object: void notifyAll()>();

        exitmonitor r118;

     label016:
        goto label019;

     label017:
        $r116 := @caughtexception;

        r5 = $r116;

        exitmonitor r118;

     label018:
        throw r5;

     label019:
        $r75 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r75.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r74 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r72 = $r74.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r72.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label020:
        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = 0L;

        r119 = newarray (byte)[32768];

        r135 = new java.io.FileInputStream;

        $r27 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        $r28 = virtualinvoke $r27.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r135.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r28);

        r1 = r135;

        r136 = new java.io.DataInputStream;

        specialinvoke r136.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = r136;

        z8 = 0;

        r120 = r1;

        z0 = 0;

        $r26 = "ANDROID BACKUP\n";

        i0 = virtualinvoke $r26.<java.lang.String: int length()>();

        r7 = newarray (byte)[i0];

        virtualinvoke r2.<java.io.DataInputStream: void readFully(byte[])>(r7);

        $r29 = "ANDROID BACKUP\n";

        r8 = virtualinvoke $r29.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r8, r7);

        if $z4 == 0 goto label030;

        r9 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r1);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

        if i1 > 3 goto label028;

        if i1 != 1 goto label021;

        $z6 = 1;

        goto label022;

     label021:
        $z6 = 0;

     label022:
        z1 = $z6;

        r121 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r1);

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r121);

        if $i9 == 0 goto label023;

        $z7 = 1;

        goto label024;

     label023:
        $z7 = 0;

     label024:
        z8 = $z7;

        r122 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r1);

        $z5 = virtualinvoke r122.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z5 == 0 goto label025;

        z0 = 1;

        goto label027;

     label025:
        $r58 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mDecryptPassword>;

        if $r58 == null goto label026;

        $r62 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mDecryptPassword>;

        $i11 = virtualinvoke $r62.<java.lang.String: int length()>();

        if $i11 <= 0 goto label026;

        r120 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.io.InputStream decodeAesHeaderAndInitialize(java.lang.String,boolean,java.io.InputStream)>(r122, z1, r1);

        if r120 == null goto label027;

        z0 = 1;

        goto label027;

     label026:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Archive is encrypted but no password given");

     label027:
        goto label029;

     label028:
        r137 = new java.lang.StringBuilder;

        specialinvoke r137.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong header version: ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r59 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r59);

     label029:
        goto label031;

     label030:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Didn\'t read the right header magic");

     label031:
        if z0 != 0 goto label049;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Invalid restore data; aborting.");

     label032:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r41 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r41);

     label033:
        if r2 == null goto label034;

        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label034:
        if r1 == null goto label035;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label035:
        $r47 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r47.<android.os.ParcelFileDescriptor: void close()>();

     label036:
        goto label038;

     label037:
        $r112 := @caughtexception;

        r123 = $r112;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r123);

     label038:
        $r46 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r45 = $r46.<com.android.server.backup.BackupManagerService: java.lang.Object mCurrentOpLock>;

        r124 = $r45;

        entermonitor $r45;

     label039:
        $r44 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r50 = $r44.<com.android.server.backup.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r50.<android.util.SparseArray: void clear()>();

        exitmonitor r124;

     label040:
        goto label043;

     label041:
        $r102 := @caughtexception;

        r10 = $r102;

        exitmonitor r124;

     label042:
        throw r10;

     label043:
        $r51 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        r125 = $r51;

        entermonitor $r51;

     label044:
        $r52 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r52.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r48 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r48.<java.lang.Object: void notifyAll()>();

        exitmonitor r125;

     label045:
        goto label048;

     label046:
        $r79 := @caughtexception;

        r11 = $r79;

        exitmonitor r125;

     label047:
        throw r11;

     label048:
        $r49 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r49.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r56 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r57 = $r56.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r57.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label049:
        if z8 == 0 goto label050;

        r138 = new java.util.zip.InflaterInputStream;

        $r42 = r138;

        specialinvoke r138.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>(r120);

        goto label051;

     label050:
        $r42 = r120;

     label051:
        r6 = $r42;

     label052:
        z9 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: boolean restoreOneFile(java.io.InputStream,byte[])>(r6, r119);

        if z9 != 0 goto label052;

     label053:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r30 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r30);

     label054:
        if r2 == null goto label055;

        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label055:
        if r1 == null goto label056;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label056:
        $r31 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r31.<android.os.ParcelFileDescriptor: void close()>();

     label057:
        goto label059;

     label058:
        $r87 := @caughtexception;

        r126 = $r87;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r126);

     label059:
        $r34 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r35 = $r34.<com.android.server.backup.BackupManagerService: java.lang.Object mCurrentOpLock>;

        r127 = $r35;

        entermonitor $r35;

     label060:
        $r32 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r33 = $r32.<com.android.server.backup.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r33.<android.util.SparseArray: void clear()>();

        exitmonitor r127;

     label061:
        goto label064;

     label062:
        $r88 := @caughtexception;

        r13 = $r88;

        exitmonitor r127;

     label063:
        throw r13;

     label064:
        $r38 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        r128 = $r38;

        entermonitor $r38;

     label065:
        $r37 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r36 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r36.<java.lang.Object: void notifyAll()>();

        exitmonitor r128;

     label066:
        goto label069;

     label067:
        $r78 := @caughtexception;

        r12 = $r78;

        exitmonitor r128;

     label068:
        throw r12;

     label069:
        $r40 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r40.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r39 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r43 = $r39.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r43.<android.os.PowerManager$WakeLock: void release()>();

        goto label106;

     label070:
        $r76 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Unable to read restore input");

     label071:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r86 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r86);

     label072:
        if r2 == null goto label073;

        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label073:
        if r1 == null goto label074;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label074:
        $r85 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r85.<android.os.ParcelFileDescriptor: void close()>();

     label075:
        goto label077;

     label076:
        $r114 := @caughtexception;

        r130 = $r114;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r130);

     label077:
        $r84 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r83 = $r84.<com.android.server.backup.BackupManagerService: java.lang.Object mCurrentOpLock>;

        r131 = $r83;

        entermonitor $r83;

     label078:
        $r82 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r81 = $r82.<com.android.server.backup.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r81.<android.util.SparseArray: void clear()>();

        exitmonitor r131;

     label079:
        goto label082;

     label080:
        $r95 := @caughtexception;

        r15 = $r95;

        exitmonitor r131;

     label081:
        throw r15;

     label082:
        $r80 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        r132 = $r80;

        entermonitor $r80;

     label083:
        $r92 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r92.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r91 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r91.<java.lang.Object: void notifyAll()>();

        exitmonitor r132;

     label084:
        goto label087;

     label085:
        $r111 := @caughtexception;

        r14 = $r111;

        exitmonitor r132;

     label086:
        throw r14;

     label087:
        $r93 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r93.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r94 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r96 = $r94.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r96.<android.os.PowerManager$WakeLock: void release()>();

        goto label106;

     label088:
        $r90 := @caughtexception;

        r17 = $r90;

     label089:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r103 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r103);

     label090:
        if r2 == null goto label091;

        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label091:
        if r1 == null goto label092;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label092:
        $r104 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r104.<android.os.ParcelFileDescriptor: void close()>();

     label093:
        goto label095;

     label094:
        $r110 := @caughtexception;

        r16 = $r110;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r16);

     label095:
        $r105 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r106 = $r105.<com.android.server.backup.BackupManagerService: java.lang.Object mCurrentOpLock>;

        r133 = $r106;

        entermonitor $r106;

     label096:
        $r107 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r108 = $r107.<com.android.server.backup.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r108.<android.util.SparseArray: void clear()>();

        exitmonitor r133;

     label097:
        goto label100;

     label098:
        $r77 := @caughtexception;

        r19 = $r77;

        exitmonitor r133;

     label099:
        throw r19;

     label100:
        $r109 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        r134 = $r109;

        entermonitor $r109;

     label101:
        $r97 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r97.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r98 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r98.<java.lang.Object: void notifyAll()>();

        exitmonitor r134;

     label102:
        goto label105;

     label103:
        $r89 := @caughtexception;

        r18 = $r89;

        exitmonitor r134;

     label104:
        throw r18;

     label105:
        $r99 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r99.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r100 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r101 = $r100.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r101.<android.os.PowerManager$WakeLock: void release()>();

        throw r17;

     label106:
        return;

        catch java.io.IOException from label004 to label007 with label008;
        catch java.lang.Throwable from label010 to label011 with label012;
        catch java.lang.Throwable from label012 to label013 with label012;
        catch java.lang.Throwable from label015 to label016 with label017;
        catch java.lang.Throwable from label017 to label018 with label017;
        catch java.io.IOException from label033 to label036 with label037;
        catch java.lang.Throwable from label039 to label040 with label041;
        catch java.lang.Throwable from label041 to label042 with label041;
        catch java.lang.Throwable from label044 to label045 with label046;
        catch java.lang.Throwable from label046 to label047 with label046;
        catch java.io.IOException from label054 to label057 with label058;
        catch java.lang.Throwable from label060 to label061 with label062;
        catch java.lang.Throwable from label062 to label063 with label062;
        catch java.lang.Throwable from label065 to label066 with label067;
        catch java.lang.Throwable from label067 to label068 with label067;
        catch java.io.IOException from label002 to label003 with label070;
        catch java.io.IOException from label020 to label032 with label070;
        catch java.io.IOException from label049 to label053 with label070;
        catch java.io.IOException from label072 to label075 with label076;
        catch java.lang.Throwable from label078 to label079 with label080;
        catch java.lang.Throwable from label080 to label081 with label080;
        catch java.lang.Throwable from label083 to label084 with label085;
        catch java.lang.Throwable from label085 to label086 with label085;
        catch java.lang.Throwable from label002 to label003 with label088;
        catch java.lang.Throwable from label020 to label032 with label088;
        catch java.lang.Throwable from label049 to label053 with label088;
        catch java.lang.Throwable from label070 to label071 with label088;
        catch java.io.IOException from label090 to label093 with label094;
        catch java.lang.Throwable from label096 to label097 with label098;
        catch java.lang.Throwable from label098 to label099 with label098;
        catch java.lang.Throwable from label101 to label102 with label103;
        catch java.lang.Throwable from label103 to label104 with label103;
        catch java.lang.Throwable from label088 to label089 with label088;
    }

    java.lang.String readHeaderLine(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.InputStream r1;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;
        java.lang.String $r4;
        char $c2;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(80);

        r2 = $r3;

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

        i0 = $i1;

        if $i1 < 0 goto label3;

        if i0 != 10 goto label2;

        goto label3;

     label2:
        $c2 = (char) i0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label1;

     label3:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    java.io.InputStream attemptMasterKeyDecryption(java.lang.String, byte[], byte[], int, java.lang.String, java.lang.String, java.io.InputStream, boolean)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.lang.String r1, r4, r5, $r18;
        byte[] r2, r3, r10, r12, r13, r14, r15, r16, $r23, r34;
        int i0, $i3, $i4, $i5, i13, i14, i15, i17, i18;
        java.io.InputStream r6;
        boolean z0, $z1;
        javax.crypto.CipherInputStream r7, $r27;
        javax.crypto.Cipher r8;
        javax.crypto.SecretKey r9;
        javax.crypto.spec.IvParameterSpec r11, $r20, $r25, r35;
        byte b1, b2, b16, b19;
        com.android.server.backup.BackupManagerService $r17, $r19, $r22, $r24;
        javax.crypto.spec.SecretKeySpec $r21, $r28;
        javax.crypto.NoSuchPaddingException $r26;
        javax.crypto.BadPaddingException $r29;
        java.security.InvalidAlgorithmParameterException $r30, r36;
        java.security.InvalidKeyException $r31;
        java.security.NoSuchAlgorithmException $r32;
        javax.crypto.IllegalBlockSizeException $r33;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.io.InputStream;

        z0 := @parameter7: boolean;

        r7 = null;

     label01:
        r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r17 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mDecryptPassword>;

        r9 = staticinvoke <com.android.server.backup.BackupManagerService: javax.crypto.SecretKey access$1400(com.android.server.backup.BackupManagerService,java.lang.String,java.lang.String,byte[],int)>($r17, r1, $r18, r2, i0);

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        r10 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] access$1900(com.android.server.backup.BackupManagerService,java.lang.String)>($r19, r4);

        $r20 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r10);

        r11 = $r20;

        $r21 = new javax.crypto.spec.SecretKeySpec;

        $r23 = interfaceinvoke r9.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke $r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r23, "AES");

        virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r21, r11);

        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        r12 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] access$1900(com.android.server.backup.BackupManagerService,java.lang.String)>($r22, r5);

        r13 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r12);

        b2 = 0;

        i13 = b2 + 1;

        b1 = r13[b2];

        $i3 = i13 + b1;

        r34 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r13, i13, $i3);

        i14 = i13 + b1;

        i15 = i14 + 1;

        b16 = r13[i14];

        $i4 = i15 + b16;

        r15 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r13, i15, $i4);

        i17 = i15 + b16;

        i18 = i17 + 1;

        b19 = r13[i17];

        $i5 = i18 + b19;

        r14 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r13, i18, $i5);

        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        r16 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] access$1700(com.android.server.backup.BackupManagerService,java.lang.String,byte[],byte[],int)>($r24, r1, r15, r3, i0);

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r16, r14);

        if $z1 == 0 goto label02;

        $r25 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r34);

        r35 = $r25;

        $r28 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r15, "AES");

        virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r28, r35);

        $r27 = new javax.crypto.CipherInputStream;

        specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r6, r8);

        r7 = $r27;

        goto label03;

     label02:
        if z0 == 0 goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Incorrect password");

     label03:
        goto label15;

     label04:
        $r30 := @caughtexception;

        r36 = $r30;

        if z0 == 0 goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Needed parameter spec unavailable!", r36);

     label05:
        goto label15;

     label06:
        $r29 := @caughtexception;

        if z0 == 0 goto label07;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Incorrect password");

     label07:
        goto label15;

     label08:
        $r33 := @caughtexception;

        if z0 == 0 goto label09;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Invalid block size in master key");

     label09:
        goto label15;

     label10:
        $r32 := @caughtexception;

        if z0 == 0 goto label11;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Needed decryption algorithm unavailable!");

     label11:
        goto label15;

     label12:
        $r26 := @caughtexception;

        if z0 == 0 goto label13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Needed padding mechanism unavailable!");

     label13:
        goto label15;

     label14:
        $r31 := @caughtexception;

        if z0 == 0 goto label15;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Illegal password; aborting");

     label15:
        return r7;

        catch java.security.InvalidAlgorithmParameterException from label01 to label03 with label04;
        catch javax.crypto.BadPaddingException from label01 to label03 with label06;
        catch javax.crypto.IllegalBlockSizeException from label01 to label03 with label08;
        catch java.security.NoSuchAlgorithmException from label01 to label03 with label10;
        catch javax.crypto.NoSuchPaddingException from label01 to label03 with label12;
        catch java.security.InvalidKeyException from label01 to label03 with label14;
    }

    java.io.InputStream decodeAesHeaderAndInitialize(java.lang.String, boolean, java.io.InputStream)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.lang.String r1, r4, r6, r8, r9, $r12, $r16;
        boolean z0, $z1;
        java.io.InputStream r2, r3;
        byte[] r5, r7;
        int i0;
        java.lang.StringBuilder $r10, $r11, $r13;
        com.android.server.backup.BackupManagerService $r14, $r15;
        java.io.IOException $r17;
        java.lang.NumberFormatException $r18;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.io.InputStream;

        r3 = null;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("AES-256");

        if $z1 == 0 goto label3;

        r4 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        r5 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] access$1900(com.android.server.backup.BackupManagerService,java.lang.String)>($r14, r4);

        r6 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        $r15 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        r7 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] access$1900(com.android.server.backup.BackupManagerService,java.lang.String)>($r15, r6);

        $r16 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        r8 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        r9 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        r3 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.io.InputStream attemptMasterKeyDecryption(java.lang.String,byte[],byte[],int,java.lang.String,java.lang.String,java.io.InputStream,boolean)>("PBKDF2WithHmacSHA1", r5, r7, i0, r8, r9, r2, 0);

        if r3 != null goto label2;

        if z0 == 0 goto label2;

        r3 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.io.InputStream attemptMasterKeyDecryption(java.lang.String,byte[],byte[],int,java.lang.String,java.lang.String,java.io.InputStream,boolean)>("PBKDF2WithHmacSHA1And8bit", r5, r7, i0, r8, r9, r2, 1);

     label2:
        goto label4;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encryption method: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r12);

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Can\'t parse restore data header");

        goto label7;

     label6:
        $r17 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Can\'t read input header");

     label7:
        return r3;

        catch java.lang.NumberFormatException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
    }

    boolean restoreOneFile(java.io.InputStream, byte[])
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        com.android.server.backup.BackupManagerService$FileMetadata r3;
        java.lang.String r4, r6, $r10, $r11, $r12, $r16, $r18, $r22, $r24, $r26, $r34, $r35, $r57, $r58, $r60, $r63, $r64, $r66, $r81, $r86, $r94, $r97, $r98, $r101, $r104, $r111, $r123;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, z15, z16, z17;
        com.android.server.backup.BackupManagerService$RestorePolicy r5, $r41, $r82, $r105, $r108, $r110, $r116, $r121;
        long l0, $l10, $l11, $l14, $l16, $l19, $l21, $l22, $l24, $l25, $l28, $l32, $l33, $l34, $l35, $l36, $l38, $l40, $l49, $l53, $l54, l59, l60;
        int i1, i2, i3, i4, $i5, $i6, $i9, $i12, $i17, $i23, $i26, $i31, $i39;
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable r7, $r46;
        java.io.FileOutputStream r8, $r36;
        java.io.IOException r9, $r127, $r128, $r130, $r131, r139;
        java.lang.Object $r13, $r107;
        java.util.HashMap $r14, $r42, $r83, $r106, $r112, $r113, $r119, $r122, $r125, $r126, $r132;
        int[] $r15;
        byte $b8, $b13, $b15, $b18, $b27, $b29;
        com.android.server.backup.BackupManagerService $r17, $r19, $r29, $r32, $r44, $r56, $r72, $r75, $r96;
        java.lang.StringBuilder $r20, $r21, $r23, $r47, $r48, $r49, $r51, $r59, $r65, $r67, $r68, $r69, $r70, $r78, $r79, $r80, $r87, $r88, $r91, $r92, $r93, $r99, $r100;
        android.os.ParcelFileDescriptor[] $r25, $r37, $r45, $r55;
        android.content.pm.ApplicationInfo $r27, $r40, $r74, $r76, $r85, $r102, $r117;
        android.app.backup.IBackupManager $r28, $r54;
        android.os.ParcelFileDescriptor $r30, $r38, $r52, $r62;
        android.app.IBackupAgent $r31, $r53, $r77, $r89, $r90, $r95, $r115;
        com.android.server.backup.BackupManagerService$BackupHandler $r33;
        java.io.FileDescriptor $r39;
        java.lang.Thread $r50;
        com.android.server.backup.BackupManagerService$FullBackupObbConnection $r61;
        android.content.pm.PackageManager $r71;
        java.util.HashSet $r73, $r103;
        android.content.pm.PackageManager$NameNotFoundException $r129;
        android.os.RemoteException $r134;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

     label01:
        r3 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FileMetadata readTarHeaders(java.io.InputStream)>(r1);

        if r3 == null goto label53;

        r4 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r10 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mAgentPackage>;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label03;

        $r119 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $z14 = virtualinvoke $r119.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r4);

        if $z14 != 0 goto label02;

        $r132 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r116 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r132.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r116);

     label02:
        $r115 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        if $r115 == null goto label03;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Saw new package; finalizing old one");

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r117 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r117);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mAgentPackage> = null;

     label03:
        $r11 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("_manifest");

        if $z3 == 0 goto label04;

        $r126 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r121 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$RestorePolicy readAppManifest(com.android.server.backup.BackupManagerService$FileMetadata,java.io.InputStream)>(r3, r1);

        virtualinvoke $r126.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r121);

        $r122 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackageInstallers>;

        $r123 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String installerPackageName>;

        virtualinvoke $r122.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r123);

        $l53 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l53, r1);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void sendOnRestorePackage(java.lang.String)>(r4);

        goto label53;

     label04:
        $r12 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("_meta");

        if $z4 == 0 goto label05;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void readMetadata(com.android.server.backup.BackupManagerService$FileMetadata,java.io.InputStream)>(r3, r1);

        $l54 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l54, r1);

        goto label53;

     label05:
        z0 = 1;

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.backup.BackupManagerService$RestorePolicy) $r13;

        $r15 = <com.android.server.backup.BackupManagerService$6: int[] $SwitchMap$com$android$server$backup$BackupManagerService$RestorePolicy>;

        $i5 = virtualinvoke r5.<com.android.server.backup.BackupManagerService$RestorePolicy: int ordinal()>();

        $i6 = $r15[$i5];

        tableswitch($i6)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label12;
            default: goto label13;
        };

     label06:
        z0 = 0;

        goto label14;

     label07:
        $r111 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain>;

        $z13 = virtualinvoke $r111.<java.lang.String: boolean equals(java.lang.Object)>("a");

        if $z13 == 0 goto label11;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "APK file; installing");

        $r112 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackageInstallers>;

        $r107 = virtualinvoke $r112.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (java.lang.String) $r107;

        z15 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: boolean installApk(com.android.server.backup.BackupManagerService$FileMetadata,java.lang.String,java.io.InputStream)>(r3, r6, r1);

        $r106 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        if z15 == 0 goto label08;

        $r105 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT>;

        goto label09;

     label08:
        $r105 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

     label09:
        virtualinvoke $r106.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r105);

        $l49 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l49, r1);

     label10:
        return 1;

     label11:
        $r113 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r110 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r113.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r110);

        z0 = 0;

        goto label14;

     label12:
        $r97 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain>;

        $z10 = virtualinvoke $r97.<java.lang.String: boolean equals(java.lang.Object)>("a");

        if $z10 == 0 goto label14;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "apk present but ACCEPT");

        z0 = 0;

        goto label14;

     label13:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Invalid policy from manifest");

        z0 = 0;

        $r125 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r108 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r125.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r108);

     label14:
        $r16 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $z5 = virtualinvoke $r16.<java.lang.String: boolean contains(java.lang.CharSequence)>("..");

        if $z5 != 0 goto label15;

        $r98 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $z11 = virtualinvoke $r98.<java.lang.String: boolean contains(java.lang.CharSequence)>("//");

        if $z11 == 0 goto label16;

     label15:
        z0 = 0;

     label16:
        if z0 == 0 goto label17;

        $r95 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        if $r95 == null goto label17;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "Reusing existing agent instance");

     label17:
        if z0 == 0 goto label27;

        $r77 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        if $r77 != null goto label27;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to launch agent for ");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r81);

     label18:
        $r72 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r71 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r72);

        $r74 = virtualinvoke $r71.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r4, 0);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp> = $r74;

        $r73 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashSet mClearedPackages>;

        $z9 = virtualinvoke $r73.<java.util.HashSet: boolean contains(java.lang.Object)>(r4);

        if $z9 != 0 goto label21;

        $r85 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r86 = $r85.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r86 != null goto label19;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Clearing app data preparatory to full restore");

        $r96 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r96.<com.android.server.backup.BackupManagerService: void clearApplicationDataSynchronous(java.lang.String)>(r4);

        goto label20;

     label19:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("backup agent (");

        $r102 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r101 = $r102.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        $r100 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") => no clear");

        $r104 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r104);

     label20:
        $r103 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashSet mClearedPackages>;

        virtualinvoke $r103.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        goto label22;

     label21:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "We\'ve initialized this app already; no clear required");

     label22:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void setUpPipes()>();

        $r75 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r76 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r89 = virtualinvoke $r75.<com.android.server.backup.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>($r76, 3);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent> = $r89;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mAgentPackage> = r4;

     label23:
        goto label26;

     label24:
        $r130 := @caughtexception;

        goto label26;

     label25:
        $r129 := @caughtexception;

     label26:
        $r90 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        if $r90 != null goto label27;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create agent for ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r94);

        z0 = 0;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r83 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r82 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r83.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r82);

     label27:
        if z0 == 0 goto label28;

        $r60 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mAgentPackage>;

        $z8 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z8 != 0 goto label28;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring data for ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but agent is for ");

        $r66 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String mAgentPackage>;

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r64);

        z0 = 0;

     label28:
        if z0 == 0 goto label47;

        z16 = 1;

        l0 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        i2 = virtualinvoke $r19.<com.android.server.backup.BackupManagerService: int generateToken()>();

     label29:
        $r17 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r17.<com.android.server.backup.BackupManagerService: void prepareOperationTimeout(int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask)>(i2, 300000L, null);

        $r18 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain>;

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("obb");

        if $z6 == 0 goto label30;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring OBB file for ");

        $r47 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r58 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r59 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r57);

        $r61 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$FullBackupObbConnection mObbConnection>;

        $r55 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r62 = $r55[0];

        $l38 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $i39 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: int type>;

        $r63 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $l40 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l36 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long mtime>;

        $r56 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r54 = $r56.<com.android.server.backup.BackupManagerService: android.app.backup.IBackupManager mBackupManagerBinder>;

        virtualinvoke $r61.<com.android.server.backup.BackupManagerService$FullBackupObbConnection: void restoreObbFile(java.lang.String,android.os.ParcelFileDescriptor,long,int,java.lang.String,long,long,int,android.app.backup.IBackupManager)>(r4, $r62, $l38, $i39, $r63, $l40, $l36, i2, $r54);

        goto label32;

     label30:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invoking agent to restore file ");

        $r24 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r22);

        $r27 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r26 = $r27.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $z7 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z7 == 0 goto label31;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "system process agent - spinning a thread");

        $r46 = new com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable;

        $r53 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        $r45 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r52 = $r45[0];

        specialinvoke $r46.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable: void <init>(com.android.server.backup.BackupManagerService$PerformAdbRestoreTask,android.app.IBackupAgent,com.android.server.backup.BackupManagerService$FileMetadata,android.os.ParcelFileDescriptor,int)>(r0, $r53, r3, $r52, i2);

        r7 = $r46;

        $r50 = new java.lang.Thread;

        specialinvoke $r50.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r7, "restore-sys-runner");

        virtualinvoke $r50.<java.lang.Thread: void start()>();

        goto label32;

     label31:
        $r31 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        $r25 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r30 = $r25[0];

        $l24 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $i23 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: int type>;

        $r35 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain>;

        $r34 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $l21 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l22 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long mtime>;

        $r29 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r28 = $r29.<com.android.server.backup.BackupManagerService: android.app.backup.IBackupManager mBackupManagerBinder>;

        interfaceinvoke $r31.<android.app.IBackupAgent: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>($r30, $l24, $i23, $r35, $r34, $l21, $l22, i2, $r28);

     label32:
        goto label35;

     label33:
        $r131 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Couldn\'t establish restore");

        z16 = 0;

        z0 = 0;

        goto label35;

     label34:
        $r134 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Agent crashed during full restore");

        z16 = 0;

        z0 = 0;

     label35:
        if z0 == 0 goto label46;

        z17 = 1;

        $r36 = new java.io.FileOutputStream;

        $r37 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r38 = $r37[1];

        $r39 = virtualinvoke $r38.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r36.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r39);

        r8 = $r36;

     label36:
        $b29 = l0 cmp 0L;

        if $b29 <= 0 goto label45;

        $i26 = lengthof r2;

        $l25 = (long) $i26;

        $b27 = l0 cmp $l25;

        if $b27 <= 0 goto label37;

        $i31 = lengthof r2;

        goto label38;

     label37:
        $i31 = (int) l0;

     label38:
        i3 = $i31;

        i4 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i3);

        if i4 < 0 goto label39;

        $l35 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l32 = (long) i4;

        $l34 = $l35 + $l32;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l34;

     label39:
        if i4 > 0 goto label40;

        goto label45;

     label40:
        $l33 = (long) i4;

        l0 = l0 - $l33;

        if z17 == 0 goto label44;

     label41:
        virtualinvoke r8.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, i4);

     label42:
        goto label44;

     label43:
        $r128 := @caughtexception;

        r9 = $r128;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Failed to write to restore pipe", r9);

        z17 = 0;

     label44:
        goto label36;

     label45:
        $l28 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l28, r1);

        $r44 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        z16 = virtualinvoke $r44.<com.android.server.backup.BackupManagerService: boolean waitUntilOperationComplete(int)>(i2);

     label46:
        if z16 != 0 goto label47;

        $r32 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r33 = $r32.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r33.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(7);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownPipes()>();

        $r40 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r40);

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent> = null;

        $r42 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r41 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r41);

     label47:
        if z0 != 0 goto label53;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "[discarding file content]");

        $l10 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $l11 = $l10 + 511L;

        l59 = $l11 & -512L;

     label48:
        $b8 = l59 cmp 0L;

        if $b8 <= 0 goto label53;

        $i9 = lengthof r2;

        $l14 = (long) $i9;

        $b15 = l59 cmp $l14;

        if $b15 <= 0 goto label49;

        $i17 = lengthof r2;

        goto label50;

     label49:
        $i17 = (int) l59;

     label50:
        i1 = $i17;

        $i12 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i1);

        l60 = (long) $i12;

        $b13 = l60 cmp 0L;

        if $b13 < 0 goto label51;

        $l19 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l16 = $l19 + l60;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l16;

     label51:
        $b18 = l60 cmp 0L;

        if $b18 > 0 goto label52;

        goto label53;

     label52:
        l59 = l59 - l60;

        goto label48;

     label53:
        goto label55;

     label54:
        $r127 := @caughtexception;

        r139 = $r127;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "io exception on restore socket read", r139);

        r3 = null;

     label55:
        if r3 == null goto label56;

        $z1 = 1;

        goto label57;

     label56:
        $z1 = 0;

     label57:
        return $z1;

        catch java.io.IOException from label18 to label23 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label18 to label23 with label25;
        catch java.io.IOException from label29 to label32 with label33;
        catch android.os.RemoteException from label29 to label32 with label34;
        catch java.io.IOException from label41 to label42 with label43;
        catch java.io.IOException from label01 to label10 with label54;
        catch java.io.IOException from label11 to label53 with label54;
    }

    void setUpPipes() throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        android.os.ParcelFileDescriptor[] $r1;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        $r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes> = $r1;

        return;
    }

    void tearDownPipes()
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.IOException r1, $r9;
        android.os.ParcelFileDescriptor[] $r2, $r3, $r5, $r6, $r8;
        android.os.ParcelFileDescriptor $r4, $r7;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        $r2 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        if $r2 == null goto label5;

     label1:
        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r4 = $r3[0];

        virtualinvoke $r4.<android.os.ParcelFileDescriptor: void close()>();

        $r5 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r5[0] = null;

        $r6 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r7 = $r6[1];

        virtualinvoke $r7.<android.os.ParcelFileDescriptor: void close()>();

        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r8[1] = null;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Couldn\'t close agent pipes", r1);

     label4:
        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.os.ParcelFileDescriptor[] mPipes> = null;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void tearDownAgent(android.content.pm.ApplicationInfo)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        android.content.pm.ApplicationInfo r1;
        android.app.IBackupAgent $r3;
        com.android.server.backup.BackupManagerService $r4, $r7;
        android.app.IActivityManager $r5, $r8;
        int $i0, $i3;
        java.lang.String $r6, $r9;
        boolean $z0;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent>;

        if $r3 == null goto label6;

     label1:
        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r5 = staticinvoke <com.android.server.backup.BackupManagerService: android.app.IActivityManager access$800(com.android.server.backup.BackupManagerService)>($r4);

        interfaceinvoke $r5.<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>(r1);

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if $i0 == 1000 goto label2;

        $r6 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("com.android.backupconfirm");

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Killing host process");

        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r8 = staticinvoke <com.android.server.backup.BackupManagerService: android.app.IActivityManager access$800(com.android.server.backup.BackupManagerService)>($r7);

        $r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i3 = r1.<android.content.pm.ApplicationInfo: int uid>;

        interfaceinvoke $r8.<android.app.IActivityManager: void killApplicationProcess(java.lang.String,int)>($r9, $i3);

        goto label3;

     label2:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Not killing after full restore");

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Lost app trying to shut down");

     label5:
        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.IBackupAgent mAgent> = null;

     label6:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    boolean installApk(com.android.server.backup.BackupManagerService$FileMetadata, java.lang.String, java.io.InputStream)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        com.android.server.backup.BackupManagerService$FileMetadata r1;
        java.lang.String r2, $r12, $r13, $r17, $r25, $r26, $r29, $r34, $r35, $r38, $r46, $r49, $r53, $r56, $r59, $r61, $r65, $r68, $r73, $r75, $r80, $r83;
        java.io.InputStream r3;
        boolean z0, z1, $z3, $z4;
        java.io.File r4, $r15, $r16;
        java.io.FileOutputStream r5, $r18;
        byte[] r6;
        long l0, l1, $l14, $l15, $l16, $l17, $l19, $l22;
        int i2, $i5, $i6, $i7, $i9, $i12, $i18, $i23;
        android.content.pm.Signature[] r7;
        java.lang.Throwable r8, $r79;
        java.lang.StringBuilder $r9, $r10, $r11, $r36, $r37, $r39, $r40, $r51, $r52, $r54, $r55, $r57, $r58, $r60, $r62, $r63, $r64, $r67, $r69, $r74, $r76, $r81, $r82, $r84;
        com.android.server.backup.BackupManagerService $r14, $r19, $r30, $r42;
        byte $b4, $b20;
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver $r20, $r21, $r22, $r24, $r27, $r47, $r66;
        android.content.pm.PackageManager $r23, $r28, $r41;
        android.content.pm.ApplicationInfo $r31, $r44, $r45;
        java.lang.Object $r32, $r72;
        java.util.HashMap $r33, $r71;
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver $r43, $r48, $r50;
        com.android.server.backup.BackupManagerService$RestorePolicy $r70;
        android.content.pm.PackageManager$NameNotFoundException $r77;
        java.io.IOException $r78;
        android.net.Uri r85;
        android.content.pm.PackageInfo r86;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService$FileMetadata;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.InputStream;

        z0 = 1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing from backup: ");

        $r12 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r13);

        $r15 = new java.io.File;

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r16 = $r14.<com.android.server.backup.BackupManagerService: java.io.File mDataDir>;

        $r17 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, $r17);

        r4 = $r15;

     label01:
        $r18 = new java.io.FileOutputStream;

        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        r5 = $r18;

        r6 = newarray (byte)[32768];

        l0 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

     label02:
        $b4 = l0 cmp 0L;

        if $b4 <= 0 goto label06;

        $i12 = lengthof r6;

        $l19 = (long) $i12;

        $b20 = $l19 cmp l0;

        if $b20 >= 0 goto label03;

        $i23 = lengthof r6;

        $l22 = (long) $i23;

        goto label04;

     label03:
        $l22 = l0;

     label04:
        l1 = $l22;

        $i18 = (int) l1;

        i2 = virtualinvoke r3.<java.io.InputStream: int read(byte[],int,int)>(r6, 0, $i18);

        if i2 < 0 goto label05;

        $l14 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l17 = (long) i2;

        $l15 = $l14 + $l17;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l15;

     label05:
        virtualinvoke r5.<java.io.FileOutputStream: void write(byte[],int,int)>(r6, 0, i2);

        $l16 = (long) i2;

        l0 = l0 - $l16;

        goto label02;

     label06:
        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

        virtualinvoke r4.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        r85 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r4);

        $r20 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        virtualinvoke $r20.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: void reset()>();

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r23 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r19);

        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        virtualinvoke $r23.<android.content.pm.PackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>(r85, $r24, 34, r2);

        $r21 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        virtualinvoke $r21.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: void waitForCompletion()>();

        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        $i5 = virtualinvoke $r22.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: int getResult()>();

        if $i5 == 1 goto label07;

        $r71 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mPackagePolicies>;

        $r73 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r72 = virtualinvoke $r71.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r73);

        $r70 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT>;

        if $r72 == $r70 goto label14;

        z0 = 0;

        goto label14;

     label07:
        z1 = 0;

        $r27 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        $r26 = $r27.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: java.lang.String mPackageName>;

        $r25 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z3 != 0 goto label08;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore stream claimed to include apk for ");

        $r68 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r64 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but apk was really ");

        $r66 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        $r65 = $r66.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: java.lang.String mPackageName>;

        $r74 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r75);

        z0 = 0;

        z1 = 1;

        goto label13;

     label08:
        $r30 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r28 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r30);

        $r29 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        r86 = virtualinvoke $r28.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r29, 64);

        $r31 = r86.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r31.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i6 & 32768;

        if $i7 != 0 goto label09;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore stream contains apk of package ");

        $r61 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r58 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it disallows backup/restore");

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r59);

        z0 = 0;

        goto label11;

     label09:
        $r33 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mManifestSignatures>;

        $r34 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r32 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r34);

        r7 = (android.content.pm.Signature[]) $r32;

        $z4 = staticinvoke <com.android.server.backup.BackupManagerService: boolean signaturesMatch(android.content.pm.Signature[],android.content.pm.PackageInfo)>(r7, r86);

        if $z4 == 0 goto label10;

        $r44 = r86.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r44.<android.content.pm.ApplicationInfo: int uid>;

        if $i9 >= 10000 goto label11;

        $r45 = r86.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r46 = $r45.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r46 != null goto label11;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installed app ");

        $r56 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r51 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has restricted uid and no agent");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r53);

        z0 = 0;

        goto label11;

     label10:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installed app ");

        $r35 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signatures do not match restore manifest");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r38);

        z0 = 0;

        z1 = 1;

     label11:
        goto label13;

     label12:
        $r77 := @caughtexception;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install of package ");

        $r83 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r82 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" succeeded but now not found");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r80);

        z0 = 0;

     label13:
        if z1 == 0 goto label14;

        $r43 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver mDeleteObserver>;

        virtualinvoke $r43.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver: void reset()>();

        $r42 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r41 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r42);

        $r47 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver mInstallObserver>;

        $r49 = $r47.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver: java.lang.String mPackageName>;

        $r48 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver mDeleteObserver>;

        virtualinvoke $r41.<android.content.pm.PackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>($r49, $r48, 0);

        $r50 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver mDeleteObserver>;

        virtualinvoke $r50.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver: void waitForCompletion()>();

     label14:
        virtualinvoke r4.<java.io.File: boolean delete()>();

        goto label19;

     label15:
        $r78 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Unable to transcribe restored apk for install");

        z0 = 0;

     label16:
        virtualinvoke r4.<java.io.File: boolean delete()>();

        goto label19;

     label17:
        $r79 := @caughtexception;

        r8 = $r79;

     label18:
        virtualinvoke r4.<java.io.File: boolean delete()>();

        throw r8;

     label19:
        return z0;

        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label11 with label12;
        catch java.io.IOException from label01 to label14 with label15;
        catch java.lang.Throwable from label01 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    void skipTarPadding(long, java.io.InputStream) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        long l0, l1, $l3, $l7, $l8, $l9;
        java.io.InputStream r1;
        int i2, $i5, $i6;
        byte[] r2;
        byte $b4;
        java.io.IOException $r3;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        l0 := @parameter0: long;

        r1 := @parameter1: java.io.InputStream;

        $l3 = l0 + 512L;

        l1 = $l3 % 512L;

        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label2;

        $i5 = (int) l1;

        i2 = 512 - $i5;

        r2 = newarray (byte)[i2];

        $i6 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r1, r2, 0, i2);

        if $i6 != i2 goto label1;

        $l8 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l7 = (long) i2;

        $l9 = $l8 + $l7;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l9;

        goto label2;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF in padding");

        throw $r3;

     label2:
        return;
    }

    void readMetadata(com.android.server.backup.BackupManagerService$FileMetadata, java.io.InputStream) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        com.android.server.backup.BackupManagerService$FileMetadata r1;
        java.io.InputStream r2;
        byte[] r3, $r24, $r25;
        java.lang.String[] r4;
        int i0, i1, i2, i3, $i7, $i8, $i11, $i19, $i20, $i21, i27;
        java.lang.String r5, $r9, $r13, $r15, $r19, $r22, $r28, $r31, $r35, $r37, $r38, $r46;
        java.io.ByteArrayInputStream r6, $r20;
        java.io.DataInputStream r7, $r23;
        long $l4, $l6, $l9, $l10, $l13, $l14, $l15, $l16, $l25, $l26;
        byte $b5, $b12;
        java.io.IOException $r8, $r32, $r39;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r21, $r26, $r27, $r29, $r30, $r33, $r34, $r36, $r40, $r41, $r42, $r43, $r44, $r45;
        boolean $z0;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService$FileMetadata;

        r2 := @parameter1: java.io.InputStream;

        $l4 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $b5 = $l4 cmp 65536L;

        if $b5 <= 0 goto label01;

        $r39 = new java.io.IOException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Metadata too big; corrupt? size=");

        $l26 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l26);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>($r46);

        throw $r39;

     label01:
        $l6 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $i7 = (int) $l6;

        r3 = newarray (byte)[$i7];

        $l9 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $i8 = (int) $l9;

        $i11 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r2, r3, 0, $i8);

        $l13 = (long) $i11;

        $l10 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $b12 = $l13 cmp $l10;

        if $b12 != 0 goto label02;

        $l16 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l14 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $l15 = $l16 + $l14;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l15;

        goto label03;

     label02:
        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF in widget data");

        throw $r8;

     label03:
        r4 = newarray (java.lang.String)[1];

        i0 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, 0, r4);

        $r9 = r4[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        if i1 != 1 goto label12;

        i27 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i0, r4);

        r5 = r4[0];

        $r15 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label10;

        $r20 = new java.io.ByteArrayInputStream;

        $i21 = lengthof r3;

        $i20 = $i21 - i27;

        specialinvoke $r20.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r3, i27, $i20);

        r6 = $r20;

        $r23 = new java.io.DataInputStream;

        specialinvoke $r23.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r6);

        r7 = $r23;

     label04:
        $i19 = virtualinvoke r6.<java.io.ByteArrayInputStream: int available()>();

        if $i19 <= 0 goto label09;

        i2 = virtualinvoke r7.<java.io.DataInputStream: int readInt()>();

        i3 = virtualinvoke r7.<java.io.DataInputStream: int readInt()>();

        if i3 <= 65536 goto label05;

        $r32 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datum ");

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r42 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too big; corrupt? size=");

        $l25 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);

        $r38 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw $r32;

     label05:
        lookupswitch(i2)
        {
            case 33549569: goto label06;
            default: goto label07;
        };

     label06:
        $r25 = newarray (byte)[i3];

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: byte[] mWidgetData> = $r25;

        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: byte[] mWidgetData>;

        virtualinvoke r7.<java.io.DataInputStream: int read(byte[])>($r24);

        goto label08;

     label07:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring metadata blob ");

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r28 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r37);

        virtualinvoke r7.<java.io.DataInputStream: int skipBytes(int)>(i3);

     label08:
        goto label04;

     label09:
        goto label11;

     label10:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Metadata mismatch: package ");

        $r19 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but widget data for ");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r22);

     label11:
        goto label13;

     label12:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported metadata version ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r13);

     label13:
        return;
    }

    com.android.server.backup.BackupManagerService$RestorePolicy readAppManifest(com.android.server.backup.BackupManagerService$FileMetadata, java.io.InputStream) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        com.android.server.backup.BackupManagerService$FileMetadata r1;
        java.io.InputStream r2;
        byte[] r3;
        com.android.server.backup.BackupManagerService$RestorePolicy r4, $r46;
        java.lang.String[] r5;
        byte b0, $b8, $b15;
        int i1, i3, i4, i5, $i10, $i11, $i12, $i21, $i23, $i25, $i28, $i29, i37, i38, i39, i40, i41, i42, i43, i44;
        java.lang.String r6, $r9, $r14, $r16, $r17, $r19, $r21, $r25, $r26, $r27, $r28, $r31, $r32, $r38, $r39, $r41, $r43, $r50, $r53, $r54, $r57, $r59, $r69, $r71, $r73, $r78, $r80, $r81, $r83, $r85, $r89, $r92, $r94, $r96;
        boolean z0, $z1, $z2;
        android.content.pm.Signature[] r7;
        long $l6, $l7, $l9, $l13, $l14, $l16, $l17, $l18, $l32;
        java.io.IOException $r8, $r72;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15, $r18, $r20, $r22, $r23, $r24, $r29, $r30, $r37, $r40, $r42, $r45, $r47, $r48, $r49, $r52, $r55, $r56, $r58, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r74, $r75, $r76, $r79, $r82, $r87, $r88, $r90, $r91, $r93, $r97, $r98;
        java.util.HashMap $r33;
        com.android.server.backup.BackupManagerService $r35;
        android.content.pm.PackageManager $r36;
        android.content.pm.ApplicationInfo $r44, $r51, $r70;
        java.lang.NumberFormatException $r77;
        android.content.pm.Signature $r84;
        android.content.pm.PackageManager$NameNotFoundException $r86;
        java.lang.IllegalArgumentException $r95, r102;
        android.content.pm.PackageInfo r99;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService$FileMetadata;

        r2 := @parameter1: java.io.InputStream;

        $l6 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $b8 = $l6 cmp 65536L;

        if $b8 <= 0 goto label01;

        $r72 = new java.io.IOException;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore manifest too big; corrupt? size=");

        $l32 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l32);

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r72.<java.io.IOException: void <init>(java.lang.String)>($r78);

        throw $r72;

     label01:
        $l7 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $i10 = (int) $l7;

        r3 = newarray (byte)[$i10];

        $l9 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $i12 = (int) $l9;

        $i11 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r2, r3, 0, $i12);

        $l13 = (long) $i11;

        $l14 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $b15 = $l13 cmp $l14;

        if $b15 != 0 goto label02;

        $l16 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l17 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $l18 = $l16 + $l17;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l18;

        goto label03;

     label02:
        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF in manifest");

        throw $r8;

     label03:
        r4 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy IGNORE>;

        r5 = newarray (java.lang.String)[1];

        b0 = 0;

     label04:
        i37 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, b0, r5);

        $r9 = r5[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        if i1 != 1 goto label23;

        i38 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i37, r5);

        r6 = r5[0];

        $r17 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label21;

        i39 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i38, r5);

        $r25 = r5[0];

        i40 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        i41 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i39, r5);

        $r26 = r5[0];

        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        i42 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i41, r5);

        $r28 = r5[0];

        $i21 = virtualinvoke $r28.<java.lang.String: int length()>();

        if $i21 <= 0 goto label05;

        $r73 = r5[0];

        goto label06;

     label05:
        $r73 = null;

     label06:
        r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String installerPackageName> = $r73;

        i43 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i42, r5);

        $r27 = r5[0];

        z0 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("1");

        i44 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i43, r5);

        $r32 = r5[0];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

        if i3 <= 0 goto label19;

        r7 = newarray (android.content.pm.Signature)[i3];

        i4 = 0;

     label07:
        if i4 >= i3 goto label08;

        i44 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i44, r5);

        $r84 = new android.content.pm.Signature;

        $r83 = r5[0];

        specialinvoke $r84.<android.content.pm.Signature: void <init>(java.lang.String)>($r83);

        r7[i4] = $r84;

        i4 = i4 + 1;

        goto label07;

     label08:
        $r33 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.util.HashMap mManifestSignatures>;

        $r39 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, r7);

     label09:
        $r35 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: com.android.server.backup.BackupManagerService this$0>;

        $r36 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r35);

        $r43 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        r99 = virtualinvoke $r36.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r43, 64);

        $r44 = r99.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i5 = $r44.<android.content.pm.ApplicationInfo: int flags>;

        $i23 = i5 & 32768;

        if $i23 == 0 goto label14;

        $r51 = r99.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i25 = $r51.<android.content.pm.ApplicationInfo: int uid>;

        if $i25 >= 10000 goto label10;

        $r70 = r99.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r69 = $r70.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r69 == null goto label13;

     label10:
        $z2 = staticinvoke <com.android.server.backup.BackupManagerService: boolean signaturesMatch(android.content.pm.Signature[],android.content.pm.PackageInfo)>(r7, r99);

        if $z2 == 0 goto label12;

        $i28 = r99.<android.content.pm.PackageInfo: int versionCode>;

        if $i28 < i40 goto label11;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "Sig + version match; taking data");

        r4 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT>;

        goto label15;

     label11:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data version ");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is newer than installed version ");

        $i29 = r99.<android.content.pm.PackageInfo: int versionCode>;

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - requiring apk");

        $r71 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r71);

        r4 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT_IF_APK>;

        goto label15;

     label12:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore manifest signatures do not match installed application for ");

        $r59 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r57);

        goto label15;

     label13:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r80 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r79 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is system level with no agent");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r81);

        goto label15;

     label14:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore manifest from ");

        $r41 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but allowBackup=false");

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r50);

     label15:
        goto label17;

     label16:
        $r86 := @caughtexception;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r89 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r98 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not installed; requiring apk in dataset");

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r96);

        r4 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT_IF_APK>;

     label17:
        $r46 = <com.android.server.backup.BackupManagerService$RestorePolicy: com.android.server.backup.BackupManagerService$RestorePolicy ACCEPT_IF_APK>;

        if r4 != $r46 goto label18;

        if z0 != 0 goto label18;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot restore package ");

        $r54 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r55 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r52 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without the matching .apk");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r53);

     label18:
        goto label20;

     label19:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing signature on backed-up package ");

        $r31 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r38);

     label20:
        goto label22;

     label21:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected package ");

        $r19 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but restore manifest claims ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r21);

     label22:
        goto label24;

     label23:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown restore manifest version ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for package ");

        $r16 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r14);

     label24:
        goto label27;

     label25:
        $r77 := @caughtexception;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupt restore manifest for package ");

        $r92 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r94);

        goto label27;

     label26:
        $r95 := @caughtexception;

        r102 = $r95;

        $r85 = virtualinvoke r102.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r85);

     label27:
        return r4;

        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label15 with label16;
        catch java.lang.NumberFormatException from label04 to label24 with label25;
        catch java.lang.IllegalArgumentException from label04 to label24 with label26;
    }

    int extractLine(byte[], int, java.lang.String[]) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, $i4, i5;
        java.lang.String[] r2;
        byte b3;
        java.lang.String $r3;
        java.io.IOException $r4;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String[];

        i1 = lengthof r1;

        if i0 < i1 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Incomplete data");

        throw $r4;

     label1:
        i2 = i0;

     label2:
        if i2 >= i1 goto label4;

        b3 = r1[i2];

        if b3 != 10 goto label3;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r3 = new java.lang.String;

        $i4 = i2 - i0;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>(r1, i0, $i4);

        r2[0] = $r3;

        i5 = i2 + 1;

        return i5;
    }

    void dumpFileMetadata(com.android.server.backup.BackupManagerService$FileMetadata)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        com.android.server.backup.BackupManagerService$FileMetadata r1;
        java.lang.StringBuilder r2, $r4;
        java.util.Date r3, $r17;
        int $i0;
        long $l1, $l2, $l4, $l5, $l7, $l9, $l10, $l12, $l13, $l15, $l16, $l18, $l19, $l20, $l21, $l23, $l24, $l26, $l28, $l29;
        byte $b3, $b6, $b8, $b11, $b14, $b17, $b22, $b25, $b27;
        java.lang.Object[] $r15;
        java.lang.Long $r16;
        java.lang.String $r19, $r20, $r22, $r25, $r29, $r31;
        java.text.SimpleDateFormat $r23;
        char $c30, $c31, $c32, $c33, $c35, $c36, $c37, $c38, $c39, $c40;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService$FileMetadata;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(128);

        r2 = $r4;

        $i0 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: int type>;

        if $i0 != 2 goto label01;

        $c40 = 100;

        goto label02;

     label01:
        $c40 = 45;

     label02:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c40);

        $l1 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l2 = $l1 & 256L;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label03;

        $c39 = 114;

        goto label04;

     label03:
        $c39 = 45;

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c39);

        $l4 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l5 = $l4 & 128L;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label05;

        $c38 = 119;

        goto label06;

     label05:
        $c38 = 45;

     label06:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c38);

        $l7 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l9 = $l7 & 64L;

        $b8 = $l9 cmp 0L;

        if $b8 == 0 goto label07;

        $c37 = 120;

        goto label08;

     label07:
        $c37 = 45;

     label08:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c37);

        $l10 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l12 = $l10 & 32L;

        $b11 = $l12 cmp 0L;

        if $b11 == 0 goto label09;

        $c33 = 114;

        goto label10;

     label09:
        $c33 = 45;

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c33);

        $l13 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l15 = $l13 & 16L;

        $b14 = $l15 cmp 0L;

        if $b14 == 0 goto label11;

        $c32 = 119;

        goto label12;

     label11:
        $c32 = 45;

     label12:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c32);

        $l16 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l18 = $l16 & 8L;

        $b17 = $l18 cmp 0L;

        if $b17 == 0 goto label13;

        $c31 = 120;

        goto label14;

     label13:
        $c31 = 45;

     label14:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c31);

        $l19 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l21 = $l19 & 4L;

        $b22 = $l21 cmp 0L;

        if $b22 == 0 goto label15;

        $c30 = 114;

        goto label16;

     label15:
        $c30 = 45;

     label16:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c30);

        $l20 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l24 = $l20 & 2L;

        $b25 = $l24 cmp 0L;

        if $b25 == 0 goto label17;

        $c36 = 119;

        goto label18;

     label17:
        $c36 = 45;

     label18:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c36);

        $l23 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mode>;

        $l26 = $l23 & 1L;

        $b27 = $l26 cmp 0L;

        if $b27 == 0 goto label19;

        $c35 = 120;

        goto label20;

     label19:
        $c35 = 45;

     label20:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c35);

        $r15 = newarray (java.lang.Object)[1];

        $l28 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l28);

        $r15[0] = $r16;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %9d ", $r15);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = new java.util.Date;

        $l29 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: long mtime>;

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l29);

        r3 = $r17;

        $r23 = new java.text.SimpleDateFormat;

        specialinvoke $r23.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MMM dd HH:mm:ss ");

        $r22 = virtualinvoke $r23.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r20 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r25 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r29 = r1.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r31);

        return;
    }

    com.android.server.backup.BackupManagerService$FileMetadata readTarHeaders(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        com.android.server.backup.BackupManagerService$FileMetadata r3, $r5;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        java.lang.String r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r32, $r34, $r38, $r41, $r42, $r43, $r46, $r48, $r54, $r57, $r58, $r64, $r65, $r70, $r71, $r73, $r75, $r77;
        byte b0, $b6;
        int i1, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i18, i20;
        long $l2, $l3, $l4, $l7;
        java.lang.StringBuilder $r26, $r31, $r33, $r35, $r36, $r39, $r40, $r44, $r45, $r47, $r49, $r50, $r51, $r52, $r53, $r55, $r56, $r59, $r61, $r62, $r63, $r68, $r69, $r72, $r74, $r76, $r78;
        java.io.IOException $r27, $r37, $r60, $r66, $r67, r79;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 = newarray (byte)[512];

        r3 = null;

        z0 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: boolean readTarHeader(java.io.InputStream,byte[])>(r1, r2);

        if z0 == 0 goto label18;

     label01:
        $r5 = new com.android.server.backup.BackupManagerService$FileMetadata;

        specialinvoke $r5.<com.android.server.backup.BackupManagerService$FileMetadata: void <init>()>();

        r3 = $r5;

        $l2 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long extractRadix(byte[],int,int,int)>(r2, 124, 12, 8);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size> = $l2;

        $l3 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long extractRadix(byte[],int,int,int)>(r2, 136, 12, 8);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: long mtime> = $l3;

        $l4 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long extractRadix(byte[],int,int,int)>(r2, 100, 8, 8);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: long mode> = $l4;

        $r6 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String extractString(byte[],int,int)>(r2, 345, 155);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r6;

        r4 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: java.lang.String extractString(byte[],int,int)>(r2, 0, 100);

        $i5 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i5 <= 0 goto label03;

        $r65 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $i18 = virtualinvoke $r65.<java.lang.String: int length()>();

        if $i18 <= 0 goto label02;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r71 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r69 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r70;

     label02:
        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r73 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r73;

     label03:
        b0 = r2[156];

        if b0 != 120 goto label06;

        z5 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: boolean readPaxExtendedHeader(java.io.InputStream,com.android.server.backup.BackupManagerService$FileMetadata)>(r1, r3);

        if z5 == 0 goto label04;

        z5 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: boolean readTarHeader(java.io.InputStream,byte[])>(r1, r2);

     label04:
        if z5 != 0 goto label05;

        $r66 = new java.io.IOException;

        specialinvoke $r66.<java.io.IOException: void <init>(java.lang.String)>("Bad or missing pax header");

        throw $r66;

     label05:
        b0 = r2[156];

     label06:
        lookupswitch(b0)
        {
            case 0: goto label09;
            case 48: goto label07;
            case 53: goto label08;
            default: goto label11;
        };

     label07:
        r3.<com.android.server.backup.BackupManagerService$FileMetadata: int type> = 1;

        goto label12;

     label08:
        r3.<com.android.server.backup.BackupManagerService$FileMetadata: int type> = 2;

        $l7 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $b6 = $l7 cmp 0L;

        if $b6 == 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Directory entry with nonzero size in header");

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: long size> = 0L;

        goto label12;

     label09:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saw type=0 in tar header block, info=");

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r54);

     label10:
        return null;

     label11:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tar entity type: ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r58 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r58);

        $r60 = new java.io.IOException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown entity type ");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<java.io.IOException: void <init>(java.lang.String)>($r57);

        throw $r60;

     label12:
        $r7 = "shared/";

        $r9 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r8 = "shared/";

        $i8 = virtualinvoke $r8.<java.lang.String: int length()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r9, 0, $i8);

        if $z1 == 0 goto label13;

        $r43 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r42 = "shared/";

        $i13 = virtualinvoke $r42.<java.lang.String: int length()>();

        $r38 = virtualinvoke $r43.<java.lang.String: java.lang.String substring(int)>($i13);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r38;

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName> = "com.android.sharedstoragebackup";

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain> = "shared";

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File in shared storage: ");

        $r46 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r48);

        goto label16;

     label13:
        $r11 = "apps/";

        $r12 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r10 = "apps/";

        $i9 = virtualinvoke $r10.<java.lang.String: int length()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r12, 0, $i9);

        if $z2 == 0 goto label16;

        $r15 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r14 = "apps/";

        $i10 = virtualinvoke $r14.<java.lang.String: int length()>();

        $r13 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>($i10);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r13;

        $r18 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        i1 = virtualinvoke $r18.<java.lang.String: int indexOf(int)>(47);

        if i1 >= 0 goto label14;

        $r37 = new java.io.IOException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal semantic path in ");

        $r34 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r41);

        throw $r37;

     label14:
        $r16 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String packageName> = $r17;

        $r21 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $i11 = i1 + 1;

        $r19 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int)>($i11);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r19;

        $r20 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("_manifest");

        if $z4 != 0 goto label16;

        $r23 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("_meta");

        if $z3 != 0 goto label16;

        $r22 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        i20 = virtualinvoke $r22.<java.lang.String: int indexOf(int)>(47);

        if i20 >= 0 goto label15;

        $r27 = new java.io.IOException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal semantic path in non-manifest ");

        $r32 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r30);

        throw $r27;

     label15:
        $r25 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $r24 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, i20);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String domain> = $r24;

        $r29 = r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path>;

        $i12 = i20 + 1;

        $r28 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>($i12);

        r3.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = $r28;

     label16:
        goto label18;

     label17:
        $r67 := @caughtexception;

        r79 = $r67;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse error in header: ");

        $r77 = virtualinvoke r79.<java.io.IOException: java.lang.String getMessage()>();

        $r76 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r75);

        specialinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void HEXLOG(byte[])>(r2);

        throw r79;

     label18:
        return r3;

        catch java.io.IOException from label01 to label10 with label17;
        catch java.io.IOException from label11 to label16 with label17;
    }

    private void HEXLOG(byte[])
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, i3, $i6, $i7;
        java.lang.StringBuilder r2, $r3;
        java.lang.Object[] $r4, $r9;
        java.lang.Integer $r5;
        java.lang.String $r6, $r8, $r10;
        byte $b5;
        java.lang.Byte $r11;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: byte[];

        i0 = 0;

        i1 = lengthof r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(64);

        r2 = $r3;

     label1:
        if i1 <= 0 goto label6;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04x   ", $r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        if i1 <= 16 goto label2;

        $i7 = 16;

        goto label3;

     label2:
        $i7 = i1;

     label3:
        i2 = $i7;

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        $r9 = newarray (java.lang.Object)[1];

        $i6 = i0 + i3;

        $b5 = r1[$i6];

        $r11 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        $r9[0] = $r11;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x ", $r9);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i3 = i3 + 1;

        goto label4;

     label5:
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("hexdump", $r8);

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        i1 = i1 - i2;

        i0 = i0 + i2;

        goto label1;

     label6:
        return;
    }

    int readExactly(java.io.InputStream, byte[], int, int) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i1 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size must be > 0");

        throw $r3;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $i5 = i0 + i2;

        $i4 = i1 - i2;

        i3 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, $i5, $i4);

        if i3 > 0 goto label3;

        goto label4;

     label3:
        i2 = i2 + i3;

        goto label2;

     label4:
        return i2;
    }

    boolean readTarHeader(java.io.InputStream, byte[]) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0;
        long $l1, $l2;
        java.io.IOException $r3;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r1, r2, 0, 512);

        if i0 != 0 goto label1;

        return 0;

     label1:
        if i0 >= 512 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Unable to read full block header");

        throw $r3;

     label2:
        $l1 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $l2 = $l1 + 512L;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l2;

        return 1;
    }

    boolean readPaxExtendedHeader(java.io.InputStream, com.android.server.backup.BackupManagerService$FileMetadata) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.io.InputStream r1;
        com.android.server.backup.BackupManagerService$FileMetadata r2;
        int i0, i1, i2, i3, i4, i5, i6, $i12, $i13, $i14, $i15, $i17, $i20, $i22, $i25, $i26, $i27, $i28, i35;
        byte[] r3;
        java.lang.String r4, r5, $r6, $r7, $r8, $r9, $r13, $r19, $r26;
        long $l7, $l9, $l10, $l11, $l16, $l18, $l19, $l21, $l23, $l30, $l32, $l34;
        byte $b8, $b24, $b31;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10, $r11, $r12, $r17, $r18, $r20, $r21, $r22, $r23, $r25;
        java.io.IOException $r14, $r15, $r16, $r24;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.android.server.backup.BackupManagerService$FileMetadata;

        $l7 = r2.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $b8 = $l7 cmp 32768L;

        if $b8 <= 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspiciously large pax header size ");

        $l32 = r2.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l32);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - aborting");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r19);

        $r24 = new java.io.IOException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sanity failure: pax header size ");

        $l34 = r2.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l34);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r24;

     label01:
        $l9 = r2.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        $l11 = $l9 + 511L;

        $l10 = $l11 >> 9;

        i0 = (int) $l10;

        $i13 = i0 * 512;

        r3 = newarray (byte)[$i13];

        $i12 = lengthof r3;

        $i15 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r1, r3, 0, $i12);

        $i14 = lengthof r3;

        if $i15 >= $i14 goto label02;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Unable to read full pax header");

        throw $r14;

     label02:
        $l19 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes>;

        $i17 = lengthof r3;

        $l16 = (long) $i17;

        $l18 = $l19 + $l16;

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long mBytes> = $l18;

        $l21 = r2.<com.android.server.backup.BackupManagerService$FileMetadata: long size>;

        i1 = (int) $l21;

        i2 = 0;

     label03:
        i3 = i2 + 1;

     label04:
        if i3 >= i1 goto label05;

        $b31 = r3[i3];

        if $b31 == 32 goto label05;

        i3 = i3 + 1;

        goto label04;

     label05:
        if i3 < i1 goto label06;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Invalid pax data");

        throw $r15;

     label06:
        $i20 = i3 - i2;

        $l23 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: long extractRadix(byte[],int,int,int)>(r3, i2, $i20, 10);

        i4 = (int) $l23;

        i5 = i3 + 1;

        $i22 = i2 + i4;

        i35 = $i22 - 1;

        i6 = i5 + 1;

     label07:
        $b24 = r3[i6];

        if $b24 == 61 goto label08;

        if i6 > i35 goto label08;

        i6 = i6 + 1;

        goto label07;

     label08:
        if i6 <= i35 goto label09;

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Invalid pax declaration");

        throw $r16;

     label09:
        $r6 = new java.lang.String;

        $i27 = i6 - i5;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, i5, $i27, "UTF-8");

        r4 = $r6;

        $r7 = new java.lang.String;

        $i28 = i6 + 1;

        $i25 = i35 - i6;

        $i26 = $i25 - 1;

        specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, $i28, $i26, "UTF-8");

        r5 = $r7;

        $r9 = "path";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label10;

        r2.<com.android.server.backup.BackupManagerService$FileMetadata: java.lang.String path> = r5;

        goto label12;

     label10:
        $r8 = "size";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label11;

        $l30 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r5);

        r2.<com.android.server.backup.BackupManagerService$FileMetadata: long size> = $l30;

        goto label12;

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled pax key: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r13);

     label12:
        i2 = i2 + i4;

        if i2 < i1 goto label03;

        return 1;
    }

    long extractRadix(byte[], int, int, int) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, i4, i5, $i8, $i9, $i10;
        long l3, $l11, $l12, $l13;
        byte b6;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        char $c7;
        java.lang.String $r7;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 = 0L;

        i4 = i0 + i1;

        i5 = i0;

     label1:
        if i5 >= i4 goto label5;

        b6 = r1[i5];

        if b6 == 0 goto label5;

        if b6 != 32 goto label2;

        goto label5;

     label2:
        if b6 < 48 goto label3;

        $i9 = 48 + i2;

        $i8 = $i9 - 1;

        if b6 <= $i8 goto label4;

     label3:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number in header: \'");

        $c7 = (char) b6;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for radix ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label4:
        $l11 = (long) i2;

        $l12 = $l11 * l3;

        $i10 = b6 - 48;

        $l13 = (long) $i10;

        l3 = $l12 + $l13;

        i5 = i5 + 1;

        goto label1;

     label5:
        return l3;
    }

    java.lang.String extractString(byte[], int, int) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;
        java.lang.String $r2;
        byte $b5;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + i1;

        i3 = i0;

     label1:
        if i3 >= i2 goto label2;

        $b5 = r1[i3];

        if $b5 == 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        $i4 = i3 - i0;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, $i4, "US-ASCII");

        return $r2;
    }

    void sendStartRestore()
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        android.app.backup.IFullBackupRestoreObserver $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        $r2 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r3.<android.app.backup.IFullBackupRestoreObserver: void onStartRestore()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full restore observer went away: startRestore");

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendOnRestorePackage(java.lang.String)
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        java.lang.String r1;
        android.app.backup.IFullBackupRestoreObserver $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r3 == null goto label4;

     label1:
        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r4.<android.app.backup.IFullBackupRestoreObserver: void onRestorePackage(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full restore observer went away: restorePackage");

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendEndRestore()
    {
        com.android.server.backup.BackupManagerService$PerformAdbRestoreTask r0;
        android.app.backup.IFullBackupRestoreObserver $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformAdbRestoreTask;

        $r2 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r3.<android.app.backup.IFullBackupRestoreObserver: void onEndRestore()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full restore observer went away: endRestore");

        r0.<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
