public class com.android.server.location.ActivityRecognitionProxy extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.ServiceWatcher mServiceWatcher;
    private final android.hardware.location.ActivityRecognitionHardware mActivityRecognitionHardware;

    private void <init>(android.content.Context, android.os.Handler, android.hardware.location.ActivityRecognitionHardware, int, int, int)
    {
        com.android.server.location.ActivityRecognitionProxy r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.hardware.location.ActivityRecognitionHardware r3;
        int i0, i1, i2;
        com.android.server.location.ActivityRecognitionProxy$1 r4, $r5;
        com.android.server.ServiceWatcher $r6;

        r0 := @this: com.android.server.location.ActivityRecognitionProxy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.hardware.location.ActivityRecognitionHardware;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.ActivityRecognitionProxy: android.hardware.location.ActivityRecognitionHardware mActivityRecognitionHardware> = r3;

        $r5 = new com.android.server.location.ActivityRecognitionProxy$1;

        specialinvoke $r5.<com.android.server.location.ActivityRecognitionProxy$1: void <init>(com.android.server.location.ActivityRecognitionProxy)>(r0);

        r4 = $r5;

        $r6 = new com.android.server.ServiceWatcher;

        specialinvoke $r6.<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>(r1, "ActivityRecognitionProxy", "com.android.location.service.ActivityRecognitionProvider", i0, i1, i2, r4, r2);

        r0.<com.android.server.location.ActivityRecognitionProxy: com.android.server.ServiceWatcher mServiceWatcher> = $r6;

        return;
    }

    public static com.android.server.location.ActivityRecognitionProxy createAndBind(android.content.Context, android.os.Handler, android.hardware.location.ActivityRecognitionHardware, int, int, int)
    {
        android.content.Context r0;
        android.os.Handler r1;
        android.hardware.location.ActivityRecognitionHardware r2;
        int i0, i1, i2;
        com.android.server.location.ActivityRecognitionProxy r3, $r4;
        com.android.server.ServiceWatcher $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: android.hardware.location.ActivityRecognitionHardware;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r4 = new com.android.server.location.ActivityRecognitionProxy;

        specialinvoke $r4.<com.android.server.location.ActivityRecognitionProxy: void <init>(android.content.Context,android.os.Handler,android.hardware.location.ActivityRecognitionHardware,int,int,int)>(r0, r1, r2, i0, i1, i2);

        r3 = $r4;

        $r5 = r3.<com.android.server.location.ActivityRecognitionProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $z0 = virtualinvoke $r5.<com.android.server.ServiceWatcher: boolean start()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityRecognitionProxy", "ServiceWatcher could not start.");

        return null;

     label1:
        return r3;
    }

    private void bindProvider(android.hardware.location.ActivityRecognitionHardware)
    {
        com.android.server.location.ActivityRecognitionProxy r0;
        android.hardware.location.ActivityRecognitionHardware r1, $r6;
        android.hardware.location.IActivityRecognitionHardwareWatcher r2;
        android.os.RemoteException r3, $r7;
        com.android.server.ServiceWatcher $r4;
        android.os.IBinder $r5;

        r0 := @this: com.android.server.location.ActivityRecognitionProxy;

        r1 := @parameter0: android.hardware.location.ActivityRecognitionHardware;

        $r4 = r0.<com.android.server.location.ActivityRecognitionProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r5 = virtualinvoke $r4.<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>();

        r2 = staticinvoke <android.hardware.location.IActivityRecognitionHardwareWatcher$Stub: android.hardware.location.IActivityRecognitionHardwareWatcher asInterface(android.os.IBinder)>($r5);

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityRecognitionProxy", "No provider instance found on connection.");

        return;

     label1:
        $r6 = r0.<com.android.server.location.ActivityRecognitionProxy: android.hardware.location.ActivityRecognitionHardware mActivityRecognitionHardware>;

        interfaceinvoke r2.<android.hardware.location.IActivityRecognitionHardwareWatcher: void onInstanceChanged(android.hardware.location.IActivityRecognitionHardware)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityRecognitionProxy", "Error delivering hardware interface.", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.hardware.location.ActivityRecognitionHardware access$000(com.android.server.location.ActivityRecognitionProxy)
    {
        com.android.server.location.ActivityRecognitionProxy r0;
        android.hardware.location.ActivityRecognitionHardware $r1;

        r0 := @parameter0: com.android.server.location.ActivityRecognitionProxy;

        $r1 = r0.<com.android.server.location.ActivityRecognitionProxy: android.hardware.location.ActivityRecognitionHardware mActivityRecognitionHardware>;

        return $r1;
    }

    static void access$100(com.android.server.location.ActivityRecognitionProxy, android.hardware.location.ActivityRecognitionHardware)
    {
        com.android.server.location.ActivityRecognitionProxy r0;
        android.hardware.location.ActivityRecognitionHardware r1;

        r0 := @parameter0: com.android.server.location.ActivityRecognitionProxy;

        r1 := @parameter1: android.hardware.location.ActivityRecognitionHardware;

        specialinvoke r0.<com.android.server.location.ActivityRecognitionProxy: void bindProvider(android.hardware.location.ActivityRecognitionHardware)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.location.ActivityRecognitionProxy: java.lang.String TAG> = "ActivityRecognitionProxy";

        return;
    }
}
