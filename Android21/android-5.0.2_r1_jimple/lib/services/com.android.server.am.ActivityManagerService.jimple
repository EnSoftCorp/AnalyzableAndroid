public final class com.android.server.am.ActivityManagerService extends android.app.ActivityManagerNative implements com.android.server.Watchdog$Monitor, com.android.internal.os.BatteryStatsImpl$BatteryCallback
{
    private static final java.lang.String USER_DATA_DIR;
    static final java.lang.String CALLED_PRE_BOOTS_FILENAME;
    static final java.lang.String TAG;
    static final java.lang.String TAG_MU;
    static final boolean DEBUG;
    static final boolean localLOGV;
    static final boolean DEBUG_BACKUP;
    static final boolean DEBUG_BROADCAST;
    static final boolean DEBUG_BROADCAST_LIGHT;
    static final boolean DEBUG_BACKGROUND_BROADCAST;
    static final boolean DEBUG_CLEANUP;
    static final boolean DEBUG_CONFIGURATION;
    static final boolean DEBUG_FOCUS;
    static final boolean DEBUG_IMMERSIVE;
    static final boolean DEBUG_MU;
    static final boolean DEBUG_OOM_ADJ;
    static final boolean DEBUG_LRU;
    static final boolean DEBUG_PAUSE;
    static final boolean DEBUG_POWER;
    static final boolean DEBUG_POWER_QUICK;
    static final boolean DEBUG_PROCESS_OBSERVERS;
    static final boolean DEBUG_PROCESSES;
    static final boolean DEBUG_PROVIDER;
    static final boolean DEBUG_RESULTS;
    static final boolean DEBUG_SERVICE;
    static final boolean DEBUG_SERVICE_EXECUTING;
    static final boolean DEBUG_STACK;
    static final boolean DEBUG_SWITCH;
    static final boolean DEBUG_TASKS;
    static final boolean DEBUG_THUMBNAILS;
    static final boolean DEBUG_TRANSITION;
    static final boolean DEBUG_URI_PERMISSION;
    static final boolean DEBUG_USER_LEAVING;
    static final boolean DEBUG_VISBILITY;
    static final boolean DEBUG_PSS;
    static final boolean DEBUG_LOCKSCREEN;
    static final boolean DEBUG_RECENTS;
    static final boolean VALIDATE_TOKENS;
    static final boolean SHOW_ACTIVITY_START_TIME;
    static final long BATTERY_STATS_TIME;
    static final boolean MONITOR_CPU_USAGE;
    static final long MONITOR_CPU_MIN_TIME;
    static final long MONITOR_CPU_MAX_TIME;
    static final boolean MONITOR_THREAD_CPU_USAGE;
    static final int STOCK_PM_FLAGS;
    private static final java.lang.String SYSTEM_DEBUGGABLE;
    static final boolean IS_USER_BUILD;
    static final int MAX_RECENT_BITMAPS;
    static final long APP_SWITCH_DELAY_TIME;
    static final int PROC_START_TIMEOUT;
    static final int PROC_START_TIMEOUT_WITH_WRAPPER;
    static final int GC_TIMEOUT;
    static final int GC_MIN_INTERVAL;
    static final int FULL_PSS_MIN_INTERVAL;
    static final int FULL_PSS_LOWERED_INTERVAL;
    static final int POWER_CHECK_DELAY;
    static final int WAKE_LOCK_MIN_CHECK_DURATION;
    static final int CPU_MIN_CHECK_DURATION;
    static final int BROADCAST_FG_TIMEOUT;
    static final int BROADCAST_BG_TIMEOUT;
    static final int KEY_DISPATCHING_TIMEOUT;
    static final int INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT;
    static final int USER_SWITCH_TIMEOUT;
    static final int MAX_RUNNING_USERS;
    static final int PENDING_ASSIST_EXTRAS_TIMEOUT;
    static final int MAX_PERSISTED_URI_GRANTS;
    static final int MY_PID;
    static final java.lang.String[] EMPTY_STRING_ARRAY;
    static final int DROPBOX_MAX_SIZE;
    static final int ALLOW_NON_FULL;
    static final int ALLOW_NON_FULL_IN_PROFILE;
    static final int ALLOW_FULL_ONLY;
    static final int LAST_PREBOOT_DELIVERED_FILE_VERSION;
    com.android.server.SystemServiceManager mSystemServiceManager;
    com.android.server.am.ActivityStackSupervisor mStackSupervisor;
    public com.android.server.firewall.IntentFirewall mIntentFirewall;
    private boolean mShowDialogs;
    com.android.server.am.BroadcastQueue mFgBroadcastQueue;
    com.android.server.am.BroadcastQueue mBgBroadcastQueue;
    final com.android.server.am.BroadcastQueue[] mBroadcastQueues;
    com.android.server.am.ActivityRecord mFocusedActivity;
    java.util.ArrayList mRecentTasks;
    java.util.ArrayList mTmpRecents;
    android.content.ComponentName mLastAddedTaskComponent;
    int mLastAddedTaskUid;
    android.content.pm.ActivityInfo mLastAddedTaskActivity;
    final java.util.ArrayList mPendingAssistExtras;
    final com.android.server.am.ProcessList mProcessList;
    final com.android.internal.app.ProcessMap mProcessNames;
    final com.android.server.am.ProcessStatsService mProcessStats;
    final android.util.SparseArray mIsolatedProcesses;
    int mNextIsolatedProcessUid;
    com.android.server.am.ProcessRecord mHeavyWeightProcess;
    final com.android.internal.app.ProcessMap mProcessCrashTimes;
    final com.android.internal.app.ProcessMap mBadProcesses;
    final android.util.SparseArray mPidsSelfLocked;
    final android.util.SparseArray mForegroundProcesses;
    final java.util.ArrayList mProcessesOnHold;
    final java.util.ArrayList mPersistentStartingProcesses;
    final java.util.ArrayList mRemovedProcesses;
    final java.util.ArrayList mLruProcesses;
    int mLruProcessActivityStart;
    int mLruProcessServiceStart;
    final java.util.ArrayList mProcessesToGc;
    final java.util.ArrayList mPendingPssProcesses;
    long mLastFullPssTime;
    boolean mFullPssPending;
    com.android.server.am.ProcessRecord mHomeProcess;
    com.android.server.am.ProcessRecord mPreviousProcess;
    long mPreviousProcessVisibleTime;
    final android.util.SparseArray mStartedUsers;
    final java.util.ArrayList mUserLru;
    int[] mStartedUserArray;
    final android.os.RemoteCallbackList mUserSwitchObservers;
    java.lang.Object mCurUserSwitchCallback;
    final com.android.server.am.CompatModePackages mCompatModePackages;
    final java.util.HashMap mIntentSenderRecords;
    private final java.util.HashSet mAlreadyLoggedViolatedStacks;
    private static final int MAX_DUP_SUPPRESSED_STACKS;
    private final java.lang.StringBuilder mStrictModeBuffer;
    final java.util.HashMap mRegisteredReceivers;
    final com.android.server.IntentResolver mReceiverResolver;
    final android.util.SparseArray mStickyBroadcasts;
    final com.android.server.am.ActiveServices mServices;
    java.lang.String mBackupAppName;
    com.android.server.am.BackupRecord mBackupTarget;
    final com.android.server.am.ProviderMap mProviderMap;
    final java.util.ArrayList mLaunchingProviders;
    private final android.util.AtomicFile mGrantFile;
    private static final java.lang.String TAG_URI_GRANTS;
    private static final java.lang.String TAG_URI_GRANT;
    private static final java.lang.String ATTR_USER_HANDLE;
    private static final java.lang.String ATTR_SOURCE_USER_ID;
    private static final java.lang.String ATTR_TARGET_USER_ID;
    private static final java.lang.String ATTR_SOURCE_PKG;
    private static final java.lang.String ATTR_TARGET_PKG;
    private static final java.lang.String ATTR_URI;
    private static final java.lang.String ATTR_MODE_FLAGS;
    private static final java.lang.String ATTR_CREATED_TIME;
    private static final java.lang.String ATTR_PREFIX;
    private final android.util.SparseArray mGrantedUriPermissions;
    com.android.server.am.CoreSettingsObserver mCoreSettingsObserver;
    private static final java.lang.ThreadLocal sCallerIdentity;
    final com.android.server.am.BatteryStatsService mBatteryStatsService;
    android.app.usage.UsageStatsManagerInternal mUsageStatsService;
    final com.android.server.AppOpsService mAppOpsService;
    final com.android.server.am.TaskPersister mTaskPersister;
    android.content.res.Configuration mConfiguration;
    int mConfigurationSeq;
    final int GL_ES_VERSION;
    java.util.HashMap mAppBindArgs;
    final java.lang.StringBuilder mStringBuilder;
    android.content.ComponentName mTopComponent;
    java.lang.String mTopAction;
    java.lang.String mTopData;
    boolean mProcessesReady;
    boolean mSystemReady;
    boolean mBooting;
    boolean mCallFinishBooting;
    boolean mBootAnimationComplete;
    boolean mWaitingUpdate;
    boolean mDidUpdate;
    boolean mOnBattery;
    boolean mLaunchWarningShown;
    android.content.Context mContext;
    int mFactoryTest;
    boolean mCheckedForSetup;
    long mAppSwitchesAllowedTime;
    boolean mDidAppSwitch;
    long mLastPowerCheckRealtime;
    long mLastPowerCheckUptime;
    private boolean mSleeping;
    private boolean mRunningVoice;
    private boolean mWentToSleep;
    private boolean mLockScreenShown;
    boolean mShuttingDown;
    int mAdjSeq;
    int mLruSeq;
    int mNumNonCachedProcs;
    int mNumCachedHiddenProcs;
    int mNumServiceProcs;
    int mNewNumAServiceProcs;
    int mNewNumServiceProcs;
    boolean mAllowLowerMemLevel;
    int mLastMemoryLevel;
    int mLastNumProcesses;
    long mLastIdleTime;
    long mLowRamTimeSinceLastIdle;
    long mLowRamStartTime;
    private java.lang.String mCurResumedPackage;
    private int mCurResumedUid;
    final com.android.internal.app.ProcessMap mForegroundPackages;
    boolean mDidDexOpt;
    boolean mSafeMode;
    java.lang.String mDebugApp;
    boolean mWaitForDebugger;
    boolean mDebugTransient;
    java.lang.String mOrigDebugApp;
    boolean mOrigWaitForDebugger;
    boolean mAlwaysFinishActivities;
    android.app.IActivityController mController;
    java.lang.String mProfileApp;
    com.android.server.am.ProcessRecord mProfileProc;
    java.lang.String mProfileFile;
    android.os.ParcelFileDescriptor mProfileFd;
    int mSamplingInterval;
    boolean mAutoStopProfiler;
    int mProfileType;
    java.lang.String mOpenGlTraceApp;
    final android.os.RemoteCallbackList mProcessObservers;
    com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges;
    final java.util.ArrayList mPendingProcessChanges;
    final java.util.ArrayList mAvailProcessChanges;
    final java.lang.Thread mProcessCpuThread;
    final com.android.internal.os.ProcessCpuTracker mProcessCpuTracker;
    final java.util.concurrent.atomic.AtomicLong mLastCpuTime;
    final java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree;
    long mLastWriteTime;
    final android.os.UpdateLock mUpdateLock;
    boolean mBooted;
    int mProcessLimit;
    int mProcessLimitOverride;
    com.android.server.wm.WindowManagerService mWindowManager;
    final android.app.ActivityThread mSystemThread;
    int mCurrentUserId;
    int mTargetUserId;
    int[] mCurrentProfileIds;
    android.util.SparseIntArray mUserProfileGroupIdsSelfLocked;
    private com.android.server.pm.UserManagerService mUserManager;
    static final int SHOW_ERROR_MSG;
    static final int SHOW_NOT_RESPONDING_MSG;
    static final int SHOW_FACTORY_ERROR_MSG;
    static final int UPDATE_CONFIGURATION_MSG;
    static final int GC_BACKGROUND_PROCESSES_MSG;
    static final int WAIT_FOR_DEBUGGER_MSG;
    static final int SERVICE_TIMEOUT_MSG;
    static final int UPDATE_TIME_ZONE;
    static final int SHOW_UID_ERROR_MSG;
    static final int IM_FEELING_LUCKY_MSG;
    static final int PROC_START_TIMEOUT_MSG;
    static final int DO_PENDING_ACTIVITY_LAUNCHES_MSG;
    static final int KILL_APPLICATION_MSG;
    static final int FINALIZE_PENDING_INTENT_MSG;
    static final int POST_HEAVY_NOTIFICATION_MSG;
    static final int CANCEL_HEAVY_NOTIFICATION_MSG;
    static final int SHOW_STRICT_MODE_VIOLATION_MSG;
    static final int CHECK_EXCESSIVE_WAKE_LOCKS_MSG;
    static final int CLEAR_DNS_CACHE_MSG;
    static final int UPDATE_HTTP_PROXY_MSG;
    static final int SHOW_COMPAT_MODE_DIALOG_MSG;
    static final int DISPATCH_PROCESSES_CHANGED;
    static final int DISPATCH_PROCESS_DIED;
    static final int REPORT_MEM_USAGE_MSG;
    static final int REPORT_USER_SWITCH_MSG;
    static final int CONTINUE_USER_SWITCH_MSG;
    static final int USER_SWITCH_TIMEOUT_MSG;
    static final int IMMERSIVE_MODE_LOCK_MSG;
    static final int PERSIST_URI_GRANTS_MSG;
    static final int REQUEST_ALL_PSS_MSG;
    static final int START_PROFILES_MSG;
    static final int UPDATE_TIME;
    static final int SYSTEM_USER_START_MSG;
    static final int SYSTEM_USER_CURRENT_MSG;
    static final int ENTER_ANIMATION_COMPLETE_MSG;
    static final int FINISH_BOOTING_MSG;
    static final int START_USER_SWITCH_MSG;
    static final int SEND_LOCALE_TO_MOUNT_DAEMON_MSG;
    static final int FIRST_ACTIVITY_STACK_MSG;
    static final int FIRST_BROADCAST_QUEUE_MSG;
    static final int FIRST_COMPAT_MODE_MSG;
    static final int FIRST_SUPERVISOR_STACK_MSG;
    android.app.AlertDialog mUidAlert;
    com.android.server.am.CompatModeDialog mCompatModeDialog;
    long mLastMemUsageReportTime;
    private com.android.server.am.LockToAppRequestDialog mLockToAppRequest;
    private boolean mUserIsMonkey;
    boolean mHasRecents;
    int mThumbnailWidth;
    int mThumbnailHeight;
    final com.android.server.ServiceThread mHandlerThread;
    final com.android.server.am.ActivityManagerService$MainHandler mHandler;
    static final int COLLECT_PSS_BG_MSG;
    final android.os.Handler mBgHandler;
    private final com.android.internal.content.PackageMonitor mPackageMonitor;
    private java.util.Comparator mTaskRecordComparator;
    static final long[] DUMP_MEM_BUCKETS;
    static final int[] DUMP_MEM_OOM_ADJ;
    static final java.lang.String[] DUMP_MEM_OOM_LABEL;
    static final java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL;

    com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        boolean z0, $z1;
        int $i0, $i1;
        com.android.server.am.BroadcastQueue $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        $i0 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i1 = $i0 & 268435456;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        goto label4;

     label3:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

     label4:
        return $r2;
    }

    com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue r3;
        com.android.server.am.BroadcastRecord r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        r4 = virtualinvoke r3.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>(r1);

        if r4 == null goto label2;

        return r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void setSystemProcess()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray r4, $r24, $r27;
        java.lang.Throwable r5, r6, $r28, $r29;
        com.android.server.am.ProcessStatsService $r7, $r22;
        com.android.server.am.ActivityManagerService$MemBinder $r8;
        com.android.server.am.ActivityManagerService$GraphicsBinder $r9;
        com.android.server.am.ActivityManagerService$DbBinder $r10;
        com.android.server.am.ActivityManagerService$CpuBinder $r11;
        com.android.server.am.ActivityManagerService$PermissionController $r12;
        android.content.pm.PackageManager $r13;
        android.content.Context $r14;
        android.app.ActivityThread $r15, $r21;
        java.lang.ClassLoader $r16;
        java.lang.Class $r17;
        java.lang.String $r18, $r25;
        int $i0, $i1, $i2;
        android.app.ActivityThread$ApplicationThread $r20;
        com.android.internal.app.ProcessMap $r26;
        android.content.pm.PackageManager$NameNotFoundException $r30, r32;
        java.lang.RuntimeException $r31;

        r0 := @this: com.android.server.am.ActivityManagerService;

     label01:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>("activity", r0, 1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("procstats", $r7);

        $r8 = new com.android.server.am.ActivityManagerService$MemBinder;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$MemBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("meminfo", $r8);

        $r9 = new com.android.server.am.ActivityManagerService$GraphicsBinder;

        specialinvoke $r9.<com.android.server.am.ActivityManagerService$GraphicsBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("gfxinfo", $r9);

        $r10 = new com.android.server.am.ActivityManagerService$DbBinder;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$DbBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("dbinfo", $r10);

        $r11 = new com.android.server.am.ActivityManagerService$CpuBinder;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService$CpuBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("cpuinfo", $r11);

        $r12 = new com.android.server.am.ActivityManagerService$PermissionController;

        specialinvoke $r12.<com.android.server.am.ActivityManagerService$PermissionController: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("permission", $r12);

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r13 = virtualinvoke $r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r13.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>("android", 1024);

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r17.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r15.<android.app.ActivityThread: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>(r1, $r16);

        r2 = r0;

        entermonitor r0;

     label02:
        $r18 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int)>(r1, $r18, 0, 0);

        r3.<com.android.server.am.ProcessRecord: boolean persistent> = 1;

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r3.<com.android.server.am.ProcessRecord: int pid> = $i0;

        r3.<com.android.server.am.ProcessRecord: int maxAdj> = -16;

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        $r20 = virtualinvoke $r21.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>($r20, $r22);

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r25 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i1 = r3.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r26.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r25, $i1, r3);

        $r24 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r24;

        entermonitor $r24;

     label03:
        $r27 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = r3.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r27.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r3);

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r28 := @caughtexception;

        r5 = $r28;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r3, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r29 := @caughtexception;

        r6 = $r29;

        exitmonitor r2;

     label10:
        throw r6;

     label11:
        goto label13;

     label12:
        $r30 := @caughtexception;

        r32 = $r30;

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to find android system package", r32);

        throw $r31;

     label13:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label11 with label12;
    }

    public void setWindowManager(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.am.ActivityStackSupervisor $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager> = r1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor: void setWindowManager(com.android.server.wm.WindowManagerService)>(r1);

        return;
    }

    public void setUsageStatsManager(android.app.usage.UsageStatsManagerInternal)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.usage.UsageStatsManagerInternal r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.usage.UsageStatsManagerInternal;

        r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService> = r1;

        return;
    }

    public void startObservingNativeCrashes()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.NativeCrashListener r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = new com.android.server.am.NativeCrashListener;

        specialinvoke $r2.<com.android.server.am.NativeCrashListener: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r1 = $r2;

        virtualinvoke r1.<com.android.server.am.NativeCrashListener: void start()>();

        return;
    }

    public com.android.internal.app.IAppOpsService getAppOpsService()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.AppOpsService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        return $r1;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Context r1, $r110;
        java.io.File r2, r3, $r66, $r79, $r85, $r91;
        com.android.server.am.BroadcastQueue[] $r4, $r61, $r69;
        java.util.ArrayList $r5, $r6, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r29, $r35, $r40, $r88;
        com.android.server.am.ProcessList $r7;
        com.android.internal.app.ProcessMap $r8, $r10, $r11, $r36;
        android.util.SparseArray $r9, $r12, $r13, $r20, $r30, $r32, $r90;
        long $l0, $l1;
        int[] $r21, $r45;
        java.util.HashMap $r23, $r28;
        android.os.RemoteCallbackList $r24, $r37;
        java.lang.StringBuilder $r25, $r31, $r50, $r53, $r54;
        java.util.HashSet $r26;
        com.android.server.am.ActivityManagerService$1 $r27;
        android.content.res.Configuration $r33, $r95, $r96, $r98;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r34;
        java.util.concurrent.atomic.AtomicLong $r38;
        java.util.concurrent.atomic.AtomicBoolean $r39;
        com.android.internal.os.ProcessCpuTracker $r41, $r93;
        android.util.SparseIntArray $r42;
        com.android.server.am.ActivityManagerService$2 $r43;
        android.os.UpdateLock $r44;
        com.android.server.am.ActivityManagerService$5 $r46;
        com.android.server.am.ActivityManagerService$3 $r47;
        android.os.Looper $r48, $r63;
        android.os.Handler $r49;
        android.app.ActivityThread $r51;
        int $i2, $i3, $i6;
        java.lang.String $r52;
        com.android.server.am.ActivityManagerService$MainHandler $r55, $r59, $r65, $r76, $r82, $r103, $r106, $r107;
        com.android.server.ServiceThread $r56, $r57, $r62;
        com.android.server.am.BroadcastQueue $r58, $r60, $r64, $r68;
        com.android.server.am.BatteryStatsService $r67, $r72, $r75, $r77, $r84;
        com.android.server.am.ActiveServices $r70;
        com.android.server.am.ProviderMap $r71;
        com.android.internal.os.BatteryStatsImpl $r73, $r74, $r78, $r83;
        boolean $z1;
        com.android.server.AppOpsService $r80;
        android.util.AtomicFile $r81;
        com.android.server.am.ProcessStatsService $r86;
        java.lang.Integer $r87;
        android.os.UserHandle $r89;
        com.android.server.am.UserStartedState $r92;
        com.android.server.am.CompatModePackages $r94;
        java.util.Locale $r97;
        com.android.server.am.ActivityManagerService$4 $r99;
        com.android.server.am.ActivityStackSupervisor $r100, $r102;
        com.android.server.am.TaskPersister $r101;
        com.android.server.am.ActivityManagerService$IntentFirewallInterface $r104;
        com.android.server.firewall.IntentFirewall $r105;
        com.android.server.Watchdog $r108, $r109;
        com.android.server.am.LockToAppRequestDialog $r111;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.app.ActivityManagerNative: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mShowDialogs> = 1;

        $r4 = newarray (com.android.server.am.BroadcastQueue)[2];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues> = $r4;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity> = null;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras> = $r6;

        $r7 = new com.android.server.am.ProcessList;

        specialinvoke $r7.<com.android.server.am.ProcessList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList> = $r7;

        $r8 = new com.android.internal.app.ProcessMap;

        specialinvoke $r8.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses> = $r9;

        r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid> = 0;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

        $r10 = new com.android.internal.app.ProcessMap;

        specialinvoke $r10.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes> = $r10;

        $r11 = new com.android.internal.app.ProcessMap;

        specialinvoke $r11.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses> = $r11;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked> = $r12;

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses> = $r15;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses> = $r17;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses> = $r16;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = 0;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc> = $r19;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses> = $r18;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = $l0;

        r0.<com.android.server.am.ActivityManagerService: boolean mFullPssPending> = 0;

        $r20 = new android.util.SparseArray;

        specialinvoke $r20.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers> = $r20;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru> = $r22;

        $r21 = newarray (int)[1];

        $r21[0] = 0;

        r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray> = $r21;

        $r24 = new android.os.RemoteCallbackList;

        specialinvoke $r24.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers> = $r24;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords> = $r23;

        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks> = $r26;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStrictModeBuffer> = $r25;

        $r28 = new java.util.HashMap;

        specialinvoke $r28.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers> = $r28;

        $r27 = new com.android.server.am.ActivityManagerService$1;

        specialinvoke $r27.<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver> = $r27;

        $r30 = new android.util.SparseArray;

        specialinvoke $r30.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts> = $r30;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders> = $r29;

        $r32 = new android.util.SparseArray;

        specialinvoke $r32.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions> = $r32;

        $r33 = new android.content.res.Configuration;

        specialinvoke $r33.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration> = $r33;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = 0;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(int)>(256);

        r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder> = $r31;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = "android.intent.action.MAIN";

        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mLaunchWarningShown> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLruSeq> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = 0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = $l1;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage> = null;

        r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid> = -1;

        $r36 = new com.android.internal.app.ProcessMap;

        specialinvoke $r36.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages> = $r36;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = 0;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = null;

        r0.<com.android.server.am.ActivityManagerService: int mSamplingInterval> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp> = null;

        $r37 = new android.os.RemoteCallbackList;

        specialinvoke $r37.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers> = $r37;

        $r34 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[5];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r34;

        $r35 = new java.util.ArrayList;

        specialinvoke $r35.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges> = $r35;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges> = $r40;

        $r41 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r41.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(0);

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker> = $r41;

        $r38 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r38.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime> = $r38;

        $r39 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r39.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree> = $r39;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = 0L;

        $r44 = new android.os.UpdateLock;

        specialinvoke $r44.<android.os.UpdateLock: void <init>(java.lang.String)>("immersive");

        r0.<com.android.server.am.ActivityManagerService: android.os.UpdateLock mUpdateLock> = $r44;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mProcessLimit> = 32;

        r0.<com.android.server.am.ActivityManagerService: int mProcessLimitOverride> = -1;

        r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mTargetUserId> = -10000;

        $r45 = newarray (int)[1];

        $r45[0] = 0;

        r0.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds> = $r45;

        $r42 = new android.util.SparseIntArray;

        specialinvoke $r42.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked> = $r42;

        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = 0L;

        $r43 = new com.android.server.am.ActivityManagerService$2;

        $r49 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r48 = virtualinvoke $r49.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r43.<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r48);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler> = $r43;

        $r47 = new com.android.server.am.ActivityManagerService$3;

        specialinvoke $r47.<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.content.PackageMonitor mPackageMonitor> = $r47;

        $r46 = new com.android.server.am.ActivityManagerService$5;

        specialinvoke $r46.<com.android.server.am.ActivityManagerService$5: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: java.util.Comparator mTaskRecordComparator> = $r46;

        r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext> = r1;

        $i2 = staticinvoke <android.os.FactoryTest: int getMode()>();

        r0.<com.android.server.am.ActivityManagerService: int mFactoryTest> = $i2;

        $r51 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread> = $r51;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Memory class: ");

        $i3 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r52);

        $r57 = new com.android.server.ServiceThread;

        specialinvoke $r57.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("ActivityManager", -2, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread> = $r57;

        $r56 = r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread>;

        virtualinvoke $r56.<com.android.server.ServiceThread: void start()>();

        $r55 = new com.android.server.am.ActivityManagerService$MainHandler;

        $r62 = r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread>;

        $r63 = virtualinvoke $r62.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r55.<com.android.server.am.ActivityManagerService$MainHandler: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r63);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler> = $r55;

        $r64 = new com.android.server.am.BroadcastQueue;

        $r65 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r64.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,java.lang.String,long,boolean)>(r0, $r65, "foreground", 10000L, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue> = $r64;

        $r58 = new com.android.server.am.BroadcastQueue;

        $r59 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r58.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,java.lang.String,long,boolean)>(r0, $r59, "background", 60000L, 1);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue> = $r58;

        $r61 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r60 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        $r61[0] = $r60;

        $r69 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r68 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        $r69[1] = $r68;

        $r70 = new com.android.server.am.ActiveServices;

        specialinvoke $r70.<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices> = $r70;

        $r71 = new com.android.server.am.ProviderMap;

        specialinvoke $r71.<com.android.server.am.ProviderMap: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap> = $r71;

        r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r66 = new java.io.File;

        specialinvoke $r66.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "system");

        r3 = $r66;

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        $r67 = new com.android.server.am.BatteryStatsService;

        $r76 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r67.<com.android.server.am.BatteryStatsService: void <init>(java.io.File,android.os.Handler)>(r3, $r76);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService> = $r67;

        $r75 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r78 = virtualinvoke $r75.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r78.<com.android.internal.os.BatteryStatsImpl: void readLocked()>();

        $r77 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r73 = virtualinvoke $r77.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r73.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

        $r72 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r74 = virtualinvoke $r72.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        $z1 = virtualinvoke $r74.<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = $z1;

        $r84 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r83 = virtualinvoke $r84.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r83.<com.android.internal.os.BatteryStatsImpl: void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)>(r0);

        $r86 = new com.android.server.am.ProcessStatsService;

        $r85 = new java.io.File;

        specialinvoke $r85.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "procstats");

        specialinvoke $r86.<com.android.server.am.ProcessStatsService: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>(r0, $r85);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats> = $r86;

        $r80 = new com.android.server.AppOpsService;

        $r79 = new java.io.File;

        specialinvoke $r79.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "appops.xml");

        $r82 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r80.<com.android.server.AppOpsService: void <init>(java.io.File,android.os.Handler)>($r79, $r82);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService> = $r80;

        $r81 = new android.util.AtomicFile;

        $r91 = new java.io.File;

        specialinvoke $r91.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "urigrants.xml");

        specialinvoke $r81.<android.util.AtomicFile: void <init>(java.io.File)>($r91);

        r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile> = $r81;

        $r90 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r92 = new com.android.server.am.UserStartedState;

        $r89 = new android.os.UserHandle;

        specialinvoke $r89.<android.os.UserHandle: void <init>(int)>(0);

        specialinvoke $r92.<com.android.server.am.UserStartedState: void <init>(android.os.UserHandle,boolean)>($r89, 1);

        virtualinvoke $r90.<android.util.SparseArray: void put(int,java.lang.Object)>(0, $r92);

        $r88 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r88.<java.util.ArrayList: boolean add(java.lang.Object)>($r87);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        $i6 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.opengles.version", 0);

        r0.<com.android.server.am.ActivityManagerService: int GL_ES_VERSION> = $i6;

        $r98 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r98.<android.content.res.Configuration: void setToDefaults()>();

        $r96 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r97 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke $r96.<android.content.res.Configuration: void setLocale(java.util.Locale)>($r97);

        $r95 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r95.<android.content.res.Configuration: int seq> = 1;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = 1;

        $r93 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r93.<com.android.internal.os.ProcessCpuTracker: void init()>();

        $r94 = new com.android.server.am.CompatModePackages;

        $r106 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r94.<com.android.server.am.CompatModePackages: void <init>(com.android.server.am.ActivityManagerService,java.io.File,android.os.Handler)>(r0, r3, $r106);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages> = $r94;

        $r105 = new com.android.server.firewall.IntentFirewall;

        $r104 = new com.android.server.am.ActivityManagerService$IntentFirewallInterface;

        specialinvoke $r104.<com.android.server.am.ActivityManagerService$IntentFirewallInterface: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $r103 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r105.<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall$AMSInterface,android.os.Handler)>($r104, $r103);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall> = $r105;

        $r102 = new com.android.server.am.ActivityStackSupervisor;

        specialinvoke $r102.<com.android.server.am.ActivityStackSupervisor: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor> = $r102;

        $r101 = new com.android.server.am.TaskPersister;

        $r100 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        specialinvoke $r101.<com.android.server.am.TaskPersister: void <init>(java.io.File,com.android.server.am.ActivityStackSupervisor)>(r3, $r100);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister> = $r101;

        $r99 = new com.android.server.am.ActivityManagerService$4;

        specialinvoke $r99.<com.android.server.am.ActivityManagerService$4: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>(r0, "CpuTracker");

        r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread> = $r99;

        $r111 = new com.android.server.am.LockToAppRequestDialog;

        $r110 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r111.<com.android.server.am.LockToAppRequestDialog: void <init>(android.content.Context,com.android.server.am.ActivityManagerService)>($r110, r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.LockToAppRequestDialog mLockToAppRequest> = $r111;

        $r109 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r109.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        $r108 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r107 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r108.<com.android.server.Watchdog: void addThread(android.os.Handler)>($r107);

        return;
    }

    public void setSystemServiceManager(com.android.server.SystemServiceManager)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.SystemServiceManager r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.SystemServiceManager;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager> = r1;

        return;
    }

    private void start()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Thread $r1;
        android.content.Context $r2, $r4;
        com.android.server.am.BatteryStatsService $r3;
        com.android.server.AppOpsService $r5;
        com.android.server.am.ActivityManagerService$LocalService $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        staticinvoke <android.os.Process: void removeAllProcessGroups()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>($r2);

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<com.android.server.AppOpsService: void publish(android.content.Context)>($r4);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AppOps", "AppOpsService published");

        $r6 = new com.android.server.am.ActivityManagerService$LocalService;

        specialinvoke $r6.<com.android.server.am.ActivityManagerService$LocalService: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityManagerService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "android/app/ActivityManagerInternal", $r6);

        return;
    }

    public void initPowerManagement()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityStackSupervisor $r1;
        com.android.server.am.BatteryStatsService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor: void initPowerManagement()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r2.<com.android.server.am.BatteryStatsService: void initPowerManagement()>();

        return;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r4;
        int i0, i1, i2, i3, i4, i5, i7, i8;
        android.os.Parcel r1, r2, r24;
        java.util.ArrayList r3, $r8;
        android.util.SparseArray r5;
        com.android.server.am.ProcessRecord r6;
        java.lang.Throwable r7, $r19;
        boolean $z0, $z3;
        com.android.internal.app.ProcessMap $r9, $r15;
        android.util.ArrayMap $r11, $r14;
        java.lang.Object $r12, $r16, $r18;
        android.os.IBinder $r13, $r21;
        android.app.IApplicationThread $r17, $r20;
        java.lang.RuntimeException $r22, r26;
        android.os.RemoteException $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 != 1599295570 goto label16;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        r4 = r0;

        entermonitor r0;

     label01:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r11 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i2 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label02:
        if i3 >= i2 goto label06;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r14 = virtualinvoke $r15.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r16 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r5 = (android.util.SparseArray) $r16;

        i4 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        i5 = 0;

     label03:
        if i5 >= i4 goto label05;

        $r18 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r6 = (com.android.server.am.ProcessRecord) $r18;

        $r17 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r17 == null goto label04;

        $r20 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r21 = interfaceinvoke $r20.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label04:
        i5 = i5 + 1;

        goto label03;

     label05:
        i3 = i3 + 1;

        goto label02;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r7 = $r19;

        exitmonitor r4;

     label09:
        throw r7;

     label10:
        i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i8 = 0;

     label11:
        if i8 >= i7 goto label16;

        r24 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label12:
        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r13 = (android.os.IBinder) $r12;

        interfaceinvoke $r13.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1599295570, r24, null, 0);

     label13:
        goto label15;

     label14:
        $r23 := @caughtexception;

     label15:
        virtualinvoke r24.<android.os.Parcel: void recycle()>();

        i8 = i8 + 1;

        goto label11;

     label16:
        $z0 = specialinvoke r0.<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label17:
        return $z0;

     label18:
        $r22 := @caughtexception;

        r26 = $r22;

        $z3 = r26 instanceof java.lang.SecurityException;

        if $z3 != 0 goto label19;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Activity Manager Crash", r26);

     label19:
        throw r26;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.RuntimeException from label16 to label17 with label18;
    }

    void updateCpuStats()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l1, $l2;
        java.lang.Thread r1, $r5, $r6;
        java.lang.Throwable r2, $r7;
        java.util.concurrent.atomic.AtomicLong $r3;
        byte $b3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l2 = l0 - 5000L;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(1, 0);

        if $z0 == 0 goto label6;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        r1 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        virtualinvoke $r6.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void updateCpuStatsNow()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.internal.os.ProcessCpuTracker r1, $r9, $r11, $r17, $r18, $r28, $r29, $r31, $r32, $r33, $r34, $r36;
        long l0, $l12, $l13, $l16, $l17, $l34, $l35, $l40;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, $i39, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, i62, i63, i64;
        com.android.internal.os.ProcessCpuTracker$Stats r2;
        com.android.server.am.ProcessRecord r3;
        java.lang.Throwable r4, r6, r7, $r41, $r42, $r45;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r5, $r22, $r23, r50;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        java.util.concurrent.atomic.AtomicLong $r10, $r30;
        byte $b14, $b15;
        com.android.server.am.BatteryStatsService $r12, $r16;
        android.util.SparseArray $r13, $r19, r49;
        com.android.internal.os.BatteryStatsImpl $r15, r47, r48;
        java.lang.Object $r20;
        java.lang.String $r21, $r25, $r26, $r27;
        android.content.pm.ApplicationInfo $r24;
        java.lang.Object[] $r35;
        java.lang.Integer $r37, $r38, $r39, $r40, $r43, $r44;
        long[] r46;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r1 = $r9;

        entermonitor $r9;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z0 = 0;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l13 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l12 = l0 - 5000L;

        $b14 = $l13 cmp $l12;

        if $b14 >= 0 goto label03;

        $r30 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        virtualinvoke $r30.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);

        z0 = 1;

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r29.<com.android.internal.os.ProcessCpuTracker: void update()>();

        $r27 = "true";

        $r26 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("events.cpu");

        $z4 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label03;

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i1 = virtualinvoke $r28.<com.android.internal.os.ProcessCpuTracker: int getLastUserTime()>();

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i2 = virtualinvoke $r33.<com.android.internal.os.ProcessCpuTracker: int getLastSystemTime()>();

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i3 = virtualinvoke $r34.<com.android.internal.os.ProcessCpuTracker: int getLastIoWaitTime()>();

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i4 = virtualinvoke $r31.<com.android.internal.os.ProcessCpuTracker: int getLastIrqTime()>();

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i5 = virtualinvoke $r32.<com.android.internal.os.ProcessCpuTracker: int getLastSoftIrqTime()>();

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i6 = virtualinvoke $r36.<com.android.internal.os.ProcessCpuTracker: int getLastIdleTime()>();

        $i44 = i1 + i2;

        $i42 = $i44 + i3;

        $i43 = $i42 + i4;

        $i41 = $i43 + i5;

        i7 = $i41 + i6;

        if i7 != 0 goto label02;

        i7 = 1;

     label02:
        $r35 = newarray (java.lang.Object)[6];

        $i49 = i1 + i2;

        $i50 = $i49 + i3;

        $i47 = $i50 + i4;

        $i48 = $i47 + i5;

        $i45 = $i48 * 100;

        $i46 = $i45 / i7;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i46);

        $r35[0] = $r38;

        $i54 = i1 * 100;

        $i53 = $i54 / i7;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i53);

        $r35[1] = $r37;

        $i52 = i2 * 100;

        $i51 = $i52 / i7;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i51);

        $r35[2] = $r40;

        $i58 = i3 * 100;

        $i57 = $i58 / i7;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i57);

        $r35[3] = $r39;

        $i56 = i4 * 100;

        $i55 = $i56 / i7;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i55);

        $r35[4] = $r43;

        $i59 = i5 * 100;

        $i60 = $i59 / i7;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i60);

        $r35[5] = $r44;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2721, $r35);

     label03:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r46 = virtualinvoke $r11.<com.android.internal.os.ProcessCpuTracker: long[] getLastCpuSpeedTimes()>();

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r47 = virtualinvoke $r12.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r48 = r47;

        entermonitor r47;

     label04:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r49 = $r13;

        entermonitor $r13;

     label05:
        if z0 == 0 goto label15;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery>;

        if $z1 == 0 goto label15;

        i62 = virtualinvoke r47.<com.android.internal.os.BatteryStatsImpl: int startAddingCpuLocked()>();

        i63 = 0;

        i64 = 0;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i8 = virtualinvoke $r18.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

        i9 = 0;

     label06:
        if i9 >= i8 goto label14;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r2 = virtualinvoke $r17.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i9);

        $z2 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: boolean working>;

        if $z2 != 0 goto label07;

        goto label13;

     label07:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i18 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>($i18);

        r3 = (com.android.server.am.ProcessRecord) $r20;

        $i21 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i20 = $i21 * i62;

        i11 = $i20 / 100;

        $i19 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i24 = $i19 * i62;

        i10 = $i24 / 100;

        i63 = i63 + i11;

        i64 = i64 + i10;

        if r3 == null goto label10;

        r5 = r3.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc curProcBatteryStats>;

        if r5 == null goto label08;

        $z5 = virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean isActive()>();

        if $z5 != 0 goto label09;

     label08:
        $r24 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i28 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $r25 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r23 = virtualinvoke r47.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i28, $r25);

        r5 = $r23;

        r3.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc curProcBatteryStats> = $r23;

     label09:
        $i29 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i37 = $i29 - i11;

        $i30 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i36 = $i30 - i10;

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i37, $i36);

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r46);

        $l35 = r3.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $i39 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i38 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i32 = $i39 + $i38;

        $i33 = $i32 * 10;

        $l34 = (long) $i33;

        $l40 = $l35 + $l34;

        r3.<com.android.server.am.ProcessRecord: long curCpuTime> = $l40;

        goto label13;

     label10:
        r50 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats>;

        if r50 == null goto label11;

        $z3 = virtualinvoke r50.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean isActive()>();

        if $z3 != 0 goto label12;

     label11:
        $i23 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int uid>;

        $i22 = virtualinvoke r47.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i23);

        $r21 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $r22 = virtualinvoke r47.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i22, $r21);

        r50 = $r22;

        r2.<com.android.internal.os.ProcessCpuTracker$Stats: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats> = $r22;

     label12:
        $i27 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i31 = $i27 - i11;

        $i26 = r2.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i25 = $i26 - i10;

        virtualinvoke r50.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i31, $i25);

        virtualinvoke r50.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r46);

     label13:
        i9 = i9 + 1;

        goto label06;

     label14:
        virtualinvoke r47.<com.android.internal.os.BatteryStatsImpl: void finishAddingCpuLocked(int,int,int,long[])>(i62, i63, i64, r46);

     label15:
        exitmonitor r49;

     label16:
        goto label19;

     label17:
        $r42 := @caughtexception;

        r4 = $r42;

        exitmonitor r49;

     label18:
        throw r4;

     label19:
        $l17 = r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime>;

        $l16 = l0 - 1800000L;

        $b15 = $l17 cmp $l16;

        if $b15 >= 0 goto label20;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = l0;

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r15 = virtualinvoke $r16.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label20:
        exitmonitor r48;

     label21:
        goto label24;

     label22:
        $r45 := @caughtexception;

        r7 = $r45;

        exitmonitor r48;

     label23:
        throw r7;

     label24:
        exitmonitor r1;

     label25:
        goto label28;

     label26:
        $r41 := @caughtexception;

        r6 = $r41;

        exitmonitor r1;

     label27:
        throw r6;

     label28:
        return;

        catch java.lang.Throwable from label05 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label04 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label01 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public void batteryNeedsCpuUpdate()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        return;
    }

    public void batteryPowerChanged(boolean)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        boolean z0;
        android.util.SparseArray r2, $r6;
        java.lang.Throwable r3, r4, $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        r1 = r0;

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = z0;

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r1;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private java.util.HashMap getCommonServicesLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.HashMap $r1, $r2, $r3, $r4, $r7, $r10;
        android.os.IBinder $r5, $r8, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        if $r1 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs> = $r3;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("package", $r5);

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("window", $r8);

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r11 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("alarm");

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("alarm", $r11);

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        return $r2;
    }

    final void setFocusedActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1, $r2;
        com.android.server.am.TaskRecord $r3, $r7;
        com.android.server.am.ActivityStackSupervisor $r4;
        android.view.IApplicationToken$Stub $r5;
        com.android.server.wm.WindowManagerService $r6;
        com.android.internal.app.IVoiceInteractor $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if $r2 == r1 goto label4;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity> = r1;

        $r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r3 == null goto label1;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r7.<com.android.server.am.TaskRecord: com.android.internal.app.IVoiceInteractor voiceInteractor>;

        if $r8 == null goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startRunningVoiceLocked()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishRunningVoiceLocked()>();

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: void setFocusedStack(com.android.server.am.ActivityRecord)>(r1);

        if r1 == null goto label3;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r5 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>($r5, 1);

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)>(r1);

     label4:
        return;
    }

    final void clearFocusedActivity(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if $r2 != r1 goto label1;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity> = null;

     label1:
        return;
    }

    public void setFocusedStack(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i0);

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r3 == null goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r3);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r1;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void notifyActivityDrawn(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r9;
        com.android.server.am.ActivityStackSupervisor $r6;
        com.android.server.am.TaskRecord $r7;
        com.android.server.am.ActivityStack $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r3 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        $r7 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r7.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r8.<com.android.server.am.ActivityStack: void notifyActivityDrawnLocked(com.android.server.am.ActivityRecord)>(r3);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    final void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0, $z2, $z3;
        com.android.server.am.ActivityManagerService$MainHandler $r2, $r3;
        android.os.Message $r4;
        byte $b0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        if r1 == null goto label1;

        $z2 = r1.<com.android.server.am.ActivityRecord: boolean immersive>;

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        if z0 == 0 goto label3;

        $b0 = 1;

        goto label4;

     label3:
        $b0 = 0;

     label4:
        $r4 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(37, $b0, 0, r1);

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    final void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1, $r5;
        android.os.Message r2;
        com.android.server.am.TaskRecord $r3;
        boolean $z0;
        com.android.server.am.ActivityManagerService$MainHandler $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 30;

        $r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z0 = $r3.<com.android.server.am.TaskRecord: boolean askedCompatMode>;

        if $z0 == 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = r1;

     label2:
        r2.<android.os.Message: java.lang.Object obj> = $r5;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private final int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord, long, int, java.lang.String, java.lang.Object, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r4;
        long l0;
        int i1, i2, $i3, $i4;
        java.lang.String r2, $r18;
        java.lang.Object r3;
        java.util.ArrayList $r5, $r6, $r7, $r10;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.Object;

        r4 := @parameter5: com.android.server.am.ProcessRecord;

        r1.<com.android.server.am.ProcessRecord: long lastActivityTime> = l0;

        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label1;

        return i1;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i2 = virtualinvoke $r6.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        if i2 >= 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding dependent process ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not on LRU list: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        return i1;

     label2:
        if i2 < i1 goto label3;

        return i1;

     label3:
        $i4 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i2 < $i4 goto label4;

        return i1;

     label4:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        if i1 <= 0 goto label5;

        i1 = i1 + -1;

     label5:
        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, r1);

        return i1;
    }

    final void removeLruProcessLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10;
        java.util.ArrayList $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        android.content.pm.ApplicationInfo $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label4;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing process that hasn\'t been killed: ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>($i8);

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: int killProcessGroup(int,int)>($i9, $i10);

     label1:
        $i1 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i0 > $i1 goto label2;

        $i5 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i6 = $i5 - 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = $i6;

     label2:
        $i2 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if i0 > $i2 goto label3;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i4 = $i3 - 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = $i4;

     label3:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label4:
        return;
    }

    final void updateLruProcessLocked(com.android.server.am.ProcessRecord, boolean, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2, r3, r4, $r13, $r14, $r15, $r16, $r24, $r27, $r32, $r35, $r41;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z8, $z9, $z10;
        long l0;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, i42, i43;
        java.util.ArrayList $r5, $r6, $r7, $r9, $r12, $r33, $r34, $r36, $r37, $r39, $r40, $r44, $r46, $r48, $r51, $r52, $r54, $r57, $r60, $r61;
        android.util.ArraySet $r8, $r18;
        java.lang.Object $r10, $r19, $r42, $r43, $r47, $r50, $r58, $r59;
        com.android.server.am.ContentProviderConnection $r11;
        com.android.server.am.AppBindRecord $r17, $r21, $r23, $r26, $r29, $r31;
        com.android.server.am.ServiceRecord $r20, $r22, $r25, $r28, $r30;
        android.content.pm.ApplicationInfo $r38, $r45, $r49;
        com.android.server.am.ConnectionRecord r62;
        com.android.server.am.ContentProviderRecord r63;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i7 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label01;

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if $z10 != 0 goto label01;

        $z9 = r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z9 == 0 goto label02;

     label01:
        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z1 = $z8;

        if z0 != 0 goto label04;

        if z1 == 0 goto label04;

        return;

     label04:
        $i6 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        $i8 = $i6 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruSeq> = $i8;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ProcessRecord: long lastActivityTime> = l0;

        if z1 == 0 goto label06;

        $r61 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i1 = virtualinvoke $r61.<java.util.ArrayList: int size()>();

        if i1 <= 0 goto label05;

        $r60 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i38 = i1 - 1;

        $r59 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>($i38);

        if $r59 != r1 goto label05;

        return;

     label05:
        goto label07;

     label06:
        $i9 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if $i9 <= 0 goto label07;

        $r57 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i32 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i33 = $i32 - 1;

        $r58 = virtualinvoke $r57.<java.util.ArrayList: java.lang.Object get(int)>($i33);

        if $r58 != r1 goto label07;

        return;

     label07:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i39 = virtualinvoke $r6.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z3 == 0 goto label08;

        if i39 < 0 goto label08;

        return;

     label08:
        if i39 < 0 goto label11;

        $i29 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i39 >= $i29 goto label09;

        $i34 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i35 = $i34 - 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = $i35;

     label09:
        $i30 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if i39 >= $i30 goto label10;

        $i36 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i37 = $i36 - 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = $i37;

     label10:
        $r52 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r52.<java.util.ArrayList: java.lang.Object remove(int)>(i39);

     label11:
        if z1 == 0 goto label17;

        $r33 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i3 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        $r34 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i20 = virtualinvoke $r34.<java.util.ArrayList: int size()>();

        if $i20 != 0 goto label15;

        $i24 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i23 = i3 - 1;

        if $i24 >= $i23 goto label15;

        $r37 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i21 = i3 - 1;

        virtualinvoke $r37.<java.util.ArrayList: void add(int,java.lang.Object)>($i21, r1);

        $r38 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i4 = $r38.<android.content.pm.ApplicationInfo: int uid>;

        i5 = i3 - 2;

     label12:
        $i22 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i5 <= $i22 goto label14;

        $r44 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r43 = virtualinvoke $r44.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (com.android.server.am.ProcessRecord) $r43;

        $r45 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i26 = $r45.<android.content.pm.ApplicationInfo: int uid>;

        if $i26 != i4 goto label14;

        $r40 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i25 = i5 - 1;

        $r42 = virtualinvoke $r40.<java.util.ArrayList: java.lang.Object get(int)>($i25);

        $r41 = (com.android.server.am.ProcessRecord) $r42;

        $r49 = $r41.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i28 = $r49.<android.content.pm.ApplicationInfo: int uid>;

        if $i28 == i4 goto label13;

        $r51 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r50 = virtualinvoke $r51.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (com.android.server.am.ProcessRecord) $r50;

        $r48 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r46 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i27 = i5 - 1;

        $r47 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object get(int)>($i27);

        virtualinvoke $r48.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i5, $r47);

        $r54 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i31 = i5 - 1;

        virtualinvoke $r54.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i31, r4);

        i5 = i5 + -1;

     label13:
        i5 = i5 + -1;

        goto label12;

     label14:
        goto label16;

     label15:
        $r39 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r39.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label16:
        i2 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        goto label20;

     label17:
        i40 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if r2 == null goto label19;

        $r36 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i41 = virtualinvoke $r36.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r2);

        if i41 > i39 goto label18;

        i41 = i39;

     label18:
        if i41 < 0 goto label19;

        if i40 <= i41 goto label19;

        i40 = i41;

     label19:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>(i40, r1);

        i2 = i40 - 1;

        $i10 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i12 = $i10 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = $i12;

        $i11 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i13 = $i11 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = $i13;

     label20:
        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i14 = virtualinvoke $r8.<android.util.ArraySet: int size()>();

        i42 = $i14 - 1;

     label21:
        if i42 < 0 goto label23;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r19 = virtualinvoke $r18.<android.util.ArraySet: java.lang.Object valueAt(int)>(i42);

        r62 = (com.android.server.am.ConnectionRecord) $r19;

        $r17 = r62.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        if $r17 == null goto label22;

        $z5 = r62.<com.android.server.am.ConnectionRecord: boolean serviceDead>;

        if $z5 != 0 goto label22;

        $r23 = r62.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r22 = $r23.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        if $r22 == null goto label22;

        $r21 = r62.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r21.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r27 = $r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r27 == null goto label22;

        $r26 = r62.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r25 = $r26.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r24 = $r25.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i18 = $r24.<com.android.server.am.ProcessRecord: int lruSeq>;

        $i19 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        if $i18 == $i19 goto label22;

        $r29 = r62.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r28 = $r29.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r32 = $r28.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z6 = $r32.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z6 != 0 goto label22;

        $r31 = r62.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r30 = $r31.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r35 = $r30.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        i2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r35, l0, i2, "service connection", r62, r1);

     label22:
        i42 = i42 + -1;

        goto label21;

     label23:
        $r9 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i15 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i43 = $i15 - 1;

     label24:
        if i43 < 0 goto label26;

        $r12 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r10 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i43);

        $r11 = (com.android.server.am.ContentProviderConnection) $r10;

        r63 = $r11.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r13 = r63.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r13 == null goto label25;

        $r14 = r63.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i17 = $r14.<com.android.server.am.ProcessRecord: int lruSeq>;

        $i16 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        if $i17 == $i16 goto label25;

        $r16 = r63.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z4 = $r16.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 != 0 goto label25;

        $r15 = r63.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        i2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r15, l0, i2, "provider reference", r63, r1);

     label25:
        i43 = i43 + -1;

        goto label24;

     label26:
        return;
    }

    final com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r9, $r10;
        int i0, i1, i2, $i3, $i4, $i10;
        boolean z0, $z1;
        android.util.SparseArray r2;
        com.android.internal.app.ProcessMap $r3, $r13;
        java.lang.Object $r4, $r15, $r17;
        com.android.server.am.ProcessList $r5;
        long $l5, $l6, $l8, $l9;
        byte $b7;
        com.android.internal.app.ProcessStats$ProcessState $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r11;
        android.util.ArrayMap $r12, $r16;
        com.android.server.am.ProcessRecord $r18, r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 1000 goto label4;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r16 = virtualinvoke $r13.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.util.SparseArray) $r15;

        if r2 != null goto label1;

        return null;

     label1:
        i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $i10 = virtualinvoke r2.<android.util.SparseArray: int keyAt(int)>(i2);

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameUser(int,int)>($i10, i0);

        if $z1 == 0 goto label3;

        $r17 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r18 = (com.android.server.am.ProcessRecord) $r17;

        return $r18;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, i0);

        r19 = (com.android.server.am.ProcessRecord) $r4;

        if r19 == null goto label6;

        if z0 != 0 goto label6;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if $i3 <= 0 goto label6;

        $i4 = r19.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i4 < 13 goto label6;

        $l5 = r19.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l6 = virtualinvoke $r5.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        $b7 = $l5 cmp $l6;

        if $b7 < 0 goto label6;

        $r6 = r19.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        if $r6 == null goto label5;

        $r14 = r19.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r12 = r19.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $l9 = r19.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        virtualinvoke $r14.<com.android.internal.app.ProcessStats$ProcessState: void reportCachedKill(android.util.ArrayMap,long)>($r12, $l9);

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $l8 = r19.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("k from cached");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r10, 1);

     label6:
        return r19;
    }

    void ensurePackageDexOpt(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageManager r2;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label1:
        $z0 = interfaceinvoke r2.<android.content.pm.IPackageManager: boolean performDexOptIfNeeded(java.lang.String,java.lang.String)>(r1, null);

        if $z0 == 0 goto label2;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidDexOpt> = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean isNextTransitionForward()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.WindowManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        i0 = virtualinvoke $r1.<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>();

        if i0 == 6 goto label1;

        if i0 == 8 goto label1;

        if i0 != 10 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    int startIsolatedProcess(java.lang.String, java.lang.String[], java.lang.String, java.lang.String, int, java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService r0, r6;
        java.lang.String r1, r3, r4;
        java.lang.String[] r2;
        int i0, $i1;
        java.lang.Runnable r5;
        android.content.pm.ApplicationInfo r7, $r11;
        com.android.server.am.ProcessRecord r8;
        java.lang.Throwable r9, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.Runnable;

        r6 = r0;

        entermonitor r0;

     label1:
        $r11 = new android.content.pm.ApplicationInfo;

        specialinvoke $r11.<android.content.pm.ApplicationInfo: void <init>()>();

        r7 = $r11;

        r7.<android.content.pm.ApplicationInfo: int uid> = 1000;

        r7.<android.content.pm.ApplicationInfo: java.lang.String processName> = r3;

        r7.<android.content.pm.ApplicationInfo: java.lang.String className> = r1;

        r7.<android.content.pm.ApplicationInfo: java.lang.String packageName> = "android";

        r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable)>(r3, r7, 0, 0, "", null, 1, 1, i0, 1, r4, r1, r2, r5);

        if r8 == null goto label2;

        $i1 = r8.<com.android.server.am.ProcessRecord: int pid>;

        goto label3;

     label2:
        $i1 = 0;

     label3:
        exitmonitor r6;

     label4:
        return $i1;

     label5:
        $r12 := @caughtexception;

        r9 = $r12;

        exitmonitor r6;

     label6:
        throw r9;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    final com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, java.lang.String, android.content.ComponentName, boolean, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3;
        android.content.pm.ApplicationInfo r2;
        boolean z0, z1, z2, z3;
        int i0;
        android.content.ComponentName r4;
        com.android.server.am.ProcessRecord $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.content.ComponentName;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        $r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable)>(r1, r2, z0, i0, r3, r4, z1, z2, 0, z3, null, null, null, null);

        return $r5;
    }

    final com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, java.lang.String, android.content.ComponentName, boolean, boolean, int, boolean, java.lang.String, java.lang.String, java.lang.String[], java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r5, r6, r10, $r12, $r24, $r27, $r29, $r34, $r37, $r39, $r40, $r43;
        android.content.pm.ApplicationInfo r2, $r45;
        boolean z0, z1, z2, z3, $z5, $z6, $z7;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23;
        android.content.ComponentName r4;
        java.lang.String[] r7;
        java.lang.Runnable r8;
        long l2;
        com.android.server.am.ProcessRecord r9, $r13;
        com.android.server.am.ProcessStatsService $r11, $r38;
        java.util.ArrayList $r14, $r15;
        com.android.internal.app.ProcessMap $r16, $r28, $r30, $r35, $r41;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r23, $r25, $r26;
        android.util.SparseArray $r19;
        java.lang.Object[] $r31;
        java.lang.Object $r32, $r42;
        java.lang.Integer $r33, $r36;
        android.app.IApplicationThread $r44;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.content.ComponentName;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        i1 := @parameter8: int;

        z3 := @parameter9: boolean;

        r5 := @parameter10: java.lang.String;

        r6 := @parameter11: java.lang.String;

        r7 := @parameter12: java.lang.String[];

        r8 := @parameter13: java.lang.Runnable;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if z2 != 0 goto label01;

        $i22 = r2.<android.content.pm.ApplicationInfo: int uid>;

        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, $i22, z3);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: after getProcessRecord");

        goto label02;

     label01:
        r9 = null;

     label02:
        if r9 == null goto label05;

        $i18 = r9.<com.android.server.am.ProcessRecord: int pid>;

        if $i18 <= 0 goto label05;

        if z0 == 0 goto label03;

        $r44 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r44 != null goto label04;

     label03:
        $r39 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i19 = r2.<android.content.pm.ApplicationInfo: int versionCode>;

        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r9.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>($r39, $i19, $r38);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: done, added package to proc");

        return r9;

     label04:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: bad proc running, killing");

        $r45 = r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i21 = $r45.<android.content.pm.ApplicationInfo: int uid>;

        $i23 = r9.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: int killProcessGroup(int,int)>($i21, $i23);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r9, 1, 1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: done killing old proc");

     label05:
        if r4 == null goto label06;

        $r43 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        goto label07;

     label06:
        $r43 = null;

     label07:
        r10 = $r43;

        if z2 != 0 goto label09;

        $i9 = i0 & 4;

        if $i9 == 0 goto label08;

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r40 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i16 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r42 = virtualinvoke $r41.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r40, $i16);

        if $r42 == null goto label09;

        return null;

     label08:
        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r27 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i8 = r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r30.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r27, $i8);

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r29 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i11 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r32 = virtualinvoke $r28.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r29, $i11);

        if $r32 == null goto label09;

        $r31 = newarray (java.lang.Object)[3];

        $i12 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i12);

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r31[0] = $r33;

        $i13 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r31[1] = $r36;

        $r37 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r31[2] = $r37;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30016, $r31);

        $r35 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r34 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i15 = r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r35.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r34, $i15);

        if r9 == null goto label09;

        r9.<com.android.server.am.ProcessRecord: boolean bad> = 0;

     label09:
        if r9 != null goto label12;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: creating new process record");

        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int)>(r2, r1, z2, i1);

        r9.<com.android.server.am.ProcessRecord: java.lang.Runnable crashHandler> = r8;

        if r9 != null goto label10;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed making new process record for ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i7 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isolated=");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        return null;

     label10:
        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $i5 = r9.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r16.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r1, $i5, r9);

        if z2 == 0 goto label11;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i6 = r9.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r19.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r9);

     label11:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: done creating new process record");

        goto label13;

     label12:
        $r12 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i3 = r2.<android.content.pm.ApplicationInfo: int versionCode>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r9.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>($r12, $i3, $r11);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: added package to existing proc");

     label13:
        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z5 != 0 goto label15;

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>(r2);

        if $z6 != 0 goto label15;

        if z1 != 0 goto label15;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $z7 = virtualinvoke $r14.<java.util.ArrayList: boolean contains(java.lang.Object)>(r9);

        if $z7 != 0 goto label14;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label14:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: returning with proc on hold");

        return r9;

     label15:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: stepping in to startProcess");

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(r9, r3, r10, r5, r6, r7);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l2, "startProcess: done starting proc!");

        $i4 = r9.<com.android.server.am.ProcessRecord: int pid>;

        if $i4 == 0 goto label16;

        $r13 = r9;

        goto label17;

     label16:
        $r13 = null;

     label17:
        return $r13;
    }

    boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final void startProcessLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, r3, null, null, null);

        return;
    }

    private final void startProcessLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r4, r5, r11, $r19, $r20, $r21, $r22, $r23, $r26, $r29, $r31, $r32, $r33, $r37, $r39, $r46, $r50, $r62, $r69, $r73, $r75, $r77, $r80, $r82, $r89, $r90, $r92, $r96, r105;
        java.lang.String[] r6, $r76;
        long l0, $l21;
        android.util.SparseArray r7, $r56, $r57, $r84, $r85, r106;
        java.lang.Throwable r8, r15, $r101, $r102;
        byte b1, b46, b47;
        int[] r9, r103;
        android.content.pm.PackageManager r10;
        boolean z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15;
        java.lang.StringBuilder r12, $r91, $r98, $r99;
        android.os.Process$ProcessStartResult r13;
        android.os.Message r14;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i42, $i43, i45;
        java.util.ArrayList $r16;
        android.content.pm.ApplicationInfo $r17, $r18, $r24, $r25, $r27, $r28, $r30, $r34, $r70, $r72, $r74, $r78, $r88, $r94, $r97;
        java.lang.Object[] $r35;
        com.android.server.am.BatteryStatsService $r36, $r71, $r93, $r95;
        java.lang.Integer $r38, $r41, $r42;
        com.android.server.am.ActivityManagerService$MainHandler $r54, $r55, $r86;
        com.android.server.Watchdog $r64;
        android.content.ComponentName $r79, $r81;
        android.content.Context $r83;
        java.lang.RuntimeException $r87, r107;
        android.content.pm.PackageManager$NameNotFoundException $r100, r104;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String[];

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 <= 0 goto label06;

        $i33 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i32 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i33 == $i32 goto label06;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: removing from pids map");

        $r84 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r7 = $r84;

        entermonitor $r84;

     label01:
        $r85 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i34 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r85.<android.util.SparseArray: void remove(int)>($i34);

        $r86 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r86.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r1);

        exitmonitor r7;

     label02:
        goto label05;

     label03:
        $r102 := @caughtexception;

        r8 = $r102;

        exitmonitor r7;

     label04:
        throw r8;

     label05:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: done removing from pids map");

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

     label06:
        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r16.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: starting to update cpu stats");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: done updating cpu stats");

     label07:
        i45 = r1.<com.android.server.am.ProcessRecord: int uid>;

        r103 = null;

        b1 = 0;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z1 != 0 goto label15;

        r9 = null;

     label08:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: getting gids from package manager");

        $r83 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r10 = virtualinvoke $r83.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r78 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r77 = $r78.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r9 = virtualinvoke r10.<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>($r77);

        $z13 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        if $z13 == 0 goto label10;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: checking external storage perm");

        $r88 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r89 = $r88.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i39 = virtualinvoke r10.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_ALL_EXTERNAL_STORAGE", $r89);

        if $i39 != 0 goto label09;

        b1 = 3;

        goto label10;

     label09:
        b1 = 2;

     label10:
        goto label12;

     label11:
        $r100 := @caughtexception;

        r104 = $r100;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unable to retrieve gids", r104);

     label12:
        if r9 != null goto label13;

        r103 = newarray (int)[2];

        goto label14;

     label13:
        $i29 = lengthof r9;

        $i28 = $i29 + 2;

        r103 = newarray (int)[$i28];

        $i30 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r9, 0, r103, 2, $i30);

     label14:
        $i35 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i45);

        $i36 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i35);

        r103[0] = $i36;

        $i37 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i45);

        $i38 = staticinvoke <android.os.UserHandle: int getUserGid(int)>($i37);

        r103[1] = $i38;

     label15:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: building args");

        $i4 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i4 == 0 goto label17;

        $i27 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i27 != 1 goto label16;

        $r79 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        if $r79 == null goto label16;

        $r80 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r81 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        $r82 = virtualinvoke $r81.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z14 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>($r82);

        if $z14 == 0 goto label16;

        i45 = 0;

     label16:
        $i26 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i26 != 2 goto label17;

        $r74 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i25 = $r74.<android.content.pm.ApplicationInfo: int flags>;

        $i31 = $i25 & 16;

        if $i31 == 0 goto label17;

        i45 = 0;

     label17:
        b46 = 0;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r17.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i6 & 2;

        if $i5 == 0 goto label18;

        b47 = b46 | 1;

        b46 = b47 | 2;

     label18:
        $r18 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i7 = $r18.<android.content.pm.ApplicationInfo: int flags>;

        $i8 = $i7 & 16384;

        if $i8 != 0 goto label19;

        $z12 = r0.<com.android.server.am.ActivityManagerService: boolean mSafeMode>;

        if $z12 != 1 goto label20;

     label19:
        b46 = b46 | 8;

     label20:
        $r20 = "1";

        $r19 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.checkjni");

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z3 == 0 goto label21;

        b46 = b46 | 2;

     label21:
        $r22 = "1";

        $r23 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.jni.logging");

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z4 == 0 goto label22;

        b46 = b46 | 16;

     label22:
        $r21 = "1";

        $r26 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.assert");

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label23;

        b46 = b46 | 4;

     label23:
        if r4 == null goto label24;

        $r75 = r4;

        goto label25;

     label24:
        $r24 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r75 = $r24.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

     label25:
        r105 = $r75;

        if r105 != null goto label26;

        $r76 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        r105 = $r76[0];

     label26:
        r11 = null;

        $r25 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r29 = $r25.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r29 == null goto label27;

        $r70 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r69 = $r70.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        r11 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r69);

     label27:
        if r5 != null goto label28;

        $z11 = 1;

        goto label29;

     label28:
        $z11 = 0;

     label29:
        z0 = $z11;

        if r5 != null goto label30;

        r5 = "android.app.ActivityThread";

     label30:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: asking zygote to start proc");

        $r31 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r30 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r30.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r27 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r32 = $r27.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r33 = $r28.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        r13 = staticinvoke <android.os.Process: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(r5, $r31, i45, i45, r103, b46, b1, $i9, $r32, r105, r11, $r33, r6);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: returned from zygote!");

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z6 == 0 goto label31;

        $r71 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i23 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r72 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i24 = $r72.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r71.<com.android.server.am.BatteryStatsService: void addIsolatedUid(int,int)>($i23, $i24);

     label31:
        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r37 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r34 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r34.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r36.<com.android.server.am.BatteryStatsService: void noteProcessStart(java.lang.String,int)>($r37, $i10);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: done updating battery stats");

        $r35 = newarray (java.lang.Object)[6];

        $i13 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i45);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r35[0] = $r38;

        $i12 = r13.<android.os.Process$ProcessStartResult: int pid>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r35[1] = $r41;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i45);

        $r35[2] = $r42;

        $r39 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r35[3] = $r39;

        $r35[4] = r2;

        if r3 == null goto label32;

        $r73 = r3;

        goto label33;

     label32:
        $r73 = "";

     label33:
        $r35[5] = $r73;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30014, $r35);

        $z7 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z7 == 0 goto label34;

        $r64 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r62 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i22 = r13.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke $r64.<com.android.server.Watchdog: void processStarted(java.lang.String,int)>($r62, $i22);

     label34:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: building log message");

        r12 = r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r12.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start proc ");

        $r46 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        if z0 != 0 goto label35;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label35:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        if r3 == null goto label36;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label36:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pid=");

        $i15 = r13.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gids={");

        if r103 == null goto label39;

        i2 = 0;

     label37:
        $i19 = lengthof r103;

        if i2 >= $i19 goto label39;

        if i2 == 0 goto label38;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label38:
        $i20 = r103[i2];

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        i2 = i2 + 1;

        goto label37;

     label39:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        if r105 == null goto label40;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" abi=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r105);

     label40:
        $r50 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r50);

        $i17 = r13.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>($i17);

        $z8 = r13.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        r1.<com.android.server.am.ProcessRecord: boolean usingWrapper> = $z8;

        r1.<com.android.server.am.ProcessRecord: boolean removed> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean killed> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean killedByAm> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: starting to update pids map");

        $r56 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r106 = $r56;

        entermonitor $r56;

     label41:
        $r57 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i18 = r13.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke $r57.<android.util.SparseArray: void put(int,java.lang.Object)>($i18, r1);

        if z0 == 0 goto label44;

        $r54 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r14 = virtualinvoke $r54.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(20);

        r14.<android.os.Message: java.lang.Object obj> = r1;

        $r55 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z9 = r13.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        if $z9 == 0 goto label42;

        $l21 = 1200000L;

        goto label43;

     label42:
        $l21 = 10000L;

     label43:
        virtualinvoke $r55.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r14, $l21);

     label44:
        exitmonitor r106;

     label45:
        goto label48;

     label46:
        $r101 := @caughtexception;

        r15 = $r101;

        exitmonitor r106;

     label47:
        throw r15;

     label48:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l0, "startProcess: done updating pids map");

     label49:
        goto label52;

     label50:
        $r87 := @caughtexception;

        r107 = $r87;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

        $r95 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r96 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r97 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i43 = $r97.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r95.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r96, $i43);

        $z15 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z15 == 0 goto label51;

        $r93 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i41 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r94 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i42 = $r94.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r93.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i41, $i42);

     label51:
        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r92 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r91 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r90, r107);

     label52:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label10 with label11;
        catch java.lang.Throwable from label41 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.RuntimeException from label07 to label49 with label50;
    }

    void updateUsageStats(com.android.server.am.ActivityRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r2, r3, r19;
        java.lang.Throwable r4, r5, $r16, $r18;
        com.android.server.am.BatteryStatsService $r6;
        android.app.usage.UsageStatsManagerInternal $r7, $r11, $r12, $r17;
        com.android.server.am.ProcessRecord $r9, $r13;
        int $i0, $i1, $i2, $i3;
        android.content.ComponentName $r10, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r2 = virtualinvoke $r6.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        if z0 == 0 goto label07;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r11 == null goto label01;

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $r15 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $i3 = r1.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke $r17.<android.app.usage.UsageStatsManagerInternal: void reportEvent(android.content.ComponentName,int,int)>($r15, $i3, 1);

     label01:
        r3 = r2;

        entermonitor r2;

     label02:
        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i2 = $r13.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: void noteActivityResumedLocked(int)>($i2);

        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r3;

     label05:
        throw r4;

     label06:
        goto label13;

     label07:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r7 == null goto label08;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $r10 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $i1 = r1.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke $r12.<android.app.usage.UsageStatsManagerInternal: void reportEvent(android.content.ComponentName,int,int)>($r10, $i1, 2);

     label08:
        r19 = r2;

        entermonitor r2;

     label09:
        $r9 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i0 = $r9.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: void noteActivityPausedLocked(int)>($i0);

        exitmonitor r19;

     label10:
        goto label13;

     label11:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r19;

     label12:
        throw r5;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    android.content.Intent getHomeIntent()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1, $r2;
        java.lang.String $r3, $r4, $r8;
        android.content.ComponentName $r5;
        int $i0;
        android.net.Uri $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = new android.content.Intent;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction>;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData>;

        if $r3 == null goto label1;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData>;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r8);

        goto label2;

     label1:
        $r9 = null;

     label2:
        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>($r4, $r9);

        r1 = $r2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r5);

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i0 == 1 goto label3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.HOME");

     label3:
        return r1;
    }

    boolean startHomeActivityLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2, $r9, r18;
        com.android.server.am.ProcessRecord r3;
        android.content.ComponentName $r4, $r17;
        android.content.pm.ApplicationInfo $r5, $r10, $r11, $r12;
        java.lang.String $r6, $r7, $r13, $r16;
        com.android.server.am.ActivityStackSupervisor $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 != 1 goto label1;

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction>;

        if $r16 != null goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent getHomeIntent()>();

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent,int,int)>(r1, 1024, i0);

        if r2 == null goto label3;

        $r4 = new android.content.ComponentName;

        $r5 = r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r5.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r6 = r2.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r4.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);

        $r9 = new android.content.pm.ActivityInfo;

        specialinvoke $r9.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>(r2);

        r18 = $r9;

        $r10 = r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r10, i0);

        r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r11;

        $r13 = r18.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r12 = r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r13, $i2, 1);

        if r3 == null goto label2;

        $r17 = r3.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r17 != null goto label3;

     label2:
        $i4 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i3 = $i4 | 268435456;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>($i3);

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r14.<com.android.server.am.ActivityStackSupervisor: void startHomeActivity(android.content.Intent,android.content.pm.ActivityInfo)>(r1, r18);

     label3:
        return 1;
    }

    private android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        int i0, i1;
        android.content.pm.ActivityInfo r2;
        android.content.ComponentName r3;
        android.content.pm.ResolveInfo r4;
        android.content.pm.IPackageManager $r5, $r9;
        android.content.Context $r6;
        android.content.ContentResolver $r7;
        java.lang.String $r8;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = null;

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label1:
        if r3 == null goto label2;

        $r9 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r2 = interfaceinvoke $r9.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        goto label3;

     label2:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r7);

        r4 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r1, $r8, i0, i1);

        if r4 == null goto label3;

        r2 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return r2;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    void startSetupActivityLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ContentResolver r1;
        android.content.Intent r2, $r7;
        java.util.List r3;
        android.content.pm.ResolveInfo r4, $r30;
        int i0, $i1, $i2, $i4, $i5, $i6;
        java.lang.String r5, $r16, $r17, $r28, r35;
        boolean $z0, $z1;
        android.content.Context $r6, $r8;
        android.content.pm.PackageManager $r9;
        android.os.Bundle $r10, $r24, $r25, $r27;
        android.content.pm.ActivityInfo $r11, $r14, $r15, $r18, $r22, $r26, $r29, $r31;
        android.content.ComponentName $r12;
        com.android.server.am.ActivityStackSupervisor $r20;
        android.content.pm.ApplicationInfo $r21, $r23, $r34;
        java.lang.Object $r32, $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mCheckedForSetup>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 == 1 goto label8;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "device_provisioned", 0);

        if $i2 == 0 goto label8;

        r0.<com.android.server.am.ActivityManagerService: boolean mCheckedForSetup> = 1;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.UPGRADE_SETUP");

        r2 = $r7;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r9.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 128);

        r4 = null;

        i0 = 0;

     label2:
        if r3 == null goto label4;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 >= $i4 goto label4;

        $r32 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r30 = (android.content.pm.ResolveInfo) $r32;

        $r31 = $r30.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r34 = $r31.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r34.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i6 & 1;

        if $i5 == 0 goto label3;

        $r33 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (android.content.pm.ResolveInfo) $r33;

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        if r4 == null goto label8;

        $r11 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r11.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r10 == null goto label5;

        $r29 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r27 = $r29.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        $r28 = virtualinvoke $r27.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.SETUP_VERSION");

        goto label6;

     label5:
        $r28 = null;

     label6:
        r35 = $r28;

        if r35 != null goto label7;

        $r22 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r21 = $r22.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r25 = $r21.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r25 == null goto label7;

        $r26 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r23 = $r26.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r23.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        r35 = virtualinvoke $r24.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.SETUP_VERSION");

     label7:
        r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "last_setup_shown");

        if r35 == null goto label8;

        $z1 = virtualinvoke r35.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label8;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r12 = new android.content.ComponentName;

        $r15 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r15.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r14 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r14.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r12.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r17);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r12);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r18 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        virtualinvoke $r20.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord)>(null, r2, null, $r18, null, null, null, null, 0, 0, 0, null, 0, 0, 0, null, 0, null, null, null);

     label8:
        return;
    }

    android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.CompatModePackages $r2;
        android.content.res.CompatibilityInfo $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $r3 = virtualinvoke $r2.<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        return $r3;
    }

    void enforceNotIsolatedCaller(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r6;
        int $i0;
        boolean $z0;
        java.lang.SecurityException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>($i0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.SecurityException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Isolated process not allowed to call ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return;
    }

    void enforceShellRestriction(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        java.lang.SecurityException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i1 != 2000 goto label2;

        if i0 < 0 goto label1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>(r1, i0);

        if $z0 == 0 goto label2;

     label1:
        $r2 = new java.lang.SecurityException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shell does not have permission to access user ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        return;
    }

    public int getFrontActivityScreenCompatMode()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r5;
        com.android.server.am.CompatModePackages $r4;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getFrontActivityScreenCompatMode");

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $i0 = virtualinvoke $r4.<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setFrontActivityScreenCompatMode(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0;
        java.lang.Throwable r2, $r5;
        com.android.server.am.CompatModePackages $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_SCREEN_COMPATIBILITY", "setFrontActivityScreenCompatMode");

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        virtualinvoke $r4.<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getPackageScreenCompatMode(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        java.lang.Throwable r3, $r6;
        com.android.server.am.CompatModePackages $r5;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getPackageScreenCompatMode");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $i0 = virtualinvoke $r5.<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>(r1);

        exitmonitor r2;

     label2:
        return $i0;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPackageScreenCompatMode(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        int i0;
        java.lang.Throwable r3, $r6;
        com.android.server.am.CompatModePackages $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_SCREEN_COMPATIBILITY", "setPackageScreenCompatMode");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        virtualinvoke $r5.<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getPackageAskScreenCompat(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        java.lang.Throwable r3, $r6;
        com.android.server.am.CompatModePackages $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getPackageAskScreenCompat");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $z0 = virtualinvoke $r5.<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>(r1);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPackageAskScreenCompat(java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        boolean z0;
        java.lang.Throwable r3, $r6;
        com.android.server.am.CompatModePackages $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_SCREEN_COMPATIBILITY", "setPackageAskScreenCompat");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        virtualinvoke $r5.<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>(r1, z0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void dispatchProcessesChanged()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Throwable r2, $r20;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r3;
        java.util.ArrayList $r5, $r8, $r10, $r11, $r12;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r6, $r7, $r17, $r18;
        android.os.RemoteCallbackList $r13, $r14, $r16;
        android.os.IInterface $r15;
        boolean $z1;
        android.os.RemoteException $r19;
        android.app.IProcessObserver r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label01:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        $i2 = lengthof $r6;

        if $i2 >= i0 goto label02;

        $r18 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[i0];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r18;

     label02:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r11.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r10);

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r12.<java.util.ArrayList: void clear()>();

        exitmonitor r1;

     label03:
        goto label06;

     label04:
        $r20 := @caughtexception;

        r2 = $r20;

        exitmonitor r1;

     label05:
        throw r2;

     label06:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        i12 = virtualinvoke $r13.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label07:
        if i12 <= 0 goto label15;

        i12 = i12 + -1;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        $r15 = virtualinvoke $r16.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i12);

        r21 = (android.app.IProcessObserver) $r15;

        if r21 == null goto label14;

     label08:
        i1 = 0;

     label09:
        if i1 >= i0 goto label12;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        r3 = $r17[i1];

        $i3 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i5 = $i3 & 1;

        if $i5 == 0 goto label10;

        $i10 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i11 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid>;

        $z1 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: boolean foregroundActivities>;

        interfaceinvoke r21.<android.app.IProcessObserver: void onForegroundActivitiesChanged(int,int,boolean)>($i10, $i11, $z1);

     label10:
        $i4 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i7 = $i4 & 2;

        if $i7 == 0 goto label11;

        $i8 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i9 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid>;

        $i6 = r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int processState>;

        interfaceinvoke r21.<android.app.IProcessObserver: void onProcessStateChanged(int,int,int)>($i8, $i9, $i6);

     label11:
        i1 = i1 + 1;

        goto label09;

     label12:
        goto label14;

     label13:
        $r19 := @caughtexception;

     label14:
        goto label07;

     label15:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r14.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label08 to label12 with label13;
    }

    private void dispatchProcessDied(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        android.app.IProcessObserver r1;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        i2 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label1:
        if i2 <= 0 goto label6;

        i2 = i2 + -1;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r1 = (android.app.IProcessObserver) $r6;

        if r1 == null goto label5;

     label2:
        interfaceinvoke r1.<android.app.IProcessObserver: void onProcessDied(int,int)>(i0, i1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        goto label1;

     label6:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public final int startActivity(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, $i2, $i3;
        android.app.ProfilerInfo r7;
        android.os.Bundle r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.app.ProfilerInfo;

        r8 := @parameter9: android.os.Bundle;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>(r1, r2, r3, r4, r5, r6, i0, i1, r7, r8, $i2);

        return $i3;
    }

    public final int startActivityAsUser(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        android.app.ProfilerInfo r7;
        android.os.Bundle r8;
        com.android.server.am.ActivityStackSupervisor $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.app.ProfilerInfo;

        r8 := @parameter9: android.os.Bundle;

        i2 := @parameter10: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivity");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i2, 0, 2, "startActivity", null);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i5 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(r1, -1, r2, r3, r4, null, null, r5, r6, i0, i1, r7, null, null, r8, i6, null, null);

        return $i5;
    }

    public final int startActivityAsCaller(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0, r11;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6, r10, $r15, $r31, $r38;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        android.app.ProfilerInfo r7;
        android.os.Bundle r8;
        com.android.server.am.ActivityRecord r9;
        java.lang.Throwable r13, $r36;
        com.android.server.am.ActivityStackSupervisor $r14, $r19;
        android.content.pm.ActivityInfo $r16;
        com.android.server.am.ProcessRecord $r17, $r18, $r20, $r21, $r23;
        boolean $z0;
        java.lang.StringBuilder $r22, $r25, $r26, $r27, $r30, $r32, $r33, $r34;
        java.lang.SecurityException $r24, $r28, $r29, $r35, $r37, $r39, r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.app.ProfilerInfo;

        r8 := @parameter9: android.os.Bundle;

        i2 := @parameter10: int;

        r11 = r0;

        entermonitor r0;

     label01:
        if r5 != null goto label02;

        $r37 = new java.lang.SecurityException;

        specialinvoke $r37.<java.lang.SecurityException: void <init>(java.lang.String)>("Must be called from an activity");

        throw $r37;

     label02:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r9 = virtualinvoke $r14.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)>(r5);

        if r9 != null goto label03;

        $r35 = new java.lang.SecurityException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called with bad activity token: ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.SecurityException: void <init>(java.lang.String)>($r38);

        throw $r35;

     label03:
        $r16 = r9.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r15 = $r16.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 != 0 goto label04;

        $r29 = new java.lang.SecurityException;

        specialinvoke $r29.<java.lang.SecurityException: void <init>(java.lang.String)>("Must be called from an activity that is declared in the android package");

        throw $r29;

     label04:
        $r17 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r17 != null goto label05;

        $r28 = new java.lang.SecurityException;

        specialinvoke $r28.<java.lang.SecurityException: void <init>(java.lang.String)>("Called without a process attached to activity");

        throw $r28;

     label05:
        $r18 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i4 = $r18.<com.android.server.am.ProcessRecord: int uid>;

        $i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i4);

        if $i5 == 1000 goto label06;

        $r21 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i8 = $r21.<com.android.server.am.ProcessRecord: int uid>;

        $i7 = r9.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        if $i8 == $i7 goto label06;

        $r24 = new java.lang.SecurityException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling activity in uid ");

        $r23 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i10 = $r23.<com.android.server.am.ProcessRecord: int uid>;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be system uid or original calling uid ");

        $i9 = r9.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.SecurityException: void <init>(java.lang.String)>($r31);

        throw $r24;

     label06:
        i3 = r9.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        r10 = r9.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        exitmonitor r11;

     label07:
        goto label10;

     label08:
        $r36 := @caughtexception;

        r13 = $r36;

        exitmonitor r11;

     label09:
        throw r13;

     label10:
        if i2 != -10000 goto label11;

        $r20 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i6 = $r20.<com.android.server.am.ProcessRecord: int uid>;

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i6);

     label11:
        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        i11 = virtualinvoke $r19.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(null, i3, r10, r3, r4, null, null, r5, r6, i0, i1, null, null, null, r8, i2, null, null);

     label12:
        return i11;

     label13:
        $r39 := @caughtexception;

        r40 = $r39;

        throw r40;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.SecurityException from label11 to label12 with label13;
    }

    public final android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, $i3, $i4, i6;
        android.app.ProfilerInfo r7;
        android.os.Bundle r8;
        android.app.IActivityManager$WaitResult r9, $r11;
        com.android.server.am.ActivityStackSupervisor $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.app.ProfilerInfo;

        r8 := @parameter9: android.os.Bundle;

        i2 := @parameter10: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivityAndWait");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i2, 0, 2, "startActivityAndWait", null);

        $r11 = new android.app.IActivityManager$WaitResult;

        specialinvoke $r11.<android.app.IActivityManager$WaitResult: void <init>()>();

        r9 = $r11;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(r1, -1, r2, r3, r4, null, null, r5, r6, i0, i1, r7, r9, null, r8, i6, null, null);

        return r9;
    }

    public final int startActivityWithConfig(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.content.res.Configuration, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, i3, $i4, $i5, i6;
        android.content.res.Configuration r7;
        android.os.Bundle r8;
        com.android.server.am.ActivityStackSupervisor $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.content.res.Configuration;

        r8 := @parameter9: android.os.Bundle;

        i2 := @parameter10: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivityWithConfig");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i4, $i5, i2, 0, 2, "startActivityWithConfig", null);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        i3 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(r1, -1, r2, r3, r4, null, null, r5, r6, i0, i1, null, null, r7, r8, i6, null, null);

        return i3;
    }

    public int startActivityIntentSender(android.app.IApplicationThread, android.content.IntentSender, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0, r10;
        android.app.IApplicationThread r1;
        android.content.IntentSender r2;
        android.content.Intent r3;
        java.lang.String r4, r6;
        android.os.IBinder r5;
        int i0, i1, i2, $i3, $i4, i5;
        android.os.Bundle r7;
        android.content.IIntentSender r8;
        com.android.server.am.PendingIntentRecord r9;
        com.android.server.am.ActivityStack r11;
        java.lang.Throwable r12, $r19;
        boolean $z0, $z1;
        com.android.server.am.ActivityRecord $r14, $r15;
        android.content.pm.ApplicationInfo $r16;
        android.content.pm.ActivityInfo $r17;
        java.lang.IllegalArgumentException $r18, $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.IntentSender;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r7 := @parameter9: android.os.Bundle;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivityIntentSender");

        if r3 == null goto label1;

        $z1 = virtualinvoke r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label1;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r20;

     label1:
        r8 = virtualinvoke r2.<android.content.IntentSender: android.content.IIntentSender getTarget()>();

        $z0 = r8 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad PendingIntent object");

        throw $r18;

     label2:
        r9 = (com.android.server.am.PendingIntentRecord) r8;

        r10 = r0;

        entermonitor r0;

     label3:
        r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        $r14 = r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r14 == null goto label4;

        $r15 = r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r17 = $r15.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r16 = $r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 != $i3 goto label4;

        r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = 0L;

     label4:
        exitmonitor r10;

     label5:
        goto label8;

     label6:
        $r19 := @caughtexception;

        r12 = $r19;

        exitmonitor r10;

     label7:
        throw r12;

     label8:
        i5 = virtualinvoke r9.<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,android.app.IActivityContainer)>(0, r3, r4, null, null, r5, r6, i0, i1, i2, r7, null);

        return i5;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int startVoiceActivity(java.lang.String, int, int, android.content.Intent, java.lang.String, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r8;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i9;
        android.content.Intent r2;
        android.service.voice.IVoiceInteractionSession r4;
        com.android.internal.app.IVoiceInteractor r5;
        android.app.ProfilerInfo r6;
        android.os.Bundle r7;
        java.lang.NullPointerException $r9;
        com.android.server.am.ActivityStackSupervisor $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.SecurityException $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.content.Intent;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.service.voice.IVoiceInteractionSession;

        r5 := @parameter6: com.android.internal.app.IVoiceInteractor;

        i2 := @parameter7: int;

        r6 := @parameter8: android.app.ProfilerInfo;

        r7 := @parameter9: android.os.Bundle;

        i3 := @parameter10: int;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.BIND_VOICE_INTERACTION");

        if $i4 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: startVoiceActivity() from pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_VOICE_INTERACTION");

        r8 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r8);

        $r18 = new java.lang.SecurityException;

        specialinvoke $r18.<java.lang.SecurityException: void <init>(java.lang.String)>(r8);

        throw $r18;

     label1:
        if r4 == null goto label2;

        if r5 != null goto label3;

     label2:
        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("null session or interactor");

        throw $r9;

     label3:
        i9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, i1, i3, 0, 2, "startVoiceActivity", null);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i5 = virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(null, i1, r1, r2, r3, r4, r5, null, null, 0, i2, r6, null, null, r7, i9, null, null);

        return $i5;
    }

    public boolean startNextMatchingActivity(android.os.IBinder, android.content.Intent, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.os.IBinder r1;
        android.content.Intent r2, $r14, $r15, $r16, r65;
        android.os.Bundle r3;
        com.android.server.am.ActivityRecord r5, r67;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.content.pm.ActivityInfo r6, $r35, $r37, $r43, $r51;
        java.util.List r7;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i14, i15, i16;
        android.content.pm.ResolveInfo r8, $r62;
        long l2;
        java.lang.Throwable r9, $r64;
        com.android.server.am.ProcessRecord $r11, $r13, $r30;
        android.app.IApplicationThread $r12, $r32;
        android.net.Uri $r17;
        java.lang.String $r19, $r22, $r23, $r24, $r29, $r33, $r38, $r39, $r42, $r44, $r45, $r47, $r52, $r53, $r55, $r59, r68;
        android.content.pm.IPackageManager $r21;
        android.content.ComponentName $r25;
        android.content.pm.ApplicationInfo $r26;
        com.android.server.am.ActivityStackSupervisor $r31;
        android.view.IApplicationToken$Stub $r34;
        java.lang.Object $r36, $r61;
        java.lang.StringBuilder $r40, $r41, $r46, $r48, $r49, $r50, $r54, $r56, $r57, $r58;
        java.lang.IllegalArgumentException $r60;
        android.os.RemoteException $r63;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.Bundle;

        if r2 == null goto label01;

        $z4 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z4 != 1 goto label01;

        $r60 = new java.lang.IllegalArgumentException;

        specialinvoke $r60.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r60;

     label01:
        r4 = r0;

        entermonitor r0;

     label02:
        r5 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r5 != null goto label04;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        exitmonitor r4;

     label03:
        return 0;

     label04:
        $r11 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label05;

        $r13 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r12 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 != null goto label07;

     label05:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        exitmonitor r4;

     label06:
        return 0;

     label07:
        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(android.content.Intent)>(r2);

        r65 = $r15;

        $r14 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r17 = virtualinvoke $r14.<android.content.Intent: android.net.Uri getData()>();

        $r16 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r19 = virtualinvoke $r16.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke r65.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r17, $r19);

        virtualinvoke r65.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

        $i4 = virtualinvoke r65.<android.content.Intent: int getFlags()>();

        $i5 = $i4 & 8;

        if $i5 == 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z0 = $z3;

        r6 = null;

     label10:
        $r21 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r22 = r5.<com.android.server.am.ActivityRecord: java.lang.String resolvedType>;

        $i6 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r7 = interfaceinvoke $r21.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r65, $r22, 66560, $i6);

        if r7 == null goto label11;

        $i14 = interfaceinvoke r7.<java.util.List: int size()>();

        goto label12;

     label11:
        $i14 = 0;

     label12:
        i0 = $i14;

        i1 = 0;

     label13:
        if i1 >= i0 goto label16;

        $r36 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (android.content.pm.ResolveInfo) $r36;

        $r35 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r38 = $r35.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r39 = r5.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z1 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z1 == 0 goto label15;

        $r37 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r45 = $r37.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r43 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r44 = $r43.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z2 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        if $z2 == 0 goto label15;

        i15 = i1 + 1;

        if i15 >= i0 goto label14;

        $r61 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i15);

        $r62 = (android.content.pm.ResolveInfo) $r61;

        r6 = $r62.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label14:
        if z0 == 0 goto label16;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next matching activity: found current ");

        $r42 = r5.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r51 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r52 = $r51.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r46 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r47);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next matching activity: next is ");

        $r59 = r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r54 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r53 = r6.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r55);

        goto label16;

     label15:
        i1 = i1 + 1;

        goto label13;

     label16:
        goto label18;

     label17:
        $r63 := @caughtexception;

     label18:
        if r6 != null goto label21;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        if z0 == 0 goto label19;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", "Next matching activity: nothing found");

     label19:
        exitmonitor r4;

     label20:
        return 0;

     label21:
        $r25 = new android.content.ComponentName;

        $r26 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r26.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r23 = r6.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r25.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r24, $r23);

        virtualinvoke r65.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r25);

        $i8 = virtualinvoke r65.<android.content.Intent: int getFlags()>();

        $i7 = $i8 & -503316481;

        virtualinvoke r65.<android.content.Intent: android.content.Intent setFlags(int)>($i7);

        z5 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        r5.<com.android.server.am.ActivityRecord: boolean finishing> = 1;

        r67 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        r68 = r5.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        i16 = r5.<com.android.server.am.ActivityRecord: int requestCode>;

        r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

        if r67 == null goto label22;

        virtualinvoke r67.<com.android.server.am.ActivityRecord: void removeResultsLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>(r5, r68, i16);

     label22:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r30 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r32 = $r30.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r33 = r5.<com.android.server.am.ActivityRecord: java.lang.String resolvedType>;

        if r67 == null goto label23;

        $r34 = r67.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        goto label24;

     label23:
        $r34 = null;

     label24:
        $i10 = r5.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        $r29 = r5.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        $i9 = r5.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        i3 = virtualinvoke $r31.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord)>($r32, r65, $r33, r6, null, null, $r34, r68, i16, -1, $i10, $r29, -1, $i9, 0, r3, 0, null, null, null);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        r5.<com.android.server.am.ActivityRecord: boolean finishing> = z5;

        if i3 == 0 goto label26;

        exitmonitor r4;

     label25:
        return 0;

     label26:
        exitmonitor r4;

     label27:
        return 1;

     label28:
        $r64 := @caughtexception;

        r9 = $r64;

        exitmonitor r4;

     label29:
        throw r9;

        catch android.os.RemoteException from label10 to label16 with label17;
        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label04 to label06 with label28;
        catch java.lang.Throwable from label07 to label20 with label28;
        catch java.lang.Throwable from label21 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    public final int startActivityFromRecents(int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2;
        android.os.Bundle r1;
        java.lang.String r2;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.START_TASKS_FROM_RECENTS");

        if $i1 == 0 goto label1;

        r2 = "Permission Denial: startActivityFromRecents called without android.permission.START_TASKS_FROM_RECENTS";

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r3;

     label1:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int startActivityFromRecentsInner(int,android.os.Bundle)>(i0, r1);

        return $i2;
    }

    final int startActivityFromRecentsInner(int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0, r5;
        int i0, i1, i2, $i3;
        android.os.Bundle r1;
        com.android.server.am.TaskRecord r2;
        java.lang.String r3, $r15;
        android.content.Intent r4;
        java.lang.Throwable r6, $r14;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r5 = r0;

        entermonitor r0;

     label1:
        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

        if r2 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found.");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        i1 = r2.<com.android.server.am.TaskRecord: int mCallingUid>;

        r3 = r2.<com.android.server.am.TaskRecord: java.lang.String mCallingPackage>;

        r4 = r2.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(1048576);

        i2 = r2.<com.android.server.am.TaskRecord: int userId>;

        exitmonitor r5;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r5;

     label5:
        throw r6;

     label6:
        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int startActivityInPackage(int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(i1, r3, r4, null, null, null, 0, 0, r1, i2, null, r2);

        return $i3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    final int startActivityInPackage(int, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.os.Bundle, int, android.app.IActivityContainer, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i7;
        java.lang.String r1, r3, r5;
        android.content.Intent r2;
        android.os.IBinder r4;
        android.os.Bundle r6;
        android.app.IActivityContainer r7;
        com.android.server.am.TaskRecord r8;
        com.android.server.am.ActivityStackSupervisor $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.IBinder;

        r5 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r6 := @parameter8: android.os.Bundle;

        i3 := @parameter9: int;

        r7 := @parameter10: android.app.IActivityContainer;

        r8 := @parameter11: com.android.server.am.TaskRecord;

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i5, $i6, i3, 0, 2, "startActivityInPackage", null);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        i4 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord)>(null, i0, r1, r2, r3, null, null, r4, r5, i1, i2, null, null, null, r6, i7, r7, r8);

        return i4;
    }

    public final int startActivities(android.app.IApplicationThread, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        android.os.Bundle r6;
        int i0, i1, $i2, $i3, i4;
        com.android.server.am.ActivityStackSupervisor $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent[];

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: android.os.Bundle;

        i0 := @parameter6: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivities");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i2, $i3, i0, 0, 2, "startActivity", null);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        i1 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: int startActivities(android.app.IApplicationThread,int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>(r1, -1, r2, r3, r4, r5, r6, i4);

        return i1;
    }

    final int startActivitiesInPackage(int, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.String r1;
        android.content.Intent[] r2;
        java.lang.String[] r3;
        android.os.IBinder r4;
        android.os.Bundle r5;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent[];

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.os.IBinder;

        r5 := @parameter5: android.os.Bundle;

        i1 := @parameter6: int;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i1, 0, 2, "startActivityInPackage", null);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        i2 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: int startActivities(android.app.IApplicationThread,int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>(null, i0, r1, r2, r3, r4, r5, i5);

        return i2;
    }

    private void removeRecentTasksForUserLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r4, $r6;
        com.android.server.am.TaskPersister $r3, $r8;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t remove recent task on user ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        return;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label2:
        if i1 < 0 goto label4;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.TaskRecord) $r5;

        $i3 = r1.<com.android.server.am.TaskRecord: int userId>;

        if $i3 != i0 goto label3;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r8);

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r3.<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>(null, 1);

        return;
    }

    private int processNextAffiliateChain(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i14, $i15, i16;
        com.android.server.am.TaskRecord r1, r2, r3, r4, $r12, $r18, $r21, $r31, $r32, $r33, $r43, $r57, $r60, $r61, r65, r66;
        java.util.ArrayList $r5, $r7, $r8, $r10, $r11, $r14, $r16, $r17, $r19, $r25, $r27, $r54, $r62, $r63;
        java.lang.Object $r6, $r13, $r15, $r28, $r29, $r55;
        java.util.Comparator $r9;
        java.lang.StringBuilder $r20, $r22, $r23, $r30, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r48, $r49, $r50, $r51, $r56, $r58;
        com.android.server.am.TaskPersister $r24, $r42, $r47, $r53;
        java.lang.String $r26, $r37, $r52, $r59;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.TaskRecord) $r6;

        i1 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $i4 = r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i4 != i1 goto label01;

        $r60 = r1.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        if $r60 != null goto label01;

        $r61 = r1.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if $r61 != null goto label01;

        r1.<com.android.server.am.TaskRecord: boolean inRecents> = 1;

        $i14 = i0 + 1;

        return $i14;

     label01:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i5 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i2 = $i5 - 1;

     label02:
        if i2 < i0 goto label04;

        $r54 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r55 = virtualinvoke $r54.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.am.TaskRecord) $r55;

        $i15 = r2.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        if $i15 != i1 goto label03;

        $r62 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r62.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $r63 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        virtualinvoke $r63.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label03:
        i2 = i2 + -1;

        goto label02;

     label04:
        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.Comparator mTaskRecordComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r11, $r9);

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        $r13 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r65 = (com.android.server.am.TaskRecord) $r13;

        r65.<com.android.server.am.TaskRecord: boolean inRecents> = 1;

        $r12 = r65.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if $r12 == null goto label05;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Link error 1 first.next=");

        $r57 = r65.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r59);

        virtualinvoke r65.<com.android.server.am.TaskRecord: void setNextAffiliate(com.android.server.am.TaskRecord)>(null);

        $r53 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r53.<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>(r65, 0);

     label05:
        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        i16 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        i3 = 0;

     label06:
        $i7 = i16 - 1;

        if i3 >= $i7 goto label09;

        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        $r29 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.TaskRecord) $r29;

        $r27 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        $i10 = i3 + 1;

        $r28 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i10);

        r4 = (com.android.server.am.TaskRecord) $r28;

        $r31 = r3.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        if $r31 == r4 goto label07;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Link error 2 next=");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prev=");

        $r43 = r3.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" setting prev=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r52);

        virtualinvoke r3.<com.android.server.am.TaskRecord: void setPrevAffiliate(com.android.server.am.TaskRecord)>(r4);

        $r47 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r47.<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>(r3, 0);

     label07:
        $r32 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if $r32 == r3 goto label08;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Link error 3 prev=");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" next=");

        $r33 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" setting next=");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r37);

        virtualinvoke r4.<com.android.server.am.TaskRecord: void setNextAffiliate(com.android.server.am.TaskRecord)>(r3);

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r42.<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>(r4, 0);

     label08:
        r4.<com.android.server.am.TaskRecord: boolean inRecents> = 1;

        i3 = i3 + 1;

        goto label06;

     label09:
        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        $i6 = i16 - 1;

        $r15 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        r66 = (com.android.server.am.TaskRecord) $r15;

        $r18 = r66.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        if $r18 == null goto label10;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Link error 4 last.prev=");

        $r21 = r66.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        virtualinvoke r66.<com.android.server.am.TaskRecord: void setPrevAffiliate(com.android.server.am.TaskRecord)>(null);

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r24.<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>(r66, 0);

     label10:
        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r17 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        virtualinvoke $r19.<java.util.ArrayList: boolean addAll(int,java.util.Collection)>(i0, $r17);

        $i8 = i0 + i16;

        return $i8;
    }

    void cleanupRecentTasksLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i10, $i11, i13;
        java.util.HashMap r1, r2, $r12, $r14;
        android.content.pm.IPackageManager r3;
        android.content.pm.ActivityInfo r4, r9, $r16;
        android.content.pm.ApplicationInfo r5, $r15, $r25, $r26, r55;
        int[] r6, r7, $r19;
        com.android.server.am.TaskRecord r8;
        java.util.ArrayList $r13, $r17, $r18, $r20, $r28, $r43;
        java.lang.Object $r21, $r23, $r27;
        android.content.ComponentName $r22, $r24, $r29, $r37, $r39, $r46, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r30, $r34, $r38, $r40, $r49;
        java.lang.StringBuilder $r31, $r35, $r36, $r48, $r51, $r52;
        com.android.server.am.TaskPersister $r32, $r50;
        com.android.server.am.ActivityRecord $r42;
        android.os.RemoteException $r53, $r54;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        if $r13 != null goto label01;

        return;

     label01:
        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r1 = $r12;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r2 = $r14;

        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r16 = new android.content.pm.ActivityInfo;

        specialinvoke $r16.<android.content.pm.ActivityInfo: void <init>()>();

        r4 = $r16;

        $r15 = new android.content.pm.ApplicationInfo;

        specialinvoke $r15.<android.content.pm.ApplicationInfo: void <init>()>();

        r5 = $r15;

        $r17 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if i0 != -1 goto label02;

        $r19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        goto label03;

     label02:
        $r19 = newarray (int)[1];

        $r19[0] = i0;

     label03:
        r6 = $r19;

        r7 = r6;

        i2 = lengthof r7;

        i3 = 0;

     label04:
        if i3 >= i2 goto label30;

        i4 = r7[i3];

        i5 = 0;

     label05:
        if i5 >= i1 goto label29;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r8 = (com.android.server.am.TaskRecord) $r21;

        $i6 = r8.<com.android.server.am.TaskRecord: int userId>;

        if $i6 == i4 goto label06;

        goto label28;

     label06:
        $z0 = r8.<com.android.server.am.TaskRecord: boolean autoRemoveRecents>;

        if $z0 == 0 goto label07;

        $r42 = virtualinvoke r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r42 != null goto label07;

        $r43 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r43.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r8.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r50);

        i5 = i5 + -1;

        i1 = i1 + -1;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing auto-remove without activity: ");

        $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r49);

        goto label28;

     label07:
        $r24 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        if $r24 == null goto label28;

        $r22 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $r23 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r22);

        r9 = (android.content.pm.ActivityInfo) $r23;

        if r9 != null goto label13;

     label08:
        $r46 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        r9 = interfaceinvoke r3.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r46, 8704, i4);

     label09:
        goto label11;

     label10:
        $r54 := @caughtexception;

        goto label28;

     label11:
        if r9 != null goto label12;

        r9 = r4;

     label12:
        $r47 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, r9);

     label13:
        if r9 != r4 goto label23;

        $r29 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $r30 = virtualinvoke $r29.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r27 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r30);

        r55 = (android.content.pm.ApplicationInfo) $r27;

        if r55 != null goto label19;

     label14:
        $r37 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $r40 = virtualinvoke $r37.<android.content.ComponentName: java.lang.String getPackageName()>();

        r55 = interfaceinvoke r3.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r40, 8704, i4);

     label15:
        goto label17;

     label16:
        $r53 := @caughtexception;

        goto label28;

     label17:
        if r55 != null goto label18;

        r55 = r5;

     label18:
        $r39 = r8.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $r38 = virtualinvoke $r39.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, r55);

     label19:
        if r55 == r5 goto label20;

        $i11 = r55.<android.content.pm.ApplicationInfo: int flags>;

        $i10 = $i11 & 8388608;

        if $i10 != 0 goto label21;

     label20:
        $r28 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r28.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r8.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r32);

        i5 = i5 + -1;

        i1 = i1 + -1;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing no longer valid recent: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r34);

        goto label28;

     label21:
        $z5 = r8.<com.android.server.am.TaskRecord: boolean isAvailable>;

        if $z5 == 0 goto label22;

     label22:
        r8.<com.android.server.am.TaskRecord: boolean isAvailable> = 0;

        goto label28;

     label23:
        $z2 = r9.<android.content.pm.ActivityInfo: boolean enabled>;

        if $z2 == 0 goto label24;

        $r25 = r9.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z1 = $r25.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z1 == 0 goto label24;

        $r26 = r9.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r26.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i8 & 8388608;

        if $i7 != 0 goto label26;

     label24:
        $z3 = r8.<com.android.server.am.TaskRecord: boolean isAvailable>;

        if $z3 == 0 goto label25;

     label25:
        r8.<com.android.server.am.TaskRecord: boolean isAvailable> = 0;

        goto label28;

     label26:
        $z4 = r8.<com.android.server.am.TaskRecord: boolean isAvailable>;

        if $z4 != 0 goto label27;

     label27:
        r8.<com.android.server.am.TaskRecord: boolean isAvailable> = 1;

     label28:
        i5 = i5 + 1;

        goto label05;

     label29:
        i3 = i3 + 1;

        goto label04;

     label30:
        i13 = 0;

     label31:
        if i13 >= i1 goto label32;

        i13 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int processNextAffiliateChain(int)>(i13);

        goto label31;

     label32:
        $r18 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mTmpRecents>;

        virtualinvoke $r18.<java.util.ArrayList: void clear()>();

        return;

        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private final boolean moveAffiliatedTasksToFront(com.android.server.am.TaskRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1, r2, r3, r4, r5, $r7, $r22, $r28, $r37, $r58, $r62, $r64, $r71, $r81;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i17, $i18, $i21, i23;
        boolean z0, $z1;
        java.util.ArrayList $r6, $r9, $r10, $r20;
        java.lang.Object $r8, $r19;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r38, $r39, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r59, $r60, $r61, $r63, $r65, $r67, $r68, $r70, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80;
        java.lang.String $r18, $r35, $r40, $r51, $r66, $r69, $r82;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        r2 = r1;

        i2 = i0;

     label01:
        $r7 = r2.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if $r7 == null goto label02;

        if i2 <= 0 goto label02;

        r2 = r2.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        i2 = i2 + -1;

        goto label01;

     label02:
        $i5 = r2.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $i4 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        if $i5 != $i4 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z0 = $z1;

        i3 = i2;

        r3 = r2;

     label05:
        if i3 >= i1 goto label14;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r19 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.TaskRecord) $r19;

        if r4 != r2 goto label07;

        $r81 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if $r81 != null goto label06;

        $i21 = r4.<com.android.server.am.TaskRecord: int mNextAffiliateTaskId>;

        if $i21 == -1 goto label09;

     label06:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain @");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r76 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": first task has next affiliate: ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r82 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r82);

        z0 = 0;

        goto label14;

     label07:
        $r22 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if $r22 != r3 goto label08;

        $i13 = r4.<com.android.server.am.TaskRecord: int mNextAffiliateTaskId>;

        $i9 = r3.<com.android.server.am.TaskRecord: int taskId>;

        if $i13 == $i9 goto label09;

     label08:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain @");

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": middle task ");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad next affiliate ");

        $r28 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id ");

        $i8 = r4.<com.android.server.am.TaskRecord: int mNextAffiliateTaskId>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r35);

        z0 = 0;

        goto label14;

     label09:
        $i12 = r4.<com.android.server.am.TaskRecord: int mPrevAffiliateTaskId>;

        if $i12 != -1 goto label10;

        $r62 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        if $r62 == null goto label14;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain @");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r72 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": last task ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r70 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has previous affiliate ");

        $r71 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r71);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r69);

        z0 = 0;

        goto label14;

     label10:
        $r37 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        if $r37 != null goto label11;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain @");

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": task ");

        $r56 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has previous affiliate ");

        $r58 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r65 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but should be id ");

        $r64 = r4.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r66);

        z0 = 0;

        goto label14;

     label11:
        $i14 = r4.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $i11 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        if $i14 == $i11 goto label12;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain @");

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": task ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has affiliated id ");

        $i17 = r4.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $r53 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but should be ");

        $i18 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $r50 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        z0 = 0;

        goto label14;

     label12:
        r3 = r4;

        i3 = i3 + 1;

        if i3 < i1 goto label13;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain ran off index ");

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": last task ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r40);

        z0 = 0;

        goto label14;

     label13:
        goto label05;

     label14:
        if z0 == 0 goto label15;

        if i3 >= i0 goto label15;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad chain @");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": did not extend to task ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        z0 = 0;

     label15:
        if z0 == 0 goto label18;

        i23 = i2;

     label16:
        if i23 > i3 goto label17;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i23);

        r5 = (com.android.server.am.TaskRecord) $r8;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i6 = i23 - i2;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>($i6, r5);

        i23 = i23 + 1;

        goto label16;

     label17:
        return 1;

     label18:
        return 0;
    }

    final void addRecentTaskLocked(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1, $r8, $r23, r25, r26;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, i15;
        java.util.ArrayList $r2, $r4, $r5, $r6, $r7, $r10, $r11, $r17, $r19, $r20, $r21;
        android.service.voice.IVoiceInteractionSession $r3;
        java.lang.Object $r9, $r22, $r24;
        com.android.server.am.TaskPersister $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.String $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $i5 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $i4 = r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i5 != $i4 goto label01;

        $i14 = r1.<com.android.server.am.TaskRecord: int mNextAffiliateTaskId>;

        if $i14 != -1 goto label01;

        $i13 = r1.<com.android.server.am.TaskRecord: int mPrevAffiliateTaskId>;

        if $i13 == -1 goto label02;

     label01:
        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if z0 != 0 goto label04;

        if i0 <= 0 goto label04;

        $r21 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r24 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(0);

        if $r24 != r1 goto label04;

        return;

     label04:
        if z0 == 0 goto label05;

        if i0 <= 0 goto label05;

        $z5 = r1.<com.android.server.am.TaskRecord: boolean inRecents>;

        if $z5 == 0 goto label05;

        $i11 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r22 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r23 = (com.android.server.am.TaskRecord) $r22;

        $i12 = $r23.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        if $i11 != $i12 goto label05;

        return;

     label05:
        $r3 = r1.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r3 == null goto label06;

        return;

     label06:
        z1 = 0;

        $z2 = r1.<com.android.server.am.TaskRecord: boolean inRecents>;

        if $z2 == 0 goto label10;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r11.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i1 < 0 goto label09;

        if z0 != 0 goto label07;

        $r17 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r20.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>(r1, 0);

        return;

     label07:
        $z4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean moveAffiliatedTasksToFront(com.android.server.am.TaskRecord,int)>(r1, i1);

        if $z4 == 0 goto label08;

        return;

     label08:
        z1 = 1;

        goto label10;

     label09:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task with inRecent not in recents: ");

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        z1 = 1;

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int trimRecentsForTask(com.android.server.am.TaskRecord,boolean)>(r1, 1);

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i15 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label11:
        $i7 = staticinvoke <android.app.ActivityManager: int getMaxRecentTasksStatic()>();

        if i15 < $i7 goto label12;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i9 = i15 - 1;

        $r9 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>($i9);

        r25 = (com.android.server.am.TaskRecord) $r9;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r25.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r12);

        i15 = i15 + -1;

        goto label11;

     label12:
        r1.<com.android.server.am.TaskRecord: boolean inRecents> = 1;

        if z0 == 0 goto label13;

        if z1 == 0 goto label14;

     label13:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

        goto label22;

     label14:
        if z0 == 0 goto label22;

        r26 = r1.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if r26 != null goto label15;

        r26 = r1.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mPrevAffiliate>;

     label15:
        if r26 == null goto label21;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i2 = virtualinvoke $r6.<java.util.ArrayList: int indexOf(java.lang.Object)>(r26);

        if i2 < 0 goto label19;

        $r8 = r1.<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord mNextAffiliate>;

        if r26 != $r8 goto label16;

        i3 = i2 + 1;

        goto label17;

     label16:
        i3 = i2;

     label17:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>(i3, r1);

        $z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean moveAffiliatedTasksToFront(com.android.server.am.TaskRecord,int)>(r1, i3);

        if $z3 == 0 goto label18;

        return;

     label18:
        z1 = 1;

        goto label20;

     label19:
        z1 = 1;

     label20:
        goto label22;

     label21:
        z1 = 1;

     label22:
        if z1 == 0 goto label23;

        $i8 = r1.<com.android.server.am.TaskRecord: int userId>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void cleanupRecentTasksLocked(int)>($i8);

     label23:
        return;
    }

    int trimRecentsForTask(com.android.server.am.TaskRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1, r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int i0, i1, i2, $i3, $i4, $i5;
        android.content.Intent r2, r4, $r11;
        java.util.ArrayList $r5, $r6, $r9;
        java.lang.Object $r7;
        com.android.server.am.TaskPersister $r10;
        java.lang.String $r12, $r13, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        r2 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if r2 == null goto label01;

        $z6 = virtualinvoke r2.<android.content.Intent: boolean isDocument()>();

        if $z6 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z1 = $z8;

        $i3 = r1.<com.android.server.am.TaskRecord: int maxRecents>;

        i1 = $i3 - 1;

        i2 = 0;

     label03:
        if i2 >= i0 goto label16;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.TaskRecord) $r7;

        if r1 == r3 goto label11;

        $i4 = r1.<com.android.server.am.TaskRecord: int userId>;

        $i5 = r3.<com.android.server.am.TaskRecord: int userId>;

        if $i4 == $i5 goto label04;

        goto label15;

     label04:
        if i2 <= 5 goto label05;

        virtualinvoke r3.<com.android.server.am.TaskRecord: void freeLastThumbnail()>();

     label05:
        r4 = r3.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r12 = r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r12 == null goto label06;

        $r13 = r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $r14 = r3.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z7 != 0 goto label07;

     label06:
        if r2 == null goto label15;

        $z3 = virtualinvoke r2.<android.content.Intent: boolean filterEquals(android.content.Intent)>(r4);

        if $z3 != 0 goto label07;

        goto label15;

     label07:
        if r4 == null goto label08;

        $z5 = virtualinvoke r4.<android.content.Intent: boolean isDocument()>();

        if $z5 == 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        z2 = $z4;

        if z1 == 0 goto label10;

        if z2 == 0 goto label10;

        if i1 <= 0 goto label11;

        i1 = i1 + -1;

        goto label15;

     label10:
        if z1 != 0 goto label15;

        if z2 == 0 goto label11;

        goto label15;

     label11:
        if z0 != 0 goto label12;

        return i2;

     label12:
        virtualinvoke r3.<com.android.server.am.TaskRecord: void disposeThumbnail()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        if r1 == r3 goto label13;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r3.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r10);

     label13:
        i2 = i2 + -1;

        i0 = i0 + -1;

        $r11 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r11 != null goto label14;

        r1 = r3;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>(r3, 0);

     label15:
        i2 = i2 + 1;

        goto label03;

     label16:
        return -1;
    }

    public void reportActivityFullyDrawn(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        virtualinvoke r3.<com.android.server.am.ActivityRecord: void reportFullyDrawnLocked()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setRequestedOrientation(android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        int i0;
        com.android.server.am.ActivityRecord r3;
        long l1;
        android.content.res.Configuration r4, $r11;
        java.lang.Throwable r5, $r14;
        android.view.IApplicationToken$Stub $r7, $r13;
        com.android.server.wm.WindowManagerService $r8, $r10;
        com.android.server.am.ProcessRecord $r9;
        boolean $z0, $z1;
        com.android.server.am.ActivityStackSupervisor $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 = r0;

        entermonitor r0;

     label01:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r7 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void setAppOrientation(android.view.IApplicationToken,int)>($r7, i0);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r9 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $z0 = virtualinvoke r3.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r9);

        if $z0 == 0 goto label04;

        $r13 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        goto label05;

     label04:
        $r13 = null;

     label05:
        r4 = virtualinvoke $r10.<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>($r11, $r13);

        if r4 == null goto label06;

        r3.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy> = 1;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r4, r3, 0, 0);

        if $z1 != 0 goto label06;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public int getRequestedOrientation(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r8;
        android.view.IApplicationToken$Stub $r6;
        com.android.server.wm.WindowManagerService $r7;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return -1;

     label3:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r6 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $i0 = virtualinvoke $r7.<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>($r6);

        exitmonitor r2;

     label4:
        return $i0;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final boolean finishActivity(android.os.IBinder, int, android.content.Intent, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        int i0, $i1;
        android.content.Intent r2;
        boolean z0, z1, z2, $z3, z4;
        com.android.server.am.ActivityRecord r4, r6, r7;
        com.android.server.am.TaskRecord r5, $r12, $r16;
        java.lang.Throwable r9, r10, $r22, $r24;
        com.android.server.am.ActivityStackSupervisor $r13, $r20;
        android.app.IActivityController $r14, $r18;
        com.android.server.am.ActivityStack $r15, $r17;
        java.lang.String $r19;
        java.lang.IllegalArgumentException $r21;
        com.android.server.Watchdog $r23;
        android.os.RemoteException $r25;
        long l2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        z0 := @parameter3: boolean;

        if r2 == null goto label01;

        $z3 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z3 != 1 goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r21;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r4 != null goto label04;

        exitmonitor r3;

     label03:
        return 1;

     label04:
        r5 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r6 = virtualinvoke r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getRootActivity()>();

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r12 = $r13.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if r5 != $r12 goto label06;

        if r6 != r4 goto label06;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r20.<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>();

        exitmonitor r3;

     label05:
        return 0;

     label06:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r14 == null goto label12;

        $r16 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r17 = $r16.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        r7 = virtualinvoke $r17.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>(r1, 0);

        if r7 == null goto label12;

        z1 = 1;

     label07:
        $r18 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r19 = r7.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        z1 = interfaceinvoke $r18.<android.app.IActivityController: boolean activityResuming(java.lang.String)>($r19);

     label08:
        goto label10;

     label09:
        $r25 := @caughtexception;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r23 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r23.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label10:
        if z1 != 0 goto label12;

        exitmonitor r3;

     label11:
        return 0;

     label12:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label13:
        if z0 == 0 goto label14;

        if r4 != r6 goto label14;

        $i1 = r5.<com.android.server.am.TaskRecord: int taskId>;

        z4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeTaskByIdLocked(int,int)>($i1, 0);

        goto label15;

     label14:
        $r15 = r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        z4 = virtualinvoke $r15.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>(r1, i0, r2, "app-request", 1);

     label15:
        z2 = z4;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label17:
        return z2;

     label18:
        $r24 := @caughtexception;

        r9 = $r24;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r9;

     label20:
        $r22 := @caughtexception;

        r10 = $r22;

        exitmonitor r3;

     label21:
        throw r10;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label13 to label16 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label11 with label20;
        catch java.lang.Throwable from label12 to label17 with label20;
        catch java.lang.Throwable from label18 to label21 with label20;
    }

    public final void finishHeavyWeightApp()
    {
        com.android.server.am.ActivityManagerService r0, r26;
        java.lang.String r1;
        java.util.ArrayList r2, $r7, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r24;
        com.android.server.am.ProcessRecord $r6, $r8, $r10;
        com.android.server.am.ActivityManagerService$MainHandler $r11, $r13;
        android.os.Message $r12;
        boolean $z1;
        java.lang.Object $r14;
        com.android.server.am.ActivityStack $r15;
        com.android.server.am.TaskRecord $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.SecurityException $r25;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i1 == 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: finishHeavyWeightApp() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r1 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r1);

        $r25 = new java.lang.SecurityException;

        specialinvoke $r25.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r25;

     label01:
        r26 = r0;

        entermonitor r0;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r6 != null goto label04;

        exitmonitor r26;

     label03:
        return;

     label04:
        $r7 = new java.util.ArrayList;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r2 = $r7;

        i0 = 0;

     label05:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label07;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityRecord) $r14;

        $z1 = r3.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label06;

        $r16 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r15 = $r16.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r15.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r3, 0, null, "finish-heavy", 1);

     label06:
        i0 = i0 + 1;

        goto label05;

     label07:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i3 = $r10.<com.android.server.am.ProcessRecord: int userId>;

        $r12 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(25, $i3, 0);

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r12);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

        exitmonitor r26;

     label08:
        goto label11;

     label09:
        $r24 := @caughtexception;

        r4 = $r24;

        exitmonitor r26;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void crashApplication(int, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r36;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12;
        java.lang.String r1, r2, r3, $r19;
        com.android.server.am.ProcessRecord r4, r6;
        android.util.SparseArray r5, $r10, $r11, $r23;
        java.lang.Throwable r7, r8, $r34, $r35;
        android.app.IApplicationThread $r12, $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r24, $r26, $r27, $r28, $r29, $r30, $r31;
        java.lang.Object $r22;
        boolean $z0;
        android.util.ArrayMap $r25;
        android.os.RemoteException $r32;
        java.lang.SecurityException $r33;
        long l14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i3 == 0 goto label01;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: crashApplication() from pid=");

        $i11 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r3 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r33 = new java.lang.SecurityException;

        specialinvoke $r33.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r33;

     label01:
        r36 = r0;

        entermonitor r0;

     label02:
        r4 = null;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r5 = $r10;

        entermonitor $r10;

     label03:
        i2 = 0;

     label04:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i4 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        if i2 >= $i4 goto label08;

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r22 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r6 = (com.android.server.am.ProcessRecord) $r22;

        $i9 = r6.<com.android.server.am.ProcessRecord: int uid>;

        if $i9 == i0 goto label05;

        goto label07;

     label05:
        $i10 = r6.<com.android.server.am.ProcessRecord: int pid>;

        if $i10 != i1 goto label06;

        r4 = r6;

        goto label08;

     label06:
        $r25 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z0 = virtualinvoke $r25.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

        r4 = r6;

     label07:
        i2 = i2 + 1;

        goto label04;

     label08:
        exitmonitor r5;

     label09:
        goto label12;

     label10:
        $r34 := @caughtexception;

        r7 = $r34;

        exitmonitor r5;

     label11:
        throw r7;

     label12:
        if r4 != null goto label14;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crashApplication: nothing for uid=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" initialPid=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packageName=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        exitmonitor r36;

     label13:
        return;

     label14:
        $r12 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label21;

        $i6 = r4.<com.android.server.am.ProcessRecord: int pid>;

        $i5 = staticinvoke <android.os.Process: int myPid()>();

        if $i6 != $i5 goto label16;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "crashApplication: trying to crash self!");

        exitmonitor r36;

     label15:
        return;

     label16:
        l14 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label17:
        $r13 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r13.<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>(r2);

     label18:
        goto label20;

     label19:
        $r32 := @caughtexception;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l14);

     label21:
        exitmonitor r36;

     label22:
        goto label25;

     label23:
        $r35 := @caughtexception;

        r8 = $r35;

        exitmonitor r36;

     label24:
        throw r8;

     label25:
        return;

        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label02 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public final void finishSubActivity(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0;
        long l1;
        com.android.server.am.ActivityRecord r4;
        java.lang.Throwable r5, $r9;
        com.android.server.am.TaskRecord $r7;
        com.android.server.am.ActivityStack $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = r0;

        entermonitor r0;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r4 == null goto label2;

        $r7 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r7.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r8.<com.android.server.am.ActivityStack: void finishSubActivityLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>(r4, r2, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean finishActivityAffinity(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityRecord r3, r4;
        boolean z0, z1, z2;
        java.lang.Throwable r5, r6, $r15, $r16;
        com.android.server.am.TaskRecord $r8, $r9, $r11, $r13;
        com.android.server.am.ActivityStackSupervisor $r10, $r14;
        com.android.server.am.ActivityStack $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        $r8 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r4 = virtualinvoke $r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getRootActivity()>();

        $r11 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r10.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r11 != $r9 goto label05;

        if r4 != r3 goto label05;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r14.<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>();

        z0 = 0;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label04:
        return z0;

     label05:
        z2 = 0;

        if r3 == null goto label06;

        $r13 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r12 = $r13.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        z2 = virtualinvoke $r12.<com.android.server.am.ActivityStack: boolean finishActivityAffinityLocked(com.android.server.am.ActivityRecord)>(r3);

     label06:
        z1 = z2;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label08:
        return z1;

     label09:
        $r15 := @caughtexception;

        r5 = $r15;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label11:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r2;

     label12:
        throw r6;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label08 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public void finishVoiceTask(android.service.voice.IVoiceInteractionSession)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.service.voice.IVoiceInteractionSession r1;
        long l0;
        java.lang.Throwable r3, r4, $r7, $r8;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.service.voice.IVoiceInteractionSession;

        r2 = r0;

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>(r1);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label06;

     label04:
        $r7 := @caughtexception;

        r3 = $r7;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean releaseActivityInstance(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityRecord r3;
        boolean z0, z1;
        java.lang.Throwable r4, r5, $r12, $r13;
        com.android.server.am.TaskRecord $r7, $r8, $r11;
        com.android.server.am.ActivityStack $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        $r7 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r7 == null goto label03;

        $r8 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r9 = $r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r9 != null goto label06;

     label03:
        z0 = 0;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label05:
        return z0;

     label06:
        $r11 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r10 = $r11.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        z1 = virtualinvoke $r10.<com.android.server.am.ActivityStack: boolean safelyDestroyActivityLocked(com.android.server.am.ActivityRecord,java.lang.String)>(r3, "app-req");

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label08:
        return z1;

     label09:
        $r13 := @caughtexception;

        r4 = $r13;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label11:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label12:
        throw r5;

        catch java.lang.Throwable from label02 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label05 with label11;
        catch java.lang.Throwable from label06 to label08 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public void releaseSomeActivities(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IApplicationThread r1;
        long l0;
        com.android.server.am.ProcessRecord r3;
        java.lang.Throwable r4, r5, $r8, $r9;
        com.android.server.am.ActivityStackSupervisor $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 = r0;

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: void releaseSomeActivitiesLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r3, "low-mem");

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label06;

     label04:
        $r9 := @caughtexception;

        r4 = $r9;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean willActivityBeVisible(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityStack r3;
        java.lang.Throwable r4, $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean willActivityBeVisibleLocked(android.os.IBinder)>(r1);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        exitmonitor r2;

     label4:
        return 0;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void overridePendingTransition(android.os.IBinder, java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0, i1;
        com.android.server.am.ActivityRecord r4;
        long l2;
        java.lang.Throwable r5, $r12;
        com.android.server.am.ActivityStack$ActivityState $r7, $r8, $r10, $r11;
        com.android.server.wm.WindowManagerService $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = r0;

        entermonitor r0;

     label1:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r4 != null goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r8 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r7 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r8 == $r7 goto label4;

        $r11 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r10 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r11 != $r10 goto label5;

     label4:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>(r2, i0, i1, null);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private final void handleAppDiedLocked(com.android.server.am.ProcessRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r3;
        boolean z0, z1, z2, z3, $z4;
        int i0;
        android.os.Bundle r2, $r17;
        com.android.server.am.ActivityStackSupervisor $r4, $r7, $r9;
        java.util.ArrayList $r5;
        android.content.ComponentName $r6, $r13;
        java.lang.StringBuilder $r8, $r10, $r11, $r14, $r16;
        java.lang.String $r12, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        z2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>(r1, z0, z1, -1);

        if z2 != 0 goto label1;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        if i0 <= 0 goto label1;

        staticinvoke <com.android.server.am.ProcessList: void remove(int)>(i0);

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r3 != r1 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z3 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)>(r1);

        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r6 == null goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crash of app ");

        $r12 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        $r17 = new android.os.Bundle;

        specialinvoke $r17.<android.os.Bundle: void <init>()>();

        r2 = $r17;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "Process crashed.");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, r2);

     label3:
        if z0 != 0 goto label4;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z4 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        if $z4 != 0 goto label4;

        if z3 == 0 goto label4;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label4:
        return;
    }

    private final int getLRURecordIndexForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1, $r7, $r8;
        android.os.IBinder r2, $r9;
        int i0, $i1;
        com.android.server.am.ProcessRecord r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 = interfaceinvoke r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label2;

        $r8 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9 = interfaceinvoke $r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r9 != r2 goto label2;

        return i0;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return -1;
    }

    final com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        int i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.ProcessRecord $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        if r1 != null goto label1;

        return null;

     label1:
        i0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int getLRURecordIndexForAppLocked(android.app.IApplicationThread)>(r1);

        if i0 < 0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (com.android.server.am.ProcessRecord) $r3;

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    final void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2, r3;
        boolean z0, z4;
        int i0, i2, $i3, $i5, $i6, $i9, $i12, $i13, $i14, $i16, $i19;
        long l1, $l7, $l8, $l11, $l15, $l18, l20;
        java.util.ArrayList $r4, $r7, $r8, $r11, $r15, $r17, $r20, $r22, r24;
        java.lang.String $r5, $r6, $r16, $r18, $r19;
        com.android.server.am.ActivityManagerService$MainHandler $r9, $r10;
        android.app.IApplicationThread $r12, $r23;
        java.lang.Object $r13, $r21;
        byte $b10, $b17;
        com.android.server.am.ProcessMemInfo $r14;
        android.os.Message r25;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 = 0;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i3 - 1;

     label01:
        if i0 < 0 goto label03;

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r21 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r21;

        $r23 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r23 == null goto label02;

        $i19 = r2.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i19 < 11 goto label02;

        z0 = 1;

        goto label03;

     label02:
        i0 = i0 + -1;

        goto label01;

     label03:
        if z0 != 0 goto label16;

        $r5 = "1";

        $r6 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if z4 == 0 goto label05;

        l20 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l15 = r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime>;

        $l18 = $l15 + 300000L;

        $b17 = l20 cmp $l18;

        if $b17 >= 0 goto label04;

        z4 = 0;

        goto label05;

     label04:
        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = l20;

     label05:
        if z4 == 0 goto label06;

        $r17 = new java.util.ArrayList;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i16 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>($i16);

        goto label07;

     label06:
        $r17 = null;

     label07:
        r24 = $r17;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30017, $i5);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i6 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i2 = $i6 - 1;

     label08:
        if i2 < 0 goto label14;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ProcessRecord) $r13;

        if r3 == r1 goto label13;

        $r12 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 != null goto label09;

        goto label13;

     label09:
        if z4 == 0 goto label10;

        $r14 = new com.android.server.am.ProcessMemInfo;

        $r16 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i14 = r3.<com.android.server.am.ProcessRecord: int pid>;

        $i12 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        $i13 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        $r18 = r3.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        $r19 = virtualinvoke r3.<com.android.server.am.ProcessRecord: java.lang.String makeAdjReason()>();

        specialinvoke $r14.<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>($r16, $i14, $i12, $i13, $r18, $r19);

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label10:
        $l8 = r3.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        $l7 = $l8 + 60000L;

        $b10 = $l7 cmp l1;

        if $b10 > 0 goto label13;

        $i9 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i9 > 4 goto label11;

        r3.<com.android.server.am.ProcessRecord: long lastRequestedGc> = 0L;

        goto label12;

     label11:
        $l11 = r3.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        r3.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l11;

     label12:
        r3.<com.android.server.am.ProcessRecord: boolean reportLowMemory> = 1;

        r3.<com.android.server.am.ProcessRecord: long lastLowMemory> = l1;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r15.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r3);

     label13:
        i2 = i2 + -1;

        goto label08;

     label14:
        if z4 == 0 goto label15;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r25 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,java.lang.Object)>(33, r24);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r25);

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label16:
        return;
    }

    final void appDiedLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.app.IApplicationThread $r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>(r1, $i0, $r2);

        return;
    }

    final void appDiedLocked(com.android.server.am.ProcessRecord, int, android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r4;
        int i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12;
        android.app.IApplicationThread r2, $r27, $r28;
        android.util.SparseArray r3, $r7, $r8;
        java.lang.Throwable r5, r6, $r51, $r52;
        java.lang.Object $r9;
        com.android.server.am.BatteryStatsService $r10;
        android.content.pm.ApplicationInfo $r12, $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r36, $r38, $r39, $r41, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r54;
        java.lang.String $r17, $r21, $r29, $r37, $r40, $r42, $r53;
        java.lang.Object[] $r24, $r33;
        java.lang.Integer $r25, $r26, $r34, $r35;
        boolean $z0, $z1, z2, z3;
        android.content.ComponentName $r30;
        android.os.IBinder $r31, $r32;
        com.android.internal.os.BatteryStatsImpl r55, r56;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.IApplicationThread;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ProcessRecord) $r9;

        if r4 == r1 goto label03;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spurious death for ");

        $r45 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", curProc for ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r53);

        exitmonitor r3;

     label02:
        return;

     label03:
        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r51 := @caughtexception;

        r5 = $r51;

        exitmonitor r3;

     label06:
        throw r5;

     label07:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r55 = virtualinvoke $r10.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r56 = r55;

        entermonitor r55;

     label08:
        $r12 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r55.<com.android.internal.os.BatteryStatsImpl: void noteProcessDiedLocked(int,int)>($i1, i0);

        exitmonitor r56;

     label09:
        goto label12;

     label10:
        $r52 := @caughtexception;

        r6 = $r52;

        exitmonitor r56;

     label11:
        throw r6;

     label12:
        staticinvoke <android.os.Process: void killProcessQuiet(int)>(i0);

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <android.os.Process: int killProcessGroup(int,int)>($i2, i0);

        r1.<com.android.server.am.ProcessRecord: boolean killed> = 1;

        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 != i0 goto label19;

        $r27 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r27 == null goto label19;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r32 = interfaceinvoke $r28.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r31 = interfaceinvoke r2.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r32 != $r31 goto label19;

        $r30 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r30 != null goto label13;

        $z1 = 1;

        goto label14;

     label13:
        $z1 = 0;

     label14:
        z2 = $z1;

        z3 = z2;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z0 != 0 goto label15;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r42 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $r38 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r40);

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 1;

        goto label16;

     label15:
        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        z2 = 0;

     label16:
        $r33 = newarray (java.lang.Object)[3];

        $i11 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r33[0] = $r35;

        $i12 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r33[1] = $r34;

        $r37 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r33[2] = $r37;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30011, $r33);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, 0, 1);

        if z3 == 0 goto label17;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label17:
        if z2 == 0 goto label18;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>(r1);

     label18:
        goto label20;

     label19:
        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i5 == i0 goto label20;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r17 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died and restarted (pid ");

        $i6 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        $r24 = newarray (java.lang.Object)[3];

        $i8 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r24[0] = $r26;

        $i9 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r24[1] = $r25;

        $r29 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r24[2] = $r29;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30011, $r24);

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static java.io.File dumpStackTraces(boolean, java.util.ArrayList, com.android.internal.os.ProcessCpuTracker, android.util.SparseArray, java.lang.String[])
    {
        boolean z0, $z1, $z4, $z5;
        java.util.ArrayList r0;
        com.android.internal.os.ProcessCpuTracker r1;
        android.util.SparseArray r2;
        java.lang.String[] r3;
        java.lang.String r4, $r8, $r9, $r13;
        java.io.File r5, r6, $r7;
        int $i0;
        java.lang.StringBuilder $r10, $r12, $r14;
        java.io.IOException $r11, r15;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.util.ArrayList;

        r1 := @parameter2: com.android.internal.os.ProcessCpuTracker;

        r2 := @parameter3: android.util.SparseArray;

        r3 := @parameter4: java.lang.String[];

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("dalvik.vm.stack-trace-file", null);

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r4);

        r5 = $r7;

     label3:
        r6 = virtualinvoke r5.<java.io.File: java.io.File getParentFile()>();

        $z1 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label5;

        virtualinvoke r6.<java.io.File: boolean mkdirs()>();

        $z5 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>(r6);

        if $z5 != 0 goto label5;

     label4:
        return null;

     label5:
        $r8 = virtualinvoke r6.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r8, 509, -1, -1);

        if z0 == 0 goto label6;

        $z4 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label6;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label6:
        virtualinvoke r5.<java.io.File: boolean createNewFile()>();

        $r9 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r9, 438, -1, -1);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        r15 = $r11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to prepare ANR traces file: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r13, r15);

        return null;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpStackTraces(java.lang.String,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])>(r4, r0, r1, r2, r3);

        return r5;

        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label7 with label8;
    }

    private static void dumpStackTraces(java.lang.String, java.util.ArrayList, com.android.internal.os.ProcessCpuTracker, android.util.SparseArray, java.lang.String[])
    {
        java.lang.String r0;
        java.util.ArrayList r1;
        com.android.internal.os.ProcessCpuTracker r2, r27;
        android.util.SparseArray r3;
        java.lang.String[] r4;
        com.android.server.am.ActivityManagerService$6 r5, r6, $r11, r30;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i9, i10, i11, i12, i13;
        java.lang.Throwable r7, r8, r9, r10, $r17, $r18, $r20, $r23;
        java.lang.Object $r14;
        java.lang.Integer $r16;
        java.lang.InterruptedException $r19, $r21, $r22, r24, r31;
        int[] r25, r26;
        com.android.internal.os.ProcessCpuTracker$Stats r29;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: com.android.internal.os.ProcessCpuTracker;

        r3 := @parameter3: android.util.SparseArray;

        r4 := @parameter4: java.lang.String[];

        $r11 = new com.android.server.am.ActivityManagerService$6;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService$6: void <init>(java.lang.String,int)>(r0, 8);

        r5 = $r11;

     label01:
        virtualinvoke r5.<android.os.FileObserver: void startWatching()>();

        if r1 == null goto label11;

     label02:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label03:
        if i1 >= i0 goto label09;

        r6 = r5;

        entermonitor r5;

     label04:
        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r16 = (java.lang.Integer) $r14;

        $i6 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i6, 3);

        virtualinvoke r5.<java.lang.Object: void wait(long)>(200L);

        exitmonitor r6;

     label05:
        goto label08;

     label06:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r6;

     label07:
        throw r7;

     label08:
        i1 = i1 + 1;

        goto label03;

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        r24 = $r19;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)>("ActivityManager", r24);

     label11:
        if r4 == null goto label13;

        r25 = staticinvoke <android.os.Process: int[] getPidsForCommands(java.lang.String[])>(r4);

        if r25 == null goto label13;

        r26 = r25;

        i9 = lengthof r26;

        i10 = 0;

     label12:
        if i10 >= i9 goto label13;

        i2 = r26[i10];

        staticinvoke <android.os.Debug: void dumpNativeBacktraceToFile(int,java.lang.String)>(i2, r0);

        i10 = i10 + 1;

        goto label12;

     label13:
        if r2 == null goto label31;

        virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: void init()>();

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: void update()>();

     label14:
        r27 = r2;

        entermonitor r2;

     label15:
        virtualinvoke r2.<java.lang.Object: void wait(long)>(500L);

        exitmonitor r27;

     label16:
        goto label19;

     label17:
        $r17 := @caughtexception;

        r8 = $r17;

        exitmonitor r27;

     label18:
        throw r8;

     label19:
        goto label21;

     label20:
        $r22 := @caughtexception;

     label21:
        virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: void update()>();

        i11 = virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: int countWorkingStats()>();

        i12 = 0;

        i13 = 0;

     label22:
        if i13 >= i11 goto label31;

        if i12 >= 5 goto label31;

        r29 = virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getWorkingStats(int)>(i13);

        $i3 = r29.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $i4 = virtualinvoke r3.<android.util.SparseArray: int indexOfKey(int)>($i3);

        if $i4 < 0 goto label30;

        i12 = i12 + 1;

     label23:
        r30 = r5;

        entermonitor r5;

     label24:
        $i5 = r29.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i5, 3);

        virtualinvoke r5.<java.lang.Object: void wait(long)>(200L);

        exitmonitor r30;

     label25:
        goto label28;

     label26:
        $r23 := @caughtexception;

        r9 = $r23;

        exitmonitor r30;

     label27:
        throw r9;

     label28:
        goto label30;

     label29:
        $r21 := @caughtexception;

        r31 = $r21;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)>("ActivityManager", r31);

     label30:
        i13 = i13 + 1;

        goto label22;

     label31:
        virtualinvoke r5.<android.os.FileObserver: void stopWatching()>();

        goto label34;

     label32:
        $r20 := @caughtexception;

        r10 = $r20;

     label33:
        virtualinvoke r5.<android.os.FileObserver: void stopWatching()>();

        throw r10;

     label34:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.InterruptedException from label02 to label09 with label10;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.InterruptedException from label14 to label19 with label20;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.InterruptedException from label23 to label28 with label29;
        catch java.lang.Throwable from label01 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    final void logAppTooSlow(com.android.server.am.ProcessRecord, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        java.lang.String r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        return;
    }

    final void appNotResponding(com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r7, r107, r108;
        com.android.server.am.ProcessRecord r1, r8, $r68, $r69, $r71;
        com.android.server.am.ActivityRecord r2, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.String r4, $r20, $r28, $r34, $r35, $r39, $r40, $r44, $r45, $r46, $r50, $r54, $r55, $r59, $r65, $r80, $r85, $r86, $r90, r106;
        java.util.ArrayList r5, $r12, $r24, $r63;
        android.util.SparseArray r6, $r15;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i30;
        java.lang.Throwable r9, r10, r11, r13, $r96, $r97, $r100, $r101;
        android.app.IActivityController $r14, $r41, $r51, $r87;
        java.lang.Object[] $r17;
        java.lang.Integer $r18, $r19, $r21, $r23, $r67, $r72, $r74;
        android.content.pm.ApplicationInfo $r22;
        java.lang.StringBuilder $r25, $r26, $r27, $r30, $r47, $r48, $r49, $r56, $r57, $r58, $r60, $r64, $r66, $r70, $r75, $r76, $r77, $r78, $r79, $r81, $r82, $r83, $r84, $r88, $r89, $r91, $r92, $r93, r102;
        com.android.internal.os.ProcessCpuTracker $r29, $r31, $r32, r103, r105;
        java.lang.String[] $r33;
        android.content.Context $r36;
        android.content.ContentResolver $r37;
        java.util.HashMap $r42, r110;
        com.android.server.am.ActivityManagerService$MainHandler $r43;
        byte $b14;
        com.android.server.am.ActiveServices $r53;
        android.app.IApplicationThread $r61;
        java.lang.Object $r62;
        java.lang.Boolean $r73;
        android.os.RemoteException $r94, $r98;
        com.android.server.Watchdog $r95, $r99;
        long l29;
        java.io.File r104;
        android.os.Message r109;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: com.android.server.am.ActivityRecord;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.lang.String;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(5);

        r5 = $r12;

        $r15 = new android.util.SparseArray;

        specialinvoke $r15.<android.util.SparseArray: void <init>(int)>(20);

        r6 = $r15;

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r14 == null goto label04;

     label01:
        $r87 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r86 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i26 = r1.<com.android.server.am.ProcessRecord: int pid>;

        i0 = interfaceinvoke $r87.<android.app.IActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>($r86, $i26, r4);

        if i0 >= 0 goto label02;

        $i27 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i28 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i27 == $i28 goto label02;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("anr", 1);

     label02:
        goto label04;

     label03:
        $r98 := @caughtexception;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r99 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r99.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label04:
        l29 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        r7 = r0;

        entermonitor r0;

     label05:
        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z2 == 0 goto label07;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("During shutdown skipping ANR: ");

        $r93 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r90);

        exitmonitor r7;

     label06:
        return;

     label07:
        $z1 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z1 == 0 goto label09;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping duplicate ANR: ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r80);

        exitmonitor r7;

     label08:
        return;

     label09:
        $z3 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z3 == 0 goto label11;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashing app skipping ANR: ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r85);

        exitmonitor r7;

     label10:
        return;

     label11:
        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 1;

        $r17 = newarray (java.lang.Object)[5];

        $i4 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r17[0] = $r18;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r17[1] = $r19;

        $r20 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r17[2] = $r20;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r22.<android.content.pm.ApplicationInfo: int flags>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r17[3] = $r21;

        $r17[4] = r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30008, $r17);

        $i7 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        i1 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if r3 == null goto label12;

        $r68 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r68 == null goto label12;

        $r69 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i22 = $r69.<com.android.server.am.ProcessRecord: int pid>;

        if $i22 <= 0 goto label12;

        $r71 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        i1 = $r71.<com.android.server.am.ProcessRecord: int pid>;

     label12:
        $i9 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if i1 == $i9 goto label13;

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r67);

     label13:
        $i8 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i8 == $i10 goto label14;

        $i24 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i24 == i1 goto label14;

        $i25 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r74);

     label14:
        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i11 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        i2 = $i11 - 1;

     label15:
        if i2 < 0 goto label18;

        $r63 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r62 = virtualinvoke $r63.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (com.android.server.am.ProcessRecord) $r62;

        if r8 == null goto label17;

        $r61 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r61 == null goto label17;

        i3 = r8.<com.android.server.am.ProcessRecord: int pid>;

        if i3 <= 0 goto label17;

        $i21 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if i3 == $i21 goto label17;

        if i3 == i1 goto label17;

        $i23 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i3 == $i23 goto label17;

        $z6 = r8.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z6 == 0 goto label16;

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r72);

        goto label17;

     label16:
        $r73 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i3, $r73);

     label17:
        i2 = i2 + -1;

        goto label15;

     label18:
        exitmonitor r7;

     label19:
        goto label22;

     label20:
        $r101 := @caughtexception;

        r9 = $r101;

        exitmonitor r7;

     label21:
        throw r9;

     label22:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        r102 = $r26;

        virtualinvoke r102.<java.lang.StringBuilder: void setLength(int)>(0);

        $r25 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR in ");

        $r28 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        if r2 == null goto label23;

        $r55 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        if $r55 == null goto label23;

        $r66 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r65 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label23:
        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r27 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID: ");

        $i12 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        if r4 == null goto label24;

        $r57 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reason: ");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label24:
        if r3 == null goto label25;

        if r3 == r2 goto label25;

        $r60 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent: ");

        $r59 = r3.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label25:
        $r29 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r29.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(1);

        r103 = $r29;

        $r33 = <com.android.server.Watchdog: java.lang.String[] NATIVE_STACKS_OF_INTEREST>;

        r104 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])>(1, r5, r103, r6, $r33);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r105 = $r32;

        entermonitor $r32;

     label26:
        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r106 = virtualinvoke $r31.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>(l29);

        exitmonitor r105;

     label27:
        goto label30;

     label28:
        $r96 := @caughtexception;

        r11 = $r96;

        exitmonitor r105;

     label29:
        throw r11;

     label30:
        $r35 = virtualinvoke r103.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentLoad()>();

        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r106);

        $r34 = virtualinvoke r103.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>(l29);

        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r39);

        if r104 != null goto label31;

        $i19 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i19, 3);

     label31:
        $r40 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("anr", r1, $r40, r2, r3, r4, r106, r104, null);

        $r41 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r41 == null goto label41;

     label32:
        $r51 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r50 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i15 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r54 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.String toString()>();

        i30 = interfaceinvoke $r51.<android.app.IActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>($r50, $i15, $r54);

        if i30 == 0 goto label39;

        if i30 >= 0 goto label33;

        $i18 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i20 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i18 == $i20 goto label33;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("anr", 1);

        goto label38;

     label33:
        r107 = r0;

        entermonitor r0;

     label34:
        $r53 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r53.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>(r1);

        exitmonitor r107;

     label35:
        goto label38;

     label36:
        $r97 := @caughtexception;

        r10 = $r97;

        exitmonitor r107;

     label37:
        throw r10;

     label38:
        return;

     label39:
        goto label41;

     label40:
        $r94 := @caughtexception;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r95 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r95.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label41:
        $r36 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r37 = virtualinvoke $r36.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i13 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r37, "anr_show_background", 0);

        if $i13 == 0 goto label42;

        $z4 = 1;

        goto label43;

     label42:
        $z4 = 0;

     label43:
        z7 = $z4;

        r108 = r0;

        entermonitor r0;

     label44:
        if z7 != 0 goto label46;

        $z5 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z5 != 0 goto label46;

        $i16 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i17 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i16 == $i17 goto label46;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("bg anr", 1);

        exitmonitor r108;

     label45:
        return;

     label46:
        if r2 == null goto label47;

        $r45 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        goto label48;

     label47:
        $r45 = null;

     label48:
        if r4 == null goto label49;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR ");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r44 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label50;

     label49:
        $r44 = "ANR";

     label50:
        $r46 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, $r45, $r44, $r46);

        r109 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r42 = new java.util.HashMap;

        specialinvoke $r42.<java.util.HashMap: void <init>()>();

        r110 = $r42;

        r109.<android.os.Message: int what> = 2;

        r109.<android.os.Message: java.lang.Object obj> = r110;

        if z0 == 0 goto label51;

        $b14 = 1;

        goto label52;

     label51:
        $b14 = 0;

     label52:
        r109.<android.os.Message: int arg1> = $b14;

        virtualinvoke r110.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r1);

        if r2 == null goto label53;

        virtualinvoke r110.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("activity", r2);

     label53:
        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r43.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r109);

        exitmonitor r108;

     label54:
        goto label57;

     label55:
        $r100 := @caughtexception;

        r13 = $r100;

        exitmonitor r108;

     label56:
        throw r13;

     label57:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch android.os.RemoteException from label32 to label38 with label40;
        catch java.lang.Throwable from label44 to label45 with label55;
        catch java.lang.Throwable from label46 to label54 with label55;
        catch java.lang.Throwable from label55 to label56 with label55;
    }

    final void showLaunchWarningLocked(com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1, r2;
        boolean $z0;
        com.android.server.am.ActivityManagerService$7 $r3;
        com.android.server.am.ActivityManagerService$MainHandler $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mLaunchWarningShown>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mLaunchWarningShown> = 1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r3 = new com.android.server.am.ActivityManagerService$7;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$7: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>(r0, r1, r2);

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    public boolean clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver, int)
    {
        com.android.server.am.ActivityManagerService r0, r4, r42;
        java.lang.String r1, r7, $r30, $r32;
        android.content.pm.IPackageDataObserver r2;
        int i0, i1, i2, i4, $i5, $i7, $i8, $i9, i12, i13;
        long l3;
        android.content.pm.IPackageManager r3;
        com.android.server.am.TaskRecord r6;
        java.lang.Throwable r8, r9, r10, $r36, $r37, $r38;
        java.util.ArrayList $r12, $r16;
        android.content.Intent $r14, $r19, r43;
        android.net.Uri $r15;
        java.lang.Object $r17;
        android.content.ComponentName $r20;
        boolean $z1, z2;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r33, $r34;
        java.lang.SecurityException $r23;
        android.os.RemoteException $r35, $r39, $r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("clearApplicationUserData");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i12 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i1, i0, 0, 2, "clearApplicationUserData", null);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i4 = -1;

        r4 = r0;

        entermonitor r0;

     label02:
        i4 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i12);

     label03:
        goto label05;

     label04:
        $r40 := @caughtexception;

     label05:
        if i4 != -1 goto label11;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r32);

        if r2 == null goto label09;

     label06:
        interfaceinvoke r2.<android.content.pm.IPackageDataObserver: void onRemoveCompleted(java.lang.String,boolean)>(r1, 0);

     label07:
        goto label09;

     label08:
        $r35 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Observer no longer exists.");

     label09:
        z2 = 0;

        exitmonitor r4;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z2;

     label11:
        if i1 == i4 goto label12;

        $i8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.CLEAR_APP_USER_DATA", i2, i1, -1, 1);

        if $i8 != 0 goto label13;

     label12:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>(r1, i4, "clear data");

        goto label14;

     label13:
        $r23 = new java.lang.SecurityException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.CLEAR_APP_USER_DATA");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to clear data");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of package ");

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r30);

        throw $r23;

     label14:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i5 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i13 = $i5 - 1;

     label15:
        if i13 < 0 goto label19;

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r6 = (com.android.server.am.TaskRecord) $r17;

        $r19 = virtualinvoke r6.<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>();

        $r20 = virtualinvoke $r19.<android.content.Intent: android.content.ComponentName getComponent()>();

        r7 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i7 = r6.<com.android.server.am.TaskRecord: int userId>;

        if $i7 == i12 goto label16;

        goto label18;

     label16:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label17;

        goto label18;

     label17:
        $i9 = r6.<com.android.server.am.TaskRecord: int taskId>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeTaskByIdLocked(int,int)>($i9, 0);

     label18:
        i13 = i13 + -1;

        goto label15;

     label19:
        exitmonitor r4;

     label20:
        goto label23;

     label21:
        $r37 := @caughtexception;

        r8 = $r37;

        exitmonitor r4;

     label22:
        throw r8;

     label23:
        interfaceinvoke r3.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r1, r2, i12);

        r42 = r0;

        entermonitor r0;

     label24:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)>(r1, i12, 1);

        exitmonitor r42;

     label25:
        goto label28;

     label26:
        $r38 := @caughtexception;

        r9 = $r38;

        exitmonitor r42;

     label27:
        throw r9;

     label28:
        $r14 = new android.content.Intent;

        $r15 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r1, null);

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_DATA_CLEARED", $r15);

        r43 = $r14;

        virtualinvoke r43.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentInPackage(java.lang.String,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)>("android", 1000, r43, null, null, 0, null, null, null, 0, 0, i12);

     label29:
        goto label31;

     label30:
        $r39 := @caughtexception;

     label31:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label34;

     label32:
        $r36 := @caughtexception;

        r10 = $r36;

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r10;

     label34:
        return 1;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label10 with label21;
        catch java.lang.Throwable from label11 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch android.os.RemoteException from label23 to label29 with label30;
        catch java.lang.Throwable from label01 to label10 with label32;
        catch java.lang.Throwable from label11 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    public void killBackgroundProcesses(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        java.lang.String r1, r2, $r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i11;
        android.content.pm.IPackageManager r3;
        java.lang.Throwable r6, r7, $r21, $r23;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        android.os.RemoteException $r20;
        java.lang.SecurityException $r22;
        long l12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i2 == 0 goto label01;

        $i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.RESTART_PACKAGES");

        if $i7 == 0 goto label01;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killBackgroundProcesses() from pid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r22 = new java.lang.SecurityException;

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r22;

     label01:
        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i0, 1, 2, "killBackgroundProcesses", null);

        l12 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = r0;

        entermonitor r0;

     label03:
        i1 = -1;

     label04:
        $i5 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, 0);

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i5);

     label05:
        goto label07;

     label06:
        $r20 := @caughtexception;

     label07:
        if i1 != -1 goto label09;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r4;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        return;

     label09:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>(r1, i1, i11, 5, 0, 1, 1, 0, "kill background");

        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r4;

     label12:
        throw r6;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        goto label16;

     label14:
        $r21 := @caughtexception;

        r7 = $r21;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        throw r7;

     label16:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label03 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label02 to label08 with label14;
        catch java.lang.Throwable from label09 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void killAllBackgroundProcesses()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        java.util.ArrayList r3, $r10;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i10, i11;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5, $r12;
        java.lang.Throwable r6, r7, $r26, $r27;
        com.android.internal.app.ProcessMap $r9, $r14;
        android.util.ArrayMap $r11, $r16;
        java.lang.Object $r13, $r15, $r17;
        boolean $z1, $z2;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.SecurityException $r25;
        long l9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i4 == 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killAllBackgroundProcesses() from pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r1);

        $r25 = new java.lang.SecurityException;

        specialinvoke $r25.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r25;

     label01:
        l9 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r2 = r0;

        entermonitor r0;

     label03:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r11 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i0 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label04:
        if i1 >= i0 goto label10;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r16 = virtualinvoke $r14.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (android.util.SparseArray) $r15;

        i2 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i3 = 0;

     label05:
        if i3 >= i2 goto label09;

        $r17 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r5 = (com.android.server.am.ProcessRecord) $r17;

        $z2 = r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z2 == 0 goto label06;

        goto label08;

     label06:
        $z1 = r5.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z1 == 0 goto label07;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label08;

     label07:
        $i5 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i5 < 9 goto label08;

        r5.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label08:
        i3 = i3 + 1;

        goto label05;

     label09:
        i1 = i1 + 1;

        goto label04;

     label10:
        i10 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i11 = 0;

     label11:
        if i11 >= i10 goto label12;

        $r13 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r12 = (com.android.server.am.ProcessRecord) $r13;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>($r12, 0, 1, "kill all background");

        i11 = i11 + 1;

        goto label11;

     label12:
        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>(null);

        exitmonitor r2;

     label13:
        goto label16;

     label14:
        $r26 := @caughtexception;

        r6 = $r26;

        exitmonitor r2;

     label15:
        throw r6;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        goto label19;

     label17:
        $r27 := @caughtexception;

        r7 = $r27;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        throw r7;

     label19:
        return;

        catch java.lang.Throwable from label03 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label02 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void forceStopPackage(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        java.lang.String r1, r2, $r14, $r20, $r32;
        int i0, i2, i3, i4, i5, $i6, $i7, $i9, $i10, i13, i14;
        long l1;
        android.content.pm.IPackageManager r3;
        int[] r5, r6, $r11;
        java.lang.Throwable r8, r9, $r36, $r37;
        boolean $z0;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r33, $r34;
        java.lang.IllegalArgumentException $r27, r40;
        java.lang.SecurityException $r28;
        android.os.RemoteException $r35, $r38;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i6 == 0 goto label01;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: forceStopPackage() from pid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i10 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r28 = new java.lang.SecurityException;

        specialinvoke $r28.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r28;

     label01:
        i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i14 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i13, $i7, i0, 1, 2, "forceStopPackage", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = r0;

        entermonitor r0;

     label03:
        if i14 != -1 goto label04;

        $r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        goto label05;

     label04:
        $r11 = newarray (int)[1];

        $r11[0] = i14;

     label05:
        r5 = $r11;

        r6 = r5;

        i2 = lengthof r6;

        i3 = 0;

     label06:
        if i3 >= i2 goto label17;

        i4 = r6[i3];

        i5 = -1;

     label07:
        i5 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i4);

     label08:
        goto label10;

     label09:
        $r38 := @caughtexception;

     label10:
        if i5 != -1 goto label11;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r20);

        goto label16;

     label11:
        interfaceinvoke r3.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>(r1, 1, i4);

     label12:
        goto label15;

     label13:
        $r35 := @caughtexception;

        goto label15;

     label14:
        $r27 := @caughtexception;

        r40 = $r27;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r32);

     label15:
        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isUserRunningLocked(int,boolean)>(i4, 0);

        if $z0 == 0 goto label16;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from pid ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>(r1, i5, $r14);

     label16:
        i3 = i3 + 1;

        goto label06;

     label17:
        exitmonitor r4;

     label18:
        goto label21;

     label19:
        $r37 := @caughtexception;

        r8 = $r37;

        exitmonitor r4;

     label20:
        throw r8;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label24;

     label22:
        $r36 := @caughtexception;

        r9 = $r36;

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r9;

     label24:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.IllegalArgumentException from label11 to label12 with label14;
        catch java.lang.Throwable from label03 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label02 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public void addPackageDependency(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        int i0, $i1, $i2;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray r4, $r8, $r9;
        java.lang.Throwable r5, r6, $r14, $r15;
        java.lang.Object $r10;
        android.util.ArraySet $r11, $r12, $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label01:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if i0 != $i1 goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Can\'t addPackageDependency on system process");

        exitmonitor r2;

     label02:
        return;

     label03:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r8;

        entermonitor $r8;

     label04:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r3 = (com.android.server.am.ProcessRecord) $r10;

        exitmonitor r4;

     label05:
        goto label08;

     label06:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r4;

     label07:
        throw r5;

     label08:
        if r3 == null goto label10;

        $r11 = r3.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        if $r11 != null goto label09;

        $r13 = new android.util.ArraySet;

        specialinvoke $r13.<android.util.ArraySet: void <init>(int)>(1);

        r3.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps> = $r13;

     label09:
        $r12 = r3.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        virtualinvoke $r12.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

     label10:
        exitmonitor r2;

     label11:
        goto label14;

     label12:
        $r15 := @caughtexception;

        r6 = $r15;

        exitmonitor r2;

     label13:
        throw r6;

     label14:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void killApplicationWithAppId(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r10, $r16;
        int i0, i1;
        android.os.Message r3;
        android.os.Bundle r4, $r13;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r14, $r15, $r17;
        com.android.server.am.ActivityManagerService$MainHandler $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        if i0 >= 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid appid specified for pkg : ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

        return;

     label2:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 != 1000 goto label3;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r3 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(22);

        r3.<android.os.Message: int arg1> = i0;

        r3.<android.os.Message: int arg2> = 0;

        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        r4 = $r13;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("pkg", r1);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("reason", r2);

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r3);

        goto label4;

     label3:
        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot kill pkg: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1, $r17;
        int i0, i1, $i3;
        long l2;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray r4, $r9, $r11;
        java.lang.Throwable r5, r6, r7, $r18, $r19, $r20;
        java.lang.Object $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("closeSystemDialogs");

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        if i1 < 10000 goto label09;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r9;

        entermonitor $r9;

     label03:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ProcessRecord) $r10;

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        $i3 = r3.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i3 <= 2 goto label09;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring closeSystemDialogs ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from background process ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        exitmonitor r2;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(java.lang.String)>(r1);

        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r2;

     label12:
        throw r6;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label16;

     label14:
        $r18 := @caughtexception;

        r7 = $r18;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r7;

     label16:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label08 with label14;
        catch java.lang.Throwable from label09 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    void closeSystemDialogsLocked(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.Intent r2, $r3;
        com.android.server.wm.WindowManagerService $r5;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        if r1 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r1);

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void closeSystemDialogs(java.lang.String)>(r1);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void closeSystemDialogsLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r2, null, null, 0, null, null, null, -1, 0, 0, -1, 1000, -1);

        return;
    }

    public android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])
    {
        com.android.server.am.ActivityManagerService r0, r4, r24;
        int[] r1;
        android.os.Debug$MemoryInfo[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray r5, $r10, $r12;
        java.lang.Throwable r6, r7, r8, $r21, $r22, $r23;
        java.lang.Object $r11;
        android.os.Debug$MemoryInfo $r13, $r14, $r17, $r19;
        android.app.IApplicationThread $r16;
        com.android.internal.app.ProcessStats$ProcessState $r18;
        long $l8, $l9;
        android.util.ArrayMap $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessMemoryInfo");

        $i2 = lengthof r1;

        r2 = newarray (android.os.Debug$MemoryInfo)[$i2];

        $i3 = lengthof r1;

        i0 = $i3 - 1;

     label01:
        if i0 < 0 goto label20;

        r4 = r0;

        entermonitor r0;

     label02:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r5 = $r10;

        entermonitor $r10;

     label03:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i4 = r1[i0];

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r3 = (com.android.server.am.ProcessRecord) $r11;

        if r3 == null goto label04;

        $i10 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        goto label05;

     label04:
        $i10 = 0;

     label05:
        i1 = $i10;

        exitmonitor r5;

     label06:
        goto label09;

     label07:
        $r22 := @caughtexception;

        r6 = $r22;

        exitmonitor r5;

     label08:
        throw r6;

     label09:
        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r4;

     label12:
        throw r7;

     label13:
        $r14 = new android.os.Debug$MemoryInfo;

        specialinvoke $r14.<android.os.Debug$MemoryInfo: void <init>()>();

        r2[i0] = $r14;

        $i5 = r1[i0];

        $r13 = r2[i0];

        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i5, $r13);

        if r3 == null goto label19;

        r24 = r0;

        entermonitor r0;

     label14:
        $r16 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label15;

        $i6 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i6 != i1 goto label15;

        $r18 = r3.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r17 = r2[i0];

        $i7 = virtualinvoke $r17.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $l8 = (long) $i7;

        $r19 = r2[i0];

        $i11 = virtualinvoke $r19.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        $l9 = (long) $i11;

        $r20 = r3.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r18.<com.android.internal.app.ProcessStats$ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>($l8, $l9, 0, $r20);

     label15:
        exitmonitor r24;

     label16:
        goto label19;

     label17:
        $r23 := @caughtexception;

        r8 = $r23;

        exitmonitor r24;

     label18:
        throw r8;

     label19:
        i0 = i0 + -1;

        goto label01;

     label20:
        return r2;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public long[] getProcessPss(int[])
    {
        com.android.server.am.ActivityManagerService r0, r4, r21;
        int[] r1;
        long[] r2, r20;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i10;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray r5, $r10, $r12;
        java.lang.Throwable r6, r7, r8, $r17, $r18, $r19;
        java.lang.Object $r11;
        long $l5, $l8, $l9;
        android.app.IApplicationThread $r13;
        android.util.ArrayMap $r15;
        com.android.internal.app.ProcessStats$ProcessState $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessPss");

        $i2 = lengthof r1;

        r2 = newarray (long)[$i2];

        $i3 = lengthof r1;

        i0 = $i3 - 1;

     label01:
        if i0 < 0 goto label20;

        r4 = r0;

        entermonitor r0;

     label02:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r5 = $r10;

        entermonitor $r10;

     label03:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i4 = r1[i0];

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r3 = (com.android.server.am.ProcessRecord) $r11;

        if r3 == null goto label04;

        $i10 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        goto label05;

     label04:
        $i10 = 0;

     label05:
        i1 = $i10;

        exitmonitor r5;

     label06:
        goto label09;

     label07:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r5;

     label08:
        throw r6;

     label09:
        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

        r7 = $r19;

        exitmonitor r4;

     label12:
        throw r7;

     label13:
        r20 = newarray (long)[1];

        $i6 = r1[i0];

        $l5 = staticinvoke <android.os.Debug: long getPss(int,long[])>($i6, r20);

        r2[i0] = $l5;

        if r3 == null goto label19;

        r21 = r0;

        entermonitor r0;

     label14:
        $r13 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label15;

        $i7 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i7 != i1 goto label15;

        $r16 = r3.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $l9 = r2[i0];

        $l8 = r20[0];

        $r15 = r3.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r16.<com.android.internal.app.ProcessStats$ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>($l9, $l8, 0, $r15);

     label15:
        exitmonitor r21;

     label16:
        goto label19;

     label17:
        $r18 := @caughtexception;

        r8 = $r18;

        exitmonitor r21;

     label18:
        throw r8;

     label19:
        i0 = i0 + -1;

        goto label01;

     label20:
        return r2;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void killApplicationProcess(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1, $r11, $r17;
        int i0, i1;
        com.android.server.am.ProcessRecord r3;
        java.lang.Throwable r5, $r21;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r18;
        android.app.IApplicationThread $r19, $r20;
        android.os.RemoteException $r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label01;

        return;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 != 1000 goto label12;

        r2 = r0;

        entermonitor r0;

     label02:
        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, i0, 1);

        if r3 == null goto label06;

        $r20 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 == null goto label06;

     label03:
        $r19 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r19.<android.app.IApplicationThread: void scheduleSuicide()>();

     label04:
        goto label07;

     label05:
        $r22 := @caughtexception;

        goto label07;

     label06:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process/uid not found attempting kill of ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        goto label13;

     label12:
        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot kill app process: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label13:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void forceStopPackageLocked(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i6;
        android.content.Intent r3, $r4;
        android.net.Uri $r5;
        boolean $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, $i1, 0, 0, 1, 0, 0, $i2, r2);

        $r4 = new android.content.Intent;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r1, null);

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_RESTARTED", $r5);

        r3 = $r4;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z1 != 0 goto label1;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

     label1:
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i0);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i3);

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, null, 0, null, null, null, -1, 0, 0, $i6, 1000, $i4);

        return;
    }

    private void forceStopUserLocked(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.lang.String r1;
        android.content.Intent r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(null, -1, 0, 0, 1, 0, 0, i0, r1);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STOPPED");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r2, null, null, 0, null, null, null, -1, 0, 0, $i1, 1000, -1);

        return;
    }

    private final boolean killPackageProcessesLocked(java.lang.String, int, int, int, boolean, boolean, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        boolean z0, z1, z2, z3, z4, $z5, $z7, $z8, $z10, $z11, $z12;
        java.util.ArrayList r3, $r7;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5, $r9;
        com.android.internal.app.ProcessMap $r6, $r11;
        android.util.ArrayMap $r8, $r13, $r16;
        java.lang.Object $r10, $r12, $r14;
        android.util.ArraySet $r15, $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        r2 := @parameter8: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r8 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i3 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label01:
        if i4 >= i3 goto label16;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r13 = virtualinvoke $r11.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r12 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r4 = (android.util.SparseArray) $r12;

        i5 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i6 = 0;

     label02:
        if i6 >= i5 goto label15;

        $r14 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r5 = (com.android.server.am.ProcessRecord) $r14;

        $z7 = r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z7 == 0 goto label03;

        if z3 != 0 goto label03;

        goto label14;

     label03:
        $z8 = r5.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z8 == 0 goto label04;

        if z2 == 0 goto label14;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label14;

     label04:
        $i7 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i7 >= i2 goto label05;

        goto label14;

     label05:
        if r1 != null goto label07;

        $i13 = r5.<com.android.server.am.ProcessRecord: int userId>;

        if $i13 == i1 goto label06;

        goto label14;

     label06:
        if i0 < 0 goto label12;

        $i11 = r5.<com.android.server.am.ProcessRecord: int uid>;

        $i12 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i11);

        if $i12 == i0 goto label12;

        goto label14;

     label07:
        $r15 = r5.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        if $r15 == null goto label08;

        $r17 = r5.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        $z11 = virtualinvoke $r17.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z11 == 0 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        z4 = $z12;

        if z4 != 0 goto label10;

        $i9 = r5.<com.android.server.am.ProcessRecord: int uid>;

        $i10 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i9);

        if $i10 == i0 goto label10;

        goto label14;

     label10:
        if i1 == -1 goto label11;

        $i8 = r5.<com.android.server.am.ProcessRecord: int userId>;

        if $i8 == i1 goto label11;

        goto label14;

     label11:
        $r16 = r5.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z10 = virtualinvoke $r16.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z10 != 0 goto label12;

        if z4 != 0 goto label12;

        goto label14;

     label12:
        if z2 != 0 goto label13;

        return 1;

     label13:
        r5.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label14:
        i6 = i6 + 1;

        goto label02;

     label15:
        i4 = i4 + 1;

        goto label01;

     label16:
        i14 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i15 = 0;

     label17:
        if i15 >= i14 goto label18;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        $r9 = (com.android.server.am.ProcessRecord) $r10;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>($r9, z0, z1, r2);

        i15 = i15 + 1;

        goto label17;

     label18:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        if i14 <= 0 goto label19;

        $z5 = 1;

        goto label20;

     label19:
        $z5 = 0;

     label20:
        return $z5;
    }

    private final boolean forceStopPackageLocked(java.lang.String, int, boolean, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r8, $r23, $r37, $r53;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i22;
        boolean z0, z1, z2, z3, z4, z5, $z7, $z8, $z9, $z10, $z12, $z13, z16;
        android.util.SparseArray r4, $r34;
        java.lang.StringBuilder $r5, $r6, $r7, $r32, $r33, $r35, $r36, $r39, $r40, $r41, $r42, $r45, $r46, $r47, $r48, $r49, $r50, $r52, $r54, $r55;
        com.android.server.am.ActivityStackSupervisor $r9, $r13, $r16;
        com.android.server.am.ActiveServices $r10;
        com.android.server.am.ProviderMap $r11;
        java.util.ArrayList $r12, r58;
        java.util.HashMap $r14, $r15;
        java.lang.Object $r17, $r20, $r31, $r44;
        java.util.Collection $r18;
        com.android.server.am.PendingIntentRecord$Key $r19, $r22, $r27, $r28, $r29;
        com.android.server.am.ActivityRecord $r21, $r26;
        java.util.HashSet $r24;
        java.lang.ref.WeakReference $r25, r60;
        com.android.server.am.ContentProviderRecord $r30;
        com.android.internal.app.ProcessMap $r38;
        android.content.pm.IPackageManager $r51;
        android.os.RemoteException $r56;
        android.util.ArrayMap r57;
        java.util.Iterator r59;
        com.android.server.am.PendingIntentRecord r61;
        com.android.server.AttributeCache r62;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        z4 := @parameter6: boolean;

        i1 := @parameter7: int;

        r2 := @parameter8: java.lang.String;

        if i1 != -1 goto label01;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Can\'t force stop all processes of all users, that is insane!");

     label01:
        if i0 >= 0 goto label05;

        if r1 == null goto label05;

     label02:
        $r51 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i19 = interfaceinvoke $r51.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, 0);

        i0 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i19);

     label03:
        goto label05;

     label04:
        $r56 := @caughtexception;

     label05:
        if z2 == 0 goto label16;

        if r1 == null goto label06;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stopping ");

        $r46 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appid=");

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user=");

        $r54 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r52 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r53);

        goto label07;

     label06:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stopping u");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r37 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r37);

     label07:
        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        r57 = virtualinvoke $r38.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i15 = virtualinvoke r57.<android.util.ArrayMap: int size()>();

        i4 = $i15 - 1;

     label08:
        if i4 < 0 goto label16;

        $r44 = virtualinvoke r57.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r4 = (android.util.SparseArray) $r44;

        $i17 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i2 = $i17 - 1;

     label09:
        if i2 < 0 goto label14;

        z5 = 0;

        i5 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i2);

        if r1 == null goto label11;

        if i1 != -1 goto label10;

        $i18 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i5);

        if $i18 != i0 goto label12;

        z5 = 1;

        goto label12;

     label10:
        $i13 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, i0);

        if i5 != $i13 goto label12;

        z5 = 1;

        goto label12;

     label11:
        $i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i5);

        if $i14 != i1 goto label12;

        z5 = 1;

     label12:
        if z5 == 0 goto label13;

        virtualinvoke r4.<android.util.SparseArray: void removeAt(int)>(i2);

     label13:
        i2 = i2 + -1;

        goto label09;

     label14:
        $i16 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        if $i16 != 0 goto label15;

        virtualinvoke r57.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i4);

     label15:
        i4 = i4 + -1;

        goto label08;

     label16:
        if r1 != null goto label17;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop user ");

        $r32 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label18;

     label17:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        z16 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>(r1, i0, i1, -100, z0, 1, z2, z3, $r8);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z7 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: boolean forceStopPackageLocked(java.lang.String,boolean,boolean,int)>(r1, z2, z3, i1);

        if $z7 == 0 goto label20;

        if z2 != 0 goto label19;

        return 1;

     label19:
        z16 = 1;

     label20:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z8 = virtualinvoke $r10.<com.android.server.am.ActiveServices: boolean forceStopLocked(java.lang.String,int,boolean,boolean)>(r1, i1, z3, z2);

        if $z8 == 0 goto label22;

        if z2 != 0 goto label21;

        return 1;

     label21:
        z16 = 1;

     label22:
        if r1 != null goto label23;

        $r34 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r34.<android.util.SparseArray: void remove(int)>(i1);

     label23:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r58 = $r12;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z9 = virtualinvoke $r11.<com.android.server.am.ProviderMap: boolean collectForceStopProviders(java.lang.String,int,boolean,boolean,int,java.util.ArrayList)>(r1, i0, z2, z3, i1, r58);

        if $z9 == 0 goto label25;

        if z2 != 0 goto label24;

        return 1;

     label24:
        z16 = 1;

     label25:
        i3 = virtualinvoke r58.<java.util.ArrayList: int size()>();

        i22 = 0;

     label26:
        if i22 >= i3 goto label27;

        $r31 = virtualinvoke r58.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        $r30 = (com.android.server.am.ContentProviderRecord) $r31;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(null, $r30, 1);

        i22 = i22 + 1;

        goto label26;

     label27:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)>(r1, i1, 0);

        if r1 == null goto label28;

        if z4 == 0 goto label38;

     label28:
        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $i7 = virtualinvoke $r14.<java.util.HashMap: int size()>();

        if $i7 <= 0 goto label38;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r18 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r59 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label29:
        $z12 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label38;

        $r17 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r60 = (java.lang.ref.WeakReference) $r17;

        if r60 != null goto label30;

        interfaceinvoke r59.<java.util.Iterator: void remove()>();

        goto label29;

     label30:
        $r20 = virtualinvoke r60.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r61 = (com.android.server.am.PendingIntentRecord) $r20;

        if r61 != null goto label31;

        interfaceinvoke r59.<java.util.Iterator: void remove()>();

        goto label29;

     label31:
        if r1 != null goto label32;

        $r28 = r61.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i11 = $r28.<com.android.server.am.PendingIntentRecord$Key: int userId>;

        if $i11 == i1 goto label35;

        goto label29;

     label32:
        $i9 = r61.<com.android.server.am.PendingIntentRecord: int uid>;

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i9);

        if $i8 == i0 goto label33;

        goto label29;

     label33:
        if i1 == -1 goto label34;

        $r29 = r61.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i10 = $r29.<com.android.server.am.PendingIntentRecord$Key: int userId>;

        if $i10 == i1 goto label34;

        goto label29;

     label34:
        $r19 = r61.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r23 = $r19.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $z13 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z13 != 0 goto label35;

        goto label29;

     label35:
        if z2 != 0 goto label36;

        return 1;

     label36:
        z16 = 1;

        interfaceinvoke r59.<java.util.Iterator: void remove()>();

        r61.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r22 = r61.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r21 = $r22.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        if $r21 == null goto label37;

        $r27 = r61.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r26 = $r27.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        $r24 = $r26.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $r25 = r61.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r24.<java.util.HashSet: boolean remove(java.lang.Object)>($r25);

     label37:
        goto label29;

     label38:
        if z2 == 0 goto label40;

        if z1 == 0 goto label39;

        if r1 == null goto label39;

        r62 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        if r62 == null goto label39;

        virtualinvoke r62.<com.android.server.AttributeCache: void removePackage(java.lang.String)>(r1);

     label39:
        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z10 == 0 goto label40;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r16.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

     label40:
        return z16;

        catch android.os.RemoteException from label02 to label03 with label04;
    }

    private final boolean removeProcessLocked(com.android.server.am.ProcessRecord, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r8, $r21;
        boolean z0, z1, z2, $z4, $z5, $z6;
        java.lang.String r2, r3, $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.util.SparseArray r4, $r7, $r10, $r11;
        java.lang.Throwable r5, $r22;
        com.android.internal.app.ProcessMap $r6;
        java.util.ArrayList $r9;
        com.android.server.am.ActivityManagerService$MainHandler $r12, $r19, $r23;
        android.content.pm.ApplicationInfo $r13, $r16, $r18;
        com.android.server.am.BatteryStatsService $r14, $r20;
        android.os.Message $r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        i0 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        virtualinvoke $r6.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>(r3, i0);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i2);

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r8 != r1 goto label01;

        $r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i9 = $r21.<com.android.server.am.ProcessRecord: int userId>;

        $r24 = virtualinvoke $r19.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(25, $i9, 0);

        virtualinvoke $r23.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r24);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

     label01:
        z2 = 0;

        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 <= 0 goto label10;

        $i4 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i5 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i4 == $i5 goto label10;

        i1 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r11;

        entermonitor $r11;

     label02:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i1);

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r1);

        exitmonitor r4;

     label03:
        goto label06;

     label04:
        $r22 := @caughtexception;

        r5 = $r22;

        exitmonitor r4;

     label05:
        throw r5;

     label06:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r15 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r14.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r15, $i6);

        $z5 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z5 == 0 goto label07;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i8 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i7 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r20.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i8, $i7);

     label07:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>(r2, 1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, 1, z1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        $z4 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 == 0 goto label09;

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z6 != 0 goto label09;

        if z0 != 0 goto label08;

        $r16 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean,java.lang.String)>($r16, 0, null);

        goto label09;

     label08:
        z2 = 1;

     label09:
        goto label11;

     label10:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label11:
        return z2;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    private final void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r3, $r26, $r31, $r41;
        int i0, $i3, $i4, $i6, $i7, $i8, $i11, $i12, $i13, $i14;
        boolean z0, $z1, $z3;
        android.util.SparseArray r2, $r5, $r6, $r25, $r40;
        java.lang.Throwable r4, $r44;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        java.lang.String $r11, $r16, $r20, $r23, $r27, $r33;
        java.lang.Object[] $r17;
        java.lang.Integer $r18, $r19, $r21;
        com.android.internal.app.ProcessMap $r22;
        android.content.pm.ApplicationInfo $r24, $r34, $r37;
        com.android.server.am.BatteryStatsService $r28, $r36;
        com.android.server.am.BackupRecord $r29, $r32;
        com.android.server.am.ActiveServices $r30;
        android.os.IBinder $r35;
        android.os.Message $r38;
        android.app.IApplicationThread $r39;
        com.android.server.am.ActivityManagerService$MainHandler $r42, $r43;
        android.os.RemoteException $r45;
        android.app.backup.IBackupManager r46;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        z0 = 0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ProcessRecord) $r7;

        if r3 == null goto label02;

        $r39 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r39 != null goto label02;

        $r40 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r40.<android.util.SparseArray: void remove(int)>(i0);

        z0 = 1;

     label02:
        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r44 := @caughtexception;

        r4 = $r44;

        exitmonitor r2;

     label05:
        throw r4;

     label06:
        if z0 == 0 goto label13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to attach");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

        $r17 = newarray (java.lang.Object)[4];

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r17[0] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r17[1] = $r19;

        $i4 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r17[2] = $r21;

        $r20 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r17[3] = $r20;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30037, $r17);

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r23 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i7 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r22.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r23, $i7);

        $r25 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i6 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r25.<android.util.SparseArray: void remove(int)>($i6);

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r26 != r1 goto label07;

        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i14 = $r41.<com.android.server.am.ProcessRecord: int userId>;

        $r38 = virtualinvoke $r42.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(25, $i14, 0);

        virtualinvoke $r43.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r38);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

     label07:
        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r27 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r24 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i8 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r28.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r27, $i8);

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z1 == 0 goto label08;

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i12 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r37 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i13 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r36.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i12, $i13);

     label08:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 1);

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r30.<com.android.server.am.ActiveServices: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("start timeout", 1);

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r29 == null goto label12;

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r31 = $r32.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        $i11 = $r31.<com.android.server.am.ProcessRecord: int pid>;

        if $i11 != i0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before backup, skipping");

     label09:
        $r35 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        r46 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r35);

        $r34 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r33 = $r34.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke r46.<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>($r33);

     label10:
        goto label12;

     label11:
        $r45 := @caughtexception;

     label12:
        $z3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z3 == 0 goto label14;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>(i0);

        goto label14;

     label13:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spurious process start timeout - pid not known for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

     label14:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    private final boolean attachApplicationLocked(android.app.IApplicationThread, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1, $r10;
        int i0, i1, i2, $i3, $i4, $i5, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i21;
        com.android.server.am.ProcessRecord r2;
        android.util.SparseArray r3, $r87, $r89;
        java.lang.Throwable r4, $r111;
        java.util.List r5, $r70;
        java.lang.String r6, $r16, $r18, $r22, $r23, $r27, $r45, $r61, $r62, $r63, $r64, $r65, $r68, $r71, $r74, $r84, $r95, $r99, $r105, $r113, r115;
        android.os.ParcelFileDescriptor r7;
        boolean z0, z1, z2, $z3, $z4, $z5, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, z22, z23, z24;
        android.content.pm.ApplicationInfo r8, $r21, $r25, $r26, $r44, $r48, $r51, $r52, $r55, $r60, $r69;
        android.app.ProfilerInfo r9, $r31;
        android.os.IBinder $r11;
        com.android.server.am.ActivityManagerService$AppDeathRecipient $r12, r116;
        java.lang.Object[] $r13;
        java.lang.Integer $r14, $r15;
        com.android.server.am.ProcessStatsService $r17, $r101, $r112;
        com.android.server.am.ActivityManagerService$MainHandler $r19;
        com.android.server.am.BackupRecord $r20, $r41, $r43, $r46, $r47, $r49, $r50, $r58, $r59, $r66;
        android.content.ComponentName $r24, $r35, $r54;
        android.content.res.Configuration $r28, $r29;
        android.content.res.CompatibilityInfo $r30, $r37, $r53;
        android.app.IUiAutomationConnection $r32;
        android.app.IInstrumentationWatcher $r33;
        android.os.Bundle $r34, $r39;
        java.util.HashMap $r36;
        java.util.ArrayList $r38, $r42;
        long $l9;
        com.android.server.am.CoreSettingsObserver $r40;
        com.android.server.am.ActiveServices $r56;
        com.android.server.am.ActivityStackSupervisor $r57;
        java.lang.StringBuilder $r67, $r72, $r73, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r85, $r92, $r93, $r94, $r97, $r98, $r103, $r106, $r107, $r108, $r109, $r110;
        java.lang.Exception $r86, $r90, $r91, $r96, $r102, $r104, r118, r119, r120, r121, r122;
        java.lang.Object $r88;
        android.os.RemoteException $r100;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 == $i3 goto label06;

        if i0 < 0 goto label06;

        $r87 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r3 = $r87;

        entermonitor $r87;

     label01:
        $r89 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r88 = virtualinvoke $r89.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r88;

        exitmonitor r3;

     label02:
        goto label05;

     label03:
        $r111 := @caughtexception;

        r4 = $r111;

        exitmonitor r3;

     label04:
        throw r4;

     label05:
        goto label07;

     label06:
        r2 = null;

     label07:
        if r2 != null goto label12;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No pending application record for pid ");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (IApplicationThread ");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); dropping process");

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r74);

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30033, i0);

        if i0 <= 0 goto label08;

        $i21 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 == $i21 goto label08;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>(i0);

        goto label11;

     label08:
        interfaceinvoke r1.<android.app.IApplicationThread: void scheduleExit()>();

     label09:
        goto label11;

     label10:
        $r102 := @caughtexception;

     label11:
        return 0;

     label12:
        $r10 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r10 == null goto label13;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r2, 1, 1);

     label13:
        r115 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label14:
        $r12 = new com.android.server.am.ActivityManagerService$AppDeathRecipient;

        specialinvoke $r12.<com.android.server.am.ActivityManagerService$AppDeathRecipient: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>(r0, r2, i0, r1);

        r116 = $r12;

        $r11 = interfaceinvoke r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        interfaceinvoke $r11.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r116, 0);

        r2.<com.android.server.am.ProcessRecord: android.os.IBinder$DeathRecipient deathRecipient> = r116;

     label15:
        goto label17;

     label16:
        $r100 := @caughtexception;

        $r101 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r101);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r2, "link fail", r115);

        return 0;

     label17:
        $r13 = newarray (java.lang.Object)[3];

        $i4 = r2.<com.android.server.am.ProcessRecord: int userId>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r13[0] = $r14;

        $i5 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r13[1] = $r15;

        $r16 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r13[2] = $r16;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30010, $r13);

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>(r1, $r17);

        r2.<com.android.server.am.ProcessRecord: int setAdj> = -100;

        r2.<com.android.server.am.ProcessRecord: int curAdj> = -100;

        r2.<com.android.server.am.ProcessRecord: int setSchedGroup> = -1;

        r2.<com.android.server.am.ProcessRecord: int curSchedGroup> = -1;

        r2.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r2, 0, 0);

        r2.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 0;

        r2.<com.android.server.am.ProcessRecord: boolean debugging> = 0;

        r2.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r19.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r2);

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z3 != 0 goto label18;

        $r69 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z21 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>($r69);

        if $z21 == 0 goto label19;

     label18:
        $z20 = 1;

        goto label20;

     label19:
        $z20 = 0;

     label20:
        z22 = $z20;

        if z22 == 0 goto label21;

        $r70 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>(r2);

        goto label22;

     label21:
        $r70 = null;

     label22:
        r5 = $r70;

        if z22 != 0 goto label23;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launching preboot mode app: ");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r71);

     label23:
        i1 = 0;

        $r18 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        if $r18 == null goto label26;

        $r63 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z18 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>(r115);

        if $z18 == 0 goto label26;

        $z19 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        if $z19 == 0 goto label24;

        $i16 = 2;

        goto label25;

     label24:
        $i16 = 1;

     label25:
        i1 = $i16;

        r2.<com.android.server.am.ProcessRecord: boolean debugging> = 1;

        $z17 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z17 == 0 goto label26;

        $r68 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = $r68;

        $z16 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = $z16;

     label26:
        r6 = r2.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile>;

        r7 = null;

        i2 = 0;

        z0 = 0;

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        if $r22 == null goto label27;

        $r64 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $z13 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>(r115);

        if $z13 == 0 goto label27;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = r2;

        r6 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        r7 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        i2 = r0.<com.android.server.am.ActivityManagerService: int mSamplingInterval>;

        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler>;

     label27:
        z1 = 0;

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        if $r23 == null goto label28;

        $r65 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        $z14 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>(r115);

        if $z14 == 0 goto label28;

        z1 = 1;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp> = null;

     label28:
        z2 = 0;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r20 == null goto label32;

        $r62 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        $z12 = virtualinvoke $r62.<java.lang.String: boolean equals(java.lang.Object)>(r115);

        if $z12 == 0 goto label32;

        $r58 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i13 = $r58.<com.android.server.am.BackupRecord: int backupMode>;

        if $i13 == 2 goto label29;

        $r59 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i14 = $r59.<com.android.server.am.BackupRecord: int backupMode>;

        if $i14 == 3 goto label29;

        $r66 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i15 = $r66.<com.android.server.am.BackupRecord: int backupMode>;

        if $i15 != 1 goto label30;

     label29:
        $z15 = 1;

        goto label31;

     label30:
        $z15 = 0;

     label31:
        z2 = $z15;

     label32:
        $r21 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        if $r21 == null goto label33;

        $r60 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        $r27 = $r60.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label34;

     label33:
        $r26 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r27 = $r26.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label34:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r27);

        $r24 = r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r24 == null goto label35;

        $r54 = r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r61 = virtualinvoke $r54.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r61);

     label35:
        $r25 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        if $r25 == null goto label36;

        $r55 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        goto label37;

     label36:
        $r55 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

     label37:
        r8 = $r55;

        $r30 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r8);

        r2.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat> = $r30;

        if r7 == null goto label38;

        r7 = virtualinvoke r7.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label38:
        if r6 != null goto label39;

        $r31 = null;

        goto label40;

     label39:
        $r31 = new android.app.ProfilerInfo;

        specialinvoke $r31.<android.app.ProfilerInfo: void <init>(java.lang.String,android.os.ParcelFileDescriptor,int,boolean)>(r6, r7, i2, z0);

     label40:
        r9 = $r31;

        $r35 = r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r34 = r2.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments>;

        $r33 = r2.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r32 = r2.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        if z2 != 0 goto label41;

        if z22 != 0 goto label42;

     label41:
        $z5 = 1;

        goto label43;

     label42:
        $z5 = 0;

     label43:
        $z4 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        $r28 = new android.content.res.Configuration;

        $r29 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r28.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r29);

        $r37 = r2.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat>;

        $r36 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.HashMap getCommonServicesLocked()>();

        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver>;

        $r39 = virtualinvoke $r40.<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>();

        interfaceinvoke r1.<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>(r115, r8, r5, $r35, r9, $r34, $r33, $r32, i1, z1, $z5, $z4, $r28, $r37, $r36, $r39);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 0, null);

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r2.<com.android.server.am.ProcessRecord: long lastLowMemory> = $l9;

        r2.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l9;

     label44:
        goto label46;

     label45:
        $r96 := @caughtexception;

        r118 = $r96;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown during bind of ");

        $r108 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r113 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r113, r118);

        $r112 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r112);

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r2, "bind fail", r115);

        return 0;

     label46:
        $r38 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r38.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $r42 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r42.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        z23 = 0;

        z24 = 0;

        if z22 == 0 goto label50;

     label47:
        $r57 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z11 = virtualinvoke $r57.<com.android.server.am.ActivityStackSupervisor: boolean attachApplicationLocked(com.android.server.am.ProcessRecord)>(r2);

        if $z11 == 0 goto label48;

        z24 = 1;

     label48:
        goto label50;

     label49:
        $r90 := @caughtexception;

        r119 = $r90;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown launching activities in ");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r84, r119);

        z23 = 1;

     label50:
        if z23 != 0 goto label54;

     label51:
        $r56 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z10 = virtualinvoke $r56.<com.android.server.am.ActiveServices: boolean attachApplicationLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, r115);

        z24 = z24 | $z10;

     label52:
        goto label54;

     label53:
        $r104 := @caughtexception;

        r120 = $r104;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown starting services in ");

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r105, r120);

        z23 = 1;

     label54:
        if z23 != 0 goto label58;

        $z8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z8 == 0 goto label58;

     label55:
        $z9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>(r2);

        z24 = z24 | $z9;

     label56:
        goto label58;

     label57:
        $r91 := @caughtexception;

        r121 = $r91;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown dispatching broadcasts in ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r95, r121);

        z23 = 1;

     label58:
        if z23 != 0 goto label62;

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r41 == null goto label62;

        $r47 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r48 = $r47.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $i11 = $r48.<android.content.pm.ApplicationInfo: int uid>;

        $i10 = r2.<com.android.server.am.ProcessRecord: int uid>;

        if $i11 != $i10 goto label62;

        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r44 = $r43.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r45 = $r44.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r45);

     label59:
        $r46 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r52 = $r46.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r51 = $r50.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r53 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r51);

        $r49 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i12 = $r49.<com.android.server.am.BackupRecord: int backupMode>;

        interfaceinvoke r1.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>($r52, $r53, $i12);

     label60:
        goto label62;

     label61:
        $r86 := @caughtexception;

        r122 = $r86;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown creating backup agent in ");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r99, r122);

        z23 = 1;

     label62:
        if z23 == 0 goto label63;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("error during init", 1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r2, 0, 1);

        return 0;

     label63:
        if z24 != 0 goto label64;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label64:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Exception from label08 to label09 with label10;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Exception from label23 to label44 with label45;
        catch java.lang.Exception from label47 to label48 with label49;
        catch java.lang.Exception from label51 to label52 with label53;
        catch java.lang.Exception from label55 to label56 with label57;
        catch java.lang.Exception from label59 to label60 with label61;
    }

    public final void attachApplication(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IApplicationThread r1;
        int i0;
        long l1;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 = r0;

        entermonitor r0;

     label1:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int)>(r1, i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void activityIdle(android.os.IBinder, android.content.res.Configuration, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        android.content.res.Configuration r2;
        boolean z0;
        long l0;
        com.android.server.am.ActivityStack r4;
        com.android.server.am.ActivityRecord r5;
        java.lang.Throwable r7, $r15;
        com.android.server.am.ActivityStackSupervisor $r9;
        com.android.server.am.ProcessRecord $r10, $r12;
        android.os.ParcelFileDescriptor $r11, $r14;
        java.io.IOException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.res.Configuration;

        z0 := @parameter2: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r3 = r0;

        entermonitor r0;

     label01:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r4 == null goto label06;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r5 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord activityIdleInternalLocked(android.os.IBinder,boolean,android.content.res.Configuration)>(r1, 0, r2);

        if z0 == 0 goto label06;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        $r10 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r12 != $r10 goto label06;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        if $r11 == null goto label06;

     label02:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        virtualinvoke $r14.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        goto label05;

     label04:
        $r13 := @caughtexception;

     label05:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r15 := @caughtexception;

        r7 = $r15;

        exitmonitor r3;

     label09:
        throw r7;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void postFinishBooting(boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1;
        com.android.server.am.ActivityManagerService$MainHandler $r1, $r2;
        android.os.Message $r3;
        byte $b0, $b1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        if z1 == 0 goto label3;

        $b0 = 1;

        goto label4;

     label3:
        $b0 = 0;

     label4:
        $r3 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(45, $b1, $b0);

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    void enableScreenAfterBoot()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r5;
        long $l0;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3050, $l0);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>();

        r1 = r0;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateEventDispatchingLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void showBootMessage(java.lang.CharSequence, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.CharSequence r1;
        boolean z0;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("showBootMessage");

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>(r1, z0);

        return;
    }

    public void keyguardWaitingForActivityDrawn()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        long l0;
        java.lang.Throwable r2, r3, $r6, $r7;
        com.android.server.wm.WindowManagerService $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("keyguardWaitingForActivityDrawn");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void keyguardWaitingForActivityDrawn()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        if $z0 == 0 goto label03;

        r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label10;

     label08:
        $r6 := @caughtexception;

        r3 = $r6;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    final void finishBooting()
    {
        com.android.server.am.ActivityManagerService r0, r1, r35;
        java.lang.Throwable r2, r6, $r33, $r34;
        java.util.ArrayList r3, $r14, $r31, $r32;
        int i0, i1, $i2, $i3, $i4, $i5, i7, i8;
        com.android.server.am.UserStartedState r4;
        android.content.Intent r5, $r25;
        boolean $z0, $z2, $z3;
        com.android.internal.content.PackageMonitor $r8;
        android.content.Context $r9;
        android.os.Looper $r10;
        android.os.UserHandle $r11;
        com.android.server.SystemServiceManager $r13;
        com.android.server.am.ActivityManagerService$MainHandler $r15, $r16;
        java.lang.String $r17, $r18, $r27, $r28;
        android.util.SparseArray $r19, $r20, $r21;
        java.lang.Object $r22, $r30;
        com.android.server.am.ActivityManagerService$8 $r24;
        com.android.server.am.ProcessRecord $r29;
        android.os.Message r36;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete>;

        if $z0 != 0 goto label03;

        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 1;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 0;

        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r33 := @caughtexception;

        r2 = $r33;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r10 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r9, $r10, $r11, 0);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        virtualinvoke $r13.<com.android.server.SystemServiceManager: void startBootPhase(int)>(1000);

        r35 = r0;

        entermonitor r0;

     label08:
        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        i7 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if i7 <= 0 goto label10;

        $r32 = new java.util.ArrayList;

        $r31 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        specialinvoke $r32.<java.util.ArrayList: void <init>(java.util.Collection)>($r31);

        r3 = $r32;

        i0 = 0;

     label09:
        if i0 >= i7 goto label10;

        $r30 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r29 = (com.android.server.am.ProcessRecord) $r30;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r29, "on-hold", null);

        i0 = i0 + 1;

        goto label09;

     label10:
        $i2 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i2 == 1 goto label16;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r36 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(27);

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r36, 900000L);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.boot_completed", "1");

        $r18 = "trigger_restart_min_framework";

        $r17 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("vold.decrypt");

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label11;

        $r28 = "";

        $r27 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("vold.encrypt_progress");

        $z3 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z3 == 0 goto label12;

     label11:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("dev.bootcomplete", "1");

     label12:
        i8 = 0;

     label13:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i3 = virtualinvoke $r19.<android.util.SparseArray: int size()>();

        if i8 >= $i3 goto label15;

        $r20 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r22 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        r4 = (com.android.server.am.UserStartedState) $r22;

        $i4 = r4.<com.android.server.am.UserStartedState: int mState>;

        if $i4 != 0 goto label14;

        r4.<com.android.server.am.UserStartedState: int mState> = 1;

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        i1 = virtualinvoke $r21.<android.util.SparseArray: int keyAt(int)>(i8);

        $r25 = new android.content.Intent;

        specialinvoke $r25.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.BOOT_COMPLETED", null);

        r5 = $r25;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i1);

        virtualinvoke r5.<android.content.Intent: android.content.Intent addFlags(int)>(134217728);

        $r24 = new com.android.server.am.ActivityManagerService$8;

        specialinvoke $r24.<com.android.server.am.ActivityManagerService$8: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $i5 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r5, null, $r24, 0, null, null, "android.permission.RECEIVE_BOOT_COMPLETED", -1, 1, 0, $i5, 1000, i1);

     label14:
        i8 = i8 + 1;

        goto label13;

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleStartProfilesLocked()>();

     label16:
        exitmonitor r35;

     label17:
        goto label20;

     label18:
        $r34 := @caughtexception;

        r6 = $r34;

        exitmonitor r35;

     label19:
        throw r6;

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void bootAnimationComplete()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        boolean z0;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting>;

        r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete> = 1;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishBooting()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    final void ensureBootCompleted()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        boolean z0, z1, $z2, $z3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z1 = $z3;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        if z0 == 0 goto label8;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishBooting()>();

     label8:
        if z1 == 0 goto label9;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>();

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void activityResumed(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityStack r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        staticinvoke <com.android.server.am.ActivityRecord: void activityResumedLocked(android.os.IBinder)>(r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void activityPaused(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityStack r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void activityPausedLocked(android.os.IBinder,boolean)>(r1, 0);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void activityStopped(android.os.IBinder, android.os.Bundle, android.os.PersistableBundle, java.lang.CharSequence)
    {
        com.android.server.am.ActivityManagerService r0, r5;
        android.os.IBinder r1;
        android.os.Bundle r2;
        android.os.PersistableBundle r3;
        java.lang.CharSequence r4;
        long l0;
        com.android.server.am.ActivityRecord r6;
        java.lang.Throwable r7, $r12;
        com.android.server.am.TaskRecord $r9;
        com.android.server.am.ActivityStack $r10;
        java.lang.IllegalArgumentException $r11;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.PersistableBundle;

        r4 := @parameter3: java.lang.CharSequence;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r11;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r5 = r0;

        entermonitor r0;

     label2:
        r6 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r6 == null goto label3;

        $r9 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r10 = $r9.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r10.<com.android.server.am.ActivityStack: void activityStoppedLocked(com.android.server.am.ActivityRecord,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>(r6, r2, r3, r4);

     label3:
        exitmonitor r5;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r7 = $r12;

        exitmonitor r5;

     label6:
        throw r7;

     label7:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void activityDestroyed(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityStack r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void activityDestroyedLocked(android.os.IBinder)>(r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void backgroundResourcesReleased(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityStack r3;
        java.lang.Throwable r4, r5, $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label03;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void backgroundResourcesReleased(android.os.IBinder)>(r1);

     label03:
        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label06:
        throw r4;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label10;

     label08:
        $r7 := @caughtexception;

        r5 = $r7;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public final void notifyLaunchTaskBehindComplete(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityStackSupervisor $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor: void scheduleLaunchTaskBehindComplete(android.os.IBinder)>(r1);

        return;
    }

    public final void notifyEnterAnimationComplete(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityManagerService$MainHandler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r4 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,java.lang.Object)>(44, r1);

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public java.lang.String getCallingPackage(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r8;
        android.content.pm.ActivityInfo $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord getCallingRecordLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        $r6 = r3.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        goto label3;

     label2:
        $r7 = null;

     label3:
        exitmonitor r2;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.ComponentName getCallingActivity(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r8;
        android.content.Intent $r6;
        android.content.ComponentName $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord getCallingRecordLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        $r6 = r3.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        exitmonitor r2;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private com.android.server.am.ActivityRecord getCallingRecordLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        return $r3;
    }

    public android.content.ComponentName getActivityClassForToken(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r8;
        android.content.Intent $r6;
        android.content.ComponentName $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return null;

     label3:
        $r6 = r3.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        exitmonitor r2;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String getPackageForToken(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r7;
        java.lang.String $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return null;

     label3:
        $r6 = r3.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        exitmonitor r2;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.IIntentSender getIntentSender(int, java.lang.String, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0, r33;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        java.lang.String r1, r3, r8;
        android.os.IBinder r2;
        android.content.Intent[] r4;
        java.lang.String[] r5;
        android.os.Bundle r6;
        android.content.Intent r7, $r25;
        java.lang.Throwable r10, $r30;
        android.content.IIntentSender $r11;
        android.content.pm.IPackageManager $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.SecurityException $r23, $r32;
        java.lang.IllegalArgumentException $r24, $r26, $r27, $r28, $r31;
        android.os.RemoteException $r29, r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.content.Intent[];

        r5 := @parameter6: java.lang.String[];

        i2 := @parameter7: int;

        r6 := @parameter8: android.os.Bundle;

        i3 := @parameter9: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getIntentSender");

        if r4 == null goto label07;

        $i14 = lengthof r4;

        if $i14 >= 1 goto label01;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Intents array length must be >= 1");

        throw $r31;

     label01:
        i4 = 0;

     label02:
        $i12 = lengthof r4;

        if i4 >= $i12 goto label06;

        r7 = r4[i4];

        if r7 == null goto label05;

        $z3 = virtualinvoke r7.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z3 == 0 goto label03;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r27;

     label03:
        if i0 != 1 goto label04;

        $i17 = virtualinvoke r7.<android.content.Intent: int getFlags()>();

        $i16 = $i17 & 33554432;

        if $i16 == 0 goto label04;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here");

        throw $r28;

     label04:
        $r25 = new android.content.Intent;

        specialinvoke $r25.<android.content.Intent: void <init>(android.content.Intent)>(r7);

        r4[i4] = $r25;

     label05:
        i4 = i4 + 1;

        goto label02;

     label06:
        if r5 == null goto label07;

        $i15 = lengthof r5;

        $i13 = lengthof r4;

        if $i15 == $i13 goto label07;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Intent array length does not match resolvedTypes length");

        throw $r26;

     label07:
        if r6 == null goto label08;

        $z2 = virtualinvoke r6.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z2 == 0 goto label08;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in options");

        throw $r24;

     label08:
        r33 = r0;

        entermonitor r0;

     label09:
        i18 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i5 = i3;

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if i0 != 1 goto label10;

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        i19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i7, i18, i3, $z1, 0, "getIntentSender", null);

        if i5 != -2 goto label12;

        i19 = -2;

     label12:
        if i18 == 0 goto label13;

        if i18 == 1000 goto label13;

        $r12 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i18);

        i6 = interfaceinvoke $r12.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, $i8);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i18, i6);

        if $z0 != 0 goto label13;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getIntentSender() from pid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i10 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (need uid=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to send as package ");

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r8 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r8);

        $r23 = new java.lang.SecurityException;

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>(r8);

        throw $r23;

     label13:
        $r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(i0, r1, i18, i19, r2, r3, i1, r4, r5, i2, r6);

     label14:
        exitmonitor r33;

     label15:
        return $r11;

     label16:
        $r29 := @caughtexception;

        r34 = $r29;

        $r32 = new java.lang.SecurityException;

        specialinvoke $r32.<java.lang.SecurityException: void <init>(java.lang.Throwable)>(r34);

        throw $r32;

     label17:
        $r30 := @caughtexception;

        r10 = $r30;

        exitmonitor r33;

     label18:
        throw r10;

        catch android.os.RemoteException from label12 to label14 with label16;
        catch java.lang.Throwable from label09 to label15 with label17;
        catch java.lang.Throwable from label16 to label18 with label17;
    }

    android.content.IIntentSender getIntentSenderLocked(int, java.lang.String, int, int, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.String r1, r3;
        android.os.IBinder r2;
        android.content.Intent[] r4;
        java.lang.String[] r5;
        android.os.Bundle r6;
        com.android.server.am.ActivityRecord r7;
        boolean z0, z1, z2, $z4, $z5, $z6, $z7;
        java.lang.ref.WeakReference r8, $r16, $r20;
        com.android.server.am.PendingIntentRecord$Key r9, $r12, $r24, $r25, $r26, $r29, $r30, $r32, $r33;
        com.android.server.am.PendingIntentRecord r10, $r13, $r36, r38;
        java.util.HashMap $r11, $r15, $r21;
        java.lang.Object $r14, $r37;
        java.util.HashSet $r17, $r19, $r23;
        android.content.Intent $r27, $r28, $r31, $r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.IBinder;

        r3 := @parameter5: java.lang.String;

        i3 := @parameter6: int;

        r4 := @parameter7: android.content.Intent[];

        r5 := @parameter8: java.lang.String[];

        i4 := @parameter9: int;

        r6 := @parameter10: android.os.Bundle;

        r7 = null;

        if i0 != 3 goto label02;

        r7 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r2);

        if r7 != null goto label01;

        return null;

     label01:
        $z6 = r7.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z6 == 0 goto label02;

        return null;

     label02:
        $i5 = i4 & 536870912;

        if $i5 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z0 = $z7;

        $i7 = i4 & 268435456;

        if $i7 == 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z1 = $z4;

        $i6 = i4 & 134217728;

        if $i6 == 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z2 = $z5;

        i12 = i4 & -939524097;

        $r12 = new com.android.server.am.PendingIntentRecord$Key;

        specialinvoke $r12.<com.android.server.am.PendingIntentRecord$Key: void <init>(int,java.lang.String,com.android.server.am.ActivityRecord,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>(i0, r1, r7, r3, i3, r4, r5, i12, r6, i2);

        r9 = $r12;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r14 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r8 = (java.lang.ref.WeakReference) $r14;

        if r8 == null goto label09;

        $r37 = virtualinvoke r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r36 = (com.android.server.am.PendingIntentRecord) $r37;

        goto label10;

     label09:
        $r36 = null;

     label10:
        r10 = $r36;

        if r10 == null goto label17;

        if z1 != 0 goto label16;

        if z2 == 0 goto label15;

        $r26 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r27 = $r26.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if $r27 == null goto label13;

        $r30 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r31 = $r30.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if r4 == null goto label11;

        $i11 = lengthof r4;

        $i10 = $i11 - 1;

        $r34 = r4[$i10];

        goto label12;

     label11:
        $r34 = null;

     label12:
        virtualinvoke $r31.<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>($r34);

     label13:
        if r4 == null goto label14;

        $i9 = lengthof r4;

        $i8 = $i9 - 1;

        $r29 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r28 = $r29.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        r4[$i8] = $r28;

        $r32 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r32.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents> = r4;

        $r33 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r33.<com.android.server.am.PendingIntentRecord$Key: java.lang.String[] allResolvedTypes> = r5;

        goto label15;

     label14:
        $r24 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r24.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents> = null;

        $r25 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r25.<com.android.server.am.PendingIntentRecord$Key: java.lang.String[] allResolvedTypes> = null;

     label15:
        return r10;

     label16:
        r10.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r21 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r9);

     label17:
        if z0 == 0 goto label18;

        return r10;

     label18:
        $r13 = new com.android.server.am.PendingIntentRecord;

        specialinvoke $r13.<com.android.server.am.PendingIntentRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.PendingIntentRecord$Key,int)>(r0, r9, i1);

        r38 = $r13;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r16 = r38.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r16);

        if i0 != 3 goto label20;

        $r17 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        if $r17 != null goto label19;

        $r23 = new java.util.HashSet;

        specialinvoke $r23.<java.util.HashSet: void <init>()>();

        r7.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults> = $r23;

     label19:
        $r19 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $r20 = r38.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>($r20);

     label20:
        return r38;
    }

    public void cancelIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r3;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r4, $r9, $r18;
        java.lang.Throwable r5, $r19;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r7;
        com.android.server.am.PendingIntentRecord$Key $r8, $r15;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r16, $r17;
        java.lang.SecurityException $r20, $r21;
        android.os.RemoteException $r22, r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        r3 = (com.android.server.am.PendingIntentRecord) r1;

     label03:
        $r7 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r8 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r9 = $r8.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i0 = interfaceinvoke $r7.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>($r9, $i1);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, $i2);

        if $z1 != 0 goto label04;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: cancelIntentSender() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to cancel packges ");

        $r15 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r18 = $r15.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r4 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r4);

        $r20 = new java.lang.SecurityException;

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>(r4);

        throw $r20;

     label04:
        goto label06;

     label05:
        $r22 := @caughtexception;

        r23 = $r22;

        $r21 = new java.lang.SecurityException;

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.Throwable)>(r23);

        throw $r21;

     label06:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>(r3, 1);

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.PendingIntentRecord r1;
        boolean z0;
        com.android.server.am.PendingIntentRecord$Key $r2, $r5, $r7;
        java.util.HashMap $r3;
        com.android.server.am.ActivityRecord $r6, $r8;
        java.lang.ref.WeakReference $r9;
        java.util.HashSet $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.PendingIntentRecord;

        z0 := @parameter1: boolean;

        r1.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r2 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        if z0 == 0 goto label1;

        $r5 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r5.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        if $r6 == null goto label1;

        $r7 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r8 = $r7.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        $r10 = $r8.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $r9 = r1.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r10.<java.util.HashSet: boolean remove(java.lang.Object)>($r9);

     label1:
        return;
    }

    public java.lang.String getPackageForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r2;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r3;
        java.lang.String $r4;
        java.lang.ClassCastException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r3 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r4 = $r3.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int getUidForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r2;
        boolean $z0;
        int $i0;
        java.lang.ClassCastException $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 == 0 goto label4;

     label1:
        r2 = (com.android.server.am.PendingIntentRecord) r1;

        $i0 = r2.<com.android.server.am.PendingIntentRecord: int uid>;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

     label4:
        return -1;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r2;
        int i0, $i1;
        android.content.Intent r3;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r4, $r6, $r8;
        android.content.Intent[] $r5, $r7, $r9;
        java.lang.String $r10;
        android.content.ComponentName $r11;
        java.lang.ClassCastException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r4 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r5 = $r4.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        if $r5 != null goto label3;

     label2:
        return 0;

     label3:
        i0 = 0;

     label4:
        $r6 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r7 = $r6.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        $i1 = lengthof $r7;

        if i0 >= $i1 goto label7;

        $r8 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r9 = $r8.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        r3 = $r9[i0];

        $r10 = virtualinvoke r3.<android.content.Intent: java.lang.String getPackage()>();

        if $r10 == null goto label6;

        $r11 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r11 == null goto label6;

     label5:
        return 0;

     label6:
        i0 = i0 + 1;

        goto label4;

     label7:
        return 1;

     label8:
        $r12 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label8;
        catch java.lang.ClassCastException from label3 to label5 with label8;
        catch java.lang.ClassCastException from label6 to label7 with label8;
    }

    public boolean isIntentSenderAnActivity(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r2;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r3;
        int $i0;
        java.lang.ClassCastException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r3 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i0 = $r3.<com.android.server.am.PendingIntentRecord$Key: int type>;

        if $i0 != 2 goto label3;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    public android.content.Intent getIntentForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r2;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r3, $r6;
        android.content.Intent $r4, $r5, $r7;
        java.lang.ClassCastException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r3 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r4 = $r3.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if $r4 == null goto label2;

        $r5 = new android.content.Intent;

        $r6 = r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r7 = $r6.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Intent)>($r7);

        goto label3;

     label2:
        $r5 = null;

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label3 with label4;
    }

    public java.lang.String getTagForIntentSender(android.content.IIntentSender, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        java.lang.String r2, $r7, $r9, $r12, $r14, $r17, $r18, $r19, $r20;
        com.android.server.am.PendingIntentRecord r3;
        android.content.Intent r4;
        java.lang.StringBuilder r5, $r8;
        boolean $z0, $z1;
        com.android.server.am.PendingIntentRecord$Key $r6;
        android.content.ComponentName $r10, $r13;
        java.lang.ClassCastException $r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        r2 := @parameter1: java.lang.String;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return null;

     label01:
        r3 = (com.android.server.am.PendingIntentRecord) r1;

        $r6 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        r4 = $r6.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if r4 == null goto label10;

        $r7 = r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTag>;

        if $r7 == null goto label04;

        $r18 = r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix>;

        if $r18 != r2 goto label04;

        $r17 = r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix>;

        if $r17 == null goto label02;

        $r19 = r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix>;

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label04;

     label02:
        $r20 = r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTag>;

     label03:
        return $r20;

     label04:
        r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix> = r2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(128);

        r5 = $r8;

        if r2 == null goto label05;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label05:
        $r9 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        if $r9 == null goto label06;

        $r14 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        goto label08;

     label06:
        $r10 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r10 == null goto label07;

        $r13 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        virtualinvoke $r13.<android.content.ComponentName: void appendShortString(java.lang.StringBuilder)>(r5);

        goto label08;

     label07:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

     label08:
        $r12 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r3.<com.android.server.am.PendingIntentRecord: java.lang.String lastTag> = $r12;

     label09:
        return $r12;

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

     label12:
        return null;

        catch java.lang.ClassCastException from label01 to label03 with label11;
        catch java.lang.ClassCastException from label04 to label09 with label11;
    }

    public void setProcessLimit(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, $i1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessLimit()");

        r1 = r0;

        entermonitor r0;

     label1:
        if i0 >= 0 goto label2;

        $i1 = 32;

        goto label3;

     label2:
        $i1 = i0;

     label3:
        r0.<com.android.server.am.ActivityManagerService: int mProcessLimit> = $i1;

        r0.<com.android.server.am.ActivityManagerService: int mProcessLimitOverride> = i0;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getProcessLimit()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimitOverride>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void foregroundTokenDied(com.android.server.am.ActivityManagerService$ForegroundToken)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        com.android.server.am.ActivityManagerService$ForegroundToken r1, r4;
        android.util.SparseArray r3, $r9, $r10, $r12, $r14;
        com.android.server.am.ProcessRecord r5;
        java.lang.Throwable r6, r7, $r15, $r16;
        int $i0, $i1, $i2;
        java.lang.Object $r11, $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$ForegroundToken;

        r2 = r0;

        entermonitor r0;

     label01:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r3 = $r9;

        entermonitor $r9;

     label02:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i0 = r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r4 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r11;

        if r4 == r1 goto label05;

        exitmonitor r3;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i1 = r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        virtualinvoke $r12.<android.util.SparseArray: void remove(int)>($i1);

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r13 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r5 = (com.android.server.am.ProcessRecord) $r13;

        if r5 != null goto label08;

        exitmonitor r3;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        r5.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r5, 0, 0);

        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r3;

     label11:
        throw r6;

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        exitmonitor r2;

     label13:
        goto label16;

     label14:
        $r15 := @caughtexception;

        r7 = $r15;

        exitmonitor r2;

     label15:
        throw r7;

     label16:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label04 with label14;
        catch java.lang.Throwable from label05 to label07 with label14;
        catch java.lang.Throwable from label08 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void setProcessForeground(android.os.IBinder, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1, $r17;
        int i0;
        boolean z0, z1;
        android.util.SparseArray r3, $r11, $r12, $r13, $r18, $r19;
        com.android.server.am.ProcessRecord r4;
        com.android.server.am.ActivityManagerService$ForegroundToken r5;
        com.android.server.am.ActivityManagerService$9 r6, $r16;
        java.lang.Throwable r8, r9, $r25, $r26;
        java.lang.Object $r14, $r15;
        java.lang.StringBuilder $r20, $r21, $r22;
        java.lang.String $r23;
        android.os.RemoteException $r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessForeground()");

        r2 = r0;

        entermonitor r0;

     label01:
        z1 = 0;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r3 = $r11;

        entermonitor $r11;

     label02:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r14 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ProcessRecord) $r14;

        if r4 != null goto label05;

        if z0 == 0 goto label05;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProcessForeground called on unknown pid: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r23);

        exitmonitor r3;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r15 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r15;

        if r5 == null goto label07;

        $r17 = r5.<com.android.server.am.ActivityManagerService$ForegroundToken: android.os.IBinder token>;

        interfaceinvoke $r17.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r5, 0);

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        virtualinvoke $r19.<android.util.SparseArray: void remove(int)>(i0);

        if r4 == null goto label06;

        r4.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

     label06:
        z1 = 1;

     label07:
        if z0 == 0 goto label11;

        if r1 == null goto label11;

        $r16 = new com.android.server.am.ActivityManagerService$9;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$9: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r6 = $r16;

        r6.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid> = i0;

        r6.<com.android.server.am.ActivityManagerService$ForegroundToken: android.os.IBinder token> = r1;

     label08:
        interfaceinvoke r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r6, 0);

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        virtualinvoke $r18.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r6);

        r4.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = r1;

        z1 = 1;

     label09:
        goto label11;

     label10:
        $r24 := @caughtexception;

     label11:
        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r25 := @caughtexception;

        r8 = $r25;

        exitmonitor r3;

     label14:
        throw r8;

     label15:
        if z1 == 0 goto label16;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label16:
        exitmonitor r2;

     label17:
        goto label20;

     label18:
        $r26 := @caughtexception;

        r9 = $r26;

        exitmonitor r2;

     label19:
        throw r9;

     label20:
        return;

        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label05 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label01 to label04 with label18;
        catch java.lang.Throwable from label05 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    int checkComponentPermission(java.lang.String, int, int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r11;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z0;
        com.android.server.am.ActivityManagerService$Identity r2;
        java.lang.ThreadLocal $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r3 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.am.ActivityManagerService$Identity) $r4;

        if r2 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkComponentPermission() adjusting {pid,uid} to {");

        $i5 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i6 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        i1 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        i0 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label1:
        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 != $i3 goto label2;

        return 0;

     label2:
        $i4 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>(r1, i1, i2, z0);

        return $i4;
    }

    public int checkPermission(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return -1;

     label1:
        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r1, i0, $i2, -1, 1);

        return $i3;
    }

    int checkCallingPermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>(r1, $i0, $i2);

        return $i3;
    }

    void enforceCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>(r1);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r13;
    }

    private final boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager, android.content.pm.ProviderInfo, com.android.server.am.ActivityManagerService$GrantUri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.IPackageManager r1;
        android.content.pm.ProviderInfo r2;
        com.android.server.am.ActivityManagerService$GrantUri r3;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.IPackageManager;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        r3 := @parameter2: com.android.server.am.ActivityManagerService$GrantUri;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i3 = r3.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        if $i2 == $i3 goto label1;

        $i4 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i0, -1, 1);

        if $i4 == 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsInternalLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,com.android.server.am.ActivityManagerService$GrantUri,int,int,boolean)>(r1, r2, r3, i0, i1, 1);

        return $z0;
    }

    private final boolean checkHoldingPermissionsInternalLocked(android.content.pm.IPackageManager, android.content.pm.ProviderInfo, com.android.server.am.ActivityManagerService$GrantUri, int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.IPackageManager r1;
        android.content.pm.ProviderInfo r2;
        com.android.server.am.ActivityManagerService$GrantUri r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.content.pm.PathPermission[] r4;
        java.lang.String r5, r7, $r9, $r10, $r12, $r13, $r14, $r15, r17;
        android.content.pm.PathPermission r6;
        android.content.pm.ApplicationInfo $r8;
        android.net.Uri $r11;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.IPackageManager;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        r3 := @parameter2: com.android.server.am.ActivityManagerService$GrantUri;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r8 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 != i0 goto label01;

        return 1;

     label01:
        $z5 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z5 != 0 goto label02;

        return 0;

     label02:
        $i4 = i1 & 1;

        if $i4 != 0 goto label03;

        $z11 = 1;

        goto label04;

     label03:
        $z11 = 0;

     label04:
        z1 = $z11;

        $i5 = i1 & 2;

        if $i5 != 0 goto label05;

        $z10 = 1;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        z2 = $z10;

     label07:
        if z1 != 0 goto label08;

        $r14 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r14 == null goto label08;

        if z0 == 0 goto label08;

        $r15 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $i9 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r15, i0);

        if $i9 != 0 goto label08;

        z1 = 1;

     label08:
        if z2 != 0 goto label09;

        $r13 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r13 == null goto label09;

        if z0 == 0 goto label09;

        $r12 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $i8 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r12, i0);

        if $i8 != 0 goto label09;

        z2 = 1;

     label09:
        $r9 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r9 != null goto label10;

        $z9 = 1;

        goto label11;

     label10:
        $z9 = 0;

     label11:
        z3 = $z9;

        $r10 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r10 != null goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        z4 = $z8;

        r4 = r2.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if r4 == null goto label20;

        $r11 = r3.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        r5 = virtualinvoke $r11.<android.net.Uri: java.lang.String getPath()>();

        i2 = lengthof r4;

     label14:
        if i2 <= 0 goto label20;

        if z1 == 0 goto label15;

        if z2 != 0 goto label20;

     label15:
        i2 = i2 + -1;

        r6 = r4[i2];

        $z7 = virtualinvoke r6.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r5);

        if $z7 == 0 goto label19;

        if z1 != 0 goto label17;

        r7 = virtualinvoke r6.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        if r7 == null goto label17;

        if z0 == 0 goto label16;

        $i7 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>(r7, i0);

        if $i7 != 0 goto label16;

        z1 = 1;

        goto label17;

     label16:
        z3 = 0;

     label17:
        if z2 != 0 goto label19;

        r17 = virtualinvoke r6.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        if r17 == null goto label19;

        if z0 == 0 goto label18;

        $i6 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>(r17, i0);

        if $i6 != 0 goto label18;

        z2 = 1;

        goto label19;

     label18:
        z4 = 0;

     label19:
        goto label14;

     label20:
        if z3 == 0 goto label21;

        z1 = 1;

     label21:
        if z4 == 0 goto label22;

        z2 = 1;

     label22:
        goto label24;

     label23:
        $r16 := @caughtexception;

        return 0;

     label24:
        if z1 == 0 goto label25;

        if z2 == 0 goto label25;

        $z6 = 1;

        goto label26;

     label25:
        $z6 = 0;

     label26:
        return $z6;

        catch android.os.RemoteException from label07 to label22 with label23;
    }

    private android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.ProviderInfo r2;
        com.android.server.am.ContentProviderRecord r3;
        com.android.server.am.ProviderMap $r5;
        android.content.pm.IPackageManager $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = null;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r3 = virtualinvoke $r5.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r1, i0);

        if r3 == null goto label1;

        r2 = r3.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        goto label4;

     label1:
        $r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r2 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r1, 2048, i0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private com.android.server.am.UriPermission findUriPermissionLocked(int, com.android.server.am.ActivityManagerService$GrantUri)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.ActivityManagerService$GrantUri r1;
        android.util.ArrayMap r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        com.android.server.am.UriPermission $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.ActivityManagerService$GrantUri;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (com.android.server.am.UriPermission) $r5;

        return $r6;

     label1:
        return null;
    }

    private com.android.server.am.UriPermission findOrCreateUriPermissionLocked(java.lang.String, java.lang.String, int, com.android.server.am.ActivityManagerService$GrantUri)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0;
        com.android.server.am.ActivityManagerService$GrantUri r3;
        android.util.ArrayMap r4;
        com.android.server.am.UriPermission r5, $r9;
        android.util.SparseArray $r6, $r11;
        java.lang.Object $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.am.ActivityManagerService$GrantUri;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.util.ArrayMap) $r7;

        if r4 != null goto label1;

        r4 = staticinvoke <com.google.android.collect.Maps: android.util.ArrayMap newArrayMap()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r4);

     label1:
        $r8 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.android.server.am.UriPermission) $r8;

        if r5 != null goto label2;

        $r9 = new com.android.server.am.UriPermission;

        specialinvoke $r9.<com.android.server.am.UriPermission: void <init>(java.lang.String,java.lang.String,int,com.android.server.am.ActivityManagerService$GrantUri)>(r1, r2, i0, r3);

        r5 = $r9;

        virtualinvoke r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

     label2:
        return r5;
    }

    private final boolean checkUriPermissionLocked(com.android.server.am.ActivityManagerService$GrantUri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$GrantUri r1, $r8, $r10;
        int i0, i1, i3, i4, $i5, $i6, $i8;
        boolean z0, $z1, $z2, $z3;
        byte b2, $b7;
        android.util.ArrayMap r2;
        com.android.server.am.UriPermission r3, r4;
        android.util.SparseArray $r5;
        java.lang.Object $r6, $r7, $r9;
        android.net.Uri $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$GrantUri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i5 = i1 & 64;

        if $i5 == 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        if z0 == 0 goto label03;

        $b7 = 3;

        goto label04;

     label03:
        $b7 = 1;

     label04:
        b2 = $b7;

        if i0 != 0 goto label05;

        return 1;

     label05:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r6;

        if r2 != null goto label06;

        return 0;

     label06:
        $r7 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.am.UriPermission) $r7;

        if r3 == null goto label07;

        $i8 = virtualinvoke r3.<com.android.server.am.UriPermission: int getStrength(int)>(i1);

        if $i8 < b2 goto label07;

        return 1;

     label07:
        i3 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label08:
        if i4 >= i3 goto label10;

        $r9 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.server.am.UriPermission) $r9;

        $r8 = r4.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $z1 = $r8.<com.android.server.am.ActivityManagerService$GrantUri: boolean prefix>;

        if $z1 == 0 goto label09;

        $r11 = r1.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r10 = r4.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $r12 = $r10.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $z2 = virtualinvoke $r11.<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>($r12);

        if $z2 == 0 goto label09;

        $i6 = virtualinvoke r4.<com.android.server.am.UriPermission: int getStrength(int)>(i1);

        if $i6 < b2 goto label09;

        return 1;

     label09:
        i4 = i4 + 1;

        goto label08;

     label10:
        return 0;
    }

    public int checkUriPermission(android.net.Uri, int, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.net.Uri r1;
        int i0, i1, i2, i3, $i4;
        com.android.server.am.ActivityManagerService$Identity r2;
        java.lang.Throwable r4, $r9;
        java.lang.ThreadLocal $r5;
        java.lang.Object $r6;
        com.android.server.am.ActivityManagerService$GrantUri $r8;
        boolean $z0;
        byte $b5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("checkUriPermission");

        $r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.am.ActivityManagerService$Identity) $r6;

        if r2 == null goto label1;

        i1 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        i0 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label1:
        $i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 != $i4 goto label2;

        return 0;

     label2:
        r3 = r0;

        entermonitor r0;

     label3:
        $r8 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i3, r1, 0);

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(com.android.server.am.ActivityManagerService$GrantUri,int,int)>($r8, i1, i2);

        if $z0 == 0 goto label4;

        $b5 = 0;

        goto label5;

     label4:
        $b5 = -1;

     label5:
        exitmonitor r3;

     label6:
        return $b5;

     label7:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label8:
        throw r4;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    int checkGrantUriPermissionLocked(int, java.lang.String, com.android.server.am.ActivityManagerService$GrantUri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r1, r4, $r7, $r9, $r18, $r24, $r25, $r27, $r36, $r39, $r44, $r46, $r50, $r51, $r52, $r57;
        com.android.server.am.ActivityManagerService$GrantUri r2;
        android.content.pm.IPackageManager r3;
        android.content.pm.ProviderInfo r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11;
        android.net.Uri $r8, $r10, $r31, $r54;
        java.lang.SecurityException $r11, $r22, $r35;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r23, $r26, $r28, $r29, $r30, $r38, $r40, $r41, $r42, $r43, $r45, $r47, $r48, $r49, $r55, $r56;
        android.os.PatternMatcher[] $r16, $r21, $r32, $r34;
        android.os.PatternMatcher $r33, $r37;
        android.os.RemoteException $r53;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.am.ActivityManagerService$GrantUri;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z1 = staticinvoke <android.content.Intent: boolean isAccessUriMode(int)>(i1);

        if $z1 != 0 goto label01;

        return -1;

     label01:
        if r1 == null goto label02;

     label02:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r7 = "content";

        $r8 = r2.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r9 = virtualinvoke $r8.<android.net.Uri: java.lang.String getScheme()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label03;

        return -1;

     label03:
        $r10 = r2.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        r4 = virtualinvoke $r10.<android.net.Uri: java.lang.String getAuthority()>();

        $i6 = r2.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>(r4, $i6);

        if r5 != null goto label04;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission check: ");

        $r54 = r2.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r57 = virtualinvoke $r54.<android.net.Uri: java.lang.String toSafeString()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r52 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r52);

        return -1;

     label04:
        i3 = i2;

        if i3 >= 0 goto label09;

        if r1 == null goto label09;

     label05:
        $i12 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i3 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, $i12);

        if i3 >= 0 goto label07;

     label06:
        return -1;

     label07:
        goto label09;

     label08:
        $r53 := @caughtexception;

        return -1;

     label09:
        if i3 < 0 goto label10;

        $z9 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(r3, r5, r2, i3, i1);

        if $z9 == 0 goto label13;

        return -1;

     label10:
        z10 = r5.<android.content.pm.ProviderInfo: boolean exported>;

        $i8 = i1 & 1;

        if $i8 == 0 goto label11;

        $r51 = r5.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r51 == null goto label11;

        z10 = 0;

     label11:
        $i7 = i1 & 2;

        if $i7 == 0 goto label12;

        $r50 = r5.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r50 == null goto label12;

        z10 = 0;

     label12:
        if z10 == 0 goto label13;

        return -1;

     label13:
        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        $i9 = r2.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        if $i10 == $i9 goto label14;

        $z7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsInternalLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,com.android.server.am.ActivityManagerService$GrantUri,int,int,boolean)>(r3, r5, r2, i0, i1, 0);

        if $z7 == 0 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        z11 = $z8;

        if z11 != 0 goto label20;

        $z5 = r5.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z5 != 0 goto label16;

        $r35 = new java.lang.SecurityException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r39 = r5.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r46 = r5.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of Uri permissions (uri ");

        $r42 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.SecurityException: void <init>(java.lang.String)>($r44);

        throw $r35;

     label16:
        $r16 = r5.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        if $r16 == null goto label20;

        $r21 = r5.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        i4 = lengthof $r21;

        z0 = 0;

        i5 = 0;

     label17:
        if i5 >= i4 goto label19;

        $r34 = r5.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r33 = $r34[i5];

        if $r33 == null goto label18;

        $r32 = r5.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r37 = $r32[i5];

        $r31 = r2.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r36 = virtualinvoke $r31.<android.net.Uri: java.lang.String getPath()>();

        $z6 = virtualinvoke $r37.<android.os.PatternMatcher: boolean match(java.lang.String)>($r36);

        if $z6 == 0 goto label18;

        z0 = 1;

        goto label19;

     label18:
        i5 = i5 + 1;

        goto label17;

     label19:
        if z0 != 0 goto label20;

        $r22 = new java.lang.SecurityException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r25 = r5.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = r5.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of permission to path of Uri ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label20:
        $i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i11 == 1000 goto label21;

        $z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(r3, r5, r2, i0, i1);

        if $z3 != 0 goto label21;

        $z4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(com.android.server.am.ActivityManagerService$GrantUri,int,int)>(r2, i0, i1);

        if $z4 != 0 goto label21;

        $r11 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to uri ");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label21:
        return i3;

        catch android.os.RemoteException from label05 to label06 with label08;
    }

    public int checkGrantUriPermission(int, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        android.net.Uri r2;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ActivityManagerService$GrantUri $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("checkGrantUriPermission");

        r3 = r0;

        entermonitor r0;

     label1:
        $r6 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r6.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i2, r2, 0);

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(i0, r1, $r6, i1, -1);

        exitmonitor r3;

     label2:
        return $i3;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void grantUriPermissionUncheckedLocked(int, java.lang.String, com.android.server.am.ActivityManagerService$GrantUri, int, com.android.server.am.UriPermissionOwner)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1, r4, $r8, $r12, $r13;
        com.android.server.am.ActivityManagerService$GrantUri r2;
        com.android.server.am.UriPermissionOwner r3;
        android.content.pm.ProviderInfo r5;
        com.android.server.am.UriPermission r6;
        boolean $z0;
        android.net.Uri $r7;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.am.ActivityManagerService$GrantUri;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.UriPermissionOwner;

        $z0 = staticinvoke <android.content.Intent: boolean isAccessUriMode(int)>(i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r2.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        r4 = virtualinvoke $r7.<android.net.Uri: java.lang.String getAuthority()>();

        $i2 = r2.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>(r4, $i2);

        if r5 != null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for grant: ");

        $r12 = virtualinvoke r2.<com.android.server.am.ActivityManagerService$GrantUri: java.lang.String toSafeString()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        return;

     label2:
        $i3 = i1 & 128;

        if $i3 == 0 goto label3;

        r2.<com.android.server.am.ActivityManagerService$GrantUri: boolean prefix> = 1;

     label3:
        $r8 = r5.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        r6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,com.android.server.am.ActivityManagerService$GrantUri)>($r8, r1, i0, r2);

        virtualinvoke r6.<com.android.server.am.UriPermission: void grantModes(int,com.android.server.am.UriPermissionOwner)>(i1, r3);

        return;
    }

    void grantUriPermissionLocked(int, java.lang.String, com.android.server.am.ActivityManagerService$GrantUri, int, com.android.server.am.UriPermissionOwner, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService$GrantUri r2;
        com.android.server.am.UriPermissionOwner r3;
        android.content.pm.IPackageManager r4;
        java.lang.NullPointerException $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.am.ActivityManagerService$GrantUri;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.UriPermissionOwner;

        i2 := @parameter5: int;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("targetPkg");

        throw $r6;

     label1:
        r4 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label2:
        i3 = interfaceinvoke r4.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i2);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        return;

     label5:
        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(i0, r1, r2, i1, i3);

        if i4 >= 0 goto label6;

        return;

     label6:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,com.android.server.am.UriPermissionOwner)>(i4, r1, r2, i1, r3);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int, java.lang.String, android.content.Intent, int, com.android.server.am.ActivityManagerService$NeededUriGrants, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, $i5, i6;
        java.lang.String r1;
        android.content.Intent r2, r18;
        com.android.server.am.ActivityManagerService$NeededUriGrants r3, r10, $r13, $r14;
        android.net.Uri r4, r8;
        android.content.ClipData r5;
        android.content.pm.IPackageManager r6;
        com.android.server.am.ActivityManagerService$GrantUri r9, r17;
        android.content.ClipData$Item $r11, $r12;
        java.lang.NullPointerException $r15;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.ActivityManagerService$NeededUriGrants;

        i2 := @parameter5: int;

        if r1 != null goto label01;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("targetPkg");

        throw $r15;

     label01:
        if r2 != null goto label02;

        return null;

     label02:
        r4 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        r5 = virtualinvoke r2.<android.content.Intent: android.content.ClipData getClipData()>();

        if r4 != null goto label03;

        if r5 != null goto label03;

        return null;

     label03:
        i3 = virtualinvoke r2.<android.content.Intent: int getContentUserHint()>();

        if i3 != -2 goto label04;

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

     label04:
        r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        if r3 == null goto label05;

        i4 = r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: int targetUid>;

        goto label09;

     label05:
        i4 = interfaceinvoke r6.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i2);

     label06:
        goto label08;

     label07:
        $r16 := @caughtexception;

        return null;

     label08:
        if i4 >= 0 goto label09;

        return null;

     label09:
        if r4 == null goto label11;

        r17 = staticinvoke <com.android.server.am.ActivityManagerService$GrantUri: com.android.server.am.ActivityManagerService$GrantUri resolve(int,android.net.Uri)>(i3, r4);

        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(i0, r1, r17, i1, i4);

        if i4 <= 0 goto label11;

        if r3 != null goto label10;

        $r14 = new com.android.server.am.ActivityManagerService$NeededUriGrants;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$NeededUriGrants: void <init>(java.lang.String,int,int)>(r1, i4, i1);

        r3 = $r14;

     label10:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: boolean add(java.lang.Object)>(r17);

     label11:
        if r5 == null goto label17;

        i6 = 0;

     label12:
        $i5 = virtualinvoke r5.<android.content.ClipData: int getItemCount()>();

        if i6 >= $i5 goto label17;

        $r11 = virtualinvoke r5.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i6);

        r8 = virtualinvoke $r11.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if r8 == null goto label15;

        r9 = staticinvoke <com.android.server.am.ActivityManagerService$GrantUri: com.android.server.am.ActivityManagerService$GrantUri resolve(int,android.net.Uri)>(i3, r8);

        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(i0, r1, r9, i1, i4);

        if i4 <= 0 goto label14;

        if r3 != null goto label13;

        $r13 = new com.android.server.am.ActivityManagerService$NeededUriGrants;

        specialinvoke $r13.<com.android.server.am.ActivityManagerService$NeededUriGrants: void <init>(java.lang.String,int,int)>(r1, i4, i1);

        r3 = $r13;

     label13:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: boolean add(java.lang.Object)>(r9);

     label14:
        goto label16;

     label15:
        $r12 = virtualinvoke r5.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i6);

        r18 = virtualinvoke $r12.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r18 == null goto label16;

        r10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants,int)>(i0, r1, r18, i1, r3, i2);

        if r10 == null goto label16;

        r3 = r10;

     label16:
        i6 = i6 + 1;

        goto label12;

     label17:
        return r3;

        catch android.os.RemoteException from label05 to label06 with label07;
    }

    void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants, com.android.server.am.UriPermissionOwner)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$NeededUriGrants r1;
        com.android.server.am.UriPermissionOwner r2;
        int i0, $i1, $i2, $i3;
        com.android.server.am.ActivityManagerService$GrantUri r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$NeededUriGrants;

        r2 := @parameter1: com.android.server.am.UriPermissionOwner;

        if r1 == null goto label2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = virtualinvoke r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityManagerService$GrantUri) $r4;

        $i3 = r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: int targetUid>;

        $r5 = r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: java.lang.String targetPkg>;

        $i2 = r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: int flags>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,com.android.server.am.UriPermissionOwner)>($i3, $r5, r3, $i2, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    void grantUriPermissionFromIntentLocked(int, java.lang.String, android.content.Intent, com.android.server.am.UriPermissionOwner, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;
        java.lang.String r1;
        android.content.Intent r2;
        com.android.server.am.UriPermissionOwner r3;
        com.android.server.am.ActivityManagerService$NeededUriGrants r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: com.android.server.am.UriPermissionOwner;

        i1 := @parameter4: int;

        if r2 == null goto label1;

        $i2 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants,int)>(i0, r1, r2, $i2, null, i1);

        if r4 != null goto label3;

        return;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)>(r4, r3);

        return;
    }

    public void grantUriPermission(android.app.IApplicationThread, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r5;
        android.app.IApplicationThread r1;
        java.lang.String r2, $r19;
        android.net.Uri r3;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.am.ActivityManagerService$GrantUri r4, $r8;
        com.android.server.am.ProcessRecord r6;
        java.lang.Throwable r7, $r18;
        java.lang.IllegalArgumentException $r10, $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r17;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("grantUriPermission");

        $r8 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r3, 0);

        r4 = $r8;

        r5 = r0;

        entermonitor r0;

     label1:
        r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r6 != null goto label2;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when granting permission to uri ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r19);

        throw $r13;

     label2:
        if r2 != null goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null target");

        throw $r10;

     label3:
        if r4 != null goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null uri");

        throw $r11;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>(i0, 195);

        $i3 = r6.<com.android.server.am.ProcessRecord: int uid>;

        $i2 = r6.<com.android.server.am.ProcessRecord: int uid>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,com.android.server.am.UriPermissionOwner,int)>($i3, r2, r4, i0, null, $i4);

        exitmonitor r5;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r5;

     label7:
        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UriPermission r1;
        android.util.ArrayMap r2;
        int $i0, $i1, $i2;
        android.util.SparseArray $r3, $r7;
        java.lang.Object $r4;
        com.android.server.am.ActivityManagerService$GrantUri $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UriPermission;

        $i0 = r1.<com.android.server.am.UriPermission: int modeFlags>;

        if $i0 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i1 = r1.<com.android.server.am.UriPermission: int targetUid>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (android.util.ArrayMap) $r4;

        if r2 == null goto label1;

        $r5 = r1.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r5);

        $z0 = virtualinvoke r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i2 = r1.<com.android.server.am.UriPermission: int targetUid>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i2);

     label1:
        return;
    }

    private void revokeUriPermissionLocked(int, com.android.server.am.ActivityManagerService$GrantUri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, i13, i14;
        com.android.server.am.ActivityManagerService$GrantUri r1, $r19, $r20, $r26, $r31;
        android.content.pm.IPackageManager r2;
        java.lang.String r3, $r32, $r36;
        android.content.pm.ProviderInfo r4;
        android.util.ArrayMap r5, r8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.util.Iterator r6, r9;
        com.android.server.am.UriPermission r7, r10;
        android.net.Uri $r11, $r21, $r22, $r29, $r30;
        android.util.SparseArray $r12, $r13, $r15, $r18, $r23, $r28;
        java.lang.Object $r14, $r17, $r24, $r27;
        java.util.Collection $r16, $r25;
        java.lang.StringBuilder $r33, $r34, $r35;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.ActivityManagerService$GrantUri;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r11 = r1.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        r3 = virtualinvoke $r11.<android.net.Uri: java.lang.String getAuthority()>();

        $i2 = r1.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>(r3, $i2);

        if r4 != null goto label01;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission revoke: ");

        $r32 = virtualinvoke r1.<com.android.server.am.ActivityManagerService$GrantUri: java.lang.String toSafeString()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r36);

        return;

     label01:
        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,com.android.server.am.ActivityManagerService$GrantUri,int,int)>(r2, r4, r1, i0, i1);

        if $z1 != 0 goto label07;

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r24 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.util.ArrayMap) $r24;

        if r5 == null goto label06;

        z0 = 0;

        $r25 = virtualinvoke r5.<android.util.ArrayMap: java.util.Collection values()>();

        r6 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        $r27 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.am.UriPermission) $r27;

        $r26 = r7.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $i8 = $r26.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        $i7 = r1.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        if $i8 != $i7 goto label03;

        $r31 = r7.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $r29 = $r31.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r30 = r1.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $z9 = virtualinvoke $r29.<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>($r30);

        if $z9 == 0 goto label03;

        $i10 = i1 | 64;

        $z8 = virtualinvoke r7.<com.android.server.am.UriPermission: boolean revokeModes(int,boolean)>($i10, 0);

        z0 = z0 | $z8;

        $i9 = r7.<com.android.server.am.UriPermission: int modeFlags>;

        if $i9 != 0 goto label03;

        interfaceinvoke r6.<java.util.Iterator: void remove()>();

     label03:
        goto label02;

     label04:
        $z7 = virtualinvoke r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z7 == 0 goto label05;

        $r28 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r28.<android.util.SparseArray: void remove(int)>(i0);

     label05:
        if z0 == 0 goto label06;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label06:
        return;

     label07:
        z10 = 0;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i12 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        i13 = 0;

     label08:
        if i13 >= i12 goto label13;

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i14 = virtualinvoke $r13.<android.util.SparseArray: int keyAt(int)>(i13);

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r14 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i13);

        r8 = (android.util.ArrayMap) $r14;

        $r16 = virtualinvoke r8.<android.util.ArrayMap: java.util.Collection values()>();

        r9 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r17 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.server.am.UriPermission) $r17;

        $r20 = r10.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $i3 = $r20.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        $i4 = r1.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        if $i3 != $i4 goto label10;

        $r19 = r10.<com.android.server.am.UriPermission: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $r22 = $r19.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r21 = r1.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $z4 = virtualinvoke $r22.<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>($r21);

        if $z4 == 0 goto label10;

        $i5 = i1 | 64;

        $z5 = virtualinvoke r10.<com.android.server.am.UriPermission: boolean revokeModes(int,boolean)>($i5, 1);

        z10 = z10 | $z5;

        $i6 = r10.<com.android.server.am.UriPermission: int modeFlags>;

        if $i6 != 0 goto label10;

        interfaceinvoke r9.<java.util.Iterator: void remove()>();

     label10:
        goto label09;

     label11:
        $z2 = virtualinvoke r8.<android.util.ArrayMap: boolean isEmpty()>();

        if $z2 == 0 goto label12;

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r18.<android.util.SparseArray: void remove(int)>(i14);

        i12 = i12 + -1;

        i13 = i13 + -1;

     label12:
        i13 = i13 + 1;

        goto label08;

     label13:
        if z10 == 0 goto label14;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label14:
        return;
    }

    public void revokeUriPermission(android.app.IApplicationThread, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.app.IApplicationThread r1;
        android.net.Uri r2;
        int i0, i1, $i2;
        com.android.server.am.ProcessRecord r4;
        java.lang.String r6, $r12, $r14, $r23;
        android.content.pm.ProviderInfo r7;
        java.lang.Throwable r8, $r21;
        boolean $z0;
        com.android.server.am.ActivityManagerService$GrantUri $r10;
        java.lang.StringBuilder $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r22;
        java.lang.SecurityException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("revokeUriPermission");

        r3 = r0;

        entermonitor r0;

     label01:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r4 != null goto label02;

        $r16 = new java.lang.SecurityException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when revoking permission to uri ");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r23);

        throw $r16;

     label02:
        if r2 != null goto label04;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "revokeUriPermission: null uri");

        exitmonitor r3;

     label03:
        return;

     label04:
        $z0 = staticinvoke <android.content.Intent: boolean isAccessUriMode(int)>(i0);

        if $z0 != 0 goto label06;

        exitmonitor r3;

     label05:
        return;

     label06:
        staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r6 = virtualinvoke r2.<android.net.Uri: java.lang.String getAuthority()>();

        r7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>(r6, i1);

        if r7 != null goto label08;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission revoke: ");

        $r12 = virtualinvoke r2.<android.net.Uri: java.lang.String toSafeString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        exitmonitor r3;

     label07:
        return;

     label08:
        $i2 = r4.<com.android.server.am.ProcessRecord: int uid>;

        $r10 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r2, 0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void revokeUriPermissionLocked(int,com.android.server.am.ActivityManagerService$GrantUri,int)>($i2, $r10, i0);

        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r21 := @caughtexception;

        r8 = $r21;

        exitmonitor r3;

     label11:
        throw r8;

     label12:
        return;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void removeUriPermissionsForPackageLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r12, $r13;
        int i0, i1, i2, i3, $i5, $i6;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.util.ArrayMap r2;
        java.util.Iterator r3;
        com.android.server.am.UriPermission r4;
        android.util.SparseArray $r5, $r6, $r7, $r10;
        java.util.Collection $r8;
        java.lang.Object $r9, $r11;
        byte $b4;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != -1 goto label01;

        if r1 != null goto label01;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must narrow by either package or user");

        throw $r14;

     label01:
        z1 = 0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i2 = 0;

     label02:
        if i2 >= i1 goto label11;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i3 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i2);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r9 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (android.util.ArrayMap) $r9;

        if i0 == -1 goto label03;

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        if i0 != $i6 goto label10;

     label03:
        $r8 = virtualinvoke r2.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.am.UriPermission) $r11;

        if r1 == null goto label05;

        $r12 = r4.<com.android.server.am.UriPermission: java.lang.String sourcePkg>;

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 != 0 goto label05;

        $r13 = r4.<com.android.server.am.UriPermission: java.lang.String targetPkg>;

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label08;

     label05:
        if z0 == 0 goto label06;

        $b4 = -1;

        goto label07;

     label06:
        $b4 = -65;

     label07:
        $z4 = virtualinvoke r4.<com.android.server.am.UriPermission: boolean revokeModes(int,boolean)>($b4, 1);

        z1 = z1 | $z4;

        $i5 = r4.<com.android.server.am.UriPermission: int modeFlags>;

        if $i5 != 0 goto label08;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label08:
        goto label04;

     label09:
        $z3 = virtualinvoke r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z3 == 0 goto label10;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i3);

        i1 = i1 + -1;

        i2 = i2 + -1;

     label10:
        i2 = i2 + 1;

        goto label02;

     label11:
        if z1 == 0 goto label12;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label12:
        return;
    }

    public android.os.IBinder newUriPermissionOwner(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1;
        com.android.server.am.UriPermissionOwner r3, $r6;
        java.lang.Throwable r4, $r8;
        android.os.Binder $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("newUriPermissionOwner");

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = new com.android.server.am.UriPermissionOwner;

        specialinvoke $r6.<com.android.server.am.UriPermissionOwner: void <init>(com.android.server.am.ActivityManagerService,java.lang.Object)>(r0, r1);

        r3 = $r6;

        $r7 = virtualinvoke r3.<com.android.server.am.UriPermissionOwner: android.os.Binder getExternalTokenLocked()>();

        exitmonitor r2;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void grantUriPermissionFromOwner(android.os.IBinder, int, java.lang.String, android.net.Uri, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.os.IBinder r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String r2, $r17;
        android.net.Uri r3;
        com.android.server.am.UriPermissionOwner r5;
        java.lang.Throwable r6, $r16;
        com.android.server.am.ActivityManagerService$GrantUri $r8;
        java.lang.IllegalArgumentException $r9, $r10, $r13;
        java.lang.SecurityException $r11;
        java.lang.StringBuilder $r12, $r14, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.Uri;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i4, $i5, i3, 0, 2, "grantUriPermissionFromOwner", null);

        r4 = r0;

        entermonitor r0;

     label1:
        r5 = staticinvoke <com.android.server.am.UriPermissionOwner: com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)>(r1);

        if r5 != null goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown owner: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label2:
        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == $i6 goto label3;

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i8 = staticinvoke <android.os.Process: int myUid()>();

        if $i7 == $i8 goto label3;

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>("nice try");

        throw $r11;

     label3:
        if r2 != null goto label4;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null target");

        throw $r10;

     label4:
        if r3 != null goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null uri");

        throw $r9;

     label5:
        $r8 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i2, r3, 0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,com.android.server.am.UriPermissionOwner,int)>(i0, r2, $r8, i1, r5, i9);

        exitmonitor r4;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r4;

     label8:
        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void revokeUriPermissionFromOwner(android.os.IBinder, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        android.net.Uri r2;
        int i0, i1;
        com.android.server.am.UriPermissionOwner r4;
        java.lang.Throwable r5, $r12;
        com.android.server.am.ActivityManagerService$GrantUri $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = r0;

        entermonitor r0;

     label1:
        r4 = staticinvoke <com.android.server.am.UriPermissionOwner: com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)>(r1);

        if r4 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown owner: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        if r2 != null goto label3;

        virtualinvoke r4.<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked(int)>(i0);

        goto label4;

     label3:
        $r7 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r7.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r2, 0);

        virtualinvoke r4.<com.android.server.am.UriPermissionOwner: void removeUriPermissionLocked(com.android.server.am.ActivityManagerService$GrantUri,int)>($r7, i0);

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void schedulePersistUriGrants()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$MainHandler $r1, $r2, $r3;
        boolean $z0;
        android.os.Message $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z0 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$MainHandler: boolean hasMessages(int)>(38);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r4 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(38);

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>($r4, 10000L);

     label1:
        return;
    }

    private void writeGrantedUriPermissions()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3, $i5, $i6;
        android.util.ArrayMap r3;
        java.util.Iterator r4, r38;
        com.android.server.am.UriPermission r5;
        java.lang.Throwable r6, $r34;
        android.util.SparseArray $r8, $r29;
        android.util.AtomicFile $r9, $r13, $r35;
        com.android.internal.util.FastXmlSerializer $r10, r37;
        java.lang.Boolean $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r16, $r30, $r32;
        com.android.server.am.ActivityManagerService$GrantUri $r17, $r23, $r25;
        java.lang.String $r18, $r19, $r26;
        android.net.Uri $r21;
        long $l4;
        java.util.Collection $r28;
        com.android.server.am.UriPermission$Snapshot $r31, r39;
        java.io.IOException $r33;
        java.io.FileOutputStream r36;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r2 = r0;

        entermonitor r0;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i0 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label06;

        $r29 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r30 = virtualinvoke $r29.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (android.util.ArrayMap) $r30;

        $r28 = virtualinvoke r3.<android.util.ArrayMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r32 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.am.UriPermission) $r32;

        $i6 = r5.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i6 == 0 goto label04;

        $r31 = virtualinvoke r5.<com.android.server.am.UriPermission: com.android.server.am.UriPermission$Snapshot snapshot()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

     label04:
        goto label03;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r34 := @caughtexception;

        r6 = $r34;

        exitmonitor r2;

     label09:
        throw r6;

     label10:
        r36 = null;

     label11:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        r36 = virtualinvoke $r9.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r10 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r10.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r37 = $r10;

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r36, "utf-8");

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r12);

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uri-grants");

        r38 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r16 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (com.android.server.am.UriPermission$Snapshot) $r16;

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uri-grant");

        $r17 = r39.<com.android.server.am.UriPermission$Snapshot: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $i2 = $r17.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r37, "sourceUserId", $i2);

        $i3 = r39.<com.android.server.am.UriPermission$Snapshot: int targetUserId>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r37, "targetUserId", $i3);

        $r18 = r39.<com.android.server.am.UriPermission$Snapshot: java.lang.String sourcePkg>;

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sourcePkg", $r18);

        $r19 = r39.<com.android.server.am.UriPermission$Snapshot: java.lang.String targetPkg>;

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "targetPkg", $r19);

        $r23 = r39.<com.android.server.am.UriPermission$Snapshot: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $r21 = $r23.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21);

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uri", $r26);

        $r25 = r39.<com.android.server.am.UriPermission$Snapshot: com.android.server.am.ActivityManagerService$GrantUri uri>;

        $z1 = $r25.<com.android.server.am.ActivityManagerService$GrantUri: boolean prefix>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean)>(r37, "prefix", $z1);

        $i5 = r39.<com.android.server.am.UriPermission$Snapshot: int persistedModeFlags>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r37, "modeFlags", $i5);

        $l4 = r39.<com.android.server.am.UriPermission$Snapshot: long persistedCreateTime>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r37, "createdTime", $l4);

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uri-grant");

        goto label12;

     label13:
        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uri-grants");

        interfaceinvoke r37.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        virtualinvoke $r13.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r36);

     label14:
        goto label16;

     label15:
        $r33 := @caughtexception;

        if r36 == null goto label16;

        $r35 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        virtualinvoke $r35.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r36);

     label16:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.io.IOException from label11 to label14 with label15;
    }

    private void readGrantedUriPermissionsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l6;
        java.io.FileInputStream r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i1, i2, i3, i4, i5, i7, $i8;
        java.lang.String r3, r4, r5, $r11, $r12, $r13, $r20, $r21;
        android.net.Uri r6;
        boolean z0, $z1, $z2;
        android.content.pm.ProviderInfo r7;
        java.lang.Throwable r9, $r29;
        android.util.AtomicFile $r10;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        com.android.server.am.ActivityManagerService$GrantUri $r23;
        android.content.pm.IPackageManager $r24;
        org.xmlpull.v1.XmlPullParserException $r25, r33;
        android.os.RemoteException $r26;
        java.io.FileNotFoundException $r27;
        java.io.IOException $r28, r32;
        com.android.server.am.UriPermission r30;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = null;

     label01:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        r1 = virtualinvoke $r10.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label02:
        $i8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i8;

        if $i8 == 1 goto label12;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i1 != 2 goto label11;

        $r11 = "uri-grant";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label11;

        i4 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r2, "userHandle", -10000);

        if i4 == -10000 goto label03;

        i2 = i4;

        i3 = i4;

        goto label04;

     label03:
        i2 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "sourceUserId");

        i3 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "targetUserId");

     label04:
        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sourcePkg");

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "targetPkg");

        $r12 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uri");

        r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "prefix");

        i5 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "modeFlags");

        l6 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r2, "createdTime", l0);

        $r13 = virtualinvoke r6.<android.net.Uri: java.lang.String getAuthority()>();

        r7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>($r13, i2);

        if r7 == null goto label10;

        $r20 = r7.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label10;

        i7 = -1;

     label05:
        $r24 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i7 = interfaceinvoke $r24.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r5, i3);

     label06:
        goto label08;

     label07:
        $r26 := @caughtexception;

     label08:
        if i7 == -1 goto label09;

        $r23 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r23.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i2, r6, z0);

        r30 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,com.android.server.am.ActivityManagerService$GrantUri)>(r4, r5, i7, $r23);

        virtualinvoke r30.<com.android.server.am.UriPermission: void initPersistedModes(int,long)>(i5, l6);

     label09:
        goto label11;

     label10:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Persisted grant for ");

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" had source ");

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but instead found ");

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

     label11:
        goto label02;

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label21;

     label13:
        $r27 := @caughtexception;

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label21;

     label15:
        $r28 := @caughtexception;

        r32 = $r28;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed reading Uri grants", r32);

     label16:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label21;

     label17:
        $r25 := @caughtexception;

        r33 = $r25;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed reading Uri grants", r33);

     label18:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label21;

     label19:
        $r29 := @caughtexception;

        r9 = $r29;

     label20:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r9;

     label21:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.io.FileNotFoundException from label01 to label12 with label13;
        catch java.io.IOException from label01 to label12 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label12 with label17;
        catch java.lang.Throwable from label01 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public void takePersistableUriPermission(android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.net.Uri r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, z8;
        com.android.server.am.ActivityManagerService$GrantUri r3, $r8, $r9, $r10;
        com.android.server.am.UriPermission r4, r5;
        java.lang.Throwable r6, $r19;
        java.lang.StringBuilder $r11, $r13, $r14, $r16, $r18;
        java.lang.SecurityException $r12;
        java.lang.String $r15, $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("takePersistableUriPermission");

        staticinvoke <com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>(i0, 3);

        r2 = r0;

        entermonitor r0;

     label01:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        z0 = 0;

        $r8 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r1, 0);

        r3 = $r8;

        $r9 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r9.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r1, 0);

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findUriPermissionLocked(int,com.android.server.am.ActivityManagerService$GrantUri)>(i2, $r9);

        $r10 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r1, 1);

        r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findUriPermissionLocked(int,com.android.server.am.ActivityManagerService$GrantUri)>(i2, $r10);

        if r4 == null goto label02;

        $i3 = r4.<com.android.server.am.UriPermission: int persistableModeFlags>;

        $i6 = i0 & $i3;

        if $i6 != i0 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        z1 = $z7;

        if r5 == null goto label04;

        $i4 = r5.<com.android.server.am.UriPermission: int persistableModeFlags>;

        $i5 = i0 & $i4;

        if $i5 != i0 goto label04;

        $z6 = 1;

        goto label05;

     label04:
        $z6 = 0;

     label05:
        z2 = $z6;

        if z1 != 0 goto label06;

        if z2 != 0 goto label06;

        $r12 = new java.lang.SecurityException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No persistable permission grants found for UID ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and Uri ");

        $r15 = virtualinvoke r3.<com.android.server.am.ActivityManagerService$GrantUri: java.lang.String toSafeString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label06:
        if z1 == 0 goto label07;

        $z4 = virtualinvoke r4.<com.android.server.am.UriPermission: boolean takePersistableModes(int)>(i0);

        z0 = z0 | $z4;

     label07:
        if z2 == 0 goto label08;

        $z5 = virtualinvoke r5.<com.android.server.am.UriPermission: boolean takePersistableModes(int)>(i0);

        z0 = z0 | $z5;

     label08:
        $z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean maybePrunePersistedUriGrantsLocked(int)>(i2);

        z8 = z0 | $z3;

        if z8 == 0 goto label09;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label09:
        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

        r6 = $r19;

        exitmonitor r2;

     label12:
        throw r6;

     label13:
        return;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void releasePersistableUriPermission(android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.net.Uri r1;
        int i0, i1, i2;
        boolean z0, $z1, $z2;
        com.android.server.am.UriPermission r3, r4;
        java.lang.Throwable r5, $r16;
        com.android.server.am.ActivityManagerService$GrantUri $r7, $r8;
        java.lang.SecurityException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15, $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("releasePersistableUriPermission");

        staticinvoke <com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>(i0, 3);

        r2 = r0;

        entermonitor r0;

     label1:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        z0 = 0;

        $r7 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r7.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r1, 0);

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findUriPermissionLocked(int,com.android.server.am.ActivityManagerService$GrantUri)>(i2, $r7);

        $r8 = new com.android.server.am.ActivityManagerService$GrantUri;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>(i1, r1, 1);

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findUriPermissionLocked(int,com.android.server.am.ActivityManagerService$GrantUri)>(i2, $r8);

        if r3 != null goto label2;

        if r4 != null goto label2;

        $r9 = new java.lang.SecurityException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grants found for UID ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and Uri ");

        $r15 = virtualinvoke r1.<android.net.Uri: java.lang.String toSafeString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label2:
        if r3 == null goto label3;

        $z2 = virtualinvoke r3.<com.android.server.am.UriPermission: boolean releasePersistableModes(int)>(i0);

        z0 = z0 | $z2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r3);

     label3:
        if r4 == null goto label4;

        $z1 = virtualinvoke r4.<com.android.server.am.UriPermission: boolean releasePersistableModes(int)>(i0);

        z0 = z0 | $z1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r4);

     label4:
        if z0 == 0 goto label5;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private boolean maybePrunePersistedUriGrantsLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, i4, i5;
        android.util.ArrayMap r1;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        com.android.server.am.UriPermission r4, r5;
        android.util.SparseArray $r6;
        java.lang.Object $r7, $r10, $r11;
        java.util.Collection $r8;
        boolean $z0;
        com.android.server.am.UriPermission$PersistedTimeComparator $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArrayMap) $r7;

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        if $i1 >= 128 goto label2;

        return 0;

     label2:
        r2 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r8 = virtualinvoke r1.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.am.UriPermission) $r11;

        $i3 = r4.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i3 == 0 goto label4;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label4:
        goto label3;

     label5:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i4 = $i2 - 128;

        if i4 > 0 goto label6;

        return 0;

     label6:
        $r9 = new com.android.server.am.UriPermission$PersistedTimeComparator;

        specialinvoke $r9.<com.android.server.am.UriPermission$PersistedTimeComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r9);

        i5 = 0;

     label7:
        if i5 >= i4 goto label8;

        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r5 = (com.android.server.am.UriPermission) $r10;

        virtualinvoke r5.<com.android.server.am.UriPermission: boolean releasePersistableModes(int)>(-1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r5);

        i5 = i5 + 1;

        goto label7;

     label8:
        return 1;
    }

    public android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        java.lang.String r1, $r18, $r24, $r27, $r35;
        boolean z0, $z1, $z2, $z4, $z5;
        int i0, i1, $i2, $i3, $i4, i6, i7;
        android.content.pm.IPackageManager r2;
        android.util.ArrayMap r4, r42;
        java.util.Iterator r5, r7;
        com.android.server.am.UriPermission r6, r8;
        java.lang.Throwable r9, $r34;
        android.util.SparseArray $r12, $r15, $r19;
        android.content.pm.ParceledListSlice $r13;
        java.lang.Object $r14, $r17, $r21, $r23;
        java.util.Collection $r16, $r22;
        android.content.UriPermission $r20, $r26;
        java.lang.StringBuilder $r25, $r28, $r29, $r30, $r31, $r32, $r36, $r37;
        java.lang.SecurityException $r33, $r38;
        android.os.RemoteException $r39;
        java.util.ArrayList r41;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getPersistedUriPermissions");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "packageName");

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label01:
        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i1 = interfaceinvoke r2.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, $i2);

        if i1 == i0 goto label02;

        $r33 = new java.lang.SecurityException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not belong to calling UID ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.SecurityException: void <init>(java.lang.String)>($r35);

        throw $r33;

     label02:
        goto label04;

     label03:
        $r39 := @caughtexception;

        $r38 = new java.lang.SecurityException;

        specialinvoke $r38.<java.lang.SecurityException: void <init>(java.lang.String)>("Failed to verify package name ownership");

        throw $r38;

     label04:
        r41 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r3 = r0;

        entermonitor r0;

     label05:
        if z0 == 0 goto label10;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r21 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.util.ArrayMap) $r21;

        if r4 != null goto label06;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grants found for ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r27);

        goto label09;

     label06:
        $r22 = virtualinvoke r4.<android.util.ArrayMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.am.UriPermission) $r23;

        $r24 = r6.<com.android.server.am.UriPermission: java.lang.String targetPkg>;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z5 == 0 goto label08;

        $i4 = r6.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i4 == 0 goto label08;

        $r26 = virtualinvoke r6.<com.android.server.am.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>();

        virtualinvoke r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label08:
        goto label07;

     label09:
        goto label15;

     label10:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i6 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        i7 = 0;

     label11:
        if i7 >= i6 goto label15;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r14 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r42 = (android.util.ArrayMap) $r14;

        $r16 = virtualinvoke r42.<android.util.ArrayMap: java.util.Collection values()>();

        r7 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.am.UriPermission) $r17;

        $r18 = r8.<com.android.server.am.UriPermission: java.lang.String sourcePkg>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label13;

        $i3 = r8.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i3 == 0 goto label13;

        $r20 = virtualinvoke r8.<com.android.server.am.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>();

        virtualinvoke r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label13:
        goto label12;

     label14:
        i7 = i7 + 1;

        goto label11;

     label15:
        exitmonitor r3;

     label16:
        goto label19;

     label17:
        $r34 := @caughtexception;

        r9 = $r34;

        exitmonitor r3;

     label18:
        throw r9;

     label19:
        $r13 = new android.content.pm.ParceledListSlice;

        specialinvoke $r13.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r41);

        return $r13;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void showWaitingForDebugger(android.app.IApplicationThread, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IApplicationThread r1;
        boolean z0;
        com.android.server.am.ProcessRecord r3, $r8;
        android.os.Message r4;
        java.lang.Throwable r5, $r9;
        com.android.server.am.ActivityManagerService$MainHandler $r7;
        byte $b0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        z0 := @parameter1: boolean;

        r2 = r0;

        entermonitor r0;

     label01:
        if r1 == null goto label02;

        $r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        goto label03;

     label02:
        $r8 = null;

     label03:
        r3 = $r8;

        if r3 != null goto label05;

        exitmonitor r2;

     label04:
        return;

     label05:
        r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r4.<android.os.Message: int what> = 6;

        r4.<android.os.Message: java.lang.Object obj> = r3;

        if z0 == 0 goto label06;

        $b0 = 1;

        goto label07;

     label06:
        $b0 = 0;

     label07:
        r4.<android.os.Message: int arg1> = $b0;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r4);

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void getMemoryInfo(android.app.ActivityManager$MemoryInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ActivityManager$MemoryInfo r1;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10, $l11;
        com.android.server.am.ProcessList $r2, $r3, $r4, $r5, $r6;
        byte $b8;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ActivityManager$MemoryInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        l0 = virtualinvoke $r2.<com.android.server.am.ProcessList: long getMemLevel(int)>(6);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        l1 = virtualinvoke $r3.<com.android.server.am.ProcessList: long getMemLevel(int)>(9);

        $l2 = staticinvoke <android.os.Process: long getFreeMemory()>();

        r1.<android.app.ActivityManager$MemoryInfo: long availMem> = $l2;

        $l3 = staticinvoke <android.os.Process: long getTotalMemory()>();

        r1.<android.app.ActivityManager$MemoryInfo: long totalMem> = $l3;

        r1.<android.app.ActivityManager$MemoryInfo: long threshold> = l0;

        $l7 = r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        $l4 = l1 - l0;

        $l5 = $l4 / 2L;

        $l6 = l0 + $l5;

        $b8 = $l7 cmp $l6;

        if $b8 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r1.<android.app.ActivityManager$MemoryInfo: boolean lowMemory> = $z0;

        r1.<android.app.ActivityManager$MemoryInfo: long hiddenAppThreshold> = l1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l9 = virtualinvoke $r4.<com.android.server.am.ProcessList: long getMemLevel(int)>(5);

        r1.<android.app.ActivityManager$MemoryInfo: long secondaryServerThreshold> = $l9;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l10 = virtualinvoke $r5.<com.android.server.am.ProcessList: long getMemLevel(int)>(1);

        r1.<android.app.ActivityManager$MemoryInfo: long visibleAppThreshold> = $l10;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l11 = virtualinvoke $r6.<com.android.server.am.ProcessList: long getMemLevel(int)>(0);

        r1.<android.app.ActivityManager$MemoryInfo: long foregroundAppThreshold> = $l11;

        return;
    }

    public java.util.List getAppTasks(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.lang.String r1, $r15;
        int i0, i2, i3, $i4, $i5;
        long l1;
        java.util.ArrayList r3, $r11, $r12, $r14;
        com.android.server.am.TaskRecord r4;
        android.content.Intent r5;
        android.app.ActivityManager$RecentTaskInfo r6;
        com.android.server.am.ActivityManagerService$AppTaskImpl r7, $r17;
        java.lang.Throwable r8, r9, $r18, $r19;
        java.lang.Object $r13;
        android.content.ComponentName $r16;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r2 = r0;

        entermonitor r0;

     label01:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r3 = $r12;

     label02:
        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i3 = 0;

     label03:
        if i3 >= i2 goto label07;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.TaskRecord) $r13;

        $i4 = r4.<com.android.server.am.TaskRecord: int effectiveUid>;

        if $i4 == i0 goto label04;

        goto label06;

     label04:
        r5 = virtualinvoke r4.<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>();

        if r5 == null goto label06;

        $r16 = virtualinvoke r5.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r15 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label05;

        goto label06;

     label05:
        r6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RecentTaskInfo createRecentTaskInfoFromTaskRecord(com.android.server.am.TaskRecord)>(r4);

        $r17 = new com.android.server.am.ActivityManagerService$AppTaskImpl;

        $i5 = r6.<android.app.ActivityManager$RecentTaskInfo: int persistentId>;

        specialinvoke $r17.<com.android.server.am.ActivityManagerService$AppTaskImpl: void <init>(com.android.server.am.ActivityManagerService,int,int)>(r0, $i5, i0);

        r7 = $r17;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label06:
        i3 = i3 + 1;

        goto label03;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label10;

     label08:
        $r19 := @caughtexception;

        r8 = $r19;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r8;

     label10:
        exitmonitor r2;

     label11:
        return r3;

     label12:
        $r18 := @caughtexception;

        r9 = $r18;

        exitmonitor r2;

     label13:
        throw r9;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public java.util.List getTasks(int, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0, i1, i2, $i3;
        java.util.ArrayList r1, $r4;
        boolean z0;
        java.lang.Throwable r3, $r7;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = r0;

        entermonitor r0;

     label1:
        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isGetTasksAllowed(java.lang.String,int,int)>("getTasks", $i3, i2);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void getTasksLocked(int,java.util.List,int,boolean)>(i0, r1, i2, z0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    com.android.server.am.TaskRecord getMostRecentTask()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.android.server.am.TaskRecord $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.android.server.am.TaskRecord) $r2;

        return $r3;
    }

    private android.app.ActivityManager$RecentTaskInfo createRecentTaskInfoFromTaskRecord(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1;
        android.app.ActivityManager$RecentTaskInfo r2, $r3;
        com.android.server.am.ActivityRecord $r4;
        int $i0, $i1, $i2, $i4, $i6, $i7;
        android.content.Intent $r5, $r6;
        android.content.ComponentName $r7;
        java.lang.CharSequence $r8;
        com.android.server.am.ActivityStack $r9, $r12;
        android.app.ActivityManager$TaskDescription $r10, $r11;
        long $l3, $l5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void updateTaskDescription()>();

        $r3 = new android.app.ActivityManager$RecentTaskInfo;

        specialinvoke $r3.<android.app.ActivityManager$RecentTaskInfo: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r4 != null goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $i0 = r1.<com.android.server.am.TaskRecord: int taskId>;

     label2:
        r2.<android.app.ActivityManager$RecentTaskInfo: int id> = $i0;

        $i1 = r1.<com.android.server.am.TaskRecord: int taskId>;

        r2.<android.app.ActivityManager$RecentTaskInfo: int persistentId> = $i1;

        $r5 = new android.content.Intent;

        $r6 = virtualinvoke r1.<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>();

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        r2.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent> = $r5;

        $r7 = r1.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        r2.<android.app.ActivityManager$RecentTaskInfo: android.content.ComponentName origActivity> = $r7;

        $r8 = r1.<com.android.server.am.TaskRecord: java.lang.CharSequence lastDescription>;

        r2.<android.app.ActivityManager$RecentTaskInfo: java.lang.CharSequence description> = $r8;

        $r9 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r9 == null goto label3;

        $r12 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $i7 = $r12.<com.android.server.am.ActivityStack: int mStackId>;

        goto label4;

     label3:
        $i7 = -1;

     label4:
        r2.<android.app.ActivityManager$RecentTaskInfo: int stackId> = $i7;

        $i2 = r1.<com.android.server.am.TaskRecord: int userId>;

        r2.<android.app.ActivityManager$RecentTaskInfo: int userId> = $i2;

        $r10 = new android.app.ActivityManager$TaskDescription;

        $r11 = r1.<com.android.server.am.TaskRecord: android.app.ActivityManager$TaskDescription lastTaskDescription>;

        specialinvoke $r10.<android.app.ActivityManager$TaskDescription: void <init>(android.app.ActivityManager$TaskDescription)>($r11);

        r2.<android.app.ActivityManager$RecentTaskInfo: android.app.ActivityManager$TaskDescription taskDescription> = $r10;

        $l3 = r1.<com.android.server.am.TaskRecord: long firstActiveTime>;

        r2.<android.app.ActivityManager$RecentTaskInfo: long firstActiveTime> = $l3;

        $l5 = r1.<com.android.server.am.TaskRecord: long lastActiveTime>;

        r2.<android.app.ActivityManager$RecentTaskInfo: long lastActiveTime> = $l5;

        $i4 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskId>;

        r2.<android.app.ActivityManager$RecentTaskInfo: int affiliatedTaskId> = $i4;

        $i6 = r1.<com.android.server.am.TaskRecord: int mAffiliatedTaskColor>;

        r2.<android.app.ActivityManager$RecentTaskInfo: int affiliatedTaskColor> = $i6;

        return r2;
    }

    private boolean isGetTasksAllowed(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r8, $r15;
        int i0, i1, $i2, $i4;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;
        android.content.pm.IPackageManager $r9;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.REAL_GET_TASKS", i0, i1);

        if $i2 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label6;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.GET_TASKS", i0, i1);

        if $i4 != 0 goto label6;

     label3:
        $r9 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $z1 = interfaceinvoke $r9.<android.content.pm.IPackageManager: boolean isUidPrivileged(int)>(i1);

        if $z1 == 0 goto label4;

        z0 = 1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": caller ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is using old GET_TASKS but privileged; allowing");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        if z0 != 0 goto label7;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": caller ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not hold GET_TASKS; limiting output");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

     label7:
        return z0;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getRecentTasks(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        boolean z0, z1, z2, z3, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.ArrayList r2, $r8, $r9, $r12;
        java.util.Set r3;
        com.android.server.am.TaskRecord r4;
        android.app.ActivityManager$RecentTaskInfo r5;
        java.lang.Throwable r6, $r23;
        java.lang.Integer $r10, $r14;
        java.util.HashSet $r11;
        java.lang.Object $r13;
        android.os.Bundle $r16;
        android.content.Intent $r17, $r21, $r22;
        com.android.server.am.ActivityStack $r18, $r19;
        com.android.server.am.ActivityRecord $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i18 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i6, i3, i2, 0, 2, "getRecentTasks", null);

        $i8 = i1 & 4;

        if $i8 == 0 goto label01;

        $z11 = 1;

        goto label02;

     label01:
        $z11 = 0;

     label02:
        z0 = $z11;

        $i7 = i1 & 1;

        if $i7 == 0 goto label03;

        $z12 = 1;

        goto label04;

     label03:
        $z12 = 0;

     label04:
        z1 = $z12;

        r1 = r0;

        entermonitor r0;

     label05:
        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        z2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isGetTasksAllowed(java.lang.String,int,int)>("getRecentTasks", $i9, i3);

        $i10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.GET_DETAILED_TASKS");

        if $i10 != 0 goto label06;

        $z13 = 1;

        goto label07;

     label06:
        $z13 = 0;

     label07:
        z3 = $z13;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r9 = new java.util.ArrayList;

        if i0 >= i4 goto label08;

        $i15 = i0;

        goto label09;

     label08:
        $i15 = i4;

     label09:
        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i15);

        r2 = $r9;

        if z0 == 0 goto label10;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.Set getProfileIdsLocked(int)>(i18);

        goto label11;

     label10:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r3 = $r11;

     label11:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r10);

        i5 = 0;

     label12:
        if i5 >= i4 goto label21;

        if i0 <= 0 goto label21;

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (com.android.server.am.TaskRecord) $r13;

        $i12 = r4.<com.android.server.am.TaskRecord: int userId>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z5 != 0 goto label13;

        goto label20;

     label13:
        if i5 == 0 goto label14;

        if z1 != 0 goto label14;

        $r22 = r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r22 == null goto label14;

        $r21 = r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $i17 = virtualinvoke $r21.<android.content.Intent: int getFlags()>();

        $i16 = $i17 & 8388608;

        if $i16 != 0 goto label20;

     label14:
        if z2 != 0 goto label15;

        $z10 = virtualinvoke r4.<com.android.server.am.TaskRecord: boolean isHomeTask()>();

        if $z10 != 0 goto label15;

        $i14 = r4.<com.android.server.am.TaskRecord: int effectiveUid>;

        if $i14 == i3 goto label15;

        goto label20;

     label15:
        $i11 = i1 & 8;

        if $i11 == 0 goto label16;

        $r19 = r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r19 == null goto label16;

        $r18 = r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z9 = virtualinvoke $r18.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z9 == 0 goto label16;

        goto label20;

     label16:
        $z7 = r4.<com.android.server.am.TaskRecord: boolean autoRemoveRecents>;

        if $z7 == 0 goto label17;

        $r20 = virtualinvoke r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r20 != null goto label17;

        goto label20;

     label17:
        $i13 = i1 & 2;

        if $i13 == 0 goto label18;

        $z8 = r4.<com.android.server.am.TaskRecord: boolean isAvailable>;

        if $z8 != 0 goto label18;

        goto label20;

     label18:
        r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RecentTaskInfo createRecentTaskInfoFromTaskRecord(com.android.server.am.TaskRecord)>(r4);

        if z3 != 0 goto label19;

        $r17 = r5.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent>;

        $r16 = (android.os.Bundle) null;

        virtualinvoke $r17.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>($r16);

     label19:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        i0 = i0 + -1;

     label20:
        i5 = i5 + 1;

        goto label12;

     label21:
        exitmonitor r1;

     label22:
        return r2;

     label23:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r1;

     label24:
        throw r6;

        catch java.lang.Throwable from label05 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private com.android.server.am.TaskRecord recentTaskForIdLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.TaskRecord) $r4;

        $i3 = r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i3 != i0 goto label2;

        return r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0;
        com.android.server.am.TaskRecord r2;
        java.lang.Throwable r3, $r6;
        android.app.ActivityManager$TaskThumbnail $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 = r0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.READ_FRAME_BUFFER", "getTaskThumbnail()");

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

        if r2 == null goto label3;

        $r5 = virtualinvoke r2.<com.android.server.am.TaskRecord: android.app.ActivityManager$TaskThumbnail getTaskThumbnailLocked()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int addAppTask(android.os.IBinder, android.content.Intent, android.app.ActivityManager$TaskDescription, android.graphics.Bitmap) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r5;
        android.os.IBinder r1;
        android.content.Intent r2, $r25;
        android.app.ActivityManager$TaskDescription r3;
        android.graphics.Bitmap r4;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27;
        long l1;
        com.android.server.am.ActivityRecord r6;
        android.content.ComponentName r7, $r29;
        android.content.pm.ActivityInfo r8, $r41;
        com.android.server.am.TaskRecord r9, r10, $r28, $r33;
        byte b3;
        java.lang.Throwable r11, r12, $r57, $r58;
        java.lang.IllegalArgumentException $r14, $r51, $r53;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r38, $r39, $r45, $r46, $r48, $r49, $r50, $r55, $r56, $r59, $r61, $r62;
        java.lang.String $r23, $r47, $r52, $r60;
        android.graphics.Rect $r26;
        com.android.server.am.ActivityStackSupervisor $r27;
        boolean $z0;
        java.util.ArrayList $r30, $r31, $r35;
        com.android.server.am.ActivityStack $r32;
        android.content.pm.IPackageManager $r34;
        java.lang.Object $r36;
        com.android.server.am.TaskPersister $r37;
        android.content.pm.ApplicationInfo $r40, $r42;
        java.lang.SecurityException $r43;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.app.ActivityManager$TaskDescription;

        r4 := @parameter3: android.graphics.Bitmap;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r5 = r0;

        entermonitor r0;

     label02:
        r6 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r6 != null goto label03;

        $r51 = new java.lang.IllegalArgumentException;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity does not exist; token=");

        $r59 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r60);

        throw $r51;

     label03:
        r7 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r7 != null goto label04;

        $r53 = new java.lang.IllegalArgumentException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent ");

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must specify explicit component");

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r52);

        throw $r53;

     label04:
        $i4 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $i5 = r0.<com.android.server.am.ActivityManagerService: int mThumbnailWidth>;

        if $i4 != $i5 goto label05;

        $i10 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        $i11 = r0.<com.android.server.am.ActivityManagerService: int mThumbnailHeight>;

        if $i10 == $i11 goto label06;

     label05:
        $r14 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad thumbnail size: got ");

        $i6 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i7 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", require ");

        $i8 = r0.<com.android.server.am.ActivityManagerService: int mThumbnailWidth>;

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i9 = r0.<com.android.server.am.ActivityManagerService: int mThumbnailHeight>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r14;

     label06:
        $r25 = virtualinvoke r2.<android.content.Intent: android.content.Intent getSelector()>();

        if $r25 == null goto label07;

        virtualinvoke r2.<android.content.Intent: void setSelector(android.content.Intent)>(null);

     label07:
        $r26 = virtualinvoke r2.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r26 == null goto label08;

        virtualinvoke r2.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>(null);

     label08:
        $i14 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i15 = $i14 & 524288;

        if $i15 == 0 goto label09;

        $i25 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i24 = $i25 & 8192;

        if $i24 != 0 goto label10;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(8192);

        goto label10;

     label09:
        $i12 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i13 = $i12 & 268435456;

        if $i13 == 0 goto label10;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label10:
        $r29 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mLastAddedTaskComponent>;

        $z0 = virtualinvoke r7.<android.content.ComponentName: boolean equals(java.lang.Object)>($r29);

        if $z0 == 0 goto label11;

        $i23 = r0.<com.android.server.am.ActivityManagerService: int mLastAddedTaskUid>;

        if i0 == $i23 goto label12;

     label11:
        r0.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo mLastAddedTaskActivity> = null;

     label12:
        r8 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo mLastAddedTaskActivity>;

        if r8 != null goto label13;

        $r34 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i19 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r41 = interfaceinvoke $r34.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r7, 0, $i19);

        r0.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo mLastAddedTaskActivity> = $r41;

        r8 = $r41;

        $r42 = r8.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i22 = $r42.<android.content.pm.ApplicationInfo: int uid>;

        if $i22 == i0 goto label13;

        $r43 = new java.lang.SecurityException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t add task for another application: target uid=");

        $r40 = r8.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i21 = $r40.<android.content.pm.ApplicationInfo: int uid>;

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", calling uid=");

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.SecurityException: void <init>(java.lang.String)>($r47);

        throw $r43;

     label13:
        $r28 = new com.android.server.am.TaskRecord;

        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i16 = virtualinvoke $r27.<com.android.server.am.ActivityStackSupervisor: int getNextTaskId()>();

        specialinvoke $r28.<com.android.server.am.TaskRecord: void <init>(com.android.server.am.ActivityManagerService,int,android.content.pm.ActivityInfo,android.content.Intent,android.app.ActivityManager$TaskDescription)>(r0, $i16, r8, r2, r3);

        r9 = $r28;

        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int trimRecentsForTask(com.android.server.am.TaskRecord,boolean)>(r9, 0);

        if i2 < 0 goto label15;

        b3 = -1;

        exitmonitor r5;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return b3;

     label15:
        $r30 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i26 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        $i18 = staticinvoke <android.app.ActivityManager: int getMaxRecentTasksStatic()>();

        $i17 = $i18 - 1;

        if i26 < $i17 goto label16;

        $r35 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i20 = i26 - 1;

        $r36 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object remove(int)>($i20);

        r10 = (com.android.server.am.TaskRecord) $r36;

        $r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r10.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r37);

     label16:
        r9.<com.android.server.am.TaskRecord: boolean inRecents> = 1;

        $r31 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        $r33 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r32 = $r33.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r32.<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,boolean,boolean)>(r9, 0, 0);

        virtualinvoke r9.<com.android.server.am.TaskRecord: boolean setLastThumbnail(android.graphics.Bitmap)>(r4);

        virtualinvoke r9.<com.android.server.am.TaskRecord: void freeLastThumbnail()>();

        i27 = r9.<com.android.server.am.TaskRecord: int taskId>;

        exitmonitor r5;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return i27;

     label18:
        $r58 := @caughtexception;

        r12 = $r58;

        exitmonitor r5;

     label19:
        throw r12;

     label20:
        $r57 := @caughtexception;

        r11 = $r57;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r11;

        catch java.lang.Throwable from label02 to label14 with label18;
        catch java.lang.Throwable from label15 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label01 to label14 with label20;
        catch java.lang.Throwable from label15 to label17 with label20;
        catch java.lang.Throwable from label18 to label21 with label20;
    }

    public android.graphics.Point getAppTaskThumbnailSize()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r5;
        android.graphics.Point $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = new android.graphics.Point;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mThumbnailWidth>;

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mThumbnailHeight>;

        specialinvoke $r4.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setTaskDescription(android.os.IBinder, android.app.ActivityManager$TaskDescription)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        android.app.ActivityManager$TaskDescription r2;
        com.android.server.am.ActivityRecord r4;
        java.lang.Throwable r5, $r8;
        com.android.server.am.TaskRecord $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.app.ActivityManager$TaskDescription;

        r3 = r0;

        entermonitor r0;

     label1:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r4 == null goto label2;

        virtualinvoke r4.<com.android.server.am.ActivityRecord: void setTaskDescription(android.app.ActivityManager$TaskDescription)>(r2);

        $r7 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r7.<com.android.server.am.TaskRecord: void updateTaskDescription()>();

     label2:
        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        com.android.server.am.TaskPersister $r7;
        android.graphics.Bitmap $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.os.FileUtils: boolean isValidExtFilename(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("_activity_icon_");

        if $z1 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad filename: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        $r8 = virtualinvoke $r7.<com.android.server.am.TaskPersister: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>(r1);

        return $r8;
    }

    private void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11;
        boolean z0, $z3, $z4;
        android.content.Intent r2, $r11, $r12, $r13;
        android.content.ComponentName r3;
        java.lang.String r4, $r24;
        java.util.ArrayList r5, $r9, $r15;
        android.util.ArrayMap r6, $r22;
        android.util.SparseArray r7;
        com.android.server.am.ProcessRecord r8, $r17, r26;
        com.android.server.am.TaskPersister $r10;
        com.android.server.am.ActiveServices $r14;
        com.android.internal.app.ProcessMap $r16;
        java.lang.Object $r18, $r19, $r20;
        java.lang.StringBuilder $r21, $r23, $r25;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        i0 := @parameter1: int;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r10);

        $i3 = i0 & 1;

        if $i3 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        $r11 = new android.content.Intent;

        $r13 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r13 == null goto label03;

        $r12 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        goto label04;

     label03:
        $r12 = r1.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

     label04:
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Intent)>($r12);

        r2 = $r11;

        r3 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label05;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Now component for base intent of task: ");

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        return;

     label05:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r14.<com.android.server.am.ActiveServices: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent)>(r1, r3, r2);

        if z0 == 0 goto label17;

        r4 = virtualinvoke r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r5 = $r15;

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        r6 = virtualinvoke $r16.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i1 = 0;

     label06:
        $i5 = virtualinvoke r6.<android.util.ArrayMap: int size()>();

        if i1 >= $i5 goto label12;

        $r19 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r7 = (android.util.SparseArray) $r19;

        i2 = 0;

     label07:
        $i9 = virtualinvoke r7.<android.util.SparseArray: int size()>();

        if i2 >= $i9 goto label11;

        $r20 = virtualinvoke r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r8 = (com.android.server.am.ProcessRecord) $r20;

        $i8 = r8.<com.android.server.am.ProcessRecord: int userId>;

        $i7 = r1.<com.android.server.am.TaskRecord: int userId>;

        if $i8 == $i7 goto label08;

        goto label10;

     label08:
        $r22 = r8.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z3 = virtualinvoke $r22.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z3 != 0 goto label09;

        goto label10;

     label09:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        i1 = i1 + 1;

        goto label06;

     label12:
        i11 = 0;

     label13:
        $i4 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i11 >= $i4 goto label17;

        $r18 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r26 = (com.android.server.am.ProcessRecord) $r18;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r26 != $r17 goto label14;

        goto label16;

     label14:
        $i6 = r26.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i6 != 0 goto label15;

        virtualinvoke r26.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("remove task", 1);

        goto label16;

     label15:
        r26.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = "remove task";

     label16:
        i11 = i11 + 1;

        goto label13;

     label17:
        return;
    }

    private boolean removeTaskByIdLocked(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        com.android.server.am.TaskRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void removeTaskActivitiesLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,int)>(r1, i1);

        $z0 = r1.<com.android.server.am.TaskRecord: boolean isPersistable>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>(null, 1);

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean removeTask(int, int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, i1;
        long l2;
        boolean z0;
        java.lang.Throwable r2, r3, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REMOVE_TASKS", "removeTask()");

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeTaskByIdLocked(int,int)>(i0, i1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label7:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label8:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public void moveTaskToFront(int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0, i1;
        android.os.Bundle r1;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskToFront()");

        r2 = r0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void moveTaskToFrontLocked(int,int,android.os.Bundle)>(i0, i1, r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void moveTaskToFrontLocked(int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i4;
        android.os.Bundle r1;
        long l2;
        com.android.server.am.TaskRecord r2;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r10;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityStackSupervisor $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,int,int,java.lang.String)>($i3, $i4, -1, -1, "Task to front");

        if $z0 != 0 goto label01;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r1);

        return;

     label01:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>(i0);

        if r2 != null goto label04;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label04:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z1 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>(r2);

        if $z1 == 0 goto label06;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "moveTaskToFront: Attempt to violate Lock Task Mode");

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label06:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r3 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord topRunningActivityLocked()>();

        if r3 == null goto label07;

        $z2 = virtualinvoke r3.<com.android.server.am.ActivityRecord: boolean isRecentsActivity()>();

        if $z2 == 0 goto label07;

        virtualinvoke r2.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(2);

     label07:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor: void findTaskToMoveToFrontLocked(com.android.server.am.TaskRecord,int,android.os.Bundle)>(r2, i1, r1);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label11;

     label09:
        $r10 := @caughtexception;

        r4 = $r10;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label11:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r1);

        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void moveTaskToBack(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, $i2, $i3;
        com.android.server.am.TaskRecord r2, $r8, $r11;
        com.android.server.am.ActivityStack r3;
        long l1;
        java.lang.Throwable r4, r5, $r13, $r14;
        com.android.server.am.ActivityStackSupervisor $r7, $r12;
        com.android.server.am.ActivityRecord $r9, $r10;
        boolean $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskToBack()");

        r1 = r0;

        entermonitor r0;

     label01:
        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

        if r2 == null goto label10;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r8 = $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if r2 != $r8 goto label03;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>();

        exitmonitor r1;

     label02:
        return;

     label03:
        r3 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r9 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r9 == null goto label05;

        $r10 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r11 = $r10.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r11 != r2 goto label05;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,int,int,java.lang.String)>($i2, $i3, -1, -1, "Task to back");

        if $z1 != 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        virtualinvoke r3.<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>(i0, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label10;

     label08:
        $r14 := @caughtexception;

        r4 = $r14;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r1;

     label13:
        throw r5;

     label14:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public boolean moveActivityTaskToBack(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        boolean z0, z1, $z2, z3;
        long l0;
        int i1, $i2;
        java.lang.Throwable r3, r4, $r12, $r13;
        com.android.server.am.ActivityStackSupervisor $r6, $r9, $r11;
        com.android.server.am.TaskRecord $r7, $r10;
        com.android.server.am.ActivityStack $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("moveActivityTaskToBack");

        r2 = r0;

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        if z0 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        i1 = staticinvoke <com.android.server.am.ActivityRecord: int getTaskForActivityLocked(android.os.IBinder,boolean)>(r1, $z2);

        if i1 < 0 goto label10;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r7 = $r6.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r7 == null goto label07;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r10 = $r9.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        $i2 = $r10.<com.android.server.am.TaskRecord: int taskId>;

        if $i2 != i1 goto label07;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>();

        z1 = 0;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label06:
        return z1;

     label07:
        $r8 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        z3 = virtualinvoke $r8.<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>(i1, null);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label09:
        return z3;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label13;

     label11:
        $r12 := @caughtexception;

        r3 = $r12;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label13:
        exitmonitor r2;

     label14:
        goto label17;

     label15:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label16:
        throw r4;

     label17:
        return 0;

        catch java.lang.Throwable from label02 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label06 with label15;
        catch java.lang.Throwable from label07 to label09 with label15;
        catch java.lang.Throwable from label10 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void moveTaskBackwards(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, $i2, $i3;
        long l1;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskBackwards()");

        r1 = r0;

        entermonitor r0;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,int,int,java.lang.String)>($i2, $i3, -1, -1, "Task backwards");

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void moveTaskBackwardsLocked(int)>(i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void moveTaskBackwardsLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "moveTaskBackwards not yet implemented!");

        return;
    }

    public android.os.IBinder getHomeActivityToken() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityStackSupervisor $r4;
        android.os.IBinder $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "getHomeActivityToken()");

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: android.os.IBinder getHomeActivityToken()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.app.IActivityContainer createActivityContainer(android.os.IBinder, android.app.IActivityContainerCallback) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        android.app.IActivityContainerCallback r2;
        com.android.server.am.ActivityRecord r4;
        java.lang.Throwable r5, $r11;
        com.android.server.am.ActivityStackSupervisor $r7;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r8;
        java.lang.IllegalArgumentException $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.app.IActivityContainerCallback;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "createActivityContainer()");

        r3 = r0;

        entermonitor r0;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parent token must not be null");

        throw $r10;

     label2:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r4 != null goto label4;

        exitmonitor r3;

     label3:
        return null;

     label4:
        if r2 != null goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r9;

     label5:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityContainer createActivityContainer(com.android.server.am.ActivityRecord,android.app.IActivityContainerCallback)>(r4, r2);

        exitmonitor r3;

     label6:
        return $r8;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r3;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void deleteActivityContainer(android.app.IActivityContainer) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IActivityContainer r1;
        java.lang.Throwable r3, $r6;
        com.android.server.am.ActivityStackSupervisor $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IActivityContainer;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "deleteActivityContainer()");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: void deleteActivityContainer(android.app.IActivityContainer)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.app.IActivityContainer getEnclosingActivityContainer(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityStack r3;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label3;

        $r6 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        exitmonitor r2;

     label2:
        return $r6;

     label3:
        exitmonitor r2;

     label4:
        return null;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void moveTaskToStack(int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, i1;
        boolean z0;
        long l2;
        java.lang.Throwable r2, r3, $r12, $r13, $r14;
        com.android.server.am.ActivityStackSupervisor $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.RuntimeException $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "moveTaskToStack()");

        if i1 != 0 goto label01;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToStack: Attempt to move task ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to home stack");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r12 = virtualinvoke $r10.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r11, $r12);

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: void moveTaskToStack(int,int,boolean)>(i0, i1, z0);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label07;

     label05:
        $r14 := @caughtexception;

        r2 = $r14;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void resizeStack(int, android.graphics.Rect)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.graphics.Rect r1;
        long l1;
        java.lang.Throwable r2, $r4;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "resizeStackBox()");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void resizeStack(int,android.graphics.Rect)>(i0, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getAllStackInfos()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        long l0;
        java.util.ArrayList r2;
        java.lang.Throwable r3, r4, $r7, $r8;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "getAllStackInfos()");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getAllStackInfosLocked()>();

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r2;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    public android.app.ActivityManager$StackInfo getStackInfo(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0;
        long l1;
        android.app.ActivityManager$StackInfo r2;
        java.lang.Throwable r3, r4, $r7, $r8;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "getStackInfo()");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: android.app.ActivityManager$StackInfo getStackInfoLocked(int)>(i0);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r2;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        $r8 := @caughtexception;

        r4 = $r8;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    public boolean isInHomeStack(int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0;
        long l1;
        com.android.server.am.TaskRecord r2;
        boolean z0, $z1, $z2;
        java.lang.Throwable r3, r4, $r8, $r9;
        com.android.server.am.ActivityStack $r6, $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "getStackInfo()");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

        if r2 == null goto label3;

        $r6 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r6 == null goto label3;

        $r7 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z1 = virtualinvoke $r7.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        exitmonitor r1;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        $r9 := @caughtexception;

        r4 = $r9;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label1 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public int getTaskForActivity(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        boolean z0;
        java.lang.Throwable r3, $r5;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0;

        entermonitor r0;

     label1:
        $i0 = staticinvoke <com.android.server.am.ActivityRecord: int getTaskForActivityLocked(android.os.IBinder,boolean)>(r1, z0);

        exitmonitor r2;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean isLockTaskAuthorized(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.app.admin.DevicePolicyManager r2;
        int i0, $i1, $i2;
        android.content.Context $r3, $r5;
        java.lang.Object $r4;
        android.content.pm.PackageManager $r6;
        android.os.UserHandle $r7;
        boolean $z0, $z1;
        android.content.pm.PackageManager$NameNotFoundException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("device_policy");

        r2 = (android.app.admin.DevicePolicyManager) $r4;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        $i1 = virtualinvoke $r7.<android.os.UserHandle: int getIdentifier()>();

        i0 = virtualinvoke $r6.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r1, $i1);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 != $i2 goto label2;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r8 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label3 with label4;
    }

    void startLockTaskMode(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService r0, r3, r5;
        com.android.server.am.TaskRecord r1, $r17, r23, r24;
        java.lang.String r2;
        java.lang.Throwable r4, r6, r7, $r20, $r21, $r22;
        android.content.Intent $r9;
        android.content.ComponentName $r10;
        int $i0, $i1;
        com.android.server.am.ActivityStackSupervisor $r12, $r13;
        com.android.server.am.ActivityRecord $r14, $r15;
        boolean $z0, $z1, $z2, z4;
        java.lang.IllegalArgumentException $r16;
        com.android.server.am.ActivityManagerService$MainHandler $r18;
        com.android.server.am.ActivityManagerService$10 $r19;
        long l2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r3 = r0;

        entermonitor r0;

     label01:
        $r9 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        r2 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getPackageName()>();

        exitmonitor r3;

     label02:
        goto label05;

     label03:
        $r20 := @caughtexception;

        r4 = $r20;

        exitmonitor r3;

     label04:
        throw r4;

     label05:
        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z4 = $z2;

        if z4 != 0 goto label08;

        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isLockTaskAuthorized(java.lang.String)>(r2);

        if $z1 != 0 goto label08;

        r23 = r1;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r19 = new com.android.server.am.ActivityManagerService$10;

        specialinvoke $r19.<com.android.server.am.ActivityManagerService$10: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.TaskRecord)>(r0, r23);

        virtualinvoke $r18.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r19);

        return;

     label08:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        r5 = r0;

        entermonitor r0;

     label10:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i1 = r1.<com.android.server.am.TaskRecord: int taskId>;

        r24 = virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>($i1);

        if r24 == null goto label15;

        if z4 != 0 goto label12;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if $r14 == null goto label11;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        $r17 = $r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r24 == $r17 goto label12;

     label11:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid task, not in foreground");

        throw $r16;

     label12:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        if z4 != 0 goto label13;

        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: void setLockTaskModeLocked(com.android.server.am.TaskRecord,boolean)>(r24, $z0);

     label15:
        exitmonitor r5;

     label16:
        goto label19;

     label17:
        $r21 := @caughtexception;

        r6 = $r21;

        exitmonitor r5;

     label18:
        throw r6;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label22;

     label20:
        $r22 := @caughtexception;

        r7 = $r22;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r7;

     label22:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label10 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label09 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void startLockTaskMode(int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0;
        com.android.server.am.TaskRecord r1;
        long l1;
        java.lang.Throwable r3, r4, $r7, $r8;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r1 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>(i0);

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label09;

     label07:
        $r8 := @caughtexception;

        r4 = $r8;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label09:
        if r1 == null goto label10;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startLockTaskMode(com.android.server.am.TaskRecord)>(r1);

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void startLockTaskMode(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        com.android.server.am.TaskRecord r2;
        long l0;
        com.android.server.am.ActivityRecord r4;
        java.lang.Throwable r5, r6, $r8, $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r4 != null goto label04;

        exitmonitor r3;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label04:
        r2 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        exitmonitor r3;

     label05:
        goto label08;

     label06:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r3;

     label07:
        throw r5;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label11;

     label09:
        $r9 := @caughtexception;

        r6 = $r9;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r6;

     label11:
        if r2 == null goto label12;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startLockTaskMode(com.android.server.am.TaskRecord)>(r2);

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void startLockTaskModeOnCurrent() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityStackSupervisor $r4;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityRecord r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "startLockTaskModeOnCurrent");

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r7 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord topRunningActivityLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        $r5 = r7.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startLockTaskMode(com.android.server.am.TaskRecord)>($r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void stopLockTaskMode()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0, i1, $i3;
        java.lang.String r1, $r17, $r23;
        java.lang.Throwable r3, r4, $r19, $r25;
        com.android.server.am.ActivityStackSupervisor $r6, $r7;
        com.android.server.am.TaskRecord $r8;
        android.content.Intent $r9;
        android.content.ComponentName $r10;
        android.content.pm.PackageManager $r11;
        android.content.Context $r12;
        android.os.UserHandle $r13;
        java.lang.SecurityException $r14;
        java.lang.StringBuilder $r15, $r16, $r18, $r20, $r22, $r24;
        android.content.pm.PackageManager$NameNotFoundException $r21, r26;
        long l5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label04;

     label01:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r8 = $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        $r9 = $r8.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        r1 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r12.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r13 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        $i3 = virtualinvoke $r13.<android.os.UserHandle: int getIdentifier()>();

        i1 = virtualinvoke $r11.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r1, $i3);

        if i1 == i0 goto label02;

        $r14 = new java.lang.SecurityException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid uid, expected ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r26 = $r21;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopLockTaskMode ");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r23);

        return;

     label04:
        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", "stopLockTaskMode");

        r2 = r0;

        entermonitor r0;

     label06:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void setLockTaskModeLocked(com.android.server.am.TaskRecord,boolean)>(null, 0);

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r3 = $r19;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        goto label13;

     label11:
        $r25 := @caughtexception;

        r4 = $r25;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw r4;

     label13:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void stopLockTaskModeOnCurrent() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "stopLockTaskModeOnCurrent");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void stopLockTaskMode()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isInLockTaskMode()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r5;
        com.android.server.am.ActivityStackSupervisor $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z0 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean isInLockTaskMode()>();

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.util.List r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.content.pm.ProviderInfo r4;
        boolean z0, $z1, $z3;
        android.content.ComponentName r5, $r15;
        com.android.server.am.ContentProviderRecord r6, $r32;
        android.content.pm.IPackageManager $r7;
        java.lang.String $r8, $r12, $r13, $r16, $r17, $r20, $r24, $r26, $r27, $r29;
        android.util.ArrayMap $r9, $r10, $r19;
        java.lang.Object $r11;
        android.content.pm.ApplicationInfo $r14, $r21, $r22, $r28, $r30;
        com.android.server.am.ProviderMap $r18, $r31;
        com.android.server.am.ProcessStatsService $r25;
        android.os.RemoteException $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = null;

     label01:
        $r7 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r8 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        r2 = interfaceinvoke $r7.<android.content.pm.IPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>($r8, $i2, 3072);

     label02:
        goto label04;

     label03:
        $r33 := @caughtexception;

     label04:
        i9 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if r2 == null goto label11;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i3 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        $i4 = i0 + $i3;

        virtualinvoke $r10.<android.util.ArrayMap: void ensureCapacity(int)>($i4);

        i1 = 0;

     label05:
        if i1 >= i0 goto label11;

        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.content.pm.ProviderInfo) $r11;

        $r13 = r4.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r14 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i5 = r4.<android.content.pm.ProviderInfo: int flags>;

        z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r13, $r14, $r12, $i5);

        if z0 == 0 goto label06;

        $i8 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i8);

        if $i7 == 0 goto label06;

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(i1);

        i0 = i0 + -1;

        i1 = i1 + -1;

        goto label10;

     label06:
        $r15 = new android.content.ComponentName;

        $r16 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r17 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r15.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r17);

        r5 = $r15;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r6 = virtualinvoke $r18.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r5, i9);

        if r6 != null goto label07;

        $r32 = new com.android.server.am.ContentProviderRecord;

        $r30 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        specialinvoke $r32.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>(r0, r4, $r30, r5, z0);

        r6 = $r32;

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r31.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r5, r6);

     label07:
        $r19 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r20 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r6);

        $z1 = r4.<android.content.pm.ProviderInfo: boolean multiprocess>;

        if $z1 == 0 goto label08;

        $r27 = "android";

        $r26 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z3 != 0 goto label09;

     label08:
        $r21 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r22 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r22.<android.content.pm.ApplicationInfo: int versionCode>;

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>($r24, $i6, $r25);

     label09:
        $r28 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r29 = $r28.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r29);

     label10:
        i1 = i1 + 1;

        goto label05;

     label11:
        return r2;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    private final java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo, com.android.server.am.ProcessRecord, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ProviderInfo r1;
        com.android.server.am.ProcessRecord r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.pm.PathPermission r3;
        java.lang.String r4, r5, $r7, $r9, $r13, $r23, $r24, $r27, $r44, $r47, r49;
        android.content.pm.ApplicationInfo $r6, $r8, $r39, $r41, $r42;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r43, $r45, $r46;
        java.lang.Object $r28, $r40;
        android.content.pm.PathPermission[] r48;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if r2 == null goto label01;

        $i5 = r2.<com.android.server.am.ProcessRecord: int pid>;

        goto label02;

     label01:
        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label02:
        i1 = $i5;

        if r2 == null goto label03;

        $i6 = r2.<com.android.server.am.ProcessRecord: int uid>;

        goto label04;

     label03:
        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label04:
        i2 = $i6;

        z1 = 0;

        if z0 == 0 goto label07;

        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int unsafeConvertIncomingUser(int)>(i0);

        $i17 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        if i3 == $i17 goto label06;

        $z8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAuthorityGrants(int,android.content.pm.ProviderInfo,int,boolean)>(i2, r1, i3, z0);

        if $z8 == 0 goto label05;

        return null;

     label05:
        z1 = 1;

     label06:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkContentProviderPermissionLocked ");

        $r44 = r1.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i1, i2, i0, 0, 0, $r47, null);

        if i0 == i3 goto label07;

        z1 = 0;

     label07:
        $r7 = r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $r6 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r7, i1, i2, $i7, $z2);

        if $i8 != 0 goto label08;

        return null;

     label08:
        $r9 = r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $r8 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $z3 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r9, i1, i2, $i9, $z3);

        if $i10 != 0 goto label09;

        return null;

     label09:
        r48 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if r48 == null goto label13;

        i4 = lengthof r48;

     label10:
        if i4 <= 0 goto label13;

        i4 = i4 + -1;

        r3 = r48[i4];

        r4 = virtualinvoke r3.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        if r4 == null goto label11;

        $r41 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r41.<android.content.pm.ApplicationInfo: int uid>;

        $z6 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i14 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r4, i1, i2, $i13, $z6);

        if $i14 != 0 goto label11;

        return null;

     label11:
        r5 = virtualinvoke r3.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        if r5 == null goto label12;

        $r42 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r42.<android.content.pm.ApplicationInfo: int uid>;

        $z7 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i16 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r5, i1, i2, $i15, $z7);

        if $i16 != 0 goto label12;

        return null;

     label12:
        goto label10;

     label13:
        if z1 != 0 goto label14;

        $z5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAuthorityGrants(int,android.content.pm.ProviderInfo,int,boolean)>(i2, r1, i0, z0);

        if $z5 == 0 goto label14;

        return null;

     label14:
        $z4 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        if $z4 != 0 goto label17;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: opening provider ");

        $r27 = r1.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r33 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        if r2 == null goto label15;

        $r40 = r2;

        goto label16;

     label15:
        $r40 = "(null)";

     label16:
        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") that is not exported from uid ");

        $r39 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r39.<android.content.pm.ApplicationInfo: int uid>;

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        r49 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label20;

     label17:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: opening provider ");

        $r13 = r1.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        if r2 == null goto label18;

        $r28 = r2;

        goto label19;

     label18:
        $r28 = "(null)";

     label19:
        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires ");

        $r23 = r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r24 = r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        r49 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r49);

        return r49;
    }

    boolean checkAuthorityGrants(int, android.content.pm.ProviderInfo, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        android.content.pm.ProviderInfo r1;
        boolean z0, $z1;
        android.util.ArrayMap r2;
        com.android.server.am.ActivityManagerService$GrantUri r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r6;
        android.net.Uri $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.pm.ProviderInfo;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r5;

        if r2 == null goto label4;

        $i3 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label4;

        $r6 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r3 = (com.android.server.am.ActivityManagerService$GrantUri) $r6;

        $i4 = r3.<com.android.server.am.ActivityManagerService$GrantUri: int sourceUserId>;

        if $i4 == i1 goto label2;

        if z0 != 0 goto label3;

     label2:
        $r7 = r3.<com.android.server.am.ActivityManagerService$GrantUri: android.net.Uri uri>;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean matchesProvider(android.net.Uri,android.content.pm.ProviderInfo)>($r7, r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        return 0;
    }

    boolean matchesProvider(android.net.Uri, android.content.pm.ProviderInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        android.content.pm.ProviderInfo r2;
        java.lang.String r3, r4, $r6;
        java.lang.String[] r5;
        int i0, i1, $i2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r4 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $i2 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(59);

        if $i2 != -1 goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z1;

     label1:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i0 = lengthof r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r6 = r5[i1];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord, android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ContentProviderRecord r2, $r11;
        android.os.IBinder r3;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.am.ContentProviderConnection r4, $r6, r12;
        java.util.ArrayList $r5, $r7, $r8, $r9;
        java.lang.Object $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        r3 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        if r1 == null goto label8;

        i0 = 0;

     label1:
        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label5;

        $r9 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ContentProviderConnection) $r10;

        $r11 = r4.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        if $r11 != r2 goto label4;

        if z0 == 0 goto label2;

        $i5 = r4.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i8 = $i5 + 1;

        r4.<com.android.server.am.ContentProviderConnection: int stableCount> = $i8;

        $i7 = r4.<com.android.server.am.ContentProviderConnection: int numStableIncs>;

        $i9 = $i7 + 1;

        r4.<com.android.server.am.ContentProviderConnection: int numStableIncs> = $i9;

        goto label3;

     label2:
        $i2 = r4.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i4 = $i2 + 1;

        r4.<com.android.server.am.ContentProviderConnection: int unstableCount> = $i4;

        $i3 = r4.<com.android.server.am.ContentProviderConnection: int numUnstableIncs>;

        $i6 = $i3 + 1;

        r4.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = $i6;

     label3:
        return r4;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        $r6 = new com.android.server.am.ContentProviderConnection;

        specialinvoke $r6.<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord)>(r2, r1);

        r12 = $r6;

        if z0 == 0 goto label6;

        r12.<com.android.server.am.ContentProviderConnection: int stableCount> = 1;

        r12.<com.android.server.am.ContentProviderConnection: int numStableIncs> = 1;

        goto label7;

     label6:
        r12.<com.android.server.am.ContentProviderConnection: int unstableCount> = 1;

        r12.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = 1;

     label7:
        $r7 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r8 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        return r12;

     label8:
        virtualinvoke r2.<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder)>(r3);

        return null;
    }

    boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection, com.android.server.am.ContentProviderRecord, android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ContentProviderConnection r1;
        com.android.server.am.ContentProviderRecord r2, r7;
        android.os.IBinder r3;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r4, $r6;
        com.android.server.am.ProcessRecord $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ContentProviderConnection;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        r3 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        if r1 == null goto label4;

        r7 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        if z0 == 0 goto label1;

        $i4 = r1.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i5 = $i4 - 1;

        r1.<com.android.server.am.ContentProviderConnection: int stableCount> = $i5;

        goto label2;

     label1:
        $i0 = r1.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i1 = $i0 - 1;

        r1.<com.android.server.am.ContentProviderConnection: int unstableCount> = $i1;

     label2:
        $i2 = r1.<com.android.server.am.ContentProviderConnection: int stableCount>;

        if $i2 != 0 goto label3;

        $i3 = r1.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        if $i3 != 0 goto label3;

        $r4 = r7.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r5 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return 1;

     label3:
        return 0;

     label4:
        virtualinvoke r2.<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>(r3);

        return 0;
    }

    private void checkTime(long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, $l2, $l4;
        java.lang.String r1, $r7;
        byte $b3;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = l1 - l0;

        $b3 = $l2 cmp 1000L;

        if $b3 <= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slow operation: ");

        $l4 = l1 - l0;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms so far, now at ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

     label1:
        return;
    }

    private final android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread, java.lang.String, android.os.IBinder, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0, r7;
        android.app.IApplicationThread r1, $r88, $r91;
        java.lang.String r2, r9, $r26, $r37, $r39, $r46, $r47, $r49, $r51, $r55, $r58, $r62, $r63, $r66, $r69, $r74, $r78, $r85, $r87, $r96, $r101, $r103, $r104, $r106, $r114, $r125, $r128, $r130, $r132, $r139, $r152, $r155, r165;
        android.os.IBinder r3;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, z20;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i23;
        com.android.server.am.ContentProviderRecord r4, $r98, r169;
        com.android.server.am.ContentProviderConnection r5;
        android.content.pm.ProviderInfo r6;
        long l1, l21, l22, l24;
        com.android.server.am.ProcessRecord r8, $r22, $r116, $r117, $r121, $r122, $r136, r168;
        android.content.ComponentName r10, $r56, $r64, $r129;
        android.app.IActivityManager$ContentProviderHolder r11, $r24, $r83;
        android.content.pm.ApplicationInfo r12, $r25, $r28, $r35, $r38, $r40, $r44, $r45, $r48, $r59, $r65, $r67, $r70, $r71, $r75, $r86, $r95, $r108, $r118, $r131, $r133, $r158, r166;
        java.lang.Throwable r13, r14, r15, r16, r18, $r137, $r138, $r148, $r161, $r164;
        com.android.server.am.ProviderMap $r19, $r50, $r60, $r61, $r135;
        android.content.IContentProvider $r21;
        java.lang.StringBuilder $r23, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r72, $r73, $r76, $r77, $r79, $r80, $r81, $r82, $r93, $r94, $r97, $r99, $r100, $r102, $r105, $r107, $r109, $r110, $r111, $r112, $r113, $r115, $r123, $r124, $r126, $r127, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r153, $r154, $r156, $r157, $r159;
        java.lang.Object[] $r36;
        java.lang.Integer $r41, $r43;
        android.content.pm.IPackageManager $r42, $r57, $r84;
        java.util.ArrayList $r52, $r68, $r90;
        java.lang.Object $r53, $r92;
        android.util.SparseArray $r54;
        android.util.ArrayMap $r89;
        java.lang.IllegalArgumentException $r119, $r160, r167;
        java.lang.SecurityException $r120, $r134, $r147;
        android.os.RemoteException $r149, $r150, $r151, $r163;
        java.lang.InterruptedException $r162;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r5 = null;

        r6 = null;

        r7 = r0;

        entermonitor r0;

     label01:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r8 = null;

        if r1 == null goto label02;

        r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r8 != null goto label02;

        $r147 = new java.lang.SecurityException;

        $r146 = new java.lang.StringBuilder;

        specialinvoke $r146.<java.lang.StringBuilder: void <init>()>();

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i19 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r142 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r141 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when getting content provider ");

        $r140 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r139 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r147.<java.lang.SecurityException: void <init>(java.lang.String)>($r139);

        throw $r147;

     label02:
        z1 = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: getProviderByName");

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r4 = virtualinvoke $r19.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r2, i0);

        if r4 != null goto label04;

        if i0 == 0 goto label04;

        $r135 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r4 = virtualinvoke $r135.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r2, 0);

        if r4 == null goto label04;

        r6 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r130 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r133 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r132 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i17 = r6.<android.content.pm.ProviderInfo: int flags>;

        $z15 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r130, $r133, $r132, $i17);

        if $z15 == 0 goto label03;

        $i20 = r8.<com.android.server.am.ProcessRecord: int uid>;

        $r131 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i16 = $r131.<android.content.pm.ApplicationInfo: int uid>;

        $z18 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>($i20, $i16);

        if $z18 == 0 goto label03;

        i0 = 0;

        z1 = 0;

        goto label04;

     label03:
        r4 = null;

        r6 = null;

     label04:
        if r4 == null goto label05;

        $z16 = 1;

        goto label06;

     label05:
        $z16 = 0;

     label06:
        z2 = $z16;

        if z2 == 0 goto label14;

        r6 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before checkContentProviderPermission");

        $r114 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int,boolean)>(r6, r8, i0, z1);

        r9 = $r114;

        if $r114 == null goto label07;

        $r134 = new java.lang.SecurityException;

        specialinvoke $r134.<java.lang.SecurityException: void <init>(java.lang.String)>(r9);

        throw $r134;

     label07:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after checkContentProviderPermission");

        if r8 == null goto label09;

        $z17 = virtualinvoke r4.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>(r8);

        if $z17 == 0 goto label09;

        r11 = virtualinvoke r4.<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(null);

        r11.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider> = null;

        exitmonitor r7;

     label08:
        return r11;

     label09:
        l21 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: incProviderCountLocked");

        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r8, r4, r3, z0);

        if r5 == null goto label10;

        $i13 = r5.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i14 = r5.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i15 = $i13 + $i14;

        if $i15 != 1 goto label10;

        $r121 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r121 == null goto label10;

        $i18 = r8.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i18 > 2 goto label10;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before updateLruProcess");

        $r136 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r136, 0, null);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after updateLruProcess");

     label10:
        $r116 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r116 == null goto label13;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before updateOomAdj");

        $r117 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        z4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r117);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after updateOomAdj");

        if z4 != 0 goto label13;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existing provider ");

        $r129 = r4.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r128 = virtualinvoke $r129.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r124 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        $r123 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is crashing; detaching ");

        $r126 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r125);

        z3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r5, r4, r3, z0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before appDied");

        $r122 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord)>($r122);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after appDied");

        if z3 != 0 goto label12;

        exitmonitor r7;

     label11:
        return null;

     label12:
        z2 = 0;

        r5 = null;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

     label14:
        if z2 != 0 goto label64;

     label15:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before resolveContentProvider");

        $r42 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r6 = interfaceinvoke $r42.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r2, 3072, i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after resolveContentProvider");

     label16:
        goto label18;

     label17:
        $r149 := @caughtexception;

     label18:
        if r6 != null goto label20;

        exitmonitor r7;

     label19:
        return null;

     label20:
        $r49 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r48 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r47 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i6 = r6.<android.content.pm.ProviderInfo: int flags>;

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r49, $r48, $r47, $i6);

        if $z6 == 0 goto label21;

        $i12 = r8.<com.android.server.am.ProcessRecord: int uid>;

        $r118 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r118.<android.content.pm.ApplicationInfo: int uid>;

        $z13 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>($i12, $i11);

        if $z13 == 0 goto label21;

        $z14 = 1;

        goto label22;

     label21:
        $z14 = 0;

     label22:
        z19 = $z14;

        if z19 == 0 goto label23;

        i0 = 0;

     label23:
        $r44 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r45 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r44, i0);

        r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo> = $r45;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: got app info for user");

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before checkContentProviderPermission");

        if z19 != 0 goto label24;

        $z12 = 1;

        goto label25;

     label24:
        $z12 = 0;

     label25:
        $r46 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int,boolean)>(r6, r8, i0, $z12);

        r165 = $r46;

        if $r46 == null goto label26;

        $r120 = new java.lang.SecurityException;

        specialinvoke $r120.<java.lang.SecurityException: void <init>(java.lang.String)>(r165);

        throw $r120;

     label26:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after checkContentProviderPermission");

        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z5 != 0 goto label27;

        $z11 = r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate>;

        if $z11 != 0 goto label27;

        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate>;

        if $z10 != 0 goto label27;

        $r106 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $z9 = virtualinvoke $r106.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z9 != 0 goto label27;

        $r119 = new java.lang.IllegalArgumentException;

        specialinvoke $r119.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to launch content provider before system ready");

        throw $r119;

     label27:
        $r54 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r53 = virtualinvoke $r54.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r53 != null goto label29;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r95 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r96 = $r95.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r109 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r108 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r108.<android.content.pm.ApplicationInfo: int uid>;

        $r107 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r113 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r105 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r104);

        exitmonitor r7;

     label28:
        return null;

     label29:
        $r56 = new android.content.ComponentName;

        $r51 = r6.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r55 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r56.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r51, $r55);

        r10 = $r56;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before getProviderByClass");

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r4 = virtualinvoke $r50.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r10, i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after getProviderByClass");

        if r4 != null goto label30;

        $z8 = 1;

        goto label31;

     label30:
        $z8 = 0;

     label31:
        z20 = $z8;

        if z20 == 0 goto label41;

        l22 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label32:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before getApplicationInfo");

        $r84 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r86 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r85 = $r86.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r12 = interfaceinvoke $r84.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r85, 1024, i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after getApplicationInfo");

        if r12 != null goto label35;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package info for content provider ");

        $r101 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r103);

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l22);

        exitmonitor r7;

     label34:
        return null;

     label35:
        r166 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>(r12, i0);

        $r98 = new com.android.server.am.ContentProviderRecord;

        specialinvoke $r98.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>(r0, r6, r166, r10, z19);

        r4 = $r98;

     label36:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l22);

        goto label41;

     label37:
        $r150 := @caughtexception;

     label38:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l22);

        goto label41;

     label39:
        $r161 := @caughtexception;

        r13 = $r161;

     label40:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l22);

        throw r13;

     label41:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: now have ContentProviderRecord");

        if r8 == null goto label43;

        $z7 = virtualinvoke r4.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>(r8);

        if $z7 == 0 goto label43;

        $r83 = virtualinvoke r4.<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(null);

        exitmonitor r7;

     label42:
        return $r83;

     label43:
        $r52 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i23 = virtualinvoke $r52.<java.util.ArrayList: int size()>();

        i2 = 0;

     label44:
        if i2 >= i23 goto label46;

        $r90 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r92 = virtualinvoke $r90.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r92 != r4 goto label45;

        goto label46;

     label45:
        i2 = i2 + 1;

        goto label44;

     label46:
        if i2 < i23 goto label62;

        l24 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label47:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before set stopped state");

        $r57 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r59 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r58 = $r59.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r57.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r58, 0, i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after set stopped state");

     label48:
        goto label51;

     label49:
        $r163 := @caughtexception;

        goto label51;

     label50:
        $r160 := @caughtexception;

        r167 = $r160;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r157 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r158 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r155 = $r158.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r156 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155);

        $r153 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r167);

        $r152 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r152);

     label51:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: looking for process record");

        $r66 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r67 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r67.<android.content.pm.ApplicationInfo: int uid>;

        r168 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r66, $i8, 0);

        if r168 == null goto label55;

        $r88 = r168.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r88 == null goto label55;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: scheduling install");

        $r89 = r168.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r87 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r89.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r87, r4);

     label52:
        $r91 = r168.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r91.<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>(r6);

     label53:
        goto label58;

     label54:
        $r151 := @caughtexception;

        goto label58;

     label55:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: before start process");

        $r69 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r70 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r64 = new android.content.ComponentName;

        $r65 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r63 = $r65.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r62 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r64.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r63, $r62);

        r168 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>($r69, $r70, 0, 0, "content provider", $r64, 0, 0, 0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: after start process");

        if r168 != null goto label58;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r75 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r74 = $r75.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r73 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r71 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r71.<android.content.pm.ApplicationInfo: int uid>;

        $r82 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r78);

     label56:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l24);

        exitmonitor r7;

     label57:
        return null;

     label58:
        r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = r168;

        $r68 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r68.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label59:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l24);

        goto label62;

     label60:
        $r164 := @caughtexception;

        r14 = $r164;

     label61:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l24);

        throw r14;

     label62:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: updating data structures");

        if z20 == 0 goto label63;

        $r61 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r61.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r10, r4);

     label63:
        $r60 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r60.<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>(r2, r4);

        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r8, r4, r3, z0);

        if r5 == null goto label64;

        r5.<com.android.server.am.ContentProviderConnection: boolean waiting> = 1;

     label64:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l1, "getContentProviderImpl: done!");

        exitmonitor r7;

     label65:
        goto label68;

     label66:
        $r138 := @caughtexception;

        r16 = $r138;

        exitmonitor r7;

     label67:
        throw r16;

     label68:
        r169 = r4;

        entermonitor r4;

     label69:
        $r21 = r4.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r21 != null goto label80;

        $r22 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r22 != null goto label71;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r25 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = $r25.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r28 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": launching app became null");

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r37);

        $r36 = newarray (java.lang.Object)[4];

        $r35 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r35.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i5);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r36[0] = $r41;

        $r40 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r39 = $r40.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r36[1] = $r39;

        $r38 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r38.<android.content.pm.ApplicationInfo: int uid>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r36[2] = $r43;

        $r36[3] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30036, $r36);

        exitmonitor r169;

     label70:
        return null;

     label71:
        if r5 == null goto label72;

        r5.<com.android.server.am.ContentProviderConnection: boolean waiting> = 1;

     label72:
        virtualinvoke r4.<java.lang.Object: void wait()>();

     label73:
        if r5 == null goto label79;

        r5.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

        goto label79;

     label74:
        $r162 := @caughtexception;

     label75:
        if r5 == null goto label79;

        r5.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

        goto label79;

     label76:
        $r148 := @caughtexception;

        r15 = $r148;

     label77:
        if r5 == null goto label78;

        r5.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label78:
        throw r15;

     label79:
        goto label69;

     label80:
        exitmonitor r169;

     label81:
        goto label84;

     label82:
        $r137 := @caughtexception;

        r18 = $r137;

        exitmonitor r169;

     label83:
        throw r18;

     label84:
        if r4 == null goto label85;

        $r24 = virtualinvoke r4.<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(r5);

        goto label86;

     label85:
        $r24 = null;

     label86:
        return $r24;

        catch android.os.RemoteException from label15 to label16 with label17;
        catch android.os.RemoteException from label32 to label33 with label37;
        catch android.os.RemoteException from label35 to label36 with label37;
        catch java.lang.Throwable from label32 to label33 with label39;
        catch java.lang.Throwable from label35 to label36 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch android.os.RemoteException from label47 to label48 with label49;
        catch java.lang.IllegalArgumentException from label47 to label48 with label50;
        catch android.os.RemoteException from label52 to label53 with label54;
        catch java.lang.Throwable from label47 to label56 with label60;
        catch java.lang.Throwable from label58 to label59 with label60;
        catch java.lang.Throwable from label60 to label61 with label60;
        catch java.lang.Throwable from label01 to label08 with label66;
        catch java.lang.Throwable from label09 to label11 with label66;
        catch java.lang.Throwable from label12 to label19 with label66;
        catch java.lang.Throwable from label20 to label28 with label66;
        catch java.lang.Throwable from label29 to label34 with label66;
        catch java.lang.Throwable from label35 to label42 with label66;
        catch java.lang.Throwable from label43 to label57 with label66;
        catch java.lang.Throwable from label58 to label65 with label66;
        catch java.lang.Throwable from label66 to label67 with label66;
        catch java.lang.InterruptedException from label71 to label73 with label74;
        catch java.lang.Throwable from label71 to label73 with label76;
        catch java.lang.Throwable from label74 to label75 with label76;
        catch java.lang.Throwable from label76 to label77 with label76;
        catch java.lang.Throwable from label69 to label70 with label82;
        catch java.lang.Throwable from label71 to label81 with label82;
        catch java.lang.Throwable from label82 to label83 with label82;
    }

    public final android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread, java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r3;
        int i0;
        boolean z0;
        android.app.IActivityManager$ContentProviderHolder $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getContentProvider");

        if r1 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null IApplicationThread when getting content provider ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r8;

     label1:
        $r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,boolean,int)>(r1, r2, null, z0, i0);

        return $r4;
    }

    public android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String, int, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, i3;
        android.os.IBinder r2;
        android.app.IActivityManager$ContentProviderHolder $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY", "Do not have permission in call getContentProviderExternal()");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i1, $i2, i0, 0, 2, "getContentProvider", null);

        $r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, r2, i3);

        return $r3;
    }

    private android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        int i0;
        android.app.IActivityManager$ContentProviderHolder $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,boolean,int)>(null, r1, r2, 1, i0);

        return $r3;
    }

    public void removeContentProvider(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        boolean z0, $z1;
        long l0;
        com.android.server.am.ContentProviderConnection r3;
        java.lang.String r5;
        java.lang.Throwable r6, r7, $r10, $r17;
        java.lang.NullPointerException $r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r15;
        java.lang.ClassCastException $r12;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("removeContentProvider");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        r3 = (com.android.server.am.ContentProviderConnection) r1;

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeContentProvider: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r5);

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r5);

        throw $r16;

     label05:
        if r3 != null goto label06;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r9;

     label06:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r3, null, null, z0);

        if $z1 == 0 goto label07;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

        exitmonitor r2;

     label10:
        throw r6;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label14;

     label12:
        $r17 := @caughtexception;

        r7 = $r17;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r7;

     label14:
        return;

        catch java.lang.ClassCastException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void removeContentProviderExternal(java.lang.String, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        int i0;
        long l1;
        java.lang.Throwable r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY", "Do not have permission in call removeContentProviderExternal()");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, r2, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void removeContentProviderExternalUnchecked(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        java.lang.String r1, $r13, $r15, $r19, $r28;
        android.os.IBinder r2;
        int i0;
        com.android.server.am.ContentProviderRecord r4, r6;
        android.content.ComponentName r5, $r10;
        java.lang.Throwable r7, $r27;
        com.android.server.am.ProviderMap $r9, $r14;
        android.content.pm.ProviderInfo $r11, $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 = r0;

        entermonitor r0;

     label01:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r4 = virtualinvoke $r9.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r1, i0);

        if r4 != null goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r10 = new android.content.ComponentName;

        $r11 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r15 = $r11.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r12 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r13 = $r12.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r15, $r13);

        r5 = $r10;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r6 = virtualinvoke $r14.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r5, i0);

        $z0 = virtualinvoke r6.<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>();

        if $z0 == 0 goto label05;

        $z1 = virtualinvoke r6.<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>(r2);

        if $z1 == 0 goto label04;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        goto label06;

     label04:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attmpt to remove content provider ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no external reference for token: ");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r28);

        goto label06;

     label05:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attmpt to remove content provider: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no external references.");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r19);

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r27 := @caughtexception;

        r7 = $r27;

        exitmonitor r3;

     label09:
        throw r7;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public final void publishContentProviders(android.app.IApplicationThread, java.util.List)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.app.IApplicationThread r1;
        java.util.List r2;
        com.android.server.am.ProcessRecord r4;
        long l0;
        int i1, i2, i3, i4, $i5, $i6, i7;
        android.app.IActivityManager$ContentProviderHolder r5;
        com.android.server.am.ContentProviderRecord r6, r9;
        android.content.ComponentName r7, $r21;
        java.lang.String[] r8;
        java.lang.Throwable r10, r11, $r44, $r45;
        java.lang.Object $r13, $r18, $r32;
        android.content.IContentProvider $r14, $r29;
        android.content.pm.ProviderInfo $r15, $r17, $r20, $r24, $r26;
        java.lang.String $r16, $r22, $r25, $r27, $r34, $r46;
        android.util.ArrayMap $r19;
        com.android.server.am.ProviderMap $r23, $r33;
        java.util.ArrayList $r30, $r31, $r36;
        java.lang.StringBuilder $r37, $r38, $r39, $r41, $r42, $r43;
        java.lang.SecurityException $r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.util.List;

        if r2 != null goto label01;

        return;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("publishContentProviders");

        r3 = r0;

        entermonitor r0;

     label02:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r4 != null goto label03;

        $r40 = new java.lang.SecurityException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when publishing content providers");

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.SecurityException: void <init>(java.lang.String)>($r46);

        throw $r40;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = 0;

     label04:
        if i2 >= i1 goto label17;

        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (android.app.IActivityManager$ContentProviderHolder) $r13;

        if r5 == null goto label16;

        $r15 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        if $r15 == null goto label16;

        $r14 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        if $r14 != null goto label05;

        goto label16;

     label05:
        $r19 = r4.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r17 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r16 = $r17.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r18 = virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r16);

        r6 = (com.android.server.am.ContentProviderRecord) $r18;

        if r6 == null goto label16;

        $r21 = new android.content.ComponentName;

        $r20 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r22 = $r20.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r24 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r25 = $r24.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r21.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r22, $r25);

        r7 = $r21;

        $r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r23.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r7, r6);

        $r26 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r27 = $r26.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r8 = virtualinvoke $r27.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i3 = 0;

     label06:
        $i5 = lengthof r8;

        if i3 >= $i5 goto label07;

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r34 = r8[i3];

        virtualinvoke $r33.<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>($r34, r6);

        i3 = i3 + 1;

        goto label06;

     label07:
        $r30 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i7 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        i4 = 0;

     label08:
        if i4 >= i7 goto label10;

        $r31 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r32 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        if $r32 != r6 goto label09;

        $r36 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r36.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        i4 = i4 + -1;

        i7 = i7 + -1;

     label09:
        i4 = i4 + 1;

        goto label08;

     label10:
        r9 = r6;

        entermonitor r6;

     label11:
        $r29 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r6.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider> = $r29;

        r6.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc> = r4;

        virtualinvoke r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label12:
        goto label15;

     label13:
        $r44 := @caughtexception;

        r11 = $r44;

        exitmonitor r9;

     label14:
        throw r11;

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>(r4);

     label16:
        i2 = i2 + 1;

        goto label04;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r3;

     label18:
        goto label21;

     label19:
        $r45 := @caughtexception;

        r10 = $r45;

        exitmonitor r3;

     label20:
        throw r10;

     label21:
        return;

        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label02 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public boolean refContentProvider(android.os.IBinder, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r32;
        android.os.IBinder r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11;
        com.android.server.am.ContentProviderConnection r2;
        java.lang.String r4, $r12, $r18, $r23;
        java.lang.Throwable r5, $r31;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r7, $r15, $r19;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r20, $r21, $r22, $r24, $r25, $r28, $r29;
        java.lang.NullPointerException $r26;
        java.lang.ClassCastException $r27;
        java.lang.IllegalArgumentException $r30;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label01:
        r2 = (com.android.server.am.ContentProviderConnection) r1;

     label02:
        goto label04;

     label03:
        $r27 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refContentProvider: ");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r4 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r4);

        $r30 = new java.lang.IllegalArgumentException;

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r4);

        throw $r30;

     label04:
        if r2 != null goto label05;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r26;

     label05:
        r32 = r0;

        entermonitor r0;

     label06:
        if i0 <= 0 goto label07;

        $i7 = r2.<com.android.server.am.ContentProviderConnection: int numStableIncs>;

        $i8 = $i7 + i0;

        r2.<com.android.server.am.ContentProviderConnection: int numStableIncs> = $i8;

     label07:
        $i2 = r2.<com.android.server.am.ContentProviderConnection: int stableCount>;

        i10 = $i2 + i0;

        if i10 >= 0 goto label08;

        $r19 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stableCount < 0: ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label08:
        if i1 <= 0 goto label09;

        $i5 = r2.<com.android.server.am.ContentProviderConnection: int numUnstableIncs>;

        $i6 = $i5 + i1;

        r2.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = $i6;

     label09:
        $i3 = r2.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        i11 = $i3 + i1;

        if i11 >= 0 goto label10;

        $r15 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unstableCount < 0: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label10:
        $i4 = i10 + i11;

        if $i4 > 0 goto label11;

        $r7 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ref counts can\'t go to zero here: stable=");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unstable=");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label11:
        r2.<com.android.server.am.ContentProviderConnection: int stableCount> = i10;

        r2.<com.android.server.am.ContentProviderConnection: int unstableCount> = i11;

        $z0 = r2.<com.android.server.am.ContentProviderConnection: boolean dead>;

        if $z0 != 0 goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        exitmonitor r32;

     label14:
        return $z1;

     label15:
        $r31 := @caughtexception;

        r5 = $r31;

        exitmonitor r32;

     label16:
        throw r5;

        catch java.lang.ClassCastException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void unstableProviderDied(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r44, r46, r47;
        android.os.IBinder r1, $r11;
        com.android.server.am.ContentProviderConnection r2;
        java.lang.String r4, $r20, $r24, $r33;
        java.lang.Throwable r5, r6, r7, r8, $r34, $r35, $r42, $r43;
        com.android.server.am.ContentProviderRecord $r10, $r14, $r15;
        boolean $z0;
        android.content.IContentProvider $r13, r45;
        java.lang.StringBuilder $r16, $r18, $r19, $r21, $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r31, $r36, $r37, $r38, $r41;
        android.app.IApplicationThread $r17;
        int $i0, $i2;
        java.lang.NullPointerException $r32;
        java.lang.ClassCastException $r39;
        java.lang.IllegalArgumentException $r40;
        com.android.server.am.ProcessRecord r48;
        long l5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

     label01:
        r2 = (com.android.server.am.ContentProviderConnection) r1;

     label02:
        goto label04;

     label03:
        $r39 := @caughtexception;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refContentProvider: ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r4 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r4);

        $r40 = new java.lang.IllegalArgumentException;

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r4);

        throw $r40;

     label04:
        if r2 != null goto label05;

        $r32 = new java.lang.NullPointerException;

        specialinvoke $r32.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r32;

     label05:
        r44 = r0;

        entermonitor r0;

     label06:
        $r10 = r2.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r45 = $r10.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        exitmonitor r44;

     label07:
        goto label10;

     label08:
        $r42 := @caughtexception;

        r5 = $r42;

        exitmonitor r44;

     label09:
        throw r5;

     label10:
        if r45 != null goto label11;

        return;

     label11:
        $r11 = interfaceinvoke r45.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $z0 = interfaceinvoke $r11.<android.os.IBinder: boolean pingBinder()>();

        if $z0 == 0 goto label16;

        r46 = r0;

        entermonitor r0;

     label12:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unstableProviderDied: caller ");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" says ");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" died, but we don\'t agree");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        exitmonitor r46;

     label13:
        return;

     label14:
        $r34 := @caughtexception;

        r6 = $r34;

        exitmonitor r46;

     label15:
        throw r6;

     label16:
        r47 = r0;

        entermonitor r0;

     label17:
        $r14 = r2.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r13 = $r14.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r13 == r45 goto label19;

        exitmonitor r47;

     label18:
        return;

     label19:
        $r15 = r2.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r48 = $r15.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if r48 == null goto label20;

        $r17 = r48.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r17 != null goto label22;

     label20:
        exitmonitor r47;

     label21:
        return;

     label22:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r20 = r48.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i0 = r48.<com.android.server.am.ProcessRecord: int pid>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") early provider death");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label23:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord)>(r48);

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        goto label27;

     label25:
        $r43 := @caughtexception;

        r7 = $r43;

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw r7;

     label27:
        exitmonitor r47;

     label28:
        goto label31;

     label29:
        $r35 := @caughtexception;

        r8 = $r35;

        exitmonitor r47;

     label30:
        throw r8;

     label31:
        return;

        catch java.lang.ClassCastException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label19 to label21 with label29;
        catch java.lang.Throwable from label22 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    public void appNotRespondingViaProvider(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ContentProviderConnection r2;
        com.android.server.am.ProcessRecord r3;
        long l0;
        java.lang.Throwable r4, $r6;
        com.android.server.am.ContentProviderRecord $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REMOVE_TASKS", "appNotRespondingViaProvider()");

        r2 = (com.android.server.am.ContentProviderConnection) r1;

        if r2 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "ContentProviderConnection is null");

        return;

     label1:
        $r5 = r2.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r3 = $r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if r3 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Failed to find hosting ProcessRecord");

        return;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r3, null, null, 0, "ContentProvider not responding");

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void installSystemProviders()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.util.List r1;
        com.android.server.am.ProcessRecord r3;
        int i0, $i1, $i2, $i3;
        android.content.pm.ProviderInfo r4;
        java.lang.Throwable r5, $r20;
        com.android.internal.app.ProcessMap $r7;
        java.lang.Object $r8, $r11;
        com.android.server.am.CoreSettingsObserver $r9;
        android.app.ActivityThread $r10;
        android.content.pm.ApplicationInfo $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r18;
        java.lang.String $r16, $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r2 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r8 = virtualinvoke $r7.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>("system", 1000);

        r3 = (com.android.server.am.ProcessRecord) $r8;

        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>(r3);

        if r1 == null goto label4;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i0 = $i1 - 1;

     label2:
        if i0 < 0 goto label4;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (android.content.pm.ProviderInfo) $r11;

        $r12 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r12.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 != 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not installing system proc provider ");

        $r16 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not system .apk");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        if r1 == null goto label9;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r10.<android.app.ActivityThread: void installSystemProviders(java.util.List)>(r1);

     label9:
        $r9 = new com.android.server.am.CoreSettingsObserver;

        specialinvoke $r9.<com.android.server.am.CoreSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver> = $r9;

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.lang.String getProviderMimeType(android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1, i2, i4;
        java.lang.String r2, r4, $r16;
        long l3;
        boolean z0, $z1;
        android.app.IActivityManager$ContentProviderHolder r3;
        java.lang.Throwable r5, r6, r7, r8, r9, $r15, $r17, $r18, $r19, $r20;
        android.content.IContentProvider $r10;
        android.os.RemoteException $r11, r21;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProviderMimeType");

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l3 = 0L;

        z0 = 0;

        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int unsafeConvertIncomingUser(int)>(i0);

        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canClearIdentity(int,int,int)>(i2, i1, i4);

        if $z1 == 0 goto label01;

        z0 = 1;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r3 = null;

     label02:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i4);

        if r3 == null goto label09;

        $r10 = r3.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r4 = interfaceinvoke $r10.<android.content.IContentProvider: java.lang.String getType(android.net.Uri)>(r1);

     label03:
        if z0 != 0 goto label04;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        if r3 == null goto label05;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i4);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label08;

     label06:
        $r20 := @caughtexception;

        r5 = $r20;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r5;

     label08:
        return r4;

     label09:
        if z0 != 0 goto label10;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label10:
        if r3 == null goto label11;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i4);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label14;

     label12:
        $r15 := @caughtexception;

        r6 = $r15;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r6;

     label14:
        goto label29;

     label15:
        $r11 := @caughtexception;

        r21 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider dead retrieving ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r16, r21);

     label16:
        if z0 != 0 goto label17;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label17:
        if r3 == null goto label18;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i4);

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label21;

     label19:
        $r17 := @caughtexception;

        r7 = $r17;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r7;

     label21:
        return null;

     label22:
        $r19 := @caughtexception;

        r8 = $r19;

     label23:
        if z0 != 0 goto label24;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label24:
        if r3 == null goto label25;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i4);

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label28;

     label26:
        $r18 := @caughtexception;

        r9 = $r18;

     label27:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r9;

     label28:
        throw r8;

     label29:
        return null;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label02 to label03 with label15;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private boolean canClearIdentity(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if $i3 != i2 goto label1;

        return 1;

     label1:
        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i0, i1, -1, 1);

        if $i4 == 0 goto label2;

        $i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0, i1, -1, 1);

        if $i5 != 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    final com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo, java.lang.String, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, r3, $r8;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.internal.os.BatteryStatsImpl r4;
        com.android.server.am.BatteryStatsService $r5;
        com.android.server.am.ProcessRecord $r6;
        android.util.SparseArray $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        if r2 == null goto label1;

        $r8 = r2;

        goto label2;

     label1:
        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

     label2:
        r3 = $r8;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r4 = virtualinvoke $r5.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if z0 == 0 goto label9;

        if i0 != 0 goto label8;

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        i3 = 1000;

     label3:
        $i4 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        if $i4 < 99000 goto label4;

        $i9 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        if $i9 <= 99999 goto label5;

     label4:
        r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid> = 99000;

     label5:
        $i5 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        i1 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, $i5);

        $i7 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        $i6 = $i7 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid> = $i6;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i8 = virtualinvoke $r7.<android.util.SparseArray: int indexOfKey(int)>(i1);

        if $i8 >= 0 goto label6;

        goto label7;

     label6:
        i3 = i3 + -1;

        if i3 > 0 goto label3;

        return null;

     label7:
        goto label9;

     label8:
        i1 = i0;

     label9:
        $r6 = new com.android.server.am.ProcessRecord;

        specialinvoke $r6.<com.android.server.am.ProcessRecord: void <init>(com.android.internal.os.BatteryStatsImpl,android.content.pm.ApplicationInfo,java.lang.String,int)>(r4, r1, r3, i1);

        return $r6;
    }

    final com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        boolean z0;
        java.lang.String r2, $r6, $r10, $r11, $r15, $r19, $r22;
        com.android.server.am.ProcessRecord r3;
        android.content.pm.IPackageManager $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.app.IApplicationThread $r7;
        java.util.ArrayList $r8, $r9;
        com.android.internal.app.ProcessMap $r13;
        android.util.SparseArray $r14;
        android.os.RemoteException $r16;
        java.lang.StringBuilder $r17, $r20, $r21, $r23, $r24;
        java.lang.IllegalArgumentException $r18, r25;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        if z0 != 0 goto label01;

        $r15 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i7 = r1.<android.content.pm.ApplicationInfo: int uid>;

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r15, $i7, 1);

        goto label02;

     label01:
        r3 = null;

     label02:
        if r3 != null goto label04;

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int)>(r1, null, z0, 0);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r11 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i5 = r3.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r13.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r11, $i5, r3);

        if z0 == 0 goto label03;

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i6 = r3.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r3);

     label03:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r3, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label04:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i0 = r3.<com.android.server.am.ProcessRecord: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r6, 0, $i1);

     label05:
        goto label08;

     label06:
        $r16 := @caughtexception;

        goto label08;

     label07:
        $r18 := @caughtexception;

        r25 = $r18;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r19 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r22);

     label08:
        $i2 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 9;

        if $i3 != 9 goto label09;

        r3.<com.android.server.am.ProcessRecord: boolean persistent> = 1;

        r3.<com.android.server.am.ProcessRecord: int maxAdj> = -12;

     label09:
        $r7 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 != null goto label10;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int indexOf(java.lang.Object)>(r3);

        if $i4 >= 0 goto label10;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r10 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(r3, "added application", $r10, r2, null, null);

     label10:
        return r3;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.IllegalArgumentException from label04 to label05 with label07;
    }

    public void unhandledBack()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        long l0;
        java.lang.Throwable r2, r3, $r6, $r7;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.FORCE_BACK", "unhandledBack()");

        r1 = r0;

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        virtualinvoke $r5.<com.android.server.am.ActivityStack: void unhandledBackLocked()>();

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label06;

     label04:
        $r6 := @caughtexception;

        r2 = $r6;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.os.ParcelFileDescriptor openContentUri(android.net.Uri) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, $i2, $i3;
        java.lang.String r2, $r11;
        android.app.IActivityManager$ContentProviderHolder r3;
        android.os.ParcelFileDescriptor r4;
        java.lang.Throwable r6, $r17;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.ThreadLocal $r12, $r16, $r18, $r19;
        com.android.server.am.ActivityManagerService$Identity $r13;
        android.content.IContentProvider $r14;
        java.io.FileNotFoundException $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("openContentUri");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

        r4 = null;

        if r3 == null goto label8;

        $r12 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r13 = new com.android.server.am.ActivityManagerService$Identity;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r13.<com.android.server.am.ActivityManagerService$Identity: void <init>(com.android.server.am.ActivityManagerService,int,int)>(r0, $i3, $i2);

        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>($r13);

     label1:
        $r14 = r3.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r4 = interfaceinvoke $r14.<android.content.IContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>(null, r1, "r", null);

     label2:
        $r16 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r16.<java.lang.ThreadLocal: void remove()>();

        goto label7;

     label3:
        $r15 := @caughtexception;

     label4:
        $r18 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r18.<java.lang.ThreadLocal: void remove()>();

        goto label7;

     label5:
        $r17 := @caughtexception;

        r6 = $r17;

     label6:
        $r19 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r19.<java.lang.ThreadLocal: void remove()>();

        throw r6;

     label7:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

        goto label9;

     label8:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get provider for authority \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r11);

     label9:
        return r4;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSleepingOrShuttingDown()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isSleeping()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        return $z0;
    }

    void goingToSleep()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep> = 1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void goToSleepIfNeededLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void finishRunningVoiceLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice> = 0;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void goToSleepIfNeededLocked()>();

     label1:
        return;
    }

    void goToSleepIfNeededLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.Message r1;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityStackSupervisor $r2;
        com.android.server.am.ActivityManagerService$MainHandler $r3, $r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice>;

        if $z1 != 0 goto label1;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z2 != 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor: void goingToSleepLocked()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkExcessivePowerUsageLocked(boolean)>(0);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(27);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r1 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(27);

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r1, 900000L);

     label1:
        return;
    }

    void notifyTaskPersisterLocked(com.android.server.am.TaskRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1;
        boolean z0, $z1;
        com.android.server.am.TaskPersister $r2;
        com.android.server.am.ActivityStack $r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        if r1 == null goto label1;

        $r3 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r3 == null goto label1;

        $r4 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z1 = virtualinvoke $r4.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r2.<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>(r1, z0);

        return;
    }

    public boolean shutdown(int)
    {
        com.android.server.am.ActivityManagerService r0, r1, r15;
        int i0, $i1;
        java.lang.Throwable r2, r3, $r12, $r14;
        com.android.server.am.ActivityStackSupervisor $r5;
        com.android.server.AppOpsService $r6;
        android.app.usage.UsageStatsManagerInternal $r7, $r11;
        com.android.server.am.BatteryStatsService $r8;
        com.android.server.am.ProcessStatsService $r10;
        java.lang.SecurityException $r13;
        boolean z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SHUTDOWN");

        if $i1 == 0 goto label01;

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SHUTDOWN");

        throw $r13;

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateEventDispatchingLocked()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z1 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: boolean shutdownLocked(int)>(i0);

        exitmonitor r1;

     label03:
        goto label06;

     label04:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label05:
        throw r2;

     label06:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r6.<com.android.server.AppOpsService: void shutdown()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r7 == null goto label07;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        virtualinvoke $r11.<android.app.usage.UsageStatsManagerInternal: void prepareShutdown()>();

     label07:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r8.<com.android.server.am.BatteryStatsService: void shutdown()>();

        r15 = r0;

        entermonitor r0;

     label08:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r10.<com.android.server.am.ProcessStatsService: void shutdownLocked()>();

        exitmonitor r15;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r15;

     label11:
        throw r3;

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>(null, 1);

        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final void activitySlept(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void activitySleptLocked(com.android.server.am.ActivityRecord)>(r3);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void logLockScreen(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        return;
    }

    private void comeOutOfSleepIfNeededLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.am.ActivityStackSupervisor $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        if $z0 != 0 goto label1;

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        if $z3 == 0 goto label2;

     label1:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice>;

        if $z1 == 0 goto label3;

     label2:
        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z2 == 0 goto label3;

        r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 0;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor: void comeOutOfSleepIfNeededLocked()>();

     label3:
        return;
    }

    void wakingUp()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void startRunningVoiceLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

     label1:
        return;
    }

    private void updateEventDispatchingLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void setEventDispatching(boolean)>($z2);

        return;
    }

    public void setLockScreenShown(boolean)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        boolean z0;
        long l0;
        java.lang.Throwable r2, r3, $r6, $r7;
        int $i1;
        java.lang.SecurityException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DEVICE_POWER");

        if $i1 == 0 goto label01;

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.DEVICE_POWER");

        throw $r5;

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown> = z0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label07;

     label05:
        $r6 := @caughtexception;

        r2 = $r6;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void stopAppSwitches()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        android.os.Message r2;
        java.lang.Throwable r3, $r9;
        int $i0;
        long $l1, $l2;
        com.android.server.am.ActivityManagerService$MainHandler $r5, $r6, $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.STOP_APP_SWITCHES");

        if $i0 == 0 goto label1;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.STOP_APP_SWITCHES");

        throw $r8;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 + 5000L;

        r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = $l2;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidAppSwitch> = 0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(21);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(21);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 5000L);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void resumeAppSwitches()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r5;
        int $i0;
        java.lang.SecurityException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.STOP_APP_SWITCHES");

        if $i0 == 0 goto label1;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.STOP_APP_SWITCHES");

        throw $r4;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = 0L;

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    boolean checkAppSwitchAllowedLocked(int, int, int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i9;
        java.lang.String r1, $r6;
        long $l5, $l6;
        byte $b7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        $l5 = r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime>;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b7 = $l5 cmp $l6;

        if $b7 >= 0 goto label1;

        return 1;

     label1:
        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.STOP_APP_SWITCHES", i0, i1, -1, 1);

        if i4 != 0 goto label2;

        return 1;

     label2:
        if i3 == -1 goto label3;

        if i3 == i1 goto label3;

        i9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.STOP_APP_SWITCHES", i2, i3, -1, 1);

        if i9 != 0 goto label3;

        return 1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request from ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stopped");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        return 0;
    }

    public void setDebugApp(java.lang.String, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r10;
        java.lang.String r1, $r6;
        boolean z0, z1, $z3, $z4;
        long l0;
        android.content.ContentResolver r2;
        java.lang.Throwable r3, r4, $r8, $r9;
        android.content.Context $r7;
        byte $b1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_DEBUG_APP", "setDebugApp()");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        if z1 == 0 goto label04;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r2 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r2, "debug_app", r1);

        if z0 == 0 goto label02;

        $b1 = 1;

        goto label03;

     label02:
        $b1 = 0;

     label03:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r2, "wait_for_debugger", $b1);

     label04:
        r10 = r0;

        entermonitor r0;

     label05:
        if z1 != 0 goto label06;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = $r6;

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = $z4;

     label06:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = r1;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = z0;

        if z1 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = $z3;

        if r1 == null goto label09;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, -1, 0, 0, 1, 1, 0, -1, "set debug app");

     label09:
        exitmonitor r10;

     label10:
        goto label13;

     label11:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r10;

     label12:
        throw r3;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label16;

     label14:
        $r8 := @caughtexception;

        r4 = $r8;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label16:
        return;

        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    void setOpenGlTraceApp(android.content.pm.ApplicationInfo, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, $r6, $r7, $r12, $r14;
        boolean z0;
        java.lang.Throwable r4, $r13;
        int $i0, $i1;
        java.lang.SecurityException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        r3 = r0;

        entermonitor r0;

     label1:
        $r6 = "1";

        $r7 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if z0 != 0 goto label2;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label2;

        $r8 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r12 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label2:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp> = r2;

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void setProfileApp(android.content.pm.ApplicationInfo, java.lang.String, android.app.ProfilerInfo)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, $r8, $r9, $r10, $r18, $r20;
        android.app.ProfilerInfo r3;
        boolean z0, $z1;
        java.lang.Throwable r6, $r21;
        android.os.ParcelFileDescriptor $r11, $r12, $r13;
        int $i0, $i1, $i2;
        java.lang.SecurityException $r14;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.io.IOException $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.ProfilerInfo;

        r4 = r0;

        entermonitor r0;

     label01:
        $r8 = "1";

        $r9 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if z0 != 0 goto label02;

        $i1 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 2;

        if $i2 != 0 goto label02;

        $r14 = new java.lang.SecurityException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r18 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label02:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp> = r2;

        $r10 = r3.<android.app.ProfilerInfo: java.lang.String profileFile>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile> = $r10;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        if $r11 == null goto label07;

     label03:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        virtualinvoke $r13.<android.os.ParcelFileDescriptor: void close()>();

     label04:
        goto label06;

     label05:
        $r19 := @caughtexception;

     label06:
        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd> = null;

     label07:
        $r12 = r3.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd> = $r12;

        $i0 = r3.<android.app.ProfilerInfo: int samplingInterval>;

        r0.<com.android.server.am.ActivityManagerService: int mSamplingInterval> = $i0;

        $z1 = r3.<android.app.ProfilerInfo: boolean autoStopProfiler>;

        r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler> = $z1;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        exitmonitor r4;

     label08:
        goto label11;

     label09:
        $r21 := @caughtexception;

        r6 = $r21;

        exitmonitor r4;

     label10:
        throw r6;

     label11:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void setAlwaysFinish(boolean)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        byte $b0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ALWAYS_FINISH", "setAlwaysFinish()");

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r4, "always_finish_activities", $b0);

        r1 = r0;

        entermonitor r0;

     label3:
        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = z0;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setActivityController(android.app.IActivityController)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IActivityController r1;
        java.lang.Throwable r3, $r6;
        com.android.server.Watchdog $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IActivityController;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER", "setActivityController()");

        r2 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = r1;

        $r5 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r5.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setUserIsMonkey(boolean)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        boolean z0;
        android.util.SparseArray r2, $r7, $r8;
        int i0;
        com.android.server.am.ProcessRecord r3;
        java.lang.Throwable r4, r5, $r17, $r18;
        java.lang.Object $r9;
        android.app.IUiAutomationConnection $r10;
        java.lang.SecurityException $r11, $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.String $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        r1 = r0;

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ProcessRecord) $r9;

        if r3 != null goto label03;

        $r11 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label03:
        $r10 = r3.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        if $r10 != null goto label04;

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>("Only an instrumentation process with a UiAutomation can call setUserIsMonkey");

        throw $r12;

     label04:
        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r2;

     label07:
        throw r4;

     label08:
        r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey> = z0;

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r5 = $r17;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean isUserAMonkey()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r5;
        boolean $z0, $z1;
        android.app.IActivityController $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey>;

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r4 == null goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return $z1;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void requestBugReport()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "requestBugReport");

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.start", "bugreport");

        return;
    }

    public static long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ProcessRecord $r1;
        long $l0;

        r0 := @parameter0: com.android.server.am.ActivityRecord;

        if r0 == null goto label1;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $l0 = staticinvoke <com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>($r1);

        goto label2;

     label1:
        $l0 = 5000L;

     label2:
        return $l0;
    }

    public static long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        android.content.ComponentName $r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        if r0 == null goto label2;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r1 != null goto label1;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean usingWrapper>;

        if $z0 == 0 goto label2;

     label1:
        return 60000L;

     label2:
        return 5000L;
    }

    public long inputDispatchingTimedOut(int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        int i0, $i2;
        boolean z0, $z1;
        java.lang.String r1;
        com.android.server.am.ProcessRecord r2;
        long l1;
        android.util.SparseArray r4, $r8, $r9;
        java.lang.Throwable r5, r6, $r11, $r13;
        java.lang.Object $r10;
        java.lang.SecurityException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FILTER_EVENTS");

        if $i2 == 0 goto label01;

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FILTER_EVENTS");

        throw $r12;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r8;

        entermonitor $r8;

     label03:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r10;

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        l1 = staticinvoke <com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>(r2);

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

        r6 = $r13;

        exitmonitor r3;

     label10:
        throw r6;

     label11:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r2, null, null, z0, r1);

        if $z1 != 0 goto label12;

        return -1L;

     label12:
        return l1;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r6;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ActivityRecord r2, r3;
        boolean z0, $z1, $z2;
        java.lang.String r4, r5;
        android.os.Bundle r7, $r17;
        java.lang.Throwable r8, $r18;
        int $i0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        android.content.ComponentName $r14;
        com.android.server.am.ActivityManagerService$11 $r15;
        com.android.server.am.ActivityManagerService$MainHandler $r16;
        java.lang.SecurityException $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: com.android.server.am.ActivityRecord;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FILTER_EVENTS");

        if $i0 == 0 goto label01;

        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FILTER_EVENTS");

        throw $r19;

     label01:
        if r4 != null goto label02;

        r5 = "Input dispatching timed out";

        goto label03;

     label02:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input dispatching timed out (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        if r1 == null goto label15;

        r6 = r0;

        entermonitor r0;

     label04:
        $z1 = r1.<com.android.server.am.ProcessRecord: boolean debugging>;

        if $z1 == 0 goto label06;

        exitmonitor r6;

     label05:
        return 0;

     label06:
        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mDidDexOpt>;

        if $z2 == 0 goto label08;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidDexOpt> = 0;

        exitmonitor r6;

     label07:
        return 0;

     label08:
        $r14 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r14 == null goto label10;

        $r17 = new android.os.Bundle;

        specialinvoke $r17.<android.os.Bundle: void <init>()>();

        r7 = $r17;

        virtualinvoke r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "keyDispatchingTimedOut");

        virtualinvoke r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", r5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, r7);

        exitmonitor r6;

     label09:
        return 1;

     label10:
        exitmonitor r6;

     label11:
        goto label14;

     label12:
        $r18 := @caughtexception;

        r8 = $r18;

        exitmonitor r6;

     label13:
        throw r8;

     label14:
        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r15 = new com.android.server.am.ActivityManagerService$11;

        specialinvoke $r15.<com.android.server.am.ActivityManagerService$11: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r0, r1, r2, r3, z0, r5);

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r15);

     label15:
        return 1;

        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public android.os.Bundle getAssistContextExtras(int)
    {
        com.android.server.am.ActivityManagerService r0, r17;
        int i0, $i1;
        com.android.server.am.ActivityManagerService$PendingAssistExtras r1, r2;
        java.lang.Throwable r4, r5, $r13, $r15;
        boolean $z0;
        android.os.Bundle $r7, $r11, $r12, $r14;
        java.util.ArrayList $r9;
        com.android.server.am.ActivityManagerService$MainHandler $r10;
        java.lang.InterruptedException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PendingAssistExtras enqueueAssistContext(int,android.content.Intent,java.lang.String,int)>(i0, null, null, $i1);

        if r1 != null goto label01;

        return null;

     label01:
        r2 = r1;

        entermonitor r1;

     label02:
        $z0 = r1.<com.android.server.am.ActivityManagerService$PendingAssistExtras: boolean haveResult>;

        if $z0 != 0 goto label06;

     label03:
        virtualinvoke r1.<java.lang.Object: void wait()>();

     label04:
        goto label02;

     label05:
        $r16 := @caughtexception;

        goto label02;

     label06:
        $r7 = r1.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle result>;

        if $r7 == null goto label07;

        $r14 = r1.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle extras>;

        $r11 = r1.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle result>;

        virtualinvoke $r14.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.intent.extra.ASSIST_CONTEXT", $r11);

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label10:
        throw r4;

     label11:
        r17 = r0;

        entermonitor r0;

     label12:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>(r1);

        exitmonitor r17;

     label13:
        goto label16;

     label14:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r17;

     label15:
        throw r5;

     label16:
        $r12 = r1.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle extras>;

        return $r12;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private com.android.server.am.ActivityManagerService$PendingAssistExtras enqueueAssistContext(int, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r5;
        int i0, i1, $i3, $i4;
        android.content.Intent r1;
        java.lang.String r2, $r12, $r17, $r30, $r35;
        com.android.server.am.ActivityManagerService$PendingAssistExtras r3, $r22;
        android.os.Bundle r4, $r9;
        com.android.server.am.ActivityRecord r6;
        java.lang.Throwable r8, $r31;
        com.android.server.am.ActivityStack $r11;
        com.android.server.am.ProcessRecord $r13, $r18, $r19, $r21;
        java.lang.StringBuilder $r14, $r15, $r16, $r27, $r28, $r29, $r32, $r33, $r36;
        android.app.IApplicationThread $r20, $r23;
        android.view.IApplicationToken$Stub $r24;
        com.android.server.am.ActivityManagerService$MainHandler $r25;
        java.util.ArrayList $r26;
        android.os.RemoteException $r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_TOP_ACTIVITY_INFO", "getAssistContextExtras()");

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        r4 = $r9;

        r5 = r0;

        entermonitor r0;

     label01:
        $r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r6 = $r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r6 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "getAssistContextExtras failed: no resumed activity");

        exitmonitor r5;

     label02:
        return null;

     label03:
        $r12 = r6.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.intent.extra.ASSIST_PACKAGE", $r12);

        $r13 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label04;

        $r18 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r18.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 != null goto label06;

     label04:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAssistContextExtras failed: no process for ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        exitmonitor r5;

     label05:
        return null;

     label06:
        $r19 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i4 = $r19.<com.android.server.am.ProcessRecord: int pid>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if $i4 != $i3 goto label08;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAssistContextExtras failed: request process same as ");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r30);

        exitmonitor r5;

     label07:
        return null;

     label08:
        $r22 = new com.android.server.am.ActivityManagerService$PendingAssistExtras;

        specialinvoke $r22.<com.android.server.am.ActivityManagerService$PendingAssistExtras: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord,android.os.Bundle,android.content.Intent,java.lang.String,int)>(r0, r6, r4, r1, r2, i1);

        r3 = $r22;

     label09:
        $r21 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r24 = r6.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r23.<android.app.IApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>($r24, r3, i0);

        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras>;

        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r25.<com.android.server.am.ActivityManagerService$MainHandler: boolean postDelayed(java.lang.Runnable,long)>(r3, 500L);

     label10:
        goto label13;

     label11:
        $r34 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAssistContextExtras failed: crash calling ");

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r35);

        exitmonitor r5;

     label12:
        return null;

     label13:
        exitmonitor r5;

     label14:
        return r3;

     label15:
        $r31 := @caughtexception;

        r8 = $r31;

        exitmonitor r5;

     label16:
        throw r8;

        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void reportAssistContextExtras(android.os.IBinder, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0, r26;
        android.os.IBinder r1;
        android.os.Bundle r2;
        com.android.server.am.ActivityManagerService$PendingAssistExtras r3, r4;
        java.lang.Throwable r5, r6, $r23, $r24;
        android.content.Intent $r8, $r12, $r16, $r18, $r20;
        java.util.ArrayList $r10;
        com.android.server.am.ActivityManagerService$MainHandler $r11;
        java.lang.String $r13, $r21;
        int $i0;
        android.os.UserHandle $r17;
        android.content.Context $r19;
        android.content.ActivityNotFoundException $r25, r27;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.Bundle;

        r3 = (com.android.server.am.ActivityManagerService$PendingAssistExtras) r1;

        r4 = r3;

        entermonitor r3;

     label01:
        r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle result> = r2;

        r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: boolean haveResult> = 1;

        virtualinvoke r3.<java.lang.Object: void notifyAll()>();

        $r8 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.content.Intent intent>;

        if $r8 != null goto label03;

        exitmonitor r4;

     label02:
        return;

     label03:
        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        r26 = r0;

        entermonitor r0;

     label08:
        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras>;

        z0 = virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>(r3);

        if z0 != 0 goto label10;

        exitmonitor r26;

     label09:
        return;

     label10:
        exitmonitor r26;

     label11:
        goto label14;

     label12:
        $r24 := @caughtexception;

        r6 = $r24;

        exitmonitor r26;

     label13:
        throw r6;

     label14:
        $r12 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.content.Intent intent>;

        virtualinvoke $r12.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>(r2);

        $r13 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: java.lang.String hint>;

        if $r13 == null goto label15;

        $r20 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.content.Intent intent>;

        $r21 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: java.lang.String hint>;

        virtualinvoke $r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>($r21, 1);

     label15:
        $r16 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.content.Intent intent>;

        virtualinvoke $r16.<android.content.Intent: android.content.Intent setFlags(int)>(872415232);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)>("assist");

     label16:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r18 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.content.Intent intent>;

        $r17 = new android.os.UserHandle;

        $i0 = r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: int userHandle>;

        specialinvoke $r17.<android.os.UserHandle: void <init>(int)>($i0);

        virtualinvoke $r19.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>($r18, $r17);

     label17:
        goto label19;

     label18:
        $r25 := @caughtexception;

        r27 = $r25;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "No activity to handle assist action.", r27);

     label19:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.content.ActivityNotFoundException from label16 to label17 with label18;
    }

    public boolean launchAssistIntent(android.content.Intent, int, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        int i0, i1;
        java.lang.String r2;
        com.android.server.am.ActivityManagerService$PendingAssistExtras $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PendingAssistExtras enqueueAssistContext(int,android.content.Intent,java.lang.String,int)>(i0, r1, r2, i1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void registerProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IProcessObserver r1;
        java.lang.Throwable r3, $r6;
        android.os.RemoteCallbackList $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IProcessObserver;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER", "registerProcessObserver()");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r5.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unregisterProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IProcessObserver r1;
        java.lang.Throwable r3, $r6;
        android.os.RemoteCallbackList $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IProcessObserver;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r5.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean convertFromTranslucent(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityRecord r3;
        boolean z0, z1, z2;
        java.lang.Throwable r4, r5, $r11, $r12;
        com.android.server.wm.WindowManagerService $r7;
        com.android.server.am.ActivityStack $r8;
        com.android.server.am.TaskRecord $r9;
        com.android.server.am.ActivityStackSupervisor $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label04;

        z0 = 0;

        exitmonitor r2;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label04:
        z2 = virtualinvoke r3.<com.android.server.am.ActivityRecord: boolean changeWindowTranslucency(boolean)>(1);

        if z2 == 0 goto label05;

        $r9 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r9.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r8.<com.android.server.am.ActivityStack: void releaseBackgroundResources()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label05:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>(r1, 1);

        z1 = z2;

        exitmonitor r2;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label07:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        $r12 := @caughtexception;

        r5 = $r12;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label10 with label09;
    }

    public boolean convertToTranslucent(android.os.IBinder, android.app.ActivityOptions)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        android.app.ActivityOptions r2;
        long l0;
        com.android.server.am.ActivityRecord r4, r5;
        boolean z0, z1, z2;
        java.lang.Throwable r6, r7, $r18, $r19;
        com.android.server.am.TaskRecord $r9, $r14, $r15;
        java.util.ArrayList $r10, $r17;
        com.android.server.am.ActivityStackSupervisor $r11;
        com.android.server.wm.WindowManagerService $r12;
        com.android.server.am.ActivityStack $r13;
        int $i1, i2;
        java.lang.Object $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.app.ActivityOptions;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r4 != null goto label04;

        z0 = 0;

        exitmonitor r3;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label04:
        $r9 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r10 = $r9.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i2 = virtualinvoke $r10.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r4);

        if i2 <= 0 goto label05;

        $r15 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r17 = $r15.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i1 = i2 - 1;

        $r16 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r5 = (com.android.server.am.ActivityRecord) $r16;

        r5.<com.android.server.am.ActivityRecord: android.app.ActivityOptions returningOptions> = r2;

     label05:
        z2 = virtualinvoke r4.<com.android.server.am.ActivityRecord: boolean changeWindowTranslucency(boolean)>(0);

        if z2 == 0 goto label06;

        $r14 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r13 = $r14.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r13.<com.android.server.am.ActivityStack: void convertToTranslucent(com.android.server.am.ActivityRecord)>(r4);

     label06:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r12.<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>(r1, 0);

        z1 = z2;

        exitmonitor r3;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label08:
        $r19 := @caughtexception;

        r6 = $r19;

        exitmonitor r3;

     label09:
        throw r6;

     label10:
        $r18 := @caughtexception;

        r7 = $r18;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r7;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label11 with label10;
    }

    public boolean requestVisibleBehind(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        boolean z0, z1, z2;
        long l0;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, r5, $r8, $r9;
        com.android.server.am.ActivityStackSupervisor $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label04;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z1 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: boolean requestVisibleBehindLocked(com.android.server.am.ActivityRecord,boolean)>(r3, z0);

        exitmonitor r2;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label04:
        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label07:
        throw r4;

     label08:
        z2 = 0;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label10:
        $r8 := @caughtexception;

        r5 = $r8;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean isBackgroundVisibleBehind(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityStack r3;
        boolean z0, z1, $z2;
        java.lang.Throwable r4, r5, $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0;

        entermonitor r0;

     label2:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label3;

        $z2 = 0;

        goto label4;

     label3:
        $z2 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean hasVisibleBehindActivity()>();

     label4:
        z0 = $z2;

        z1 = z0;

        exitmonitor r2;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        $r8 := @caughtexception;

        r5 = $r8;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label1 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public android.app.ActivityOptions getActivityOptions(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityRecord r3;
        android.app.ActivityOptions r4, r5;
        java.lang.Throwable r6, r7, $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0;

        entermonitor r0;

     label2:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label4;

        r4 = r3.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        r3.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

        r5 = r4;

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r5;

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return null;

     label6:
        $r9 := @caughtexception;

        r6 = $r9;

        exitmonitor r2;

     label7:
        throw r6;

     label8:
        $r10 := @caughtexception;

        r7 = $r10;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r7;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public void setImmersive(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        boolean z0;
        com.android.server.am.ActivityRecord r3, $r6;
        java.lang.Throwable r4, $r8;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label2:
        r3.<com.android.server.am.ActivityRecord: boolean immersive> = z0;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if r3 != $r6 goto label3;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)>(r3);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isImmersive(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3;
        java.lang.Throwable r4, $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label2:
        $z0 = r3.<com.android.server.am.ActivityRecord: boolean immersive>;

        exitmonitor r2;

     label3:
        return $z0;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isTopActivityImmersive()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        com.android.server.am.ActivityRecord r2;
        java.lang.Throwable r3, $r6;
        com.android.server.am.ActivityStack $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivity");

        r1 = r0;

        entermonitor r0;

     label1:
        $r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r2 = virtualinvoke $r5.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label2;

        $z0 = r2.<com.android.server.am.ActivityRecord: boolean immersive>;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $z0;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isTopOfTask(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r3, $r7;
        java.lang.Throwable r4, $r9;
        com.android.server.am.TaskRecord $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label2:
        $r6 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r7 = virtualinvoke $r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r7 != r3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        exitmonitor r2;

     label5:
        return $z0;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label7:
        throw r4;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final void enterSafeMode()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label5;

     label2:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void enterSafeMode()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        r0.<com.android.server.am.ActivityManagerService: boolean mSafeMode> = 1;

        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public final void showSafeModeOverlay()
    {
        com.android.server.am.ActivityManagerService r0;
        android.view.View r1;
        android.view.WindowManager$LayoutParams r2, $r5;
        android.content.Context $r3, $r7;
        android.view.LayoutInflater $r4;
        android.graphics.drawable.Drawable $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r8;
        android.view.WindowManager $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        r1 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367218, null);

        $r5 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r5.<android.view.WindowManager$LayoutParams: void <init>()>();

        r2 = $r5;

        r2.<android.view.WindowManager$LayoutParams: int type> = 2015;

        r2.<android.view.WindowManager$LayoutParams: int width> = -2;

        r2.<android.view.WindowManager$LayoutParams: int height> = -2;

        r2.<android.view.WindowManager$LayoutParams: int gravity> = 8388691;

        $r6 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $i0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getOpacity()>();

        r2.<android.view.WindowManager$LayoutParams: int format> = $i0;

        r2.<android.view.WindowManager$LayoutParams: int flags> = 24;

        $i1 = r2.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 | 16;

        r2.<android.view.WindowManager$LayoutParams: int privateFlags> = $i2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r9 = (android.view.WindowManager) $r8;

        interfaceinvoke $r9.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void noteWakeupAlarm(android.content.IIntentSender, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r2, $r13;
        com.android.internal.os.BatteryStatsImpl r3, r4;
        com.android.server.am.PendingIntentRecord r5;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg r6;
        java.lang.Throwable r7, $r14;
        boolean $z0, $z1;
        com.android.server.am.BatteryStatsService $r8, $r10, $r11;
        com.android.server.am.PendingIntentRecord$Key $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r3 = virtualinvoke $r8.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r4 = r3;

        entermonitor r3;

     label02:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $z1 = virtualinvoke $r10.<com.android.server.am.BatteryStatsService: boolean isOnBattery()>();

        if $z1 == 0 goto label09;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r11.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r5 = (com.android.server.am.PendingIntentRecord) r1;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = r5.<com.android.server.am.PendingIntentRecord: int uid>;

        if $i3 != i1 goto label03;

        $i4 = 1000;

        goto label04;

     label03:
        $i4 = r5.<com.android.server.am.PendingIntentRecord: int uid>;

     label04:
        i2 = $i4;

        if i0 < 0 goto label05;

        $i5 = i0;

        goto label06;

     label05:
        $i5 = i2;

     label06:
        if r2 == null goto label07;

        $r13 = r2;

        goto label08;

     label07:
        $r12 = r5.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r13 = $r12.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

     label08:
        r6 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>($i5, $r13);

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void incWakeupsLocked()>();

     label09:
        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r14 := @caughtexception;

        r7 = $r14;

        exitmonitor r4;

     label12:
        throw r7;

     label13:
        return;

        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public boolean killPids(int[], java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int[] r1, r5;
        java.lang.String r2, r3, $r13, $r17;
        boolean z0, z1, $z2;
        android.util.SparseArray r4, $r8, $r16, $r19;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, i10, i11;
        com.android.server.am.ProcessRecord r6, r22;
        java.lang.Throwable r7, $r21;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;
        java.lang.Object $r15, $r20;
        java.lang.SecurityException $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i3 == 1000 goto label01;

        $r18 = new java.lang.SecurityException;

        specialinvoke $r18.<java.lang.SecurityException: void <init>(java.lang.String)>("killPids only available to the system");

        throw $r18;

     label01:
        if r2 != null goto label02;

        $r17 = "Unknown";

        goto label03;

     label02:
        $r17 = r2;

     label03:
        r3 = $r17;

        z1 = 0;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r8;

        entermonitor $r8;

     label04:
        $i4 = lengthof r1;

        r5 = newarray (int)[$i4];

        i0 = 0;

        i1 = 0;

     label05:
        $i5 = lengthof r1;

        if i1 >= $i5 goto label07;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i9 = r1[i1];

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>($i9);

        r6 = (com.android.server.am.ProcessRecord) $r20;

        if r6 == null goto label06;

        i2 = r6.<com.android.server.am.ProcessRecord: int setAdj>;

        r5[i1] = i2;

        if i2 <= i0 goto label06;

        i0 = i2;

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        if i0 >= 15 goto label08;

        if i0 <= 9 goto label08;

        i0 = 9;

     label08:
        if z0 != 0 goto label09;

        if i0 >= 5 goto label09;

        i0 = 5;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing processes ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at adjustment ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        i10 = 0;

     label10:
        $i6 = lengthof r1;

        if i10 >= $i6 goto label13;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i8 = r1[i10];

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>($i8);

        r22 = (com.android.server.am.ProcessRecord) $r15;

        if r22 != null goto label11;

        goto label12;

     label11:
        i11 = r22.<com.android.server.am.ProcessRecord: int setAdj>;

        if i11 < i0 goto label12;

        $z2 = r22.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z2 != 0 goto label12;

        virtualinvoke r22.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>(r3, 1);

        z1 = 1;

     label12:
        i10 = i10 + 1;

        goto label10;

     label13:
        exitmonitor r4;

     label14:
        goto label17;

     label15:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r4;

     label16:
        throw r7;

     label17:
        return z1;

        catch java.lang.Throwable from label04 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void killUid(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r5;
        java.lang.Throwable r3, $r7;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i1 == 1000 goto label1;

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("killUid only available to the system");

        throw $r6;

     label1:
        r2 = r0;

        entermonitor r0;

     label2:
        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if r1 == null goto label3;

        $r5 = r1;

        goto label4;

     label3:
        $r5 = "kill uid";

     label4:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>(null, $i2, $i3, -1, 0, 1, 1, 0, $r5);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean killProcessesBelowForeground(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("killProcessesBelowForeground() only available to system");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killProcessesBelowAdj(int,java.lang.String)>(0, r1);

        return $z0;
    }

    private boolean killProcessesBelowAdj(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i4, $i5;
        java.lang.String r1;
        boolean z0, $z1;
        android.util.SparseArray r2, $r5, $r6, $r7, $r9;
        com.android.server.am.ProcessRecord r3;
        java.lang.Throwable r4, $r11;
        java.lang.Object $r8;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i5 == 1000 goto label01;

        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>("killProcessesBelowAdj() only available to system");

        throw $r10;

     label01:
        z0 = 0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r2 = $r5;

        entermonitor $r5;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        i1 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i2 = 0;

     label03:
        if i2 >= i1 goto label06;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i2);

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r8 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r3 = (com.android.server.am.ProcessRecord) $r8;

        if r3 != null goto label04;

        goto label05;

     label04:
        i4 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        if i4 <= i0 goto label05;

        $z1 = r3.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z1 != 0 goto label05;

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>(r1, 1);

        z0 = 1;

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return z0;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void hang(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r22;
        android.os.IBinder r1;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService$12 r2, r4, $r8;
        java.lang.Throwable r6, r7, $r18, $r19;
        int $i0, $i1;
        com.android.server.Watchdog $r10, $r16;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;
        java.lang.SecurityException $r17;
        java.lang.InterruptedException $r20;
        android.os.RemoteException $r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 == 0 goto label01;

        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r17;

     label01:
        $r8 = new com.android.server.am.ActivityManagerService$12;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$12: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r2 = $r8;

     label02:
        interfaceinvoke r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r2, 0);

     label03:
        goto label05;

     label04:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "hang: given caller IBinder is already dead.");

        return;

     label05:
        r22 = r0;

        entermonitor r0;

     label06:
        $r10 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r10.<com.android.server.Watchdog: void setAllowRestart(boolean)>(z0);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hanging system process at request of pid ");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        r4 = r2;

        entermonitor r2;

     label07:
        $z1 = interfaceinvoke r1.<android.os.IBinder: boolean isBinderAlive()>();

        if $z1 == 0 goto label11;

     label08:
        virtualinvoke r2.<java.lang.Object: void wait()>();

     label09:
        goto label07;

     label10:
        $r20 := @caughtexception;

        goto label07;

     label11:
        exitmonitor r4;

     label12:
        goto label15;

     label13:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r4;

     label14:
        throw r6;

     label15:
        $r16 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r16.<com.android.server.Watchdog: void setAllowRestart(boolean)>(1);

        exitmonitor r22;

     label16:
        goto label19;

     label17:
        $r19 := @caughtexception;

        r7 = $r19;

        exitmonitor r22;

     label18:
        throw r7;

     label19:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch java.lang.Throwable from label07 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label06 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void restart()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$13 r1, $r3;
        android.content.Intent r2, $r4;
        int $i0;
        android.content.Context $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 == 0 goto label1;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r8;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", "Sending shutdown broadcast...");

        $r3 = new com.android.server.am.ActivityManagerService$13;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$13: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r1 = $r3;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        r2 = $r4;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.SHUTDOWN_USERSPACE_ONLY", 1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke r1.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r7, r2);

        return;
    }

    private long getLowRamTimeSinceIdle(long)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l1, $l3, $l4, $l5, $l6;
        byte $b2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        $l3 = r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle>;

        $l1 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label1;

        $l5 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $l6 = l0 - $l5;

        goto label2;

     label1:
        $l6 = 0L;

     label2:
        $l4 = $l3 + $l6;

        return $l4;
    }

    public void performIdleMaintenance()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        long l0, l1, l2, $l5, $l7, $l10, $l16, $l17, $l18, $l19, $l22, $l23, $l24, $l25;
        java.lang.StringBuilder r2, $r7, $r15, $r16, $r17, $r18, $r20, $r21;
        boolean z0, $z2, $z3, $z4;
        int i3, $i4, $i11, $i12, $i13, $i14, $i15;
        com.android.server.am.ProcessRecord r3;
        java.lang.Throwable r4, $r22;
        byte $b6, $b9, $b20, $b21;
        java.lang.String $r9, $r19;
        java.util.ArrayList $r10, $r13;
        com.android.server.am.ActivityManagerService$MainHandler $r11, $r12;
        java.lang.Object $r14;
        java.lang.SecurityException $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i4 == 0 goto label01;

        $r23 = new java.lang.SecurityException;

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r23;

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        l1 = l0 - $l5;

        l2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l0);

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = l0;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        $l7 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b6 = $l7 cmp 0L;

        if $b6 == 0 goto label03;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = l0;

     label03:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(128);

        r2 = $r7;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Idle maintenance over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" low RAM for ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r2);

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $l10 = l1 / 3L;

        $b9 = l2 cmp $l10;

        if $b9 <= 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        z0 = $z4;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i11 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        i3 = $i11 - 1;

     label06:
        if i3 < 0 goto label09;

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ProcessRecord) $r14;

        $z2 = r3.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle>;

        if $z2 == 0 goto label07;

        $i14 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i14 <= 2 goto label08;

        $i15 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i15 > 7 goto label08;

        if z0 == 0 goto label08;

        $l19 = r3.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $b20 = $l19 cmp 0L;

        if $b20 == 0 goto label08;

        $l22 = r3.<com.android.server.am.ProcessRecord: long lastPss>;

        $l17 = r3.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $l18 = $l17 * 3L;

        $l23 = $l18 / 2L;

        $b21 = $l22 cmp $l23;

        if $b21 <= 0 goto label08;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("idle maint (pss ");

        $l24 = r3.<com.android.server.am.ProcessRecord: long lastPss>;

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l24);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $l25 = r3.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r19, 1);

        goto label08;

     label07:
        $i13 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i13 >= 9 goto label08;

        r3.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle> = 1;

        r3.<com.android.server.am.ProcessRecord: long initialIdlePss> = 0L;

        $i12 = r3.<com.android.server.am.ProcessRecord: int curProcState>;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        $l16 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i12, 1, $z3, l0);

        r3.<com.android.server.am.ProcessRecord: long nextPssTime> = $l16;

     label08:
        i3 = i3 + -1;

        goto label06;

     label09:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(39);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessageDelayed(int,long)>(39, 120000L);

        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r1;

     label12:
        throw r4;

     label13:
        return;

        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void retrieveSettings()
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.content.ContentResolver r1;
        java.lang.String r2, $r10;
        boolean z0, z1, z2, $z4, $z5, $z6;
        android.content.res.Configuration r3, $r7;
        java.lang.Throwable r5, $r11;
        android.content.Context $r6;
        int $i0, $i1, $i2;
        java.util.Locale $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "debug_app");

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wait_for_debugger", 0);

        if $i0 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "always_finish_activities", 0);

        if $i1 == 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z1 = $z6;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "debug.force_rtl", 0);

        if $i2 == 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z2 = $z4;

        if z2 == 0 goto label07;

        $r10 = "1";

        goto label08;

     label07:
        $r10 = "0";

     label08:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("debug.force_rtl", $r10);

        $r7 = new android.content.res.Configuration;

        specialinvoke $r7.<android.content.res.Configuration: void <init>()>();

        r3 = $r7;

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>(r1, r3);

        if z2 == 0 goto label09;

        $r9 = r3.<android.content.res.Configuration: java.util.Locale locale>;

        virtualinvoke r3.<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>($r9);

     label09:
        r4 = r0;

        entermonitor r0;

     label10:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = r2;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = r2;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = z0;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = z0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = z1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r3, null, 0, 1);

        exitmonitor r4;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label13:
        throw r5;

     label14:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void loadResourcesOnSystemReady()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Resources r1;
        android.content.Context $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17956973);

        r0.<com.android.server.am.ActivityManagerService: boolean mHasRecents> = $z0;

        $i0 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104898);

        r0.<com.android.server.am.ActivityManagerService: int mThumbnailWidth> = $i0;

        $i1 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104897);

        r0.<com.android.server.am.ActivityManagerService: int mThumbnailHeight> = $i1;

        return;
    }

    public boolean testIsSystemReady()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        return $z0;
    }

    private static java.io.File getCalledPreBootReceiversFile()
    {
        java.io.File r0, r1, r2, $r3, $r4;

        r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "system");

        r1 = $r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "called_pre_boots.dat");

        r2 = $r4;

        return r2;
    }

    private static java.util.ArrayList readLastDonePreBootReceivers()
    {
        java.util.ArrayList r0, $r11;
        java.io.File r1;
        java.io.FileInputStream r2, $r12;
        java.io.DataInputStream r3, $r14;
        int i0, i1;
        java.lang.String r4, r5, r6, r7, r8, $r15, $r16, $r17;
        java.lang.Throwable r9, $r21;
        java.io.BufferedInputStream $r13;
        boolean $z0, $z1, $z2;
        android.content.ComponentName $r18;
        java.io.IOException $r19, $r20, $r22, $r23, $r25, r29;
        java.io.FileNotFoundException $r24;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0 = $r11;

        r1 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File getCalledPreBootReceiversFile()>();

        r2 = null;

     label01:
        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r2 = $r12;

        $r14 = new java.io.DataInputStream;

        $r13 = new java.io.BufferedInputStream;

        specialinvoke $r13.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r2, 2048);

        specialinvoke $r14.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r13);

        r3 = $r14;

        i0 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if i0 != 10000 goto label03;

        r4 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r5 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r6 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r15 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label03;

        $r16 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label03;

        $r17 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label03;

        i1 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

     label02:
        if i1 <= 0 goto label03;

        i1 = i1 + -1;

        r7 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r8 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r18 = new android.content.ComponentName;

        specialinvoke $r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r7, r8);

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        goto label02;

     label03:
        if r2 == null goto label23;

     label04:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label05:
        goto label23;

     label06:
        $r23 := @caughtexception;

        goto label23;

     label07:
        $r24 := @caughtexception;

     label08:
        if r2 == null goto label23;

     label09:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label10:
        goto label23;

     label11:
        $r25 := @caughtexception;

        goto label23;

     label12:
        $r20 := @caughtexception;

        r29 = $r20;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failure reading last done pre-boot receivers", r29);

     label13:
        if r2 == null goto label23;

     label14:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label15:
        goto label23;

     label16:
        $r19 := @caughtexception;

        goto label23;

     label17:
        $r21 := @caughtexception;

        r9 = $r21;

     label18:
        if r2 == null goto label22;

     label19:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label20:
        goto label22;

     label21:
        $r22 := @caughtexception;

     label22:
        throw r9;

     label23:
        return r0;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label01 to label03 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label03 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private static void writeLastDonePreBootReceivers(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        java.io.File r1;
        java.io.FileOutputStream r2, $r6;
        java.io.DataOutputStream r3, $r7;
        int i0, $i1, $i2;
        java.lang.Throwable r4, $r22;
        java.io.IOException r5, $r17, $r19, $r20, $r21, r23, r24, r25;
        java.io.BufferedOutputStream $r8;
        java.lang.String $r9, $r10, $r11, $r13, $r18;
        java.lang.Object $r12, $r16;
        android.content.ComponentName $r14, $r15;

        r0 := @parameter0: java.util.ArrayList;

        r1 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File getCalledPreBootReceiversFile()>();

        r2 = null;

        r3 = null;

     label01:
        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r6;

        $r7 = new java.io.DataOutputStream;

        $r8 = new java.io.BufferedOutputStream;

        specialinvoke $r8.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r2, 2048);

        specialinvoke $r7.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r8);

        r3 = $r7;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(10000);

        $r9 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r9);

        $r10 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r10);

        $r11 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r11);

        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i1);

        i0 = 0;

     label02:
        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label03;

        $r12 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r14 = (android.content.ComponentName) $r12;

        $r13 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);

        $r16 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r15 = (android.content.ComponentName) $r16;

        $r18 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r18);

        i0 = i0 + 1;

        goto label02;

     label03:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        if r3 == null goto label18;

     label04:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label05:
        goto label18;

     label06:
        $r20 := @caughtexception;

        r23 = $r20;

        virtualinvoke r23.<java.io.IOException: void printStackTrace()>();

        goto label18;

     label07:
        $r21 := @caughtexception;

        r24 = $r21;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failure writing last done pre-boot receivers", r24);

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label08:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        if r3 == null goto label18;

     label09:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label10:
        goto label18;

     label11:
        $r17 := @caughtexception;

        r25 = $r17;

        virtualinvoke r25.<java.io.IOException: void printStackTrace()>();

        goto label18;

     label12:
        $r22 := @caughtexception;

        r4 = $r22;

     label13:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        if r3 == null goto label17;

     label14:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r19 := @caughtexception;

        r5 = $r19;

        virtualinvoke r5.<java.io.IOException: void printStackTrace()>();

     label17:
        throw r4;

     label18:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label01 to label03 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private boolean deliverPreBootCompleted(java.lang.Runnable, java.util.ArrayList, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Runnable r1;
        java.util.ArrayList r2, r39;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        boolean z0, $z2;
        android.content.Intent r3, $r9;
        java.util.List r4;
        android.content.pm.ActivityInfo r6, $r33, r41;
        android.content.ComponentName r7, $r16, $r23, $r27, r42;
        com.android.server.am.ActivityManagerService$14 r8, $r26;
        android.content.pm.IPackageManager $r10;
        int[] $r12, r40;
        android.content.pm.ResolveInfo $r13, $r28, $r34;
        java.lang.Object $r14, $r29, $r35;
        java.lang.String $r15, $r17, $r24, $r31, $r32;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r25;
        android.content.pm.ApplicationInfo $r37;
        android.os.RemoteException $r38;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        z0 = 0;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PRE_BOOT_COMPLETED");

        r3 = $r9;

        r4 = null;

     label01:
        $r10 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r10.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r3, null, 0, i0);

     label02:
        goto label04;

     label03:
        $r38 := @caughtexception;

     label04:
        if r4 == null goto label18;

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        i18 = $i3 - 1;

     label05:
        if i18 < 0 goto label07;

        $r35 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i18);

        $r34 = (android.content.pm.ResolveInfo) $r35;

        $r33 = $r34.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r37 = $r33.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r37.<android.content.pm.ApplicationInfo: int flags>;

        $i16 = $i17 & 1;

        if $i16 != 0 goto label06;

        interfaceinvoke r4.<java.util.List: java.lang.Object remove(int)>(i18);

     label06:
        i18 = i18 + -1;

        goto label05;

     label07:
        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(33554432);

        if i0 != 0 goto label10;

        r39 = staticinvoke <com.android.server.am.ActivityManagerService: java.util.ArrayList readLastDonePreBootReceivers()>();

        i1 = 0;

     label08:
        $i15 = interfaceinvoke r4.<java.util.List: int size()>();

        if i1 >= $i15 goto label10;

        $r29 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r28 = (android.content.pm.ResolveInfo) $r29;

        r6 = $r28.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r27 = new android.content.ComponentName;

        $r31 = r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r32 = r6.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r27.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r31, $r32);

        r7 = $r27;

        $z2 = virtualinvoke r39.<java.util.ArrayList: boolean contains(java.lang.Object)>(r7);

        if $z2 == 0 goto label09;

        interfaceinvoke r4.<java.util.List: java.lang.Object remove(int)>(i1);

        i1 = i1 + -1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label09:
        i1 = i1 + 1;

        goto label08;

     label10:
        if i0 != 0 goto label11;

        $r12 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        goto label12;

     label11:
        $r12 = newarray (int)[1];

        $r12[0] = i0;

     label12:
        r40 = $r12;

        i19 = 0;

     label13:
        $i4 = interfaceinvoke r4.<java.util.List: int size()>();

        if i19 >= $i4 goto label18;

        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i19);

        $r13 = (android.content.pm.ResolveInfo) $r14;

        r41 = $r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = new android.content.ComponentName;

        $r17 = r41.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = r41.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r16.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r17, $r15);

        r42 = $r16;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r42);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r42);

        i2 = 0;

     label14:
        $i5 = lengthof r40;

        if i2 >= $i5 goto label17;

        r8 = null;

        $i7 = interfaceinvoke r4.<java.util.List: int size()>();

        $i6 = $i7 - 1;

        if i19 != $i6 goto label15;

        $i11 = lengthof r40;

        $i14 = $i11 - 1;

        if i2 != $i14 goto label15;

        if r1 == null goto label15;

        $r26 = new com.android.server.am.ActivityManagerService$14;

        specialinvoke $r26.<com.android.server.am.ActivityManagerService$14: void <init>(com.android.server.am.ActivityManagerService,java.lang.Runnable)>(r0, r1);

        r8 = $r26;

     label15:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending system update to ");

        $r23 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $i9 = r40[i2];

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        $i13 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i12 = r40[i2];

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, r8, 0, null, null, null, -1, 1, 0, $i13, 1000, $i12);

        if r8 == null goto label16;

        z0 = 1;

     label16:
        i2 = i2 + 1;

        goto label14;

     label17:
        i19 = i19 + 1;

        goto label13;

     label18:
        return z0;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    public void systemReady(java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService r0, r2, r81, r83, r89, r90;
        java.lang.Runnable r1;
        java.util.ArrayList r3, $r13, $r59, $r60, $r63, $r64, $r71, r79;
        java.lang.Throwable r4, r6, r7, r8, r9, r10, r11, $r66, $r67, $r68, $r69, $r74, $r75, $r77, $r78, r98;
        com.android.server.am.ProcessRecord r5, r82;
        boolean $z0, $z1, $z2, $z6, $z9, $z11, $z12, $z13, $z14;
        com.android.server.AppOpsService $r14;
        android.util.SparseArray $r15, $r16, $r53, r80;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, i25, i26, i27, i28;
        long $l3, l29;
        com.android.server.am.BatteryStatsService $r20, $r21;
        java.lang.String $r22, $r23, $r41, $r48, $r49, $r54;
        com.android.server.SystemServiceManager $r24;
        android.content.pm.IPackageManager $r26, $r35;
        android.content.Intent $r29, $r30, $r38, r96, r97;
        com.android.server.am.ActivityManagerService$16 $r31;
        com.android.server.am.ActivityStackSupervisor $r34, $r73;
        java.lang.Object $r36, $r47, $r62;
        com.android.server.am.ActivityManagerService$MainHandler $r37, $r44;
        android.content.pm.PackageManager $r39;
        android.content.Context $r40, $r42, $r51;
        android.content.res.Resources $r45, $r52;
        android.os.Bundle $r46;
        android.content.ComponentName $r50;
        java.lang.StringBuilder $r55, $r56, $r57;
        com.android.server.am.ActivityManagerService$15 $r58;
        android.content.pm.ApplicationInfo $r61, r87, r92;
        com.android.server.am.TaskPersister $r65, $r72;
        android.os.RemoteException $r70, $r76;
        android.content.pm.ResolveInfo r84;
        java.lang.CharSequence r85;
        android.content.pm.ActivityInfo r86;
        android.os.Message r88, r94;
        java.util.List r91;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label04;

        if r1 == null goto label02;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label02:
        exitmonitor r2;

     label03:
        return;

     label04:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateCurrentProfileIdsLocked()>();

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        if $r13 != null goto label06;

        $r65 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        $r64 = virtualinvoke $r65.<com.android.server.am.TaskPersister: java.util.ArrayList restoreTasksLocked()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks> = $r64;

        $r63 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $z12 = virtualinvoke $r63.<java.util.ArrayList: boolean isEmpty()>();

        if $z12 != 0 goto label05;

        $r73 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r71 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r73.<com.android.server.am.ActivityStackSupervisor: void createStackForRestoredTaskHistory(java.util.ArrayList)>($r71);

     label05:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void cleanupRecentTasksLocked(int)>(-1);

        $r72 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r72.<com.android.server.am.TaskPersister: void startPersisting()>();

     label06:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate>;

        if $z1 != 0 goto label11;

        $z9 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate>;

        if $z9 == 0 goto label08;

        exitmonitor r2;

     label07:
        return;

     label08:
        $r59 = new java.util.ArrayList;

        specialinvoke $r59.<java.util.ArrayList: void <init>()>();

        r3 = $r59;

        $r58 = new com.android.server.am.ActivityManagerService$15;

        specialinvoke $r58.<com.android.server.am.ActivityManagerService$15: void <init>(com.android.server.am.ActivityManagerService,java.util.ArrayList,java.lang.Runnable)>(r0, r3, r1);

        $z14 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean deliverPreBootCompleted(java.lang.Runnable,java.util.ArrayList,int)>($r58, r3, 0);

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate> = $z14;

        $z13 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate>;

        if $z13 == 0 goto label10;

        exitmonitor r2;

     label09:
        return;

     label10:
        r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate> = 1;

     label11:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r14.<com.android.server.AppOpsService: void systemReady()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 1;

        exitmonitor r2;

     label12:
        goto label15;

     label13:
        $r74 := @caughtexception;

        r4 = $r74;

        exitmonitor r2;

     label14:
        throw r4;

     label15:
        r79 = null;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r80 = $r16;

        entermonitor $r16;

     label16:
        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = virtualinvoke $r15.<android.util.SparseArray: int size()>();

        i25 = $i0 - 1;

     label17:
        if i25 < 0 goto label20;

        $r53 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r62 = virtualinvoke $r53.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        r5 = (com.android.server.am.ProcessRecord) $r62;

        $r61 = r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>($r61);

        if $z11 != 0 goto label19;

        if r79 != null goto label18;

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        r79 = $r60;

     label18:
        virtualinvoke r79.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label19:
        i25 = i25 + -1;

        goto label17;

     label20:
        exitmonitor r80;

     label21:
        goto label24;

     label22:
        $r68 := @caughtexception;

        r6 = $r68;

        exitmonitor r80;

     label23:
        throw r6;

     label24:
        r81 = r0;

        entermonitor r0;

     label25:
        if r79 == null goto label27;

        $i22 = virtualinvoke r79.<java.util.ArrayList: int size()>();

        i26 = $i22 - 1;

     label26:
        if i26 < 0 goto label27;

        $r47 = virtualinvoke r79.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r82 = (com.android.server.am.ProcessRecord) $r47;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing system update proc: ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r82);

        $r54 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r54);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>(r82, 1, 0, "system update done");

        i26 = i26 + -1;

        goto label26;

     label27:
        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 1;

        exitmonitor r81;

     label28:
        goto label31;

     label29:
        $r77 := @caughtexception;

        r7 = $r77;

        exitmonitor r81;

     label30:
        throw r7;

     label31:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "System now ready");

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3040, $l3);

        r83 = r0;

        entermonitor r0;

     label32:
        $i4 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i4 != 1 goto label37;

        $r42 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r39 = virtualinvoke $r42.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r38 = new android.content.Intent;

        specialinvoke $r38.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.FACTORY_TEST");

        r84 = virtualinvoke $r39.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>($r38, 1024);

        r85 = null;

        if r84 == null goto label35;

        r86 = r84.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r87 = r86.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i21 = r87.<android.content.pm.ApplicationInfo: int flags>;

        $i20 = $i21 & 1;

        if $i20 == 0 goto label33;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = "android.intent.action.FACTORY_TEST";

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = null;

        $r50 = new android.content.ComponentName;

        $r49 = r87.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r48 = r86.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r50.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r49, $r48);

        r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = $r50;

        goto label34;

     label33:
        $r51 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r52 = virtualinvoke $r51.<android.content.Context: android.content.res.Resources getResources()>();

        r85 = virtualinvoke $r52.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040325);

     label34:
        goto label36;

     label35:
        $r40 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r45 = virtualinvoke $r40.<android.content.Context: android.content.res.Resources getResources()>();

        r85 = virtualinvoke $r45.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040326);

     label36:
        if r85 == null goto label37;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = null;

        r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = null;

        r88 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r88.<android.os.Message: int what> = 3;

        $r46 = virtualinvoke r88.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r46.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("msg", r85);

        $r44 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r44.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r88);

     label37:
        exitmonitor r83;

     label38:
        goto label41;

     label39:
        $r66 := @caughtexception;

        r8 = $r66;

        exitmonitor r83;

     label40:
        throw r8;

     label41:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void retrieveSettings()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void loadResourcesOnSystemReady()>();

        r89 = r0;

        entermonitor r0;

     label42:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void readGrantedUriPermissionsLocked()>();

        exitmonitor r89;

     label43:
        goto label46;

     label44:
        $r75 := @caughtexception;

        r9 = $r75;

        exitmonitor r89;

     label45:
        throw r9;

     label46:
        if r1 == null goto label47;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label47:
        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i5 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $i7 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke $r20.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32775, $r22, $i7);

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i6 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $i8 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke $r21.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32776, $r23, $i8);

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        $i9 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke $r24.<com.android.server.SystemServiceManager: void startUser(int)>($i9);

        r90 = r0;

        entermonitor r0;

     label48:
        $i10 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i10 == 1 goto label54;

     label49:
        $r35 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r91 = interfaceinvoke $r35.<android.content.pm.IPackageManager: java.util.List getPersistentApplications(int)>(1024);

        if r91 == null goto label52;

        i27 = interfaceinvoke r91.<java.util.List: int size()>();

        i28 = 0;

     label50:
        if i28 >= i27 goto label52;

        $r36 = interfaceinvoke r91.<java.util.List: java.lang.Object get(int)>(i28);

        r92 = (android.content.pm.ApplicationInfo) $r36;

        if r92 == null goto label51;

        $r41 = r92.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z6 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z6 != 0 goto label51;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean,java.lang.String)>(r92, 0, null);

     label51:
        i28 = i28 + 1;

        goto label50;

     label52:
        goto label54;

     label53:
        $r70 := @caughtexception;

     label54:
        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 1;

        $i11 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int)>($i11);

     label55:
        $r26 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $z2 = interfaceinvoke $r26.<android.content.pm.IPackageManager: boolean hasSystemUidErrors()>();

        if $z2 == 0 goto label56;

        r94 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r94.<android.os.Message: int what> = 14;

        $r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r37.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r94);

     label56:
        goto label58;

     label57:
        $r76 := @caughtexception;

     label58:
        l29 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label59:
        $r29 = new android.content.Intent;

        specialinvoke $r29.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTED");

        r96 = $r29;

        virtualinvoke r96.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $i12 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r96.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i12);

        $i14 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i15 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r96, null, null, 0, null, null, null, -1, 0, 0, $i14, 1000, $i15);

        $r30 = new android.content.Intent;

        specialinvoke $r30.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTING");

        r97 = $r30;

        virtualinvoke r97.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $i16 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r97.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i16);

        $r31 = new com.android.server.am.ActivityManagerService$16;

        specialinvoke $r31.<com.android.server.am.ActivityManagerService$16: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $i19 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r97, null, $r31, 0, null, null, "android.permission.INTERACT_ACROSS_USERS", -1, 1, 0, $i19, 1000, -1);

     label60:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l29);

        goto label65;

     label61:
        $r78 := @caughtexception;

        r98 = $r78;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed sending first user broadcasts", r98);

     label62:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l29);

        goto label65;

     label63:
        $r67 := @caughtexception;

        r10 = $r67;

     label64:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l29);

        throw r10;

     label65:
        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r34.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        $i18 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendUserSwitchBroadcastsLocked(int,int)>(-1, $i18);

        exitmonitor r90;

     label66:
        goto label69;

     label67:
        $r69 := @caughtexception;

        r11 = $r69;

        exitmonitor r90;

     label68:
        throw r11;

     label69:
        return;

        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Throwable from label04 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label16 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label25 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
        catch java.lang.Throwable from label32 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label44 to label45 with label44;
        catch android.os.RemoteException from label49 to label52 with label53;
        catch android.os.RemoteException from label55 to label56 with label57;
        catch java.lang.Throwable from label59 to label60 with label61;
        catch java.lang.Throwable from label59 to label60 with label63;
        catch java.lang.Throwable from label61 to label62 with label63;
        catch java.lang.Throwable from label63 to label64 with label63;
        catch java.lang.Throwable from label48 to label66 with label67;
        catch java.lang.Throwable from label67 to label68 with label67;
    }

    private boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r4;
        android.app.ActivityManager$ProcessErrorStateInfo $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r1.<com.android.server.am.ProcessRecord: boolean crashing> = 1;

        $r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, 1, null, r2, r3, r4);

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport> = $r5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>();

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $z0;
    }

    private void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r4;
        android.app.ActivityManager$ProcessErrorStateInfo $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 1;

        $r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, 2, r2, r3, r4, null);

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = $r5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>();

        return;
    }

    private android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2;
        java.lang.String r2, r3, r4, r5, $r8;
        android.app.ActivityManager$ProcessErrorStateInfo r6, $r7;
        android.content.pm.ApplicationInfo $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        $r7 = new android.app.ActivityManager$ProcessErrorStateInfo;

        specialinvoke $r7.<android.app.ActivityManager$ProcessErrorStateInfo: void <init>()>();

        r6 = $r7;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: int condition> = i0;

        $r8 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String processName> = $r8;

        $i1 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: int pid> = $i1;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: int uid> = $i2;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String tag> = r2;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String shortMsg> = r3;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String longMsg> = r4;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String stackTrace> = r5;

        return r6;
    }

    void killAppAtUsersRequest(com.android.server.am.ProcessRecord, android.app.Dialog)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        com.android.server.am.ProcessRecord r1;
        android.app.Dialog r2, $r6, $r7;
        java.lang.Throwable r4, $r8;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.Dialog;

        r3 = r0;

        entermonitor r0;

     label1:
        r1.<com.android.server.am.ProcessRecord: boolean crashing> = 0;

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport> = null;

        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 0;

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = null;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r6 != r2 goto label2;

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = null;

     label2:
        $r7 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r7 != r2 goto label3;

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label3:
        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 <= 0 goto label4;

        $i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i2 == $i1 goto label4;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, null, null, null);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("user request after error", 1);

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private boolean handleAppCrashLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r11, $r21;
        java.lang.String r2, r3, r4, $r16, $r25, $r26, $r31, $r36, $r39, $r40, $r49, $r53, $r57, $r63;
        long l0, $l9, $l10;
        java.lang.Long r5, $r18;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i11, $i12, $i14, $i16, $i17, $i20, $i21, $i22, $i23, i24;
        com.android.server.am.ServiceRecord r6;
        com.android.server.am.ActivityRecord r7;
        boolean $z0, $z1, $z3, $z5, $z7;
        com.android.server.am.ActivityStackSupervisor $r9, $r45, $r46, $r55;
        android.util.ArraySet $r10, $r28;
        java.lang.Runnable $r12, $r14;
        com.android.server.am.ActivityManagerService$MainHandler $r13;
        android.content.pm.ApplicationInfo $r15, $r20, $r37, $r43, $r47, $r52, $r56, $r59;
        com.android.internal.app.ProcessMap $r17, $r54, $r58, $r64;
        java.lang.Object $r22, $r29, $r61;
        java.lang.StringBuilder $r23, $r24, $r27, $r32, $r33, $r34, $r35;
        android.content.pm.IPackageManager $r30;
        byte $b13;
        java.lang.Object[] $r38, $r44;
        java.lang.Integer $r41, $r42, $r48, $r50;
        com.android.server.am.ActivityManagerService$BadProcessInfo $r51;
        android.os.RemoteException $r62;
        java.util.ArrayList r65;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z0 != 0 goto label01;

        $r64 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r56 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r63 = $r56.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i21 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r61 = virtualinvoke $r64.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r63, $i21);

        r5 = (java.lang.Long) $r61;

        goto label02;

     label01:
        r5 = null;

     label02:
        if r5 == null goto label05;

        $l10 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $l9 = $l10 + 60000L;

        $b13 = l0 cmp $l9;

        if $b13 >= 0 goto label05;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r37 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r36 = $r37.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has crashed too many times: killing!");

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r39);

        $r38 = newarray (java.lang.Object)[3];

        $i14 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r38[0] = $r42;

        $r43 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r40 = $r43.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r38[1] = $r40;

        $i16 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r38[2] = $r41;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30032, $r38);

        $r45 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r45.<com.android.server.am.ActivityStackSupervisor: void handleAppCrashLocked(com.android.server.am.ProcessRecord)>(r1);

        $z5 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z5 != 0 goto label04;

        $r44 = newarray (java.lang.Object)[3];

        $i17 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r44[0] = $r50;

        $i20 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r44[1] = $r48;

        $r47 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r49 = $r47.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r44[2] = $r49;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30015, $r44);

        $z7 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z7 != 0 goto label03;

        $r54 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r52 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r53 = $r52.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i23 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r51 = new com.android.server.am.ActivityManagerService$BadProcessInfo;

        specialinvoke $r51.<com.android.server.am.ActivityManagerService$BadProcessInfo: void <init>(long,java.lang.String,java.lang.String,java.lang.String)>(l0, r2, r3, r4);

        virtualinvoke $r54.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r53, $i23, $r51);

        $r58 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r59 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r57 = $r59.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i22 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r58.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r57, $i22);

     label03:
        r1.<com.android.server.am.ProcessRecord: boolean bad> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>(r1, 0, 0, "crash");

        $r55 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r55.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        return 0;

     label04:
        $r46 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r46.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        goto label06;

     label05:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)>(r1);

     label06:
        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i2 = virtualinvoke $r10.<android.util.ArraySet: int size()>();

        i1 = $i2 - 1;

     label07:
        if i1 < 0 goto label08;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r29 = virtualinvoke $r28.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r6 = (com.android.server.am.ServiceRecord) $r29;

        $i12 = r6.<com.android.server.am.ServiceRecord: int crashCount>;

        $i11 = $i12 + 1;

        r6.<com.android.server.am.ServiceRecord: int crashCount> = $i11;

        i1 = i1 + -1;

        goto label07;

     label08:
        r65 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 != $r11 goto label14;

        $i4 = virtualinvoke r65.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label14;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r20 = $r21.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i6 & 1;

        if $i7 != 0 goto label14;

        $i5 = virtualinvoke r65.<java.util.ArrayList: int size()>();

        i24 = $i5 - 1;

     label09:
        if i24 < 0 goto label14;

        $r22 = virtualinvoke r65.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r7 = (com.android.server.am.ActivityRecord) $r22;

        $z3 = virtualinvoke r7.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z3 == 0 goto label13;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing package preferred activities from ");

        $r26 = r7.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r25);

     label10:
        $r30 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r31 = r7.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        interfaceinvoke $r30.<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>($r31);

     label11:
        goto label13;

     label12:
        $r62 := @caughtexception;

     label13:
        i24 = i24 + -1;

        goto label09;

     label14:
        $z1 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z1 != 0 goto label15;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r15 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r16 = $r15.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r17.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r16, $i3, $r18);

     label15:
        $r12 = r1.<com.android.server.am.ProcessRecord: java.lang.Runnable crashHandler>;

        if $r12 == null goto label16;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r14 = r1.<com.android.server.am.ProcessRecord: java.lang.Runnable crashHandler>;

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r14);

     label16:
        return 1;

        catch android.os.RemoteException from label10 to label11 with label12;
    }

    void startAppProblemLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int[] r2;
        int i0, i1, i2, $i3, $i4;
        android.content.pm.ApplicationInfo $r3, $r4;
        java.lang.String $r5;
        android.content.Context $r6;
        android.content.ComponentName $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver> = null;

        r2 = r0.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = r2[i1];

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if $i3 != i2 goto label2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r5 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r4.<android.content.pm.ApplicationInfo: int flags>;

        $r7 = staticinvoke <android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>($r6, $r5, $i4);

        r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver> = $r7;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r3.<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.app.ApplicationErrorReport$CrashInfo r2;
        com.android.server.am.ProcessRecord r3;
        java.lang.String r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.app.ApplicationErrorReport$CrashInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r1, "Crash");

        if r1 != null goto label1;

        $r5 = "system_server";

        goto label3;

     label1:
        if r3 != null goto label2;

        $r5 = "unknown";

        goto label3;

     label2:
        $r5 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label3:
        r4 = $r5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleApplicationCrashInner(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>("crash", r3, r4, r2);

        return;
    }

    void handleApplicationCrashInner(java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, $r10, $r11, $r12;
        com.android.server.am.ProcessRecord r2;
        android.app.ApplicationErrorReport$CrashInfo r4;
        java.lang.Object[] $r5;
        int $i1, $i2, $i3, $i4, $i6;
        java.lang.Integer $r6, $r7, $r9, $r13;
        android.content.pm.ApplicationInfo $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.ApplicationErrorReport$CrashInfo;

        $r5 = newarray (java.lang.Object)[8];

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r6;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[1] = $r7;

        $r5[2] = r3;

        if r2 != null goto label1;

        $i4 = -1;

        goto label2;

     label1:
        $r8 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r8.<android.content.pm.ApplicationInfo: int flags>;

     label2:
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[3] = $r9;

        $r11 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionClassName>;

        $r5[4] = $r11;

        $r10 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        $r5[5] = $r10;

        $r12 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String throwFileName>;

        $r5[6] = $r12;

        $i6 = r4.<android.app.ApplicationErrorReport$CrashInfo: int throwLineNumber>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r5[7] = $r13;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30039, $r5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>(r1, r2, r3, null, null, null, null, null, r4);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>(r2, r4);

        return;
    }

    public void handleApplicationStrictModeViolation(android.os.IBinder, int, android.os.StrictMode$ViolationInfo)
    {
        com.android.server.am.ActivityManagerService r0, r31;
        android.os.IBinder r1;
        int i0, $i1, $i2, $i4, $i5, i7;
        android.os.StrictMode$ViolationInfo r2;
        com.android.server.am.ProcessRecord r3;
        java.lang.Integer r4, $r15;
        boolean z0, $z2;
        java.util.HashSet r5, $r23, $r24, $r25, $r26, $r27;
        java.lang.Throwable r6, r9, $r28, $r29;
        android.os.Message r7;
        java.util.HashMap r8, $r12;
        com.android.server.am.AppErrorResult $r10, r30;
        com.android.server.am.ActivityManagerService$MainHandler $r18;
        java.lang.StringBuilder $r19, $r21, $r22;
        java.lang.String $r20;
        long l6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.StrictMode$ViolationInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r1, "StrictMode");

        if r3 != null goto label01;

        return;

     label01:
        $i1 = i0 & 128;

        if $i1 == 0 goto label10;

        $i4 = virtualinvoke r2.<android.os.StrictMode$ViolationInfo: int hashCode()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        z0 = 1;

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        r5 = $r23;

        entermonitor $r23;

     label02:
        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        $z2 = virtualinvoke $r24.<java.util.HashSet: boolean contains(java.lang.Object)>(r4);

        if $z2 == 0 goto label03;

        z0 = 0;

        goto label05;

     label03:
        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        $i5 = virtualinvoke $r26.<java.util.HashSet: int size()>();

        if $i5 < 5000 goto label04;

        $r27 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        virtualinvoke $r27.<java.util.HashSet: void clear()>();

     label04:
        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        virtualinvoke $r25.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label05:
        exitmonitor r5;

     label06:
        goto label09;

     label07:
        $r29 := @caughtexception;

        r6 = $r29;

        exitmonitor r5;

     label08:
        throw r6;

     label09:
        if z0 == 0 goto label10;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord,android.os.StrictMode$ViolationInfo)>(r3, r2);

     label10:
        $i2 = i0 & 32;

        if $i2 == 0 goto label16;

        $r10 = new com.android.server.am.AppErrorResult;

        specialinvoke $r10.<com.android.server.am.AppErrorResult: void <init>()>();

        r30 = $r10;

        r31 = r0;

        entermonitor r0;

     label11:
        l6 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r7 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r7.<android.os.Message: int what> = 26;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r8 = $r12;

        virtualinvoke r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("result", r30);

        virtualinvoke r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r3);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("violationMask", $r15);

        virtualinvoke r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("info", r2);

        r7.<android.os.Message: java.lang.Object obj> = r8;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r18.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r7);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

        exitmonitor r31;

     label12:
        goto label15;

     label13:
        $r28 := @caughtexception;

        r9 = $r28;

        exitmonitor r31;

     label14:
        throw r9;

     label15:
        i7 = virtualinvoke r30.<com.android.server.am.AppErrorResult: int get()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleApplicationStrictModeViolation; res=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r20);

     label16:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private void logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord, android.os.StrictMode$ViolationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.os.StrictMode$ViolationInfo r2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        java.lang.String r3, r4, r9, $r15, $r24, $r35, $r37, $r40, $r42, $r58, $r61, $r63;
        android.os.DropBoxManager r5;
        java.lang.StringBuilder r6, r7, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r30, $r31, $r33, $r36, $r38, $r39, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55, $r57, $r59, $r64, $r66;
        java.lang.String[] r8, $r26;
        int i0, i1, $i2, $i4, $i5, $i7, $i9, $i10, $i12, $i13, $i14, $i15;
        java.lang.Throwable r10, $r67;
        java.lang.Object $r11;
        android.content.Context $r12;
        long $l3, $l8, $l11;
        byte $b6;
        android.app.ApplicationErrorReport$CrashInfo $r29, $r41, $r43;
        com.android.server.am.ActivityManagerService$17 $r32;
        com.android.server.am.ActivityManagerService$18 $r34;
        android.content.pm.ApplicationInfo $r62;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.os.StrictMode$ViolationInfo;

        if r2 != null goto label01;

        return;

     label01:
        if r1 == null goto label02;

        $r62 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i15 = $r62.<android.content.pm.ApplicationInfo: int flags>;

        $i14 = $i15 & 129;

        if $i14 == 0 goto label03;

     label02:
        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z0 = $z6;

        if r1 != null goto label05;

        $r63 = "unknown";

        goto label06;

     label05:
        $r63 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label06:
        r3 = $r63;

        if z0 == 0 goto label07;

        $r61 = "system_app_strictmode";

        goto label08;

     label07:
        $r61 = "data_app_strictmode";

     label08:
        r4 = $r61;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r12.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r5 = (android.os.DropBoxManager) $r11;

        if r5 == null goto label09;

        $z3 = virtualinvoke r5.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r4);

        if $z3 != 0 goto label10;

     label09:
        return;

     label10:
        if z0 == 0 goto label11;

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStrictModeBuffer>;

        goto label12;

     label11:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(int)>(1024);

     label12:
        r6 = $r13;

        r7 = r6;

        entermonitor r6;

     label13:
        $i2 = virtualinvoke r6.<java.lang.StringBuilder: int length()>();

        if $i2 != 0 goto label14;

        $z5 = 1;

        goto label15;

     label14:
        $z5 = 0;

     label15:
        z1 = $z5;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r1, r3, r6);

        $r16 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r15 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r20 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System-App: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime-Millis: ");

        $l3 = r2.<android.os.StrictMode$ViolationInfo: long violationUptimeMillis>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i5 = r2.<android.os.StrictMode$ViolationInfo: int violationNumThisLoop>;

        if $i5 == 0 goto label16;

        $r64 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loop-Violation-Number: ");

        $i13 = r2.<android.os.StrictMode$ViolationInfo: int violationNumThisLoop>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label16:
        $i4 = r2.<android.os.StrictMode$ViolationInfo: int numAnimationsRunning>;

        if $i4 == 0 goto label17;

        $r54 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animations-Running: ");

        $i12 = r2.<android.os.StrictMode$ViolationInfo: int numAnimationsRunning>;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label17:
        $r24 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String broadcastIntentAction>;

        if $r24 == null goto label18;

        $r57 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast-Intent-Action: ");

        $r58 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String broadcastIntentAction>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label18:
        $i7 = r2.<android.os.StrictMode$ViolationInfo: int durationMillis>;

        if $i7 == -1 goto label19;

        $r48 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration-Millis: ");

        $i10 = r2.<android.os.StrictMode$ViolationInfo: int durationMillis>;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label19:
        $l8 = r2.<android.os.StrictMode$ViolationInfo: long numInstances>;

        $b6 = $l8 cmp -1L;

        if $b6 == 0 goto label20;

        $r51 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance-Count: ");

        $l11 = r2.<android.os.StrictMode$ViolationInfo: long numInstances>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label20:
        $r26 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String[] tags>;

        if $r26 == null goto label22;

        r8 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String[] tags>;

        i0 = lengthof r8;

        i1 = 0;

     label21:
        if i1 >= i0 goto label22;

        r9 = r8[i1];

        $r46 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span-Tag: ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i1 = i1 + 1;

        goto label21;

     label22:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r29 = r2.<android.os.StrictMode$ViolationInfo: android.app.ApplicationErrorReport$CrashInfo crashInfo>;

        if $r29 == null goto label23;

        $r43 = r2.<android.os.StrictMode$ViolationInfo: android.app.ApplicationErrorReport$CrashInfo crashInfo>;

        $r42 = $r43.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        if $r42 == null goto label23;

        $r41 = r2.<android.os.StrictMode$ViolationInfo: android.app.ApplicationErrorReport$CrashInfo crashInfo>;

        $r40 = $r41.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

     label23:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i9 = virtualinvoke r6.<java.lang.StringBuilder: int length()>();

        if $i9 <= 65536 goto label24;

        $z4 = 1;

        goto label25;

     label24:
        $z4 = 0;

     label25:
        z2 = $z4;

        exitmonitor r7;

     label26:
        goto label29;

     label27:
        $r67 := @caughtexception;

        r10 = $r67;

        exitmonitor r7;

     label28:
        throw r10;

     label29:
        if z0 == 0 goto label30;

        if z2 == 0 goto label31;

     label30:
        $r32 = new com.android.server.am.ActivityManagerService$17;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<com.android.server.am.ActivityManagerService$17: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.StringBuilder,android.os.DropBoxManager,java.lang.String)>(r0, $r35, r6, r5, r4);

        virtualinvoke $r32.<com.android.server.am.ActivityManagerService$17: void start()>();

        return;

     label31:
        if z1 != 0 goto label32;

        return;

     label32:
        $r34 = new com.android.server.am.ActivityManagerService$18;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<com.android.server.am.ActivityManagerService$18: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,android.os.DropBoxManager,java.lang.String)>(r0, $r37, r5, r4);

        virtualinvoke $r34.<com.android.server.am.ActivityManagerService$18: void start()>();

        return;

        catch java.lang.Throwable from label13 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public boolean handleApplicationWtf(android.os.IBinder, java.lang.String, boolean, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        boolean z0;
        android.app.ApplicationErrorReport$CrashInfo r3;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        com.android.server.am.ActivityManagerService$MainHandler $r7;
        com.android.server.am.ActivityManagerService$19 $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.app.ApplicationErrorReport$CrashInfo;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if z0 == 0 goto label1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r8 = new com.android.server.am.ActivityManagerService$19;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$19: void <init>(com.android.server.am.ActivityManagerService,int,int,android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>(r0, i0, i1, r1, r2, r3);

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r8);

        return 0;

     label1:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord handleApplicationWtfInner(int,int,android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>(i0, i1, r1, r2, r3);

        if r4 == null goto label2;

        $i2 = r4.<com.android.server.am.ProcessRecord: int pid>;

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 == $i3 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r6, "wtf_is_fatal", 0);

        if $i4 == 0 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>(r4, r3);

        return 1;

     label2:
        return 0;
    }

    com.android.server.am.ProcessRecord handleApplicationWtfInner(int, int, android.os.IBinder, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i4;
        android.os.IBinder r1;
        java.lang.String r2, r5, $r11, $r12;
        android.app.ApplicationErrorReport$CrashInfo r3;
        com.android.server.am.ProcessRecord r4;
        java.lang.Object[] $r6;
        java.lang.Integer $r7, $r8, $r10;
        android.content.pm.ApplicationInfo $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.app.ApplicationErrorReport$CrashInfo;

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r1, "WTF");

        if r1 != null goto label1;

        $r12 = "system_server";

        goto label3;

     label1:
        if r4 != null goto label2;

        $r12 = "unknown";

        goto label3;

     label2:
        $r12 = r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label3:
        r5 = $r12;

        $r6 = newarray (java.lang.Object)[6];

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[1] = $r8;

        $r6[2] = r5;

        if r4 != null goto label4;

        $i4 = -1;

        goto label5;

     label4:
        $r9 = r4.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r9.<android.content.pm.ApplicationInfo: int flags>;

     label5:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[3] = $r10;

        $r6[4] = r2;

        $r11 = r3.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        $r6[5] = $r11;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30040, $r6);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("wtf", r4, r5, null, null, r2, null, null, r3);

        return r4;
    }

    private com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1, $r27;
        java.lang.String r2, $r18;
        int i0, i1, i2, i3, $i4, $i5;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5;
        java.lang.Throwable r6, $r25;
        com.android.internal.app.ProcessMap $r8, $r21;
        android.util.ArrayMap $r9, $r20;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;
        java.lang.Object $r22, $r24;
        android.app.IApplicationThread $r23, $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        return null;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r9 = virtualinvoke $r8.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i0 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label03:
        if i1 >= i0 goto label08;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r20 = virtualinvoke $r21.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r24 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (android.util.SparseArray) $r24;

        i2 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

        $r22 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r5 = (com.android.server.am.ProcessRecord) $r22;

        $r23 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r23 == null goto label06;

        $r26 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r27 = interfaceinvoke $r26.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r27 != r1 goto label06;

        exitmonitor r3;

     label05:
        return r5;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        i1 = i1 + 1;

        goto label03;

     label08:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find mystery application for ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        exitmonitor r3;

     label09:
        return null;

     label10:
        $r25 := @caughtexception;

        r6 = $r25;

        exitmonitor r3;

     label11:
        throw r6;

        catch java.lang.Throwable from label02 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord, java.lang.String, java.lang.StringBuilder)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r6, $r16, $r25, $r30, $r37;
        java.lang.StringBuilder r3, $r10, $r11, $r14, $r15, $r22, $r26, $r27, $r29, $r33, $r34, $r35, $r38, $r39;
        int i0, i1, $i2, $i3, $i4;
        android.content.pm.IPackageManager r5;
        android.content.pm.PackageInfo r7;
        java.lang.Throwable r8, $r32;
        android.content.pm.ApplicationInfo $r13;
        android.util.ArrayMap $r17, $r20;
        java.lang.Object $r19;
        android.os.RemoteException $r36, r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.StringBuilder;

        if r1 != null goto label01;

        $r33 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;

     label01:
        r4 = r0;

        entermonitor r0;

     label02:
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i0 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flags: 0x");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i1 = 0;

     label03:
        $r17 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $i2 = virtualinvoke $r17.<android.util.ArrayMap: int size()>();

        if i1 >= $i2 goto label08;

        $r20 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $r19 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r6 = (java.lang.String) $r19;

        $r22 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

     label04:
        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r7 = interfaceinvoke r5.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r6, 0, $i3);

        if r7 == null goto label05;

        $r26 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v");

        $i4 = r7.<android.content.pm.PackageInfo: int versionCode>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = r7.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r25 == null goto label05;

        $r29 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r30 = r7.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label05:
        goto label07;

     label06:
        $r36 := @caughtexception;

        r40 = $r36;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting package info: ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r37, r40);

     label07:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i1 = i1 + 1;

        goto label03;

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r32 := @caughtexception;

        r8 = $r32;

        exitmonitor r4;

     label11:
        throw r8;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static java.lang.String processClass(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        int $i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r1;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        if r0 == null goto label1;

        $i1 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 != $i0 goto label2;

     label1:
        return "system_server";

     label2:
        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label3;

        return "system_app";

     label3:
        return "data_app";
    }

    public void addErrorToDropBox(java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, java.lang.String, java.lang.String, java.io.File, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r6, r7, r10, $r15, $r22, $r29, $r39, $r45, $r49;
        com.android.server.am.ProcessRecord r2, $r38, $r42, $r46;
        com.android.server.am.ActivityRecord r4, r5;
        java.io.File r8;
        android.app.ApplicationErrorReport$CrashInfo r9;
        android.os.DropBoxManager r11;
        java.lang.StringBuilder r12, $r14, $r16, $r17, $r18, $r21, $r23, $r25, $r27, $r31, $r32, $r34, $r35, $r36, $r40, $r41, $r44, $r48, $r50;
        com.android.server.am.ActivityManagerService$20 r13, $r28;
        java.lang.Object $r19;
        android.content.Context $r20;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.server.am.ActivityRecord;

        r5 := @parameter4: com.android.server.am.ActivityRecord;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.io.File;

        r9 := @parameter8: android.app.ApplicationErrorReport$CrashInfo;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String processClass(com.android.server.am.ProcessRecord)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r19 = virtualinvoke $r20.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r11 = (android.os.DropBoxManager) $r19;

        if r11 == null goto label1;

        $z0 = virtualinvoke r11.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r10);

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(int)>(1024);

        r12 = $r21;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r2, r3, r12);

        if r4 == null goto label3;

        $r50 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity: ");

        $r49 = r4.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label3:
        if r5 == null goto label4;

        $r38 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r38 == null goto label4;

        $r42 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i0 = $r42.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = r2.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 == $i1 goto label4;

        $r41 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent-Process: ");

        $r46 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r45 = $r46.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label4:
        if r5 == null goto label5;

        if r5 == r4 goto label5;

        $r34 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent-Activity: ");

        $r39 = r5.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label5:
        if r6 == null goto label6;

        $r35 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label6:
        $r23 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r22 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z1 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

        if $z1 == 0 goto label7;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Debugger: Connected\n");

     label7:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r28 = new com.android.server.am.ActivityManagerService$20;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<com.android.server.am.ActivityManagerService$20: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.String,java.lang.StringBuilder,java.io.File,android.app.ApplicationErrorReport$CrashInfo,java.lang.String,android.os.DropBoxManager)>(r0, $r29, r7, r12, r8, r9, r10, r11);

        r13 = $r28;

        if r2 != null goto label8;

        virtualinvoke r13.<java.lang.Thread: void run()>();

        goto label9;

     label8:
        virtualinvoke r13.<java.lang.Thread: void start()>();

     label9:
        return;
    }

    private void crashApplication(com.android.server.am.ProcessRecord, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0, r7, r79;
        com.android.server.am.ProcessRecord r1;
        android.app.ApplicationErrorReport$CrashInfo r2;
        long l0, $l4, l15;
        java.lang.String r3, r4, r5, r8, $r25, $r31, $r33, $r39, $r43, $r46, $r47, $r49, $r51, $r58, $r59, $r64, $r65;
        com.android.server.am.AppErrorResult r6, $r12;
        int i1, i2, $i3, $i5, $i8, $i10, i16;
        java.util.HashMap r9, $r16;
        java.lang.Throwable r10, r11, $r68, $r70;
        android.app.IActivityController $r13, $r50;
        boolean $z0, $z2, $z3, $z4, $z5;
        com.android.server.am.ActivityManagerService$MainHandler $r17;
        android.content.Context $r20;
        android.os.UserHandle $r21;
        android.content.pm.ApplicationInfo $r22, $r63;
        com.android.internal.app.ProcessMap $r23;
        java.lang.Long $r24;
        java.lang.StringBuilder $r26, $r29, $r30, $r32, $r34, $r35, $r37, $r40, $r41, $r42, $r44, $r45, $r48, $r52, $r53, $r54, $r55, $r56, $r57, $r60, $r61, $r62, $r66, $r67, $r71, $r72;
        android.content.ComponentName $r28, $r36;
        android.os.Bundle $r38, r76;
        android.content.ActivityNotFoundException $r69, r80;
        com.android.server.Watchdog $r73;
        android.os.RemoteException $r74;
        android.os.Message r77;
        android.content.Intent r78;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.ApplicationErrorReport$CrashInfo;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionClassName>;

        r4 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        r5 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        if r3 == null goto label01;

        if r4 == null goto label01;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r71 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label01:
        if r3 == null goto label02;

        r4 = r3;

     label02:
        $r12 = new com.android.server.am.AppErrorResult;

        specialinvoke $r12.<com.android.server.am.AppErrorResult: void <init>()>();

        r6 = $r12;

        r7 = r0;

        entermonitor r0;

     label03:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r13 == null goto label17;

     label04:
        if r1 == null goto label05;

        $r64 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label06;

     label05:
        $r64 = null;

     label06:
        r8 = $r64;

        if r1 == null goto label07;

        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        goto label08;

     label07:
        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label08:
        i1 = $i8;

        if r1 == null goto label09;

        $r63 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r63.<android.content.pm.ApplicationInfo: int uid>;

        goto label10;

     label09:
        $i10 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label10:
        i2 = $i10;

        $r50 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r49 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        $z4 = interfaceinvoke $r50.<android.app.IActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>(r8, i1, r3, r4, l0, $r49);

        if $z4 != 0 goto label15;

        $r46 = "1";

        $r47 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z3 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z3 == 0 goto label11;

        $r58 = "Native crash";

        $r59 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionClassName>;

        $z5 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z5 == 0 goto label11;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip killing native crashed app ");

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r66 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") during testing");

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r65);

        goto label13;

     label11:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force-killing crashed app ");

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at watcher\'s request");

        $r51 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        if r1 == null goto label12;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("crash", 1);

        goto label13;

     label12:
        staticinvoke <android.os.Process: void killProcess(int)>(i1);

        staticinvoke <android.os.Process: int killProcessGroup(int,int)>(i2, i1);

     label13:
        exitmonitor r7;

     label14:
        return;

     label15:
        goto label17;

     label16:
        $r74 := @caughtexception;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r73 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r73.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label17:
        l15 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label21;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r28 == null goto label21;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in app ");

        $r31 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r36 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        if r3 == null goto label18;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r42 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r43);

     label18:
        if r4 == null goto label19;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r39);

     label19:
        $r38 = new android.os.Bundle;

        specialinvoke $r38.<android.os.Bundle: void <init>()>();

        r76 = $r38;

        virtualinvoke r76.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", r3);

        virtualinvoke r76.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", r4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, r76);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

        exitmonitor r7;

     label20:
        return;

     label21:
        if r1 == null goto label22;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5);

        if $z0 != 0 goto label24;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

        exitmonitor r7;

     label23:
        return;

     label24:
        r77 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r77.<android.os.Message: int what> = 1;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        r9 = $r16;

        virtualinvoke r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("result", r6);

        virtualinvoke r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r1);

        r77.<android.os.Message: java.lang.Object obj> = r9;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r77);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

        exitmonitor r7;

     label25:
        goto label28;

     label26:
        $r68 := @caughtexception;

        r10 = $r68;

        exitmonitor r7;

     label27:
        throw r10;

     label28:
        i16 = virtualinvoke r6.<com.android.server.am.AppErrorResult: int get()>();

        r78 = null;

        r79 = r0;

        entermonitor r0;

     label29:
        if r1 == null goto label30;

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z2 != 0 goto label30;

        $r23 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r25 = $r22.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke $r23.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r25, $i5, $r24);

     label30:
        if i16 != 1 goto label31;

        r78 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>(r1, l0, r2);

     label31:
        exitmonitor r79;

     label32:
        goto label35;

     label33:
        $r70 := @caughtexception;

        r11 = $r70;

        exitmonitor r79;

     label34:
        throw r11;

     label35:
        if r78 == null goto label39;

     label36:
        $r20 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r21 = new android.os.UserHandle;

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        specialinvoke $r21.<android.os.UserHandle: void <init>(int)>($i3);

        virtualinvoke $r20.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>(r78, $r21);

     label37:
        goto label39;

     label38:
        $r69 := @caughtexception;

        r80 = $r69;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "bug report receiver dissappeared", r80);

     label39:
        return;

        catch android.os.RemoteException from label04 to label13 with label16;
        catch java.lang.Throwable from label03 to label14 with label26;
        catch java.lang.Throwable from label15 to label20 with label26;
        catch java.lang.Throwable from label21 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label29 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch android.content.ActivityNotFoundException from label36 to label37 with label38;
    }

    android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord, long, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        android.app.ApplicationErrorReport$CrashInfo r2;
        android.app.ApplicationErrorReport r3;
        android.content.Intent r4, $r5;
        android.content.ComponentName $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r2 := @parameter2: android.app.ApplicationErrorReport$CrashInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ApplicationErrorReport createAppErrorReportLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>(r1, l0, r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.APP_ERROR");

        r4 = $r5;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r6);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.BUG_REPORT", r3);

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        return r4;
    }

    private android.app.ApplicationErrorReport createAppErrorReportLocked(com.android.server.am.ProcessRecord, long, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        android.app.ApplicationErrorReport$CrashInfo r2;
        android.app.ApplicationErrorReport r3, $r5;
        android.content.ComponentName $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.pm.ApplicationInfo $r6, $r11;
        java.lang.String $r7, $r9, $r10, $r15, $r16, $r21;
        int $i1, $i2;
        android.app.ActivityManager$ProcessErrorStateInfo $r12, $r17, $r18;
        android.app.ApplicationErrorReport$AnrInfo $r13, $r14, $r19, $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r2 := @parameter2: android.app.ApplicationErrorReport$CrashInfo;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        if $r4 != null goto label1;

        return null;

     label1:
        $z0 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 != 0 goto label2;

        $z4 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z4 != 0 goto label2;

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean forceCrashReport>;

        if $z6 != 0 goto label2;

        return null;

     label2:
        $r5 = new android.app.ApplicationErrorReport;

        specialinvoke $r5.<android.app.ApplicationErrorReport: void <init>()>();

        r3 = $r5;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r3.<android.app.ApplicationErrorReport: java.lang.String packageName> = $r7;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        r3.<android.app.ApplicationErrorReport: java.lang.String installerPackageName> = $r9;

        $r10 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r3.<android.app.ApplicationErrorReport: java.lang.String processName> = $r10;

        r3.<android.app.ApplicationErrorReport: long time> = l0;

        $r11 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        r3.<android.app.ApplicationErrorReport: boolean systemApp> = $z5;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z1 != 0 goto label5;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean forceCrashReport>;

        if $z3 == 0 goto label6;

     label5:
        r3.<android.app.ApplicationErrorReport: int type> = 1;

        r3.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$CrashInfo crashInfo> = r2;

        goto label7;

     label6:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z2 == 0 goto label7;

        r3.<android.app.ApplicationErrorReport: int type> = 2;

        $r13 = new android.app.ApplicationErrorReport$AnrInfo;

        specialinvoke $r13.<android.app.ApplicationErrorReport$AnrInfo: void <init>()>();

        r3.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo> = $r13;

        $r14 = r3.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo>;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        $r15 = $r12.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String tag>;

        $r14.<android.app.ApplicationErrorReport$AnrInfo: java.lang.String activity> = $r15;

        $r19 = r3.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo>;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        $r16 = $r17.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String shortMsg>;

        $r19.<android.app.ApplicationErrorReport$AnrInfo: java.lang.String cause> = $r16;

        $r20 = r3.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo>;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        $r21 = $r18.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String longMsg>;

        $r20.<android.app.ApplicationErrorReport$AnrInfo: java.lang.String info> = $r21;

     label7:
        return r3;
    }

    public java.util.List getProcessesInErrorState()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.util.ArrayList r1, $r7, $r9, $r20;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        com.android.server.am.ProcessRecord r3;
        android.app.ActivityManager$ProcessErrorStateInfo r4;
        java.lang.Throwable r5, $r21;
        java.lang.Object $r8;
        android.app.IApplicationThread $r10;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17, $r19;
        java.lang.String $r12, $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessesInErrorState");

        r1 = null;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", $i2);

        if $i3 != 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z0 = $z8;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        r2 = r0;

        entermonitor r0;

     label03:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = $i5 - 1;

     label04:
        if i1 < 0 goto label12;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ProcessRecord) $r8;

        if z0 != 0 goto label05;

        $i7 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i7 == i0 goto label05;

        goto label11;

     label05:
        $r10 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r10 == null goto label11;

        $z1 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z1 != 0 goto label06;

        $z6 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z6 == 0 goto label11;

     label06:
        r4 = null;

        $z3 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z3 == 0 goto label07;

        r4 = r3.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport>;

        goto label08;

     label07:
        $z2 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z2 == 0 goto label08;

        r4 = r3.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

     label08:
        if r4 == null goto label10;

        if r1 != null goto label09;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>(1);

        r1 = $r20;

     label09:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label11;

     label10:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing app error report, app = ");

        $r12 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crashing = ");

        $z4 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notResponding = ");

        $z5 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label11:
        i1 = i1 + -1;

        goto label04;

     label12:
        exitmonitor r2;

     label13:
        goto label16;

     label14:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r2;

     label15:
        throw r5;

     label16:
        return r1;

        catch java.lang.Throwable from label03 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    static int procStateToImportance(int, int, android.app.ActivityManager$RunningAppProcessInfo)
    {
        int i0, i1, i2;
        android.app.ActivityManager$RunningAppProcessInfo r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.app.ActivityManager$RunningAppProcessInfo;

        i2 = staticinvoke <android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportance(int)>(i0);

        if i2 != 400 goto label1;

        r0.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = i1;

        goto label2;

     label1:
        r0.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = 0;

     label2:
        return i2;
    }

    private void fillInProcMemInfo(com.android.server.am.ProcessRecord, android.app.ActivityManager$RunningAppProcessInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r4;
        android.app.ActivityManager$RunningAppProcessInfo r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.ActivityManager$RunningAppProcessInfo;

        $i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int pid> = $i2;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int uid> = $i3;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r4 != r1 goto label1;

        $i14 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i13 = $i14 | 1;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i13;

     label1:
        $z0 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label2;

        $i12 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i11 = $i12 | 2;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i11;

     label2:
        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label3;

        $i10 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i9 = $i10 | 4;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i9;

     label3:
        $i5 = r1.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int lastTrimLevel> = $i5;

        i0 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        i1 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $i6 = staticinvoke <com.android.server.am.ActivityManagerService: int procStateToImportance(int,int,android.app.ActivityManager$RunningAppProcessInfo)>(i1, i0, r2);

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = $i6;

        $i7 = r1.<com.android.server.am.ProcessRecord: int adjTypeCode>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonCode> = $i7;

        $i8 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int processState> = $i8;

        return;
    }

    public java.util.List getRunningAppProcesses()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        java.util.ArrayList r1, $r8, $r9, $r17;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.server.am.ProcessRecord r3, $r20, $r24, $r25;
        android.app.ActivityManager$RunningAppProcessInfo r4, $r13;
        com.android.server.am.ActivityRecord r5;
        java.lang.Throwable r6, $r26;
        android.app.IApplicationThread $r10;
        java.lang.Object $r11, $r15, $r16, $r18, $r19, $r21, $r23;
        java.lang.String $r12;
        java.lang.String[] $r14;
        android.content.ComponentName $r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningAppProcesses");

        r1 = null;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", $i2);

        if $i3 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z0 = $z7;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        r2 = r0;

        entermonitor r0;

     label03:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i1 = $i5 - 1;

     label04:
        if i1 < 0 goto label11;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ProcessRecord) $r11;

        if z0 != 0 goto label05;

        $i9 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i9 == i0 goto label05;

        goto label10;

     label05:
        $r10 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r10 == null goto label10;

        $z2 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z2 != 0 goto label10;

        $z1 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z1 != 0 goto label10;

        $r13 = new android.app.ActivityManager$RunningAppProcessInfo;

        $r12 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i6 = r3.<com.android.server.am.ProcessRecord: int pid>;

        $r14 = virtualinvoke r3.<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>();

        specialinvoke $r13.<android.app.ActivityManager$RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>($r12, $i6, $r14);

        r4 = $r13;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void fillInProcMemInfo(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo)>(r3, r4);

        $r15 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z3 = $r15 instanceof com.android.server.am.ProcessRecord;

        if $z3 == 0 goto label06;

        $r23 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r24 = (com.android.server.am.ProcessRecord) $r23;

        $i10 = $r24.<com.android.server.am.ProcessRecord: int pid>;

        r4.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonPid> = $i10;

        $i11 = r3.<com.android.server.am.ProcessRecord: int adjSourceProcState>;

        $i8 = staticinvoke <android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportance(int)>($i11);

        r4.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonImportance> = $i8;

        goto label07;

     label06:
        $r16 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z4 = $r16 instanceof com.android.server.am.ActivityRecord;

        if $z4 == 0 goto label07;

        $r19 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        r5 = (com.android.server.am.ActivityRecord) $r19;

        $r20 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r20 == null goto label07;

        $r25 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i7 = $r25.<com.android.server.am.ProcessRecord: int pid>;

        r4.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonPid> = $i7;

     label07:
        $r18 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z6 = $r18 instanceof android.content.ComponentName;

        if $z6 == 0 goto label08;

        $r21 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r22 = (android.content.ComponentName) $r21;

        r4.<android.app.ActivityManager$RunningAppProcessInfo: android.content.ComponentName importanceReasonComponent> = $r22;

     label08:
        if r1 != null goto label09;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r1 = $r17;

     label09:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label10:
        i1 = i1 + -1;

        goto label04;

     label11:
        exitmonitor r2;

     label12:
        goto label15;

     label13:
        $r26 := @caughtexception;

        r6 = $r26;

        exitmonitor r2;

     label14:
        throw r6;

     label15:
        return r1;

        catch java.lang.Throwable from label03 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public java.util.List getRunningExternalApplications()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.List r1;
        java.util.ArrayList r2, $r8;
        java.util.HashSet r3, $r9;
        java.util.Iterator r4, r15;
        android.app.ActivityManager$RunningAppProcessInfo r5;
        java.lang.String[] r6, $r11;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r7, r16;
        boolean $z0, $z1;
        java.lang.Object $r10, $r12;
        android.os.RemoteException $r13;
        android.content.pm.IPackageManager r14;
        android.content.pm.ApplicationInfo r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningExternalApplications");

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        if r1 == null goto label10;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 <= 0 goto label10;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r3 = $r9;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.app.ActivityManager$RunningAppProcessInfo) $r12;

        $r11 = r5.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String[] pkgList>;

        if $r11 == null goto label03;

        r6 = r5.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String[] pkgList>;

        i0 = lengthof r6;

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        r7 = r6[i1];

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r7);

        i1 = i1 + 1;

        goto label02;

     label03:
        goto label01;

     label04:
        r14 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r10 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r10;

     label06:
        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r17 = interfaceinvoke r14.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r16, 0, $i3);

        $i4 = r17.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & 262144;

        if $i5 == 0 goto label07;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r17);

     label07:
        goto label09;

     label08:
        $r13 := @caughtexception;

     label09:
        goto label05;

     label10:
        return r2;

        catch android.os.RemoteException from label06 to label07 with label08;
    }

    public void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.ActivityManager$RunningAppProcessInfo r1;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray r4, $r8, $r9;
        java.lang.Throwable r5, r6, $r11, $r12;
        int $i0;
        java.lang.Object $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ActivityManager$RunningAppProcessInfo;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getMyMemoryState");

        r2 = r0;

        entermonitor r0;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r8;

        entermonitor $r8;

     label02:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r3 = (com.android.server.am.ProcessRecord) $r10;

        exitmonitor r4;

     label03:
        goto label06;

     label04:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label05:
        throw r5;

     label06:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void fillInProcMemInfo(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo)>(r3, r1);

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        r6 = $r12;

        exitmonitor r2;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0, r7, r87, r91, r95, r99, r100, r103, r107, r108;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, r89, r90, r93, r94, r97, r98, r102, r105, r106;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        java.lang.String r4, r5, r6, $r19, $r21, $r22, $r23, $r25, $r27, $r28, $r30, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r47, $r50, $r53, $r58, $r60, $r63, $r69, $r70, $r80, r88, r92, r96, r101, r104;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i45;
        java.lang.Throwable r8, r9, r10, r11, r12, r13, r14, r15, r16, $r75, $r76, $r77, $r78, $r79, $r83, $r84, $r85, $r86;
        com.android.server.am.ActiveServices $r17, $r46, $r57;
        com.android.server.am.TaskPersister $r48;
        java.lang.StringBuilder $r49, $r51, $r52, $r54, $r55, $r56, $r59, $r61, $r62, $r64, $r65, $r66, $r67, $r68, $r71, $r72, $r73, $r74, $r81, $r82;
        char $c35;
        long l44;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i42 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i43 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r82 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        return;

     label01:
        z0 = 0;

        z1 = 0;

        r4 = null;

        i0 = 0;

     label02:
        $i1 = lengthof r3;

        if i0 >= $i1 goto label08;

        r5 = r3[i0];

        if r5 == null goto label08;

        $i36 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i36 <= 0 goto label08;

        $c35 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        if $c35 == 45 goto label03;

        goto label08;

     label03:
        i0 = i0 + 1;

        $r60 = "-a";

        $z26 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z26 == 0 goto label04;

        z0 = 1;

        goto label07;

     label04:
        $r69 = "-c";

        $z28 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z28 == 0 goto label05;

        z1 = 1;

        goto label07;

     label05:
        $r70 = "-h";

        $z29 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z29 == 0 goto label06;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Activity manager dump options:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  [-a] [-c] [-h] [cmd] ...");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  cmd may be one of:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    a[ctivities]: activity stack state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    r[recents]: recent activities state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    b[roadcasts] [PACKAGE_NAME] [history [-s]]: broadcast state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    i[ntents] [PACKAGE_NAME]: pending intent state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    p[rocesses] [PACKAGE_NAME]: process state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    o[om]: out of memory management");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    prov[iders] [COMP_SPEC ...]: content provider state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    provider [COMP_SPEC]: provider client-side state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    s[ervices] [COMP_SPEC ...]: service state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    service [COMP_SPEC]: service client-side state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    package [PACKAGE_NAME]: all state related to given package");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    all: dump all activities");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    top: dump the top activity");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    write: write all pending state to storage");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  cmd may also be a COMP_SPEC to dump activities.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  COMP_SPEC may be a component name (com.foo/.myApp),");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    a partial substring in a component name, a");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    hex object identifier.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -a: include all available server state.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -c: include client state.");

        return;

     label06:
        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r63 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r63);

     label07:
        goto label02;

     label08:
        l44 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z2 = 0;

        $i3 = lengthof r3;

        if i0 >= $i3 goto label85;

        r6 = r3[i0];

        i0 = i0 + 1;

        $r19 = "activities";

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z3 != 0 goto label09;

        $r22 = "a";

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z4 == 0 goto label15;

     label09:
        r7 = r0;

        entermonitor r0;

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, 1, z1, null);

        exitmonitor r7;

     label11:
        goto label14;

     label12:
        $r84 := @caughtexception;

        r8 = $r84;

        exitmonitor r7;

     label13:
        throw r8;

     label14:
        goto label84;

     label15:
        $r21 = "recents";

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z5 != 0 goto label16;

        $r23 = "r";

        $z7 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z7 == 0 goto label22;

     label16:
        r87 = r0;

        entermonitor r0;

     label17:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpRecentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, 1, null);

        exitmonitor r87;

     label18:
        goto label21;

     label19:
        $r76 := @caughtexception;

        r9 = $r76;

        exitmonitor r87;

     label20:
        throw r9;

     label21:
        goto label84;

     label22:
        $r25 = "broadcasts";

        $z6 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z6 != 0 goto label23;

        $r27 = "b";

        $z9 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z9 == 0 goto label31;

     label23:
        $i4 = lengthof r3;

        if i0 < $i4 goto label24;

        r88 = null;

        r89 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label25;

     label24:
        r88 = r3[i0];

        i0 = i0 + 1;

        $i6 = lengthof r3;

        $i7 = $i6 - i0;

        r90 = newarray (java.lang.String)[$i7];

        $i5 = lengthof r3;

        if $i5 <= 2 goto label25;

        $i9 = lengthof r3;

        $i8 = $i9 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r90, 0, $i8);

     label25:
        r91 = r0;

        entermonitor r0;

     label26:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, 1, r88);

        exitmonitor r91;

     label27:
        goto label30;

     label28:
        $r79 := @caughtexception;

        r10 = $r79;

        exitmonitor r91;

     label29:
        throw r10;

     label30:
        goto label84;

     label31:
        $r28 = "intents";

        $z8 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z8 != 0 goto label32;

        $r30 = "i";

        $z10 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z10 == 0 goto label40;

     label32:
        $i10 = lengthof r3;

        if i0 < $i10 goto label33;

        r92 = null;

        r93 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label34;

     label33:
        r92 = r3[i0];

        i0 = i0 + 1;

        $i13 = lengthof r3;

        $i12 = $i13 - i0;

        r94 = newarray (java.lang.String)[$i12];

        $i11 = lengthof r3;

        if $i11 <= 2 goto label34;

        $i15 = lengthof r3;

        $i14 = $i15 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r94, 0, $i14);

     label34:
        r95 = r0;

        entermonitor r0;

     label35:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, 1, r92);

        exitmonitor r95;

     label36:
        goto label39;

     label37:
        $r75 := @caughtexception;

        r12 = $r75;

        exitmonitor r95;

     label38:
        throw r12;

     label39:
        goto label84;

     label40:
        $r32 = "processes";

        $z11 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z11 != 0 goto label41;

        $r35 = "p";

        $z12 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z12 == 0 goto label49;

     label41:
        $i19 = lengthof r3;

        if i0 < $i19 goto label42;

        r96 = null;

        r97 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label43;

     label42:
        r96 = r3[i0];

        i0 = i0 + 1;

        $i16 = lengthof r3;

        $i17 = $i16 - i0;

        r98 = newarray (java.lang.String)[$i17];

        $i18 = lengthof r3;

        if $i18 <= 2 goto label43;

        $i20 = lengthof r3;

        $i21 = $i20 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r98, 0, $i21);

     label43:
        r99 = r0;

        entermonitor r0;

     label44:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, 1, r96);

        exitmonitor r99;

     label45:
        goto label48;

     label46:
        $r78 := @caughtexception;

        r11 = $r78;

        exitmonitor r99;

     label47:
        throw r11;

     label48:
        goto label84;

     label49:
        $r33 = "oom";

        $z13 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z13 != 0 goto label50;

        $r38 = "o";

        $z17 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z17 == 0 goto label56;

     label50:
        r100 = r0;

        entermonitor r0;

     label51:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)>(r1, r2, r3, i0, 1);

        exitmonitor r100;

     label52:
        goto label55;

     label53:
        $r85 := @caughtexception;

        r14 = $r85;

        exitmonitor r100;

     label54:
        throw r14;

     label55:
        goto label84;

     label56:
        $r36 = "provider";

        $z14 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z14 == 0 goto label60;

        $i37 = lengthof r3;

        if i0 < $i37 goto label57;

        r101 = null;

        r102 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label58;

     label57:
        r101 = r3[i0];

        i0 = i0 + 1;

        $i40 = lengthof r3;

        $i39 = $i40 - i0;

        r102 = newarray (java.lang.String)[$i39];

        $i41 = lengthof r3;

        if $i41 <= 2 goto label58;

        $i34 = lengthof r3;

        $i33 = $i34 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r102, 0, $i33);

     label58:
        $z27 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r101, r102, 0, z0);

        if $z27 != 0 goto label59;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No providers match: ");

        $r59 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

     label59:
        goto label84;

     label60:
        $r37 = "providers";

        $z15 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z15 != 0 goto label61;

        $r42 = "prov";

        $z20 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z20 == 0 goto label67;

     label61:
        r103 = r0;

        entermonitor r0;

     label62:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, 1, null);

        exitmonitor r103;

     label63:
        goto label66;

     label64:
        $r86 := @caughtexception;

        r13 = $r86;

        exitmonitor r103;

     label65:
        throw r13;

     label66:
        goto label84;

     label67:
        $r39 = "service";

        $z18 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z18 == 0 goto label71;

        $i25 = lengthof r3;

        if i0 < $i25 goto label68;

        r104 = null;

        r105 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label69;

     label68:
        r104 = r3[i0];

        i0 = i0 + 1;

        $i24 = lengthof r3;

        $i23 = $i24 - i0;

        r105 = newarray (java.lang.String)[$i23];

        $i32 = lengthof r3;

        if $i32 <= 2 goto label69;

        $i31 = lengthof r3;

        $i38 = $i31 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r105, 0, $i38);

     label69:
        $r57 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z25 = virtualinvoke $r57.<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r104, r105, 0, z0);

        if $z25 != 0 goto label70;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No services match: ");

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

     label70:
        goto label84;

     label71:
        $r40 = "package";

        $z19 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z19 == 0 goto label75;

        $i22 = lengthof r3;

        if i0 < $i22 goto label72;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("package: no package name specified");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        goto label74;

     label72:
        r4 = r3[i0];

        i45 = i0 + 1;

        $i30 = lengthof r3;

        $i29 = $i30 - i45;

        r106 = newarray (java.lang.String)[$i29];

        $i28 = lengthof r3;

        if $i28 <= 2 goto label73;

        $i27 = lengthof r3;

        $i26 = $i27 - i45;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i45, r106, 0, $i26);

     label73:
        r3 = r106;

        i0 = 0;

        z2 = 1;

     label74:
        goto label84;

     label75:
        $r47 = "services";

        $z22 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z22 != 0 goto label76;

        $r44 = "s";

        $z21 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z21 == 0 goto label82;

     label76:
        r107 = r0;

        entermonitor r0;

     label77:
        $r46 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r46.<com.android.server.am.ActiveServices: void dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, 1, z1, null);

        exitmonitor r107;

     label78:
        goto label81;

     label79:
        $r77 := @caughtexception;

        r16 = $r77;

        exitmonitor r107;

     label80:
        throw r16;

     label81:
        goto label84;

     label82:
        $r43 = "write";

        $z23 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z23 == 0 goto label83;

        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r48.<com.android.server.am.TaskPersister: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("All tasks persisted.");

        return;

     label83:
        $z24 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r6, r3, i0, z0);

        if $z24 != 0 goto label84;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad activity command, or no activities match: ");

        $r49 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

     label84:
        if z2 != 0 goto label85;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l44);

        return;

     label85:
        r108 = r0;

        entermonitor r0;

     label86:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label87;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label87:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label88;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label88:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label89;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label89:
        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r17.<com.android.server.am.ActiveServices: void dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z0, z1, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label90;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label90:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpRecentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label91;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label91:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z0, z1, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label92;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label92:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        exitmonitor r108;

     label93:
        goto label96;

     label94:
        $r83 := @caughtexception;

        r15 = $r83;

        exitmonitor r108;

     label95:
        throw r15;

     label96:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l44);

        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
        catch java.lang.Throwable from label62 to label63 with label64;
        catch java.lang.Throwable from label64 to label65 with label64;
        catch java.lang.Throwable from label77 to label78 with label79;
        catch java.lang.Throwable from label79 to label80 with label79;
        catch java.lang.Throwable from label86 to label93 with label94;
        catch java.lang.Throwable from label94 to label95 with label94;
    }

    void dumpActivitiesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0;
        boolean z0, z1, z2, z3, z4;
        java.lang.String r4;
        com.android.server.am.ActivityStackSupervisor $r5, $r7;
        com.android.server.am.ActivityRecord $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)");

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z2 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,boolean,java.lang.String)>(r1, r2, z0, z1, r4);

        z3 = z2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        z4 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r6, r4, z3, "  mFocusedActivity: ");

        if z4 == 0 goto label1;

        z2 = 1;

        z3 = 0;

     label1:
        if r4 != null goto label3;

        if z3 == 0 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label2:
        z2 = 1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: void dump(java.io.PrintWriter,java.lang.String)>(r2, "  ");

     label3:
        if z2 != 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label4:
        return;
    }

    void dumpRecentsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, $i3;
        boolean z0, z1, z2, $z3;
        java.lang.String r4;
        com.android.server.am.TaskRecord r5, $r12;
        java.util.ArrayList $r6, $r7, $r8, $r9, $r10;
        java.lang.Object $r11, $r13;
        android.content.ComponentName $r14, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER RECENT TASKS (dumpsys activity recents)");

        z1 = 0;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        if $r6 == null goto label5;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label5;

        z2 = 0;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.TaskRecord) $r11;

        if r4 == null goto label2;

        $r15 = r5.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        if $r15 == null goto label4;

        $r14 = r5.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label2;

        goto label4;

     label2:
        if z2 != 0 goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Recent tasks:");

        z2 = 1;

        z1 = 1;

     label3:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Recent #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        if z0 == 0 goto label4;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r13 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r12 = (com.android.server.am.TaskRecord) $r13;

        virtualinvoke $r12.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        if z1 != 0 goto label6;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label6:
        return;
    }

    void dumpProcessesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i59, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, i71, i72, i73, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z42, $z43, $z44, $z45, z46, z47, z48, z49, z50, z51, z52;
        java.lang.String r4, $r25, $r30, $r34, $r39, $r42, $r43, $r44, $r47, $r52, $r60, $r62, $r66, $r74, $r78, $r90, $r96, $r102, $r106, $r113, $r121, $r130, $r131, $r138, $r139, $r140, $r141, $r142, $r144, $r146, $r150, $r161, $r166, $r183, $r190, $r197, $r198, $r225, $r229, $r230, $r231, $r237, $r238, $r239, $r240, $r241, $r243, $r244, $r245, $r267, $r268, $r290, r297, r300, r309;
        android.util.SparseArray r5, $r11, $r13, $r14, $r16, $r193, $r210, $r246, $r248, $r250, $r252, $r254, $r257, $r262, $r263, $r265, $r274, $r277, r292, r294, r298, r301;
        com.android.server.am.ProcessRecord r6, r9, $r21, $r26, $r27, $r50, $r147, $r182, $r185, $r189, $r199, $r200, $r206, r291, r293, r295, r302;
        java.lang.Throwable r7, r8, r10, $r284, $r285, $r286;
        java.util.ArrayList $r12, $r15, $r17, $r18, $r124, $r218, $r226, $r258, $r259, $r264, $r276, $r278, $r279, $r282;
        android.util.ArrayMap $r19, $r23, $r181, $r188, $r204, $r228, $r255, $r261, $r266, $r271, $r280, $r283, $r288, r296, r299;
        com.android.internal.app.ProcessMap $r20, $r22, $r213, $r217, $r227, $r234, $r269, $r270;
        java.lang.StringBuilder $r24, $r28, $r29, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r40, $r41, $r45, $r46, $r48, $r49, $r51, $r53, $r54, $r55, $r56, $r57, $r59, $r61, $r63, $r64, $r65, $r68, $r69, $r70, $r71, $r72, $r73, $r75, $r76, $r77, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r91, $r92, $r93, $r97, $r98, $r99, $r100, $r101, $r103, $r104, $r105, $r107, $r108, $r109, $r112, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r122, $r123, $r125, $r126, $r127, $r128, $r129, $r133, $r134, $r135, $r136, $r137, $r143, $r145, $r148, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r162, $r164, $r165, $r167, $r168, $r169, $r170, $r172, $r184, $r186, $r187, $r191, $r194, $r195, $r196, $r201, $r202, $r205, $r207, r306;
        android.os.ParcelFileDescriptor $r58, $r149;
        android.app.IActivityController $r67, $r132;
        android.os.PowerManager$WakeLock $r94, $r111;
        com.android.server.am.ActivityStackSupervisor $r95, $r110;
        long $l22, $l23, $l31, $l32, $l37, $l47, $l57, $l58, l74, l88;
        com.android.server.am.CompatModePackages $r160, $r178;
        com.android.server.am.ActivityStack $r163;
        android.content.res.Configuration $r171;
        java.lang.Integer $r173, $r275;
        java.lang.Object $r174, $r175, $r176, $r209, $r212, $r214, $r215, $r216, $r232, $r233, $r235, $r236, $r242, $r247, $r249, $r253, $r256, $r272, $r281, $r287, $r289;
        java.util.Set $r177;
        java.util.HashMap $r179, $r180;
        int[] $r192, $r208, $r224;
        android.os.UserHandle $r211;
        android.util.SparseIntArray $r219, $r220, $r221, $r222, $r223, r305;
        char $c48;
        com.android.server.am.ActivityManagerService$ForegroundToken $r251;
        java.lang.Long $r260;
        java.lang.Object[] $r273;
        com.android.server.am.ActivityManagerService$BadProcessInfo r303;
        com.android.server.am.UserStartedState r304;
        java.util.Iterator r307;
        java.util.Map$Entry r308;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        z1 = 0;

        z2 = 0;

        i1 = 0;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)");

        if z0 == 0 goto label009;

        $r270 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r271 = virtualinvoke $r270.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i2 = virtualinvoke $r271.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label001:
        if i3 >= i2 goto label009;

        $r269 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r288 = virtualinvoke $r269.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r287 = virtualinvoke $r288.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r5 = (android.util.SparseArray) $r287;

        i4 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        i5 = 0;

     label002:
        if i5 >= i4 goto label008;

        $r289 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r6 = (com.android.server.am.ProcessRecord) $r289;

        if r4 == null goto label003;

        $r283 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z43 = virtualinvoke $r283.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z43 != 0 goto label003;

        goto label007;

     label003:
        if z1 != 0 goto label004;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  All known processes:");

        z1 = 1;

        z2 = 1;

     label004:
        $z44 = r6.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z44 == 0 goto label005;

        $r290 = "  *PERS*";

        goto label006;

     label005:
        $r290 = "  *APP*";

     label006:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r290);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" UID ");

        $i70 = virtualinvoke r5.<android.util.SparseArray: int keyAt(int)>(i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i70);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        virtualinvoke r6.<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        $z45 = r6.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z45 == 0 goto label007;

        i1 = i1 + 1;

     label007:
        i5 = i5 + 1;

        goto label002;

     label008:
        i3 = i3 + 1;

        goto label001;

     label009:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i10 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        if $i10 <= 0 goto label015;

        z46 = 0;

        i71 = 0;

     label010:
        $r277 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i62 = virtualinvoke $r277.<android.util.SparseArray: int size()>();

        if i71 >= $i62 goto label015;

        $r274 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $r272 = virtualinvoke $r274.<android.util.SparseArray: java.lang.Object valueAt(int)>(i71);

        r291 = (com.android.server.am.ProcessRecord) $r272;

        if r4 == null goto label011;

        $r266 = r291.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z40 = virtualinvoke $r266.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z40 != 0 goto label011;

        goto label014;

     label011:
        if z46 != 0 goto label013;

        if z1 == 0 goto label012;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label012:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Isolated process list (sorted by uid):");

        z2 = 1;

        z46 = 1;

        z1 = 1;

     label013:
        $r273 = newarray (java.lang.Object)[3];

        $r273[0] = "    ";

        $r275 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i71);

        $r273[1] = $r275;

        $r267 = virtualinvoke r291.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        $r273[2] = $r267;

        $r268 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%sIsolated #%2d: %s", $r273);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r268);

     label014:
        i71 = i71 + 1;

        goto label010;

     label015:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i11 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i11 <= 0 goto label017;

        if z1 == 0 goto label016;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label016:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Process LRU list (sorted by oom_adj, ");

        $r279 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i69 = virtualinvoke $r279.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i69);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" total, non-act at ");

        $r282 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i68 = virtualinvoke $r282.<java.util.ArrayList: int size()>();

        $i67 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i65 = $i68 - $i67;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i65);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", non-svc at ");

        $r276 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i64 = virtualinvoke $r276.<java.util.ArrayList: int size()>();

        $i63 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i66 = $i64 - $i63;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i66);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r278 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r2, r0, $r278, "    ", "Proc", "PERS", 0, r4);

        z1 = 1;

        z2 = 1;

     label017:
        if z0 != 0 goto label018;

        if r4 == null goto label029;

     label018:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r292 = $r14;

        entermonitor $r14;

     label019:
        z47 = 0;

        i72 = 0;

     label020:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i12 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if i72 >= $i12 goto label025;

        $r257 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r253 = virtualinvoke $r257.<android.util.SparseArray: java.lang.Object valueAt(int)>(i72);

        r293 = (com.android.server.am.ProcessRecord) $r253;

        if r4 == null goto label021;

        $r280 = r293.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z42 = virtualinvoke $r280.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z42 != 0 goto label021;

        goto label024;

     label021:
        if z47 != 0 goto label023;

        if z1 == 0 goto label022;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label022:
        z1 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  PID mappings:");

        z47 = 1;

        z2 = 1;

     label023:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    PID #");

        $r252 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i55 = virtualinvoke $r252.<android.util.SparseArray: int keyAt(int)>(i72);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i55);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r254 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r281 = virtualinvoke $r254.<android.util.SparseArray: java.lang.Object valueAt(int)>(i72);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r281);

     label024:
        i72 = i72 + 1;

        goto label020;

     label025:
        exitmonitor r292;

     label026:
        goto label029;

     label027:
        $r286 := @caughtexception;

        r8 = $r286;

        exitmonitor r292;

     label028:
        throw r8;

     label029:
        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i14 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if $i14 <= 0 goto label040;

        $r265 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r294 = $r265;

        entermonitor $r265;

     label030:
        z48 = 0;

        i73 = 0;

     label031:
        $r262 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i59 = virtualinvoke $r262.<android.util.SparseArray: int size()>();

        if i73 >= $i59 goto label036;

        $r250 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r263 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r249 = virtualinvoke $r263.<android.util.SparseArray: java.lang.Object valueAt(int)>(i73);

        $r251 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r249;

        $i54 = $r251.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r247 = virtualinvoke $r250.<android.util.SparseArray: java.lang.Object get(int)>($i54);

        r295 = (com.android.server.am.ProcessRecord) $r247;

        if r4 == null goto label032;

        if r295 == null goto label035;

        $r255 = r295.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z38 = virtualinvoke $r255.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z38 != 0 goto label032;

        goto label035;

     label032:
        if z48 != 0 goto label034;

        if z1 == 0 goto label033;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label033:
        z1 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Foreground Processes:");

        z48 = 1;

        z2 = 1;

     label034:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    PID #");

        $r246 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i53 = virtualinvoke $r246.<android.util.SparseArray: int keyAt(int)>(i73);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i53);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r248 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r256 = virtualinvoke $r248.<android.util.SparseArray: java.lang.Object valueAt(int)>(i73);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r256);

     label035:
        i73 = i73 + 1;

        goto label031;

     label036:
        exitmonitor r294;

     label037:
        goto label040;

     label038:
        $r285 := @caughtexception;

        r7 = $r285;

        exitmonitor r294;

     label039:
        throw r7;

     label040:
        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i13 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i13 <= 0 goto label042;

        if z1 == 0 goto label041;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label041:
        z1 = 1;

        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Persisent processes that are starting:");

        $r264 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r0, $r264, "    ", "Starting Norm", "Restarting PERS", r4);

     label042:
        $r18 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $i16 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if $i16 <= 0 goto label044;

        if z1 == 0 goto label043;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label043:
        z1 = 1;

        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are being removed:");

        $r259 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r0, $r259, "    ", "Removed Norm", "Removed PERS", r4);

     label044:
        $r17 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $i15 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i15 <= 0 goto label046;

        if z1 == 0 goto label045;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label045:
        z1 = 1;

        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are on old until the system is ready:");

        $r258 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r0, $r258, "    ", "OnHold Norm", "OnHold PERS", r4);

     label046:
        z49 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z1, z0, r4);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r19 = virtualinvoke $r20.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i17 = virtualinvoke $r19.<android.util.ArrayMap: int size()>();

        if $i17 <= 0 goto label054;

        z50 = 0;

        l74 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r227 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        r296 = virtualinvoke $r227.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i75 = virtualinvoke r296.<android.util.ArrayMap: int size()>();

        i76 = 0;

     label047:
        if i76 >= i75 goto label054;

        $r236 = virtualinvoke r296.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i76);

        r297 = (java.lang.String) $r236;

        $r235 = virtualinvoke r296.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i76);

        r298 = (android.util.SparseArray) $r235;

        i7 = virtualinvoke r298.<android.util.SparseArray: int size()>();

        i6 = 0;

     label048:
        if i6 >= i7 goto label053;

        i8 = virtualinvoke r298.<android.util.SparseArray: int keyAt(int)>(i6);

        $r234 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r233 = virtualinvoke $r234.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r297, i8);

        r9 = (com.android.server.am.ProcessRecord) $r233;

        if r4 == null goto label049;

        if r9 == null goto label052;

        $r261 = r9.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z39 = virtualinvoke $r261.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z39 != 0 goto label049;

        goto label052;

     label049:
        if z50 != 0 goto label051;

        if z49 == 0 goto label050;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label050:
        z49 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Time since processes crashed:");

        z50 = 1;

        z2 = 1;

     label051:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Process ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r297);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" uid ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": last crashed ");

        $r232 = virtualinvoke r298.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r260 = (java.lang.Long) $r232;

        $l57 = virtualinvoke $r260.<java.lang.Long: long longValue()>();

        $l58 = l74 - $l57;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l58, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ago");

     label052:
        i6 = i6 + 1;

        goto label048;

     label053:
        i76 = i76 + 1;

        goto label047;

     label054:
        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r23 = virtualinvoke $r22.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i18 = virtualinvoke $r23.<android.util.ArrayMap: int size()>();

        if $i18 <= 0 goto label067;

        z51 = 0;

        $r213 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        r299 = virtualinvoke $r213.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i77 = virtualinvoke r299.<android.util.ArrayMap: int size()>();

        i78 = 0;

     label055:
        if i78 >= i77 goto label067;

        $r215 = virtualinvoke r299.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i78);

        r300 = (java.lang.String) $r215;

        $r214 = virtualinvoke r299.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i78);

        r301 = (android.util.SparseArray) $r214;

        i79 = virtualinvoke r301.<android.util.SparseArray: int size()>();

        i80 = 0;

     label056:
        if i80 >= i79 goto label066;

        i81 = virtualinvoke r301.<android.util.SparseArray: int keyAt(int)>(i80);

        $r217 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r216 = virtualinvoke $r217.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r300, i81);

        r302 = (com.android.server.am.ProcessRecord) $r216;

        if r4 == null goto label057;

        if r302 == null goto label065;

        $r228 = r302.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z37 = virtualinvoke $r228.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z37 != 0 goto label057;

        goto label065;

     label057:
        if z51 != 0 goto label059;

        if z49 == 0 goto label058;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label058:
        z49 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Bad processes:");

        z2 = 1;

     label059:
        $r242 = virtualinvoke r301.<android.util.SparseArray: java.lang.Object valueAt(int)>(i80);

        r303 = (com.android.server.am.ActivityManagerService$BadProcessInfo) $r242;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Bad process ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r300);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" uid ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i81);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": crashed at time ");

        $l47 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: long time>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l47);

        $r240 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String shortMsg>;

        if $r240 == null goto label060;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      Short msg: ");

        $r229 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String shortMsg>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r229);

     label060:
        $r241 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String longMsg>;

        if $r241 == null goto label061;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      Long msg: ");

        $r230 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String longMsg>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r230);

     label061:
        $r238 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        if $r238 == null goto label065;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Stack:");

        i82 = 0;

        i9 = 0;

     label062:
        $r239 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $i46 = virtualinvoke $r239.<java.lang.String: int length()>();

        if i9 >= $i46 goto label064;

        $r243 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $c48 = virtualinvoke $r243.<java.lang.String: char charAt(int)>(i9);

        if $c48 != 10 goto label063;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        $r231 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $i49 = i9 - i82;

        virtualinvoke r2.<java.io.PrintWriter: void write(java.lang.String,int,int)>($r231, i82, $i49);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i82 = i9 + 1;

     label063:
        i9 = i9 + 1;

        goto label062;

     label064:
        $r237 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $i52 = virtualinvoke $r237.<java.lang.String: int length()>();

        if i82 >= $i52 goto label065;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        $r244 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $r245 = r303.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $i51 = virtualinvoke $r245.<java.lang.String: int length()>();

        $i50 = $i51 - i82;

        virtualinvoke r2.<java.io.PrintWriter: void write(java.lang.String,int,int)>($r244, i82, $i50);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label065:
        i80 = i80 + 1;

        goto label056;

     label066:
        i78 = i78 + 1;

        goto label055;

     label067:
        if r4 != null goto label083;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z49 = 0;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mStartedUsers:");

        i83 = 0;

     label068:
        $r193 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i36 = virtualinvoke $r193.<android.util.SparseArray: int size()>();

        if i83 >= $i36 goto label069;

        $r210 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r212 = virtualinvoke $r210.<android.util.SparseArray: java.lang.Object valueAt(int)>(i83);

        r304 = (com.android.server.am.UserStartedState) $r212;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    User #");

        $r211 = r304.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        $i39 = virtualinvoke $r211.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i39);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r304.<com.android.server.am.UserStartedState: void dump(java.lang.String,java.io.PrintWriter)>("", r2);

        i83 = i83 + 1;

        goto label068;

     label069:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mStartedUserArray: [");

        i84 = 0;

     label070:
        $r192 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $i40 = lengthof $r192;

        if i84 >= $i40 goto label072;

        if i84 <= 0 goto label071;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label071:
        $r208 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $i38 = $r208[i84];

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i38);

        i84 = i84 + 1;

        goto label070;

     label072:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("]");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mUserLru: [");

        i85 = 0;

     label073:
        $r218 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $i41 = virtualinvoke $r218.<java.util.ArrayList: int size()>();

        if i85 >= $i41 goto label075;

        if i85 <= 0 goto label074;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label074:
        $r226 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r209 = virtualinvoke $r226.<java.util.ArrayList: java.lang.Object get(int)>(i85);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>($r209);

        i85 = i85 + 1;

        goto label073;

     label075:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("]");

        if z0 == 0 goto label076;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mStartedUserArray: ");

        $r224 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $r225 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r224);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r225);

     label076:
        $r219 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        r305 = $r219;

        entermonitor $r219;

     label077:
        $r220 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        $i42 = virtualinvoke $r220.<android.util.SparseIntArray: int size()>();

        if $i42 <= 0 goto label079;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mUserProfileGroupIds:");

        i86 = 0;

     label078:
        $r221 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        $i43 = virtualinvoke $r221.<android.util.SparseIntArray: int size()>();

        if i86 >= $i43 goto label079;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    User #");

        $r222 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        $i44 = virtualinvoke $r222.<android.util.SparseIntArray: int keyAt(int)>(i86);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i44);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> profile #");

        $r223 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        $i45 = virtualinvoke $r223.<android.util.SparseIntArray: int valueAt(int)>(i86);

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i45);

        i86 = i86 + 1;

        goto label078;

     label079:
        exitmonitor r305;

     label080:
        goto label083;

     label081:
        $r284 := @caughtexception;

        r10 = $r284;

        exitmonitor r305;

     label082:
        throw r10;

     label083:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r21 == null goto label086;

        if r4 == null goto label084;

        $r189 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r188 = $r189.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z35 = virtualinvoke $r188.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z35 == 0 goto label086;

     label084:
        if z49 == 0 goto label085;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z49 = 0;

     label085:
        $r187 = new java.lang.StringBuilder;

        specialinvoke $r187.<java.lang.StringBuilder: void <init>()>();

        $r186 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r185 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r191 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r185);

        $r190 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r190);

     label086:
        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if $r27 == null goto label089;

        if r4 == null goto label087;

        $r182 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        $r181 = $r182.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z34 = virtualinvoke $r181.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z34 == 0 goto label089;

     label087:
        if z49 == 0 goto label088;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z49 = 0;

     label088:
        $r207 = new java.lang.StringBuilder;

        specialinvoke $r207.<java.lang.StringBuilder: void <init>()>();

        $r205 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcess: ");

        $r206 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        $r184 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r206);

        $r183 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r183);

     label089:
        if z0 == 0 goto label090;

        $r202 = new java.lang.StringBuilder;

        specialinvoke $r202.<java.lang.StringBuilder: void <init>(int)>(128);

        r306 = $r202;

        virtualinvoke r306.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcessVisibleTime: ");

        $l37 = r0.<com.android.server.am.ActivityManagerService: long mPreviousProcessVisibleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l37, r306);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r306);

     label090:
        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r26 == null goto label093;

        if r4 == null goto label091;

        $r199 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r204 = $r199.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z36 = virtualinvoke $r204.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z36 == 0 goto label093;

     label091:
        if z49 == 0 goto label092;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z49 = 0;

     label092:
        $r194 = new java.lang.StringBuilder;

        specialinvoke $r194.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHeavyWeightProcess: ");

        $r200 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r201 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r200);

        $r198 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r198);

     label093:
        if r4 != null goto label094;

        $r172 = new java.lang.StringBuilder;

        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();

        $r170 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mConfiguration: ");

        $r171 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r196 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r171);

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r197);

     label094:
        if z0 == 0 goto label098;

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r164 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mConfigWillChange: ");

        $r163 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        $z26 = $r163.<com.android.server.am.ActivityStack: boolean mConfigWillChange>;

        $r162 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z26);

        $r161 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r161);

        $r160 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $r180 = virtualinvoke $r160.<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>();

        $i35 = virtualinvoke $r180.<java.util.HashMap: int size()>();

        if $i35 <= 0 goto label098;

        z52 = 0;

        $r178 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $r179 = virtualinvoke $r178.<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>();

        $r177 = virtualinvoke $r179.<java.util.HashMap: java.util.Set entrySet()>();

        r307 = interfaceinvoke $r177.<java.util.Set: java.util.Iterator iterator()>();

     label095:
        $z33 = interfaceinvoke r307.<java.util.Iterator: boolean hasNext()>();

        if $z33 == 0 goto label098;

        $r176 = interfaceinvoke r307.<java.util.Iterator: java.lang.Object next()>();

        r308 = (java.util.Map$Entry) $r176;

        $r174 = interfaceinvoke r308.<java.util.Map$Entry: java.lang.Object getKey()>();

        r309 = (java.lang.String) $r174;

        $r175 = interfaceinvoke r308.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r173 = (java.lang.Integer) $r175;

        i87 = virtualinvoke $r173.<java.lang.Integer: int intValue()>();

        if r4 == null goto label096;

        $z32 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r309);

        if $z32 != 0 goto label096;

        goto label095;

     label096:
        if z52 != 0 goto label097;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mScreenCompatPackages:");

        z52 = 1;

     label097:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r309);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i87);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label095;

     label098:
        if r4 != null goto label102;

        $z25 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z25 != 0 goto label099;

        $z28 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        if $z28 != 0 goto label099;

        $z27 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        if $z27 == 0 goto label100;

     label099:
        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSleeping=");

        $z22 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $r156 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z22);

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWentToSleep=");

        $z23 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        $r153 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z23);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLockScreenShown ");

        $z21 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z21);

        $r150 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r150);

     label100:
        $z20 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z20 != 0 goto label101;

        $z29 = r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice>;

        if $z29 == 0 goto label102;

     label101:
        $r151 = new java.lang.StringBuilder;

        specialinvoke $r151.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShuttingDown=");

        $z31 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        $r169 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z31);

        $r168 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRunningVoice=");

        $z30 = r0.<com.android.server.am.ActivityManagerService: boolean mRunningVoice>;

        $r167 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z30);

        $r166 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r166);

     label102:
        $r25 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        if $r25 != null goto label103;

        $r139 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        if $r139 != null goto label103;

        $z17 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z17 != 0 goto label103;

        $z24 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        if $z24 == 0 goto label106;

     label103:
        if r4 == null goto label104;

        $r141 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z19 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r141);

        if $z19 != 0 goto label104;

        $r138 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $z16 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r138);

        if $z16 == 0 goto label106;

     label104:
        if z49 == 0 goto label105;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z49 = 0;

     label105:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDebugApp=");

        $r30 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/orig=");

        $r34 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDebugTransient=");

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mOrigWaitForDebugger=");

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

     label106:
        $r43 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        if $r43 == null goto label109;

        if r4 == null goto label107;

        $r140 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        $z18 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r140);

        if $z18 == 0 goto label109;

     label107:
        if z49 == 0 goto label108;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z49 = 0;

     label108:
        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mOpenGlTraceApp=");

        $r142 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        $r145 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r144);

     label109:
        $r44 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        if $r44 != null goto label110;

        $r147 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r147 != null goto label110;

        $r146 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        if $r146 != null goto label110;

        $r149 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        if $r149 == null goto label113;

     label110:
        if r4 == null goto label111;

        $r131 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $z14 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r131);

        if $z14 == 0 goto label113;

     label111:
        if z49 == 0 goto label112;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label112:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileApp=");

        $r39 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProfileProc=");

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        $r51 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileFile=");

        $r47 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProfileFd=");

        $r58 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        $r57 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSamplingInterval=");

        $i19 = r0.<com.android.server.am.ActivityManagerService: int mSamplingInterval>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAutoStopProfiler=");

        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler>;

        $r64 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r66);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileType=");

        $i20 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r62);

     label113:
        if r4 != null goto label116;

        $z7 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z7 != 0 goto label114;

        $r132 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r132 == null goto label115;

     label114:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAlwaysFinishActivities=");

        $z6 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mController=");

        $r67 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r78 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r78);

     label115:
        if z0 == 0 goto label116;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Total persistent processes: ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r74 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r74);

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProcessesReady=");

        $z8 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        $r85 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSystemReady=");

        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBooted=");

        $z9 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFactoryTest=");

        $i21 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        $r91 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r90);

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBooting=");

        $z11 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallFinishBooting=");

        $z12 = r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting>;

        $r100 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBootAnimationComplete=");

        $z13 = r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete>;

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r102);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mLastPowerCheckRealtime=");

        $l23 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l23, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mLastPowerCheckUptime=");

        $l22 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l22, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mGoingToSleep=");

        $r95 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r94 = $r95.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $r97 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r94);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r96);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLaunchingActivity=");

        $r110 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r111 = $r110.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $r112 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r113);

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAdjSeq=");

        $i26 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r104 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLruSeq=");

        $i24 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r106);

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNumNonCachedProcs=");

        $i25 = r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs>;

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r125 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r124 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i29 = virtualinvoke $r124.<java.util.ArrayList: int size()>();

        $r123 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r128 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total)");

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNumCachedHiddenProcs=");

        $i30 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r119 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNumServiceProcs=");

        $i27 = r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs>;

        $r118 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewNumServiceProcs=");

        $i28 = r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs>;

        $r122 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r121 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r121);

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAllowLowerMemLevel=");

        $z15 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        $r133 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastMemoryLevel");

        $i34 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        $r137 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r136 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNumProcesses");

        $i33 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        $r129 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r130);

        l88 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mLastIdleTime=");

        $l31 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l88, $l31, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mLowRamSinceLastIdle=");

        $l32 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l88);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l32, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label116:
        if z2 != 0 goto label117;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label117:
        return;

        catch java.lang.Throwable from label019 to label026 with label027;
        catch java.lang.Throwable from label027 to label028 with label027;
        catch java.lang.Throwable from label030 to label037 with label038;
        catch java.lang.Throwable from label038 to label039 with label038;
        catch java.lang.Throwable from label077 to label080 with label081;
        catch java.lang.Throwable from label081 to label082 with label081;
    }

    boolean dumpProcessesToGc(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i2, $i3, $i4;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r4, $r11;
        long l1, $l5, $l6, $l7, $l8;
        com.android.server.am.ProcessRecord r5;
        java.util.ArrayList $r6, $r7, $r9;
        java.lang.Object $r8;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label6;

        z2 = 0;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i2 = 0;

     label1:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i2 >= $i4 goto label6;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ProcessRecord) $r8;

        if r4 == null goto label2;

        $r10 = r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 != 0 goto label2;

        goto label5;

     label2:
        if z2 != 0 goto label4;

        if z0 == 0 goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label3:
        z0 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are waiting to GC:");

        z2 = 1;

     label4:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Process ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      lowMem=");

        $z3 = r5.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", last gced=");

        $l5 = r5.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l7 = l1 - $l5;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ms ago, last lowMem=");

        $l6 = r5.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        $l8 = l1 - $l6;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ms ago");

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return z0;
    }

    void printOomLevel(java.io.PrintWriter, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        int i0;
        com.android.server.am.ProcessList $r3;
        long $l1, $l2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        if i0 < 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        if i0 >= 10 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        goto label2;

     label1:
        if i0 <= -10 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l1 = virtualinvoke $r3.<com.android.server.am.ProcessList: long getMemLevel(int)>(i0);

        $l2 = $l1 / 1024L;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" kB)");

        return;
    }

    boolean dumpOomLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, z4;
        java.util.ArrayList $r4, $r21, $r22, $r23, $r24;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r12, $r14, $r15, $r18, $r20;
        com.android.server.am.ProcessRecord $r7, $r11, $r16, $r17;
        java.lang.String $r9, $r13, $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 = 0;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label3;

        if z1 == 0 goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label1:
        z4 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  OOM levels:");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SYSTEM_ADJ", -16);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERSISTENT_PROC_ADJ", -12);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERSISTENT_SERVICE_ADJ", -11);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "FOREGROUND_APP_ADJ", 0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "VISIBLE_APP_ADJ", 1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERCEPTIBLE_APP_ADJ", 2);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "BACKUP_APP_ADJ", 3);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "HEAVY_WEIGHT_APP_ADJ", 4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SERVICE_ADJ", 5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "HOME_APP_ADJ", 6);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PREVIOUS_APP_ADJ", 7);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SERVICE_B_ADJ", 8);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "CACHED_APP_MIN_ADJ", 9);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "CACHED_APP_MAX_ADJ", 15);

        if z4 == 0 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Process OOM control (");

        $r21 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" total, non-act at ");

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        $i5 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i4 = $i3 - $i5;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", non-svc at ");

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i8 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $i6 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i7 = $i8 - $i6;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r2, r0, $r24, "    ", "Proc", "PERS", 1, null);

        z1 = 1;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z1, z0, null);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcess: ");

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r16 == null goto label4;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHeavyWeightProcess: ");

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

     label4:
        return 1;
    }

    protected boolean dumpProvider(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3;
        java.lang.String[] r4;
        int i0;
        boolean z0, $z1;
        com.android.server.am.ProviderMap $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z1 = virtualinvoke $r5.<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r3, r4, i0, z0);

        return $z1;
    }

    protected boolean dumpActivity(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r6, r9;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r19;
        java.lang.String[] r4, r21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1;
        java.util.ArrayList r5;
        java.lang.Throwable r7, r10, $r18, $r20;
        com.android.server.am.ActivityRecord r8, $r16;
        com.android.server.am.ActivityStackSupervisor $r12;
        java.lang.Object $r13, $r17;
        com.android.server.am.TaskRecord $r14, r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r6 = r0;

        entermonitor r0;

     label01:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r5 = virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getDumpActivitiesLocked(java.lang.String)>(r3);

        exitmonitor r6;

     label02:
        goto label05;

     label03:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r6;

     label04:
        throw r7;

     label05:
        $i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i2 > 0 goto label06;

        return 0;

     label06:
        $i4 = lengthof r4;

        $i3 = $i4 - i0;

        r21 = newarray (java.lang.String)[$i3];

        $i6 = lengthof r4;

        $i5 = $i6 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i0, r21, 0, $i5);

        r22 = null;

        z1 = 0;

        $i7 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i1 = $i7 - 1;

     label07:
        if i1 < 0 goto label15;

        $r13 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (com.android.server.am.ActivityRecord) $r13;

        if z1 == 0 goto label08;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label08:
        z1 = 1;

        r9 = r0;

        entermonitor r0;

     label09:
        $r14 = r8.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r22 == $r14 goto label10;

        r22 = r8.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("TASK ");

        $r19 = r22.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" id=");

        $i8 = r22.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i8);

        if z0 == 0 goto label10;

        virtualinvoke r22.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "  ");

     label10:
        exitmonitor r9;

     label11:
        goto label14;

     label12:
        $r20 := @caughtexception;

        r10 = $r20;

        exitmonitor r9;

     label13:
        throw r10;

     label14:
        $r17 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r16 = (com.android.server.am.ActivityRecord) $r17;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpActivity(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String[],boolean)>("  ", r1, r2, $r16, r21, z0);

        i1 = i1 + -1;

        goto label07;

     label15:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void dumpActivity(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ActivityRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ActivityManagerService r0, r7;
        java.lang.String r1, r6, $r14, $r16, $r31, $r39;
        java.io.FileDescriptor r2, $r25;
        java.io.PrintWriter r3;
        com.android.server.am.ActivityRecord r4;
        java.lang.String[] r5;
        boolean z0;
        java.lang.Throwable r8, r9, $r29, $r32;
        java.lang.StringBuilder $r10, $r11, $r12, $r27, $r28, $r33, $r34, $r35, $r36, $r38;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r15, $r17, $r19, $r20, $r26;
        android.app.IApplicationThread $r18, $r23;
        com.android.internal.os.TransferPipe $r21, r40;
        android.os.ParcelFileDescriptor $r22;
        android.view.IApplicationToken$Stub $r24;
        java.io.IOException $r30, r41;
        android.os.RemoteException $r37;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: com.android.server.am.ActivityRecord;

        r5 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = r0;

        entermonitor r0;

     label01:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("ACTIVITY ");

        $r14 = r4.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r4);

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r15 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r15 == null goto label02;

        $r26 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r26.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i1);

        goto label03;

     label02:
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label03:
        if z0 == 0 goto label04;

        virtualinvoke r4.<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>(r3, r6);

     label04:
        exitmonitor r7;

     label05:
        goto label08;

     label06:
        $r32 := @caughtexception;

        r8 = $r32;

        exitmonitor r7;

     label07:
        throw r8;

     label08:
        $r17 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r17 == null goto label17;

        $r19 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r18 = $r19.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label17;

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

     label09:
        $r21 = new com.android.internal.os.TransferPipe;

        specialinvoke $r21.<com.android.internal.os.TransferPipe: void <init>()>();

        r40 = $r21;

     label10:
        $r20 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = virtualinvoke r40.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r25 = virtualinvoke $r22.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r24 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r23.<android.app.IApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>($r25, $r24, r6, r5);

        virtualinvoke r40.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r2);

     label11:
        virtualinvoke r40.<com.android.internal.os.TransferPipe: void kill()>();

        goto label14;

     label12:
        $r29 := @caughtexception;

        r9 = $r29;

     label13:
        virtualinvoke r40.<com.android.internal.os.TransferPipe: void kill()>();

        throw r9;

     label14:
        goto label17;

     label15:
        $r30 := @caughtexception;

        r41 = $r30;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the activity: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        goto label17;

     label16:
        $r37 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the activity");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r39);

     label17:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.io.IOException from label09 to label14 with label15;
        catch android.os.RemoteException from label09 to label14 with label16;
    }

    void dumpBroadcastsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;
        java.lang.String r4, $r10, $r16, $r18, $r31, $r34, $r37, $r43, $r45, $r49, $r50;
        java.util.Iterator r5, r53;
        com.android.server.am.ReceiverList r6;
        com.android.server.am.BroadcastQueue r7, r56;
        java.util.ArrayList r8;
        android.os.Bundle r9;
        com.android.server.am.ActivityManagerService$MainHandler $r11;
        android.util.PrintWriterPrinter $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r19, $r22, r52;
        android.util.SparseArray $r20, $r21, $r23, $r26;
        android.util.ArrayMap $r24;
        java.util.Set $r25;
        java.lang.Object $r27, $r28, $r29, $r32, $r33, $r36, $r46;
        android.content.Intent $r35, $r38;
        com.android.server.IntentResolver $r39;
        java.util.HashMap $r40, $r42;
        java.util.Collection $r41;
        android.content.pm.ApplicationInfo $r44;
        com.android.server.am.ProcessRecord $r47, $r48;
        com.android.server.am.BroadcastQueue[] r51, r55;
        java.util.Map$Entry r54;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        $r10 = "history";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label02;

        $i6 = lengthof r3;

        if i0 >= $i6 goto label01;

        $r50 = "-s";

        $r49 = r3[i0];

        $z11 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r49);

        if $z11 == 0 goto label01;

        z0 = 0;

     label01:
        z2 = 1;

        r4 = null;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)");

        if z2 != 0 goto label09;

        if z0 == 0 goto label09;

        $r40 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $i5 = virtualinvoke $r40.<java.util.HashMap: int size()>();

        if $i5 <= 0 goto label06;

        z4 = 0;

        $r42 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r41 = virtualinvoke $r42.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z10 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label06;

        $r46 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.am.ReceiverList) $r46;

        if r4 == null goto label04;

        $r47 = r6.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r47 == null goto label03;

        $r48 = r6.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r44 = $r48.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r45 = $r44.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z9 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z9 != 0 goto label04;

        goto label03;

     label04:
        if z4 != 0 goto label05;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Registered Receivers:");

        z1 = 1;

        z4 = 1;

        z3 = 1;

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        virtualinvoke r6.<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label03;

     label06:
        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        if z1 == 0 goto label07;

        $r43 = "\n  Receiver Resolver Table:";

        goto label08;

     label07:
        $r43 = "  Receiver Resolver Table:";

     label08:
        $z8 = virtualinvoke $r39.<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, $r43, "    ", r4, 0);

        if $z8 == 0 goto label09;

        z1 = 1;

        z3 = 1;

     label09:
        r51 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i7 = lengthof r51;

        i8 = 0;

     label10:
        if i8 >= i7 goto label11;

        r7 = r51[i8];

        z1 = virtualinvoke r7.<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)>(r1, r2, r3, i0, z0, r4, z1);

        z3 = z3 | z1;

        i8 = i8 + 1;

        goto label10;

     label11:
        z12 = 1;

        if z2 != 0 goto label21;

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        if $r21 == null goto label21;

        if r4 != null goto label21;

        i9 = 0;

     label12:
        $r20 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i4 = virtualinvoke $r20.<android.util.SparseArray: int size()>();

        if i9 >= $i4 goto label21;

        if z12 == 0 goto label13;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label13:
        z12 = 1;

        z3 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Sticky broadcasts for user ");

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i3 = virtualinvoke $r23.<android.util.SparseArray: int keyAt(int)>(i9);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(int)>(128);

        r52 = $r22;

        $r26 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r27 = virtualinvoke $r26.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        $r24 = (android.util.ArrayMap) $r27;

        $r25 = virtualinvoke $r24.<android.util.ArrayMap: java.util.Set entrySet()>();

        r53 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z7 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label20;

        $r28 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.util.Map$Entry) $r28;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Sticky action ");

        $r29 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (java.lang.String) $r29;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        if z0 == 0 goto label18;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r32 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.ArrayList) $r32;

        i1 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        i2 = 0;

     label15:
        if i2 >= i1 goto label17;

        virtualinvoke r52.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Intent: ");

        $r36 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r35 = (android.content.Intent) $r36;

        virtualinvoke $r35.<android.content.Intent: void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean)>(r52, 0, 1, 0, 0);

        $r34 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r33 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r38 = (android.content.Intent) $r33;

        r9 = virtualinvoke $r38.<android.content.Intent: android.os.Bundle getExtras()>();

        if r9 == null goto label16;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r37 = virtualinvoke r9.<android.os.Bundle: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

     label16:
        i2 = i2 + 1;

        goto label15;

     label17:
        goto label19;

     label18:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

     label19:
        goto label14;

     label20:
        i9 = i9 + 1;

        goto label12;

     label21:
        if z2 != 0 goto label24;

        if z0 == 0 goto label24;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        r55 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i10 = lengthof r55;

        i11 = 0;

     label22:
        if i11 >= i10 goto label23;

        r56 = r55[i11];

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBroadcastsScheduled [");

        $r16 = r56.<com.android.server.am.BroadcastQueue: java.lang.String mQueueName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $z6 = r56.<com.android.server.am.BroadcastQueue: boolean mBroadcastsScheduled>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        i11 = i11 + 1;

        goto label22;

     label23:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mHandler:");

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r12 = new android.util.PrintWriterPrinter;

        specialinvoke $r12.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r2);

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: void dump(android.util.Printer,java.lang.String)>($r12, "    ");

        z3 = 1;

     label24:
        if z3 != 0 goto label25;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label25:
        return;
    }

    void dumpProvidersLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9, i10;
        boolean z0, z1, z2, z3, $z4, $z5, z6, z7;
        java.lang.String r4, $r27;
        com.android.server.am.ActivityManagerService$ItemMatcher r5, $r9;
        com.android.server.am.ContentProviderRecord r6;
        android.util.ArrayMap r7;
        java.util.Iterator r8;
        com.android.server.am.UriPermission r10;
        com.android.server.am.ProviderMap $r11;
        java.util.ArrayList $r12, $r20, $r25;
        android.util.SparseArray $r13, $r14, $r15, $r16;
        java.util.Collection $r17;
        java.lang.Object $r18, $r19, $r23;
        android.content.Context $r21;
        android.content.pm.PackageManager $r22;
        android.content.ComponentName $r24;
        android.content.pm.PackageManager$NameNotFoundException $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        z2 = 0;

        $r9 = new com.android.server.am.ActivityManagerService$ItemMatcher;

        specialinvoke $r9.<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>();

        r5 = $r9;

        virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>(r3, i0);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)");

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        z1 = virtualinvoke $r11.<com.android.server.am.ProviderMap: boolean dumpProvidersLocked(java.io.PrintWriter,boolean,java.lang.String)>(r2, z0, r4);

        z6 = z2 | z1;

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i4 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label06;

        z3 = 0;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i8 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        i1 = $i8 - 1;

     label01:
        if i1 < 0 goto label06;

        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r23 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.am.ContentProviderRecord) $r23;

        if r4 == null goto label02;

        $r24 = r6.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r27 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z5 != 0 goto label02;

        goto label05;

     label02:
        if z3 != 0 goto label04;

        if z1 == 0 goto label03;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label03:
        z1 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Launching content providers:");

        z3 = 1;

        z6 = 1;

     label04:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Launching #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

     label05:
        i1 = i1 + -1;

        goto label01;

     label06:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i5 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if $i5 <= 0 goto label18;

        z7 = 0;

        i9 = -2;

        if r4 == null goto label10;

     label07:
        $r21 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i9 = virtualinvoke $r22.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r4, 0);

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        i9 = -1;

     label10:
        i10 = 0;

     label11:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i6 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        if i10 >= $i6 goto label18;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i2 = virtualinvoke $r15.<android.util.SparseArray: int keyAt(int)>(i10);

        if i9 < -1 goto label12;

        $i7 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        if $i7 == i9 goto label12;

        goto label17;

     label12:
        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r18 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r7 = (android.util.ArrayMap) $r18;

        if z7 != 0 goto label14;

        if z1 == 0 goto label13;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label13:
        z1 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Granted Uri Permissions:");

        z7 = 1;

        z6 = 1;

     label14:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * UID ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" holds:");

        $r17 = virtualinvoke r7.<android.util.ArrayMap: java.util.Collection values()>();

        r8 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label17;

        $r19 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.server.am.UriPermission) $r19;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r10);

        if z0 == 0 goto label16;

        virtualinvoke r10.<com.android.server.am.UriPermission: void dump(java.io.PrintWriter,java.lang.String)>(r2, "      ");

     label16:
        goto label15;

     label17:
        i10 = i10 + 1;

        goto label11;

     label18:
        if z6 != 0 goto label19;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label19:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label09;
    }

    void dumpPendingIntentsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, $i1;
        boolean z0, z1, $z2, $z3;
        java.lang.String r4, $r12;
        java.util.Iterator r5;
        java.lang.ref.WeakReference r6;
        com.android.server.am.PendingIntentRecord r7, $r15;
        java.util.HashMap $r8, $r9;
        java.util.Collection $r10;
        java.lang.Object $r11, $r14;
        com.android.server.am.PendingIntentRecord$Key $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        z1 = 0;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)");

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $i1 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label7;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.ref.WeakReference) $r11;

        if r6 == null goto label2;

        $r14 = virtualinvoke r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r15 = (com.android.server.am.PendingIntentRecord) $r14;

        goto label3;

     label2:
        $r15 = null;

     label3:
        r7 = $r15;

        if r4 == null goto label4;

        if r7 == null goto label1;

        $r13 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r12 = $r13.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 != 0 goto label4;

        goto label1;

     label4:
        z1 = 1;

        if r7 == null goto label5;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r7);

        if z0 == 0 goto label6;

        virtualinvoke r7.<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label6;

     label5:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

     label6:
        goto label1;

     label7:
        if z1 != 0 goto label8;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label8:
        return;
    }

    private static final int dumpProcessList(java.io.PrintWriter, com.android.server.am.ActivityManagerService, java.util.List, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.android.server.am.ActivityManagerService r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r6, $r12, $r13, $r15, $r16;
        int i0, i1, i2, $i3;
        com.android.server.am.ProcessRecord r7;
        java.lang.Object $r8;
        java.lang.Object[] $r9;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r11;
        android.content.pm.ApplicationInfo $r14;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.am.ActivityManagerService;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        i0 = 0;

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = $i3 - 1;

        i2 = i1;

     label1:
        if i2 < 0 goto label6;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.am.ProcessRecord) $r8;

        if r6 == null goto label2;

        $r14 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r16 = $r14.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 != 0 goto label2;

        goto label5;

     label2:
        $r9 = newarray (java.lang.Object)[4];

        $r9[0] = r3;

        $z0 = r7.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label3;

        $r15 = r5;

        goto label4;

     label3:
        $r15 = r4;

     label4:
        $r9[1] = $r15;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r9[2] = $r11;

        $r12 = virtualinvoke r7.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        $r9[3] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s #%2d: %s", $r9);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $z1 = r7.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label5;

        i0 = i0 + 1;

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        return i0;
    }

    private static final boolean dumpProcessOomList(java.io.PrintWriter, com.android.server.am.ActivityManagerService, java.util.List, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.android.server.am.ActivityManagerService r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r6, r10, r11, $r26, $r27, $r31, $r32, $r40, $r42, $r43, $r49, $r51;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10;
        java.util.ArrayList r7, $r15;
        int i0, i4, i8, $i9, $i10, $i11, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i29, $i30, $i31, $i36, $i44, $i45;
        com.android.server.am.ProcessRecord r8, r9, $r41;
        long l1, l2, l3, l7, $l12, $l14, $l27, $l28, $l33, $l35, $l37, $l38, $l39, $l40, $l41, $l42, $l43, l46, l47, l48;
        char c5, c6;
        com.android.internal.os.BatteryStatsImpl r12, r14;
        java.lang.Throwable r13, $r52;
        com.android.server.am.ActivityManagerService$21 $r16, r54;
        java.lang.Object $r17, $r18, $r20, $r22, $r24, $r25, $r28, $r29, $r30, $r36, $r37, $r39, $r44, $r46, $r48, $r50;
        android.util.Pair $r19, $r21, $r47;
        java.lang.Integer $r23, $r45;
        byte $b32, $b34;
        com.android.server.am.BatteryStatsService $r33;
        android.content.pm.ApplicationInfo $r34;
        android.content.ComponentName $r38;
        android.util.ArrayMap $r53;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.am.ActivityManagerService;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        r6 := @parameter7: java.lang.String;

        $r15 = new java.util.ArrayList;

        $i9 = interfaceinvoke r2.<java.util.List: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i9);

        r7 = $r15;

        i0 = 0;

     label01:
        $i10 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i10 goto label04;

        $r48 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (com.android.server.am.ProcessRecord) $r48;

        if r6 == null goto label02;

        $r53 = r8.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z10 = virtualinvoke $r53.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r6);

        if $z10 != 0 goto label02;

        goto label03;

     label02:
        $r47 = new android.util.Pair;

        $r46 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r47.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r46, $r45);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r47);

     label03:
        i0 = i0 + 1;

        goto label01;

     label04:
        $i11 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i11 > 0 goto label05;

        return 0;

     label05:
        $r16 = new com.android.server.am.ActivityManagerService$21;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$21: void <init>()>();

        r54 = $r16;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r7, r54);

        l46 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = r1.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        l1 = l46 - $l14;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l12 = r1.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l3 = l2 - $l12;

        $i13 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i4 = $i13 - 1;

     label06:
        if i4 < 0 goto label32;

        $r18 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r19 = (android.util.Pair) $r18;

        $r17 = $r19.<android.util.Pair: java.lang.Object first>;

        r9 = (com.android.server.am.ProcessRecord) $r17;

        $i15 = r9.<com.android.server.am.ProcessRecord: int setAdj>;

        r10 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int)>($i15);

        $i16 = r9.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        lookupswitch($i16)
        {
            case -1: goto label08;
            case 0: goto label07;
            default: goto label09;
        };

     label07:
        c5 = 66;

        goto label10;

     label08:
        c5 = 70;

        goto label10;

     label09:
        c5 = 63;

     label10:
        $z1 = r9.<com.android.server.am.ProcessRecord: boolean foregroundActivities>;

        if $z1 == 0 goto label11;

        c6 = 65;

        goto label13;

     label11:
        $z2 = r9.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z2 == 0 goto label12;

        c6 = 83;

        goto label13;

     label12:
        c6 = 32;

     label13:
        $i18 = r9.<com.android.server.am.ProcessRecord: int curProcState>;

        r11 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i18);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        $z3 = r9.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z3 == 0 goto label14;

        $r49 = r5;

        goto label15;

     label14:
        $r49 = r4;

     label15:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r49);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        $i17 = interfaceinvoke r2.<java.util.List: int size()>();

        $i19 = $i17 - 1;

        $r22 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r21 = (android.util.Pair) $r22;

        $r20 = $r21.<android.util.Pair: java.lang.Object second>;

        $r23 = (java.lang.Integer) $r20;

        $i22 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        i8 = $i19 - $i22;

        if i8 >= 10 goto label16;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

     label16:
        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r10);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c5);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(47);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(47);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r11);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" trm:");

        $i21 = r9.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i21 >= 10 goto label17;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

     label17:
        $i20 = r9.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i20);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        $r27 = virtualinvoke r9.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r26 = r9.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r0.<java.io.PrintWriter: void println(char)>(41);

        $r25 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r25 != null goto label18;

        $r50 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r50 == null goto label24;

     label18:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r24 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z4 = $r24 instanceof android.content.ComponentName;

        if $z4 == 0 goto label19;

        $r37 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r38 = (android.content.ComponentName) $r37;

        $r51 = virtualinvoke $r38.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r51);

        goto label21;

     label19:
        $r29 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r29 == null goto label20;

        $r39 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r40 = virtualinvoke $r39.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r40);

        goto label21;

     label20:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("{null}");

     label21:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("<=");

        $r30 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z5 = $r30 instanceof com.android.server.am.ProcessRecord;

        if $z5 == 0 goto label22;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Proc{");

        $r44 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r41 = (com.android.server.am.ProcessRecord) $r44;

        $r42 = virtualinvoke $r41.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r42);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("}");

        goto label24;

     label22:
        $r28 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r28 == null goto label23;

        $r36 = r9.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r43 = virtualinvoke $r36.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        goto label24;

     label23:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("{null}");

     label24:
        if z0 == 0 goto label31;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("oom: max=");

        $i23 = r9.<com.android.server.am.ProcessRecord: int maxAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" curRaw=");

        $i24 = r9.<com.android.server.am.ProcessRecord: int curRawAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i24);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" setRaw=");

        $i25 = r9.<com.android.server.am.ProcessRecord: int setRawAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i25);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" cur=");

        $i29 = r9.<com.android.server.am.ProcessRecord: int curAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i29);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i30 = r9.<com.android.server.am.ProcessRecord: int setAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void println(int)>($i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("state: cur=");

        $i31 = r9.<com.android.server.am.ProcessRecord: int curProcState>;

        $r32 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i31);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r32);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i26 = r9.<com.android.server.am.ProcessRecord: int setProcState>;

        $r31 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i26);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastPss=");

        $l27 = r9.<com.android.server.am.ProcessRecord: long lastPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l27);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastCachedPss=");

        $l28 = r9.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        virtualinvoke r0.<java.io.PrintWriter: void println(long)>($l28);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("cached=");

        $z7 = r9.<com.android.server.am.ProcessRecord: boolean cached>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" empty=");

        $z6 = r9.<com.android.server.am.ProcessRecord: boolean empty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" hasAboveClient=");

        $z8 = r9.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        virtualinvoke r0.<java.io.PrintWriter: void println(boolean)>($z8);

        $i36 = r9.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i36 < 7 goto label31;

        $l33 = r9.<com.android.server.am.ProcessRecord: long lastWakeTime>;

        $b32 = $l33 cmp 0L;

        if $b32 == 0 goto label30;

        $r33 = r1.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r12 = virtualinvoke $r33.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r14 = r12;

        entermonitor r12;

     label25:
        $r34 = r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i45 = $r34.<android.content.pm.ApplicationInfo: int uid>;

        $i44 = r9.<com.android.server.am.ProcessRecord: int pid>;

        l7 = virtualinvoke r12.<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>($i45, $i44, l46);

        exitmonitor r14;

     label26:
        goto label29;

     label27:
        $r52 := @caughtexception;

        r13 = $r52;

        exitmonitor r14;

     label28:
        throw r13;

     label29:
        $l42 = r9.<com.android.server.am.ProcessRecord: long lastWakeTime>;

        l47 = l7 - $l42;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("keep awake over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l1, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" used ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l47, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l43 = l47 * 100L;

        $l41 = $l43 / l1;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l41);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("%)");

     label30:
        $l35 = r9.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b34 = $l35 cmp 0L;

        if $b34 == 0 goto label31;

        $l37 = r9.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l38 = r9.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l48 = $l37 - $l38;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("run cpu over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l3, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" used ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l48, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l40 = l48 * 100L;

        $l39 = $l40 / l3;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l39);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("%)");

     label31:
        i4 = i4 + -1;

        goto label06;

     label32:
        return 1;

        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    java.util.ArrayList collectProcesses(java.io.PrintWriter, int, boolean, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0, r4;
        java.io.PrintWriter r1;
        int i0, i1, $i2, $i4, $i5, $i6, i7;
        boolean z0, $z2, $z3;
        java.lang.String[] r2;
        java.util.ArrayList r3, $r9, $r10, $r13, $r14, $r15;
        com.android.server.am.ProcessRecord r6;
        java.lang.Throwable r7, $r22;
        char $c3;
        java.lang.String $r11, $r12, $r17, $r18, $r21;
        java.lang.Object $r16;
        android.util.ArrayMap $r19, $r20;
        java.lang.NumberFormatException $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String[];

        r4 = r0;

        entermonitor r0;

     label01:
        if r2 == null goto label13;

        $i2 = lengthof r2;

        if $i2 <= i0 goto label13;

        $r11 = r2[i0];

        $c3 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);

        if $c3 == 45 goto label13;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = $r13;

        i1 = -1;

     label02:
        $r12 = r2[i0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

     label03:
        goto label05;

     label04:
        $r23 := @caughtexception;

     label05:
        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        i7 = $i5 - 1;

     label06:
        if i7 < 0 goto label10;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r6 = (com.android.server.am.ProcessRecord) $r16;

        $i6 = r6.<com.android.server.am.ProcessRecord: int pid>;

        if $i6 != i1 goto label07;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label09;

     label07:
        if z0 == 0 goto label08;

        $r20 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        if $r20 == null goto label08;

        $r19 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $r21 = r2[i0];

        $z3 = virtualinvoke $r19.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r21);

        if $z3 == 0 goto label08;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label09;

     label08:
        $r17 = r6.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r18 = r2[i0];

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label09;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label09:
        i7 = i7 + -1;

        goto label06;

     label10:
        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i4 > 0 goto label12;

        exitmonitor r4;

     label11:
        return null;

     label12:
        goto label14;

     label13:
        $r9 = new java.util.ArrayList;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r3 = $r9;

     label14:
        exitmonitor r4;

     label15:
        goto label18;

     label16:
        $r22 := @caughtexception;

        r7 = $r22;

        exitmonitor r4;

     label17:
        throw r7;

     label18:
        return r3;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label11 with label16;
        catch java.lang.Throwable from label12 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    final void dumpGraphicsHardwareUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1, $r29;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.ArrayList r4;
        long l0, l1;
        int i2, $i3, $i4;
        com.android.server.am.ProcessRecord r5;
        com.android.internal.os.TransferPipe r6, $r22;
        java.lang.Throwable r7, $r31;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r24, $r26, $r27, $r33, $r34, $r35, $r37, $r38, $r39, $r43;
        java.lang.String $r12, $r21, $r25, $r30, $r32, $r41, $r42;
        java.lang.Object $r14;
        android.app.IApplicationThread $r16, $r23;
        android.os.ParcelFileDescriptor $r28;
        android.os.RemoteException $r36;
        java.io.IOException $r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r2, 0, 0, r3);

        if r4 != null goto label01;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r32 = r3[0];

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        return;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Applications Graphics Acceleration Info:");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label02:
        if i2 < 0 goto label12;

        $r14 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ProcessRecord) $r14;

        $r16 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label11;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** Graphics info for pid ");

        $i4 = r5.<com.android.server.am.ProcessRecord: int pid>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r21 = r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label03:
        $r22 = new com.android.internal.os.TransferPipe;

        specialinvoke $r22.<com.android.internal.os.TransferPipe: void <init>()>();

        r6 = $r22;

     label04:
        $r23 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r28 = virtualinvoke r6.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r29 = virtualinvoke $r28.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke $r23.<android.app.IApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>($r29, r3);

        virtualinvoke r6.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r1);

     label05:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

        goto label08;

     label06:
        $r31 := @caughtexception;

        r7 = $r31;

     label07:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

        throw r7;

     label08:
        goto label11;

     label09:
        $r40 := @caughtexception;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app: ");

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        goto label11;

     label10:
        $r36 := @caughtexception;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label11:
        i2 = i2 + -1;

        goto label02;

     label12:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.IOException from label03 to label08 with label09;
        catch android.os.RemoteException from label03 to label08 with label10;
    }

    final void dumpDbInfo(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1, $r20;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.ArrayList r4;
        int i0, $i1, $i2;
        com.android.server.am.ProcessRecord r5;
        com.android.internal.os.TransferPipe r6, $r19;
        java.lang.Throwable r7, $r37;
        java.lang.Object $r8;
        android.app.IApplicationThread $r9, $r18;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r17, $r22, $r23, $r24, $r28, $r30, $r31, $r32, $r33, $r35;
        java.lang.String $r15, $r16, $r25, $r27, $r29, $r36;
        android.os.ParcelFileDescriptor $r21;
        android.os.RemoteException $r26;
        java.io.IOException $r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r2, 0, 0, r3);

        if r4 != null goto label01;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r25 = r3[0];

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        return;

     label01:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Applications Database Info:");

        $i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label02:
        if i0 < 0 goto label12;

        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ProcessRecord) $r8;

        $r9 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 == null goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** Database info for pid ");

        $i2 = r5.<com.android.server.am.ProcessRecord: int pid>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r15 = r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label03:
        $r19 = new com.android.internal.os.TransferPipe;

        specialinvoke $r19.<com.android.internal.os.TransferPipe: void <init>()>();

        r6 = $r19;

     label04:
        $r18 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r21 = virtualinvoke r6.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r20 = virtualinvoke $r21.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke $r18.<android.app.IApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>($r20, r3);

        virtualinvoke r6.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r1);

     label05:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

        goto label08;

     label06:
        $r37 := @caughtexception;

        r7 = $r37;

     label07:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

        throw r7;

     label08:
        goto label11;

     label09:
        $r34 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        goto label11;

     label10:
        $r26 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label11:
        i0 = i0 + -1;

        goto label02;

     label12:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.IOException from label03 to label08 with label09;
        catch android.os.RemoteException from label03 to label08 with label10;
    }

    static final void dumpMemItems(java.io.PrintWriter, java.lang.String, java.lang.String, java.util.ArrayList, boolean, boolean)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2, $r6, $r10, $r12, $r14, $r16, $r18;
        java.util.ArrayList r3, $r7, $r13;
        boolean z0, z1, $z2, $z3;
        int i0, $i1, $i3;
        com.android.server.am.ActivityManagerService$MemItem r4;
        java.lang.Object $r5;
        long $l2, $l4, $l5;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.Object[] $r15;
        java.lang.Long $r17;
        com.android.server.am.ActivityManagerService$22 $r20;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        if z0 == 0 goto label1;

        if z1 != 0 goto label1;

        $r20 = new com.android.server.am.ActivityManagerService$22;

        specialinvoke $r20.<com.android.server.am.ActivityManagerService$22: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, $r20);

     label1:
        i0 = 0;

     label2:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label9;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ActivityManagerService$MemItem) $r5;

        if z1 != 0 goto label3;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r15 = newarray (java.lang.Object)[1];

        $l5 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r15[0] = $r17;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%7d kB: ", $r15);

        $r18 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String label>;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        goto label7;

     label3:
        $z2 = r4.<com.android.server.am.ActivityManagerService$MemItem: boolean isProc>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("proc,");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r14 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i3 = r4.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l4 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l4);

        $z3 = r4.<com.android.server.am.ActivityManagerService$MemItem: boolean hasActivities>;

        if $z3 == 0 goto label4;

        $r16 = ",a";

        goto label5;

     label4:
        $r16 = ",e";

     label5:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        goto label7;

     label6:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r6 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l2 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        virtualinvoke r0.<java.io.PrintWriter: void println(long)>($l2);

     label7:
        $r7 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        if $r7 == null goto label8;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("           ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        $r13 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r0, $r10, $r12, $r13, 1, z1);

     label8:
        i0 = i0 + 1;

        goto label2;

     label9:
        return;
    }

    static final void appendMemBucket(java.lang.StringBuilder, long, java.lang.String, boolean)
    {
        java.lang.StringBuilder r0;
        long l0, l4, $l6, $l8, $l9;
        java.lang.String r1, $r7, $r11;
        boolean z0;
        int i1, i2, i3, $i5, i10;
        long[] $r2, $r6, $r8;
        byte $b7;

        r0 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i1 < 0 goto label1;

        i10 = i1 + 1;

        goto label2;

     label1:
        i10 = 0;

     label2:
        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = 0;

     label3:
        $r2 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        $i5 = lengthof $r2;

        if i3 >= $i5 goto label7;

        $r6 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        $l8 = $r6[i3];

        $b7 = $l8 cmp l0;

        if $b7 < 0 goto label6;

        $r8 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        $l9 = $r8[i3];

        l4 = $l9 / 1024L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        if z0 == 0 goto label4;

        $r11 = "MB.";

        goto label5;

     label4:
        $r11 = "MB ";

     label5:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i10, i2);

        return;

     label6:
        i3 = i3 + 1;

        goto label3;

     label7:
        $l6 = l0 / 1024L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        if z0 == 0 goto label8;

        $r7 = "MB.";

        goto label9;

     label8:
        $r7 = "MB ";

     label9:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i10, i2);

        return;
    }

    private final void dumpApplicationMemoryUsageHeader(java.io.PrintWriter, long, long, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        long l0, l1;
        boolean z0, z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("time,");

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l1);

        goto label3;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Applications Memory Usage (kB):");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label3:
        return;
    }

    final void dumpApplicationMemoryUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], boolean, java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService r0, r20, r22, r159;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, r5, $r50, r157;
        java.lang.String r3, r6, $r47, $r53, $r54, $r60, $r73, $r79, $r80, $r83, $r84, $r88, $r90, $r93, $r100, $r103, $r106, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r118, $r123, $r124, $r133, $r134, r153, r155;
        java.lang.String[] r4, $r25, $r29, $r46, $r49, r144;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z16, $z17, $z18, $z19, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z34, $z35, z36;
        int i0, i3, i4, i5, i8, i10, i11, i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i33, $i39, $i42, $i46, $i88, $i95, $i101, $i109, $i110, $i111, $i112, $i113, $i115, $i119, $i121, $i123, $i124, $i125, $i128, $i132, $i133, $i134, $i135, $i136, $i137, $i140, $i141, $i142, $i144, $i146, $i148, $i150, $i151, $i153, $i156, $i158, $i159, $i160, $i162, $i164, $i166, $i167, i168, i169, i173, i174, i176, i177, i180, i181;
        long l1, l2, l6, l7, l9, l12, l13, l16, $l27, $l28, $l29, $l31, $l32, $l34, $l35, $l36, $l37, $l40, $l41, $l43, $l44, $l45, $l47, $l48, $l49, $l50, $l51, $l55, $l56, $l57, $l58, $l59, $l60, $l61, $l62, $l63, $l64, $l65, $l66, $l67, $l68, $l69, $l70, $l71, $l72, $l73, $l74, $l75, $l76, $l77, $l78, $l79, $l80, $l81, $l82, $l83, $l84, $l85, $l86, $l87, $l89, $l90, $l91, $l92, $l93, $l94, $l96, $l97, $l98, $l99, $l100, $l102, $l103, $l104, $l105, $l107, $l108, $l114, $l117, $l118, $l120, $l122, $l126, $l127, $l129, $l130, $l131, $l138, $l139, $l143, $l145, $l147, $l149, $l152, $l154, $l155, $l161, $l165, l170, l171, l172, l175, l178, l179, l182, l183, l184;
        java.util.ArrayList r7, r9, $r27, $r30, $r34, $r48, $r65, $r66, $r67, $r77, $r78, $r86, $r87, $r89, r145, r152, r154;
        long[] r8, r13, r14, r161;
        com.android.internal.os.ProcessCpuTracker$Stats r11, r143, r150;
        java.lang.Throwable r12, r19, r21, r23, r24, $r128, $r129, $r137, $r139, $r140;
        java.util.ArrayList[] r15, $r26;
        android.os.Debug$MemoryInfo r16, $r64, $r95, $r121, r142;
        com.android.server.am.ProcessRecord r17;
        android.app.IApplicationThread r18, $r76;
        android.util.SparseArray $r28, r146;
        com.android.server.am.ActivityManagerService$MemItem $r31, $r36, $r37, $r44, $r52, $r58, $r74, r148, r151, r156;
        com.android.internal.os.ProcessCpuTracker $r32, $r33, $r51, $r91, $r92, $r125, r141, r149;
        byte $b26, $b30, $b38, $b52, $b53, $b54, $b106, $b116;
        com.android.internal.util.MemInfoReader $r35, r158;
        int[] $r38, $r45, $r85, r160;
        com.android.server.am.ProcessList $r39, $r40, $r41;
        com.android.server.am.ProcessStatsService $r42;
        java.lang.StringBuilder $r55, $r56, $r57, $r59, $r61, $r68, $r69, $r70, $r71, $r72, $r96, $r97, $r98, $r99, $r101, $r102, $r104, $r105, $r107, $r117, $r119, $r120, $r122, $r126, $r127, $r130, $r131, $r132, $r135;
        java.lang.Object $r63, $r94;
        com.android.internal.app.ProcessStats$ProcessState $r81;
        android.util.ArrayMap $r82;
        char $c157, $c163;
        java.lang.NumberFormatException $r136;
        android.os.RemoteException $r138;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r5 := @parameter5: java.io.PrintWriter;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        i0 = 0;

     label001:
        $i15 = lengthof r4;

        if i0 >= $i15 goto label011;

        r6 = r4[i0];

        if r6 == null goto label011;

        $i164 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i164 <= 0 goto label011;

        $c163 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);

        if $c163 == 45 goto label002;

        goto label011;

     label002:
        i0 = i0 + 1;

        $r110 = "-a";

        $z27 = virtualinvoke $r110.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z27 == 0 goto label003;

        z1 = 1;

        z2 = 1;

        z3 = 1;

        goto label010;

     label003:
        $r109 = "-d";

        $z32 = virtualinvoke $r109.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z32 == 0 goto label004;

        z3 = 1;

        goto label010;

     label004:
        $r116 = "-c";

        $z31 = virtualinvoke $r116.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z31 == 0 goto label005;

        z5 = 1;

        goto label010;

     label005:
        $r115 = "--oom";

        $z30 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z30 == 0 goto label006;

        z4 = 1;

        goto label010;

     label006:
        $r114 = "--local";

        $z29 = virtualinvoke $r114.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z29 == 0 goto label007;

        z6 = 1;

        goto label010;

     label007:
        $r113 = "--package";

        $z34 = virtualinvoke $r113.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z34 == 0 goto label008;

        z7 = 1;

        goto label010;

     label008:
        $r134 = "-h";

        $z35 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z35 == 0 goto label009;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("meminfo dump options: [-a] [-d] [-c] [--oom] [process]");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -a: include all available information for each process.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -d: include dalvik details when dumping process details.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -c: dump in a compact machine-parseable representation.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --oom: only show processes organized by oom adj.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --local: only collect details locally, don\'t call process.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --package: interpret process arg as package, dumping all");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("             processes that have loaded that package.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("If [process] is specified it can be the name or ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("pid of a specific process to dump.");

        return;

     label009:
        $r135 = new java.lang.StringBuilder;

        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r133);

     label010:
        goto label001;

     label011:
        z36 = staticinvoke <com.android.server.am.ActivityManagerService: boolean scanArgs(java.lang.String[],java.lang.String)>(r4, "--checkin");

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r8 = newarray (long)[1];

        r7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r2, i0, z7, r4);

        if r7 != null goto label034;

        if r4 == null goto label033;

        $i156 = lengthof r4;

        if $i156 <= i0 goto label033;

        $r88 = r4[i0];

        $c157 = virtualinvoke $r88.<java.lang.String: char charAt(int)>(0);

        if $c157 == 45 goto label033;

        $r89 = new java.util.ArrayList;

        specialinvoke $r89.<java.util.ArrayList: void <init>()>();

        r9 = $r89;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        i3 = -1;

     label012:
        $r90 = r4[i0];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r90);

     label013:
        goto label015;

     label014:
        $r136 := @caughtexception;

     label015:
        $r92 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r141 = $r92;

        entermonitor $r92;

     label016:
        $r91 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i4 = virtualinvoke $r91.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

        i5 = 0;

     label017:
        if i5 >= i4 goto label020;

        $r125 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r11 = virtualinvoke $r125.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i5);

        $i167 = r11.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        if $i167 == i3 goto label018;

        $r123 = r11.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        if $r123 == null goto label019;

        $r111 = r11.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        $r112 = r4[i0];

        $z28 = virtualinvoke $r111.<java.lang.String: boolean equals(java.lang.Object)>($r112);

        if $z28 == 0 goto label019;

     label018:
        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

     label019:
        i5 = i5 + 1;

        goto label017;

     label020:
        exitmonitor r141;

     label021:
        goto label024;

     label022:
        $r139 := @caughtexception;

        r12 = $r139;

        exitmonitor r141;

     label023:
        throw r12;

     label024:
        $i159 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if $i159 <= 0 goto label033;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)>(r2, l1, l2, z36, z5);

        r142 = null;

        $i158 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        i168 = $i158 - 1;

     label025:
        if i168 < 0 goto label032;

        $r94 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i168);

        r143 = (com.android.internal.os.ProcessCpuTracker$Stats) $r94;

        i169 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        if z36 != 0 goto label026;

        if z1 == 0 goto label026;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i169);

        $r117 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r118 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        $r126 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r124 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r124);

     label026:
        if r142 != null goto label027;

        $r121 = new android.os.Debug$MemoryInfo;

        specialinvoke $r121.<android.os.Debug$MemoryInfo: void <init>()>();

        r142 = $r121;

     label027:
        if z1 != 0 goto label028;

        if z0 != 0 goto label029;

        if z4 != 0 goto label029;

     label028:
        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i169, r142);

        goto label030;

     label029:
        $l161 = staticinvoke <android.os.Debug: long getPss(int,long[])>(i169, r8);

        $i160 = (int) $l161;

        r142.<android.os.Debug$MemoryInfo: int dalvikPss> = $i160;

        $l165 = r8[0];

        $i166 = (int) $l165;

        r142.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i166;

     label030:
        $r93 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r2, r142, z36, z2, z3, i169, $r93, 0L, 0L, 0L, 0L, 0L, 0L);

        if z36 == 0 goto label031;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label031:
        i168 = i168 + -1;

        goto label025;

     label032:
        return;

     label033:
        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r106 = r4[i0];

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r108);

        return;

     label034:
        if z0 != 0 goto label036;

        if z4 != 0 goto label036;

        $i162 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i162 == 1 goto label035;

        if z36 != 0 goto label035;

        if z7 == 0 goto label036;

     label035:
        z1 = 1;

     label036:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)>(r2, l1, l2, z36, z5);

        $i20 = lengthof r4;

        $i19 = $i20 - i0;

        r144 = newarray (java.lang.String)[$i19];

        $i18 = lengthof r4;

        $i17 = $i18 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i0, r144, 0, $i17);

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r145 = $r27;

        $r28 = new android.util.SparseArray;

        specialinvoke $r28.<android.util.SparseArray: void <init>()>();

        r146 = $r28;

        l170 = 0L;

        l171 = 0L;

        l6 = 0L;

        r13 = newarray (long)[16];

        $r29 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $i23 = lengthof $r29;

        r14 = newarray (long)[$i23];

        $r25 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $i21 = lengthof $r25;

        $r26 = newarray (java.util.ArrayList)[$i21];

        r15 = (java.util.ArrayList[]) $r26;

        l7 = 0L;

        l9 = 0L;

        r16 = null;

        $i22 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i8 = $i22 - 1;

     label037:
        if i8 < 0 goto label070;

        $r63 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r17 = (com.android.server.am.ProcessRecord) $r63;

        r20 = r0;

        entermonitor r0;

     label038:
        r18 = r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        i10 = r17.<com.android.server.am.ProcessRecord: int pid>;

        i11 = virtualinvoke r17.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

        $r77 = r17.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i135 = virtualinvoke $r77.<java.util.ArrayList: int size()>();

        if $i135 <= 0 goto label039;

        $z26 = 1;

        goto label040;

     label039:
        $z26 = 0;

     label040:
        z8 = $z26;

        exitmonitor r20;

     label041:
        goto label044;

     label042:
        $r137 := @caughtexception;

        r19 = $r137;

        exitmonitor r20;

     label043:
        throw r19;

     label044:
        if r18 == null goto label069;

        if z36 != 0 goto label045;

        if z1 == 0 goto label045;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r100 = r17.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r103);

     label045:
        if r16 != null goto label046;

        $r95 = new android.os.Debug$MemoryInfo;

        specialinvoke $r95.<android.os.Debug$MemoryInfo: void <init>()>();

        r16 = $r95;

     label046:
        if z1 != 0 goto label047;

        if z0 != 0 goto label048;

        if z4 != 0 goto label048;

     label047:
        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i10, r16);

        goto label049;

     label048:
        $l145 = staticinvoke <android.os.Debug: long getPss(int,long[])>(i10, r8);

        $i144 = (int) $l145;

        r16.<android.os.Debug$MemoryInfo: int dalvikPss> = $i144;

        $l143 = r8[0];

        $i142 = (int) $l143;

        r16.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i142;

     label049:
        if z1 == 0 goto label053;

        if z6 == 0 goto label050;

        $r80 = r17.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r2, r16, z36, z2, z3, i10, $r80, 0L, 0L, 0L, 0L, 0L, 0L);

        if z36 == 0 goto label053;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label053;

     label050:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        interfaceinvoke r18.<android.app.IApplicationThread: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug$MemoryInfo,boolean,boolean,boolean,java.lang.String[])>(r1, r16, z36, z2, z3, r144);

     label051:
        goto label053;

     label052:
        $r138 := @caughtexception;

        if z36 != 0 goto label053;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Got RemoteException!");

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label053:
        $i133 = virtualinvoke r16.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l172 = (long) $i133;

        $i134 = virtualinvoke r16.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        l12 = (long) $i134;

        r22 = r0;

        entermonitor r0;

     label054:
        $r76 = r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r76 == null goto label055;

        $i141 = virtualinvoke r17.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

        if i11 != $i141 goto label055;

        $r81 = r17.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r82 = r17.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r81.<com.android.internal.app.ProcessStats$ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>(l172, l12, 1, $r82);

     label055:
        exitmonitor r22;

     label056:
        goto label059;

     label057:
        $r140 := @caughtexception;

        r21 = $r140;

        exitmonitor r22;

     label058:
        throw r21;

     label059:
        if z36 != 0 goto label069;

        if r16 == null goto label069;

        l7 = l7 + l172;

        $r74 = new com.android.server.am.ActivityManagerService$MemItem;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = r17.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $r68 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        if z8 == 0 goto label060;

        $r79 = " / activities)";

        goto label061;

     label060:
        $r79 = ")";

     label061:
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r83 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        $r84 = r17.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r74.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int,boolean)>($r83, $r84, l172, i10, z8);

        r148 = $r74;

        virtualinvoke r145.<java.util.ArrayList: boolean add(java.lang.Object)>(r148);

        virtualinvoke r146.<android.util.SparseArray: void put(int,java.lang.Object)>(i10, r148);

        $i146 = r16.<android.os.Debug$MemoryInfo: int nativePss>;

        $l149 = (long) $i146;

        l170 = l170 + $l149;

        $i150 = r16.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l147 = (long) $i150;

        l171 = l171 + $l147;

        $i148 = r16.<android.os.Debug$MemoryInfo: int otherPss>;

        $l152 = (long) $i148;

        l6 = l6 + $l152;

        i173 = 0;

     label062:
        if i173 >= 16 goto label063;

        $i140 = virtualinvoke r16.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i173);

        l13 = (long) $i140;

        $l139 = r13[i173];

        $l138 = $l139 + l13;

        r13[i173] = $l138;

        l6 = l6 - l13;

        i173 = i173 + 1;

        goto label062;

     label063:
        if i11 < 9 goto label064;

        l9 = l9 + l172;

     label064:
        i174 = 0;

     label065:
        $i153 = lengthof r14;

        if i174 >= $i153 goto label069;

        $r85 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i151 = $r85[i174];

        if i11 <= $i151 goto label066;

        $i137 = lengthof r14;

        $i136 = $i137 - 1;

        if i174 != $i136 goto label068;

     label066:
        $l154 = r14[i174];

        $l155 = $l154 + l172;

        r14[i174] = $l155;

        $r86 = r15[i174];

        if $r86 != null goto label067;

        $r78 = new java.util.ArrayList;

        specialinvoke $r78.<java.util.ArrayList: void <init>()>();

        r15[i174] = $r78;

     label067:
        $r87 = r15[i174];

        virtualinvoke $r87.<java.util.ArrayList: boolean add(java.lang.Object)>(r148);

        goto label069;

     label068:
        i174 = i174 + 1;

        goto label065;

     label069:
        i8 = i8 + -1;

        goto label037;

     label070:
        l175 = 0L;

        if z36 != 0 goto label122;

        $i24 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i24 <= 1 goto label122;

        if z7 != 0 goto label122;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r149 = $r32;

        entermonitor $r32;

     label071:
        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i176 = virtualinvoke $r33.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

        i177 = 0;

     label072:
        if i177 >= i176 goto label080;

        $r51 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r150 = virtualinvoke $r51.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i177);

        $l117 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: long vsize>;

        $b116 = $l117 cmp 0L;

        if $b116 <= 0 goto label079;

        $i113 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $i112 = virtualinvoke r146.<android.util.SparseArray: int indexOfKey(int)>($i113);

        if $i112 >= 0 goto label079;

        if r16 != null goto label073;

        $r64 = new android.os.Debug$MemoryInfo;

        specialinvoke $r64.<android.os.Debug$MemoryInfo: void <init>()>();

        r16 = $r64;

     label073:
        if z0 != 0 goto label074;

        if z4 != 0 goto label074;

        $i125 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i125, r16);

        goto label075;

     label074:
        $i115 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $l114 = staticinvoke <android.os.Debug: long getPss(int,long[])>($i115, r8);

        $i109 = (int) $l114;

        r16.<android.os.Debug$MemoryInfo: int nativePss> = $i109;

        $l108 = r8[0];

        $i111 = (int) $l108;

        r16.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i111;

     label075:
        $i110 = virtualinvoke r16.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l178 = (long) $i110;

        l7 = l7 + l178;

        l175 = l175 + l178;

        $r58 = new com.android.server.am.ActivityManagerService$MemItem;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r55 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i124 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i124);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r53 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i123 = r150.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        specialinvoke $r58.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int,boolean)>($r53, $r54, l178, $i123, 0);

        r151 = $r58;

        virtualinvoke r145.<java.util.ArrayList: boolean add(java.lang.Object)>(r151);

        $i119 = r16.<android.os.Debug$MemoryInfo: int nativePss>;

        $l120 = (long) $i119;

        l170 = l170 + $l120;

        $i121 = r16.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l122 = (long) $i121;

        l171 = l171 + $l122;

        $i132 = r16.<android.os.Debug$MemoryInfo: int otherPss>;

        $l131 = (long) $i132;

        l6 = l6 + $l131;

        i14 = 0;

     label076:
        if i14 >= 16 goto label077;

        $i128 = virtualinvoke r16.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i14);

        l179 = (long) $i128;

        $l127 = r13[i14];

        $l126 = $l127 + l179;

        r13[i14] = $l126;

        l6 = l6 - l179;

        i14 = i14 + 1;

        goto label076;

     label077:
        $l130 = r14[0];

        $l129 = $l130 + l178;

        r14[0] = $l129;

        $r67 = r15[0];

        if $r67 != null goto label078;

        $r65 = new java.util.ArrayList;

        specialinvoke $r65.<java.util.ArrayList: void <init>()>();

        r15[0] = $r65;

     label078:
        $r66 = r15[0];

        virtualinvoke $r66.<java.util.ArrayList: boolean add(java.lang.Object)>(r151);

     label079:
        i177 = i177 + 1;

        goto label072;

     label080:
        exitmonitor r149;

     label081:
        goto label084;

     label082:
        $r128 := @caughtexception;

        r24 = $r128;

        exitmonitor r149;

     label083:
        throw r24;

     label084:
        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r152 = $r30;

        $r31 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r31.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>("Native", "Native", l170, -1);

        virtualinvoke r152.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

        $r36 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r36.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>("Dalvik", "Dalvik", l171, -2);

        virtualinvoke r152.<java.util.ArrayList: boolean add(java.lang.Object)>($r36);

        $r37 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r37.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>("Unknown", "Unknown", l6, -3);

        virtualinvoke r152.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

        i180 = 0;

     label085:
        if i180 >= 16 goto label086;

        r153 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i180);

        $r52 = new com.android.server.am.ActivityManagerService$MemItem;

        $l118 = r13[i180];

        specialinvoke $r52.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>(r153, r153, $l118, i180);

        virtualinvoke r152.<java.util.ArrayList: boolean add(java.lang.Object)>($r52);

        i180 = i180 + 1;

        goto label085;

     label086:
        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        r154 = $r34;

        i181 = 0;

     label087:
        $i25 = lengthof r14;

        if i181 >= $i25 goto label091;

        $l107 = r14[i181];

        $b106 = $l107 cmp 0L;

        if $b106 == 0 goto label090;

        if z5 == 0 goto label088;

        $r46 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL>;

        $r47 = $r46[i181];

        goto label089;

     label088:
        $r49 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $r47 = $r49[i181];

     label089:
        r155 = $r47;

        $r44 = new com.android.server.am.ActivityManagerService$MemItem;

        $l102 = r14[i181];

        $r45 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i101 = $r45[i181];

        specialinvoke $r44.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>(r155, r155, $l102, $i101);

        r156 = $r44;

        $r48 = r15[i181];

        r156.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems> = $r48;

        virtualinvoke r154.<java.util.ArrayList: boolean add(java.lang.Object)>(r156);

     label090:
        i181 = i181 + 1;

        goto label087;

     label091:
        if z0 != 0 goto label092;

        if z4 != 0 goto label092;

        if z5 != 0 goto label092;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by process:");

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r2, "  ", "proc", r145, 1, z5);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label092:
        if z5 != 0 goto label093;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by OOM adjustment:");

     label093:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r2, "  ", "oom", r154, 0, z5);

        if z0 != 0 goto label097;

        if z4 != 0 goto label097;

        if r5 == null goto label094;

        $r50 = r5;

        goto label095;

     label094:
        $r50 = r2;

     label095:
        r157 = $r50;

        if z5 != 0 goto label096;

        virtualinvoke r157.<java.io.PrintWriter: void println()>();

        virtualinvoke r157.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by category:");

     label096:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r157, "  ", "cat", r152, 1, z5);

     label097:
        if z5 != 0 goto label098;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label098:
        $r35 = new com.android.internal.util.MemInfoReader;

        specialinvoke $r35.<com.android.internal.util.MemInfoReader: void <init>()>();

        r158 = $r35;

        virtualinvoke r158.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        $b26 = l175 cmp 0L;

        if $b26 <= 0 goto label103;

        r159 = r0;

        entermonitor r0;

     label099:
        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $l87 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l92 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l91 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $l90 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        $l89 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        $l104 = $l90 + $l89;

        $l105 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        $l103 = $l104 + $l105;

        virtualinvoke $r42.<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>($l87, $l92, $l91, $l103, l175);

        exitmonitor r159;

     label100:
        goto label103;

     label101:
        $r129 := @caughtexception;

        r23 = $r129;

        exitmonitor r159;

     label102:
        throw r23;

     label103:
        if z0 != 0 goto label111;

        if z5 != 0 goto label110;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Total RAM: ");

        $l96 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l96);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB (status ");

        $i95 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        tableswitch($i95)
        {
            case 0: goto label104;
            case 1: goto label105;
            case 2: goto label106;
            case 3: goto label107;
            default: goto label108;
        };

     label104:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("normal)");

        goto label109;

     label105:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("moderate)");

        goto label109;

     label106:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("low)");

        goto label109;

     label107:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("critical)");

        goto label109;

     label108:
        $i88 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i88);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(")");

     label109:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Free RAM: ");

        $l94 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l93 = l9 + $l94;

        $l100 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l99 = $l93 + $l100;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l99);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB (");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" cached pss + ");

        $l98 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l98);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" cached + ");

        $l97 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l97);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" free)");

        goto label111;

     label110:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("ram,");

        $l73 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l73);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l74 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l75 = l9 + $l74;

        $l76 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l77 = $l75 + $l76;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l77);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l78 = l7 - l9;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l78);

     label111:
        if z5 != 0 goto label112;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Used RAM: ");

        $l65 = l7 - l9;

        $l68 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        $l67 = $l65 + $l68;

        $l70 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        $l69 = $l67 + $l70;

        $l56 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        $l55 = $l69 + $l56;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l55);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB (");

        $l58 = l7 - l9;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l58);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" used pss + ");

        $l57 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l57);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" buffers + ");

        $l60 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l60);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" shmem + ");

        $l59 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l59);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" slab)");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Lost RAM: ");

        $l62 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        $l61 = $l62 - l7;

        $l79 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l80 = $l61 - $l79;

        $l81 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l82 = $l80 - $l81;

        $l83 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        $l84 = $l82 - $l83;

        $l85 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        $l86 = $l84 - $l85;

        $l71 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        $l72 = $l86 - $l71;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l72);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB");

     label112:
        if z0 != 0 goto label122;

        $l31 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $b30 = $l31 cmp 0L;

        if $b30 == 0 goto label114;

        if z5 != 0 goto label113;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("     ZRAM: ");

        $l48 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l48);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB physical used for ");

        $l47 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        $l64 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        $l63 = $l47 - $l64;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l63);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB in swap (");

        $l66 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l66);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB total swap)");

        goto label114;

     label113:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("zram,");

        $l51 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l51);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l50 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l50);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l49 = virtualinvoke r158.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l49);

     label114:
        $r38 = newarray (int)[1];

        $r38[0] = 8224;

        r160 = $r38;

        r161 = newarray (long)[1];

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_shared", r160, null, r161, null);

        $l28 = r161[0];

        $l27 = $l28 * 4096L;

        l182 = $l27 / 1024L;

        r161[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_sharing", r160, null, r161, null);

        $l29 = r161[0];

        $l37 = $l29 * 4096L;

        l183 = $l37 / 1024L;

        r161[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_unshared", r160, null, r161, null);

        $l35 = r161[0];

        $l36 = $l35 * 4096L;

        l184 = $l36 / 1024L;

        r161[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_volatile", r160, null, r161, null);

        $l34 = r161[0];

        $l32 = $l34 * 4096L;

        l16 = $l32 / 1024L;

        if z5 != 0 goto label119;

        $b38 = l183 cmp 0L;

        if $b38 != 0 goto label115;

        $b54 = l182 cmp 0L;

        if $b54 != 0 goto label115;

        $b53 = l184 cmp 0L;

        if $b53 != 0 goto label115;

        $b52 = l16 cmp 0L;

        if $b52 == 0 goto label116;

     label115:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      KSM: ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l183);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB saved from shared ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l182);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("           ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l184);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB unshared; ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l16);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB volatile");

     label116:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("   Tuning: ");

        $i39 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i39);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (large ");

        $i46 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i46);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("), oom ");

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l45 = virtualinvoke $r41.<com.android.server.am.ProcessList: long getMemLevel(int)>(15);

        $l44 = $l45 / 1024L;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l44);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", restore limit ");

        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l43 = virtualinvoke $r40.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l43);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB");

        $z19 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z19 == 0 goto label117;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (low-ram)");

     label117:
        $z18 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z18 == 0 goto label118;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (high-end-gfx)");

     label118:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label122;

     label119:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("ksm,");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l183);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l182);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l184);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>(l16);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("tuning,");

        $i33 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i33);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(44);

        $i42 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i42);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(44);

        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l40 = virtualinvoke $r39.<com.android.server.am.ProcessList: long getMemLevel(int)>(15);

        $l41 = $l40 / 1024L;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l41);

        $z16 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z16 == 0 goto label120;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",low-ram");

     label120:
        $z17 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z17 == 0 goto label121;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",high-end-gfx");

     label121:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label122:
        return;

        catch java.lang.NumberFormatException from label012 to label013 with label014;
        catch java.lang.Throwable from label016 to label021 with label022;
        catch java.lang.Throwable from label022 to label023 with label022;
        catch java.lang.Throwable from label038 to label041 with label042;
        catch java.lang.Throwable from label042 to label043 with label042;
        catch android.os.RemoteException from label050 to label051 with label052;
        catch java.lang.Throwable from label054 to label056 with label057;
        catch java.lang.Throwable from label057 to label058 with label057;
        catch java.lang.Throwable from label071 to label081 with label082;
        catch java.lang.Throwable from label082 to label083 with label082;
        catch java.lang.Throwable from label099 to label100 with label101;
        catch java.lang.Throwable from label101 to label102 with label101;
    }

    private static boolean scanArgs(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        java.lang.String r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private final boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r5, $r24;
        com.android.server.am.ContentProviderRecord r2, r3, $r19, $r22;
        boolean z0, z1, $z3, $z5;
        java.lang.Throwable r4, $r38;
        java.util.ArrayList $r7, $r13, $r14, $r15, $r25, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        com.android.server.am.ProviderMap $r9, $r40;
        android.content.ComponentName $r10, $r34;
        android.content.pm.ProviderInfo $r11;
        java.lang.String $r12, $r33, $r35, $r36, $r39;
        java.lang.Object $r16;
        android.app.IApplicationThread $r17, $r20, $r28;
        android.content.IContentProvider $r18, $r23;
        android.os.IBinder $r21;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r37;
        android.os.RemoteException $r41;
        java.lang.String[] r42;
        com.android.server.am.ContentProviderConnection r43;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        z0 := @parameter2: boolean;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        z1 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if z1 == 0 goto label01;

        if z0 == 0 goto label08;

     label01:
        r3 = r2;

        entermonitor r2;

     label02:
        r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = null;

        virtualinvoke r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r38 := @caughtexception;

        r4 = $r38;

        exitmonitor r3;

     label05:
        throw r4;

     label06:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r10 = r2.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $i0 = r2.<com.android.server.am.ContentProviderRecord: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        virtualinvoke $r9.<com.android.server.am.ProviderMap: void removeProviderByClass(android.content.ComponentName,int)>($r10, $i1);

        $r11 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r12 = $r11.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r42 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i10 = 0;

     label07:
        $i2 = lengthof r42;

        if i10 >= $i2 goto label08;

        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r39 = r42[i10];

        $i8 = r2.<com.android.server.am.ContentProviderRecord: int uid>;

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i8);

        virtualinvoke $r40.<com.android.server.am.ProviderMap: void removeProviderByName(java.lang.String,int)>($r39, $i9);

        i10 = i10 + 1;

        goto label07;

     label08:
        i11 = 0;

     label09:
        $r13 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $i3 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if i11 >= $i3 goto label19;

        $r15 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r43 = (com.android.server.am.ContentProviderConnection) $r16;

        $z3 = r43.<com.android.server.am.ContentProviderConnection: boolean waiting>;

        if $z3 == 0 goto label10;

        if z1 == 0 goto label10;

        if z0 != 0 goto label10;

        goto label18;

     label10:
        r5 = r43.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        r43.<com.android.server.am.ContentProviderConnection: boolean dead> = 1;

        $i4 = r43.<com.android.server.am.ContentProviderConnection: int stableCount>;

        if $i4 <= 0 goto label13;

        $z5 = r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z5 != 0 goto label18;

        $r28 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r28 == null goto label18;

        $i5 = r5.<com.android.server.am.ProcessRecord: int pid>;

        if $i5 == 0 goto label18;

        $i7 = r5.<com.android.server.am.ProcessRecord: int pid>;

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i7 == $i6 goto label18;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("depends on provider ");

        $r34 = r2.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r33 = virtualinvoke $r34.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in dying proc ");

        if r1 == null goto label11;

        $r35 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label12;

     label11:
        $r35 = "??";

     label12:
        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r36, 1);

        goto label18;

     label13:
        $r17 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r17 == null goto label18;

        $r19 = r43.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r18 = $r19.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r18 == null goto label18;

     label14:
        $r20 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = r43.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r23 = $r22.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        $r21 = interfaceinvoke $r23.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r20.<android.app.IApplicationThread: void unstableProviderDied(android.os.IBinder)>($r21);

     label15:
        goto label17;

     label16:
        $r41 := @caughtexception;

     label17:
        $r26 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r26.<java.util.ArrayList: java.lang.Object remove(int)>(i11);

        $r24 = r43.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r25 = $r24.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r25.<java.util.ArrayList: boolean remove(java.lang.Object)>(r43);

     label18:
        i11 = i11 + 1;

        goto label09;

     label19:
        if z1 == 0 goto label20;

        if z0 == 0 goto label20;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r14.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label20:
        return z1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private final boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r24, $r26, $r27, $r42, $r49;
        boolean z0, z1, z2, z3, $z6, $z7, $z8, $z10, $z11, $z13, $z14, $z18, $z19, $z20, $z21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28;
        com.android.server.am.ContentProviderRecord r2, $r62;
        java.lang.Throwable r3, $r72;
        java.util.ArrayList $r4, $r5, $r14, $r18, $r28, $r46, $r47, $r48, $r52, $r53, $r55, $r63, $r64, $r66;
        android.app.Dialog $r6, $r7, $r9, $r67, $r68, $r69;
        com.android.server.am.ProcessStatsService $r8, $r11;
        com.android.server.am.ActiveServices $r10;
        android.util.ArrayMap $r12, $r13, $r61;
        android.util.ArraySet $r15, $r17, $r56;
        com.android.server.am.BackupRecord $r16, $r50;
        com.android.server.am.ActivityManagerService$MainHandler $r19, $r30, $r43, $r44;
        android.content.pm.ApplicationInfo $r20, $r34, $r35, $r58;
        java.lang.String $r21, $r33, $r38, $r40, $r59;
        android.os.Message $r22, $r41;
        android.util.SparseArray $r23, $r29, $r31, r77;
        com.android.internal.app.ProcessMap $r25, $r36;
        com.android.server.am.BatteryStatsService $r32, $r39;
        java.lang.Object $r45, $r57, $r65, $r70;
        com.android.server.am.ReceiverList $r54;
        android.os.IBinder $r60;
        android.os.RemoteException $r71;
        com.android.server.am.ContentProviderConnection r73;
        android.app.backup.IBackupManager r74;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r76;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        if i0 < 0 goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        $i25 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void remove(int)>($i25);

     label01:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        if $r6 == null goto label02;

        $z18 = r1.<com.android.server.am.ProcessRecord: boolean forceCrashReport>;

        if $z18 != 0 goto label02;

        $r67 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        virtualinvoke $r67.<android.app.Dialog: void dismiss()>();

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog> = null;

     label02:
        $r7 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r7 == null goto label03;

        $r68 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        virtualinvoke $r68.<android.app.Dialog: void dismiss()>();

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = null;

     label03:
        $r9 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r9 == null goto label04;

        $r69 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        virtualinvoke $r69.<android.app.Dialog: void dismiss()>();

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label04:
        r1.<com.android.server.am.ProcessRecord: boolean crashing> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 0;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r8);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void makeInactive(com.android.server.am.ProcessStatsService)>($r11);

        r1.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = null;

        r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, 0, 0);

        r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities> = 0;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r10.<com.android.server.am.ActiveServices: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>(r1, z1);

        z2 = 0;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i2 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        i1 = $i2 - 1;

     label05:
        if i1 < 0 goto label11;

        $r61 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r70 = virtualinvoke $r61.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.server.am.ContentProviderRecord) $r70;

        $z21 = r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z21 != 0 goto label06;

        if z1 != 0 goto label07;

     label06:
        $z19 = 1;

        goto label08;

     label07:
        $z19 = 0;

     label08:
        z3 = $z19;

        $z20 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(r1, r2, z3);

        if $z20 != 0 goto label09;

        if z3 == 0 goto label10;

     label09:
        z2 = 1;

     label10:
        r2.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider> = null;

        r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc> = null;

        i1 = i1 + -1;

        goto label05;

     label11:
        $r13 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        virtualinvoke $r13.<android.util.ArrayMap: void clear()>();

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 0);

        if $z6 == 0 goto label12;

        z2 = 1;

     label12:
        $r14 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $z7 = virtualinvoke $r14.<java.util.ArrayList: boolean isEmpty()>();

        if $z7 != 0 goto label15;

        i26 = 0;

     label13:
        $r55 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i24 = virtualinvoke $r55.<java.util.ArrayList: int size()>();

        if i26 >= $i24 goto label14;

        $r64 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r65 = virtualinvoke $r64.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r73 = (com.android.server.am.ContentProviderConnection) $r65;

        $r62 = r73.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r63 = $r62.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r63.<java.util.ArrayList: boolean remove(java.lang.Object)>(r73);

        i26 = i26 + 1;

        goto label13;

     label14:
        $r66 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r66.<java.util.ArrayList: void clear()>();

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        $r15 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $i3 = virtualinvoke $r15.<android.util.ArraySet: int size()>();

        i27 = $i3 - 1;

     label16:
        if i27 < 0 goto label17;

        $r56 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $r57 = virtualinvoke $r56.<android.util.ArraySet: java.lang.Object valueAt(int)>(i27);

        $r54 = (com.android.server.am.ReceiverList) $r57;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>($r54);

        i27 = i27 + -1;

        goto label16;

     label17:
        $r17 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r17.<android.util.ArraySet: void clear()>();

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r16 == null goto label21;

        $i22 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r49 = $r50.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        $i23 = $r49.<com.android.server.am.ProcessRecord: int pid>;

        if $i22 != $i23 goto label21;

     label18:
        $r60 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        r74 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r60);

        $r58 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r59 = $r58.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke r74.<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>($r59);

     label19:
        goto label21;

     label20:
        $r71 := @caughtexception;

     label21:
        $r18 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i4 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        i28 = $i4 - 1;

     label22:
        if i28 < 0 goto label24;

        $r46 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r45 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        r76 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r45;

        $i19 = r76.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i20 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i19 != $i20 goto label23;

        $r52 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r52.<java.util.ArrayList: java.lang.Object remove(int)>(i28);

        $r53 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        virtualinvoke $r53.<java.util.ArrayList: boolean add(java.lang.Object)>(r76);

     label23:
        i28 = i28 + -1;

        goto label22;

     label24:
        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r20 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r20.<android.content.pm.ApplicationInfo: int uid>;

        $r22 = virtualinvoke $r19.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(32, $i5, $i6, null);

        virtualinvoke $r22.<android.os.Message: void sendToTarget()>();

        if z0 == 0 goto label25;

        return 0;

     label25:
        $z8 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z8 == 0 goto label26;

        $z13 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z13 == 0 goto label27;

     label26:
        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r21 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i7 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r25.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r21, $i7);

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i8 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r23.<android.util.SparseArray: void remove(int)>($i8);

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r24 != r1 goto label28;

        $r44 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i18 = $r42.<com.android.server.am.ProcessRecord: int userId>;

        $r41 = virtualinvoke $r43.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(25, $i18, 0);

        virtualinvoke $r44.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r41);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

        goto label28;

     label27:
        $z14 = r1.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z14 != 0 goto label28;

        $r47 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i21 = virtualinvoke $r47.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if $i21 >= 0 goto label28;

        $r48 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r48.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        z2 = 1;

     label28:
        $r28 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r28.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 != $r26 goto label29;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = null;

     label29:
        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if r1 != $r27 goto label30;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess> = null;

     label30:
        if z2 == 0 goto label32;

        $z11 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z11 != 0 goto label32;

        if i0 >= 0 goto label31;

        $i16 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void remove(int)>($i16);

     label31:
        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r40 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i17 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r36.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r40, $i17, r1);

        $r38 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r1, "restart", $r38);

        return 1;

     label32:
        $i11 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i11 <= 0 goto label39;

        $i9 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i9 == $i10 goto label39;

        $r29 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r77 = $r29;

        entermonitor $r29;

     label33:
        $r31 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i12 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r31.<android.util.SparseArray: void remove(int)>($i12);

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r30.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r1);

        exitmonitor r77;

     label34:
        goto label37;

     label35:
        $r72 := @caughtexception;

        r3 = $r72;

        exitmonitor r77;

     label36:
        throw r3;

     label37:
        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r33 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r34 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i13 = $r34.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r32.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r33, $i13);

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z10 == 0 goto label38;

        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i14 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r35 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i15 = $r35.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r39.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i14, $i15);

     label38:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

     label39:
        return 0;

        catch android.os.RemoteException from label18 to label19 with label20;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label35 to label36 with label35;
    }

    boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        boolean z0, z1, $z3;
        int i0, i1;
        com.android.server.am.ContentProviderRecord r2;
        java.util.ArrayList $r3, $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        z1 = 0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ContentProviderRecord) $r5;

        $r6 = r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r6 != r1 goto label3;

        if z0 != 0 goto label2;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z3 != 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(r1, r2, 1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = i1 + -1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return z1;
    }

    public java.util.List getServices(int, int)
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, i1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActiveServices $r4;
        java.util.List $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getServices");

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.ComponentName r1;
        java.lang.Throwable r3, $r7;
        com.android.server.am.ActiveServices $r5;
        android.app.PendingIntent $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningServiceControlPanel");

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>(r1);

        exitmonitor r2;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.ComponentName startService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, i1, i2;
        long l3;
        android.content.ComponentName r5;
        java.lang.Throwable r6, $r9;
        com.android.server.am.ActiveServices $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startService");

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r10;

     label1:
        r4 = r0;

        entermonitor r0;

     label2:
        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r5 = virtualinvoke $r8.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int)>(r1, r2, r3, i1, i2, i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r4;

     label3:
        return r5;

     label4:
        $r9 := @caughtexception;

        r6 = $r9;

        exitmonitor r4;

     label5:
        throw r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.content.ComponentName startServiceInPackage(int, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        int i0, i1;
        android.content.Intent r1;
        java.lang.String r2;
        long l2;
        android.content.ComponentName r4;
        java.lang.Throwable r5, $r8;
        com.android.server.am.ActiveServices $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 = r0;

        entermonitor r0;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r4 = virtualinvoke $r7.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int)>(null, r1, r2, -1, i0, i1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label2:
        return r4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r3;

     label4:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int stopService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, $i1;
        java.lang.Throwable r5, $r9;
        com.android.server.am.ActiveServices $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("stopService");

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label1:
        r4 = r0;

        entermonitor r0;

     label2:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $i1 = virtualinvoke $r7.<com.android.server.am.ActiveServices: int stopServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(r1, r2, r3, i0);

        exitmonitor r4;

     label3:
        return $i1;

     label4:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label5:
        throw r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.os.IBinder peekService(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.content.Intent r1;
        java.lang.String r2;
        java.lang.Throwable r4, $r9;
        com.android.server.am.ActiveServices $r6;
        android.os.IBinder $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("peekService");

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label1:
        r3 = r0;

        entermonitor r0;

     label2:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ActiveServices: android.os.IBinder peekServiceLocked(android.content.Intent,java.lang.String)>(r1, r2);

        exitmonitor r3;

     label3:
        return $r7;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean stopServiceToken(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ActiveServices $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z0 = virtualinvoke $r6.<com.android.server.am.ActiveServices: boolean stopServiceTokenLocked(android.content.ComponentName,android.os.IBinder,int)>(r1, r2, i0);

        exitmonitor r3;

     label2:
        return $z0;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setServiceForeground(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0;
        android.app.Notification r3;
        boolean z0;
        java.lang.Throwable r5, $r8;
        com.android.server.am.ActiveServices $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: android.app.Notification;

        z0 := @parameter4: boolean;

        r4 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r7.<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>(r1, r2, i0, r3, z0);

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int handleIncomingUser(int, int, int, boolean, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        boolean z0, z1;
        java.lang.String r1, r2;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        if z1 == 0 goto label1;

        $b4 = 2;

        goto label2;

     label1:
        $b4 = 0;

     label2:
        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, i1, i2, z0, $b4, r1, r2);

        return $i3;
    }

    int unsafeConvertIncomingUser(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 == -2 goto label1;

        if i0 != -3 goto label2;

     label1:
        $i1 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        goto label3;

     label2:
        $i1 = i0;

     label3:
        return $i1;
    }

    int handleIncomingUser(int, int, int, boolean, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10;
        boolean z0, z1, $z2, $z3;
        java.lang.String r1, r2, $r12, $r14, $r17, $r21, r43;
        android.util.SparseIntArray r3, $r22, $r25, $r26;
        java.lang.Throwable r4, $r39;
        com.android.server.pm.UserManagerService $r5;
        java.lang.SecurityException $r6, $r38;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r15, $r16, $r18, $r20, $r23, $r24, $r29, r42;
        java.lang.IllegalArgumentException $r13, $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if i4 != i2 goto label01;

        return i2;

     label01:
        i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int unsafeConvertIncomingUser(int)>(i2);

        if i1 == 0 goto label18;

        if i1 == 1000 goto label18;

        $i8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0, i1, -1, 1);

        if $i8 != 0 goto label02;

        z1 = 1;

        goto label14;

     label02:
        if i3 != 2 goto label03;

        z1 = 0;

        goto label14;

     label03:
        $i9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i0, i1, -1, 1);

        if $i9 == 0 goto label04;

        z1 = 0;

        goto label14;

     label04:
        if i3 != 0 goto label05;

        z1 = 1;

        goto label14;

     label05:
        if i3 != 1 goto label13;

        $r22 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        r3 = $r22;

        entermonitor $r22;

     label06:
        $r26 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        i6 = virtualinvoke $r26.<android.util.SparseIntArray: int get(int,int)>(i4, -1);

        $r25 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        i7 = virtualinvoke $r25.<android.util.SparseIntArray: int get(int,int)>(i5, -1);

        if i6 == -1 goto label07;

        if i6 != i7 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        z1 = $z3;

        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r39 := @caughtexception;

        r4 = $r39;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        goto label14;

     label13:
        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown mode: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label14:
        if z1 != 0 goto label18;

        if i2 != -3 goto label15;

        i5 = i4;

        goto label18;

     label15:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(int)>(128);

        r42 = $r29;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        if r2 == null goto label16;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label16:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" asks to run as user ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is calling from user ");

        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; this requires ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if i3 == 2 goto label17;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

     label17:
        r43 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r43);

        $r38 = new java.lang.SecurityException;

        specialinvoke $r38.<java.lang.SecurityException: void <init>(java.lang.String)>(r43);

        throw $r38;

     label18:
        if z0 != 0 goto label19;

        if i5 >= 0 goto label19;

        $r13 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call does not support special user #");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label19:
        if i1 != 2000 goto label20;

        if i5 < 0 goto label20;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        $z2 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", i5);

        if $z2 == 0 goto label20;

        $r6 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shell does not have permission to access user ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n ");

        $r12 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label20:
        return i5;

        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    boolean isSingleton(java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r5, $r6, $r9, $r10;
        android.content.pm.ApplicationInfo r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1, $z2, $z3;
        android.content.ComponentName r4, $r7;
        java.lang.StringBuilder $r8, $r11, $r12, $r13, $r14;
        java.lang.SecurityException $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 = 0;

        $i1 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        if $i2 < 10000 goto label2;

        $i8 = i0 & 1073741824;

        if $i8 == 0 goto label7;

        $i7 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i9 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS", $i7);

        if $i9 == 0 goto label1;

        $r7 = new android.content.ComponentName;

        $r9 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r9, r3);

        r4 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Component ");

        $r10 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requests FLAG_SINGLE_USER, but app does not hold ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r5);

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>(r5);

        throw $r15;

     label1:
        z0 = 1;

        goto label7;

     label2:
        $r6 = "system";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        z0 = 1;

        goto label7;

     label3:
        $i3 = i0 & 1073741824;

        if $i3 == 0 goto label7;

        $i4 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i4, 1001);

        if $z2 != 0 goto label4;

        $i5 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i5 & 8;

        if $i6 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        z0 = $z3;

     label7:
        return z0;
    }

    boolean isValidSingletonCall(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        if i2 == 1000 goto label1;

        if i2 == 1001 goto label1;

        $i3 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i1);

        if $i3 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int bindService(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r6;
        android.app.IApplicationThread r1;
        android.os.IBinder r2;
        android.content.Intent r3;
        java.lang.String r4;
        android.app.IServiceConnection r5;
        int i0, i1, $i2;
        java.lang.Throwable r7, $r11;
        com.android.server.am.ActiveServices $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.IServiceConnection;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("bindService");

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r10;

     label1:
        r6 = r0;

        entermonitor r0;

     label2:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $i2 = virtualinvoke $r9.<com.android.server.am.ActiveServices: int bindServiceLocked(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>(r1, r2, r3, r4, r5, i0, i1);

        exitmonitor r6;

     label3:
        return $i2;

     label4:
        $r11 := @caughtexception;

        r7 = $r11;

        exitmonitor r6;

     label5:
        throw r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean unbindService(android.app.IServiceConnection)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.app.IServiceConnection r1;
        java.lang.Throwable r3, $r6;
        com.android.server.am.ActiveServices $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IServiceConnection;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z0 = virtualinvoke $r5.<com.android.server.am.ActiveServices: boolean unbindServiceLocked(android.app.IServiceConnection)>(r1);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void publishService(android.os.IBinder, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.os.IBinder r1, r3;
        android.content.Intent r2;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z1;
        com.android.server.am.ServiceRecord $r7;
        com.android.server.am.ActiveServices $r8;
        java.lang.IllegalArgumentException $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.IBinder;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r10;

     label1:
        r4 = r0;

        entermonitor r0;

     label2:
        $z0 = r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r9;

     label3:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r7 = (com.android.server.am.ServiceRecord) r1;

        virtualinvoke $r8.<com.android.server.am.ActiveServices: void publishServiceLocked(com.android.server.am.ServiceRecord,android.content.Intent,android.os.IBinder)>($r7, r2, r3);

        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unbindFinished(android.os.IBinder, android.content.Intent, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        android.content.Intent r2;
        boolean z0, $z1;
        java.lang.Throwable r4, $r9;
        com.android.server.am.ServiceRecord $r6;
        com.android.server.am.ActiveServices $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label1:
        r3 = r0;

        entermonitor r0;

     label2:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r6 = (com.android.server.am.ServiceRecord) r1;

        virtualinvoke $r7.<com.android.server.am.ActiveServices: void unbindFinishedLocked(com.android.server.am.ServiceRecord,android.content.Intent,boolean)>($r6, r2, z0);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void serviceDoneExecuting(android.os.IBinder, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.os.IBinder r1;
        int i0, i1, i2;
        java.lang.Throwable r3, $r8;
        boolean $z0;
        com.android.server.am.ServiceRecord $r5;
        com.android.server.am.ActiveServices $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r7;

     label2:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r5 = (com.android.server.am.ServiceRecord) r1;

        virtualinvoke $r6.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,int,int,int)>($r5, i0, i1, i2);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean bindBackupAgent(android.content.pm.ApplicationInfo, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.pm.ApplicationInfo r1;
        int i0, $i1, $i2, $i3;
        com.android.internal.os.BatteryStatsImpl r3, r4;
        java.lang.Throwable r5, r7, $r29, $r37;
        com.android.server.am.ProcessRecord r6;
        com.android.server.am.BatteryStatsService $r9;
        java.lang.String $r11, $r12, $r14, $r16, $r18, $r24, $r26, $r28, $r36, $r38;
        android.content.pm.IPackageManager $r13;
        com.android.server.am.BackupRecord $r15, r42;
        android.content.ComponentName $r17, r43;
        android.app.IApplicationThread $r19, $r22;
        android.content.res.CompatibilityInfo $r20;
        java.lang.StringBuilder $r21, $r23, $r25, $r30, $r31, $r33, $r34, $r35;
        android.os.RemoteException $r27, $r39;
        java.lang.IllegalArgumentException $r32, r41;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CONFIRM_FULL_BACKUP", "bindBackupAgent");

        r2 = r0;

        entermonitor r0;

     label01:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r3 = virtualinvoke $r9.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r4 = r3;

        entermonitor r3;

     label02:
        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r11 = r1.<android.content.pm.ApplicationInfo: java.lang.String name>;

        r40 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>($i1, $r12, $r11);

        exitmonitor r4;

     label03:
        goto label06;

     label04:
        $r29 := @caughtexception;

        r5 = $r29;

        exitmonitor r4;

     label05:
        throw r5;

     label06:
        $r13 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r14 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i2 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        interfaceinvoke $r13.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r14, 0, $i3);

     label07:
        goto label10;

     label08:
        $r27 := @caughtexception;

        goto label10;

     label09:
        $r32 := @caughtexception;

        r41 = $r32;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r36 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r38);

     label10:
        $r15 = new com.android.server.am.BackupRecord;

        specialinvoke $r15.<com.android.server.am.BackupRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.pm.ApplicationInfo,int)>(r40, r1, i0);

        r42 = $r15;

        if i0 != 0 goto label11;

        $r17 = new android.content.ComponentName;

        $r28 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r26 = r1.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        specialinvoke $r17.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r28, $r26);

        goto label12;

     label11:
        $r17 = new android.content.ComponentName;

        specialinvoke $r17.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "FullBackupAgent");

     label12:
        r43 = $r17;

        $r16 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>($r16, r1, 0, 0, "backup", r43, 0, 0, 0);

        if r6 != null goto label14;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start backup agent process ");

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        exitmonitor r2;

     label13:
        return 0;

     label14:
        r42.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app> = r6;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = r42;

        $r18 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = $r18;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>(r6);

        $r19 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r19 == null goto label18;

     label15:
        $r22 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r20 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        interfaceinvoke $r22.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>(r1, $r20, i0);

     label16:
        goto label18;

     label17:
        $r39 := @caughtexception;

     label18:
        exitmonitor r2;

     label19:
        goto label22;

     label20:
        $r37 := @caughtexception;

        r7 = $r37;

        exitmonitor r2;

     label21:
        throw r7;

     label22:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.IllegalArgumentException from label06 to label07 with label09;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label01 to label13 with label20;
        catch java.lang.Throwable from label14 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void clearPendingBackup()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BACKUP", "clearPendingBackup");

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void backupAgentCreated(java.lang.String, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        java.lang.String r1, $r8, $r13;
        android.os.IBinder r2, $r9;
        java.lang.Throwable r4, r6, $r15, $r17;
        android.app.backup.IBackupManager r5;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.lang.Exception $r16, r20;
        android.os.RemoteException $r18;
        long l2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        r3 = r0;

        entermonitor r0;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label03;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup agent created for ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not requested!");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        exitmonitor r3;

     label02:
        return;

     label03:
        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label06:
        throw r4;

     label07:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        $r9 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r9);

        interfaceinvoke r5.<android.app.backup.IBackupManager: void agentConnected(java.lang.String,android.os.IBinder)>(r1, r2);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label16;

     label10:
        $r18 := @caughtexception;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label16;

     label12:
        $r16 := @caughtexception;

        r20 = $r16;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Exception trying to deliver BackupAgent binding: ");

        virtualinvoke r20.<java.lang.Exception: void printStackTrace()>();

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label16;

     label14:
        $r17 := @caughtexception;

        r6 = $r17;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r6;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void unbindBackupAgent(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.ProcessRecord r3;
        java.lang.Exception r4, $r22;
        java.lang.Throwable r5, r6, $r20, $r21;
        java.lang.String $r8, $r9, $r10, $r18;
        boolean $z0;
        com.android.server.am.BackupRecord $r11;
        android.app.IApplicationThread $r12, $r14;
        android.content.res.CompatibilityInfo $r13;
        java.lang.StringBuilder $r15, $r16, $r17, $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "unbind backup agent for null app");

        return;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        if $r8 != null goto label05;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unbinding backup agent with no active backup");

     label03:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r2;

     label04:
        return;

     label05:
        $r10 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        $r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label08;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind of ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is not the current backup target");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label06:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r2;

     label07:
        return;

     label08:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        r3 = $r11.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>(r3);

        $r12 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label12;

     label09:
        $r14 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r13 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        interfaceinvoke $r14.<android.app.IApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>(r1, $r13);

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;

        r4 = $r22;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "Exception when unbinding backup agent:");

        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

     label12:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        goto label15;

     label13:
        $r21 := @caughtexception;

        r5 = $r21;

     label14:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        throw r5;

     label15:
        exitmonitor r2;

     label16:
        goto label19;

     label17:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r2;

     label18:
        throw r6;

     label19:
        return;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label02 to label04 with label17;
        catch java.lang.Throwable from label05 to label07 with label17;
        catch java.lang.Throwable from label08 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private final java.util.List getStickiesLocked(java.lang.String, android.content.IntentFilter, java.util.List, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.IntentFilter r2;
        java.util.List r3;
        int i0, i1, i2, $i3;
        android.content.ContentResolver r4;
        android.util.ArrayMap r5;
        java.util.ArrayList r6, $r13;
        android.content.Intent r7;
        android.content.Context $r8;
        android.util.SparseArray $r9;
        java.lang.Object $r10, $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.IntentFilter;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r4 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.util.ArrayMap) $r10;

        if r5 != null goto label1;

        return r3;

     label1:
        $r11 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.util.ArrayList) $r11;

        if r6 != null goto label2;

        return r3;

     label2:
        i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        $r12 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (android.content.Intent) $r12;

        $i3 = virtualinvoke r2.<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>(r4, r7, 1, "ActivityManager");

        if $i3 < 0 goto label5;

        if r3 != null goto label4;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = $r13;

     label4:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return r3;
    }

    boolean isPendingBroadcastProcessLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.BroadcastQueue $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        $z0 = virtualinvoke $r1.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        $z1 = virtualinvoke $r2.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    void skipPendingBroadcastLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.am.BroadcastQueue[] r1;
        com.android.server.am.BroadcastQueue r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r2 = r1[i2];

        virtualinvoke r2.<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 = 0;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $z1 = virtualinvoke r3.<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>(r1);

        z0 = z0 | $z1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return z0;
    }

    public android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0, r6;
        android.app.IApplicationThread r1;
        java.lang.String r2, r5, r10, $r34, $r43, $r51, $r67, $r74, $r77;
        android.content.IIntentReceiver r3;
        android.content.IntentFilter r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        com.android.server.am.ProcessRecord r7, $r53, $r58;
        java.util.List r8, r81, r82;
        java.util.Iterator r9;
        com.android.server.am.ReceiverList r11, $r52;
        java.util.ArrayList r13, $r23;
        android.content.Intent r14, $r54, r83;
        com.android.server.am.BroadcastRecord r15, $r28;
        com.android.server.am.BroadcastQueue r16;
        java.lang.Throwable r18, $r75;
        java.lang.Object $r19, $r25, $r55, $r56;
        java.util.HashMap $r20, $r47;
        android.os.IBinder $r21, $r46, $r48;
        com.android.server.am.BroadcastFilter $r22, r84;
        boolean $z1, $z3, $z5, $z6;
        com.android.server.IntentResolver $r24;
        java.lang.StringBuilder $r26, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r45, $r50, $r62, $r63, $r64, $r65, $r68, $r69, $r70, $r72, $r73, $r78, $r79, $r80;
        java.lang.IllegalArgumentException $r27, $r33, $r44;
        android.util.ArraySet $r57;
        android.content.pm.ApplicationInfo $r59, $r61;
        android.util.ArrayMap $r60;
        java.lang.SecurityException $r66, $r71;
        android.os.RemoteException $r76;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.IIntentReceiver;

        r4 := @parameter3: android.content.IntentFilter;

        r5 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("registerReceiver");

        r6 = r0;

        entermonitor r0;

     label01:
        r7 = null;

        if r1 == null goto label04;

        r7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r7 != null goto label02;

        $r71 = new java.lang.SecurityException;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i15 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r80 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when registering receiver ");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r71.<java.lang.SecurityException: void <init>(java.lang.String)>($r77);

        throw $r71;

     label02:
        $r59 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i13 = $r59.<android.content.pm.ApplicationInfo: int uid>;

        if $i13 == 1000 goto label03;

        $r60 = r7.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z6 = virtualinvoke $r60.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z6 != 0 goto label03;

        $r67 = "android";

        $z5 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label03;

        $r66 = new java.lang.SecurityException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given caller package ");

        $r62 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running in process ");

        $r73 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<java.lang.SecurityException: void <init>(java.lang.String)>($r74);

        throw $r66;

     label03:
        $r61 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i1 = $r61.<android.content.pm.ApplicationInfo: int uid>;

        i2 = r7.<com.android.server.am.ProcessRecord: int pid>;

        goto label05;

     label04:
        r2 = null;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label05:
        i16 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i1, i0, 1, 2, "registerReceiver", r2);

        r8 = null;

        r9 = virtualinvoke r4.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

        if r9 == null goto label07;

     label06:
        $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r56 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r56;

        r81 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(r10, r4, r8, -1);

        $i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(r10, r4, r81, $i14);

        goto label06;

     label07:
        r82 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(null, r4, r8, -1);

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(null, r4, r82, $i5);

     label08:
        if r8 == null goto label09;

        $r55 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        $r54 = (android.content.Intent) $r55;

        goto label10;

     label09:
        $r54 = null;

     label10:
        r83 = $r54;

        if r3 != null goto label12;

        exitmonitor r6;

     label11:
        return r83;

     label12:
        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r21 = interfaceinvoke r3.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $r19 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r21);

        r11 = (com.android.server.am.ReceiverList) $r19;

        if r11 != null goto label19;

        $r52 = new com.android.server.am.ReceiverList;

        specialinvoke $r52.<com.android.server.am.ReceiverList: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,int,android.content.IIntentReceiver)>(r0, r7, i2, i1, i16, r3);

        r11 = $r52;

        $r53 = r11.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r53 == null goto label13;

        $r58 = r11.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r57 = $r58.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r57.<android.util.ArraySet: boolean add(java.lang.Object)>(r11);

        goto label18;

     label13:
        $r46 = interfaceinvoke r3.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r46.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r11, 0);

     label14:
        goto label17;

     label15:
        $r76 := @caughtexception;

        exitmonitor r6;

     label16:
        return r83;

     label17:
        r11.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 1;

     label18:
        $r47 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r48 = interfaceinvoke r3.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, r11);

        goto label22;

     label19:
        $i6 = r11.<com.android.server.am.ReceiverList: int uid>;

        if $i6 == i1 goto label20;

        $r44 = new java.lang.IllegalArgumentException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for uid ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for uid ");

        $i12 = r11.<com.android.server.am.ReceiverList: int uid>;

        $r50 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r51);

        throw $r44;

     label20:
        $i7 = r11.<com.android.server.am.ReceiverList: int pid>;

        if $i7 == i2 goto label21;

        $r33 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for pid ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for pid ");

        $i11 = r11.<com.android.server.am.ReceiverList: int pid>;

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43);

        throw $r33;

     label21:
        $i8 = r11.<com.android.server.am.ReceiverList: int userId>;

        if $i8 == i16 goto label22;

        $r27 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for user ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for user ");

        $i10 = r11.<com.android.server.am.ReceiverList: int userId>;

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r27;

     label22:
        $r22 = new com.android.server.am.BroadcastFilter;

        specialinvoke $r22.<com.android.server.am.BroadcastFilter: void <init>(android.content.IntentFilter,com.android.server.am.ReceiverList,java.lang.String,java.lang.String,int,int)>(r4, r11, r2, r5, i1, i16);

        r84 = $r22;

        virtualinvoke r11.<com.android.server.am.ReceiverList: boolean add(java.lang.Object)>(r84);

        $z1 = virtualinvoke r84.<com.android.server.am.BroadcastFilter: boolean debugCheck()>();

        if $z1 != 0 goto label23;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "==> For Dynamic broadast");

     label23:
        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        virtualinvoke $r24.<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>(r84);

        if r8 == null goto label25;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r13 = $r23;

        virtualinvoke r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r84);

        i3 = interfaceinvoke r8.<java.util.List: int size()>();

        i4 = 0;

     label24:
        if i4 >= i3 goto label25;

        $r25 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        r14 = (android.content.Intent) $r25;

        r16 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r14);

        $r28 = new com.android.server.am.BroadcastRecord;

        specialinvoke $r28.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>(r16, r14, null, null, -1, -1, null, null, -1, r13, null, 0, null, null, 0, 1, 1, -1);

        r15 = $r28;

        virtualinvoke r16.<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r15);

        virtualinvoke r16.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

        i4 = i4 + 1;

        goto label24;

     label25:
        exitmonitor r6;

     label26:
        return r83;

     label27:
        $r75 := @caughtexception;

        r18 = $r75;

        exitmonitor r6;

     label28:
        throw r18;

        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label01 to label11 with label27;
        catch java.lang.Throwable from label12 to label16 with label27;
        catch java.lang.Throwable from label17 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public void unregisterReceiver(android.content.IIntentReceiver)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.IIntentReceiver r1, $r14;
        long l0;
        boolean z0, z1, $z2, $z5;
        com.android.server.am.ReceiverList r3;
        com.android.server.am.BroadcastRecord r4, $r11;
        java.lang.Throwable r5, r6, $r20, $r22;
        java.util.HashMap $r8;
        android.os.IBinder $r9, $r13, $r17;
        java.lang.Object $r10;
        com.android.server.am.ProcessRecord $r12, $r15;
        android.util.ArraySet $r16;
        java.lang.String $r18;
        android.os.Bundle $r19;
        int $i1;
        com.android.server.am.BroadcastQueue $r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentReceiver;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        z0 = 0;

        r2 = r0;

        entermonitor r0;

     label02:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r9 = interfaceinvoke r1.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        r3 = (com.android.server.am.ReceiverList) $r10;

        if r3 == null goto label05;

        $r11 = r3.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

        if $r11 == null goto label03;

        r4 = r3.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

        $r17 = interfaceinvoke r1.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $i1 = r4.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r18 = r4.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r19 = r4.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z5 = r4.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>($r17, $i1, $r18, $r19, $z5);

        if z1 == 0 goto label03;

        z0 = 1;

        $r21 = r4.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke $r21.<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>(0);

     label03:
        $r12 = r3.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label04;

        $r15 = r3.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r16.<android.util.ArraySet: boolean remove(java.lang.Object)>(r3);

     label04:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>(r3);

        $z2 = r3.<com.android.server.am.ReceiverList: boolean linkedToDeath>;

        if $z2 == 0 goto label05;

        r3.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 0;

        $r14 = r3.<com.android.server.am.ReceiverList: android.content.IIntentReceiver receiver>;

        $r13 = interfaceinvoke $r14.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r3, 0);

     label05:
        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r22 := @caughtexception;

        r5 = $r22;

        exitmonitor r2;

     label08:
        throw r5;

     label09:
        if z0 == 0 goto label11;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label14;

     label12:
        $r20 := @caughtexception;

        r6 = $r20;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r6;

     label14:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    void removeReceiverLocked(com.android.server.am.ReceiverList)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ReceiverList r1;
        int i0, i1;
        android.content.IIntentReceiver $r2;
        java.util.HashMap $r3;
        android.os.IBinder $r4;
        com.android.server.IntentResolver $r6;
        java.lang.Object $r7;
        android.content.IntentFilter $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ReceiverList;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r2 = r1.<com.android.server.am.ReceiverList: android.content.IIntentReceiver receiver>;

        $r4 = interfaceinvoke $r2.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        i0 = virtualinvoke r1.<com.android.server.am.ReceiverList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $r7 = virtualinvoke r1.<com.android.server.am.ReceiverList: java.lang.Object get(int)>(i1);

        $r8 = (android.content.IntentFilter) $r7;

        virtualinvoke $r6.<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private final void sendPackageBroadcastLocked(int, java.lang.String[], int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.String[] r1;
        com.android.server.am.ProcessRecord r2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label6;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label5;

        if i1 == -1 goto label2;

        $i4 = r2.<com.android.server.am.ProcessRecord: int userId>;

        if $i4 != i1 goto label5;

     label2:
        $r8 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>(i0, r1);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private java.util.List collectReceiverComponents(android.content.Intent, java.lang.String, int, int[])
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        java.lang.String r2, $r15, $r17, $r23, $r25;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        int[] r3, r6;
        java.util.List r4, r7;
        java.util.HashSet r5, $r20, $r27;
        boolean z0, $z2, $z6;
        android.content.pm.ResolveInfo r8, r32, r33;
        android.content.ComponentName r9, $r14, $r21, r34;
        android.content.pm.IPackageManager $r10;
        java.lang.Object $r11, $r18, $r26;
        android.content.pm.ActivityInfo $r12, $r13, $r16, $r19, $r22, $r24, $r29;
        android.os.RemoteException $r30;
        com.android.server.pm.UserManagerService $r31;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: int[];

        r4 = null;

     label01:
        r5 = null;

        z0 = 0;

        r6 = r3;

        i1 = lengthof r6;

        i2 = 0;

     label02:
        if i2 >= i1 goto label19;

        i3 = r6[i2];

        if i0 != 2000 goto label03;

        $r31 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $z6 = virtualinvoke $r31.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", i3);

        if $z6 == 0 goto label03;

        goto label18;

     label03:
        $r10 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r7 = interfaceinvoke $r10.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, r2, 1024, i3);

        if i3 == 0 goto label06;

        if r7 == null goto label06;

        i4 = 0;

     label04:
        $i11 = interfaceinvoke r7.<java.util.List: int size()>();

        if i4 >= $i11 goto label06;

        $r26 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i4);

        r8 = (android.content.pm.ResolveInfo) $r26;

        $r29 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i14 = $r29.<android.content.pm.ActivityInfo: int flags>;

        $i13 = $i14 & 536870912;

        if $i13 == 0 goto label05;

        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i4);

        i4 = i4 + -1;

     label05:
        i4 = i4 + 1;

        goto label04;

     label06:
        if r7 == null goto label07;

        $i12 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i12 != 0 goto label07;

        r7 = null;

     label07:
        if r4 != null goto label08;

        r4 = r7;

        goto label18;

     label08:
        if r7 == null goto label18;

        if z0 != 0 goto label12;

        z0 = 1;

        i15 = 0;

     label09:
        $i8 = interfaceinvoke r4.<java.util.List: int size()>();

        if i15 >= $i8 goto label12;

        $r18 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i15);

        r32 = (android.content.pm.ResolveInfo) $r18;

        $r19 = r32.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i9 = $r19.<android.content.pm.ActivityInfo: int flags>;

        $i10 = $i9 & 1073741824;

        if $i10 == 0 goto label11;

        $r21 = new android.content.ComponentName;

        $r22 = r32.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r23 = $r22.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r24 = r32.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r25 = $r24.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r21.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r23, $r25);

        r9 = $r21;

        if r5 != null goto label10;

        $r27 = new java.util.HashSet;

        specialinvoke $r27.<java.util.HashSet: void <init>()>();

        r5 = $r27;

     label10:
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r9);

     label11:
        i15 = i15 + 1;

        goto label09;

     label12:
        i16 = 0;

     label13:
        $i5 = interfaceinvoke r7.<java.util.List: int size()>();

        if i16 >= $i5 goto label18;

        $r11 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i16);

        r33 = (android.content.pm.ResolveInfo) $r11;

        $r12 = r33.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i6 = $r12.<android.content.pm.ActivityInfo: int flags>;

        $i7 = $i6 & 1073741824;

        if $i7 == 0 goto label16;

        $r14 = new android.content.ComponentName;

        $r13 = r33.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r13.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r16 = r33.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r16.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r17, $r15);

        r34 = $r14;

        if r5 != null goto label14;

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        r5 = $r20;

     label14:
        $z2 = virtualinvoke r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r34);

        if $z2 != 0 goto label15;

        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r34);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r33);

     label15:
        goto label17;

     label16:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r33);

     label17:
        i16 = i16 + 1;

        goto label13;

     label18:
        i2 = i2 + 1;

        goto label02;

     label19:
        goto label21;

     label20:
        $r30 := @caughtexception;

     label21:
        return r4;

        catch android.os.RemoteException from label01 to label19 with label20;
    }

    private final int broadcastIntentLocked(com.android.server.am.ProcessRecord, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, r6, r8, r9, r16, r17, $r21, $r22, $r23, $r25, $r29, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r49, $r50, $r51, $r54, $r55, $r61, $r62, $r66, $r67, $r68, $r69, $r70, $r75, $r79, $r85, $r93, $r113, $r128, $r130, $r133, $r134, $r135, $r136, $r137, $r138, $r142, $r143, $r144, $r146, $r148, $r149, $r150, $r151, $r155, $r157, $r158, $r165, $r167, $r173, $r176, $r183, $r187, $r192, r206, r207, r211, r213, r214, r216, r220;
        android.content.Intent r3, $r19, $r87, $r89, $r90, $r100, r205;
        android.content.IIntentReceiver r5;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i29, $i30, $i31, $i32, $i33, $i37, $i38, i42, i43, i44, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55;
        android.os.Bundle r7, r10;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z24, $z25, $z28, $z31, $z32, $z33, $z35, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, z46, z47, z48, z49, z50;
        com.android.internal.os.BatteryStatsImpl r11, r12, r217, r218;
        java.lang.Throwable r13, r14, $r203, $r204;
        com.android.server.am.BroadcastRecord r15, $r52, $r72, r237;
        android.content.pm.ResolveInfo r18, r234;
        java.lang.StringBuilder $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r94, $r95, $r96, $r97, $r98, $r102, $r103, $r104, $r106, $r107, $r108, $r109, $r112, $r114, $r115, $r116, $r117, $r118, $r153, $r154, $r156, $r159, $r160, $r162, $r163, $r171, $r172, $r174, $r177, $r178, $r179, $r180, $r181, $r182, $r184, $r185, $r186, $r188, $r190, $r191, $r193, $r194, $r195, $r196, $r197, $r201;
        java.lang.SecurityException $r39, $r99, $r110, $r161, $r189, $r198;
        int[] $r48, r225;
        android.content.ComponentName $r53, $r74, $r166, $r170, $r175;
        java.lang.Object $r56, $r58, $r59, $r60, $r76, $r77, $r84, $r86, $r88, $r101, $r200;
        java.util.ArrayList $r57, $r92, r222, r224;
        java.lang.String[] $r63, $r131, r209, r210, r231, r233;
        android.content.pm.ActivityInfo $r65;
        com.android.server.IntentResolver $r71, $r78;
        android.util.SparseArray $r73, $r82, $r83, $r199;
        android.util.ArrayMap $r81, r221, r223;
        java.lang.IllegalArgumentException $r105;
        android.os.Parcelable $r111;
        byte $b28, b45;
        android.os.Message $r120, $r127;
        com.android.server.am.ActivityManagerService$MainHandler $r121, $r123, $r124, $r125, $r126, $r132;
        com.android.server.am.BatteryStatsService $r122, $r141;
        com.android.server.AppOpsService $r129, $r139;
        android.content.pm.IPackageManager $r145;
        com.android.server.am.CompatModePackages $r147;
        android.content.pm.ApplicationInfo $r152, $r164, $r168;
        android.os.RemoteException $r202, r208;
        android.net.Uri r212, r215, r232;
        android.net.ProxyInfo r219;
        java.util.List r226, r227, r229;
        com.android.server.pm.UserManagerService r228;
        com.android.server.am.BroadcastQueue r230, r236;
        com.android.server.am.BroadcastFilter r235;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.content.IIntentReceiver;

        i0 := @parameter5: int;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: android.os.Bundle;

        r8 := @parameter8: java.lang.String;

        i1 := @parameter9: int;

        z0 := @parameter10: boolean;

        z1 := @parameter11: boolean;

        i2 := @parameter12: int;

        i3 := @parameter13: int;

        i4 := @parameter14: int;

        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>(android.content.Intent)>(r3);

        r205 = $r19;

        virtualinvoke r205.<android.content.Intent: android.content.Intent addFlags(int)>(16);

        if r5 == null goto label01;

        if z0 != 0 goto label01;

        $r184 = new java.lang.StringBuilder;

        specialinvoke $r184.<java.lang.StringBuilder: void <init>()>();

        $r186 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast ");

        $r185 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r205);

        $r188 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ordered but result callback requested!");

        $r187 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r187);

     label01:
        i42 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i3, i4, 1, 0, "broadcast", r2);

        if i42 == -1 goto label03;

        $r199 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r200 = virtualinvoke $r199.<android.util.SparseArray: java.lang.Object get(int)>(i42);

        if $r200 != null goto label03;

        if i3 != 1000 goto label02;

        $i38 = virtualinvoke r205.<android.content.Intent: int getFlags()>();

        $i37 = $i38 & 33554432;

        if $i37 != 0 goto label03;

     label02:
        $r201 = new java.lang.StringBuilder;

        specialinvoke $r201.<java.lang.StringBuilder: void <init>()>();

        $r178 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping broadcast of ");

        $r180 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r205);

        $r179 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $r182 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42);

        $r181 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        $r183 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r183);

        return 0;

     label03:
        i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        if i5 == 1000 goto label11;

        if i5 == 1001 goto label11;

        if i5 == 2000 goto label11;

        if i5 == 1002 goto label11;

        if i5 == 1027 goto label11;

        if i3 != 0 goto label04;

        goto label11;

     label04:
        if r1 == null goto label05;

        $z45 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z45 != 0 goto label11;

     label05:
        $r145 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r144 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z38 = interfaceinvoke $r145.<android.content.pm.IPackageManager: boolean isProtectedBroadcast(java.lang.String)>($r144);

        if $z38 == 0 goto label06;

        $r190 = new java.lang.StringBuilder;

        specialinvoke $r190.<java.lang.StringBuilder: void <init>()>();

        $r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        $r192 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $r193 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r192);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        r9 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r9);

        $r198 = new java.lang.SecurityException;

        specialinvoke $r198.<java.lang.SecurityException: void <init>(java.lang.String)>(r9);

        throw $r198;

     label06:
        $r142 = "android.appwidget.action.APPWIDGET_CONFIGURE";

        $r143 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z43 = virtualinvoke $r142.<java.lang.String: boolean equals(java.lang.Object)>($r143);

        if $z43 == 0 goto label09;

        if r1 != null goto label07;

        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        $r158 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $r163 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r158);

        $r162 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from unknown caller.");

        r206 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r206);

        $r189 = new java.lang.SecurityException;

        specialinvoke $r189.<java.lang.SecurityException: void <init>(java.lang.String)>(r206);

        throw $r189;

     label07:
        $r166 = virtualinvoke r205.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r166 == null goto label08;

        $r170 = virtualinvoke r205.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r167 = virtualinvoke $r170.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r168 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r173 = $r168.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z44 = virtualinvoke $r167.<java.lang.String: boolean equals(java.lang.Object)>($r173);

        if $z44 != 0 goto label09;

        $r171 = new java.lang.StringBuilder;

        specialinvoke $r171.<java.lang.StringBuilder: void <init>()>();

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        $r176 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $r177 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r176);

        $r174 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r175 = virtualinvoke r205.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r155 = virtualinvoke $r175.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r154 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155);

        $r153 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r152 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r157 = $r152.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r156 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r157);

        r207 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r207);

        $r161 = new java.lang.SecurityException;

        specialinvoke $r161.<java.lang.SecurityException: void <init>(java.lang.String)>(r207);

        throw $r161;

     label08:
        $r164 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r165 = $r164.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r205.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r165);

     label09:
        goto label11;

     label10:
        $r202 := @caughtexception;

        r208 = $r202;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Remote exception", r208);

        return 0;

     label11:
        $r22 = "android.intent.action.UID_REMOVED";

        $r23 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        z46 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        $r21 = "android.intent.action.PACKAGE_REMOVED";

        $r25 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z3 != 0 goto label12;

        $r138 = "android.intent.action.PACKAGE_CHANGED";

        $r137 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z35 = virtualinvoke $r138.<java.lang.String: boolean equals(java.lang.Object)>($r137);

        if $z35 != 0 goto label12;

        $r136 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $r135 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z42 = virtualinvoke $r136.<java.lang.String: boolean equals(java.lang.Object)>($r135);

        if $z42 != 0 goto label12;

        $r151 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $r150 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z41 = virtualinvoke $r151.<java.lang.String: boolean equals(java.lang.Object)>($r150);

        if $z41 != 0 goto label12;

        if z46 == 0 goto label34;

     label12:
        $i10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.BROADCAST_PACKAGE_REMOVED", i2, i3, -1, 1);

        if $i10 != 0 goto label33;

        if z46 == 0 goto label21;

        r10 = virtualinvoke r205.<android.content.Intent: android.os.Bundle getExtras()>();

        if r10 == null goto label13;

        $i32 = virtualinvoke r10.<android.os.Bundle: int getInt(java.lang.String)>("android.intent.extra.UID");

        goto label14;

     label13:
        $i32 = -1;

     label14:
        i6 = $i32;

        if i6 < 0 goto label20;

        $r141 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r12 = virtualinvoke $r141.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r11 = r12;

        entermonitor r12;

     label15:
        virtualinvoke r12.<com.android.internal.os.BatteryStatsImpl: void removeUidStatsLocked(int)>(i6);

        exitmonitor r11;

     label16:
        goto label19;

     label17:
        $r203 := @caughtexception;

        r14 = $r203;

        exitmonitor r11;

     label18:
        throw r14;

     label19:
        $r139 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r139.<com.android.server.AppOpsService: void uidRemoved(int)>(i6);

     label20:
        goto label35;

     label21:
        $r38 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $r42 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z4 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z4 == 0 goto label25;

        r209 = virtualinvoke r205.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        if r209 == null goto label24;

        $i33 = lengthof r209;

        if $i33 <= 0 goto label24;

        r210 = r209;

        i43 = lengthof r210;

        i44 = 0;

     label22:
        if i44 >= i43 goto label23;

        r211 = r210[i44];

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r211, -1, 0, 1, 1, 0, 0, i42, "storage unmount");

        i44 = i44 + 1;

        goto label22;

     label23:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void cleanupRecentTasksLocked(int)>(-1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(1, r209, i42);

     label24:
        goto label35;

     label25:
        $r41 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $r40 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z7 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z7 == 0 goto label26;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void cleanupRecentTasksLocked(int)>(-1);

        goto label35;

     label26:
        r212 = virtualinvoke r205.<android.content.Intent: android.net.Uri getData()>();

        if r212 == null goto label32;

        $r133 = virtualinvoke r212.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r213 = $r133;

        if $r133 == null goto label32;

        $r134 = "android.intent.action.PACKAGE_REMOVED";

        $r130 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        z47 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>($r130);

        if z47 == 0 goto label27;

        $z31 = virtualinvoke r205.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z31 != 0 goto label27;

        $z37 = 1;

        goto label28;

     label27:
        $z37 = 0;

     label28:
        z48 = $z37;

        $z33 = virtualinvoke r205.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", 0);

        if $z33 != 0 goto label31;

        $i31 = virtualinvoke r205.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        $i29 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i31);

        if z47 == 0 goto label29;

        $r128 = "pkg removed";

        goto label30;

     label29:
        $r128 = "pkg changed";

     label30:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r213, $i29, 0, 1, 1, 0, z48, i42, $r128);

     label31:
        if z47 == 0 goto label32;

        $r131 = newarray (java.lang.String)[1];

        $r131[0] = r213;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(0, $r131, i42);

        $z32 = virtualinvoke r205.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z32 != 0 goto label32;

        $r129 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        $i30 = virtualinvoke r205.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        virtualinvoke $r129.<com.android.server.AppOpsService: void packageRemoved(int,java.lang.String)>($i30, r213);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)>(r213, i42, 1);

     label32:
        goto label35;

     label33:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r29 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast from ");

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_PACKAGE_REMOVED");

        r214 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r214);

        $r39 = new java.lang.SecurityException;

        specialinvoke $r39.<java.lang.SecurityException: void <init>(java.lang.String)>(r214);

        throw $r39;

     label34:
        $r148 = "android.intent.action.PACKAGE_ADDED";

        $r149 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z40 = virtualinvoke $r148.<java.lang.String: boolean equals(java.lang.Object)>($r149);

        if $z40 == 0 goto label35;

        r215 = virtualinvoke r205.<android.content.Intent: android.net.Uri getData()>();

        if r215 == null goto label35;

        $r146 = virtualinvoke r215.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r216 = $r146;

        if $r146 == null goto label35;

        $r147 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $z39 = virtualinvoke r205.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        virtualinvoke $r147.<com.android.server.am.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>(r216, $z39);

     label35:
        $r45 = "android.intent.action.TIMEZONE_CHANGED";

        $r46 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z5 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z5 == 0 goto label36;

        $r132 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r132.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(13);

     label36:
        $r43 = "android.intent.action.TIME_SET";

        $r44 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z6 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        if $z6 == 0 goto label43;

        $z28 = virtualinvoke r205.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.TIME_PREF_24_HOUR_FORMAT", 0);

        if $z28 == 0 goto label37;

        $b28 = 1;

        goto label38;

     label37:
        $b28 = 0;

     label38:
        b45 = $b28;

        $r121 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r124 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r120 = virtualinvoke $r124.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(41, b45, 0);

        virtualinvoke $r121.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r120);

        $r122 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r217 = virtualinvoke $r122.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r218 = r217;

        entermonitor r217;

     label39:
        virtualinvoke r217.<com.android.internal.os.BatteryStatsImpl: void noteCurrentTimeChangedLocked()>();

        exitmonitor r218;

     label40:
        goto label43;

     label41:
        $r204 := @caughtexception;

        r13 = $r204;

        exitmonitor r218;

     label42:
        throw r13;

     label43:
        $r49 = "android.intent.action.CLEAR_DNS_CACHE";

        $r50 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z9 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>($r50);

        if $z9 == 0 goto label44;

        $r123 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r123.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(28);

     label44:
        $r51 = "android.intent.action.PROXY_CHANGE";

        $r47 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z8 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z8 == 0 goto label45;

        $r111 = virtualinvoke r205.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.PROXY_INFO");

        r219 = (android.net.ProxyInfo) $r111;

        $r125 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r126 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r127 = virtualinvoke $r126.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,java.lang.Object)>(29, r219);

        virtualinvoke $r125.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r127);

     label45:
        if z1 == 0 goto label57;

        $i22 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.BROADCAST_STICKY", i2, i3);

        if $i22 == 0 goto label46;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: broadcastIntent() requesting a sticky broadcast from pid=");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r108 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r106 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        r220 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r220);

        $r110 = new java.lang.SecurityException;

        specialinvoke $r110.<java.lang.SecurityException: void <init>(java.lang.String)>(r220);

        throw $r110;

     label46:
        if r8 == null goto label47;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t broadcast sticky intent ");

        $r114 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r205);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and enforce permission ");

        $r112 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r113);

        return -1;

     label47:
        $r74 = virtualinvoke r205.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r74 == null goto label48;

        $r99 = new java.lang.SecurityException;

        specialinvoke $r99.<java.lang.SecurityException: void <init>(java.lang.String)>("Sticky broadcasts can\'t target a specific component");

        throw $r99;

     label48:
        if i42 == -1 goto label51;

        $r83 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r84 = virtualinvoke $r83.<android.util.SparseArray: java.lang.Object get(int)>(-1);

        r221 = (android.util.ArrayMap) $r84;

        if r221 == null goto label51;

        $r85 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $r86 = virtualinvoke r221.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r85);

        r222 = (java.util.ArrayList) $r86;

        if r222 == null goto label51;

        i46 = virtualinvoke r222.<java.util.ArrayList: int size()>();

        i47 = 0;

     label49:
        if i47 >= i46 goto label51;

        $r101 = virtualinvoke r222.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        $r100 = (android.content.Intent) $r101;

        $z25 = virtualinvoke r205.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r100);

        if $z25 == 0 goto label50;

        $r105 = new java.lang.IllegalArgumentException;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sticky broadcast ");

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r205);

        $r96 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conflicts with existing global broadcast");

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r105.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r93);

        throw $r105;

     label50:
        i47 = i47 + 1;

        goto label49;

     label51:
        $r73 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r76 = virtualinvoke $r73.<android.util.SparseArray: java.lang.Object get(int)>(i42);

        r223 = (android.util.ArrayMap) $r76;

        if r223 != null goto label52;

        $r81 = new android.util.ArrayMap;

        specialinvoke $r81.<android.util.ArrayMap: void <init>()>();

        r223 = $r81;

        $r82 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r82.<android.util.SparseArray: void put(int,java.lang.Object)>(i42, r223);

     label52:
        $r75 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $r77 = virtualinvoke r223.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r75);

        r224 = (java.util.ArrayList) $r77;

        if r224 != null goto label53;

        $r92 = new java.util.ArrayList;

        specialinvoke $r92.<java.util.ArrayList: void <init>()>();

        r224 = $r92;

        $r79 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r223.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r79, r224);

     label53:
        i48 = virtualinvoke r224.<java.util.ArrayList: int size()>();

        i49 = 0;

     label54:
        if i49 >= i48 goto label56;

        $r88 = virtualinvoke r224.<java.util.ArrayList: java.lang.Object get(int)>(i49);

        $r89 = (android.content.Intent) $r88;

        $z24 = virtualinvoke r205.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r89);

        if $z24 == 0 goto label55;

        $r90 = new android.content.Intent;

        specialinvoke $r90.<android.content.Intent: void <init>(android.content.Intent)>(r205);

        virtualinvoke r224.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i49, $r90);

        goto label56;

     label55:
        i49 = i49 + 1;

        goto label54;

     label56:
        if i49 < i48 goto label57;

        $r87 = new android.content.Intent;

        specialinvoke $r87.<android.content.Intent: void <init>(android.content.Intent)>(r205);

        virtualinvoke r224.<java.util.ArrayList: boolean add(java.lang.Object)>($r87);

     label57:
        if i42 != -1 goto label58;

        r225 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        goto label59;

     label58:
        $r48 = newarray (int)[1];

        $r48[0] = i42;

        r225 = $r48;

     label59:
        r226 = null;

        r227 = null;

        $i12 = virtualinvoke r205.<android.content.Intent: int getFlags()>();

        $i13 = $i12 & 1073741824;

        if $i13 != 0 goto label60;

        r226 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List collectReceiverComponents(android.content.Intent,java.lang.String,int,int[])>(r205, r4, i3, r225);

     label60:
        $r53 = virtualinvoke r205.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r53 != null goto label67;

        if i42 != -1 goto label66;

        if i3 != 2000 goto label66;

        r228 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        i50 = 0;

     label61:
        $i23 = lengthof r225;

        if i50 >= $i23 goto label65;

        $i24 = r225[i50];

        $z21 = virtualinvoke r228.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", $i24);

        if $z21 == 0 goto label62;

        goto label64;

     label62:
        $r78 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $i25 = r225[i50];

        r229 = virtualinvoke $r78.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r205, r4, 0, $i25);

        if r227 != null goto label63;

        r227 = r229;

        goto label64;

     label63:
        if r229 == null goto label64;

        interfaceinvoke r227.<java.util.List: boolean addAll(java.util.Collection)>(r229);

     label64:
        i50 = i50 + 1;

        goto label61;

     label65:
        goto label67;

     label66:
        $r71 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        r227 = virtualinvoke $r71.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r205, r4, 0, i42);

     label67:
        $i15 = virtualinvoke r205.<android.content.Intent: int getFlags()>();

        $i14 = $i15 & 536870912;

        if $i14 == 0 goto label68;

        $z18 = 1;

        goto label69;

     label68:
        $z18 = 0;

     label69:
        z49 = $z18;

        if r227 == null goto label70;

        $i21 = interfaceinvoke r227.<java.util.List: int size()>();

        goto label71;

     label70:
        $i21 = 0;

     label71:
        i51 = $i21;

        if z0 != 0 goto label75;

        if i51 <= 0 goto label75;

        r230 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r205);

        $r72 = new com.android.server.am.BroadcastRecord;

        specialinvoke $r72.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>(r230, r205, r1, r2, i2, i3, r4, r8, i1, r227, r5, i0, r6, r7, z0, z1, 0, i42);

        r15 = $r72;

        if z49 == 0 goto label72;

        $z20 = virtualinvoke r230.<com.android.server.am.BroadcastQueue: boolean replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r15);

        if $z20 == 0 goto label72;

        $z19 = 1;

        goto label73;

     label72:
        $z19 = 0;

     label73:
        z2 = $z19;

        if z2 != 0 goto label74;

        virtualinvoke r230.<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r15);

        virtualinvoke r230.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label74:
        r227 = null;

        i51 = 0;

     label75:
        i52 = 0;

        if r226 == null goto label91;

        r231 = null;

        $r55 = "android.intent.action.PACKAGE_ADDED";

        $r54 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z12 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r54);

        if $z12 != 0 goto label76;

        $r61 = "android.intent.action.PACKAGE_RESTARTED";

        $r62 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z17 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r62);

        if $z17 != 0 goto label76;

        $r70 = "android.intent.action.PACKAGE_DATA_CLEARED";

        $r69 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z16 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>($r69);

        if $z16 == 0 goto label78;

     label76:
        r232 = virtualinvoke r205.<android.content.Intent: android.net.Uri getData()>();

        if r232 == null goto label77;

        r16 = virtualinvoke r232.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r16 == null goto label77;

        $r63 = newarray (java.lang.String)[1];

        $r63[0] = r16;

        r231 = $r63;

     label77:
        goto label79;

     label78:
        $r68 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $r67 = virtualinvoke r205.<android.content.Intent: java.lang.String getAction()>();

        $z15 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z15 == 0 goto label79;

        r231 = virtualinvoke r205.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

     label79:
        if r231 == null goto label84;

        $i18 = lengthof r231;

        if $i18 <= 0 goto label84;

        r233 = r231;

        i53 = lengthof r233;

        i7 = 0;

     label80:
        if i7 >= i53 goto label84;

        r17 = r233[i7];

        if r17 == null goto label83;

        i8 = interfaceinvoke r226.<java.util.List: int size()>();

        i9 = 0;

     label81:
        if i9 >= i8 goto label83;

        $r58 = interfaceinvoke r226.<java.util.List: java.lang.Object get(int)>(i9);

        r18 = (android.content.pm.ResolveInfo) $r58;

        $r65 = r18.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r66 = $r65.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z14 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z14 == 0 goto label82;

        interfaceinvoke r226.<java.util.List: java.lang.Object remove(int)>(i9);

        i9 = i9 + -1;

        i8 = i8 + -1;

     label82:
        i9 = i9 + 1;

        goto label81;

     label83:
        i7 = i7 + 1;

        goto label80;

     label84:
        if r226 == null goto label85;

        $i17 = interfaceinvoke r226.<java.util.List: int size()>();

        goto label86;

     label85:
        $i17 = 0;

     label86:
        i54 = $i17;

        i55 = 0;

        r234 = null;

        r235 = null;

     label87:
        if i55 >= i54 goto label91;

        if i52 >= i51 goto label91;

        if r234 != null goto label88;

        $r60 = interfaceinvoke r226.<java.util.List: java.lang.Object get(int)>(i55);

        r234 = (android.content.pm.ResolveInfo) $r60;

     label88:
        if r235 != null goto label89;

        $r59 = interfaceinvoke r227.<java.util.List: java.lang.Object get(int)>(i52);

        r235 = (com.android.server.am.BroadcastFilter) $r59;

     label89:
        $i19 = virtualinvoke r235.<com.android.server.am.BroadcastFilter: int getPriority()>();

        $i20 = r234.<android.content.pm.ResolveInfo: int priority>;

        if $i19 < $i20 goto label90;

        interfaceinvoke r226.<java.util.List: void add(int,java.lang.Object)>(i55, r235);

        i52 = i52 + 1;

        r235 = null;

        i55 = i55 + 1;

        i54 = i54 + 1;

        goto label87;

     label90:
        i55 = i55 + 1;

        r234 = null;

        goto label87;

     label91:
        if i52 >= i51 goto label93;

        if r226 != null goto label92;

        $r57 = new java.util.ArrayList;

        specialinvoke $r57.<java.util.ArrayList: void <init>()>();

        r226 = $r57;

     label92:
        $r56 = interfaceinvoke r227.<java.util.List: java.lang.Object get(int)>(i52);

        interfaceinvoke r226.<java.util.List: boolean add(java.lang.Object)>($r56);

        i52 = i52 + 1;

        goto label91;

     label93:
        if r226 == null goto label94;

        $i16 = interfaceinvoke r226.<java.util.List: int size()>();

        if $i16 > 0 goto label95;

     label94:
        if r5 == null goto label98;

     label95:
        r236 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r205);

        $r52 = new com.android.server.am.BroadcastRecord;

        specialinvoke $r52.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>(r236, r205, r1, r2, i2, i3, r4, r8, i1, r226, r5, i0, r6, r7, z0, z1, 0, i42);

        r237 = $r52;

        if z49 == 0 goto label96;

        $z11 = virtualinvoke r236.<com.android.server.am.BroadcastQueue: boolean replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>(r237);

        if $z11 == 0 goto label96;

        $z10 = 1;

        goto label97;

     label96:
        $z10 = 0;

     label97:
        z50 = $z10;

        if z50 != 0 goto label98;

        virtualinvoke r236.<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>(r237);

        virtualinvoke r236.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label98:
        return 0;

        catch android.os.RemoteException from label05 to label09 with label10;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
    }

    final android.content.Intent verifyBroadcastLocked(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1, $r8;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r11;

     label1:
        i0 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z0 != 0 goto label3;

        $i2 = i0 & 67108864;

        if $i2 == 0 goto label2;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r1 = $r8;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        goto label3;

     label2:
        $i3 = i0 & 1073741824;

        if $i3 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to launch receivers of broadcast intent ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" before boot completion");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot broadcast before boot completed");

        throw $r9;

     label3:
        $i1 = i0 & 33554432;

        if $i1 == 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here");

        throw $r2;

     label4:
        return r1;
    }

    public final int broadcastIntent(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0, r8;
        android.app.IApplicationThread r1;
        android.content.Intent r2, r15;
        java.lang.String r3, r5, r7, $r14;
        android.content.IIntentReceiver r4;
        int i0, i1, i2, i3, i5, i6;
        android.os.Bundle r6;
        boolean z0, z1;
        com.android.server.am.ProcessRecord r9;
        long l4;
        java.lang.Throwable r11, $r13;
        android.content.pm.ApplicationInfo $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.IIntentReceiver;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: android.os.Bundle;

        r7 := @parameter7: java.lang.String;

        i1 := @parameter8: int;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("broadcastIntent");

        r8 = r0;

        entermonitor r0;

     label1:
        r15 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r2);

        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r9 == null goto label2;

        $r12 = r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r14 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label3;

     label2:
        $r14 = null;

     label3:
        i6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(r9, $r14, r15, r3, r4, i0, r5, r6, r7, i1, z0, z1, i3, i5, i2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        exitmonitor r8;

     label4:
        return i6;

     label5:
        $r13 := @caughtexception;

        r11 = $r13;

        exitmonitor r8;

     label6:
        throw r11;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    int broadcastIntentInPackage(java.lang.String, int, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0, r8;
        java.lang.String r1, r3, r5, r7;
        int i0, i1, i2, i4;
        android.content.Intent r2, r12;
        android.content.IIntentReceiver r4;
        android.os.Bundle r6;
        boolean z0, z1;
        long l3;
        java.lang.Throwable r9, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.IIntentReceiver;

        i1 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: android.os.Bundle;

        r7 := @parameter8: java.lang.String;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        r8 = r0;

        entermonitor r0;

     label1:
        r12 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r2);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, r1, r12, r3, r4, i1, r5, r6, r7, -1, z0, z1, -1, i0, i2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r8;

     label2:
        return i4;

     label3:
        $r11 := @caughtexception;

        r9 = $r11;

        exitmonitor r8;

     label4:
        throw r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.app.IApplicationThread r1;
        android.content.Intent r2, $r15;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11;
        java.lang.String r4, $r11, $r14;
        java.util.ArrayList r5;
        java.lang.Throwable r6, $r27;
        android.util.SparseArray $r8, $r12;
        java.lang.Object $r9, $r10, $r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.IllegalArgumentException $r25;
        java.lang.SecurityException $r26;
        android.util.ArrayMap r28;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        if r2 == null goto label01;

        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label01;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r25;

     label01:
        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i0, 1, 0, "removeStickyBroadcast", null);

        r3 = r0;

        entermonitor r0;

     label02:
        $i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.BROADCAST_STICKY");

        if $i5 == 0 goto label03;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: unbroadcastIntent() from pid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r4);

        $r26 = new java.lang.SecurityException;

        specialinvoke $r26.<java.lang.SecurityException: void <init>(java.lang.String)>(r4);

        throw $r26;

     label03:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i11);

        r28 = (android.util.ArrayMap) $r9;

        if r28 == null goto label08;

        $r11 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r10 = virtualinvoke r28.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r5 = (java.util.ArrayList) $r10;

        if r5 == null goto label07;

        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i2 = 0;

     label04:
        if i2 >= i1 goto label06;

        $r16 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r15 = (android.content.Intent) $r16;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r15);

        if $z0 == 0 goto label05;

        virtualinvoke r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        goto label06;

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        $i7 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label07;

        $r14 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r28.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r14);

     label07:
        $i6 = virtualinvoke r28.<android.util.ArrayMap: int size()>();

        if $i6 > 0 goto label08;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r12.<android.util.SparseArray: void remove(int)>(i11);

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r27 := @caughtexception;

        r6 = $r27;

        exitmonitor r3;

     label11:
        throw r6;

     label12:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private final boolean finishReceiverLocked(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        boolean z0, $z1;
        com.android.server.am.BroadcastRecord r4;
        com.android.server.am.BroadcastQueue $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)>(r1);

        if r4 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "finishReceiver called but not found on queue");

        return 0;

     label1:
        $r5 = r4.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        $z1 = virtualinvoke $r5.<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>(r4, i0, r2, r3, z0, 0);

        return $z1;
    }

    void backgroundServicesFinishedLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.am.BroadcastQueue[] r1;
        com.android.server.am.BroadcastQueue r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r2 = r1[i2];

        virtualinvoke r2.<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void finishReceiver(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r5;
        android.os.IBinder r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        boolean z0, z1, $z2;
        long l1;
        com.android.server.am.BroadcastRecord r4;
        java.lang.Throwable r6, r7, $r12, $r13;
        com.android.server.am.BroadcastQueue $r9, $r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        if r3 == null goto label01;

        $z2 = virtualinvoke r3.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z2 == 0 goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r11;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        z1 = 0;

        r5 = r0;

        entermonitor r0;

     label03:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)>(r1);

        if r4 == null goto label04;

        $r10 = r4.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        z1 = virtualinvoke $r10.<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>(r4, i0, r2, r3, z0, 1);

     label04:
        exitmonitor r5;

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        r6 = $r12;

        exitmonitor r5;

     label07:
        throw r6;

     label08:
        if z1 == 0 goto label09;

        $r9 = r4.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke $r9.<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>(0);

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label13;

     label11:
        $r13 := @caughtexception;

        r7 = $r13;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r7;

     label13:
        return;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public boolean startInstrumentation(android.content.ComponentName, java.lang.String, int, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r7;
        android.content.ComponentName r1;
        java.lang.String r2, r6, r11, $r17, $r20, $r22, $r23, $r31, $r34, $r40, $r42, $r43;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        android.os.Bundle r3;
        android.app.IInstrumentationWatcher r4;
        android.app.IUiAutomationConnection r5;
        android.content.pm.InstrumentationInfo r8;
        android.content.pm.ApplicationInfo r9;
        com.android.server.am.ProcessRecord r12;
        java.lang.Throwable r13, $r50;
        android.content.Context $r14, $r19;
        android.content.pm.PackageManager $r16, $r21;
        android.content.pm.IPackageManager $r18;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r35, $r36, $r37, $r38, $r41, $r44, $r45, $r46;
        java.lang.SecurityException $r39;
        android.content.pm.PackageManager$NameNotFoundException $r47;
        android.os.RemoteException $r48;
        boolean $z1;
        java.lang.IllegalArgumentException $r49;
        long l8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: android.app.IInstrumentationWatcher;

        r5 := @parameter5: android.app.IUiAutomationConnection;

        i1 := @parameter6: int;

        r6 := @parameter7: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startInstrumentation");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i2, $i3, i1, 0, 2, "startInstrumentation", null);

        if r3 == null goto label01;

        $z1 = virtualinvoke r3.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label01;

        $r49 = new java.lang.IllegalArgumentException;

        specialinvoke $r49.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r49;

     label01:
        r7 = r0;

        entermonitor r0;

     label02:
        r8 = null;

        r9 = null;

     label03:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r8 = virtualinvoke $r16.<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>(r1, 1024);

        $r18 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r17 = r8.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        r9 = interfaceinvoke $r18.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r17, 1024, i6);

     label04:
        goto label07;

     label05:
        $r47 := @caughtexception;

        goto label07;

     label06:
        $r48 := @caughtexception;

     label07:
        if r8 != null goto label09;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation info for: ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r4, r1, $r43);

        exitmonitor r7;

     label08:
        return 0;

     label09:
        if r9 != null goto label11;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation target package: ");

        $r42 = r8.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r4, r1, $r40);

        exitmonitor r7;

     label10:
        return 0;

     label11:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r21 = virtualinvoke $r19.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r22 = r8.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r20 = r8.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        i7 = virtualinvoke $r21.<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>($r22, $r20);

        if i7 >= 0 goto label12;

        if i7 == -1 goto label12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting instrumentation ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed because package ");

        $r31 = r8.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a signature matching the target ");

        $r34 = r8.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        r11 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r4, r1, r11);

        $r39 = new java.lang.SecurityException;

        specialinvoke $r39.<java.lang.SecurityException: void <init>(java.lang.String)>(r11);

        throw $r39;

     label12:
        l8 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r23 = r8.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r23, -1, 1, 0, 1, 1, 0, i6, "start instr");

        r12 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean,java.lang.String)>(r9, 0, r6);

        r12.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass> = r1;

        r12.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo> = r9;

        r12.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile> = r2;

        r12.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments> = r3;

        r12.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher> = r4;

        r12.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection> = r5;

        r12.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationResultClass> = r1;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        exitmonitor r7;

     label13:
        goto label16;

     label14:
        $r50 := @caughtexception;

        r13 = $r50;

        exitmonitor r7;

     label15:
        throw r13;

     label16:
        return 1;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label05;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label02 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher, android.content.ComponentName, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IInstrumentationWatcher r1;
        android.content.ComponentName r2;
        java.lang.String r3;
        android.os.Bundle r4, $r5;
        android.os.RemoteException $r6, r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IInstrumentationWatcher;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

     label1:
        if r1 == null goto label2;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r4 = $r5;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "ActivityManagerService");

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("Error", r3);

        interfaceinvoke r1.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>(r2, -1, r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.Throwable)>("ActivityManager", r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void finishInstrumentationLocked(com.android.server.am.ProcessRecord, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1;
        android.os.Bundle r2;
        android.app.IInstrumentationWatcher $r4, $r10;
        android.app.IUiAutomationConnection $r5, $r8;
        android.content.pm.ApplicationInfo $r6;
        java.lang.String $r7;
        android.content.ComponentName $r9;
        android.os.RemoteException $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        if $r4 == null goto label4;

     label1:
        $r10 = r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        interfaceinvoke $r10.<android.app.IInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>($r9, i0, r2);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        if $r5 == null goto label9;

     label5:
        $r8 = r1.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        interfaceinvoke $r8.<android.app.IUiAutomationConnection: void shutdown()>();

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;

     label8:
        r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey> = 0;

     label9:
        r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher> = null;

        r1.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection> = null;

        r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass> = null;

        r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo> = null;

        r1.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile> = null;

        r1.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments> = null;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i1 = r1.<com.android.server.am.ProcessRecord: int userId>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r7, -1, 0, 0, 1, 1, 0, $i1, "finished inst");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void finishInstrumentation(android.app.IApplicationThread, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.app.IApplicationThread r1;
        int i0;
        android.os.Bundle r2;
        com.android.server.am.ProcessRecord r4;
        long l2;
        java.lang.Throwable r5, $r12;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9;
        java.lang.IllegalArgumentException $r11;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r11;

     label1:
        r3 = r0;

        entermonitor r0;

     label2:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r4 != null goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInstrumentation: no app for ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        exitmonitor r3;

     label3:
        return;

     label4:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r4, i0, r2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.pm.ConfigurationInfo r1, $r4;
        java.lang.Throwable r3, $r13;
        android.content.res.Configuration $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r4 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r4.<android.content.pm.ConfigurationInfo: void <init>()>();

        r1 = $r4;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r6.<android.content.res.Configuration: int touchscreen>;

        r1.<android.content.pm.ConfigurationInfo: int reqTouchScreen> = $i0;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i1 = $r7.<android.content.res.Configuration: int keyboard>;

        r1.<android.content.pm.ConfigurationInfo: int reqKeyboardType> = $i1;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i2 = $r8.<android.content.res.Configuration: int navigation>;

        r1.<android.content.pm.ConfigurationInfo: int reqNavigation> = $i2;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i3 = $r9.<android.content.res.Configuration: int navigation>;

        if $i3 == 2 goto label2;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i11 = $r12.<android.content.res.Configuration: int navigation>;

        if $i11 != 3 goto label3;

     label2:
        $i4 = r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i5 = $i4 | 2;

        r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i5;

     label3:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i6 = $r10.<android.content.res.Configuration: int keyboard>;

        if $i6 == 0 goto label4;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i8 = $r11.<android.content.res.Configuration: int keyboard>;

        if $i8 == 1 goto label4;

        $i10 = r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i9 = $i10 | 1;

        r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i9;

     label4:
        $i7 = r0.<com.android.server.am.ActivityManagerService: int GL_ES_VERSION>;

        r1.<android.content.pm.ConfigurationInfo: int reqGlEsVersion> = $i7;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return r1;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    com.android.server.am.ActivityStack getFocusedStack()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityStackSupervisor $r1;
        com.android.server.am.ActivityStack $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r2 = virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        return $r2;
    }

    public android.content.res.Configuration getConfiguration()
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.res.Configuration r1, $r5, $r6;
        java.lang.Throwable r3, $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = new android.content.res.Configuration;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r5.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r6);

        r1 = $r5;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updatePersistentConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.res.Configuration r1;
        long l0;
        java.lang.Throwable r3, $r6;
        java.lang.NullPointerException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SETTINGS", "updateConfiguration()");

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Configuration must not be null");

        throw $r5;

     label1:
        r2 = r0;

        entermonitor r0;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r1, null, 1, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void updateConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        android.content.res.Configuration r1;
        long l0;
        java.lang.Throwable r3, $r10;
        com.android.server.wm.WindowManagerService $r5, $r6, $r8, $r9;
        com.android.server.am.ProcessList $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        r2 = r0;

        entermonitor r0;

     label1:
        if r1 != null goto label2;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r8 == null goto label2;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r1 = virtualinvoke $r9.<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>();

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r5 == null goto label3;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.am.ProcessList: void applyDisplaySize(com.android.server.wm.WindowManagerService)>($r6);

     label3:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label4;

        staticinvoke <android.provider.Settings$System: void clearConfiguration(android.content.res.Configuration)>(r1);

     label4:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r1, null, 0, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    boolean updateConfigurationLocked(android.content.res.Configuration, com.android.server.am.ActivityRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1, r3, r4, $r11, $r14, $r15, $r25, $r26, $r37, $r42;
        com.android.server.am.ActivityRecord r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7, z8;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i13, i14;
        com.android.server.AttributeCache r5;
        android.os.Message r6;
        com.android.server.am.ProcessRecord r7;
        com.android.server.am.ActivityStackSupervisor $r9, $r13;
        com.android.server.wm.WindowManagerService $r10, $r12;
        java.util.Locale $r16, $r39, $r40, $r43;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22;
        java.lang.String $r21, $r24;
        android.app.usage.UsageStatsManagerInternal $r23;
        android.content.Intent $r27, $r32, r45, r46;
        android.app.ActivityThread $r28;
        java.util.ArrayList $r29, $r36;
        android.app.IApplicationThread $r33, $r34;
        java.lang.Object $r35;
        com.android.server.am.ActivityManagerService$MainHandler $r38, $r41;
        java.lang.Exception $r44;
        com.android.server.am.ActivityStack r47;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 = 0;

        if r1 == null goto label13;

        $r15 = new android.content.res.Configuration;

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r15.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r14);

        r3 = $r15;

        i0 = virtualinvoke r3.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r1);

        if i0 == 0 goto label13;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(2719, i0);

        $r16 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        if $r16 == null goto label03;

        if z1 != 0 goto label03;

        $r40 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r39 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r42 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r43 = $r42.<android.content.res.Configuration: java.util.Locale locale>;

        $z4 = virtualinvoke $r39.<java.util.Locale: boolean equals(java.lang.Object)>($r43);

        if $z4 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        $z5 = r1.<android.content.res.Configuration: boolean userSetLocale>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void saveLocaleLocked(java.util.Locale,boolean,boolean)>($r40, $z7, $z5);

     label03:
        $i2 = r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq>;

        $i4 = $i2 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = $i4;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq>;

        if $i3 > 0 goto label04;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = 1;

     label04:
        $i5 = r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq>;

        r3.<android.content.res.Configuration: int seq> = $i5;

        r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration> = r3;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config changes=");

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $i6 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke $r23.<android.app.usage.UsageStatsManagerInternal: void reportConfigurationChange(android.content.res.Configuration,int)>(r3, $i6);

        $r25 = new android.content.res.Configuration;

        $r26 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r25.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r26);

        r4 = $r25;

        $z2 = staticinvoke <com.android.server.am.ActivityManagerService: boolean shouldShowDialogs(android.content.res.Configuration)>(r3);

        r0.<com.android.server.am.ActivityManagerService: boolean mShowDialogs> = $z2;

        r5 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        if r5 == null goto label05;

        virtualinvoke r5.<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>(r4);

     label05:
        $r28 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r28.<android.app.ActivityThread: void applyConfigurationToResources(android.content.res.Configuration)>(r4);

        if z0 == 0 goto label06;

        $z3 = staticinvoke <android.provider.Settings$System: boolean hasInterestingConfigurationChanges(int)>(i0);

        if $z3 == 0 goto label06;

        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r6 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(4);

        $r37 = new android.content.res.Configuration;

        specialinvoke $r37.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r4);

        r6.<android.os.Message: java.lang.Object obj> = $r37;

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r41.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r6);

     label06:
        $r29 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i8 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        i14 = $i8 - 1;

     label07:
        if i14 < 0 goto label12;

        $r36 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r35 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r7 = (com.android.server.am.ProcessRecord) $r35;

     label08:
        $r34 = r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r34 == null goto label09;

        $r33 = r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r33.<android.app.IApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>(r4);

     label09:
        goto label11;

     label10:
        $r44 := @caughtexception;

     label11:
        i14 = i14 + -1;

        goto label07;

     label12:
        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        r45 = $r27;

        virtualinvoke r45.<android.content.Intent: android.content.Intent addFlags(int)>(1879048192);

        $i11 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r45, null, null, 0, null, null, null, -1, 0, 0, $i11, 1000, -1);

        $i9 = i0 & 4;

        if $i9 == 0 goto label13;

        $r32 = new android.content.Intent;

        specialinvoke $r32.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        r46 = $r32;

        virtualinvoke r46.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $i13 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r46, null, null, 0, null, null, null, -1, 0, 0, $i13, 1000, -1);

     label13:
        z8 = 1;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r47 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        if r47 == null goto label15;

        if i0 == 0 goto label14;

        if r2 != null goto label14;

        r2 = virtualinvoke r47.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label14:
        if r2 == null goto label15;

        z8 = virtualinvoke r47.<com.android.server.am.ActivityStack: boolean ensureActivityConfigurationLocked(com.android.server.am.ActivityRecord,int)>(r2, i0);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(r2, i0);

     label15:
        if r1 == null goto label16;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r10 == null goto label16;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r12.<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>($r11);

     label16:
        return z8;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    private static final boolean shouldShowDialogs(android.content.res.Configuration)
    {
        android.content.res.Configuration r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.res.Configuration;

        $i0 = r0.<android.content.res.Configuration: int keyboard>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.content.res.Configuration: int touchscreen>;

        if $i1 == 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void saveLocaleLocked(java.util.Locale, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.Locale r1;
        boolean z0, z1;
        java.lang.String $r2, $r3, $r4, $r8, $r9;
        com.android.server.am.ActivityManagerService$MainHandler $r5, $r6;
        android.os.Message $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.util.Locale;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("user.language", $r8);

        $r9 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("user.region", $r9);

     label1:
        if z1 == 0 goto label2;

        $r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.language", $r2);

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.country", $r3);

        $r4 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.localevar", $r4);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r7 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,java.lang.Object)>(47, r1);

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r7);

     label2:
        return;
    }

    public boolean shouldUpRecreateTask(android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        android.os.IBinder r1;
        java.lang.String r2;
        com.android.server.am.ActivityRecord r4;
        java.lang.Throwable r5, $r12;
        com.android.server.am.TaskRecord $r7, $r8, $r10;
        com.android.server.am.ActivityStack $r9, $r11;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 = r0;

        entermonitor r0;

     label1:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        $r7 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r7 == null goto label3;

        $r8 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r9 = $r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r9 == null goto label3;

        $r10 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r11 = $r10.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z0 = virtualinvoke $r11.<com.android.server.am.ActivityStack: boolean shouldUpRecreateTaskLocked(com.android.server.am.ActivityRecord,java.lang.String)>(r4, r2);

        exitmonitor r3;

     label2:
        return $z0;

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label6:
        throw r5;

     label7:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean navigateUpTo(android.os.IBinder, android.content.Intent, int, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0, r4;
        android.os.IBinder r1;
        android.content.Intent r2, r3;
        int i0;
        com.android.server.am.ActivityStack r5;
        java.lang.Throwable r6, $r8;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        r4 = r0;

        entermonitor r0;

     label1:
        r5 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if r5 == null goto label3;

        $z0 = virtualinvoke r5.<com.android.server.am.ActivityStack: boolean navigateUpToLocked(android.os.IBinder,android.content.Intent,int,android.content.Intent)>(r1, r2, i0, r3);

        exitmonitor r4;

     label2:
        return $z0;

     label3:
        exitmonitor r4;

     label4:
        return 0;

     label5:
        $r8 := @caughtexception;

        r6 = $r8;

        exitmonitor r4;

     label6:
        throw r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getLaunchedFromUid(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        return -1;

     label1:
        $i0 = r2.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        return $i0;
    }

    public java.lang.String getLaunchedFromPackage(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r2.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        return $r3;
    }

    private com.android.server.am.BroadcastQueue isReceivingBroadcast(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0, r3;
        com.android.server.am.ProcessRecord r1, $r8;
        com.android.server.am.BroadcastRecord r2, r11;
        com.android.server.am.BroadcastQueue[] r4;
        int i0, i1;
        com.android.server.am.BroadcastQueue r5, $r9;
        java.lang.Throwable r6, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if r2 == null goto label01;

        $r9 = r2.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        return $r9;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r4;

        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

        r5 = r4[i1];

        r11 = r5.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if r11 == null goto label05;

        $r8 = r11.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r8 != r1 goto label05;

        exitmonitor r3;

     label04:
        return r5;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r6 = $r10;

        exitmonitor r3;

     label09:
        throw r6;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private final int computeOomAdjLocked(com.android.server.am.ProcessRecord, int, com.android.server.am.ProcessRecord, boolean, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2, r9, $r15, $r16, $r20, $r34, $r37, $r46, $r48, $r49, $r55, $r56, $r64, r78;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i64, $i65, $i67, $i69, $i72, i73, i75, i76, i77, i78, i79;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, z24;
        long l1, $l28, $l29, $l53, $l60, $l61, $l62;
        com.android.server.am.ActivityRecord r3, r5, r75;
        com.android.server.am.BroadcastQueue r4, $r13, $r74;
        com.android.server.am.ServiceRecord r6;
        java.util.ArrayList r7, $r11, $r24, $r28, $r51, $r53, $r70;
        com.android.server.am.ConnectionRecord r8;
        java.lang.String r10, $r72;
        android.app.IApplicationThread $r12;
        android.content.ComponentName $r14, $r23, $r29, $r41, $r45;
        android.util.ArraySet $r17, $r19, $r33;
        com.android.server.am.BackupRecord $r18, $r50;
        android.util.ArrayMap $r21, $r26, $r30, $r32;
        com.android.server.am.ProcessList $r22;
        byte $b31, $b59, $b63, $b70, $b71, b74;
        java.lang.Object $r25, $r27, $r31, $r35, $r36, $r63, $r71;
        com.android.server.am.AppBindRecord $r38, $r42, $r47;
        com.android.server.am.ActivityStack$ActivityState $r39, $r40, $r43, $r44, $r57, $r65, $r66, $r67, $r68, $r69;
        android.os.IBinder $r52, $r54;
        java.lang.StringBuilder $r58, $r59, $r60, $r61, $r62, $r73;
        com.android.server.am.ContentProviderRecord r76;
        com.android.server.am.ContentProviderConnection r77;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        $i10 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i11 = r1.<com.android.server.am.ProcessRecord: int adjSeq>;

        if $i10 != $i11 goto label001;

        $i72 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        return $i72;

     label001:
        $r12 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 != null goto label002;

        $i67 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i67;

        r1.<com.android.server.am.ProcessRecord: int curSchedGroup> = 0;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = 13;

        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = 15;

        r1.<com.android.server.am.ProcessRecord: int curAdj> = 15;

        return 15;

     label002:
        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = null;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = null;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        $r11 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i12 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if $i12 > 0 goto label008;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "fixed";

        $i69 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i69;

        $i65 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = $i65;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities> = 0;

        r1.<com.android.server.am.ProcessRecord: int curSchedGroup> = -1;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 1;

        if r1 != r2 goto label003;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 0;

        goto label006;

     label003:
        if i2 <= 0 goto label006;

        i3 = 0;

     label004:
        if i3 >= i2 goto label006;

        $r70 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r71 = virtualinvoke $r70.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ActivityRecord) $r71;

        $z22 = r3.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z22 == 0 goto label005;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 0;

     label005:
        i3 = i3 + 1;

        goto label004;

     label006:
        $z21 = r1.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z21 != 0 goto label007;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = 1;

     label007:
        $i64 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        r1.<com.android.server.am.ProcessRecord: int curAdj> = $i64;

        return $i64;

     label008:
        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 0;

        z1 = 0;

        if r1 != r2 goto label009;

        i73 = 0;

        b74 = -1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "top-activity";

        z1 = 1;

        i4 = 2;

        goto label017;

     label009:
        $r14 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r14 == null goto label010;

        i73 = 0;

        b74 = -1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "instrumentation";

        i4 = 3;

        goto label017;

     label010:
        $r13 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue isReceivingBroadcast(com.android.server.am.ProcessRecord)>(r1);

        r4 = $r13;

        if $r13 == null goto label013;

        i73 = 0;

        $r74 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        if r4 != $r74 goto label011;

        $b70 = -1;

        goto label012;

     label011:
        $b70 = 0;

     label012:
        b74 = $b70;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "broadcast";

        i4 = 8;

        goto label017;

     label013:
        $r17 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i13 = virtualinvoke $r17.<android.util.ArraySet: int size()>();

        if $i13 <= 0 goto label016;

        i73 = 0;

        $z23 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z23 == 0 goto label014;

        $b71 = -1;

        goto label015;

     label014:
        $b71 = 0;

     label015:
        b74 = $b71;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "exec-service";

        i4 = 7;

        goto label017;

     label016:
        b74 = 0;

        i73 = i0;

        i4 = 13;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-empty";

     label017:
        if z1 != 0 goto label031;

        if i2 <= 0 goto label031;

        i5 = 0;

     label018:
        if i5 >= i2 goto label031;

        $r53 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r63 = virtualinvoke $r53.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r5 = (com.android.server.am.ActivityRecord) $r63;

        $r64 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r64 == r1 goto label019;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wtf, activity ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in proc activity list not using proc ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r73 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?!?");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r72);

        goto label030;

     label019:
        $z20 = r5.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z20 == 0 goto label022;

        if i73 <= 1 goto label020;

        i73 = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "visible";

     label020:
        if i4 <= 2 goto label021;

        i4 = 2;

     label021:
        b74 = -1;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        z1 = 1;

        goto label031;

     label022:
        $r66 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r65 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r66 == $r65 goto label023;

        $r68 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r67 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        if $r68 != $r67 goto label026;

     label023:
        if i73 <= 2 goto label024;

        i73 = 2;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "pausing";

     label024:
        if i4 <= 2 goto label025;

        i4 = 2;

     label025:
        b74 = -1;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        z1 = 1;

        goto label030;

     label026:
        $r57 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r69 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r57 != $r69 goto label029;

        if i73 <= 2 goto label027;

        i73 = 2;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "stopping";

     label027:
        $z19 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z19 != 0 goto label028;

        if i4 <= 10 goto label028;

        i4 = 10;

     label028:
        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        z1 = 1;

        goto label030;

     label029:
        if i4 <= 11 goto label030;

        i4 = 11;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-act";

     label030:
        i5 = i5 + 1;

        goto label018;

     label031:
        if i73 <= 2 goto label033;

        $z17 = r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z17 == 0 goto label032;

        i73 = 2;

        i4 = 3;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "fg-service";

        b74 = -1;

        goto label033;

     label032:
        $r52 = r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground>;

        if $r52 == null goto label033;

        i73 = 2;

        i4 = 3;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "force-fg";

        $r54 = r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = $r54;

        b74 = -1;

     label033:
        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if r1 != $r15 goto label035;

        if i73 <= 4 goto label034;

        i73 = 4;

        b74 = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "heavy";

     label034:
        if i4 <= 6 goto label035;

        i4 = 6;

     label035:
        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 != $r16 goto label037;

        if i73 <= 6 goto label036;

        i73 = 6;

        b74 = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "home";

     label036:
        if i4 <= 9 goto label037;

        i4 = 9;

     label037:
        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if r1 != $r20 goto label039;

        $r51 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i58 = virtualinvoke $r51.<java.util.ArrayList: int size()>();

        if $i58 <= 0 goto label039;

        if i73 <= 7 goto label038;

        i73 = 7;

        b74 = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "previous";

     label038:
        if i4 <= 10 goto label039;

        i4 = 10;

     label039:
        $i14 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i14;

        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = i73;

        r1.<com.android.server.am.ProcessRecord: boolean hasStartedServices> = 0;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r18 == null goto label042;

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r49 = $r50.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        if r1 != $r49 goto label042;

        if i73 <= 3 goto label041;

        i73 = 3;

        if i4 <= 4 goto label040;

        i4 = 4;

     label040:
        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "backup";

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

     label041:
        if i4 <= 5 goto label042;

        i4 = 5;

     label042:
        z24 = 0;

        $r19 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i17 = virtualinvoke $r19.<android.util.ArraySet: int size()>();

        i75 = $i17 - 1;

     label043:
        if i75 < 0 goto label081;

        if i73 > 0 goto label044;

        if b74 == 0 goto label044;

        if i4 <= 2 goto label081;

     label044:
        $r33 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r35 = virtualinvoke $r33.<android.util.ArraySet: java.lang.Object valueAt(int)>(i75);

        r6 = (com.android.server.am.ServiceRecord) $r35;

        $z12 = r6.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z12 == 0 goto label048;

        r1.<com.android.server.am.ProcessRecord: boolean hasStartedServices> = 1;

        if i4 <= 7 goto label045;

        i4 = 7;

     label045:
        $z18 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z18 == 0 goto label046;

        $r56 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r56 goto label046;

        if i73 <= 5 goto label048;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-started-ui-services";

        goto label048;

     label046:
        $l62 = r6.<com.android.server.am.ServiceRecord: long lastActivity>;

        $l61 = $l62 + 1800000L;

        $b63 = l1 cmp $l61;

        if $b63 >= 0 goto label047;

        if i73 <= 5 goto label047;

        i73 = 5;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "started-services";

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

     label047:
        if i73 <= 5 goto label048;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-started-services";

     label048:
        $r30 = r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i35 = virtualinvoke $r30.<android.util.ArrayMap: int size()>();

        i6 = $i35 - 1;

     label049:
        if i6 < 0 goto label080;

        if i73 > 0 goto label050;

        if b74 == 0 goto label050;

        if i4 <= 2 goto label080;

     label050:
        $r32 = r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r31 = virtualinvoke $r32.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r7 = (java.util.ArrayList) $r31;

        i7 = 0;

     label051:
        $i40 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i7 >= $i40 goto label079;

        if i73 > 0 goto label052;

        if b74 == 0 goto label052;

        if i4 <= 2 goto label079;

     label052:
        $r36 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r8 = (com.android.server.am.ConnectionRecord) $r36;

        $r38 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r37 = $r38.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r37 != r1 goto label053;

        goto label078;

     label053:
        $i37 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i36 = $i37 & 32;

        if $i36 != 0 goto label074;

        $r42 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r9 = $r42.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        i8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r9, i0, r2, z0, l1);

        i9 = r9.<com.android.server.am.ProcessRecord: int curProcState>;

        if i9 < 11 goto label054;

        i9 = 13;

     label054:
        r10 = null;

        $i47 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i48 = $i47 & 16;

        if $i48 == 0 goto label058;

        $z15 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z15 == 0 goto label056;

        $r55 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r55 goto label056;

        if i73 <= i8 goto label055;

        r10 = "cch-bound-ui-services";

     label055:
        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        i8 = i73;

        i9 = i4;

        goto label058;

     label056:
        $l53 = r6.<com.android.server.am.ServiceRecord: long lastActivity>;

        $l60 = $l53 + 1800000L;

        $b59 = l1 cmp $l60;

        if $b59 < 0 goto label058;

        if i73 <= i8 goto label057;

        r10 = "cch-bound-services";

     label057:
        i8 = i73;

     label058:
        if i73 <= i8 goto label067;

        $z14 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z14 == 0 goto label059;

        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r48 goto label059;

        if i8 <= 2 goto label059;

        r10 = "cch-bound-ui-services";

        goto label067;

     label059:
        $i49 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i57 = $i49 & 72;

        if $i57 == 0 goto label062;

        if i8 < -11 goto label060;

        $i54 = i8;

        goto label061;

     label060:
        $i54 = -11;

     label061:
        i73 = $i54;

        goto label065;

     label062:
        $i56 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i55 = $i56 & 1073741824;

        if $i55 == 0 goto label063;

        if i8 >= 2 goto label063;

        if i73 <= 2 goto label063;

        i73 = 2;

        goto label065;

     label063:
        if i8 <= 1 goto label064;

        i73 = i8;

        goto label065;

     label064:
        if i73 <= 1 goto label065;

        i73 = 1;

     label065:
        $z16 = r9.<com.android.server.am.ProcessRecord: boolean cached>;

        if $z16 != 0 goto label066;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

     label066:
        r10 = "service";

     label067:
        $i45 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i46 = $i45 & 4;

        if $i46 != 0 goto label070;

        $i50 = r9.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i50 != -1 goto label068;

        b74 = -1;

     label068:
        if i9 > 2 goto label071;

        if i9 != 2 goto label069;

        z24 = 1;

        i9 = 13;

        goto label071;

     label069:
        i9 = 3;

        goto label071;

     label070:
        if i9 >= 4 goto label071;

        i9 = 4;

     label071:
        if i4 <= i9 goto label072;

        i4 = i9;

     label072:
        if i4 >= 4 goto label073;

        $i52 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i51 = $i52 & 536870912;

        if $i51 == 0 goto label073;

        r1.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 1;

     label073:
        if r10 == null goto label074;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = r10;

        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 2;

        $r47 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r46 = $r47.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = $r46;

        r1.<com.android.server.am.ProcessRecord: int adjSourceProcState> = i9;

        $r45 = r6.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r45;

     label074:
        $i39 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i38 = $i39 & 134217728;

        if $i38 == 0 goto label075;

        r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 1;

     label075:
        r75 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        $i43 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i44 = $i43 & 128;

        if $i44 == 0 goto label078;

        if r75 == null goto label078;

        if i73 <= 0 goto label078;

        $z13 = r75.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z13 != 0 goto label076;

        $r40 = r75.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r39 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r40 == $r39 goto label076;

        $r44 = r75.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r43 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r44 != $r43 goto label078;

     label076:
        i73 = 0;

        $i42 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i41 = $i42 & 4;

        if $i41 != 0 goto label077;

        b74 = -1;

     label077:
        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "service";

        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 2;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = r75;

        r1.<com.android.server.am.ProcessRecord: int adjSourceProcState> = i4;

        $r41 = r6.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r41;

     label078:
        i7 = i7 + 1;

        goto label051;

     label079:
        i6 = i6 + -1;

        goto label049;

     label080:
        i75 = i75 + -1;

        goto label043;

     label081:
        $r21 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i15 = virtualinvoke $r21.<android.util.ArrayMap: int size()>();

        i76 = $i15 - 1;

     label082:
        if i76 < 0 goto label100;

        if i73 > 0 goto label083;

        if b74 == 0 goto label083;

        if i4 <= 2 goto label100;

     label083:
        $r26 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r27 = virtualinvoke $r26.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i76);

        r76 = (com.android.server.am.ContentProviderRecord) $r27;

        $r28 = r76.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $i32 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

        i77 = $i32 - 1;

     label084:
        if i77 < 0 goto label097;

        if i73 > 0 goto label085;

        if b74 == 0 goto label085;

        if i4 <= 2 goto label097;

     label085:
        $r24 = r76.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i77);

        r77 = (com.android.server.am.ContentProviderConnection) $r25;

        r78 = r77.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        if r78 != r1 goto label086;

        goto label096;

     label086:
        i78 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r78, i0, r2, z0, l1);

        i79 = r78.<com.android.server.am.ProcessRecord: int curProcState>;

        if i79 < 11 goto label087;

        i79 = 13;

     label087:
        if i73 <= i78 goto label092;

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z10 == 0 goto label088;

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r34 goto label088;

        if i78 <= 2 goto label088;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-ui-provider";

        goto label091;

     label088:
        if i78 <= 0 goto label089;

        $i33 = i78;

        goto label090;

     label089:
        $i33 = 0;

     label090:
        i73 = $i33;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "provider";

     label091:
        $z8 = r1.<com.android.server.am.ProcessRecord: boolean cached>;

        $z11 = r78.<com.android.server.am.ProcessRecord: boolean cached>;

        $z9 = $z8 & $z11;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = $z9;

        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = r78;

        r1.<com.android.server.am.ProcessRecord: int adjSourceProcState> = i79;

        $r29 = r76.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r29;

     label092:
        if i79 > 2 goto label094;

        if i79 != 2 goto label093;

        z24 = 1;

        i79 = 13;

        goto label094;

     label093:
        i79 = 3;

     label094:
        if i4 <= i79 goto label095;

        i4 = i79;

     label095:
        $i34 = r78.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i34 != -1 goto label096;

        b74 = -1;

     label096:
        i77 = i77 + -1;

        goto label084;

     label097:
        $z7 = virtualinvoke r76.<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>();

        if $z7 == 0 goto label099;

        if i73 <= 0 goto label098;

        i73 = 0;

        b74 = -1;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "provider";

        $r23 = r76.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r23;

     label098:
        if i4 <= 3 goto label099;

        i4 = 3;

     label099:
        i76 = i76 + -1;

        goto label082;

     label100:
        if z24 == 0 goto label103;

        if i4 <= 2 goto label103;

        tableswitch(i4)
        {
            case 3: goto label101;
            case 4: goto label101;
            case 5: goto label102;
            case 6: goto label102;
            case 7: goto label101;
            default: goto label102;
        };

     label101:
        i4 = 3;

        goto label103;

     label102:
        i4 = 2;

     label103:
        if i4 < 13 goto label105;

        $z5 = r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if $z5 == 0 goto label104;

        i4 = 12;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-client-act";

        goto label105;

     label104:
        $z4 = r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z4 == 0 goto label105;

        i4 = 11;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-as-act";

     label105:
        if i73 != 5 goto label111;

        if z0 == 0 goto label110;

        $i22 = r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs>;

        $i24 = r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs>;

        $i23 = $i24 / 3;

        if $i22 <= $i23 goto label106;

        $z6 = 1;

        goto label107;

     label106:
        $z6 = 0;

     label107:
        r1.<com.android.server.am.ProcessRecord: boolean serviceb> = $z6;

        $i21 = r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs>;

        $i27 = $i21 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs> = $i27;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean serviceb>;

        if $z3 != 0 goto label109;

        $i26 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if $i26 <= 0 goto label108;

        $l29 = r1.<com.android.server.am.ProcessRecord: long lastPss>;

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l28 = virtualinvoke $r22.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        $b31 = $l29 cmp $l28;

        if $b31 < 0 goto label108;

        r1.<com.android.server.am.ProcessRecord: boolean serviceHighRam> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean serviceb> = 1;

        goto label110;

     label108:
        $i25 = r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs>;

        $i30 = $i25 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs> = $i30;

        goto label110;

     label109:
        r1.<com.android.server.am.ProcessRecord: boolean serviceHighRam> = 0;

     label110:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean serviceb>;

        if $z2 == 0 goto label111;

        i73 = 8;

     label111:
        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = i73;

        $i16 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if i73 <= $i16 goto label112;

        i73 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        $i18 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if $i18 > 2 goto label112;

        b74 = -1;

     label112:
        $i19 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>(i73);

        r1.<com.android.server.am.ProcessRecord: int curAdj> = $i19;

        r1.<com.android.server.am.ProcessRecord: int curSchedGroup> = b74;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = i4;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities> = z1;

        $i20 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        return $i20;
    }

    void requestPssLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1;
        java.util.ArrayList $r2, $r3, $r4;
        boolean $z0;
        android.os.Handler $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

     label2:
        r1.<com.android.server.am.ProcessRecord: int pssProcState> = i0;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void requestPssAllProcsLocked(long, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l6, $l7, $l8, $l9, $l11, $l12;
        boolean z0, z1, $z3;
        int i1, $i2, $i3, $i4, $i5, $i13;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r7, $r9;
        android.os.Handler $r6;
        java.lang.Object $r8;
        byte $b10, $b14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 != 0 goto label3;

        $l12 = r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime>;

        if z1 == 0 goto label1;

        $i13 = 120000;

        goto label2;

     label1:
        $i13 = 600000;

     label2:
        $l9 = (long) $i13;

        $l11 = $l12 + $l9;

        $b14 = l0 cmp $l11;

        if $b14 >= 0 goto label3;

        return;

     label3:
        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = l0;

        r0.<com.android.server.am.ActivityManagerService: boolean mFullPssPending> = 1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke $r3.<java.util.ArrayList: void ensureCapacity(int)>($i2);

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label4:
        if i1 < 0 goto label7;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ProcessRecord) $r8;

        if z1 != 0 goto label5;

        $l8 = r1.<com.android.server.am.ProcessRecord: long lastStateTime>;

        $l7 = $l8 + 600000L;

        $b10 = l0 cmp $l7;

        if $b10 <= 0 goto label6;

     label5:
        $i4 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        r1.<com.android.server.am.ProcessRecord: int pssProcState> = $i4;

        $i5 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        $l6 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i5, 1, $z3, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l6;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label6:
        i1 = i1 + -1;

        goto label4;

     label7:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    final void performAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long $l0;
        android.app.IApplicationThread $r3, $r4, $r5;
        boolean $z0;
        java.lang.Exception $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l0;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 == null goto label3;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        if $z0 == 0 goto label2;

        r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory> = 0;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleLowMemory()>();

        goto label3;

     label2:
        $r4 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r4.<android.app.IApplicationThread: void processInBackground()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private final boolean canGcNowLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.am.BroadcastQueue[] r1;
        int i0, i1, $i2, $i3;
        com.android.server.am.BroadcastQueue r2;
        com.android.server.am.ActivityStackSupervisor $r3;
        java.util.ArrayList $r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 = 0;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $r4 = r2.<com.android.server.am.BroadcastQueue: java.util.ArrayList mParallelBroadcasts>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label2;

        $r5 = r2.<com.android.server.am.BroadcastQueue: java.util.ArrayList mOrderedBroadcasts>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 == 0 goto label3;

     label2:
        z0 = 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if z0 != 0 goto label6;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        if $z1 != 0 goto label5;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z3 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesIdle()>();

        if $z3 == 0 goto label6;

     label5:
        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    final void performAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3, $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        long $l3, $l4, $l5;
        byte $b6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 > 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canGcNowLocked()>();

        if $z0 == 0 goto label7;

     label2:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r1 = (com.android.server.am.ProcessRecord) $r5;

        $i2 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i2 > 2 goto label3;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        if $z1 == 0 goto label5;

     label3:
        $l3 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l4 = $l3 + 60000L;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b6 = $l4 cmp $l5;

        if $b6 > 0 goto label4;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void performAppGcLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;

     label4:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

        goto label6;

     label5:
        goto label2;

     label6:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label7:
        return;
    }

    final void performAppGcsIfAppropriateLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canGcNowLocked()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void performAppGcsLocked()>();

        return;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;
    }

    final void scheduleAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.os.Message r2;
        long l0, l1, $l3, $l5;
        com.android.server.am.ActivityManagerService$MainHandler $r3, $r7, $r8;
        java.util.ArrayList $r4, $r5;
        int $i2;
        java.lang.Object $r6;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(5);

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(5);

        $l3 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        l0 = $l3 + 60000L;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = l1 + 5000L;

        $b4 = l0 cmp $l5;

        if $b4 >= 0 goto label1;

        l0 = l1 + 5000L;

     label1:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageAtTime(android.os.Message,long)>(r2, l0);

     label2:
        return;
    }

    final void addProcessToGcListLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        boolean z0;
        int i0, $i1, $i5;
        java.util.ArrayList $r2, $r3, $r4, $r7;
        java.lang.Object $r5;
        long $l2, $l3;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 = 0;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.ProcessRecord) $r5;

        $l3 = $r6.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l2 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label2;

        z0 = 1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i5 = i0 + 1;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, r1);

        goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

     label4:
        return;
    }

    final void scheduleAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0, $l1, $l2;
        byte $b3;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l2 = $l1 + 60000L;

        $b3 = $l2 cmp l0;

        if $b3 <= 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label2:
        return;
    }

    final void checkExcessivePowerUsageLocked(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1, z2, $z3;
        com.android.internal.os.BatteryStatsImpl r1, r3, r5, r39;
        long l0, l1, l2, l3, l5, l6, $l8, $l10, $l11, $l13, $l18, $l19, $l20, $l21, $l23, $l24, $l28, $l29, l32;
        int i4, $i15, $i16, $i17, $i26, $i30;
        com.android.server.am.ProcessRecord r2;
        java.lang.Throwable r4, r6, r7, $r32, $r37, $r38;
        com.android.server.am.BatteryStatsService $r8;
        byte $b7, $b9, $b12, $b14, $b22, $b25, $b27, $b31;
        java.util.ArrayList $r9, $r10;
        android.content.pm.ApplicationInfo $r12, $r15, $r28;
        java.lang.Object $r13;
        java.lang.String $r14, $r23, $r29, $r35;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r25, $r26, $r33, $r34, $r36;
        com.android.internal.app.ProcessStats$ProcessState $r20, $r30;
        android.util.ArrayMap $r24, $r31;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r1 = virtualinvoke $r8.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        z1 = z0;

        z2 = z0;

        $l8 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        $b7 = $l8 cmp 0L;

        if $b7 != 0 goto label01;

        z1 = 0;

     label01:
        $l10 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        $b9 = $l10 cmp 0L;

        if $b9 != 0 goto label02;

        z2 = 0;

     label02:
        $z3 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn()>();

        if $z3 == 0 goto label03;

        z1 = 0;

     label03:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l13 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        l1 = l0 - $l13;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l11 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l3 = l2 - $l11;

        r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime> = l0;

        r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime> = l2;

        $b12 = l1 cmp 300000L;

        if $b12 >= 0 goto label04;

        z1 = 0;

     label04:
        $b14 = l3 cmp 300000L;

        if $b14 >= 0 goto label05;

        z2 = 0;

     label05:
        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i4 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

     label06:
        if i4 <= 0 goto label25;

        i4 = i4 + -1;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r13 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.am.ProcessRecord) $r13;

        $i15 = r2.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i15 < 9 goto label24;

        r3 = r1;

        entermonitor r1;

     label07:
        $r12 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i17 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        $i16 = r2.<com.android.server.am.ProcessRecord: int pid>;

        l5 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>($i17, $i16, l0);

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r38 := @caughtexception;

        r4 = $r38;

        exitmonitor r3;

     label10:
        throw r4;

     label11:
        $l21 = r2.<com.android.server.am.ProcessRecord: long lastWakeTime>;

        l32 = l5 - $l21;

        $l19 = r2.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l20 = r2.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l6 = $l19 - $l20;

        if z1 == 0 goto label17;

        $b27 = l1 cmp 0L;

        if $b27 <= 0 goto label17;

        $l28 = l32 * 100L;

        $l29 = $l28 / l1;

        $b31 = $l29 cmp 50L;

        if $b31 < 0 goto label17;

        r5 = r1;

        entermonitor r1;

     label12:
        $r28 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i30 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        $r29 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void reportExcessiveWakeLocked(int,java.lang.String,long,long)>($i30, $r29, l1, l32);

        exitmonitor r5;

     label13:
        goto label16;

     label14:
        $r32 := @caughtexception;

        r7 = $r32;

        exitmonitor r5;

     label15:
        throw r7;

     label16:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("excessive wake held ");

        $r34 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l32);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during ");

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r35, 1);

        $r30 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r31 = r2.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r30.<com.android.internal.app.ProcessStats$ProcessState: void reportExcessiveWake(android.util.ArrayMap)>($r31);

        goto label24;

     label17:
        if z2 == 0 goto label23;

        $b25 = l3 cmp 0L;

        if $b25 <= 0 goto label23;

        $l24 = l6 * 100L;

        $l23 = $l24 / l3;

        $b22 = $l23 cmp 25L;

        if $b22 < 0 goto label23;

        r39 = r1;

        entermonitor r1;

     label18:
        $r15 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i26 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        $r14 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void reportExcessiveCpuLocked(int,java.lang.String,long,long)>($i26, $r14, l3, l6);

        exitmonitor r39;

     label19:
        goto label22;

     label20:
        $r37 := @caughtexception;

        r6 = $r37;

        exitmonitor r39;

     label21:
        throw r6;

     label22:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("excessive cpu ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r23, 1);

        $r20 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r24 = r2.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r20.<com.android.internal.app.ProcessStats$ProcessState: void reportExcessiveCpu(android.util.ArrayMap)>($r24);

        goto label24;

     label23:
        r2.<com.android.server.am.ProcessRecord: long lastWakeTime> = l5;

        $l18 = r2.<com.android.server.am.ProcessRecord: long curCpuTime>;

        r2.<com.android.server.am.ProcessRecord: long lastCpuTime> = $l18;

     label24:
        goto label06;

     label25:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    private final boolean applyOomAdjLocked(com.android.server.am.ProcessRecord, com.android.server.am.ProcessRecord, boolean, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z13, z15;
        long l0, l2, $l13, $l31, $l32, $l35, $l36, $l43, $l44, $l45, $l46, $l47;
        byte b1, $b37, $b42, $b50;
        java.lang.Exception r3, $r32;
        java.lang.Throwable r4, r5, $r33, $r34;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i33, $i34, $i38, $i39, $i40, $i41, $i48, $i49, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, i65, i66;
        java.util.ArrayList $r6, $r8, $r9, $r13, $r14, $r16;
        com.android.server.am.ActivityManagerService$ProcessChangeItem $r7, r40;
        android.content.pm.ApplicationInfo $r10, $r21, $r27;
        com.android.server.am.ActivityManagerService$MainHandler $r11;
        android.os.Message $r12;
        java.lang.Object $r15, $r17;
        com.android.server.am.ProcessStatsService $r18;
        com.android.server.am.BatteryStatsService $r20;
        android.app.IApplicationThread $r22, $r24;
        java.lang.String $r23, $r26, $r35;
        android.os.RemoteException $r25;
        java.lang.StringBuilder $r28, $r29, $r30, $r31, $r36;
        com.android.internal.os.BatteryStatsImpl r38, r39;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        z1 = 1;

        $i4 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int setRawAdj>;

        if $i4 == $i3 goto label01;

        $i57 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        r1.<com.android.server.am.ProcessRecord: int setRawAdj> = $i57;

     label01:
        b1 = 0;

        $i7 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i7 == $i5 goto label02;

        $i58 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r27 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i61 = $r27.<android.content.pm.ApplicationInfo: int uid>;

        $i60 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        staticinvoke <com.android.server.am.ProcessList: void setOomAdj(int,int,int)>($i58, $i61, $i60);

        $i59 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        r1.<com.android.server.am.ProcessRecord: int setAdj> = $i59;

     label02:
        $i8 = r1.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        $i6 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i8 == $i6 goto label13;

        $i48 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        r1.<com.android.server.am.ProcessRecord: int setSchedGroup> = $i48;

        $r23 = r1.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill>;

        if $r23 == null goto label03;

        $i52 = r1.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i52 != 0 goto label03;

        $r26 = r1.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r26, 1);

        z1 = 0;

        goto label13;

     label03:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $i54 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i56 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        staticinvoke <android.os.Process: void setProcessGroup(int,int)>($i54, $i56);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label10;

     label06:
        $r32 := @caughtexception;

        r3 = $r32;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setting process group of ");

        $i63 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i63);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i62 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        $r36 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i62);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r35);

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label10;

     label08:
        $r33 := @caughtexception;

        r4 = $r33;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label10:
        $i53 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i55 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i55 > 0 goto label11;

        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        staticinvoke <android.os.Process: boolean setSwappiness(int,boolean)>($i53, $z13);

     label13:
        $z4 = r1.<com.android.server.am.ProcessRecord: boolean repForegroundActivities>;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities>;

        if $z4 == $z3 goto label14;

        $z12 = r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities>;

        r1.<com.android.server.am.ProcessRecord: boolean repForegroundActivities> = $z12;

        b1 = b1 | 1;

     label14:
        $i11 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        $i9 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i11 == $i9 goto label18;

        $i49 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        r1.<com.android.server.am.ProcessRecord: int repProcState> = $i49;

        b1 = b1 | 2;

        $r24 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r24 == null goto label18;

     label15:
        $r22 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $i51 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        interfaceinvoke $r22.<android.app.IApplicationThread: void setProcessState(int)>($i51);

     label16:
        goto label18;

     label17:
        $r25 := @caughtexception;

     label18:
        $i10 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i10 < 0 goto label19;

        $i41 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $i40 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        $z10 = staticinvoke <com.android.server.am.ProcessList: boolean procStatesDifferForMem(int,int)>($i41, $i40);

        if $z10 == 0 goto label20;

     label19:
        r1.<com.android.server.am.ProcessRecord: long lastStateTime> = l0;

        $i12 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $z5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        $l13 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i12, 1, $z5, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l13;

        goto label22;

     label20:
        $l36 = r1.<com.android.server.am.ProcessRecord: long nextPssTime>;

        $b37 = l0 cmp $l36;

        if $b37 > 0 goto label21;

        $l46 = r1.<com.android.server.am.ProcessRecord: long lastPssTime>;

        $l43 = $l46 + 1800000L;

        $b42 = l0 cmp $l43;

        if $b42 <= 0 goto label22;

        $l45 = r1.<com.android.server.am.ProcessRecord: long lastStateTime>;

        $l44 = $l45 + 15000L;

        $b50 = l0 cmp $l44;

        if $b50 <= 0 goto label22;

     label21:
        $i38 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestPssLocked(com.android.server.am.ProcessRecord,int)>(r1, $i38);

        $i39 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $z11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        $l47 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i39, 0, $z11, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l47;

     label22:
        $i14 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        $i15 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i14 == $i15 goto label35;

        $i24 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i24 >= 7 goto label23;

        $z9 = 1;

        goto label24;

     label23:
        $z9 = 0;

     label24:
        z15 = $z9;

        $i29 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i29 >= 7 goto label25;

        $z8 = 1;

        goto label26;

     label25:
        $z8 = 0;

     label26:
        z2 = $z8;

        if z15 == 0 goto label32;

        if z2 != 0 goto label32;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r38 = virtualinvoke $r20.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r39 = r38;

        entermonitor r38;

     label27:
        $r21 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i33 = $r21.<android.content.pm.ApplicationInfo: int uid>;

        $i34 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $l35 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l31 = virtualinvoke r38.<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>($i33, $i34, $l35);

        r1.<com.android.server.am.ProcessRecord: long lastWakeTime> = $l31;

        exitmonitor r39;

     label28:
        goto label31;

     label29:
        $r34 := @caughtexception;

        r5 = $r34;

        exitmonitor r39;

     label30:
        throw r5;

     label31:
        $l32 = r1.<com.android.server.am.ProcessRecord: long curCpuTime>;

        r1.<com.android.server.am.ProcessRecord: long lastCpuTime> = $l32;

     label32:
        $i28 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        r1.<com.android.server.am.ProcessRecord: int setProcState> = $i28;

        $i27 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i27 < 9 goto label33;

        r1.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle> = 0;

     label33:
        if z0 != 0 goto label34;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i30 = virtualinvoke $r18.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord,int,long)>(r1, $i30, l0);

        goto label35;

     label34:
        r1.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 1;

     label35:
        if b1 == 0 goto label43;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i16 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i65 = $i16 - 1;

        r40 = null;

     label36:
        if i65 < 0 goto label38;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r17 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i65);

        r40 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r17;

        $i25 = r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i26 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i25 != $i26 goto label37;

        goto label38;

     label37:
        i65 = i65 + -1;

        goto label36;

     label38:
        if i65 >= 0 goto label42;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        i66 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i66 <= 0 goto label39;

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        $i23 = i66 - 1;

        $r15 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object remove(int)>($i23);

        r40 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r15;

        goto label40;

     label39:
        $r7 = new com.android.server.am.ActivityManagerService$ProcessChangeItem;

        specialinvoke $r7.<com.android.server.am.ActivityManagerService$ProcessChangeItem: void <init>()>();

        r40 = $r7;

     label40:
        r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes> = 0;

        $i20 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid> = $i20;

        $r10 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i22 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid> = $i22;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i21 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i21 != 0 goto label41;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r12 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(31);

        virtualinvoke $r12.<android.os.Message: void sendToTarget()>();

     label41:
        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r40);

     label42:
        $i18 = r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i19 = $i18 | b1;

        r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes> = $i19;

        $i17 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int processState> = $i17;

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean repForegroundActivities>;

        r40.<com.android.server.am.ActivityManagerService$ProcessChangeItem: boolean foregroundActivities> = $z6;

     label43:
        return z1;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    private final void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord, int, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i2, $i3, $i4, $i5;
        long l1;
        android.app.IApplicationThread $r2;
        com.android.internal.app.ProcessStats$ProcessState $r3, $r8;
        android.content.pm.ApplicationInfo $r4;
        java.lang.String $r5;
        com.android.server.am.BatteryStatsService $r6;
        android.util.ArrayMap $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 == null goto label2;

        $r3 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        if $r3 == null goto label1;

        $r8 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        $r7 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r8.<com.android.internal.app.ProcessStats$ProcessState: void setState(int,int,long,android.util.ArrayMap)>($i5, i0, l1, $r7);

     label1:
        $i2 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        if $i2 < 0 goto label2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r5 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        virtualinvoke $r6.<com.android.server.am.BatteryStatsService: void noteProcessState(java.lang.String,int,int)>($r5, $i4, $i3);

     label2:
        return;
    }

    private final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord, int, com.android.server.am.ProcessRecord, boolean, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2;
        int i0;
        boolean z0, $z1;
        long l1;
        android.app.IApplicationThread $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r1, i0, r2, z0, l1);

        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean applyOomAdjLocked(com.android.server.am.ProcessRecord,com.android.server.am.ProcessRecord,boolean,long)>(r1, r2, z0, l1);

        return $z1;
    }

    final void updateProcessForegroundLocked(com.android.server.am.ProcessRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, z1, $z2, $z3, $z5;
        java.util.ArrayList r2, $r19;
        android.content.pm.ApplicationInfo $r3, $r4, $r8, $r9, $r12, $r13, $r16, $r17, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r5, $r11, $r15, $r18, $r21;
        com.android.internal.app.ProcessMap $r6, $r14, $r24;
        java.lang.Object $r7;
        com.android.server.am.BatteryStatsService $r10, $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if z0 == $z2 goto label4;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundServices> = z0;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages>;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r5 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r5, $i0);

        r2 = (java.util.ArrayList) $r7;

        if z0 == 0 goto label2;

        if r2 != null goto label1;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r2 = $r19;

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages>;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r21 = $r22.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r23 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i5 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r24.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r21, $i5, r2);

     label1:
        $z5 = virtualinvoke r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z5 != 0 goto label3;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r18 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r20.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32770, $r18, $i4);

        goto label3;

     label2:
        if r2 == null goto label3;

        $z3 = virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z3 == 0 goto label3;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r10.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(16386, $r11, $i1);

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i2 > 0 goto label3;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages>;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r15 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r14.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r15, $i3);

     label3:
        if z1 == 0 goto label4;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label4:
        return;
    }

    private final com.android.server.am.ActivityRecord resumedAppLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        java.lang.String r2, $r4, $r5, $r6, $r8, $r10, $r11;
        int i0, $i1, $i2, $i3;
        com.android.server.am.ActivityStackSupervisor $r3;
        com.android.server.am.BatteryStatsService $r7, $r9;
        boolean $z0;
        android.content.pm.ApplicationInfo $r12;
        android.content.pm.ActivityInfo $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r1 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord resumedAppLocked()>();

        if r1 == null goto label1;

        r2 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r13 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r12 = $r13.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        goto label2;

     label1:
        r2 = null;

        i0 = -1;

     label2:
        $i1 = r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid>;

        if i0 != $i1 goto label3;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        if r2 == $r10 goto label5;

        if r2 == null goto label3;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label5;

     label3:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        if $r4 == null goto label4;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid>;

        virtualinvoke $r9.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(16387, $r8, $i3);

     label4:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage> = r2;

        r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid> = i0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        if $r5 == null goto label5;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid>;

        virtualinvoke $r7.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32771, $r6, $i2);

     label5:
        return r1;
    }

    final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r3, $r4;
        com.android.server.am.ActivityRecord r2;
        boolean z0, z1, $z2;
        int i0, $i1, $i2, $i3, $i5, $i6;
        long $l4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord resumedAppLocked()>();

        if r2 == null goto label1;

        $r4 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        goto label2;

     label1:
        $r4 = null;

     label2:
        r3 = $r4;

        z0 = r1.<com.android.server.am.ProcessRecord: boolean cached>;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i2 = $i1 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = $i2;

        $i3 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i3 < 9 goto label3;

        $i6 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        goto label4;

     label3:
        $i6 = 16;

     label4:
        i0 = $i6;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r1, i0, r3, 0, $l4);

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean cached>;

        if z0 != $z2 goto label5;

        $i5 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i5 != 16 goto label6;

     label5:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label6:
        return z1;
    }

    final void updateOomAdjLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ProcessRecord r2, r3, r6, $r20, $r21, $r46, r58;
        long l0, l1, $l41, $l44, $l45, $l47, $l48, $l49, $l66, $l76, $l77, $l78, $l79;
        int i2, i3, i4, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i42, $i43, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i65, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, i80, i81, i83;
        byte b5, b22, b23, $b40, $b46, $b67;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z18;
        java.util.ArrayList $r7, $r8, $r18, $r23, $r33, $r34;
        com.android.server.am.ProcessStatsService $r9, $r10, $r11, $r12;
        com.android.server.am.ActivityManagerService$23 $r13;
        com.android.server.am.ActivityManagerService$MainHandler $r14;
        android.app.IApplicationThread $r15, $r16, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r35;
        com.android.server.am.ActivityStackSupervisor $r17;
        java.lang.Object $r19, $r22, $r32;
        java.lang.StringBuilder $r36, $r37, $r38, $r40, $r42, $r43, $r45, $r48, $r49, $r50;
        java.lang.String $r39, $r44, $r51;
        android.util.ArraySet $r41;
        android.os.RemoteException $r47, $r52, $r53, $r54, $r55;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord resumedAppLocked()>();

        if r1 == null goto label01;

        $r46 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        goto label02;

     label01:
        $r46 = null;

     label02:
        r2 = $r46;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = l0 - 1800000L;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i28 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i29 = $i28 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = $i29;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs> = 0;

        $i26 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        if $i26 > 0 goto label03;

        i4 = 0;

        i3 = 0;

        goto label05;

     label03:
        $i27 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        if $i27 != 1 goto label04;

        i3 = 1;

        i4 = 0;

        goto label05;

     label04:
        $i32 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        i3 = staticinvoke <com.android.server.am.ProcessList: int computeEmptyProcessLimit(int)>($i32);

        $i30 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        i4 = $i30 - i3;

     label05:
        b5 = 3;

        $i31 = r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs>;

        $i35 = i2 - $i31;

        $i36 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        i6 = $i35 - $i36;

        if i6 <= i4 goto label06;

        i6 = i4;

     label06:
        i7 = i6 / b5;

        if i7 >= 1 goto label07;

        i7 = 1;

     label07:
        $i34 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        if $i34 <= 0 goto label08;

        $i75 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        goto label09;

     label08:
        $i75 = 1;

     label09:
        i8 = $i75 / b5;

        if i8 >= 1 goto label10;

        i8 = 1;

     label10:
        i9 = 0;

        i10 = 0;

        i12 = 0;

        i11 = 0;

        i14 = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs> = 0;

        i13 = 9;

        i16 = i13 + 1;

        i15 = 9;

        i18 = i15 + 2;

        i17 = i2 - 1;

     label11:
        if i17 < 0 goto label22;

        $r33 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r32 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r3 = (com.android.server.am.ProcessRecord) $r32;

        $z14 = r3.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z14 != 0 goto label21;

        $r35 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r35 == null goto label21;

        r3.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r3, 16, r2, 1, l0);

        $i63 = r3.<com.android.server.am.ProcessRecord: int curAdj>;

        if $i63 < 16 goto label14;

        $i72 = r3.<com.android.server.am.ProcessRecord: int curProcState>;

        lookupswitch($i72)
        {
            case 11: goto label12;
            case 12: goto label12;
            default: goto label13;
        };

     label12:
        r3.<com.android.server.am.ProcessRecord: int curRawAdj> = i13;

        $i73 = virtualinvoke r3.<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>(i13);

        r3.<com.android.server.am.ProcessRecord: int curAdj> = $i73;

        if i13 == i16 goto label14;

        i9 = i9 + 1;

        if i9 < i8 goto label14;

        i9 = 0;

        i13 = i16;

        i16 = i16 + 2;

        if i16 <= 15 goto label14;

        i16 = 15;

        goto label14;

     label13:
        r3.<com.android.server.am.ProcessRecord: int curRawAdj> = i15;

        $i74 = virtualinvoke r3.<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>(i15);

        r3.<com.android.server.am.ProcessRecord: int curAdj> = $i74;

        if i15 == i18 goto label14;

        i10 = i10 + 1;

        if i10 < i7 goto label14;

        i10 = 0;

        i15 = i18;

        i18 = i18 + 2;

        if i18 <= 15 goto label14;

        i18 = 15;

     label14:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean applyOomAdjLocked(com.android.server.am.ProcessRecord,com.android.server.am.ProcessRecord,boolean,long)>(r3, r2, 1, l0);

        $i62 = r3.<com.android.server.am.ProcessRecord: int curProcState>;

        tableswitch($i62)
        {
            case 11: goto label15;
            case 12: goto label15;
            case 13: goto label16;
            default: goto label18;
        };

     label15:
        $i61 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        $i60 = $i61 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs> = $i60;

        i12 = i12 + 1;

        if i12 <= i4 goto label19;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cached #");

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r44, 1);

        goto label19;

     label16:
        $i65 = <com.android.server.am.ProcessList: int TRIM_EMPTY_APPS>;

        if i11 <= $i65 goto label17;

        $l66 = r3.<com.android.server.am.ProcessRecord: long lastActivityTime>;

        $b67 = $l66 cmp l1;

        if $b67 >= 0 goto label17;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty for ");

        $l77 = l1 + 1800000L;

        $l76 = r3.<com.android.server.am.ProcessRecord: long lastActivityTime>;

        $l78 = $l77 - $l76;

        $l79 = $l78 / 1000L;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l79);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r51, 1);

        goto label19;

     label17:
        i11 = i11 + 1;

        if i11 <= i3 goto label19;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty #");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>($r39, 1);

        goto label19;

     label18:
        $i70 = r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs>;

        $i71 = $i70 + 1;

        r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs> = $i71;

     label19:
        $z16 = r3.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z16 == 0 goto label20;

        $r41 = r3.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i69 = virtualinvoke $r41.<android.util.ArraySet: int size()>();

        if $i69 > 0 goto label20;

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("isolated not needed", 1);

     label20:
        $i68 = r3.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i68 < 9 goto label21;

        $z18 = r3.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z18 != 0 goto label21;

        i14 = i14 + 1;

     label21:
        i17 = i17 + -1;

        goto label11;

     label22:
        $i33 = r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs>;

        r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs> = $i33;

        i80 = i12 + i11;

        $i39 = <com.android.server.am.ProcessList: int TRIM_CACHED_APPS>;

        if i12 > $i39 goto label25;

        $i57 = <com.android.server.am.ProcessList: int TRIM_EMPTY_APPS>;

        if i11 > $i57 goto label25;

        if i80 > 3 goto label23;

        i81 = 3;

        goto label26;

     label23:
        if i80 > 5 goto label24;

        i81 = 2;

        goto label26;

     label24:
        i81 = 1;

        goto label26;

     label25:
        i81 = 0;

     label26:
        $i38 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if i81 <= $i38 goto label28;

        $z15 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        if $z15 == 0 goto label27;

        $r34 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i59 = virtualinvoke $r34.<java.util.ArrayList: int size()>();

        $i58 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        if $i59 < $i58 goto label28;

     label27:
        i81 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

     label28:
        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = i81;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i37 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses> = $i37;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        if $z1 != 0 goto label29;

        $z12 = 1;

        goto label30;

     label29:
        $z12 = 0;

     label30:
        z0 = virtualinvoke $r10.<com.android.server.am.ProcessStatsService: boolean setMemFactorLocked(int,boolean,long)>(i81, $z12, l0);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i20 = virtualinvoke $r9.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        if i81 == 0 goto label67;

        $l47 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b46 = $l47 cmp 0L;

        if $b46 != 0 goto label31;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = l0;

     label31:
        i19 = 0;

        lookupswitch(i81)
        {
            case 2: goto label33;
            case 3: goto label32;
            default: goto label34;
        };

     label32:
        b22 = 15;

        goto label35;

     label33:
        b22 = 10;

        goto label35;

     label34:
        b22 = 5;

     label35:
        i21 = i14 / 3;

        i24 = 2;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r21 == null goto label36;

        i24 = i24 + 1;

     label36:
        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if $r20 == null goto label37;

        i24 = i24 + 1;

     label37:
        if i21 >= i24 goto label38;

        i21 = i24;

     label38:
        b23 = 80;

        i25 = i2 - 1;

     label39:
        if i25 < 0 goto label66;

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r22 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        r6 = (com.android.server.am.ProcessRecord) $r22;

        if z0 != 0 goto label40;

        $z11 = r6.<com.android.server.am.ProcessRecord: boolean procStateChanged>;

        if $z11 == 0 goto label41;

     label40:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord,int,long)>(r6, i20, l0);

        r6.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

     label41:
        $i51 = r6.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i51 < 9 goto label49;

        $z13 = r6.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z13 != 0 goto label49;

        $i56 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i56 >= b23 goto label45;

        $r28 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r28 == null goto label45;

     label42:
        $r29 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r29.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(b23);

     label43:
        goto label45;

     label44:
        $r53 := @caughtexception;

     label45:
        r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = b23;

        i19 = i19 + 1;

        if i19 < i21 goto label65;

        i19 = 0;

        lookupswitch(b23)
        {
            case 60: goto label47;
            case 80: goto label46;
            default: goto label48;
        };

     label46:
        b23 = 60;

        goto label48;

     label47:
        b23 = 40;

     label48:
        goto label65;

     label49:
        $i50 = r6.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i50 != 6 goto label54;

        $i53 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i53 >= 40 goto label53;

        $r30 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r30 == null goto label53;

     label50:
        $r31 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r31.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(40);

     label51:
        goto label53;

     label52:
        $r54 := @caughtexception;

     label53:
        r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = 40;

        goto label65;

     label54:
        $i52 = r6.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i52 >= 4 goto label55;

        $z10 = r6.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z10 == 0 goto label60;

     label55:
        $z9 = r6.<com.android.server.am.ProcessRecord: boolean pendingUiClean>;

        if $z9 == 0 goto label60;

        $i54 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i54 >= 20 goto label59;

        $r24 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r24 == null goto label59;

     label56:
        $r25 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r25.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(20);

     label57:
        goto label59;

     label58:
        $r47 := @caughtexception;

     label59:
        r6.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 0;

     label60:
        $i55 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i55 >= b22 goto label64;

        $r27 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r27 == null goto label64;

     label61:
        $r26 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r26.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(b22);

     label62:
        goto label64;

     label63:
        $r52 := @caughtexception;

     label64:
        r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = b22;

     label65:
        i25 = i25 + -1;

        goto label39;

     label66:
        goto label78;

     label67:
        $l41 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b40 = $l41 cmp 0L;

        if $b40 == 0 goto label68;

        $l45 = r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle>;

        $l49 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $l48 = l0 - $l49;

        $l44 = $l45 + $l48;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = $l44;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

     label68:
        i83 = i2 - 1;

     label69:
        if i83 < 0 goto label78;

        $r18 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i83);

        r58 = (com.android.server.am.ProcessRecord) $r19;

        if z0 != 0 goto label70;

        $z7 = r58.<com.android.server.am.ProcessRecord: boolean procStateChanged>;

        if $z7 == 0 goto label71;

     label70:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord,int,long)>(r58, i20, l0);

        r58.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

     label71:
        $i43 = r58.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i43 >= 4 goto label72;

        $z8 = r58.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z8 == 0 goto label77;

     label72:
        $z6 = r58.<com.android.server.am.ProcessRecord: boolean pendingUiClean>;

        if $z6 == 0 goto label77;

        $i42 = r58.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i42 >= 20 goto label76;

        $r15 = r58.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r15 == null goto label76;

     label73:
        $r16 = r58.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r16.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(20);

     label74:
        goto label76;

     label75:
        $r55 := @caughtexception;

     label76:
        r58.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 0;

     label77:
        r58.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = 0;

        i83 = i83 + -1;

        goto label69;

     label78:
        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z2 == 0 goto label79;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r17.<com.android.server.am.ActivityStackSupervisor: void scheduleDestroyAllActivities(com.android.server.am.ProcessRecord,java.lang.String)>(null, "always-finish");

     label79:
        if z0 == 0 goto label80;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $z4 = virtualinvoke $r11.<com.android.server.am.ProcessStatsService: boolean isMemFactorLowered()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestPssAllProcsLocked(long,boolean,boolean)>(l0, 0, $z4);

     label80:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $z5 = virtualinvoke $r12.<com.android.server.am.ProcessStatsService: boolean shouldWriteNowLocked(long)>(l0);

        if $z5 == 0 goto label81;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r13 = new com.android.server.am.ActivityManagerService$23;

        specialinvoke $r13.<com.android.server.am.ActivityManagerService$23: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r13);

     label81:
        return;

        catch android.os.RemoteException from label42 to label43 with label44;
        catch android.os.RemoteException from label50 to label51 with label52;
        catch android.os.RemoteException from label56 to label57 with label58;
        catch android.os.RemoteException from label61 to label62 with label63;
        catch android.os.RemoteException from label73 to label74 with label75;
    }

    final void trimApplications()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7;
        com.android.server.am.ProcessRecord r2;
        java.lang.Throwable r4, $r30;
        java.util.ArrayList $r6, $r7, $r9, $r23;
        java.lang.Object $r8;
        com.android.server.am.BroadcastRecord $r10;
        android.util.ArraySet $r11;
        java.lang.StringBuilder $r12, $r13, $r15, $r18, $r19, $r20;
        java.lang.String $r16, $r21;
        android.app.IApplicationThread $r17, $r22, $r27;
        android.content.pm.ApplicationInfo $r24;
        boolean $z1;
        android.os.IBinder $r28;
        java.lang.Exception $r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label02:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r8;

        $r9 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label09;

        $r10 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r10 != null goto label09;

        $r11 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i3 = virtualinvoke $r11.<android.util.ArraySet: int size()>();

        if $i3 != 0 goto label09;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting empty application process ");

        $r16 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r17 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r17 == null goto label03;

        $r27 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r28 = interfaceinvoke $r27.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        goto label04;

     label03:
        $r28 = null;

     label04:
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        $i5 = r2.<com.android.server.am.ProcessRecord: int pid>;

        if $i5 <= 0 goto label05;

        $i7 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i7 == $i6 goto label05;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>("empty", 0);

        goto label08;

     label05:
        $r22 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r22.<android.app.IApplicationThread: void scheduleExit()>();

     label06:
        goto label08;

     label07:
        $r29 := @caughtexception;

     label08:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>(r2, 0, 1, -1);

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r23.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $z1 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label09;

        $r24 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean,java.lang.String)>($r24, 0, null);

     label09:
        i0 = i0 + -1;

        goto label02;

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r30 := @caughtexception;

        r4 = $r30;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void signalPersistentProcesses(int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r1;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r2;
        java.lang.Throwable r3, $r11;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;
        android.app.IApplicationThread $r8;
        boolean $z0;
        java.lang.SecurityException $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 == 10 goto label01;

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Only SIGNAL_USR1 is allowed");

        throw $r9;

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SIGNAL_PERSISTENT_PROCESSES");

        if $i2 == 0 goto label03;

        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES");

        throw $r10;

     label03:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label04:
        if i1 < 0 goto label06;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ProcessRecord) $r7;

        $r8 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label05;

        $z0 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label05;

        $i4 = r2.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i4, i0);

     label05:
        i1 = i1 + -1;

        goto label04;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void stopProfilerLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r4;
        int i0;
        android.app.IApplicationThread $r3;
        android.os.RemoteException $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if r1 != $r4 goto label2;

     label1:
        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        i0 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label2:
        if r1 != null goto label3;

        return;

     label3:
        $r3 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r3.<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>(0, null, i0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r6;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void clearProfilerLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.ParcelFileDescriptor $r2, $r3;
        java.io.IOException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        virtualinvoke $r3.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile> = null;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mSamplingInterval> = 0;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean profileControl(java.lang.String, int, boolean, android.app.ProfilerInfo, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r3;
        java.lang.String r1, $r14, $r21;
        int i0, i1, $i2;
        boolean z0;
        android.app.ProfilerInfo r2;
        com.android.server.am.ProcessRecord r4;
        android.os.ParcelFileDescriptor r5, $r9, $r10, $r11, $r12, $r25, $r31, $r34, r35;
        java.lang.Throwable r6, r7, $r27, $r30;
        android.content.pm.ApplicationInfo $r13;
        android.app.IApplicationThread $r15, $r20;
        java.lang.StringBuilder $r16, $r18, $r19;
        java.lang.IllegalArgumentException $r17, $r22;
        java.io.IOException $r23, $r24, $r28, $r29;
        java.lang.SecurityException $r26;
        android.os.RemoteException $r32;
        java.lang.IllegalStateException $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.app.ProfilerInfo;

        i1 := @parameter4: int;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i2 == 0 goto label03;

        $r26 = new java.lang.SecurityException;

        specialinvoke $r26.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r26;

     label03:
        if z0 == 0 goto label05;

        if r2 == null goto label04;

        $r25 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r25 != null goto label05;

     label04:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null profile info or fd");

        throw $r22;

     label05:
        r4 = null;

        if r1 == null goto label06;

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r1, i0, "profileControl");

     label06:
        if z0 == 0 goto label08;

        if r4 == null goto label07;

        $r20 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 != null goto label08;

     label07:
        $r17 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label08:
        if z0 == 0 goto label13;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void stopProfilerLocked(com.android.server.am.ProcessRecord,int)>(null, 0);

        $r13 = r4.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r14 = r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,android.app.ProfilerInfo)>($r13, $r14, r2);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = r4;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = i1;

        r5 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

     label09:
        r35 = virtualinvoke r5.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label10:
        goto label12;

     label11:
        $r23 := @caughtexception;

        r35 = null;

     label12:
        r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd> = r35;

        $r15 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r15.<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>(z0, r2, i1);

        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd> = null;

        goto label17;

     label13:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void stopProfilerLocked(com.android.server.am.ProcessRecord,int)>(r4, i1);

        if r2 == null goto label17;

        $r12 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r12 == null goto label17;

     label14:
        $r11 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r11.<android.os.ParcelFileDescriptor: void close()>();

     label15:
        goto label17;

     label16:
        $r29 := @caughtexception;

     label17:
        exitmonitor r3;

     label18:
        if r2 == null goto label22;

        $r10 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r10 == null goto label22;

     label19:
        $r9 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r9.<android.os.ParcelFileDescriptor: void close()>();

     label20:
        goto label22;

     label21:
        $r28 := @caughtexception;

     label22:
        return 1;

     label23:
        $r27 := @caughtexception;

        r6 = $r27;

        exitmonitor r3;

     label24:
        throw r6;

     label25:
        $r32 := @caughtexception;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r33;

     label26:
        $r30 := @caughtexception;

        r7 = $r30;

     label27:
        if r2 == null goto label31;

        $r31 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r31 == null goto label31;

     label28:
        $r34 = r2.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r34.<android.os.ParcelFileDescriptor: void close()>();

     label29:
        goto label31;

     label30:
        $r24 := @caughtexception;

     label31:
        throw r7;

        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label02 to label18 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch android.os.RemoteException from label01 to label18 with label25;
        catch android.os.RemoteException from label23 to label25 with label25;
        catch java.lang.Throwable from label01 to label18 with label26;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label23 to label27 with label26;
    }

    private com.android.server.am.ProcessRecord findProcessLocked(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        com.android.server.am.ProcessRecord r3, r6;
        android.util.SparseArray r4, $r7, $r8, r18;
        java.lang.Throwable r5, $r14;
        java.lang.Object $r9, $r11, $r12, $r13;
        com.android.internal.app.ProcessMap $r10;
        java.lang.NumberFormatException $r15;
        android.util.ArrayMap r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i2, $i3, i0, 1, 2, r2, null);

        r3 = null;

     label01:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r4 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ProcessRecord) $r9;

        exitmonitor r4;

     label03:
        goto label06;

     label04:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r4;

     label05:
        throw r5;

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

     label08:
        if r3 != null goto label11;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        r17 = virtualinvoke $r10.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r11 = virtualinvoke r17.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r18 = (android.util.SparseArray) $r11;

        if r18 == null goto label11;

        $i4 = virtualinvoke r18.<android.util.SparseArray: int size()>();

        if $i4 <= 0 goto label11;

        $r12 = virtualinvoke r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        r3 = (com.android.server.am.ProcessRecord) $r12;

        if i8 == -1 goto label11;

        $i6 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i6 == i8 goto label11;

        i9 = 1;

     label09:
        $i5 = virtualinvoke r18.<android.util.SparseArray: int size()>();

        if i9 >= $i5 goto label11;

        $r13 = virtualinvoke r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r6 = (com.android.server.am.ProcessRecord) $r13;

        $i7 = r6.<com.android.server.am.ProcessRecord: int userId>;

        if $i7 != i8 goto label10;

        r3 = r6;

        goto label11;

     label10:
        i9 = i9 + 1;

        goto label09;

     label11:
        return r3;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.NumberFormatException from label01 to label06 with label07;
    }

    public boolean dumpHeap(java.lang.String, int, boolean, java.lang.String, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0, r4;
        java.lang.String r1, r2, $r14, $r16, $r18, $r23;
        int i0, $i1, $i2, $i3;
        boolean z0, z1, z2;
        android.os.ParcelFileDescriptor r3;
        com.android.server.am.ProcessRecord r5;
        java.lang.Throwable r7, r8, $r26, $r30;
        java.lang.IllegalArgumentException $r11, $r28;
        java.lang.StringBuilder $r12, $r13, $r15, $r22, $r24, $r25;
        android.app.IApplicationThread $r17, $r19;
        android.content.pm.ApplicationInfo $r20;
        java.lang.SecurityException $r21, $r29;
        android.os.RemoteException $r27;
        java.lang.IllegalStateException $r31;
        java.io.IOException $r32, $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.ParcelFileDescriptor;

     label01:
        r4 = r0;

        entermonitor r0;

     label02:
        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i1 == 0 goto label03;

        $r29 = new java.lang.SecurityException;

        specialinvoke $r29.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r29;

     label03:
        if r3 != null goto label04;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null fd");

        throw $r28;

     label04:
        r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r1, i0, "dumpHeap");

        if r5 == null goto label05;

        $r17 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r17 != null goto label06;

     label05:
        $r11 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label06:
        $r16 = "1";

        $r18 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if z1 != 0 goto label07;

        $r20 = r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 2;

        if $i3 != 0 goto label07;

        $r21 = new java.lang.SecurityException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r23);

        throw $r21;

     label07:
        $r19 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r19.<android.app.IApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>(z0, r2, r3);

        r3 = null;

        z2 = 1;

        exitmonitor r4;

     label08:
        if r3 == null goto label12;

     label09:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;

     label12:
        return z2;

     label13:
        $r30 := @caughtexception;

        r7 = $r30;

        exitmonitor r4;

     label14:
        throw r7;

     label15:
        $r27 := @caughtexception;

        $r31 = new java.lang.IllegalStateException;

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r31;

     label16:
        $r26 := @caughtexception;

        r8 = $r26;

     label17:
        if r3 == null goto label21;

     label18:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label19:
        goto label21;

     label20:
        $r33 := @caughtexception;

     label21:
        throw r8;

        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label02 to label08 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch android.os.RemoteException from label01 to label08 with label15;
        catch android.os.RemoteException from label13 to label15 with label15;
        catch java.lang.Throwable from label01 to label08 with label16;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label13 to label17 with label16;
    }

    public void monitor()
    {
        com.android.server.am.ActivityManagerService r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0;

        entermonitor r0;

     label1:
        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void onCoreSettingsChange(android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.Bundle r1;
        int i0, $i1;
        com.android.server.am.ProcessRecord r2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.Bundle;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label6;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r6;

     label2:
        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label3;

        $r8 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void setCoreSettings(android.os.Bundle)>(r1);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        i0 = i0 + -1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean startUserInBackground(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean startUser(int,boolean)>(i0, 0);

        return $z0;
    }

    boolean startUserInForeground(int, android.app.Dialog)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.app.Dialog r1;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Dialog;

        z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean startUser(int,boolean)>(i0, 1);

        virtualinvoke r1.<android.app.Dialog: void dismiss()>();

        return z0;
    }

    private void updateCurrentProfileIdsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.List r1, r3;
        int[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.pm.UserInfo r4, $r12;
        java.lang.Throwable r5, $r14;
        com.android.server.pm.UserManagerService $r6, $r9;
        android.util.SparseIntArray $r7, $r8, $r11, r15;
        java.lang.Object $r10, $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        r1 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>($i2, 0);

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (int)[$i3];

        i0 = 0;

     label01:
        $i4 = lengthof r2;

        if i0 >= $i4 goto label02;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r12 = (android.content.pm.UserInfo) $r13;

        $i9 = $r12.<android.content.pm.UserInfo: int id>;

        r2[i0] = $i9;

        i0 = i0 + 1;

        goto label01;

     label02:
        r0.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds> = r2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        r15 = $r7;

        entermonitor $r7;

     label03:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        virtualinvoke $r8.<android.util.SparseIntArray: void clear()>();

        $r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        r3 = virtualinvoke $r9.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(0);

        i1 = 0;

     label04:
        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i5 goto label06;

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.content.pm.UserInfo) $r10;

        $i7 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        if $i7 == -1 goto label05;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseIntArray mUserProfileGroupIdsSelfLocked>;

        $i8 = r4.<android.content.pm.UserInfo: int id>;

        $i6 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        virtualinvoke $r11.<android.util.SparseIntArray: void put(int,int)>($i8, $i6);

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        exitmonitor r15;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r15;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private java.util.Set getProfileIdsLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.util.HashSet r1, $r5;
        java.util.List r2;
        java.util.Iterator r3;
        android.content.pm.UserInfo r4;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Integer $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r1 = $r5;

        $r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        r2 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>(i0, 0);

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.UserInfo) $r7;

        $i1 = r4.<android.content.pm.UserInfo: int id>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r1;
    }

    public boolean switchUser(int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0;
        java.lang.String r1, $r14, $r19;
        android.content.pm.UserInfo r3;
        java.lang.Throwable r4, $r20;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0;
        com.android.server.am.ActivityManagerService$MainHandler $r7, $r8, $r9;
        android.os.Message $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceShellRestriction(java.lang.String,int)>("no_debugging_features", i0);

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        r3 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r3 != null goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No user info for user #");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z0 == 0 goto label5;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to User #");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not a full user");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        exitmonitor r2;

     label4:
        return 0;

     label5:
        r1 = r3.<android.content.pm.UserInfo: java.lang.String name>;

        r0.<com.android.server.am.ActivityManagerService: int mTargetUserId> = i0;

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r20 := @caughtexception;

        r4 = $r20;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(46);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r10 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(46, i0, 0, r1);

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r10);

        return 1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void showUserSwitchDialog(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.String r1;
        com.android.server.am.UserSwitchingDialog r2, $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new com.android.server.am.UserSwitchingDialog;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r3.<com.android.server.am.UserSwitchingDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,int,java.lang.String,boolean)>(r0, $r4, i0, r1, 1);

        r2 = $r3;

        virtualinvoke r2.<android.app.Dialog: void show()>();

        return;
    }

    private boolean startUser(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i15, $i18, $i19;
        boolean z0, z1, z2, $z7, $z12, z13, z14;
        java.lang.String r1, $r56, $r62;
        java.lang.Integer r3, r4;
        android.content.Intent r5, $r24, $r29, $r33, r75, r76;
        java.lang.Throwable r6, r7, $r70, $r71;
        com.android.server.am.ActivityStackSupervisor $r8, $r21;
        com.android.server.pm.UserManagerService $r10, $r26;
        java.lang.Object $r11, $r20;
        android.util.SparseArray $r12, $r18, $r49;
        java.util.ArrayList $r13, $r14, $r16, $r19;
        int[] $r15, $r44;
        com.android.server.wm.WindowManagerService $r17, $r48, $r51, $r52;
        com.android.server.am.ActivityManagerService$25 $r23;
        com.android.server.am.ActivityManagerService$24 $r27;
        com.android.server.am.ActivityManagerService$MainHandler $r30, $r31, $r36, $r38, $r39, $r40, $r41, $r43, $r46, $r47;
        android.os.Message $r32, $r37, $r42, $r45;
        java.lang.StringBuilder $r50, $r55, $r57, $r58, $r59, $r60, $r61, $r63, $r64, $r65, $r66, $r67, $r68, $r69;
        android.os.UserHandle $r53;
        com.android.server.am.UserStartedState $r54, r74;
        java.lang.SecurityException $r72;
        long l21;
        android.content.pm.UserInfo r73;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i2 == 0 goto label01;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: switchUser() from pid=");

        $i19 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i18 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        r1 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r1);

        $r72 = new java.lang.SecurityException;

        specialinvoke $r72.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r72;

     label01:
        l21 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r2 = r0;

        entermonitor r0;

     label03:
        i1 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if i1 != i0 goto label05;

        z1 = 1;

        exitmonitor r2;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        return z1;

     label05:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor: void setLockTaskModeLocked(com.android.server.am.TaskRecord,boolean)>(null, 0);

        $r10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        r73 = virtualinvoke $r10.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r73 != null goto label07;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No user info for user #");

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r62);

        z2 = 0;

        exitmonitor r2;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        return z2;

     label07:
        if z0 == 0 goto label09;

        $z12 = virtualinvoke r73.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z12 == 0 goto label09;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to User #");

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not a full user");

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r56);

        z13 = 0;

        exitmonitor r2;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        return z13;

     label09:
        if z0 == 0 goto label10;

        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r48.<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>(17432665, 17432664);

     label10:
        z14 = 0;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r11 != null goto label11;

        $r49 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r54 = new com.android.server.am.UserStartedState;

        $r53 = new android.os.UserHandle;

        specialinvoke $r53.<android.os.UserHandle: void <init>(int)>(i0);

        specialinvoke $r54.<com.android.server.am.UserStartedState: void <init>(android.os.UserHandle,boolean)>($r53, 0);

        virtualinvoke $r49.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r54);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        z14 = 1;

     label11:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r13.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        if z0 == 0 goto label12;

        r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId> = i0;

        r0.<com.android.server.am.ActivityManagerService: int mTargetUserId> = -10000;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateCurrentProfileIdsLocked()>();

        $r52 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r44 = r0.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds>;

        virtualinvoke $r52.<com.android.server.wm.WindowManagerService: void setCurrentUser(int,int[])>(i0, $r44);

        $r51 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r51.<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>(null);

        goto label13;

     label12:
        $i3 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateCurrentProfileIdsLocked()>();

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r15 = r0.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds>;

        virtualinvoke $r17.<com.android.server.wm.WindowManagerService: void setCurrentProfileIds(int[])>($r15);

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r16.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label13:
        $r18 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r20 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r74 = (com.android.server.am.UserStartedState) $r20;

        $i6 = r74.<com.android.server.am.UserStartedState: int mState>;

        if $i6 != 2 goto label14;

        r74.<com.android.server.am.UserStartedState: int mState> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        z14 = 1;

        goto label15;

     label14:
        $i4 = r74.<com.android.server.am.UserStartedState: int mState>;

        if $i4 != 3 goto label15;

        r74.<com.android.server.am.UserStartedState: int mState> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        z14 = 1;

     label15:
        $i5 = r74.<com.android.server.am.UserStartedState: int mState>;

        if $i5 != 0 goto label16;

        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r47 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r42 = virtualinvoke $r47.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(42, i0, 0);

        virtualinvoke $r43.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r42);

     label16:
        if z0 == 0 goto label17;

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r32 = virtualinvoke $r30.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(43, i0, i1);

        virtualinvoke $r31.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r32);

        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r39.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(34);

        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r40.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(36);

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r37 = virtualinvoke $r41.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(34, i1, i0, r74);

        virtualinvoke $r36.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r37);

        $r46 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r45 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(36, i1, i0, r74);

        virtualinvoke $r46.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>($r45, 2000L);

     label17:
        if z14 == 0 goto label18;

        $r33 = new android.content.Intent;

        specialinvoke $r33.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTED");

        r5 = $r33;

        virtualinvoke r5.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $i15 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r5, null, null, 0, null, null, null, -1, 0, 0, $i15, 1000, i0);

     label18:
        $i7 = r73.<android.content.pm.UserInfo: int flags>;

        $i8 = $i7 & 16;

        if $i8 != 0 goto label20;

        if i0 == 0 goto label19;

        $r29 = new android.content.Intent;

        specialinvoke $r29.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INITIALIZE");

        r75 = $r29;

        virtualinvoke r75.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r27 = new com.android.server.am.ActivityManagerService$24;

        specialinvoke $r27.<com.android.server.am.ActivityManagerService$24: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.UserStartedState,boolean,int,int)>(r0, r74, z0, i1, i0);

        $i13 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r75, null, $r27, 0, null, null, null, -1, 1, 0, $i13, 1000, i0);

        r74.<com.android.server.am.UserStartedState: boolean initializing> = 1;

        goto label20;

     label19:
        $r26 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $i10 = r73.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r26.<com.android.server.pm.UserManagerService: void makeInitialized(int)>($i10);

     label20:
        if z0 == 0 goto label21;

        $z7 = r74.<com.android.server.am.UserStartedState: boolean initializing>;

        if $z7 != 0 goto label22;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void moveUserToForeground(com.android.server.am.UserStartedState,int,int)>(r74, i1, i0);

        goto label22;

     label21:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r21.<com.android.server.am.ActivityStackSupervisor: void startBackgroundUserLocked(int,com.android.server.am.UserStartedState)>(i0, r74);

     label22:
        if z14 == 0 goto label23;

        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTING");

        r76 = $r24;

        virtualinvoke r76.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r76.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r23 = new com.android.server.am.ActivityManagerService$25;

        specialinvoke $r23.<com.android.server.am.ActivityManagerService$25: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $i9 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r76, null, $r23, 0, null, null, "android.permission.INTERACT_ACROSS_USERS", -1, 1, 0, $i9, 1000, -1);

     label23:
        exitmonitor r2;

     label24:
        goto label27;

     label25:
        $r71 := @caughtexception;

        r6 = $r71;

        exitmonitor r2;

     label26:
        throw r6;

     label27:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        goto label30;

     label28:
        $r70 := @caughtexception;

        r7 = $r70;

     label29:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l21);

        throw r7;

     label30:
        return 1;

        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.Throwable from label02 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    void sendUserSwitchBroadcastsLocked(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i3, i4, i5, $i7, $i8, $i10, i12, i13, i14;
        long l2;
        android.content.Intent r1, $r5, $r11, $r17, r21, r22;
        java.util.List r2, r20;
        java.lang.Throwable r3, $r19;
        com.android.server.pm.UserManagerService $r4, $r13;
        android.content.pm.UserInfo $r8, $r14;
        java.lang.Object $r9, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        if i0 < 0 goto label3;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        r2 = virtualinvoke $r13.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>(i0, 0);

        i3 = interfaceinvoke r2.<java.util.List: int size()>();

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        $r14 = (android.content.pm.UserInfo) $r15;

        i5 = $r14.<android.content.pm.UserInfo: int id>;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_BACKGROUND");

        r1 = $r17;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i5);

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r1, null, null, 0, null, null, null, -1, 0, 0, $i10, 1000, i5);

        i4 = i4 + 1;

        goto label2;

     label3:
        if i1 < 0 goto label6;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        r20 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>(i1, 0);

        i12 = interfaceinvoke r20.<java.util.List: int size()>();

        i13 = 0;

     label4:
        if i13 >= i12 goto label5;

        $r9 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(i13);

        $r8 = (android.content.pm.UserInfo) $r9;

        i14 = $r8.<android.content.pm.UserInfo: int id>;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_FOREGROUND");

        r21 = $r11;

        virtualinvoke r21.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r21.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i14);

        $i8 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r21, null, null, 0, null, null, null, -1, 0, 0, $i8, 1000, i14);

        i13 = i13 + 1;

        goto label4;

     label5:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_SWITCHED");

        r22 = $r5;

        virtualinvoke r22.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i1);

        $i7 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r22, null, null, 0, null, null, "android.permission.MANAGE_USERS", -1, 0, 0, $i7, 1000, -1);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label9;

     label7:
        $r19 := @caughtexception;

        r3 = $r19;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void dispatchUserSwitch(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r3, r18;
        com.android.server.am.UserStartedState r1;
        int i0, i1, i2, i3;
        com.android.server.am.ActivityManagerService$26 r2, $r9;
        java.lang.Throwable r4, r5, $r14, $r16;
        android.os.RemoteCallbackList $r6, $r8, $r11;
        android.app.IUserSwitchObserver $r12;
        android.os.IInterface $r13;
        android.os.RemoteException $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        i2 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

        if i2 <= 0 goto label12;

        $r9 = new com.android.server.am.ActivityManagerService$26;

        specialinvoke $r9.<com.android.server.am.ActivityManagerService$26: void <init>(com.android.server.am.ActivityManagerService,int,com.android.server.am.UserStartedState,int,int)>(r0, i2, r1, i0, i1);

        r2 = $r9;

        r3 = r0;

        entermonitor r0;

     label01:
        r1.<com.android.server.am.UserStartedState: boolean switching> = 1;

        r0.<com.android.server.am.ActivityManagerService: java.lang.Object mCurUserSwitchCallback> = r2;

        exitmonitor r3;

     label02:
        goto label05;

     label03:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label04:
        throw r4;

     label05:
        i3 = 0;

     label06:
        if i3 >= i2 goto label11;

     label07:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r13 = virtualinvoke $r11.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r12 = (android.app.IUserSwitchObserver) $r13;

        interfaceinvoke $r12.<android.app.IUserSwitchObserver: void onUserSwitching(int,android.os.IRemoteCallback)>(i1, r2);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        i3 = i3 + 1;

        goto label06;

     label11:
        goto label17;

     label12:
        r18 = r0;

        entermonitor r0;

     label13:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState,int,int)>(r1, i0, i1);

        exitmonitor r18;

     label14:
        goto label17;

     label15:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r18;

     label16:
        throw r5;

     label17:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r8.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    void timeoutUserSwitch(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        com.android.server.am.UserStartedState r1;
        int i0, i1;
        java.lang.Throwable r3, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User switch timeout: from ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1;
        com.android.server.am.ActivityManagerService$MainHandler $r2, $r3, $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.android.server.am.ActivityManagerService: java.lang.Object mCurUserSwitchCallback> = null;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(36);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r5 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(35, i0, i1, r1);

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    void onUserInitialized(com.android.server.am.UserStartedState, boolean, int, int)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        com.android.server.am.UserStartedState r1;
        boolean z0;
        int i0, i1;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = r0;

        entermonitor r0;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void moveUserToForeground(com.android.server.am.UserStartedState,int,int)>(r1, i0, i1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void completeSwitchAndInitalize(com.android.server.am.UserStartedState,int,boolean,boolean)>(r1, i1, 1, 0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void moveUserToForeground(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1;
        boolean z0;
        com.android.server.am.ActivityStackSupervisor $r2, $r3;
        com.android.server.pm.UserManagerService $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z0 = virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor: boolean switchUserLocked(int,com.android.server.am.UserStartedState)>(i1, r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int)>(i1);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label2:
        staticinvoke <com.android.server.am.EventLogTags: void writeAmSwitchUser(int)>(i1);

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        virtualinvoke $r4.<com.android.server.pm.UserManagerService: void userForeground(int)>(i1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendUserSwitchBroadcastsLocked(int,int)>(i0, i1);

        return;
    }

    void continueUserSwitch(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void completeSwitchAndInitalize(com.android.server.am.UserStartedState,int,boolean,boolean)>(r1, i1, 0, 1);

        return;
    }

    void completeSwitchAndInitalize(com.android.server.am.UserStartedState, int, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        com.android.server.am.UserStartedState r1;
        int i0, $i1, i2, i3;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.Throwable r3, $r14;
        android.os.RemoteCallbackList $r6, $r7, $r8;
        android.app.IUserSwitchObserver $r9;
        android.os.IInterface $r10;
        com.android.server.wm.WindowManagerService $r11;
        android.os.UserHandle $r12;
        com.android.server.pm.UserManagerService $r13;
        android.os.RemoteException $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 = 0;

        r2 = r0;

        entermonitor r0;

     label01:
        if z0 == 0 goto label02;

        r1.<com.android.server.am.UserStartedState: boolean initializing> = 0;

        $r13 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $r12 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        $i1 = virtualinvoke $r12.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r13.<com.android.server.pm.UserManagerService: void makeInitialized(int)>($i1);

     label02:
        if z1 == 0 goto label03;

        r1.<com.android.server.am.UserStartedState: boolean switching> = 0;

     label03:
        $z3 = r1.<com.android.server.am.UserStartedState: boolean switching>;

        if $z3 != 0 goto label04;

        $z4 = r1.<com.android.server.am.UserStartedState: boolean initializing>;

        if $z4 != 0 goto label04;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r11.<com.android.server.wm.WindowManagerService: void stopFreezingScreen()>();

        z2 = 1;

     label04:
        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r2;

     label07:
        throw r3;

     label08:
        if z2 == 0 goto label15;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        i2 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = 0;

     label09:
        if i3 >= i2 goto label14;

     label10:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r10 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r9 = (android.app.IUserSwitchObserver) $r10;

        interfaceinvoke $r9.<android.app.IUserSwitchObserver: void onUserSwitchComplete(int)>(i0);

     label11:
        goto label13;

     label12:
        $r15 := @caughtexception;

     label13:
        i3 = i3 + 1;

        goto label09;

     label14:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: void finishBroadcast()>();

     label15:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    void scheduleStartProfilesLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$MainHandler $r1, $r2, $r3;
        boolean $z0;
        android.os.Message $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z0 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$MainHandler: boolean hasMessages(int)>(40);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r4 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(40);

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>($r4, 1000L);

     label1:
        return;
    }

    void startProfilesLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.List r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.content.pm.UserInfo r4, $r8;
        com.android.server.pm.UserManagerService $r5;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;
        java.lang.Object $r7, $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        r1 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>($i0, 0);

        $r6 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r6;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.UserInfo) $r9;

        $i4 = r4.<android.content.pm.UserInfo: int flags>;

        $i6 = $i4 & 16;

        if $i6 != 16 goto label2;

        $i7 = r4.<android.content.pm.UserInfo: int id>;

        $i5 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if $i7 == $i5 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        i8 = interfaceinvoke r2.<java.util.List: int size()>();

        i9 = 0;

     label4:
        if i9 >= i8 goto label5;

        if i9 >= 2 goto label5;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);

        $r8 = (android.content.pm.UserInfo) $r7;

        $i3 = $r8.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean startUserInBackground(int)>($i3);

        i9 = i9 + 1;

        goto label4;

     label5:
        if i9 >= i8 goto label6;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManagerServiceMU", "More profiles than MAX_RUNNING_USERS");

     label6:
        return;
    }

    void finishUserBoot(com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        com.android.server.am.UserStartedState r1;
        int i0, $i1, $i2, $i4;
        android.content.Intent r3, $r10;
        java.lang.Throwable r4, $r13;
        android.os.UserHandle $r6, $r9;
        android.util.SparseArray $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        r2 = r0;

        entermonitor r0;

     label1:
        $i1 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i1 != 0 goto label2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r6 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        $i2 = virtualinvoke $r6.<android.os.UserHandle: int getIdentifier()>();

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        if $r8 != r1 goto label2;

        r1.<com.android.server.am.UserStartedState: int mState> = 1;

        $r9 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r9.<android.os.UserHandle: int getIdentifier()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.BOOT_COMPLETED", null);

        r3 = $r10;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(134217728);

        $i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, null, 0, null, null, "android.permission.RECEIVE_BOOT_COMPLETED", -1, 1, 0, $i4, 1000, i0);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void finishUserSwitch(com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityManagerService r0, r2;
        com.android.server.am.UserStartedState r1, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        java.lang.Integer r3;
        java.lang.Throwable r5, $r15;
        java.util.ArrayList $r7, $r8, $r9, $r14;
        java.lang.Object $r10, $r12;
        android.util.SparseArray $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        r2 = r0;

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishUserBoot(com.android.server.am.UserStartedState)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startProfilesLocked()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = 0;

     label02:
        if i0 <= 3 goto label08;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label08;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (java.lang.Integer) $r10;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r4 = (com.android.server.am.UserStartedState) $r12;

        if r4 != null goto label03;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i0 = i0 + -1;

        goto label02;

     label03:
        $i4 = r4.<com.android.server.am.UserStartedState: int mState>;

        if $i4 == 2 goto label04;

        $i6 = r4.<com.android.server.am.UserStartedState: int mState>;

        if $i6 != 3 goto label05;

     label04:
        i0 = i0 + -1;

        i1 = i1 + 1;

        goto label02;

     label05:
        $i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i5 == 0 goto label06;

        $i8 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i7 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if $i8 != $i7 goto label07;

     label06:
        i1 = i1 + 1;

        goto label02;

     label07:
        $i10 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int stopUserLocked(int,android.app.IStopUserCallback)>($i10, null);

        i0 = i0 + -1;

        i1 = i1 + 1;

        goto label02;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r2;

     label11:
        throw r5;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public int stopUser(int, android.app.IStopUserCallback)
    {
        com.android.server.am.ActivityManagerService r0, r19;
        int i0, $i1, $i2, $i3, $i4;
        android.app.IStopUserCallback r1;
        java.lang.String r2, $r9;
        java.lang.Throwable r3, $r18;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.SecurityException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.IStopUserCallback;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i1 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: switchUser() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r17;

     label1:
        if i0 > 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t stop primary user ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceShellRestriction(java.lang.String,int)>("no_debugging_features", i0);

        r19 = r0;

        entermonitor r0;

     label3:
        $i2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int stopUserLocked(int,android.app.IStopUserCallback)>(i0, r1);

        exitmonitor r19;

     label4:
        return $i2;

     label5:
        $r18 := @caughtexception;

        r3 = $r18;

        exitmonitor r19;

     label6:
        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int stopUserLocked(int, android.app.IStopUserCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3, $i4, $i6, $i7;
        android.app.IStopUserCallback r1;
        com.android.server.am.UserStartedState r2;
        long l1;
        android.content.Intent r3, r4, $r10, $r13;
        com.android.server.am.ActivityManagerService$28 r5, $r16;
        com.android.server.am.ActivityManagerService$29 r6, $r15;
        java.lang.Throwable r7, $r20;
        android.util.SparseArray $r8;
        java.lang.Object $r9;
        java.util.ArrayList $r17;
        com.android.server.am.ActivityManagerService$MainHandler $r18;
        com.android.server.am.ActivityManagerService$27 $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.IStopUserCallback;

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if $i2 != i0 goto label1;

        $i7 = r0.<com.android.server.am.ActivityManagerService: int mTargetUserId>;

        if $i7 != -10000 goto label1;

        return -2;

     label1:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.UserStartedState) $r9;

        if r2 != null goto label3;

        if r1 == null goto label2;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r19 = new com.android.server.am.ActivityManagerService$27;

        specialinvoke $r19.<com.android.server.am.ActivityManagerService$27: void <init>(com.android.server.am.ActivityManagerService,android.app.IStopUserCallback,int)>(r0, r1, i0);

        virtualinvoke $r18.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r19);

     label2:
        return 0;

     label3:
        if r1 == null goto label4;

        $r17 = r2.<com.android.server.am.UserStartedState: java.util.ArrayList mStopCallbacks>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label4:
        $i3 = r2.<com.android.server.am.UserStartedState: int mState>;

        if $i3 == 2 goto label9;

        $i4 = r2.<com.android.server.am.UserStartedState: int mState>;

        if $i4 == 3 goto label9;

        r2.<com.android.server.am.UserStartedState: int mState> = 2;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label5:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STOPPING");

        r3 = $r10;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.SHUTDOWN_USERSPACE_ONLY", 1);

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        r4 = $r13;

        $r16 = new com.android.server.am.ActivityManagerService$28;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$28: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.UserStartedState)>(r0, r2);

        r5 = $r16;

        $r15 = new com.android.server.am.ActivityManagerService$29;

        specialinvoke $r15.<com.android.server.am.ActivityManagerService$29: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.UserStartedState,int,android.content.Intent,android.content.IIntentReceiver)>(r0, r2, i0, r4, r5);

        r6 = $r15;

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, r6, 0, null, null, "android.permission.INTERACT_ACROSS_USERS", -1, 1, 0, $i6, 1000, -1);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label9;

     label7:
        $r20 := @caughtexception;

        r7 = $r20;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r7;

     label9:
        return 0;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void finishUserStop(com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityManagerService r0, r3, r26;
        com.android.server.am.UserStartedState r1;
        int i0, $i1, $i2, i3;
        boolean z0;
        java.util.ArrayList r2, $r8, $r9, $r12;
        java.lang.Throwable r4, r5, $r22, $r24;
        android.os.UserHandle $r6;
        android.util.SparseArray $r10, $r13;
        java.lang.Object $r11, $r19, $r21;
        java.lang.Integer $r14;
        com.android.server.SystemServiceManager $r16;
        com.android.server.am.ActivityStackSupervisor $r17;
        android.app.IStopUserCallback $r18, $r20;
        android.os.RemoteException $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        $r6 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r6.<android.os.UserHandle: int getIdentifier()>();

        r3 = r0;

        entermonitor r0;

     label01:
        $r8 = new java.util.ArrayList;

        $r9 = r1.<com.android.server.am.UserStartedState: java.util.ArrayList mStopCallbacks>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r2 = $r8;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r11 == r1 goto label02;

        z0 = 0;

        goto label04;

     label02:
        $i1 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i1 == 3 goto label03;

        z0 = 0;

        goto label04;

     label03:
        z0 = 1;

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        virtualinvoke $r13.<android.util.SparseArray: void remove(int)>(i0);

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>($r14);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopUserLocked(int,java.lang.String)>(i0, "finish user");

     label04:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeRecentTasksForUserLocked(int)>(i0);

        exitmonitor r3;

     label05:
        goto label08;

     label06:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r3;

     label07:
        throw r4;

     label08:
        i3 = 0;

     label09:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i3 >= $i2 goto label15;

     label10:
        if z0 == 0 goto label11;

        $r21 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r20 = (android.app.IStopUserCallback) $r21;

        interfaceinvoke $r20.<android.app.IStopUserCallback: void userStopped(int)>(i0);

        goto label12;

     label11:
        $r19 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r18 = (android.app.IStopUserCallback) $r19;

        interfaceinvoke $r18.<android.app.IStopUserCallback: void userStopAborted(int)>(i0);

     label12:
        goto label14;

     label13:
        $r23 := @caughtexception;

     label14:
        i3 = i3 + 1;

        goto label09;

     label15:
        if z0 == 0 goto label20;

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        virtualinvoke $r16.<com.android.server.SystemServiceManager: void cleanupUser(int)>(i0);

        r26 = r0;

        entermonitor r0;

     label16:
        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r17.<com.android.server.am.ActivityStackSupervisor: void removeUserLocked(int)>(i0);

        exitmonitor r26;

     label17:
        goto label20;

     label18:
        $r24 := @caughtexception;

        r5 = $r24;

        exitmonitor r26;

     label19:
        throw r5;

     label20:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label10 to label12 with label13;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public android.content.pm.UserInfo getCurrentUser()
    {
        com.android.server.am.ActivityManagerService r0, r15;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r14;
        com.android.server.pm.UserManagerService $r4;
        android.content.pm.UserInfo $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i1 == 0 goto label1;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i4 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getCurrentUser() from pid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r1);

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r13;

     label1:
        r15 = r0;

        entermonitor r0;

     label2:
        $i2 = r0.<com.android.server.am.ActivityManagerService: int mTargetUserId>;

        if $i2 == -10000 goto label3;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mTargetUserId>;

        goto label4;

     label3:
        $i3 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

     label4:
        i0 = $i3;

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $r5 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        exitmonitor r15;

     label5:
        return $r5;

     label6:
        $r14 := @caughtexception;

        r2 = $r14;

        exitmonitor r15;

     label7:
        throw r2;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    int getCurrentUserIdLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mTargetUserId>;

        if $i0 == -10000 goto label1;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mTargetUserId>;

        goto label2;

     label1:
        $i1 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

     label2:
        return $i1;
    }

    public boolean isUserRunning(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0, r13;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1;
        java.lang.String r1;
        java.lang.Throwable r2, $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.SecurityException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: isUserRunning() from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r1);

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r12;

     label1:
        r13 = r0;

        entermonitor r0;

     label2:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isUserRunningLocked(int,boolean)>(i0, z0);

        exitmonitor r13;

     label3:
        return $z1;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r13;

     label5:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    boolean isUserRunningLocked(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2;
        boolean z0, $z1;
        com.android.server.am.UserStartedState r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.UserStartedState) $r3;

        if r1 != null goto label1;

        return 0;

     label1:
        if z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i1 == 2 goto label3;

        $i2 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i2 == 3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int[] getRunningUserIds()
    {
        com.android.server.am.ActivityManagerService r0, r14;
        java.lang.String r1;
        java.lang.Throwable r2, $r12;
        int $i0, $i1, $i2;
        int[] $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: isUserRunning() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r1);

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r13;

     label1:
        r14 = r0;

        entermonitor r0;

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        exitmonitor r14;

     label3:
        return $r4;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r14;

     label5:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void updateStartedUserArrayLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        com.android.server.am.UserStartedState r1, r11;
        android.util.SparseArray $r2, $r4, $r5, $r7, $r10;
        int[] $r3, $r8;
        java.lang.Object $r6, $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 = 0;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i2 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i1 >= $i2 goto label3;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r9 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.server.am.UserStartedState) $r9;

        $i8 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i8 == 2 goto label2;

        $i7 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i7 == 3 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = newarray (int)[i0];

        r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray> = $r3;

        i9 = 0;

        i10 = 0;

     label4:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i10 >= $i3 goto label6;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r11 = (com.android.server.am.UserStartedState) $r6;

        $i4 = r11.<com.android.server.am.UserStartedState: int mState>;

        if $i4 == 2 goto label5;

        $i5 = r11.<com.android.server.am.UserStartedState: int mState>;

        if $i5 == 3 goto label5;

        $r8 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i6 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i10);

        $r8[i9] = $i6;

        i9 = i9 + 1;

     label5:
        i10 = i10 + 1;

        goto label4;

     label6:
        return;
    }

    public void registerUserSwitchObserver(android.app.IUserSwitchObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IUserSwitchObserver r1;
        java.lang.String r2;
        int $i0, $i1, $i2;
        android.os.RemoteCallbackList $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.SecurityException $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: registerUserSwitchObserver() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r11;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    public void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IUserSwitchObserver r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    private boolean userExists(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService r1;
        android.content.pm.UserInfo $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        if r1 == null goto label3;

        $r2 = virtualinvoke r1.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if $r2 == null goto label2;

        $z0 = 1;

        goto label4;

     label2:
        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    int[] getUsersLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.pm.UserManagerService r1;
        int[] $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        goto label2;

     label1:
        $r2 = newarray (int)[1];

        $r2[0] = 0;

     label2:
        return $r2;
    }

    com.android.server.pm.UserManagerService getUserManagerLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.pm.UserManagerService $r2, $r3, $r5;
        android.os.IUserManager $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        if $r2 != null goto label1;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r4 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>(r1);

        $r5 = (com.android.server.pm.UserManagerService) $r4;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager> = $r5;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        return $r3;
    }

    private int applyUserId(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, i0);

        return $i2;
    }

    android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1, r2, $r3;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new android.content.pm.ApplicationInfo;

        specialinvoke $r3.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>(r1);

        r2 = $r3;

        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int applyUserId(int,int)>($i1, i0);

        r2.<android.content.pm.ApplicationInfo: int uid> = $i2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/user/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r10;

        return r2;
    }

    android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ActivityInfo r1, r2, $r3;
        int i0, $i1;
        android.content.pm.ApplicationInfo $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        if i0 >= 1 goto label2;

        $r6 = r1.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 >= 100000 goto label2;

     label1:
        return r1;

     label2:
        $r3 = new android.content.pm.ActivityInfo;

        specialinvoke $r3.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>(r1);

        r2 = $r3;

        $r4 = r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r4, i0);

        r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r5;

        return r2;
    }

    static boolean access$000(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mShowDialogs>;

        return $z0;
    }

    static boolean access$100(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        return $z0;
    }

    static int access$200(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, r6, r8;
        android.content.Intent r3;
        android.content.IIntentReceiver r5;
        int i0, i1, i2, i3, i4, $i5;
        android.os.Bundle r7;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.content.IIntentReceiver;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: android.os.Bundle;

        r8 := @parameter9: java.lang.String;

        i1 := @parameter10: int;

        z0 := @parameter11: boolean;

        z1 := @parameter12: boolean;

        i2 := @parameter13: int;

        i3 := @parameter14: int;

        i4 := @parameter15: int;

        $i5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(r1, r2, r3, r4, r5, i0, r6, r7, r8, i1, z0, z1, i2, i3, i4);

        return $i5;
    }

    static void access$300(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    static boolean access$400(com.android.server.am.ActivityManagerService, java.lang.String, int, boolean, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean z0, z1, z2, z3, z4, $z5;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        z4 := @parameter7: boolean;

        i1 := @parameter8: int;

        r2 := @parameter9: java.lang.String;

        $z5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, i0, z0, z1, z2, z3, z4, i1, r2);

        return $z5;
    }

    static void access$500(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchProcessesChanged()>();

        return;
    }

    static void access$600(com.android.server.am.ActivityManagerService, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchProcessDied(int,int)>(i0, i1);

        return;
    }

    static void access$700(com.android.server.am.ActivityManagerService, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void showUserSwitchDialog(int,java.lang.String)>(i0, r1);

        return;
    }

    static void access$800(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void writeGrantedUriPermissions()>();

        return;
    }

    static com.android.server.am.LockToAppRequestDialog access$900(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.LockToAppRequestDialog $r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.LockToAppRequestDialog mLockToAppRequest>;

        return $r1;
    }

    static boolean access$1000(com.android.server.am.ActivityManagerService, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeTaskByIdLocked(int,int)>(i0, i1);

        return $z0;
    }

    static void access$1100(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void start()>();

        return;
    }

    static void access$1300(java.util.ArrayList)
    {
        java.util.ArrayList r0;

        r0 := @parameter0: java.util.ArrayList;

        staticinvoke <com.android.server.am.ActivityManagerService: void writeLastDonePreBootReceivers(java.util.ArrayList)>(r0);

        return;
    }

    static java.lang.StringBuilder access$1400(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder $r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStrictModeBuffer>;

        return $r1;
    }

    static com.android.server.am.TaskRecord access$1500(com.android.server.am.ActivityManagerService, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.TaskRecord $r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

        return $r1;
    }

    static android.app.ActivityManager$RecentTaskInfo access$1600(com.android.server.am.ActivityManagerService, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1;
        android.app.ActivityManager$RecentTaskInfo $r2;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.TaskRecord;

        $r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RecentTaskInfo createRecentTaskInfoFromTaskRecord(com.android.server.am.TaskRecord)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0;
        java.lang.String[] $r2, $r6, $r7;
        java.lang.ThreadLocal $r3;
        long[] $r4;
        int[] $r5;

        <com.android.server.am.ActivityManagerService: int COLLECT_PSS_BG_MSG> = 1;

        <com.android.server.am.ActivityManagerService: int FIRST_SUPERVISOR_STACK_MSG> = 100;

        <com.android.server.am.ActivityManagerService: int FIRST_COMPAT_MODE_MSG> = 300;

        <com.android.server.am.ActivityManagerService: int FIRST_BROADCAST_QUEUE_MSG> = 200;

        <com.android.server.am.ActivityManagerService: int FIRST_ACTIVITY_STACK_MSG> = 100;

        <com.android.server.am.ActivityManagerService: int SEND_LOCALE_TO_MOUNT_DAEMON_MSG> = 47;

        <com.android.server.am.ActivityManagerService: int START_USER_SWITCH_MSG> = 46;

        <com.android.server.am.ActivityManagerService: int FINISH_BOOTING_MSG> = 45;

        <com.android.server.am.ActivityManagerService: int ENTER_ANIMATION_COMPLETE_MSG> = 44;

        <com.android.server.am.ActivityManagerService: int SYSTEM_USER_CURRENT_MSG> = 43;

        <com.android.server.am.ActivityManagerService: int SYSTEM_USER_START_MSG> = 42;

        <com.android.server.am.ActivityManagerService: int UPDATE_TIME> = 41;

        <com.android.server.am.ActivityManagerService: int START_PROFILES_MSG> = 40;

        <com.android.server.am.ActivityManagerService: int REQUEST_ALL_PSS_MSG> = 39;

        <com.android.server.am.ActivityManagerService: int PERSIST_URI_GRANTS_MSG> = 38;

        <com.android.server.am.ActivityManagerService: int IMMERSIVE_MODE_LOCK_MSG> = 37;

        <com.android.server.am.ActivityManagerService: int USER_SWITCH_TIMEOUT_MSG> = 36;

        <com.android.server.am.ActivityManagerService: int CONTINUE_USER_SWITCH_MSG> = 35;

        <com.android.server.am.ActivityManagerService: int REPORT_USER_SWITCH_MSG> = 34;

        <com.android.server.am.ActivityManagerService: int REPORT_MEM_USAGE_MSG> = 33;

        <com.android.server.am.ActivityManagerService: int DISPATCH_PROCESS_DIED> = 32;

        <com.android.server.am.ActivityManagerService: int DISPATCH_PROCESSES_CHANGED> = 31;

        <com.android.server.am.ActivityManagerService: int SHOW_COMPAT_MODE_DIALOG_MSG> = 30;

        <com.android.server.am.ActivityManagerService: int UPDATE_HTTP_PROXY_MSG> = 29;

        <com.android.server.am.ActivityManagerService: int CLEAR_DNS_CACHE_MSG> = 28;

        <com.android.server.am.ActivityManagerService: int CHECK_EXCESSIVE_WAKE_LOCKS_MSG> = 27;

        <com.android.server.am.ActivityManagerService: int SHOW_STRICT_MODE_VIOLATION_MSG> = 26;

        <com.android.server.am.ActivityManagerService: int CANCEL_HEAVY_NOTIFICATION_MSG> = 25;

        <com.android.server.am.ActivityManagerService: int POST_HEAVY_NOTIFICATION_MSG> = 24;

        <com.android.server.am.ActivityManagerService: int FINALIZE_PENDING_INTENT_MSG> = 23;

        <com.android.server.am.ActivityManagerService: int KILL_APPLICATION_MSG> = 22;

        <com.android.server.am.ActivityManagerService: int DO_PENDING_ACTIVITY_LAUNCHES_MSG> = 21;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_MSG> = 20;

        <com.android.server.am.ActivityManagerService: int IM_FEELING_LUCKY_MSG> = 15;

        <com.android.server.am.ActivityManagerService: int SHOW_UID_ERROR_MSG> = 14;

        <com.android.server.am.ActivityManagerService: int UPDATE_TIME_ZONE> = 13;

        <com.android.server.am.ActivityManagerService: int SERVICE_TIMEOUT_MSG> = 12;

        <com.android.server.am.ActivityManagerService: int WAIT_FOR_DEBUGGER_MSG> = 6;

        <com.android.server.am.ActivityManagerService: int GC_BACKGROUND_PROCESSES_MSG> = 5;

        <com.android.server.am.ActivityManagerService: int UPDATE_CONFIGURATION_MSG> = 4;

        <com.android.server.am.ActivityManagerService: int SHOW_FACTORY_ERROR_MSG> = 3;

        <com.android.server.am.ActivityManagerService: int SHOW_NOT_RESPONDING_MSG> = 2;

        <com.android.server.am.ActivityManagerService: int SHOW_ERROR_MSG> = 1;

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_PREFIX> = "prefix";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_CREATED_TIME> = "createdTime";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_MODE_FLAGS> = "modeFlags";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_URI> = "uri";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_TARGET_PKG> = "targetPkg";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_SOURCE_PKG> = "sourcePkg";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_TARGET_USER_ID> = "targetUserId";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_SOURCE_USER_ID> = "sourceUserId";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_USER_HANDLE> = "userHandle";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_URI_GRANT> = "uri-grant";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_URI_GRANTS> = "uri-grants";

        <com.android.server.am.ActivityManagerService: int MAX_DUP_SUPPRESSED_STACKS> = 5000;

        <com.android.server.am.ActivityManagerService: int LAST_PREBOOT_DELIVERED_FILE_VERSION> = 10000;

        <com.android.server.am.ActivityManagerService: int ALLOW_FULL_ONLY> = 2;

        <com.android.server.am.ActivityManagerService: int ALLOW_NON_FULL_IN_PROFILE> = 1;

        <com.android.server.am.ActivityManagerService: int ALLOW_NON_FULL> = 0;

        <com.android.server.am.ActivityManagerService: int DROPBOX_MAX_SIZE> = 262144;

        <com.android.server.am.ActivityManagerService: int MAX_PERSISTED_URI_GRANTS> = 128;

        <com.android.server.am.ActivityManagerService: int PENDING_ASSIST_EXTRAS_TIMEOUT> = 500;

        <com.android.server.am.ActivityManagerService: int MAX_RUNNING_USERS> = 3;

        <com.android.server.am.ActivityManagerService: int USER_SWITCH_TIMEOUT> = 2000;

        <com.android.server.am.ActivityManagerService: int INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT> = 60000;

        <com.android.server.am.ActivityManagerService: int KEY_DISPATCHING_TIMEOUT> = 5000;

        <com.android.server.am.ActivityManagerService: int BROADCAST_BG_TIMEOUT> = 60000;

        <com.android.server.am.ActivityManagerService: int BROADCAST_FG_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int CPU_MIN_CHECK_DURATION> = 300000;

        <com.android.server.am.ActivityManagerService: int WAKE_LOCK_MIN_CHECK_DURATION> = 300000;

        <com.android.server.am.ActivityManagerService: int POWER_CHECK_DELAY> = 900000;

        <com.android.server.am.ActivityManagerService: int FULL_PSS_LOWERED_INTERVAL> = 120000;

        <com.android.server.am.ActivityManagerService: int FULL_PSS_MIN_INTERVAL> = 600000;

        <com.android.server.am.ActivityManagerService: int GC_MIN_INTERVAL> = 60000;

        <com.android.server.am.ActivityManagerService: int GC_TIMEOUT> = 5000;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_WITH_WRAPPER> = 1200000;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: long APP_SWITCH_DELAY_TIME> = 5000L;

        <com.android.server.am.ActivityManagerService: int MAX_RECENT_BITMAPS> = 5;

        <com.android.server.am.ActivityManagerService: java.lang.String SYSTEM_DEBUGGABLE> = "ro.debuggable";

        <com.android.server.am.ActivityManagerService: int STOCK_PM_FLAGS> = 1024;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_THREAD_CPU_USAGE> = 0;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MAX_TIME> = 268435455L;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MIN_TIME> = 5000L;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_CPU_USAGE> = 1;

        <com.android.server.am.ActivityManagerService: long BATTERY_STATS_TIME> = 1800000L;

        <com.android.server.am.ActivityManagerService: boolean SHOW_ACTIVITY_START_TIME> = 1;

        <com.android.server.am.ActivityManagerService: boolean VALIDATE_TOKENS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_RECENTS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_LOCKSCREEN> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PSS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_VISBILITY> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_USER_LEAVING> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_URI_PERMISSION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_TRANSITION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_THUMBNAILS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_TASKS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SWITCH> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_STACK> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SERVICE_EXECUTING> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SERVICE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_RESULTS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROVIDER> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROCESSES> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROCESS_OBSERVERS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_POWER_QUICK> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_POWER> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PAUSE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_LRU> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_OOM_ADJ> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_MU> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_IMMERSIVE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_FOCUS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_CONFIGURATION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_CLEANUP> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BACKGROUND_BROADCAST> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BROADCAST_LIGHT> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BROADCAST> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BACKUP> = 0;

        <com.android.server.am.ActivityManagerService: boolean localLOGV> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG> = 0;

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_MU> = "ActivityManagerServiceMU";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String CALLED_PRE_BOOTS_FILENAME> = "called_pre_boots.dat";

        <com.android.server.am.ActivityManagerService: java.lang.String USER_DATA_DIR> = "/data/user/";

        $r1 = "user";

        $r0 = <android.os.Build: java.lang.String TYPE>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        <com.android.server.am.ActivityManagerService: boolean IS_USER_BUILD> = $z0;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        <com.android.server.am.ActivityManagerService: int MY_PID> = $i0;

        $r2 = newarray (java.lang.String)[0];

        <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity> = $r3;

        $r4 = newarray (long)[23];

        $r4[0] = 5120L;

        $r4[1] = 7168L;

        $r4[2] = 10240L;

        $r4[3] = 15360L;

        $r4[4] = 20480L;

        $r4[5] = 30720L;

        $r4[6] = 40960L;

        $r4[7] = 81920L;

        $r4[8] = 122880L;

        $r4[9] = 163840L;

        $r4[10] = 204800L;

        $r4[11] = 256000L;

        $r4[12] = 307200L;

        $r4[13] = 358400L;

        $r4[14] = 409600L;

        $r4[15] = 512000L;

        $r4[16] = 614400L;

        $r4[17] = 819200L;

        $r4[18] = 1048576L;

        $r4[19] = 2097152L;

        $r4[20] = 5242880L;

        $r4[21] = 10485760L;

        $r4[22] = 20971520L;

        <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS> = $r4;

        $r5 = newarray (int)[14];

        $r5[0] = -17;

        $r5[1] = -16;

        $r5[2] = -12;

        $r5[3] = -11;

        $r5[4] = 0;

        $r5[5] = 1;

        $r5[6] = 2;

        $r5[7] = 3;

        $r5[8] = 4;

        $r5[9] = 5;

        $r5[10] = 6;

        $r5[11] = 7;

        $r5[12] = 8;

        $r5[13] = 15;

        <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ> = $r5;

        $r6 = newarray (java.lang.String)[14];

        $r6[0] = "Native";

        $r6[1] = "System";

        $r6[2] = "Persistent";

        $r6[3] = "Persistent Service";

        $r6[4] = "Foreground";

        $r6[5] = "Visible";

        $r6[6] = "Perceptible";

        $r6[7] = "Heavy Weight";

        $r6[8] = "Backup";

        $r6[9] = "A Services";

        $r6[10] = "Home";

        $r6[11] = "Previous";

        $r6[12] = "B Services";

        $r6[13] = "Cached";

        <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL> = $r6;

        $r7 = newarray (java.lang.String)[14];

        $r7[0] = "native";

        $r7[1] = "sys";

        $r7[2] = "pers";

        $r7[3] = "persvc";

        $r7[4] = "fore";

        $r7[5] = "vis";

        $r7[6] = "percept";

        $r7[7] = "heavy";

        $r7[8] = "backup";

        $r7[9] = "servicea";

        $r7[10] = "home";

        $r7[11] = "prev";

        $r7[12] = "serviceb";

        $r7[13] = "cached";

        <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL> = $r7;

        return;
    }
}
