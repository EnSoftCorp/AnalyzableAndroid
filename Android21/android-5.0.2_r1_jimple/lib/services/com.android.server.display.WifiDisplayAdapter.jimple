final class com.android.server.display.WifiDisplayAdapter extends com.android.server.display.DisplayAdapter
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int MSG_SEND_STATUS_CHANGE_BROADCAST;
    private static final java.lang.String ACTION_DISCONNECT;
    private final com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler mHandler;
    private final com.android.server.display.PersistentDataStore mPersistentDataStore;
    private final boolean mSupportsProtectedBuffers;
    private com.android.server.display.WifiDisplayController mDisplayController;
    private com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice;
    private android.hardware.display.WifiDisplayStatus mCurrentStatus;
    private int mFeatureState;
    private int mScanState;
    private int mActiveDisplayState;
    private android.hardware.display.WifiDisplay mActiveDisplay;
    private android.hardware.display.WifiDisplay[] mDisplays;
    private android.hardware.display.WifiDisplay[] mAvailableDisplays;
    private android.hardware.display.WifiDisplay[] mRememberedDisplays;
    private android.hardware.display.WifiDisplaySessionInfo mSessionInfo;
    private boolean mPendingStatusChangeBroadcast;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final com.android.server.display.WifiDisplayController$Listener mWifiDisplayListener;

    public void <init>(com.android.server.display.DisplayManagerService$SyncRoot, android.content.Context, android.os.Handler, com.android.server.display.DisplayAdapter$Listener, com.android.server.display.PersistentDataStore)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        android.content.Context r2;
        android.os.Handler r3;
        com.android.server.display.DisplayAdapter$Listener r4;
        com.android.server.display.PersistentDataStore r5;
        android.hardware.display.WifiDisplay[] $r6, $r7, $r8;
        com.android.server.display.WifiDisplayAdapter$8 $r9;
        com.android.server.display.WifiDisplayAdapter$9 $r10;
        com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler $r11;
        android.os.Looper $r12;
        android.content.res.Resources $r13;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: com.android.server.display.DisplayManagerService$SyncRoot;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: com.android.server.display.DisplayAdapter$Listener;

        r5 := @parameter4: com.android.server.display.PersistentDataStore;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void <init>(com.android.server.display.DisplayManagerService$SyncRoot,android.content.Context,android.os.Handler,com.android.server.display.DisplayAdapter$Listener,java.lang.String)>(r1, r2, r3, r4, "WifiDisplayAdapter");

        $r6 = <android.hardware.display.WifiDisplay: android.hardware.display.WifiDisplay[] EMPTY_ARRAY>;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mDisplays> = $r6;

        $r7 = <android.hardware.display.WifiDisplay: android.hardware.display.WifiDisplay[] EMPTY_ARRAY>;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays> = $r7;

        $r8 = <android.hardware.display.WifiDisplay: android.hardware.display.WifiDisplay[] EMPTY_ARRAY>;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays> = $r8;

        $r9 = new com.android.server.display.WifiDisplayAdapter$8;

        specialinvoke $r9.<com.android.server.display.WifiDisplayAdapter$8: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        r0.<com.android.server.display.WifiDisplayAdapter: android.content.BroadcastReceiver mBroadcastReceiver> = $r9;

        $r10 = new com.android.server.display.WifiDisplayAdapter$9;

        specialinvoke $r10.<com.android.server.display.WifiDisplayAdapter$9: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayController$Listener mWifiDisplayListener> = $r10;

        $r11 = new com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler;

        $r12 = virtualinvoke r3.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r11.<com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler: void <init>(com.android.server.display.WifiDisplayAdapter,android.os.Looper)>(r0, $r12);

        r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler mHandler> = $r11;

        r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore> = r5;

        $r13 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r13.<android.content.res.Resources: boolean getBoolean(int)>(17956962);

        r0.<com.android.server.display.WifiDisplayAdapter: boolean mSupportsProtectedBuffers> = $z0;

        return;
    }

    public void dumpLocked(java.io.PrintWriter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.io.PrintWriter r1;
        com.android.internal.util.IndentingPrintWriter r2, $r53;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r22, $r24, $r25, $r26, $r29, $r30, $r31, $r33, $r39, $r40, $r41, $r42, $r43, $r45, $r47, $r49, $r50;
        android.hardware.display.WifiDisplayStatus $r5;
        java.lang.String $r7, $r11, $r14, $r20, $r23, $r27, $r32, $r34, $r36, $r38, $r44, $r46, $r48;
        int $i0, $i1, $i2;
        android.hardware.display.WifiDisplay $r21;
        android.hardware.display.WifiDisplay[] $r28, $r35, $r37;
        boolean $z0, $z1;
        com.android.server.display.WifiDisplayController $r51, $r54;
        android.os.Handler $r52;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void dumpLocked(java.io.PrintWriter)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentStatus=");

        $r5 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus getWifiDisplayStatusLocked()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFeatureState=");

        $i0 = r0.<com.android.server.display.WifiDisplayAdapter: int mFeatureState>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mScanState=");

        $i1 = r0.<com.android.server.display.WifiDisplayAdapter: int mScanState>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mActiveDisplayState=");

        $i2 = r0.<com.android.server.display.WifiDisplayAdapter: int mActiveDisplayState>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mActiveDisplay=");

        $r21 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisplays=");

        $r28 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mDisplays>;

        $r27 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r28);

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAvailableDisplays=");

        $r35 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $r36 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r35);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRememberedDisplays=");

        $r37 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays>;

        $r38 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r37);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPendingStatusChangeBroadcast=");

        $z0 = r0.<com.android.server.display.WifiDisplayAdapter: boolean mPendingStatusChangeBroadcast>;

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r46);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSupportsProtectedBuffers=");

        $z1 = r0.<com.android.server.display.WifiDisplayAdapter: boolean mSupportsProtectedBuffers>;

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        $r54 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayController mDisplayController>;

        if $r54 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("mDisplayController=null");

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("mDisplayController:");

        $r53 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r53.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r1, "  ");

        r2 = $r53;

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $r52 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r51 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayController mDisplayController>;

        staticinvoke <com.android.internal.util.DumpUtils: void dumpAsync(android.os.Handler,com.android.internal.util.DumpUtils$Dump,java.io.PrintWriter,long)>($r52, $r51, r2, 200L);

     label2:
        return;
    }

    public void registerLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.WifiDisplayAdapter$1 $r2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void registerLocked()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void updateRememberedDisplaysLocked()>();

        $r1 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.WifiDisplayAdapter$1;

        specialinvoke $r2.<com.android.server.display.WifiDisplayAdapter$1: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void requestStartScanLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.WifiDisplayAdapter$2 $r2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.WifiDisplayAdapter$2;

        specialinvoke $r2.<com.android.server.display.WifiDisplayAdapter$2: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void requestStopScanLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.WifiDisplayAdapter$3 $r2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.WifiDisplayAdapter$3;

        specialinvoke $r2.<com.android.server.display.WifiDisplayAdapter$3: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void requestConnectLocked(java.lang.String)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.lang.String r1;
        android.os.Handler $r2;
        com.android.server.display.WifiDisplayAdapter$4 $r3;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r3 = new com.android.server.display.WifiDisplayAdapter$4;

        specialinvoke $r3.<com.android.server.display.WifiDisplayAdapter$4: void <init>(com.android.server.display.WifiDisplayAdapter,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void requestPauseLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.WifiDisplayAdapter$5 $r2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.WifiDisplayAdapter$5;

        specialinvoke $r2.<com.android.server.display.WifiDisplayAdapter$5: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void requestResumeLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.WifiDisplayAdapter$6 $r2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.WifiDisplayAdapter$6;

        specialinvoke $r2.<com.android.server.display.WifiDisplayAdapter$6: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void requestDisconnectLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.WifiDisplayAdapter$7 $r2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.WifiDisplayAdapter$7;

        specialinvoke $r2.<com.android.server.display.WifiDisplayAdapter$7: void <init>(com.android.server.display.WifiDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void requestRenameLocked(java.lang.String, java.lang.String)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.lang.String r1, r2, $r7, $r9, $r10, $r12;
        android.hardware.display.WifiDisplay r3, $r5, $r6, $r8, $r11, r15;
        com.android.server.display.PersistentDataStore $r4, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r2 == null goto label2;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label1;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

     label1:
        r2 = null;

     label2:
        $r4 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        r3 = virtualinvoke $r4.<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay getRememberedWifiDisplay(java.lang.String)>(r1);

        if r3 == null goto label3;

        $r10 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

        $z1 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r10, r2);

        if $z1 != 0 goto label3;

        $r11 = new android.hardware.display.WifiDisplay;

        $r12 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>();

        specialinvoke $r11.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>(r1, $r12, r2, 0, 0, 0);

        r15 = $r11;

        $r13 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $z2 = virtualinvoke $r13.<com.android.server.display.PersistentDataStore: boolean rememberWifiDisplay(android.hardware.display.WifiDisplay)>(r15);

        if $z2 == 0 goto label3;

        $r14 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        virtualinvoke $r14.<com.android.server.display.PersistentDataStore: void saveIfNeeded()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void updateRememberedDisplaysLocked()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void scheduleStatusChangedBroadcastLocked()>();

     label3:
        $r5 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        if $r5 == null goto label4;

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        $r7 = virtualinvoke $r6.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r8 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        $r9 = virtualinvoke $r8.<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void renameDisplayDeviceLocked(java.lang.String)>($r9);

     label4:
        return;
    }

    public void requestForgetLocked(java.lang.String)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.lang.String r1, $r5;
        com.android.server.display.PersistentDataStore $r2, $r6;
        boolean $z0, $z1;
        android.hardware.display.WifiDisplay $r3, $r4;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $z0 = virtualinvoke $r2.<com.android.server.display.PersistentDataStore: boolean forgetWifiDisplay(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        virtualinvoke $r6.<com.android.server.display.PersistentDataStore: void saveIfNeeded()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void updateRememberedDisplaysLocked()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void scheduleStatusChangedBroadcastLocked()>();

     label1:
        $r3 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        $r5 = virtualinvoke $r4.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: void requestDisconnectLocked()>();

     label2:
        return;
    }

    public android.hardware.display.WifiDisplayStatus getWifiDisplayStatusLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplayStatus $r1, $r2, $r3;
        android.hardware.display.WifiDisplaySessionInfo $r4;
        android.hardware.display.WifiDisplay[] $r5;
        android.hardware.display.WifiDisplay $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus mCurrentStatus>;

        if $r1 != null goto label1;

        $r3 = new android.hardware.display.WifiDisplayStatus;

        $i2 = r0.<com.android.server.display.WifiDisplayAdapter: int mFeatureState>;

        $i1 = r0.<com.android.server.display.WifiDisplayAdapter: int mScanState>;

        $i0 = r0.<com.android.server.display.WifiDisplayAdapter: int mActiveDisplayState>;

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        $r5 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mDisplays>;

        $r4 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplaySessionInfo mSessionInfo>;

        specialinvoke $r3.<android.hardware.display.WifiDisplayStatus: void <init>(int,int,int,android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplay[],android.hardware.display.WifiDisplaySessionInfo)>($i2, $i1, $i0, $r6, $r5, $r4);

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus mCurrentStatus> = $r3;

     label1:
        $r2 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus mCurrentStatus>;

        return $r2;
    }

    private void updateDisplaysLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.util.ArrayList r1, $r5;
        boolean[] r2;
        android.hardware.display.WifiDisplay[] r3, $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r18, $r22;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.hardware.display.WifiDisplay r4, $r13, $r21, $r23, r25;
        boolean z0, $z1, $z2, $z5;
        java.lang.Object[] $r12;
        java.lang.String $r15, $r16, $r17, $r19, $r20, $r24;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r5 = new java.util.ArrayList;

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $i4 = lengthof $r6;

        $r7 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays>;

        $i3 = lengthof $r7;

        $i5 = $i4 + $i3;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i5);

        r1 = $r5;

        $r8 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $i6 = lengthof $r8;

        r2 = newarray (boolean)[$i6];

        r3 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r4 = r3[i1];

        z0 = 0;

        i2 = 0;

     label2:
        $r18 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $i8 = lengthof $r18;

        if i2 >= $i8 goto label4;

        $r22 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $r23 = $r22[i2];

        $z5 = virtualinvoke r4.<android.hardware.display.WifiDisplay: boolean equals(android.hardware.display.WifiDisplay)>($r23);

        if $z5 == 0 goto label3;

        z0 = 1;

        r2[i2] = 1;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        if z0 != 0 goto label5;

        $r21 = new android.hardware.display.WifiDisplay;

        $r19 = virtualinvoke r4.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $r20 = virtualinvoke r4.<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>();

        $r24 = virtualinvoke r4.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

        specialinvoke $r21.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r19, $r20, $r24, 0, 0, 1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        i9 = 0;

     label7:
        $r9 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $i7 = lengthof $r9;

        if i9 >= $i7 goto label8;

        $r14 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        r25 = $r14[i9];

        $r13 = new android.hardware.display.WifiDisplay;

        $r16 = virtualinvoke r25.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $r15 = virtualinvoke r25.<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>();

        $r17 = virtualinvoke r25.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

        $z2 = virtualinvoke r25.<android.hardware.display.WifiDisplay: boolean canConnect()>();

        $z1 = r2[i9];

        specialinvoke $r13.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r16, $r15, $r17, 1, $z2, $z1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);

        i9 = i9 + 1;

        goto label7;

     label8:
        $r10 = <android.hardware.display.WifiDisplay: android.hardware.display.WifiDisplay[] EMPTY_ARRAY>;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r11 = (android.hardware.display.WifiDisplay[]) $r12;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mDisplays> = $r11;

        return;
    }

    private void updateRememberedDisplaysLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.PersistentDataStore $r1, $r4, $r7;
        android.hardware.display.WifiDisplay[] $r2, $r6, $r8;
        android.hardware.display.WifiDisplay $r3, $r5;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $r2 = virtualinvoke $r1.<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay[] getRememberedWifiDisplays()>();

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays> = $r2;

        $r4 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $r3 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        $r5 = virtualinvoke $r4.<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay applyWifiDisplayAlias(android.hardware.display.WifiDisplay)>($r3);

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay> = $r5;

        $r7 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        $r8 = virtualinvoke $r7.<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay[] applyWifiDisplayAliases(android.hardware.display.WifiDisplay[])>($r6);

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays> = $r8;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void updateDisplaysLocked()>();

        return;
    }

    private void fixRememberedDisplayNamesFromAvailableDisplaysLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        boolean z0, $z1, $z2;
        int i0, $i1;
        android.hardware.display.WifiDisplay r1, r2;
        android.hardware.display.WifiDisplay[] $r3, $r5, $r7;
        com.android.server.display.PersistentDataStore $r4, $r8;
        java.lang.String $r6;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        z0 = 0;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $r5 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays>;

        r1 = $r5[i0];

        $r6 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        r2 = specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay findAvailableDisplayLocked(java.lang.String)>($r6);

        if r2 == null goto label2;

        $z1 = virtualinvoke r1.<android.hardware.display.WifiDisplay: boolean equals(android.hardware.display.WifiDisplay)>(r2);

        if $z1 != 0 goto label2;

        $r7 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mRememberedDisplays>;

        $r7[i0] = r2;

        $r8 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $z2 = virtualinvoke $r8.<com.android.server.display.PersistentDataStore: boolean rememberWifiDisplay(android.hardware.display.WifiDisplay)>(r2);

        z0 = z0 | $z2;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r4 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        virtualinvoke $r4.<com.android.server.display.PersistentDataStore: void saveIfNeeded()>();

     label4:
        return;
    }

    private android.hardware.display.WifiDisplay findAvailableDisplayLocked(java.lang.String)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.lang.String r1, $r4;
        android.hardware.display.WifiDisplay[] r2;
        int i0, i1;
        android.hardware.display.WifiDisplay r3;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r4 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private void addDisplayDeviceLocked(android.hardware.display.WifiDisplay, android.view.Surface, int, int, int)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplay r1;
        android.view.Surface r2;
        int i0, i1, i2, $i4;
        boolean z0, $z1, $z2, $z3;
        byte b3;
        float f0;
        java.lang.String r3, r4;
        android.os.IBinder r5;
        com.android.server.display.PersistentDataStore $r6, $r9;
        com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice $r7, $r8;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        r2 := @parameter1: android.view.Surface;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void removeDisplayDeviceLocked()>();

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        $z1 = virtualinvoke $r6.<com.android.server.display.PersistentDataStore: boolean rememberWifiDisplay(android.hardware.display.WifiDisplay)>(r1);

        if $z1 == 0 goto label1;

        $r9 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        virtualinvoke $r9.<com.android.server.display.PersistentDataStore: void saveIfNeeded()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void updateRememberedDisplaysLocked()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void scheduleStatusChangedBroadcastLocked()>();

     label1:
        $i4 = i2 & 1;

        if $i4 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        b3 = 64;

        if z0 == 0 goto label4;

        b3 = b3 | 4;

        $z3 = r0.<com.android.server.display.WifiDisplayAdapter: boolean mSupportsProtectedBuffers>;

        if $z3 == 0 goto label4;

        b3 = b3 | 8;

     label4:
        f0 = 60.0F;

        r3 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()>();

        r4 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        r5 = staticinvoke <android.view.SurfaceControl: android.os.IBinder createDisplay(java.lang.String,boolean)>(r3, z0);

        $r8 = new com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice;

        specialinvoke $r8.<com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice: void <init>(com.android.server.display.WifiDisplayAdapter,android.os.IBinder,java.lang.String,int,int,float,int,java.lang.String,android.view.Surface)>(r0, r5, r3, i0, i1, f0, b3, r4, r2);

        r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice> = $r8;

        $r7 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: void sendDisplayDeviceEventLocked(com.android.server.display.DisplayDevice,int)>($r7, 1);

        return;
    }

    private void removeDisplayDeviceLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice $r1, $r2, $r3;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        virtualinvoke $r2.<com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice: void destroyLocked()>();

        $r3 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: void sendDisplayDeviceEventLocked(com.android.server.display.DisplayDevice,int)>($r3, 3);

        r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice> = null;

     label1:
        return;
    }

    private void renameDisplayDeviceLocked(java.lang.String)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.lang.String r1, $r4;
        com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice $r2, $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        $r4 = virtualinvoke $r3.<com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice: java.lang.String getNameLocked()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        virtualinvoke $r5.<com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice: void setNameLocked(java.lang.String)>(r1);

        $r6 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice mDisplayDevice>;

        virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: void sendDisplayDeviceEventLocked(com.android.server.display.DisplayDevice,int)>($r6, 2);

     label1:
        return;
    }

    private void scheduleStatusChangedBroadcastLocked()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        boolean $z0;
        com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler $r1;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus mCurrentStatus> = null;

        $z0 = r0.<com.android.server.display.WifiDisplayAdapter: boolean mPendingStatusChangeBroadcast>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.display.WifiDisplayAdapter: boolean mPendingStatusChangeBroadcast> = 1;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler mHandler>;

        virtualinvoke $r1.<com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    private void handleSendStatusChangeBroadcast()
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.content.Intent r1, $r5;
        com.android.server.display.DisplayManagerService$SyncRoot r2, $r4;
        java.lang.Throwable r3, $r11;
        boolean $z0;
        android.hardware.display.WifiDisplayStatus $r7;
        android.content.Context $r9;
        android.os.UserHandle $r10;

        r0 := @this: com.android.server.display.WifiDisplayAdapter;

        $r4 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.DisplayManagerService$SyncRoot getSyncRoot()>();

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<com.android.server.display.WifiDisplayAdapter: boolean mPendingStatusChangeBroadcast>;

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<com.android.server.display.WifiDisplayAdapter: boolean mPendingStatusChangeBroadcast> = 0;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.display.action.WIFI_DISPLAY_STATUS_CHANGED");

        r1 = $r5;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r7 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus getWifiDisplayStatusLocked()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.hardware.display.extra.WIFI_DISPLAY_STATUS", $r7);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r9 = virtualinvoke r0.<com.android.server.display.WifiDisplayAdapter: android.content.Context getContext()>();

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r10);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static com.android.server.display.WifiDisplayController access$002(com.android.server.display.WifiDisplayAdapter, com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.WifiDisplayController r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter1: com.android.server.display.WifiDisplayController;

        r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayController mDisplayController> = r1;

        return r1;
    }

    static com.android.server.display.WifiDisplayController$Listener access$100(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.WifiDisplayController$Listener $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayController$Listener mWifiDisplayListener>;

        return $r1;
    }

    static android.content.BroadcastReceiver access$200(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.content.BroadcastReceiver $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: android.content.BroadcastReceiver mBroadcastReceiver>;

        return $r1;
    }

    static com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler access$300(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler mHandler>;

        return $r1;
    }

    static com.android.server.display.WifiDisplayController access$000(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.WifiDisplayController $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.WifiDisplayController mDisplayController>;

        return $r1;
    }

    static int access$400(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $i0 = r0.<com.android.server.display.WifiDisplayAdapter: int mFeatureState>;

        return $i0;
    }

    static int access$402(com.android.server.display.WifiDisplayAdapter, int)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        int i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        i0 := @parameter1: int;

        r0.<com.android.server.display.WifiDisplayAdapter: int mFeatureState> = i0;

        return i0;
    }

    static void access$500(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void scheduleStatusChangedBroadcastLocked()>();

        return;
    }

    static int access$600(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $i0 = r0.<com.android.server.display.WifiDisplayAdapter: int mScanState>;

        return $i0;
    }

    static int access$602(com.android.server.display.WifiDisplayAdapter, int)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        int i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        i0 := @parameter1: int;

        r0.<com.android.server.display.WifiDisplayAdapter: int mScanState> = i0;

        return i0;
    }

    static com.android.server.display.PersistentDataStore access$700(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        com.android.server.display.PersistentDataStore $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: com.android.server.display.PersistentDataStore mPersistentDataStore>;

        return $r1;
    }

    static android.hardware.display.WifiDisplay[] access$800(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplay[] $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays>;

        return $r1;
    }

    static android.hardware.display.WifiDisplay[] access$802(com.android.server.display.WifiDisplayAdapter, android.hardware.display.WifiDisplay[])
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplay[] r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter1: android.hardware.display.WifiDisplay[];

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay[] mAvailableDisplays> = r1;

        return r1;
    }

    static void access$900(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void fixRememberedDisplayNamesFromAvailableDisplaysLocked()>();

        return;
    }

    static void access$1000(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void updateDisplaysLocked()>();

        return;
    }

    static int access$1100(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $i0 = r0.<com.android.server.display.WifiDisplayAdapter: int mActiveDisplayState>;

        return $i0;
    }

    static android.hardware.display.WifiDisplay access$1200(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplay $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        $r1 = r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay>;

        return $r1;
    }

    static int access$1102(com.android.server.display.WifiDisplayAdapter, int)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        int i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        i0 := @parameter1: int;

        r0.<com.android.server.display.WifiDisplayAdapter: int mActiveDisplayState> = i0;

        return i0;
    }

    static android.hardware.display.WifiDisplay access$1202(com.android.server.display.WifiDisplayAdapter, android.hardware.display.WifiDisplay)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplay r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter1: android.hardware.display.WifiDisplay;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplay mActiveDisplay> = r1;

        return r1;
    }

    static void access$1300(com.android.server.display.WifiDisplayAdapter, android.hardware.display.WifiDisplay, android.view.Surface, int, int, int)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplay r1;
        android.view.Surface r2;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter1: android.hardware.display.WifiDisplay;

        r2 := @parameter2: android.view.Surface;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void addDisplayDeviceLocked(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(r1, r2, i0, i1, i2);

        return;
    }

    static android.hardware.display.WifiDisplaySessionInfo access$1402(com.android.server.display.WifiDisplayAdapter, android.hardware.display.WifiDisplaySessionInfo)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        android.hardware.display.WifiDisplaySessionInfo r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter1: android.hardware.display.WifiDisplaySessionInfo;

        r0.<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplaySessionInfo mSessionInfo> = r1;

        return r1;
    }

    static void access$1500(com.android.server.display.WifiDisplayAdapter, java.lang.String)
    {
        com.android.server.display.WifiDisplayAdapter r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void renameDisplayDeviceLocked(java.lang.String)>(r1);

        return;
    }

    static void access$1600(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void removeDisplayDeviceLocked()>();

        return;
    }

    static void access$1700(com.android.server.display.WifiDisplayAdapter)
    {
        com.android.server.display.WifiDisplayAdapter r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayAdapter;

        specialinvoke r0.<com.android.server.display.WifiDisplayAdapter: void handleSendStatusChangeBroadcast()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.WifiDisplayAdapter: java.lang.String ACTION_DISCONNECT> = "android.server.display.wfd.DISCONNECT";

        <com.android.server.display.WifiDisplayAdapter: int MSG_SEND_STATUS_CHANGE_BROADCAST> = 1;

        <com.android.server.display.WifiDisplayAdapter: boolean DEBUG> = 0;

        <com.android.server.display.WifiDisplayAdapter: java.lang.String TAG> = "WifiDisplayAdapter";

        return;
    }
}
