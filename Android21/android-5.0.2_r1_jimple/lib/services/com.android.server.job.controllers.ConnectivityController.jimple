public class com.android.server.job.controllers.ConnectivityController extends com.android.server.job.controllers.StateController implements android.net.ConnectivityManager$OnNetworkActiveListener
{
    private static final java.lang.String TAG;
    private final java.util.List mTrackedJobs;
    private final android.content.BroadcastReceiver mConnectivityChangedReceiver;
    private static com.android.server.job.controllers.ConnectivityController mSingleton;
    private static java.lang.Object sCreationLock;
    private boolean mNetworkUnmetered;
    private boolean mNetworkConnected;

    public static com.android.server.job.controllers.ConnectivityController get(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.JobSchedulerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        com.android.server.job.controllers.ConnectivityController $r4, $r5, $r6;
        android.content.Context $r7;

        r0 := @parameter0: com.android.server.job.JobSchedulerService;

        $r3 = <com.android.server.job.controllers.ConnectivityController: java.lang.Object sCreationLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.server.job.controllers.ConnectivityController: com.android.server.job.controllers.ConnectivityController mSingleton>;

        if $r4 != null goto label2;

        $r6 = new com.android.server.job.controllers.ConnectivityController;

        $r7 = virtualinvoke r0.<com.android.server.job.JobSchedulerService: android.content.Context getContext()>();

        specialinvoke $r6.<com.android.server.job.controllers.ConnectivityController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r0, $r7);

        <com.android.server.job.controllers.ConnectivityController: com.android.server.job.controllers.ConnectivityController mSingleton> = $r6;

     label2:
        $r5 = <com.android.server.job.controllers.ConnectivityController: com.android.server.job.controllers.ConnectivityController mSingleton>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void <init>(com.android.server.job.StateChangedListener, android.content.Context)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        com.android.server.job.StateChangedListener r1;
        android.content.Context r2, $r10;
        android.content.IntentFilter r3, $r7;
        com.android.server.ConnectivityService r4;
        java.util.LinkedList $r5;
        com.android.server.job.controllers.ConnectivityController$ConnectivityChangedReceiver $r6;
        android.os.UserHandle $r8;
        android.content.BroadcastReceiver $r9;
        android.os.IBinder $r12;
        android.net.NetworkInfo $r13, $r14;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.job.controllers.ConnectivityController;

        r1 := @parameter0: com.android.server.job.StateChangedListener;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r1, r2);

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs> = $r5;

        $r6 = new com.android.server.job.controllers.ConnectivityController$ConnectivityChangedReceiver;

        specialinvoke $r6.<com.android.server.job.controllers.ConnectivityController$ConnectivityChangedReceiver: void <init>(com.android.server.job.controllers.ConnectivityController)>(r0);

        r0.<com.android.server.job.controllers.ConnectivityController: android.content.BroadcastReceiver mConnectivityChangedReceiver> = $r6;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r10 = r0.<com.android.server.job.controllers.ConnectivityController: android.content.Context mContext>;

        $r9 = r0.<com.android.server.job.controllers.ConnectivityController: android.content.BroadcastReceiver mConnectivityChangedReceiver>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r10.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r9, $r8, r3, null, null);

        $r12 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("connectivity");

        r4 = (com.android.server.ConnectivityService) $r12;

        if r4 == null goto label4;

        $r13 = virtualinvoke r4.<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r13 == null goto label1;

        $r14 = virtualinvoke r4.<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>();

        $z3 = virtualinvoke $r14.<android.net.NetworkInfo: boolean isConnected()>();

        r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected> = $z3;

     label1:
        $z0 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r4.<com.android.server.ConnectivityService: boolean isActiveNetworkMetered()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkUnmetered> = $z2;

     label4:
        return;
    }

    public void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        com.android.server.job.controllers.JobStatus r1;
        java.util.List r2, $r4, $r7;
        java.lang.Throwable r3, $r8;
        boolean $z0, $z1, $z2, $z4;
        java.util.concurrent.atomic.AtomicBoolean $r5, $r6;

        r0 := @this: com.android.server.job.controllers.ConnectivityController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasConnectivityConstraint()>();

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasUnmeteredConstraint()>();

        if $z4 == 0 goto label6;

     label1:
        $r4 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r1.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean connectivityConstraintSatisfied>;

        $z1 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>($z1);

        $r6 = r1.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean unmeteredConstraintSatisfied>;

        $z2 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkUnmetered>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>($z2);

        $r7 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        com.android.server.job.controllers.JobStatus r1;
        java.util.List r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        boolean $z0, $z2;

        r0 := @this: com.android.server.job.controllers.ConnectivityController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasConnectivityConstraint()>();

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasUnmeteredConstraint()>();

        if $z2 == 0 goto label6;

     label1:
        $r4 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void updateTrackedJobs(int)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        int i0, $i1;
        java.util.List r1, $r5, $r6;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Iterator r2;
        com.android.server.job.controllers.JobStatus r3;
        java.lang.Throwable r4, $r11;
        com.android.server.job.StateChangedListener $r7;
        java.lang.Object $r8;
        java.util.concurrent.atomic.AtomicBoolean $r9, $r10;

        r0 := @this: com.android.server.job.controllers.ConnectivityController;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        z0 = 0;

        $r6 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.job.controllers.JobStatus) $r8;

        $i1 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: int getUserId()>();

        if $i1 == i0 goto label03;

        goto label02;

     label03:
        $r9 = r3.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean connectivityConstraintSatisfied>;

        $z4 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected>;

        z1 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>($z4);

        $r10 = r3.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean unmeteredConstraintSatisfied>;

        $z5 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkUnmetered>;

        z2 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>($z5);

        $z6 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected>;

        if z1 != $z6 goto label04;

        $z7 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkUnmetered>;

        if z2 == $z7 goto label05;

     label04:
        z0 = 1;

     label05:
        goto label02;

     label06:
        if z0 == 0 goto label07;

        $r7 = r0.<com.android.server.job.controllers.ConnectivityController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r7.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r1;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public synchronized void onNetworkActive()
    {
        com.android.server.job.controllers.ConnectivityController r0;
        java.util.List r1, $r5, $r6;
        java.util.Iterator r2;
        com.android.server.job.controllers.JobStatus r3;
        java.lang.Throwable r4, $r9;
        boolean $z0, $z1;
        java.lang.Object $r7;
        com.android.server.job.StateChangedListener $r8;

        r0 := @this: com.android.server.job.controllers.ConnectivityController;

        $r5 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.job.controllers.JobStatus) $r7;

        $z1 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: boolean isReady()>();

        if $z1 == 0 goto label3;

        $r8 = r0.<com.android.server.job.controllers.ConnectivityController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r8.<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>(r3);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r1;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void dumpControllerState(java.io.PrintWriter)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        com.android.server.job.controllers.JobStatus r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r12, $r15, $r16, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r9, $r13, $r14, $r21;
        java.util.List $r10;
        java.lang.Object $r11;
        int $i0;

        r0 := @this: com.android.server.job.controllers.ConnectivityController;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Conn.");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connected: ");

        $z0 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unmetered: ");

        $z1 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkUnmetered>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.job.controllers.ConnectivityController: java.util.List mTrackedJobs>;

        r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.job.controllers.JobStatus) $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r13 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": C=");

        $z3 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: boolean hasConnectivityConstraint()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", UM=");

        $z4 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: boolean hasUnmeteredConstraint()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        goto label1;

     label2:
        return;
    }

    static boolean access$002(com.android.server.job.controllers.ConnectivityController, boolean)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.job.controllers.ConnectivityController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkUnmetered> = z0;

        return z0;
    }

    static boolean access$102(com.android.server.job.controllers.ConnectivityController, boolean)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.job.controllers.ConnectivityController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected> = z0;

        return z0;
    }

    static void access$200(com.android.server.job.controllers.ConnectivityController, int)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        int i0;

        r0 := @parameter0: com.android.server.job.controllers.ConnectivityController;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.job.controllers.ConnectivityController: void updateTrackedJobs(int)>(i0);

        return;
    }

    static boolean access$100(com.android.server.job.controllers.ConnectivityController)
    {
        com.android.server.job.controllers.ConnectivityController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.job.controllers.ConnectivityController;

        $z0 = r0.<com.android.server.job.controllers.ConnectivityController: boolean mNetworkConnected>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.server.job.controllers.ConnectivityController: java.lang.String TAG> = "JobScheduler.Conn";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.server.job.controllers.ConnectivityController: java.lang.Object sCreationLock> = $r0;

        return;
    }
}
