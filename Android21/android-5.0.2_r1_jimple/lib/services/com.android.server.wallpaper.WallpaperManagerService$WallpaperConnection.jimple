class com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection extends android.service.wallpaper.IWallpaperConnection$Stub implements android.content.ServiceConnection
{
    final android.app.WallpaperInfo mInfo;
    final android.os.Binder mToken;
    android.service.wallpaper.IWallpaperService mService;
    android.service.wallpaper.IWallpaperEngine mEngine;
    com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper;
    android.os.IRemoteCallback mReply;
    boolean mDimensionsChanged;
    boolean mPaddingChanged;
    final com.android.server.wallpaper.WallpaperManagerService this$0;

    public void <init>(com.android.server.wallpaper.WallpaperManagerService, android.app.WallpaperInfo, com.android.server.wallpaper.WallpaperManagerService$WallpaperData)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        com.android.server.wallpaper.WallpaperManagerService r1;
        android.app.WallpaperInfo r2;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r3;
        android.os.Binder $r4;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService;

        r2 := @parameter1: android.app.WallpaperInfo;

        r3 := @parameter2: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.IWallpaperConnection$Stub: void <init>()>();

        $r4 = new android.os.Binder;

        specialinvoke $r4.<android.os.Binder: void <init>()>();

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.Binder mToken> = $r4;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean mDimensionsChanged> = 0;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean mPaddingChanged> = 0;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.app.WallpaperInfo mInfo> = r2;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper> = r3;

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r8;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r14;
        com.android.server.wallpaper.WallpaperManagerService $r5, $r11, $r13;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r7, $r10, $r12;
        android.service.wallpaper.IWallpaperService $r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r8 = $r7.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if $r8 != r0 goto label2;

        $r9 = staticinvoke <android.service.wallpaper.IWallpaperService$Stub: android.service.wallpaper.IWallpaperService asInterface(android.os.IBinder)>(r2);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService> = $r9;

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        virtualinvoke $r11.<com.android.server.wallpaper.WallpaperManagerService: void attachServiceLocked(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>(r0, $r10);

        $r13 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$200(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>($r13, $r12);

     label2:
        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r7;
        android.content.ComponentName r1, $r11;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r22;
        com.android.server.wallpaper.WallpaperManagerService $r4, $r16, $r21;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r6, $r10, $r14, $r15, $r17, $r18, $r19, $r20;
        java.lang.StringBuilder $r8, $r9, $r12;
        java.lang.String $r13;
        boolean $z0;
        int $i1, $i2, $i9;
        byte $b3, $b10;
        long $l4, $l5, $l6, $l7, $l8;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.content.ComponentName;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = $r4.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService> = null;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine> = null;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7 = $r6.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if $r7 != r0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wallpaper service gone: ");

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r11 = $r10.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", $r13);

        $r14 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $z0 = $r14.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z0 != 0 goto label3;

        $r15 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i2 = $r15.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        $r16 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = $r16.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        if $i2 != $i1 goto label3;

        $r17 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l4 = $r17.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime>;

        $b3 = $l4 cmp 0L;

        if $b3 == 0 goto label2;

        $r19 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l6 = $r19.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime>;

        $l8 = $l6 + 10000L;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b10 = $l8 cmp $l7;

        if $b10 <= 0 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", "Reverting to built-in wallpaper!");

        $r21 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r20 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i9 = $r20.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r21.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,android.os.IRemoteCallback)>(1, $i9, null);

        goto label3;

     label2:
        $r18 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r18.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime> = $l5;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r22 := @caughtexception;

        r3 = $r22;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void attachEngine(android.service.wallpaper.IWallpaperEngine)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        android.service.wallpaper.IWallpaperEngine r1, $r9, $r12;
        java.lang.Object r2, $r6;
        android.os.RemoteException r3, $r13, $r15, r16;
        java.lang.Throwable r4, $r14;
        com.android.server.wallpaper.WallpaperManagerService $r5;
        boolean $z0, $z1;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r7, $r10, $r11;
        android.graphics.Rect $r8;
        int $i0, $i1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine> = r1;

        $z0 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean mDimensionsChanged>;

        if $z0 == 0 goto label06;

     label02:
        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine>;

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i1 = $r10.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int width>;

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i0 = $r11.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int height>;

        interfaceinvoke $r12.<android.service.wallpaper.IWallpaperEngine: void setDesiredSize(int,int)>($i1, $i0);

     label03:
        goto label05;

     label04:
        $r13 := @caughtexception;

        r3 = $r13;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to set wallpaper dimensions", r3);

     label05:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean mDimensionsChanged> = 0;

     label06:
        $z1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean mPaddingChanged>;

        if $z1 == 0 goto label11;

     label07:
        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine>;

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r8 = $r7.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.graphics.Rect padding>;

        interfaceinvoke $r9.<android.service.wallpaper.IWallpaperEngine: void setDisplayPadding(android.graphics.Rect)>($r8);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        r16 = $r15;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to set wallpaper padding", r16);

     label10:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean mPaddingChanged> = 0;

     label11:
        exitmonitor r2;

     label12:
        goto label15;

     label13:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label14:
        throw r4;

     label15:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void engineShown(android.service.wallpaper.IWallpaperEngine)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        android.service.wallpaper.IWallpaperEngine r1;
        java.lang.Object r2, $r6;
        long l0;
        java.lang.Throwable r4, $r9;
        com.android.server.wallpaper.WallpaperManagerService $r5;
        android.os.IRemoteCallback $r7, $r8;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply>;

        if $r7 == null goto label06;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply>;

        interfaceinvoke $r8.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label05:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply> = null;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.os.ParcelFileDescriptor setWallpaper(java.lang.String)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r7;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r11;
        com.android.server.wallpaper.WallpaperManagerService $r4, $r9;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r6, $r8;
        android.os.ParcelFileDescriptor $r10;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = $r4.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7 = $r6.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if $r7 != r0 goto label3;

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r10 = virtualinvoke $r9.<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>(r1, $r8);

        exitmonitor r2;

     label2:
        return $r10;

     label3:
        exitmonitor r2;

     label4:
        return null;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
