final class com.android.server.firewall.PortFilter$1 extends com.android.server.firewall.FilterFactory
{

    void <init>(java.lang.String)
    {
        com.android.server.firewall.PortFilter$1 r0;
        java.lang.String r1;

        r0 := @this: com.android.server.firewall.PortFilter$1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>(r1);

        return;
    }

    public com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.firewall.PortFilter$1 r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2;
        java.lang.String r2, $r11, $r17, $r24, r25, r26;
        com.android.server.firewall.PortFilter $r5;
        org.xmlpull.v1.XmlPullParserException $r6, $r7, $r13, $r19;
        java.lang.NumberFormatException $r8, $r14, $r20;
        java.lang.StringBuilder $r9, $r10, $r12, $r15, $r16, $r18, $r21, $r22, $r23;

        r0 := @this: com.android.server.firewall.PortFilter$1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = -1;

        i1 = -1;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "equals");

        if r2 == null goto label05;

     label01:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

        $r13 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid port value: ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r17, r1, null);

        throw $r13;

     label04:
        i0 = i2;

        i1 = i2;

     label05:
        r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min");

        r26 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max");

        if r25 != null goto label06;

        if r26 == null goto label15;

     label06:
        if r2 == null goto label07;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("Port filter cannot use both equals and range filtering", r1, null);

        throw $r6;

     label07:
        if r25 == null goto label11;

     label08:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r25);

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid minimum port value: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r11, r1, null);

        throw $r7;

     label11:
        if r26 == null goto label15;

     label12:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r26);

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid maximum port value: ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r24, r1, null);

        throw $r19;

     label15:
        $r5 = new com.android.server.firewall.PortFilter;

        specialinvoke $r5.<com.android.server.firewall.PortFilter: void <init>(int,int,com.android.server.firewall.PortFilter$1)>(i0, i1, null);

        return $r5;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch java.lang.NumberFormatException from label12 to label13 with label14;
    }
}
