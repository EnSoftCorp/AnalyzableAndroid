final class com.android.server.twilight.TwilightService$LocationHandler extends android.os.Handler
{
    private static final int MSG_ENABLE_LOCATION_UPDATES;
    private static final int MSG_GET_NEW_LOCATION_UPDATE;
    private static final int MSG_PROCESS_NEW_LOCATION;
    private static final int MSG_DO_TWILIGHT_UPDATE;
    private static final long LOCATION_UPDATE_MS;
    private static final long MIN_LOCATION_UPDATE_MS;
    private static final float LOCATION_UPDATE_DISTANCE_METER;
    private static final long LOCATION_UPDATE_ENABLE_INTERVAL_MIN;
    private static final long LOCATION_UPDATE_ENABLE_INTERVAL_MAX;
    private static final double FACTOR_GMT_OFFSET_LONGITUDE;
    private boolean mPassiveListenerEnabled;
    private boolean mNetworkListenerEnabled;
    private boolean mDidFirstInit;
    private long mLastNetworkRegisterTime;
    private long mLastUpdateInterval;
    private android.location.Location mLocation;
    private final com.android.server.TwilightCalculator mTwilightCalculator;
    final com.android.server.twilight.TwilightService this$0;

    private void <init>(com.android.server.twilight.TwilightService)
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        com.android.server.twilight.TwilightService r1;
        com.android.server.TwilightCalculator $r2;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        r1 := @parameter0: com.android.server.twilight.TwilightService;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastNetworkRegisterTime> = -1800000L;

        $r2 = new com.android.server.TwilightCalculator;

        specialinvoke $r2.<com.android.server.TwilightCalculator: void <init>()>();

        r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator> = $r2;

        return;
    }

    public void processNewLocation(android.location.Location)
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        android.location.Location r1;
        android.os.Message r2;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        r1 := @parameter0: android.location.Location;

        r2 = virtualinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r1);

        virtualinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void enableLocationUpdates()
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        virtualinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    public void requestLocationUpdate()
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        virtualinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean sendEmptyMessage(int)>(2);

        return;
    }

    public void requestTwilightUpdate()
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        virtualinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        android.os.Message r1;
        android.location.Location r2, $r4, $r5, $r6, $r25;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, z10, z11;
        int $i0;
        java.lang.Object $r3;
        float $f0, $f1;
        byte $b1, $b4, $b7, $b11;
        long $l2, $l3, $l5, $l6, $l8, $l9, $l10, $l12, $l13;
        com.android.server.twilight.TwilightService $r7, $r8, $r12, $r14, $r16, $r17, $r20, $r21;
        android.location.LocationListener $r9, $r18, $r22;
        android.location.LocationManager $r10, $r11, $r13, $r15, $r19;
        double $d0, $d1;
        java.lang.Exception $r23, $r24;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label09;
            case 2: goto label06;
            case 3: goto label01;
            case 4: goto label21;
            default: goto label22;
        };

     label01:
        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.location.Location) $r3;

        $r4 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        z0 = staticinvoke <com.android.server.twilight.TwilightService: boolean access$100(android.location.Location,android.location.Location)>($r4, r2);

        $r5 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        if $r5 == null goto label02;

        $f0 = virtualinvoke r2.<android.location.Location: float getAccuracy()>();

        $r6 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $f1 = virtualinvoke $r6.<android.location.Location: float getAccuracy()>();

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z1 = $z2;

        if z0 != 0 goto label05;

        if z1 == 0 goto label22;

     label05:
        specialinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: void setLocation(android.location.Location)>(r2);

        goto label22;

     label06:
        $z3 = r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mNetworkListenerEnabled>;

        if $z3 != 0 goto label07;

        return;

     label07:
        $l3 = r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastNetworkRegisterTime>;

        $l2 = $l3 + 1800000L;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b4 = $l2 cmp $l5;

        if $b4 < 0 goto label08;

        return;

     label08:
        r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mNetworkListenerEnabled> = 0;

        $r8 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r10 = $r8.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r7 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r9 = staticinvoke <com.android.server.twilight.TwilightService: android.location.LocationListener access$200(com.android.server.twilight.TwilightService)>($r7);

        virtualinvoke $r10.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>($r9);

     label09:
        $r12 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r11 = $r12.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        z10 = virtualinvoke $r11.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>("network");

     label10:
        goto label12;

     label11:
        $r24 := @caughtexception;

        z10 = 0;

     label12:
        $z4 = r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mNetworkListenerEnabled>;

        if $z4 != 0 goto label13;

        if z10 == 0 goto label13;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mNetworkListenerEnabled> = 1;

        $l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastNetworkRegisterTime> = $l13;

        $r21 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r19 = $r21.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r20 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r22 = staticinvoke <com.android.server.twilight.TwilightService: android.location.LocationListener access$200(com.android.server.twilight.TwilightService)>($r20);

        virtualinvoke $r19.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>("network", 86400000L, 0.0F, $r22);

        $z9 = r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mDidFirstInit>;

        if $z9 != 0 goto label13;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mDidFirstInit> = 1;

        $r25 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        if $r25 != null goto label13;

        specialinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: void retrieveLocation()>();

     label13:
        $r14 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r13 = $r14.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        z11 = virtualinvoke $r13.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>("passive");

     label14:
        goto label16;

     label15:
        $r23 := @caughtexception;

        z11 = 0;

     label16:
        $z5 = r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mPassiveListenerEnabled>;

        if $z5 != 0 goto label17;

        if z11 == 0 goto label17;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mPassiveListenerEnabled> = 1;

        $r16 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r15 = $r16.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r17 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r18 = staticinvoke <com.android.server.twilight.TwilightService: android.location.LocationListener access$300(com.android.server.twilight.TwilightService)>($r17);

        virtualinvoke $r15.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>("passive", 0L, 20000.0F, $r18);

     label17:
        $z6 = r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mNetworkListenerEnabled>;

        if $z6 == 0 goto label18;

        $z8 = r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean mPassiveListenerEnabled>;

        if $z8 != 0 goto label22;

     label18:
        $l6 = r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval>;

        $d0 = (double) $l6;

        $d1 = $d0 * 1.5;

        $l9 = (long) $d1;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval> = $l9;

        $l10 = r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval>;

        $b7 = $l10 cmp 0L;

        if $b7 != 0 goto label19;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval> = 5000L;

        goto label20;

     label19:
        $l8 = r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval>;

        $b11 = $l8 cmp 900000L;

        if $b11 <= 0 goto label20;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval> = 900000L;

     label20:
        $l12 = r0.<com.android.server.twilight.TwilightService$LocationHandler: long mLastUpdateInterval>;

        virtualinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: boolean sendEmptyMessageDelayed(int,long)>(1, $l12);

        goto label22;

     label21:
        specialinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: void updateTwilightState()>();

     label22:
        return;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    private void retrieveLocation()
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        android.location.Location r1, r3, $r9;
        java.util.Iterator r2;
        double d0, $d1;
        com.android.server.twilight.TwilightService $r4, $r10;
        android.location.Criteria $r5;
        android.location.LocationManager $r6, $r12;
        java.util.List $r7;
        boolean $z0;
        android.text.format.Time $r8, r14;
        long $l0, $l2, $l3, $l4, $l5, $l6, $l8, $l9;
        int $i1;
        short $s7;
        java.lang.Object $r11;
        java.lang.String $r13;
        byte $b10;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        r1 = null;

        $r4 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r6 = $r4.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r5 = new android.location.Criteria;

        specialinvoke $r5.<android.location.Criteria: void <init>()>();

        $r7 = virtualinvoke $r6.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r5, 1);

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r12 = $r10.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.String) $r11;

        r3 = virtualinvoke $r12.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r13);

        if r1 == null goto label2;

        if r3 == null goto label3;

        $l9 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l8 = virtualinvoke r3.<android.location.Location: long getElapsedRealtimeNanos()>();

        $b10 = $l9 cmp $l8;

        if $b10 >= 0 goto label3;

     label2:
        r1 = r3;

     label3:
        goto label1;

     label4:
        if r1 != null goto label7;

        $r8 = new android.text.format.Time;

        specialinvoke $r8.<android.text.format.Time: void <init>()>();

        r14 = $r8;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r14.<android.text.format.Time: void set(long)>($l0);

        $l4 = r14.<android.text.format.Time: long gmtoff>;

        $i1 = r14.<android.text.format.Time: int isDst>;

        if $i1 <= 0 goto label5;

        $s7 = 3600;

        goto label6;

     label5:
        $s7 = 0;

     label6:
        $l2 = (long) $s7;

        $l3 = $l4 - $l2;

        $d1 = (double) $l3;

        d0 = 0.004166666666666667 * $d1;

        $r9 = new android.location.Location;

        specialinvoke $r9.<android.location.Location: void <init>(java.lang.String)>("fake");

        r1 = $r9;

        virtualinvoke r1.<android.location.Location: void setLongitude(double)>(d0);

        virtualinvoke r1.<android.location.Location: void setLatitude(double)>(0.0);

        virtualinvoke r1.<android.location.Location: void setAccuracy(float)>(417000.0F);

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r1.<android.location.Location: void setTime(long)>($l6);

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        virtualinvoke r1.<android.location.Location: void setElapsedRealtimeNanos(long)>($l5);

     label7:
        specialinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: void setLocation(android.location.Location)>(r1);

        return;
    }

    private void setLocation(android.location.Location)
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        android.location.Location r1;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        r1 := @parameter0: android.location.Location;

        r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation> = r1;

        specialinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: void updateTwilightState()>();

        return;
    }

    private void updateTwilightState()
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        long l0, l1, l2, l3, l4, l5, $l6, $l8, l13, l14;
        boolean z0, $z1;
        com.android.server.twilight.TwilightState r1, $r18;
        android.content.Intent r2, $r23;
        android.location.Location $r3, $r5, $r7, $r10, $r11, $r14, $r16;
        android.app.PendingIntent r4;
        com.android.server.TwilightCalculator $r6, $r8, $r9, $r12, $r13, $r15, $r17, $r20;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        int $i7;
        com.android.server.twilight.TwilightService $r19, $r21, $r24, $r26, $r28;
        android.content.Context $r22;
        byte $b9, $b10, $b11, $b12;
        android.app.AlarmManager $r25, $r27;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        $r3 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        if $r3 != null goto label1;

        $r28 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        staticinvoke <com.android.server.twilight.TwilightService: void access$400(com.android.server.twilight.TwilightService,com.android.server.twilight.TwilightState)>($r28, null);

        return;

     label1:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        $l6 = l0 - 86400000L;

        $r5 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $d0 = virtualinvoke $r5.<android.location.Location: double getLatitude()>();

        $r7 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $d1 = virtualinvoke $r7.<android.location.Location: double getLongitude()>();

        virtualinvoke $r6.<com.android.server.TwilightCalculator: void calculateTwilight(long,double,double)>($l6, $d0, $d1);

        $r8 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        l1 = $r8.<com.android.server.TwilightCalculator: long mSunset>;

        $r9 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        $r10 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $d2 = virtualinvoke $r10.<android.location.Location: double getLatitude()>();

        $r11 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $d3 = virtualinvoke $r11.<android.location.Location: double getLongitude()>();

        virtualinvoke $r9.<com.android.server.TwilightCalculator: void calculateTwilight(long,double,double)>(l0, $d2, $d3);

        $r12 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        $i7 = $r12.<com.android.server.TwilightCalculator: int mState>;

        if $i7 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        $r15 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        l2 = $r15.<com.android.server.TwilightCalculator: long mSunrise>;

        $r13 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        l3 = $r13.<com.android.server.TwilightCalculator: long mSunset>;

        $r17 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        $l8 = l0 + 86400000L;

        $r14 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $d4 = virtualinvoke $r14.<android.location.Location: double getLatitude()>();

        $r16 = r0.<com.android.server.twilight.TwilightService$LocationHandler: android.location.Location mLocation>;

        $d5 = virtualinvoke $r16.<android.location.Location: double getLongitude()>();

        virtualinvoke $r17.<com.android.server.TwilightCalculator: void calculateTwilight(long,double,double)>($l8, $d4, $d5);

        $r20 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.TwilightCalculator mTwilightCalculator>;

        l4 = $r20.<com.android.server.TwilightCalculator: long mSunrise>;

        $r18 = new com.android.server.twilight.TwilightState;

        specialinvoke $r18.<com.android.server.twilight.TwilightState: void <init>(boolean,long,long,long,long)>(z0, l1, l2, l3, l4);

        r1 = $r18;

        $r19 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        staticinvoke <com.android.server.twilight.TwilightService: void access$400(com.android.server.twilight.TwilightService,com.android.server.twilight.TwilightState)>($r19, r1);

        l5 = 0L;

        $b9 = l2 cmp -1L;

        if $b9 == 0 goto label4;

        $b12 = l3 cmp -1L;

        if $b12 != 0 goto label5;

     label4:
        l13 = l0 + 43200000L;

        goto label8;

     label5:
        l14 = l5 + 60000L;

        $b11 = l0 cmp l3;

        if $b11 <= 0 goto label6;

        l13 = l14 + l4;

        goto label8;

     label6:
        $b10 = l0 cmp l2;

        if $b10 <= 0 goto label7;

        l13 = l14 + l3;

        goto label8;

     label7:
        l13 = l14 + l2;

     label8:
        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.action.UPDATE_TWILIGHT_STATE");

        r2 = $r23;

        $r21 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r22 = virtualinvoke $r21.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        r4 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r22, 0, r2, 0);

        $r26 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r25 = $r26.<com.android.server.twilight.TwilightService: android.app.AlarmManager mAlarmManager>;

        virtualinvoke $r25.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r4);

        $r24 = r0.<com.android.server.twilight.TwilightService$LocationHandler: com.android.server.twilight.TwilightService this$0>;

        $r27 = $r24.<com.android.server.twilight.TwilightService: android.app.AlarmManager mAlarmManager>;

        virtualinvoke $r27.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(1, l13, r4);

        return;
    }

    void <init>(com.android.server.twilight.TwilightService, com.android.server.twilight.TwilightService$1)
    {
        com.android.server.twilight.TwilightService$LocationHandler r0;
        com.android.server.twilight.TwilightService r1;
        com.android.server.twilight.TwilightService$1 r2;

        r0 := @this: com.android.server.twilight.TwilightService$LocationHandler;

        r1 := @parameter0: com.android.server.twilight.TwilightService;

        r2 := @parameter1: com.android.server.twilight.TwilightService$1;

        specialinvoke r0.<com.android.server.twilight.TwilightService$LocationHandler: void <init>(com.android.server.twilight.TwilightService)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.twilight.TwilightService$LocationHandler: double FACTOR_GMT_OFFSET_LONGITUDE> = 0.004166666666666667;

        <com.android.server.twilight.TwilightService$LocationHandler: long LOCATION_UPDATE_ENABLE_INTERVAL_MAX> = 900000L;

        <com.android.server.twilight.TwilightService$LocationHandler: long LOCATION_UPDATE_ENABLE_INTERVAL_MIN> = 5000L;

        <com.android.server.twilight.TwilightService$LocationHandler: float LOCATION_UPDATE_DISTANCE_METER> = 20000.0F;

        <com.android.server.twilight.TwilightService$LocationHandler: long MIN_LOCATION_UPDATE_MS> = 1800000L;

        <com.android.server.twilight.TwilightService$LocationHandler: long LOCATION_UPDATE_MS> = 86400000L;

        <com.android.server.twilight.TwilightService$LocationHandler: int MSG_DO_TWILIGHT_UPDATE> = 4;

        <com.android.server.twilight.TwilightService$LocationHandler: int MSG_PROCESS_NEW_LOCATION> = 3;

        <com.android.server.twilight.TwilightService$LocationHandler: int MSG_GET_NEW_LOCATION_UPDATE> = 2;

        <com.android.server.twilight.TwilightService$LocationHandler: int MSG_ENABLE_LOCATION_UPDATES> = 1;

        return;
    }
}
