final class com.android.server.LocationManagerService$Receiver extends java.lang.Object implements android.os.IBinder$DeathRecipient, android.app.PendingIntent$OnFinished
{
    final int mUid;
    final int mPid;
    final java.lang.String mPackageName;
    final int mAllowedResolutionLevel;
    final android.location.ILocationListener mListener;
    final android.app.PendingIntent mPendingIntent;
    final android.os.WorkSource mWorkSource;
    final boolean mHideFromAppOps;
    final java.lang.Object mKey;
    final java.util.HashMap mUpdateRecords;
    boolean mOpMonitoring;
    boolean mOpHighPowerMonitoring;
    int mPendingBroadcasts;
    android.os.PowerManager$WakeLock mWakeLock;
    final com.android.server.LocationManagerService this$0;

    void <init>(com.android.server.LocationManagerService, android.location.ILocationListener, android.app.PendingIntent, int, int, java.lang.String, android.os.WorkSource, boolean)
    {
        com.android.server.LocationManagerService$Receiver r0;
        com.android.server.LocationManagerService r1;
        android.location.ILocationListener r2;
        android.app.PendingIntent r3;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r4, $r11;
        android.os.WorkSource r5, $r10;
        boolean z0;
        java.util.HashMap $r6;
        android.os.PowerManager $r7;
        android.os.PowerManager$WakeLock $r8, $r9;
        android.os.IBinder $r12;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        r1 := @parameter0: com.android.server.LocationManagerService;

        r2 := @parameter1: android.location.ILocationListener;

        r3 := @parameter2: android.app.PendingIntent;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: android.os.WorkSource;

        z0 := @parameter7: boolean;

        r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords> = $r6;

        r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener> = r2;

        r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent> = r3;

        if r2 == null goto label1;

        $r12 = interfaceinvoke r2.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey> = $r12;

        goto label2;

     label1:
        r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey> = r3;

     label2:
        $i2 = staticinvoke <com.android.server.LocationManagerService: int access$600(com.android.server.LocationManagerService,int,int)>(r1, i0, i1);

        r0.<com.android.server.LocationManagerService$Receiver: int mAllowedResolutionLevel> = $i2;

        r0.<com.android.server.LocationManagerService$Receiver: int mUid> = i1;

        r0.<com.android.server.LocationManagerService$Receiver: int mPid> = i0;

        r0.<com.android.server.LocationManagerService$Receiver: java.lang.String mPackageName> = r4;

        if r5 == null goto label3;

        $i3 = virtualinvoke r5.<android.os.WorkSource: int size()>();

        if $i3 > 0 goto label3;

        r5 = null;

     label3:
        r0.<com.android.server.LocationManagerService$Receiver: android.os.WorkSource mWorkSource> = r5;

        r0.<com.android.server.LocationManagerService$Receiver: boolean mHideFromAppOps> = z0;

        virtualinvoke r0.<com.android.server.LocationManagerService$Receiver: void updateMonitoring(boolean)>(1);

        $r7 = staticinvoke <com.android.server.LocationManagerService: android.os.PowerManager access$700(com.android.server.LocationManagerService)>(r1);

        $r8 = virtualinvoke $r7.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "LocationManagerService");

        r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock> = $r8;

        if r5 != null goto label4;

        $r10 = new android.os.WorkSource;

        $i4 = r0.<com.android.server.LocationManagerService$Receiver: int mUid>;

        $r11 = r0.<com.android.server.LocationManagerService$Receiver: java.lang.String mPackageName>;

        specialinvoke $r10.<android.os.WorkSource: void <init>(int,java.lang.String)>($i4, $r11);

        r5 = $r10;

     label4:
        $r9 = r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r9.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(r5);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.LocationManagerService$Receiver r0, $r2;
        java.lang.Object r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.server.LocationManagerService$Receiver;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $r2 = (com.android.server.LocationManagerService$Receiver) r1;

        $r3 = $r2.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        com.android.server.LocationManagerService$Receiver r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.server.LocationManagerService$Receiver r0;
        java.lang.StringBuilder r1, $r4, $r16;
        java.util.Iterator r2;
        java.lang.String r3, $r6, $r14, $r20;
        int $i0;
        android.location.ILocationListener $r8;
        java.util.HashMap $r10, $r15;
        java.util.Set $r11;
        boolean $z0;
        java.lang.Object $r13, $r18;
        com.android.server.LocationManagerService$UpdateRecord $r17;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reciever[");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r8 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" listener");

        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intent");

     label2:
        $r10 = r0.<com.android.server.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r13;

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = r0.<com.android.server.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r18 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r17 = (com.android.server.LocationManagerService$UpdateRecord) $r18;

        $r20 = virtualinvoke $r17.<com.android.server.LocationManagerService$UpdateRecord: java.lang.String toString()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public void updateMonitoring(boolean)
    {
        com.android.server.LocationManagerService$Receiver r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        java.util.Iterator r1;
        com.android.server.LocationManagerService$UpdateRecord r2;
        com.android.server.location.LocationProviderInterface r3;
        com.android.internal.location.ProviderProperties r4, $r19;
        android.content.Intent $r5, r20;
        com.android.server.LocationManagerService $r6, $r13, $r15;
        android.os.UserHandle $r7;
        android.content.Context $r8;
        java.util.Collection $r9;
        java.util.HashMap $r10, $r14;
        java.lang.String $r11, $r17;
        java.lang.Object $r12, $r16;
        android.location.LocationRequest $r18;
        int $i0;
        long $l1;
        byte $b2;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        z0 := @parameter0: boolean;

        $z3 = r0.<com.android.server.LocationManagerService$Receiver: boolean mHideFromAppOps>;

        if $z3 == 0 goto label1;

        return;

     label1:
        z1 = 0;

        z2 = 0;

        if z0 == 0 goto label6;

        $r10 = r0.<com.android.server.LocationManagerService$Receiver: java.util.HashMap mUpdateRecords>;

        $r9 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z9 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label6;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.LocationManagerService$UpdateRecord) $r12;

        $r13 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r11 = r2.<com.android.server.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        $z10 = staticinvoke <com.android.server.LocationManagerService: boolean access$800(com.android.server.LocationManagerService,java.lang.String)>($r13, $r11);

        if $z10 == 0 goto label5;

        z1 = 1;

        $r15 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.LocationManagerService: java.util.HashMap access$900(com.android.server.LocationManagerService)>($r15);

        $r17 = r2.<com.android.server.LocationManagerService$UpdateRecord: java.lang.String mProvider>;

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17);

        r3 = (com.android.server.location.LocationProviderInterface) $r16;

        if r3 == null goto label3;

        $r19 = interfaceinvoke r3.<com.android.server.location.LocationProviderInterface: com.android.internal.location.ProviderProperties getProperties()>();

        goto label4;

     label3:
        $r19 = null;

     label4:
        r4 = $r19;

        if r4 == null goto label5;

        $i0 = r4.<com.android.internal.location.ProviderProperties: int mPowerRequirement>;

        if $i0 != 3 goto label5;

        $r18 = r2.<com.android.server.LocationManagerService$UpdateRecord: android.location.LocationRequest mRequest>;

        $l1 = virtualinvoke $r18.<android.location.LocationRequest: long getInterval()>();

        $b2 = $l1 cmp 300000L;

        if $b2 >= 0 goto label5;

        z2 = 1;

        goto label6;

     label5:
        goto label2;

     label6:
        $z4 = r0.<com.android.server.LocationManagerService$Receiver: boolean mOpMonitoring>;

        $z5 = specialinvoke r0.<com.android.server.LocationManagerService$Receiver: boolean updateMonitoring(boolean,boolean,int)>(z1, $z4, 41);

        r0.<com.android.server.LocationManagerService$Receiver: boolean mOpMonitoring> = $z5;

        z11 = r0.<com.android.server.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring>;

        $z6 = r0.<com.android.server.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring>;

        $z7 = specialinvoke r0.<com.android.server.LocationManagerService$Receiver: boolean updateMonitoring(boolean,boolean,int)>(z2, $z6, 42);

        r0.<com.android.server.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring> = $z7;

        $z8 = r0.<com.android.server.LocationManagerService$Receiver: boolean mOpHighPowerMonitoring>;

        if $z8 == z11 goto label7;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.location.HIGH_POWER_REQUEST_CHANGE");

        r20 = $r5;

        $r6 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.LocationManagerService: android.content.Context access$1000(com.android.server.LocationManagerService)>($r6);

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r20, $r7);

     label7:
        return;
    }

    private boolean updateMonitoring(boolean, boolean, int)
    {
        com.android.server.LocationManagerService$Receiver r0;
        boolean z0, z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.LocationManagerService $r1, $r4, $r7;
        android.app.AppOpsManager $r2, $r5, $r8;
        java.lang.String $r3, $r6, $r9;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        if z1 != 0 goto label3;

        if z0 == 0 goto label5;

        $r7 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r8 = staticinvoke <com.android.server.LocationManagerService: android.app.AppOpsManager access$1100(com.android.server.LocationManagerService)>($r7);

        $i5 = r0.<com.android.server.LocationManagerService$Receiver: int mUid>;

        $r9 = r0.<com.android.server.LocationManagerService$Receiver: java.lang.String mPackageName>;

        $i4 = virtualinvoke $r8.<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>(i0, $i5, $r9);

        if $i4 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        if z0 == 0 goto label4;

        $r4 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.LocationManagerService: android.app.AppOpsManager access$1100(com.android.server.LocationManagerService)>($r4);

        $i2 = r0.<com.android.server.LocationManagerService$Receiver: int mUid>;

        $r6 = r0.<com.android.server.LocationManagerService$Receiver: java.lang.String mPackageName>;

        $i3 = virtualinvoke $r5.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(i0, $i2, $r6);

        if $i3 == 0 goto label5;

     label4:
        $r1 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r2 = staticinvoke <com.android.server.LocationManagerService: android.app.AppOpsManager access$1100(com.android.server.LocationManagerService)>($r1);

        $i1 = r0.<com.android.server.LocationManagerService$Receiver: int mUid>;

        $r3 = r0.<com.android.server.LocationManagerService$Receiver: java.lang.String mPackageName>;

        virtualinvoke $r2.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>(i0, $i1, $r3);

        return 0;

     label5:
        return z1;
    }

    public boolean isListener()
    {
        com.android.server.LocationManagerService$Receiver r0;
        android.location.ILocationListener $r1;
        boolean $z0;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isPendingIntent()
    {
        com.android.server.LocationManagerService$Receiver r0;
        android.app.PendingIntent $r1;
        boolean $z0;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.location.ILocationListener getListener()
    {
        com.android.server.LocationManagerService$Receiver r0;
        android.location.ILocationListener $r1, $r3;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request for non-existent listener");

        throw $r2;
    }

    public boolean callStatusChangedLocked(java.lang.String, int, android.os.Bundle)
    {
        com.android.server.LocationManagerService$Receiver r0, r3, r27;
        java.lang.String r1, $r17;
        int i0, $i1;
        android.os.Bundle r2, $r8;
        java.lang.Throwable r4, r5, $r21, $r23;
        android.location.ILocationListener $r6, $r20;
        android.content.Intent $r7, r26;
        com.android.server.LocationManagerService $r12, $r15, $r18;
        android.app.PendingIntent $r13;
        android.content.Context $r14;
        com.android.server.LocationManagerService$LocationWorkerHandler $r16;
        android.os.RemoteException $r22;
        android.app.PendingIntent$CanceledException $r24;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r6 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r6 == null goto label08;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        $r20 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        interfaceinvoke $r20.<android.location.ILocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>(r1, i0, r2);

        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r23 := @caughtexception;

        r4 = $r23;

        exitmonitor r3;

     label05:
        throw r4;

     label06:
        goto label16;

     label07:
        $r22 := @caughtexception;

        return 0;

     label08:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        r26 = $r7;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>(android.os.Bundle)>(r2);

        virtualinvoke r26.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r8);

        virtualinvoke r26.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", i0);

     label09:
        r27 = r0;

        entermonitor r0;

     label10:
        $r13 = r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r12 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.LocationManagerService: android.content.Context access$1000(com.android.server.LocationManagerService)>($r12);

        $r15 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r16 = staticinvoke <com.android.server.LocationManagerService: com.android.server.LocationManagerService$LocationWorkerHandler access$1200(com.android.server.LocationManagerService)>($r15);

        $r18 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $i1 = r0.<com.android.server.LocationManagerService$Receiver: int mAllowedResolutionLevel>;

        $r17 = staticinvoke <com.android.server.LocationManagerService: java.lang.String access$1300(com.android.server.LocationManagerService,int)>($r18, $i1);

        virtualinvoke $r13.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>($r14, 0, r26, r0, $r16, $r17);

        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

        exitmonitor r27;

     label11:
        goto label14;

     label12:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r27;

     label13:
        throw r5;

     label14:
        goto label16;

     label15:
        $r24 := @caughtexception;

        return 0;

     label16:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label01 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.app.PendingIntent$CanceledException from label09 to label14 with label15;
    }

    public boolean callLocationChangedLocked(android.location.Location)
    {
        com.android.server.LocationManagerService$Receiver r0, r2, r26;
        android.location.Location r1, $r7, $r19;
        java.lang.Throwable r3, r4, $r20, $r22;
        android.location.ILocationListener $r5, $r18;
        android.content.Intent $r6, r25;
        com.android.server.LocationManagerService $r10, $r13, $r16;
        android.app.PendingIntent $r11;
        android.content.Context $r12;
        int $i0;
        com.android.server.LocationManagerService$LocationWorkerHandler $r14;
        java.lang.String $r15;
        android.app.PendingIntent$CanceledException $r21;
        android.os.RemoteException $r23;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        r1 := @parameter0: android.location.Location;

        $r5 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r5 == null goto label08;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        $r18 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        $r19 = new android.location.Location;

        specialinvoke $r19.<android.location.Location: void <init>(android.location.Location)>(r1);

        interfaceinvoke $r18.<android.location.ILocationListener: void onLocationChanged(android.location.Location)>($r19);

        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r20 := @caughtexception;

        r3 = $r20;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        goto label16;

     label07:
        $r23 := @caughtexception;

        return 0;

     label08:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        r25 = $r6;

        $r7 = new android.location.Location;

        specialinvoke $r7.<android.location.Location: void <init>(android.location.Location)>(r1);

        virtualinvoke r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("location", $r7);

     label09:
        r26 = r0;

        entermonitor r0;

     label10:
        $r11 = r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r10 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r12 = staticinvoke <com.android.server.LocationManagerService: android.content.Context access$1000(com.android.server.LocationManagerService)>($r10);

        $r13 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r14 = staticinvoke <com.android.server.LocationManagerService: com.android.server.LocationManagerService$LocationWorkerHandler access$1200(com.android.server.LocationManagerService)>($r13);

        $r16 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $i0 = r0.<com.android.server.LocationManagerService$Receiver: int mAllowedResolutionLevel>;

        $r15 = staticinvoke <com.android.server.LocationManagerService: java.lang.String access$1300(com.android.server.LocationManagerService,int)>($r16, $i0);

        virtualinvoke $r11.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>($r12, 0, r25, r0, $r14, $r15);

        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

        exitmonitor r26;

     label11:
        goto label14;

     label12:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r26;

     label13:
        throw r4;

     label14:
        goto label16;

     label15:
        $r21 := @caughtexception;

        return 0;

     label16:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label01 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.app.PendingIntent$CanceledException from label09 to label14 with label15;
    }

    public boolean callProviderEnabledLocked(java.lang.String, boolean)
    {
        com.android.server.LocationManagerService$Receiver r0, r2, r25;
        java.lang.String r1, $r15;
        boolean z0;
        java.lang.Throwable r3, r4, $r19, $r20;
        android.location.ILocationListener $r5, $r16, $r18;
        android.content.Intent $r6, r24;
        com.android.server.LocationManagerService $r9, $r12, $r14;
        android.app.PendingIntent $r10;
        android.content.Context $r11;
        com.android.server.LocationManagerService$LocationWorkerHandler $r13;
        int $i0;
        android.os.RemoteException $r21;
        android.app.PendingIntent$CanceledException $r22;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.LocationManagerService$Receiver: void updateMonitoring(boolean)>(1);

        $r5 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r5 == null goto label10;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        if z0 == 0 goto label03;

        $r18 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        interfaceinvoke $r18.<android.location.ILocationListener: void onProviderEnabled(java.lang.String)>(r1);

        goto label04;

     label03:
        $r16 = r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        interfaceinvoke $r16.<android.location.ILocationListener: void onProviderDisabled(java.lang.String)>(r1);

     label04:
        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r20 := @caughtexception;

        r3 = $r20;

        exitmonitor r2;

     label07:
        throw r3;

     label08:
        goto label18;

     label09:
        $r21 := @caughtexception;

        return 0;

     label10:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        r24 = $r6;

        virtualinvoke r24.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("providerEnabled", z0);

     label11:
        r25 = r0;

        entermonitor r0;

     label12:
        $r10 = r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r9 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r11 = staticinvoke <com.android.server.LocationManagerService: android.content.Context access$1000(com.android.server.LocationManagerService)>($r9);

        $r12 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r13 = staticinvoke <com.android.server.LocationManagerService: com.android.server.LocationManagerService$LocationWorkerHandler access$1200(com.android.server.LocationManagerService)>($r12);

        $r14 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $i0 = r0.<com.android.server.LocationManagerService$Receiver: int mAllowedResolutionLevel>;

        $r15 = staticinvoke <com.android.server.LocationManagerService: java.lang.String access$1300(com.android.server.LocationManagerService,int)>($r14, $i0);

        virtualinvoke $r10.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>($r11, 0, r24, r0, $r13, $r15);

        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>();

        exitmonitor r25;

     label13:
        goto label16;

     label14:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r25;

     label15:
        throw r4;

     label16:
        goto label18;

     label17:
        $r22 := @caughtexception;

        return 0;

     label18:
        return 1;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label01 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch android.app.PendingIntent$CanceledException from label11 to label16 with label17;
    }

    public void binderDied()
    {
        com.android.server.LocationManagerService$Receiver r0, r10;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, r3, $r8, $r9;
        boolean $z0;
        com.android.server.LocationManagerService $r4, $r6;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $z0 = <com.android.server.LocationManagerService: boolean D>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManagerService", "Location listener died");

     label01:
        $r4 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r5 = staticinvoke <com.android.server.LocationManagerService: java.lang.Object access$000(com.android.server.LocationManagerService)>($r4);

        r1 = $r5;

        entermonitor $r5;

     label02:
        $r6 = r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        staticinvoke <com.android.server.LocationManagerService: void access$1400(com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver)>($r6, r0);

        exitmonitor r1;

     label03:
        goto label06;

     label04:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label05:
        throw r2;

     label06:
        r10 = r0;

        entermonitor r0;

     label07:
        virtualinvoke r0.<com.android.server.LocationManagerService$Receiver: void clearPendingBroadcastsLocked()>();

        exitmonitor r10;

     label08:
        goto label11;

     label09:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r10;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.LocationManagerService$Receiver r0, r5;
        android.app.PendingIntent r1;
        android.content.Intent r2;
        int i0;
        java.lang.String r3;
        android.os.Bundle r4;
        java.lang.Throwable r6, $r8;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        r5 = r0;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void decrementPendingBroadcastsLocked()>();

        exitmonitor r5;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

        exitmonitor r5;

     label4:
        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void incrementPendingBroadcastsLocked()
    {
        com.android.server.LocationManagerService$Receiver r0;
        int $i0, $i1;
        android.os.PowerManager$WakeLock $r1;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $i0 = r0.<com.android.server.LocationManagerService$Receiver: int mPendingBroadcasts>;

        $i1 = $i0 + 1;

        r0.<com.android.server.LocationManagerService$Receiver: int mPendingBroadcasts> = $i1;

        if $i0 != 0 goto label1;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        return;
    }

    private void decrementPendingBroadcastsLocked()
    {
        com.android.server.LocationManagerService$Receiver r0;
        int $i0, $i1;
        android.os.PowerManager$WakeLock $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $i0 = r0.<com.android.server.LocationManagerService$Receiver: int mPendingBroadcasts>;

        $i1 = $i0 - 1;

        r0.<com.android.server.LocationManagerService$Receiver: int mPendingBroadcasts> = $i1;

        if $i1 != 0 goto label1;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        return;
    }

    public void clearPendingBroadcastsLocked()
    {
        com.android.server.LocationManagerService$Receiver r0;
        int $i0;
        android.os.PowerManager$WakeLock $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.LocationManagerService$Receiver;

        $i0 = r0.<com.android.server.LocationManagerService$Receiver: int mPendingBroadcasts>;

        if $i0 <= 0 goto label1;

        r0.<com.android.server.LocationManagerService$Receiver: int mPendingBroadcasts> = 0;

        $r1 = r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.LocationManagerService$Receiver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        return;
    }

    static void access$1500(com.android.server.LocationManagerService$Receiver)
    {
        com.android.server.LocationManagerService$Receiver r0;

        r0 := @parameter0: com.android.server.LocationManagerService$Receiver;

        specialinvoke r0.<com.android.server.LocationManagerService$Receiver: void decrementPendingBroadcastsLocked()>();

        return;
    }
}
