public final class com.android.server.wm.FakeWindowImpl extends java.lang.Object implements android.view.WindowManagerPolicy$FakeWindow
{
    final com.android.server.wm.WindowManagerService mService;
    final android.view.InputChannel mServerChannel;
    final android.view.InputChannel mClientChannel;
    final com.android.server.input.InputApplicationHandle mApplicationHandle;
    final com.android.server.input.InputWindowHandle mWindowHandle;
    final android.view.InputEventReceiver mInputEventReceiver;
    final int mWindowLayer;
    boolean mTouchFullscreen;

    public void <init>(com.android.server.wm.WindowManagerService, android.os.Looper, android.view.InputEventReceiver$Factory, java.lang.String, int, int, int, boolean, boolean, boolean)
    {
        com.android.server.wm.FakeWindowImpl r0;
        com.android.server.wm.WindowManagerService r1, $r8;
        android.os.Looper r2;
        android.view.InputEventReceiver$Factory r3;
        java.lang.String r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, z2;
        android.view.InputChannel[] r5;
        android.view.InputChannel $r6, $r7, $r10, $r12, $r20;
        com.android.server.input.InputManagerService $r9;
        android.view.InputEventReceiver $r11;
        com.android.server.input.InputApplicationHandle $r13, $r14, $r16, $r18;
        com.android.server.input.InputWindowHandle $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        r0 := @this: com.android.server.wm.FakeWindowImpl;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.view.InputEventReceiver$Factory;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        z2 := @parameter9: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.FakeWindowImpl: com.android.server.wm.WindowManagerService mService> = r1;

        r5 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>(r4);

        $r6 = r5[0];

        r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mServerChannel> = $r6;

        $r7 = r5[1];

        r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mClientChannel> = $r7;

        $r8 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r8.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r10 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mServerChannel>;

        virtualinvoke $r9.<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,com.android.server.input.InputWindowHandle)>($r10, null);

        $r12 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mClientChannel>;

        $r11 = interfaceinvoke r3.<android.view.InputEventReceiver$Factory: android.view.InputEventReceiver createInputEventReceiver(android.view.InputChannel,android.os.Looper)>($r12, r2);

        r0.<com.android.server.wm.FakeWindowImpl: android.view.InputEventReceiver mInputEventReceiver> = $r11;

        $r14 = new com.android.server.input.InputApplicationHandle;

        specialinvoke $r14.<com.android.server.input.InputApplicationHandle: void <init>(java.lang.Object)>(null);

        r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputApplicationHandle mApplicationHandle> = $r14;

        $r13 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputApplicationHandle mApplicationHandle>;

        $r13.<com.android.server.input.InputApplicationHandle: java.lang.String name> = r4;

        $r16 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputApplicationHandle mApplicationHandle>;

        $r16.<com.android.server.input.InputApplicationHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r15 = new com.android.server.input.InputWindowHandle;

        $r18 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputApplicationHandle mApplicationHandle>;

        specialinvoke $r15.<com.android.server.input.InputWindowHandle: void <init>(com.android.server.input.InputApplicationHandle,java.lang.Object,int)>($r18, null, 0);

        r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle> = $r15;

        $r17 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r17.<com.android.server.input.InputWindowHandle: java.lang.String name> = r4;

        $r19 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r20 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mServerChannel>;

        $r19.<com.android.server.input.InputWindowHandle: android.view.InputChannel inputChannel> = $r20;

        $i4 = specialinvoke r0.<com.android.server.wm.FakeWindowImpl: int getLayerLw(int)>(i0);

        r0.<com.android.server.wm.FakeWindowImpl: int mWindowLayer> = $i4;

        $r22 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $i3 = r0.<com.android.server.wm.FakeWindowImpl: int mWindowLayer>;

        $r22.<com.android.server.input.InputWindowHandle: int layer> = $i3;

        $r21 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r21.<com.android.server.input.InputWindowHandle: int layoutParamsFlags> = i1;

        $r25 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r25.<com.android.server.input.InputWindowHandle: int layoutParamsPrivateFlags> = i2;

        $r26 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r26.<com.android.server.input.InputWindowHandle: int layoutParamsType> = i0;

        $r23 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r23.<com.android.server.input.InputWindowHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r24 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r24.<com.android.server.input.InputWindowHandle: boolean visible> = 1;

        $r29 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r29.<com.android.server.input.InputWindowHandle: boolean canReceiveKeys> = z0;

        $r30 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r30.<com.android.server.input.InputWindowHandle: boolean hasFocus> = z1;

        $r27 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r27.<com.android.server.input.InputWindowHandle: boolean hasWallpaper> = 0;

        $r28 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r28.<com.android.server.input.InputWindowHandle: boolean paused> = 0;

        $r32 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $i6 = staticinvoke <android.os.Process: int myPid()>();

        $r32.<com.android.server.input.InputWindowHandle: int ownerPid> = $i6;

        $r31 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $i5 = staticinvoke <android.os.Process: int myUid()>();

        $r31.<com.android.server.input.InputWindowHandle: int ownerUid> = $i5;

        $r33 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r33.<com.android.server.input.InputWindowHandle: int inputFeatures> = 0;

        $r34 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r34.<com.android.server.input.InputWindowHandle: float scaleFactor> = 1.0F;

        r0.<com.android.server.wm.FakeWindowImpl: boolean mTouchFullscreen> = z2;

        return;
    }

    void layout(int, int)
    {
        com.android.server.wm.FakeWindowImpl r0;
        int i0, i1;
        boolean $z0;
        com.android.server.input.InputWindowHandle $r1, $r3, $r4, $r5, $r6, $r7;
        android.graphics.Region $r2, $r8;

        r0 := @this: com.android.server.wm.FakeWindowImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.server.wm.FakeWindowImpl: boolean mTouchFullscreen>;

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r8 = $r7.<com.android.server.input.InputWindowHandle: android.graphics.Region touchableRegion>;

        virtualinvoke $r8.<android.graphics.Region: boolean set(int,int,int,int)>(0, 0, i0, i1);

        goto label2;

     label1:
        $r1 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r2 = $r1.<com.android.server.input.InputWindowHandle: android.graphics.Region touchableRegion>;

        virtualinvoke $r2.<android.graphics.Region: void setEmpty()>();

     label2:
        $r3 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r3.<com.android.server.input.InputWindowHandle: int frameLeft> = 0;

        $r4 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r4.<com.android.server.input.InputWindowHandle: int frameTop> = 0;

        $r5 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r5.<com.android.server.input.InputWindowHandle: int frameRight> = i0;

        $r6 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.input.InputWindowHandle mWindowHandle>;

        $r6.<com.android.server.input.InputWindowHandle: int frameBottom> = i1;

        return;
    }

    public void dismiss()
    {
        com.android.server.wm.FakeWindowImpl r0;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r12;
        com.android.server.wm.WindowManagerService $r3, $r5, $r7;
        boolean $z0;
        android.view.InputEventReceiver $r6;
        android.view.InputChannel $r8, $r10, $r11;
        com.android.server.input.InputManagerService $r9;

        r0 := @this: com.android.server.wm.FakeWindowImpl;

        $r3 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.wm.WindowManagerService mService>;

        $z0 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: boolean removeFakeWindowLocked(android.view.WindowManagerPolicy$FakeWindow)>(r0);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputEventReceiver mInputEventReceiver>;

        virtualinvoke $r6.<android.view.InputEventReceiver: void dispose()>();

        $r7 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r8 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mServerChannel>;

        virtualinvoke $r9.<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>($r8);

        $r10 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mClientChannel>;

        virtualinvoke $r10.<android.view.InputChannel: void dispose()>();

        $r11 = r0.<com.android.server.wm.FakeWindowImpl: android.view.InputChannel mServerChannel>;

        virtualinvoke $r11.<android.view.InputChannel: void dispose()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private int getLayerLw(int)
    {
        com.android.server.wm.FakeWindowImpl r0;
        int i0, $i1, $i2, $i3;
        com.android.server.wm.WindowManagerService $r1;
        android.view.WindowManagerPolicy $r2;

        r0 := @this: com.android.server.wm.FakeWindowImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.FakeWindowImpl: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i1 = interfaceinvoke $r2.<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>(i0);

        $i2 = $i1 * 10000;

        $i3 = $i2 + 1000;

        return $i3;
    }
}
