final class com.android.server.display.DisplayDeviceInfo extends java.lang.Object
{
    public static final int FLAG_DEFAULT_DISPLAY;
    public static final int FLAG_ROTATES_WITH_CONTENT;
    public static final int FLAG_SECURE;
    public static final int FLAG_SUPPORTS_PROTECTED_BUFFERS;
    public static final int FLAG_PRIVATE;
    public static final int FLAG_NEVER_BLANK;
    public static final int FLAG_PRESENTATION;
    public static final int FLAG_OWN_CONTENT_ONLY;
    public static final int TOUCH_NONE;
    public static final int TOUCH_INTERNAL;
    public static final int TOUCH_EXTERNAL;
    public java.lang.String name;
    public int width;
    public int height;
    public float refreshRate;
    public float[] supportedRefreshRates;
    public int densityDpi;
    public float xDpi;
    public float yDpi;
    public long appVsyncOffsetNanos;
    public long presentationDeadlineNanos;
    public int flags;
    public int touch;
    public int rotation;
    public int type;
    public java.lang.String address;
    public int state;
    public int ownerUid;
    public java.lang.String ownerPackageName;

    void <init>()
    {
        com.android.server.display.DisplayDeviceInfo r0;
        float[] $r1;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <libcore.util.EmptyArray: float[] FLOAT>;

        r0.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates> = $r1;

        r0.<com.android.server.display.DisplayDeviceInfo: int rotation> = 0;

        r0.<com.android.server.display.DisplayDeviceInfo: int state> = 2;

        return;
    }

    public void setAssumedDensityForExternalDisplay(int, int)
    {
        com.android.server.display.DisplayDeviceInfo r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $i3 = $i2 * 320;

        $i4 = $i3 / 1080;

        r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi> = $i4;

        $i5 = r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        $f0 = (float) $i5;

        r0.<com.android.server.display.DisplayDeviceInfo: float xDpi> = $f0;

        $i6 = r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        $f1 = (float) $i6;

        r0.<com.android.server.display.DisplayDeviceInfo: float yDpi> = $f1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.display.DisplayDeviceInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.server.display.DisplayDeviceInfo;

        if $z0 == 0 goto label1;

        $r2 = (com.android.server.display.DisplayDeviceInfo) r1;

        $z1 = virtualinvoke r0.<com.android.server.display.DisplayDeviceInfo: boolean equals(com.android.server.display.DisplayDeviceInfo)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(com.android.server.display.DisplayDeviceInfo)
    {
        com.android.server.display.DisplayDeviceInfo r0, r1;
        java.lang.String $r2, $r3, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b4, $b7, $b9, $b10, $b15;
        float[] $r4, $r5;
        long $l8, $l11, $l12, $l13;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: com.android.server.display.DisplayDeviceInfo;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $r2 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $z0 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.server.display.DisplayDeviceInfo: int width>;

        $i0 = r1.<com.android.server.display.DisplayDeviceInfo: int width>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<com.android.server.display.DisplayDeviceInfo: int height>;

        $i2 = r1.<com.android.server.display.DisplayDeviceInfo: int height>;

        if $i3 != $i2 goto label1;

        $f1 = r0.<com.android.server.display.DisplayDeviceInfo: float refreshRate>;

        $f0 = r1.<com.android.server.display.DisplayDeviceInfo: float refreshRate>;

        $b4 = $f1 cmpl $f0;

        if $b4 != 0 goto label1;

        $r5 = r0.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates>;

        $r4 = r1.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r5, $r4);

        if $z1 == 0 goto label1;

        $i6 = r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        $i5 = r1.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        if $i6 != $i5 goto label1;

        $f3 = r0.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $f2 = r1.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $b7 = $f3 cmpl $f2;

        if $b7 != 0 goto label1;

        $f4 = r0.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $f5 = r1.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $b9 = $f4 cmpl $f5;

        if $b9 != 0 goto label1;

        $l11 = r0.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        $l8 = r1.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        $b10 = $l11 cmp $l8;

        if $b10 != 0 goto label1;

        $l12 = r0.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        $l13 = r1.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        $b15 = $l12 cmp $l13;

        if $b15 != 0 goto label1;

        $i17 = r0.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i14 = r1.<com.android.server.display.DisplayDeviceInfo: int flags>;

        if $i17 != $i14 goto label1;

        $i20 = r0.<com.android.server.display.DisplayDeviceInfo: int touch>;

        $i16 = r1.<com.android.server.display.DisplayDeviceInfo: int touch>;

        if $i20 != $i16 goto label1;

        $i18 = r0.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        $i21 = r1.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        if $i18 != $i21 goto label1;

        $i22 = r0.<com.android.server.display.DisplayDeviceInfo: int type>;

        $i19 = r1.<com.android.server.display.DisplayDeviceInfo: int type>;

        if $i22 != $i19 goto label1;

        $r6 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String address>;

        $r7 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String address>;

        $z2 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 == 0 goto label1;

        $i26 = r0.<com.android.server.display.DisplayDeviceInfo: int state>;

        $i25 = r1.<com.android.server.display.DisplayDeviceInfo: int state>;

        if $i26 != $i25 goto label1;

        $i24 = r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        $i23 = r1.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        if $i24 != $i23 goto label1;

        $r9 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        $r8 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        $z3 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }

    public int hashCode()
    {
        com.android.server.display.DisplayDeviceInfo r0;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        return 0;
    }

    public void copyFrom(com.android.server.display.DisplayDeviceInfo)
    {
        com.android.server.display.DisplayDeviceInfo r0, r1;
        java.lang.String $r2, $r4, $r5;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10;
        float $f0, $f1, $f2;
        float[] $r3;
        long $l3, $l4;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        r1 := @parameter0: com.android.server.display.DisplayDeviceInfo;

        $r2 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String name> = $r2;

        $i0 = r1.<com.android.server.display.DisplayDeviceInfo: int width>;

        r0.<com.android.server.display.DisplayDeviceInfo: int width> = $i0;

        $i1 = r1.<com.android.server.display.DisplayDeviceInfo: int height>;

        r0.<com.android.server.display.DisplayDeviceInfo: int height> = $i1;

        $f0 = r1.<com.android.server.display.DisplayDeviceInfo: float refreshRate>;

        r0.<com.android.server.display.DisplayDeviceInfo: float refreshRate> = $f0;

        $r3 = r1.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates>;

        r0.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates> = $r3;

        $i2 = r1.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi> = $i2;

        $f1 = r1.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        r0.<com.android.server.display.DisplayDeviceInfo: float xDpi> = $f1;

        $f2 = r1.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        r0.<com.android.server.display.DisplayDeviceInfo: float yDpi> = $f2;

        $l3 = r1.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        r0.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos> = $l3;

        $l4 = r1.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        r0.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos> = $l4;

        $i5 = r1.<com.android.server.display.DisplayDeviceInfo: int flags>;

        r0.<com.android.server.display.DisplayDeviceInfo: int flags> = $i5;

        $i6 = r1.<com.android.server.display.DisplayDeviceInfo: int touch>;

        r0.<com.android.server.display.DisplayDeviceInfo: int touch> = $i6;

        $i7 = r1.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        r0.<com.android.server.display.DisplayDeviceInfo: int rotation> = $i7;

        $i8 = r1.<com.android.server.display.DisplayDeviceInfo: int type>;

        r0.<com.android.server.display.DisplayDeviceInfo: int type> = $i8;

        $r4 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String address>;

        r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String address> = $r4;

        $i9 = r1.<com.android.server.display.DisplayDeviceInfo: int state>;

        r0.<com.android.server.display.DisplayDeviceInfo: int state> = $i9;

        $i10 = r1.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid> = $i10;

        $r5 = r1.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName> = $r5;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.display.DisplayDeviceInfo r0;
        java.lang.StringBuilder r1, $r2, $r5, $r6, $r7, $r8, $r10, $r11, $r14, $r17, $r18, $r20, $r21, $r23, $r24, $r27, $r30, $r32, $r33, $r39, $r42, $r44, $r45, $r52;
        java.lang.String $r4, $r16, $r28, $r35, $r36, $r38, $r41, $r48, $r50, $r51, $r53;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float $f0, $f1, $f2;
        float[] $r13;
        long $l3, $l4;

        r0 := @this: com.android.server.display.DisplayDeviceInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DisplayDeviceInfo{\"");

        $r4 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $i0 = r0.<com.android.server.display.DisplayDeviceInfo: int width>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i1 = r0.<com.android.server.display.DisplayDeviceInfo: int height>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = r0.<com.android.server.display.DisplayDeviceInfo: float refreshRate>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fps");

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedRefreshRates ");

        $r13 = r0.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates>;

        $r16 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r13);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", density ");

        $i2 = r0.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f1 = r0.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $f2 = r0.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dpi");

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", appVsyncOff ");

        $l3 = r0.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r27 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", presDeadline ");

        $l4 = r0.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", touch ");

        $i5 = r0.<com.android.server.display.DisplayDeviceInfo: int touch>;

        $r28 = staticinvoke <com.android.server.display.DisplayDeviceInfo: java.lang.String touchToString(int)>($i5);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r33 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rotation ");

        $i6 = r0.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r32 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ");

        $i7 = r0.<com.android.server.display.DisplayDeviceInfo: int type>;

        $r36 = staticinvoke <android.view.Display: java.lang.String typeToString(int)>($i7);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r35 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String address>;

        if $r35 == null goto label1;

        $r52 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", address ");

        $r53 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String address>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

     label1:
        $r39 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state ");

        $i8 = r0.<com.android.server.display.DisplayDeviceInfo: int state>;

        $r38 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i8);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $i9 = r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        if $i9 != 0 goto label2;

        $r51 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        if $r51 == null goto label3;

     label2:
        $r42 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", owner ");

        $r41 = r0.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i10 = r0.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label3:
        $i11 = r0.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $r48 = staticinvoke <com.android.server.display.DisplayDeviceInfo: java.lang.String flagsToString(int)>($i11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r50 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r50;
    }

    private static java.lang.String touchToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "NONE";

     label2:
        return "INTERNAL";

     label3:
        return "EXTERNAL";

     label4:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    private static java.lang.String flagsToString(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_DEFAULT_DISPLAY");

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_ROTATES_WITH_CONTENT");

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SECURE");

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SUPPORTS_PROTECTED_BUFFERS");

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRIVATE");

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_NEVER_BLANK");

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRESENTATION");

     label7:
        $i8 = i0 & 128;

        if $i8 == 0 goto label8;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_OWN_CONTENT_ONLY");

     label8:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.display.DisplayDeviceInfo: int TOUCH_EXTERNAL> = 2;

        <com.android.server.display.DisplayDeviceInfo: int TOUCH_INTERNAL> = 1;

        <com.android.server.display.DisplayDeviceInfo: int TOUCH_NONE> = 0;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_OWN_CONTENT_ONLY> = 128;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_PRESENTATION> = 64;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_NEVER_BLANK> = 32;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_PRIVATE> = 16;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_SUPPORTS_PROTECTED_BUFFERS> = 8;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_SECURE> = 4;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_ROTATES_WITH_CONTENT> = 2;

        <com.android.server.display.DisplayDeviceInfo: int FLAG_DEFAULT_DISPLAY> = 1;

        return;
    }
}
