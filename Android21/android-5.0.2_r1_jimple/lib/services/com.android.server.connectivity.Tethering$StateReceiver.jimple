class com.android.server.connectivity.Tethering$StateReceiver extends android.content.BroadcastReceiver
{
    final com.android.server.connectivity.Tethering this$0;

    private void <init>(com.android.server.connectivity.Tethering)
    {
        com.android.server.connectivity.Tethering$StateReceiver r0;
        com.android.server.connectivity.Tethering r1;

        r0 := @this: com.android.server.connectivity.Tethering$StateReceiver;

        r1 := @parameter0: com.android.server.connectivity.Tethering;

        r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.connectivity.Tethering$StateReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.String r3;
        java.lang.Object r4, $r13;
        boolean z0, $z1, $z2, $z3, $z4, $z7, $z8;
        java.lang.Throwable r5, $r18;
        com.android.server.connectivity.Tethering $r6, $r10, $r11, $r14, $r15, $r16, $r17, $r19;
        android.os.Parcelable $r7;
        android.net.NetworkInfo$DetailedState $r8, $r9;
        com.android.internal.util.StateMachine $r12;
        android.net.NetworkInfo r20;

        r0 := @this: com.android.server.connectivity.Tethering$StateReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        if r3 != null goto label01;

        return;

     label01:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.hardware.usb.action.USB_STATE");

        if $z1 == 0 goto label08;

        $r11 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        $r13 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.Object access$100(com.android.server.connectivity.Tethering)>($r11);

        r4 = $r13;

        entermonitor $r13;

     label02:
        z0 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("connected", 0);

        $r14 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        $z4 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("rndis", 0);

        staticinvoke <com.android.server.connectivity.Tethering: boolean access$202(com.android.server.connectivity.Tethering,boolean)>($r14, $z4);

        if z0 == 0 goto label03;

        $r16 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        $z7 = staticinvoke <com.android.server.connectivity.Tethering: boolean access$200(com.android.server.connectivity.Tethering)>($r16);

        if $z7 == 0 goto label03;

        $r17 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        $z8 = staticinvoke <com.android.server.connectivity.Tethering: boolean access$300(com.android.server.connectivity.Tethering)>($r17);

        if $z8 == 0 goto label03;

        $r19 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        staticinvoke <com.android.server.connectivity.Tethering: void access$400(com.android.server.connectivity.Tethering,boolean)>($r19, 1);

     label03:
        $r15 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        staticinvoke <com.android.server.connectivity.Tethering: boolean access$302(com.android.server.connectivity.Tethering,boolean)>($r15, 0);

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        goto label11;

     label08:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.net.conn.CONNECTIVITY_CHANGE");

        if $z2 == 0 goto label10;

        $r7 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("networkInfo");

        r20 = (android.net.NetworkInfo) $r7;

        if r20 == null goto label09;

        $r8 = virtualinvoke r20.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r9 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState FAILED>;

        if $r8 == $r9 goto label09;

        $r10 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        $r12 = staticinvoke <com.android.server.connectivity.Tethering: com.android.internal.util.StateMachine access$500(com.android.server.connectivity.Tethering)>($r10);

        virtualinvoke $r12.<com.android.internal.util.StateMachine: void sendMessage(int)>(3);

     label09:
        goto label11;

     label10:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.CONFIGURATION_CHANGED");

        if $z3 == 0 goto label11;

        $r6 = r0.<com.android.server.connectivity.Tethering$StateReceiver: com.android.server.connectivity.Tethering this$0>;

        virtualinvoke $r6.<com.android.server.connectivity.Tethering: void updateConfiguration()>();

     label11:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    void <init>(com.android.server.connectivity.Tethering, com.android.server.connectivity.Tethering$1)
    {
        com.android.server.connectivity.Tethering$StateReceiver r0;
        com.android.server.connectivity.Tethering r1;
        com.android.server.connectivity.Tethering$1 r2;

        r0 := @this: com.android.server.connectivity.Tethering$StateReceiver;

        r1 := @parameter0: com.android.server.connectivity.Tethering;

        r2 := @parameter1: com.android.server.connectivity.Tethering$1;

        specialinvoke r0.<com.android.server.connectivity.Tethering$StateReceiver: void <init>(com.android.server.connectivity.Tethering)>(r1);

        return;
    }
}
