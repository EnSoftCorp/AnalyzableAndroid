final class com.android.server.hdmi.HdmiMhlLocalDeviceStub extends java.lang.Object
{
    private static final android.hardware.hdmi.HdmiDeviceInfo INFO;
    private final com.android.server.hdmi.HdmiControlService mService;
    private final int mPortId;

    protected void <init>(com.android.server.hdmi.HdmiControlService, int)
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        com.android.server.hdmi.HdmiControlService r1;
        int i0;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        r1 := @parameter0: com.android.server.hdmi.HdmiControlService;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.hdmi.HdmiMhlLocalDeviceStub: com.android.server.hdmi.HdmiControlService mService> = r1;

        r0.<com.android.server.hdmi.HdmiMhlLocalDeviceStub: int mPortId> = i0;

        return;
    }

    void onDeviceRemoved()
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        return;
    }

    android.hardware.hdmi.HdmiDeviceInfo getInfo()
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        android.hardware.hdmi.HdmiDeviceInfo $r1;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        $r1 = <com.android.server.hdmi.HdmiMhlLocalDeviceStub: android.hardware.hdmi.HdmiDeviceInfo INFO>;

        return $r1;
    }

    void setBusMode(int)
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        int i0;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        i0 := @parameter0: int;

        return;
    }

    void onBusOvercurrentDetected(boolean)
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        boolean z0;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        z0 := @parameter0: boolean;

        return;
    }

    void setDeviceStatusChange(int, int)
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        int i0, i1;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    int getPortId()
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        int $i0;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        $i0 = r0.<com.android.server.hdmi.HdmiMhlLocalDeviceStub: int mPortId>;

        return $i0;
    }

    void turnOn(android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    void sendKeyEvent(int, boolean)
    {
        com.android.server.hdmi.HdmiMhlLocalDeviceStub r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.hdmi.HdmiMhlLocalDeviceStub;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    static void <clinit>()
    {
        android.hardware.hdmi.HdmiDeviceInfo $r0;

        $r0 = new android.hardware.hdmi.HdmiDeviceInfo;

        specialinvoke $r0.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int)>(65535, -1, -1, -1);

        <com.android.server.hdmi.HdmiMhlLocalDeviceStub: android.hardware.hdmi.HdmiDeviceInfo INFO> = $r0;

        return;
    }
}
