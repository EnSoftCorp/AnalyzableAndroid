public class com.android.server.usage.UsageStatsXml extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int CURRENT_VERSION;
    private static final java.lang.String USAGESTATS_TAG;
    private static final java.lang.String VERSION_ATTR;

    public void <init>()
    {
        com.android.server.usage.UsageStatsXml r0;

        r0 := @this: com.android.server.usage.UsageStatsXml;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long parseBeginTime(android.util.AtomicFile)
    {
        android.util.AtomicFile r0;
        java.io.File $r1;
        java.lang.String $r2;
        long $l0;

        r0 := @parameter0: android.util.AtomicFile;

        $r1 = virtualinvoke r0.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        return $l0;
    }

    public static void read(android.util.AtomicFile, com.android.server.usage.IntervalStats) throws java.io.IOException
    {
        android.util.AtomicFile r0;
        com.android.server.usage.IntervalStats r1;
        java.io.FileInputStream r2;
        java.lang.Throwable r4, $r8;
        long $l0, $l1;
        java.io.IOException $r6, $r9;
        java.io.FileNotFoundException $r7, r10;

        r0 := @parameter0: android.util.AtomicFile;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

     label01:
        r2 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        $l0 = staticinvoke <com.android.server.usage.UsageStatsXml: long parseBeginTime(android.util.AtomicFile)>(r0);

        r1.<com.android.server.usage.IntervalStats: long beginTime> = $l0;

        staticinvoke <com.android.server.usage.UsageStatsXml: void read(java.io.InputStream,com.android.server.usage.IntervalStats)>(r2, r1);

        $l1 = virtualinvoke r0.<android.util.AtomicFile: long getLastModifiedTime()>();

        r1.<com.android.server.usage.IntervalStats: long lastTimeSaved> = $l1;

     label03:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label04:
        goto label11;

     label05:
        $r9 := @caughtexception;

        goto label11;

     label06:
        $r8 := @caughtexception;

        r4 = $r8;

     label07:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

     label10:
        throw r4;

     label11:
        goto label13;

     label12:
        $r7 := @caughtexception;

        r10 = $r7;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsXml", "UsageStats Xml", r10);

        throw r10;

     label13:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.FileNotFoundException from label01 to label11 with label12;
    }

    public static void write(android.util.AtomicFile, com.android.server.usage.IntervalStats) throws java.io.IOException
    {
        android.util.AtomicFile r0;
        com.android.server.usage.IntervalStats r1;
        java.io.FileOutputStream r2;
        java.lang.Throwable r3, $r4;

        r0 := @parameter0: android.util.AtomicFile;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        r2 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label1:
        staticinvoke <com.android.server.usage.UsageStatsXml: void write(java.io.OutputStream,com.android.server.usage.IntervalStats)>(r2, r1);

        virtualinvoke r0.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label2:
        virtualinvoke r0.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(null);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        virtualinvoke r0.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void read(java.io.InputStream, com.android.server.usage.IntervalStats) throws java.io.IOException
    {
        java.io.InputStream r0;
        com.android.server.usage.IntervalStats r1;
        org.xmlpull.v1.XmlPullParser r2;
        java.lang.String r3, $r8, $r14;
        java.lang.NumberFormatException r4, $r16;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12;
        java.io.IOException $r9, $r15, $r17;
        org.xmlpull.v1.XmlPullParserException $r13, r18;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, "utf-8");

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "usagestats");

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

     label2:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        lookupswitch($i0)
        {
            case 1: goto label3;
            default: goto label4;
        };

     label3:
        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void read(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats)>(r2, r1);

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized version ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsXml", $r8);

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized version ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;

        r4 = $r16;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsXml", "Bad version");

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.Throwable)>(r4);

        throw $r17;

     label7:
        goto label9;

     label8:
        $r13 := @caughtexception;

        r18 = $r13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsXml", "Failed to parse Xml", r18);

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.Throwable)>(r18);

        throw $r15;

     label9:
        return;

        catch java.lang.NumberFormatException from label2 to label5 with label6;
        catch org.xmlpull.v1.XmlPullParserException from label1 to label7 with label8;
    }

    private static void write(java.io.OutputStream, com.android.server.usage.IntervalStats) throws java.io.IOException
    {
        java.io.OutputStream r0;
        com.android.server.usage.IntervalStats r1;
        com.android.internal.util.FastXmlSerializer r2, $r3;
        java.lang.Boolean $r4;
        java.lang.String $r6;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r0, "utf-8");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("utf-8", $r4);

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "usagestats");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r6);

        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void write(org.xmlpull.v1.XmlSerializer,com.android.server.usage.IntervalStats)>(r2, r1);

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "usagestats");

        virtualinvoke r2.<com.android.internal.util.FastXmlSerializer: void endDocument()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usage.UsageStatsXml: java.lang.String VERSION_ATTR> = "version";

        <com.android.server.usage.UsageStatsXml: java.lang.String USAGESTATS_TAG> = "usagestats";

        <com.android.server.usage.UsageStatsXml: int CURRENT_VERSION> = 1;

        <com.android.server.usage.UsageStatsXml: java.lang.String TAG> = "UsageStatsXml";

        return;
    }
}
