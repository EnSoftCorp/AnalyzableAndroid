final class com.android.server.input.InputManagerService$InputFilterHost extends android.view.IInputFilterHost$Stub
{
    private boolean mDisconnected;
    final com.android.server.input.InputManagerService this$0;

    private void <init>(com.android.server.input.InputManagerService)
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;
        com.android.server.input.InputManagerService r1;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r1 := @parameter0: com.android.server.input.InputManagerService;

        r0.<com.android.server.input.InputManagerService$InputFilterHost: com.android.server.input.InputManagerService this$0> = r1;

        specialinvoke r0.<android.view.IInputFilterHost$Stub: void <init>()>();

        return;
    }

    public void disconnectLocked()
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r0.<com.android.server.input.InputManagerService$InputFilterHost: boolean mDisconnected> = 1;

        return;
    }

    public void sendInputEvent(android.view.InputEvent, int)
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;
        android.view.InputEvent r1;
        int i0, $i2;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.input.InputManagerService $r4, $r6;
        boolean $z0;
        long $l1;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event must not be null");

        throw $r7;

     label1:
        $r4 = r0.<com.android.server.input.InputManagerService$InputFilterHost: com.android.server.input.InputManagerService this$0>;

        $r5 = $r4.<com.android.server.input.InputManagerService: java.lang.Object mInputFilterLock>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $z0 = r0.<com.android.server.input.InputManagerService$InputFilterHost: boolean mDisconnected>;

        if $z0 != 0 goto label3;

        $r6 = r0.<com.android.server.input.InputManagerService$InputFilterHost: com.android.server.input.InputManagerService this$0>;

        $l1 = staticinvoke <com.android.server.input.InputManagerService: long access$700(com.android.server.input.InputManagerService)>($r6);

        $i2 = i0 | 67108864;

        staticinvoke <com.android.server.input.InputManagerService: int access$800(long,android.view.InputEvent,int,int,int,int,int,int)>($l1, r1, 0, 0, 0, 0, 0, $i2);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void <init>(com.android.server.input.InputManagerService, com.android.server.input.InputManagerService$1)
    {
        com.android.server.input.InputManagerService$InputFilterHost r0;
        com.android.server.input.InputManagerService r1;
        com.android.server.input.InputManagerService$1 r2;

        r0 := @this: com.android.server.input.InputManagerService$InputFilterHost;

        r1 := @parameter0: com.android.server.input.InputManagerService;

        r2 := @parameter1: com.android.server.input.InputManagerService$1;

        specialinvoke r0.<com.android.server.input.InputManagerService$InputFilterHost: void <init>(com.android.server.input.InputManagerService)>(r1);

        return;
    }
}
