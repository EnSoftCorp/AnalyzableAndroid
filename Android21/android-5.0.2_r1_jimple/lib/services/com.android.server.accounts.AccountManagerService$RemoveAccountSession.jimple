class com.android.server.accounts.AccountManagerService$RemoveAccountSession extends com.android.server.accounts.AccountManagerService$Session
{
    final android.accounts.Account mAccount;
    final com.android.server.accounts.AccountManagerService this$0;

    public void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, android.accounts.Account)
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        com.android.server.accounts.AccountManagerService r1;
        com.android.server.accounts.AccountManagerService$UserAccounts r2;
        android.accounts.IAccountManagerResponse r3;
        android.accounts.Account r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        r1 := @parameter0: com.android.server.accounts.AccountManagerService;

        r2 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r3 := @parameter2: android.accounts.IAccountManagerResponse;

        r4 := @parameter3: android.accounts.Account;

        r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: com.android.server.accounts.AccountManagerService this$0> = r1;

        $r5 = r4.<android.accounts.Account: java.lang.String type>;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void <init>(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean)>(r1, r2, r3, $r5, 0, 1);

        r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount> = r4;

        return;
    }

    protected java.lang.String toDebugString(long)
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        long l0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r7;
        java.lang.String $r2, $r8;
        android.accounts.Account $r6;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        l0 := @parameter0: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)>(l0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", removeAccount");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", account ");

        $r6 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void run() throws android.os.RemoteException
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        android.accounts.Account $r1;
        android.accounts.IAccountAuthenticator $r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.IAccountAuthenticator mAuthenticator>;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount>;

        interfaceinvoke $r2.<android.accounts.IAccountAuthenticator: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>(r0, $r1);

        return;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        android.os.Bundle r1, r3, $r5;
        boolean z0, $z1, $z2, $z3;
        android.accounts.IAccountManagerResponse r2;
        java.lang.StringBuilder $r6, $r9, $r10, $r12;
        java.lang.Class $r7;
        java.lang.String $r8, $r11;
        android.accounts.Account $r13;
        com.android.server.accounts.AccountManagerService $r14;
        com.android.server.accounts.AccountManagerService$UserAccounts $r15;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label6;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("booleanResult");

        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("intent");

        if $z2 != 0 goto label6;

        z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("booleanResult");

        if z0 == 0 goto label1;

        $r14 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: com.android.server.accounts.AccountManagerService this$0>;

        $r15 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r13 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount>;

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$1100(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account)>($r14, $r15, $r13);

     label1:
        r2 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r2 == null goto label6;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z3 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onResult() on response ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r11);

     label2:
        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("booleanResult", z0);

     label3:
        interfaceinvoke r2.<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>(r3);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onResult(android.os.Bundle)>(r1);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }
}
