public class com.android.server.media.MediaSessionRecord extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int ACTIVE_BUFFER;
    private static final int OPTIMISTIC_VOLUME_TIMEOUT;
    private final com.android.server.media.MediaSessionRecord$MessageHandler mHandler;
    private final int mOwnerPid;
    private final int mOwnerUid;
    private final int mUserId;
    private final java.lang.String mPackageName;
    private final java.lang.String mTag;
    private final com.android.server.media.MediaSessionRecord$ControllerStub mController;
    private final com.android.server.media.MediaSessionRecord$SessionStub mSession;
    private final com.android.server.media.MediaSessionRecord$SessionCb mSessionCb;
    private final com.android.server.media.MediaSessionService mService;
    private final java.lang.Object mLock;
    private final java.util.ArrayList mControllerCallbacks;
    private long mFlags;
    private android.app.PendingIntent mMediaButtonReceiver;
    private android.app.PendingIntent mLaunchIntent;
    private android.os.Bundle mExtras;
    private android.media.MediaMetadata mMetadata;
    private android.media.session.PlaybackState mPlaybackState;
    private android.content.pm.ParceledListSlice mQueue;
    private java.lang.CharSequence mQueueTitle;
    private int mRatingType;
    private long mLastActiveTime;
    private android.media.AudioAttributes mAudioAttrs;
    private android.media.AudioManager mAudioManager;
    private android.media.AudioManagerInternal mAudioManagerInternal;
    private int mVolumeType;
    private int mVolumeControlType;
    private int mMaxVolume;
    private int mCurrentVolume;
    private int mOptimisticVolume;
    private boolean mIsActive;
    private boolean mDestroyed;
    private final java.lang.Runnable mClearOptimisticVolumeRunnable;

    public void <init>(int, int, int, java.lang.String, android.media.session.ISessionCallback, java.lang.String, com.android.server.media.MediaSessionService, android.os.Handler)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0, i1, i2;
        java.lang.String r1, r3;
        android.media.session.ISessionCallback r2;
        com.android.server.media.MediaSessionService r4;
        android.os.Handler r5;
        java.lang.Object $r6, $r16, $r18;
        java.util.ArrayList $r7;
        com.android.server.media.MediaSessionRecord$1 $r8;
        com.android.server.media.MediaSessionRecord$ControllerStub $r9;
        com.android.server.media.MediaSessionRecord$SessionStub $r10;
        com.android.server.media.MediaSessionRecord$SessionCb $r11;
        com.android.server.media.MediaSessionRecord$MessageHandler $r12;
        android.content.Context $r13;
        android.os.Looper $r14;
        android.media.AudioManager $r15;
        android.media.AudioManagerInternal $r17;
        android.media.AudioAttributes$Builder $r19, $r20;
        android.media.AudioAttributes $r21;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.media.session.ISessionCallback;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: com.android.server.media.MediaSessionService;

        r5 := @parameter7: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks> = $r7;

        r0.<com.android.server.media.MediaSessionRecord: int mVolumeType> = 1;

        r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType> = 2;

        r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume> = 0;

        r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume> = 0;

        r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume> = -1;

        r0.<com.android.server.media.MediaSessionRecord: boolean mIsActive> = 0;

        r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed> = 0;

        $r8 = new com.android.server.media.MediaSessionRecord$1;

        specialinvoke $r8.<com.android.server.media.MediaSessionRecord$1: void <init>(com.android.server.media.MediaSessionRecord)>(r0);

        r0.<com.android.server.media.MediaSessionRecord: java.lang.Runnable mClearOptimisticVolumeRunnable> = $r8;

        r0.<com.android.server.media.MediaSessionRecord: int mOwnerPid> = i0;

        r0.<com.android.server.media.MediaSessionRecord: int mOwnerUid> = i1;

        r0.<com.android.server.media.MediaSessionRecord: int mUserId> = i2;

        r0.<com.android.server.media.MediaSessionRecord: java.lang.String mPackageName> = r1;

        r0.<com.android.server.media.MediaSessionRecord: java.lang.String mTag> = r3;

        $r9 = new com.android.server.media.MediaSessionRecord$ControllerStub;

        specialinvoke $r9.<com.android.server.media.MediaSessionRecord$ControllerStub: void <init>(com.android.server.media.MediaSessionRecord)>(r0);

        r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$ControllerStub mController> = $r9;

        $r10 = new com.android.server.media.MediaSessionRecord$SessionStub;

        specialinvoke $r10.<com.android.server.media.MediaSessionRecord$SessionStub: void <init>(com.android.server.media.MediaSessionRecord,com.android.server.media.MediaSessionRecord$1)>(r0, null);

        r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionStub mSession> = $r10;

        $r11 = new com.android.server.media.MediaSessionRecord$SessionCb;

        specialinvoke $r11.<com.android.server.media.MediaSessionRecord$SessionCb: void <init>(com.android.server.media.MediaSessionRecord,android.media.session.ISessionCallback)>(r0, r2);

        r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionCb mSessionCb> = $r11;

        r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionService mService> = r4;

        $r12 = new com.android.server.media.MediaSessionRecord$MessageHandler;

        $r14 = virtualinvoke r5.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r12.<com.android.server.media.MediaSessionRecord$MessageHandler: void <init>(com.android.server.media.MediaSessionRecord,android.os.Looper)>(r0, $r14);

        r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler> = $r12;

        $r13 = virtualinvoke r4.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $r16 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r15 = (android.media.AudioManager) $r16;

        r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManager mAudioManager> = $r15;

        $r18 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "android/media/AudioManagerInternal");

        $r17 = (android.media.AudioManagerInternal) $r18;

        r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManagerInternal mAudioManagerInternal> = $r17;

        $r20 = new android.media.AudioAttributes$Builder;

        specialinvoke $r20.<android.media.AudioAttributes$Builder: void <init>()>();

        $r19 = virtualinvoke $r20.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(1);

        $r21 = virtualinvoke $r19.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs> = $r21;

        return;
    }

    public android.media.session.ISession getSessionBinder()
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionRecord$SessionStub $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionStub mSession>;

        return $r1;
    }

    public android.media.session.ISessionController getControllerBinder()
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionRecord$ControllerStub $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$ControllerStub mController>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mPackageName>;

        return $r1;
    }

    public java.lang.String getTag()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mTag>;

        return $r1;
    }

    public android.app.PendingIntent getMediaButtonReceiver()
    {
        com.android.server.media.MediaSessionRecord r0;
        android.app.PendingIntent $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent mMediaButtonReceiver>;

        return $r1;
    }

    public long getFlags()
    {
        com.android.server.media.MediaSessionRecord r0;
        long $l0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $l0 = r0.<com.android.server.media.MediaSessionRecord: long mFlags>;

        return $l0;
    }

    public boolean hasFlag(int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;
        long $l1, $l2, $l3;
        byte $b4;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        i0 := @parameter0: int;

        $l2 = r0.<com.android.server.media.MediaSessionRecord: long mFlags>;

        $l1 = (long) i0;

        $l3 = $l2 & $l1;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getUserId()
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mUserId>;

        return $i0;
    }

    public boolean isSystemPriority()
    {
        com.android.server.media.MediaSessionRecord r0;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $l0 = r0.<com.android.server.media.MediaSessionRecord: long mFlags>;

        $l1 = $l0 & 65536L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void adjustVolume(int, int, java.lang.String, int, boolean)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        java.lang.String r1;
        boolean z0, $z1, $z3, $z4;
        com.android.server.media.MediaSessionRecord$SessionCb $r2;
        java.lang.Runnable $r3, $r4;
        com.android.server.media.MediaSessionRecord$MessageHandler $r5, $r6;
        android.media.AudioAttributes $r7;
        android.media.AudioManagerInternal $r8, $r9, $r10;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        i3 = i1 & 4;

        $z1 = virtualinvoke r0.<com.android.server.media.MediaSessionRecord: boolean isPlaybackActive(boolean)>(0);

        if $z1 != 0 goto label01;

        $z4 = virtualinvoke r0.<com.android.server.media.MediaSessionRecord: boolean hasFlag(int)>(65536);

        if $z4 == 0 goto label02;

     label01:
        i1 = i1 & -5;

     label02:
        if i0 <= 1 goto label03;

        i0 = 1;

        goto label04;

     label03:
        if i0 >= -1 goto label04;

        i0 = -1;

     label04:
        $i5 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeType>;

        if $i5 != 1 goto label08;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs>;

        i4 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r7);

        if z0 == 0 goto label06;

        $z3 = staticinvoke <android.media.AudioSystem: boolean isStreamActive(int,int)>(i4, 0);

        if $z3 == 0 goto label05;

        $r9 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManagerInternal mAudioManagerInternal>;

        virtualinvoke $r9.<android.media.AudioManagerInternal: void adjustSuggestedStreamVolumeForUid(int,int,int,java.lang.String,int)>(i4, i0, i1, r1, i2);

        goto label07;

     label05:
        i15 = i1 | i3;

        $r10 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManagerInternal mAudioManagerInternal>;

        virtualinvoke $r10.<android.media.AudioManagerInternal: void adjustSuggestedStreamVolumeForUid(int,int,int,java.lang.String,int)>(-2147483648, i0, i15, r1, i2);

        goto label07;

     label06:
        $r8 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManagerInternal mAudioManagerInternal>;

        virtualinvoke $r8.<android.media.AudioManagerInternal: void adjustStreamVolumeForUid(int,int,int,java.lang.String,int)>(i4, i0, i1, r1, i2);

     label07:
        goto label12;

     label08:
        $i6 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType>;

        if $i6 != 0 goto label09;

        return;

     label09:
        $r2 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionCb mSessionCb>;

        virtualinvoke $r2.<com.android.server.media.MediaSessionRecord$SessionCb: void adjustVolume(int)>(i0);

        $i7 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        if $i7 >= 0 goto label10;

        $i13 = r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume>;

        goto label11;

     label10:
        $i13 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

     label11:
        i16 = $i13;

        $i8 = i16 + i0;

        r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume> = $i8;

        $i10 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        $i9 = r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume>;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i9);

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume> = $i12;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler>;

        $r3 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Runnable mClearOptimisticVolumeRunnable>;

        virtualinvoke $r5.<com.android.server.media.MediaSessionRecord$MessageHandler: void removeCallbacks(java.lang.Runnable)>($r3);

        $r6 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler>;

        $r4 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Runnable mClearOptimisticVolumeRunnable>;

        virtualinvoke $r6.<com.android.server.media.MediaSessionRecord$MessageHandler: boolean postDelayed(java.lang.Runnable,long)>($r4, 1000L);

        $i14 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        if i16 == $i14 goto label12;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushVolumeUpdate()>();

     label12:
        return;
    }

    public void setVolumeTo(int, int, java.lang.String, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        java.lang.String r1;
        com.android.server.media.MediaSessionRecord$SessionCb $r2;
        com.android.server.media.MediaSessionRecord$MessageHandler $r3, $r5;
        java.lang.Runnable $r4, $r6;
        android.media.AudioAttributes $r7;
        android.media.AudioManagerInternal $r8;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        $i4 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeType>;

        if $i4 != 1 goto label1;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs>;

        i3 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r7);

        $r8 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManagerInternal mAudioManagerInternal>;

        virtualinvoke $r8.<android.media.AudioManagerInternal: void setStreamVolumeForUid(int,int,int,java.lang.String,int)>(i3, i0, i1, r1, i2);

        goto label5;

     label1:
        $i5 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType>;

        if $i5 == 2 goto label2;

        return;

     label2:
        $i6 = r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume>;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i6);

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $r2 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionCb mSessionCb>;

        virtualinvoke $r2.<com.android.server.media.MediaSessionRecord$SessionCb: void setVolumeTo(int)>(i14);

        $i8 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        if $i8 >= 0 goto label3;

        $i13 = r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume>;

        goto label4;

     label3:
        $i13 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

     label4:
        i15 = $i13;

        $i9 = r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume>;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i14, $i9);

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume> = $i10;

        $r3 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler>;

        $r4 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Runnable mClearOptimisticVolumeRunnable>;

        virtualinvoke $r3.<com.android.server.media.MediaSessionRecord$MessageHandler: void removeCallbacks(java.lang.Runnable)>($r4);

        $r5 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler>;

        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Runnable mClearOptimisticVolumeRunnable>;

        virtualinvoke $r5.<com.android.server.media.MediaSessionRecord$MessageHandler: boolean postDelayed(java.lang.Runnable,long)>($r6, 1000L);

        $i12 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        if i15 == $i12 goto label5;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushVolumeUpdate()>();

     label5:
        return;
    }

    public boolean isActive()
    {
        com.android.server.media.MediaSessionRecord r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mIsActive>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isPlaybackActive(boolean)
    {
        com.android.server.media.MediaSessionRecord r0;
        boolean z0, $z1;
        int i0, $i2;
        long l1, $l3, $l4;
        android.media.session.PlaybackState $r1, $r2;
        byte $b5;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        if $r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        $i2 = virtualinvoke $r2.<android.media.session.PlaybackState: int getState()>();

     label2:
        i0 = $i2;

        $z1 = staticinvoke <android.media.session.MediaSession: boolean isActiveState(int)>(i0);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        if z0 == 0 goto label4;

        if i0 != 2 goto label4;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<com.android.server.media.MediaSessionRecord: long mLastActiveTime>;

        l1 = $l3 - $l4;

        $b5 = l1 cmp 30000L;

        if $b5 >= 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public int getPlaybackType()
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeType>;

        return $i0;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.AudioAttributes $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs>;

        return $r1;
    }

    public int getVolumeControl()
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType>;

        return $i0;
    }

    public int getMaxVolume()
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume>;

        return $i0;
    }

    public int getCurrentVolume()
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume>;

        return $i0;
    }

    public int getOptimisticVolume()
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        return $i0;
    }

    public boolean isTransportControlEnabled()
    {
        com.android.server.media.MediaSessionRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $z0 = virtualinvoke r0.<com.android.server.media.MediaSessionRecord: boolean hasFlag(int)>(2);

        return $z0;
    }

    public void binderDied()
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionService $r1;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionService mService>;

        virtualinvoke $r1.<com.android.server.media.MediaSessionService: void sessionDied(com.android.server.media.MediaSessionRecord)>(r0);

        return;
    }

    public void onDestroy()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        com.android.server.media.MediaSessionRecord$MessageHandler $r4;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r3 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed> = 1;

        $r4 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler>;

        virtualinvoke $r4.<com.android.server.media.MediaSessionRecord$MessageHandler: void post(int)>(9);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.media.session.ISessionCallback getCallback()
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionRecord$SessionCb $r1;
        android.media.session.ISessionCallback $r2;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionCb mSessionCb>;

        $r2 = staticinvoke <com.android.server.media.MediaSessionRecord$SessionCb: android.media.session.ISessionCallback access$100(com.android.server.media.MediaSessionRecord$SessionCb)>($r1);

        return $r2;
    }

    public void sendMediaButton(android.view.KeyEvent, int, android.os.ResultReceiver)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.view.KeyEvent r1;
        int i0;
        android.os.ResultReceiver r2;
        com.android.server.media.MediaSessionRecord$SessionCb $r3;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        $r3 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionCb mSessionCb>;

        virtualinvoke $r3.<com.android.server.media.MediaSessionRecord$SessionCb: boolean sendMediaButton(android.view.KeyEvent,int,android.os.ResultReceiver)>(r1, i0, r2);

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, $r6, $r10, $r23, $r27, $r30, $r32, $r42, $r45, $r53, $r55, $r58, $r65, $r71, $r77, $r85, $r89, $r98, $r100;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r31, $r33, $r35, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r54, $r56, $r57, $r59, $r60, $r61, $r62, $r64, $r66, $r67, $r68, $r72, $r73, $r74, $r76, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r86, $r87, $r88, $r90, $r91, $r92, $r95, $r96, $r97, $r99, $r101;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.app.PendingIntent $r34, $r36;
        boolean $z0;
        long $l3;
        java.util.ArrayList $r63;
        android.media.session.PlaybackState $r69, $r70;
        android.media.AudioAttributes $r75;
        android.content.pm.ParceledListSlice $r93, $r103;
        java.lang.CharSequence $r94;
        java.util.List $r102;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mTag>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ownerPid=");

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mOwnerPid>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ownerUid=");

        $i1 = r0.<com.android.server.media.MediaSessionRecord: int mOwnerUid>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId=");

        $i2 = r0.<com.android.server.media.MediaSessionRecord: int mUserId>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package=");

        $r27 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mPackageName>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchIntent=");

        $r34 = r0.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent mLaunchIntent>;

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mediaButtonReceiver=");

        $r36 = r0.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent mMediaButtonReceiver>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("active=");

        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mIsActive>;

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flags=");

        $l3 = r0.<com.android.server.media.MediaSessionRecord: long mFlags>;

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r53 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rating type=");

        $i4 = r0.<com.android.server.media.MediaSessionRecord: int mRatingType>;

        $r56 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("controllers: ");

        $r63 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i5 = virtualinvoke $r63.<java.util.ArrayList: int size()>();

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r68 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state=");

        $r69 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        if $r69 != null goto label1;

        $r71 = null;

        goto label2;

     label1:
        $r70 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        $r71 = virtualinvoke $r70.<android.media.session.PlaybackState: java.lang.String toString()>();

     label2:
        $r64 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r76 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audioAttrs=");

        $r75 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r75);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r77);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("volumeType=");

        $i6 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeType>;

        $r83 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", controlType=");

        $i8 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType>;

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r79 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max=");

        $i7 = r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume>;

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current=");

        $i9 = r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume>;

        $r91 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r89 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r89);

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("metadata:");

        $r85 = specialinvoke r0.<com.android.server.media.MediaSessionRecord: java.lang.String getShortMetadataString()>();

        $r86 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r98 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r98);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queueTitle=");

        $r94 = r0.<com.android.server.media.MediaSessionRecord: java.lang.CharSequence mQueueTitle>;

        $r95 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r94);

        $r92 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size=");

        $r93 = r0.<com.android.server.media.MediaSessionRecord: android.content.pm.ParceledListSlice mQueue>;

        if $r93 != null goto label3;

        $i10 = 0;

        goto label4;

     label3:
        $r103 = r0.<com.android.server.media.MediaSessionRecord: android.content.pm.ParceledListSlice mQueue>;

        $r102 = virtualinvoke $r103.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $i10 = interfaceinvoke $r102.<java.util.List: int size()>();

     label4:
        $r101 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mPackageName>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mTag>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String getShortMetadataString()
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0, $i1;
        android.media.MediaDescription r1, $r6;
        android.media.MediaMetadata $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r2 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        if $r2 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        $i1 = virtualinvoke $r3.<android.media.MediaMetadata: int size()>();

     label2:
        i0 = $i1;

        $r4 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        if $r4 != null goto label3;

        $r6 = null;

        goto label4;

     label3:
        $r5 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        $r6 = virtualinvoke $r5.<android.media.MediaMetadata: android.media.MediaDescription getDescription()>();

     label4:
        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private void pushPlaybackStateUpdate()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r5, $r8;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r2;
        android.os.DeadObjectException r3, $r12;
        java.lang.Throwable r4, $r11;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r14;
        android.media.session.PlaybackState $r9;
        android.os.RemoteException $r10, r15;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.session.ISessionControllerCallback) $r8;

     label05:
        $r9 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        interfaceinvoke r2.<android.media.session.ISessionControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>($r9);

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removed dead callback in pushPlaybackStateUpdate.", r3);

        goto label09;

     label08:
        $r10 := @caughtexception;

        r15 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushPlaybackStateUpdate.", r15);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushMetadataUpdate()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r5, $r8;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r2;
        android.os.DeadObjectException r3, $r11;
        java.lang.Throwable r4, $r13;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r12;
        android.media.MediaMetadata $r9;
        android.os.RemoteException $r10, r15;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.session.ISessionControllerCallback) $r8;

     label05:
        $r9 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        interfaceinvoke r2.<android.media.session.ISessionControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>($r9);

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removing dead callback in pushMetadataUpdate. ", r3);

        $r12 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        goto label09;

     label08:
        $r10 := @caughtexception;

        r15 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushMetadataUpdate. ", r15);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushQueueUpdate()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r5, $r8;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r2;
        android.os.DeadObjectException r3, $r12;
        java.lang.Throwable r4, $r11;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r14;
        android.content.pm.ParceledListSlice $r9;
        android.os.RemoteException $r10, r15;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.session.ISessionControllerCallback) $r8;

     label05:
        $r9 = r0.<com.android.server.media.MediaSessionRecord: android.content.pm.ParceledListSlice mQueue>;

        interfaceinvoke r2.<android.media.session.ISessionControllerCallback: void onQueueChanged(android.content.pm.ParceledListSlice)>($r9);

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removed dead callback in pushQueueUpdate.", r3);

        goto label09;

     label08:
        $r10 := @caughtexception;

        r15 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushQueueUpdate.", r15);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushQueueTitleUpdate()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r5, $r8;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r2;
        android.os.DeadObjectException r3, $r11;
        java.lang.Throwable r4, $r14;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r13;
        java.lang.CharSequence $r9;
        android.os.RemoteException $r10, r15;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.session.ISessionControllerCallback) $r8;

     label05:
        $r9 = r0.<com.android.server.media.MediaSessionRecord: java.lang.CharSequence mQueueTitle>;

        interfaceinvoke r2.<android.media.session.ISessionControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>($r9);

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

        $r13 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removed dead callback in pushQueueTitleUpdate.", r3);

        goto label09;

     label08:
        $r10 := @caughtexception;

        r15 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushQueueTitleUpdate.", r15);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushExtrasUpdate()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r5, $r8;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r2;
        android.os.DeadObjectException r3, $r12;
        java.lang.Throwable r4, $r10;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r14;
        android.os.Bundle $r9;
        android.os.RemoteException $r11, r15;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.session.ISessionControllerCallback) $r8;

     label05:
        $r9 = r0.<com.android.server.media.MediaSessionRecord: android.os.Bundle mExtras>;

        interfaceinvoke r2.<android.media.session.ISessionControllerCallback: void onExtrasChanged(android.os.Bundle)>($r9);

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removed dead callback in pushExtrasUpdate.", r3);

        goto label09;

     label08:
        $r11 := @caughtexception;

        r15 = $r11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushExtrasUpdate.", r15);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushVolumeUpdate()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r6, $r10;
        android.media.session.ParcelableVolumeInfo r2;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r3;
        android.os.DeadObjectException r4, $r13;
        java.lang.Throwable r5, $r12;
        boolean $z0;
        com.android.server.media.MediaSessionRecord$ControllerStub $r7;
        java.util.ArrayList $r8, $r9;
        android.os.RemoteException $r11, r14;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r7 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$ControllerStub mController>;

        r2 = virtualinvoke $r7.<com.android.server.media.MediaSessionRecord$ControllerStub: android.media.session.ParcelableVolumeInfo getVolumeAttributes()>();

        $r8 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r9 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (android.media.session.ISessionControllerCallback) $r10;

     label05:
        interfaceinvoke r3.<android.media.session.ISessionControllerCallback: void onVolumeInfoChanged(android.media.session.ParcelableVolumeInfo)>(r2);

     label06:
        goto label09;

     label07:
        $r13 := @caughtexception;

        r4 = $r13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removing dead callback in pushVolumeUpdate. ", r4);

        goto label09;

     label08:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Unexpected exception in pushVolumeUpdate. ", r14);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r1;

     label13:
        throw r5;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushEvent(java.lang.String, android.os.Bundle)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.lang.Object r3, $r7, $r10;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r4;
        android.os.DeadObjectException r5, $r11;
        java.lang.Throwable r6, $r14;
        boolean $z0;
        java.util.ArrayList $r8, $r9, $r13;
        android.os.RemoteException $r15, r16;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r8 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r9 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (android.media.session.ISessionControllerCallback) $r10;

     label05:
        interfaceinvoke r4.<android.media.session.ISessionControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>(r1, r2);

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        r5 = $r11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removing dead callback in pushEvent.", r5);

        $r13 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        goto label09;

     label08:
        $r15 := @caughtexception;

        r16 = $r15;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushEvent.", r16);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        exitmonitor r3;

     label11:
        goto label14;

     label12:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r3;

     label13:
        throw r6;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushSessionDestroyed()
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object r1, $r5, $r9;
        int i0, $i1;
        android.media.session.ISessionControllerCallback r2;
        android.os.DeadObjectException r3, $r12;
        java.lang.Throwable r4, $r11;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r8, $r13;
        android.os.RemoteException $r10, r15;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label04:
        if i0 < 0 goto label10;

        $r8 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.session.ISessionControllerCallback) $r9;

     label05:
        interfaceinvoke r2.<android.media.session.ISessionControllerCallback: void onSessionDestroyed()>();

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        r3 = $r12;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "Removing dead callback in pushEvent.", r3);

        $r13 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        goto label09;

     label08:
        $r10 := @caughtexception;

        r15 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionRecord", "unexpected exception in pushEvent.", r15);

     label09:
        i0 = i0 + -1;

        goto label04;

     label10:
        $r7 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r1;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.DeadObjectException from label05 to label06 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private android.media.session.PlaybackState getStateWithUpdatedPosition()
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.session.PlaybackState r1, $r7, r13;
        long l0, l1, l2, $l5, $l6, $l7, l14;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r12;
        android.media.session.PlaybackState$Builder r4, $r8;
        android.media.MediaMetadata $r6, $r10, $r11;
        int $i3, $i10, $i11, $i12;
        byte $b4, $b8, $b9, $b13;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        l0 = -1L;

        $r5 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        $r6 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        if $r6 == null goto label02;

        $r11 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        $z0 = virtualinvoke $r11.<android.media.MediaMetadata: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z0 == 0 goto label02;

        $r10 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        l0 = virtualinvoke $r10.<android.media.MediaMetadata: long getLong(java.lang.String)>("android.media.metadata.DURATION");

     label02:
        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        r13 = null;

        if r1 == null goto label10;

        $i3 = virtualinvoke r1.<android.media.session.PlaybackState: int getState()>();

        if $i3 == 3 goto label07;

        $i11 = virtualinvoke r1.<android.media.session.PlaybackState: int getState()>();

        if $i11 == 4 goto label07;

        $i12 = virtualinvoke r1.<android.media.session.PlaybackState: int getState()>();

        if $i12 != 5 goto label10;

     label07:
        l14 = virtualinvoke r1.<android.media.session.PlaybackState: long getLastPositionUpdateTime()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b4 = l14 cmp 0L;

        if $b4 <= 0 goto label10;

        $f0 = virtualinvoke r1.<android.media.session.PlaybackState: float getPlaybackSpeed()>();

        $l5 = l1 - l14;

        $f2 = (float) $l5;

        $f1 = $f0 * $f2;

        $l7 = (long) $f1;

        $l6 = virtualinvoke r1.<android.media.session.PlaybackState: long getPosition()>();

        l2 = $l7 + $l6;

        $b9 = l0 cmp 0L;

        if $b9 < 0 goto label08;

        $b13 = l2 cmp l0;

        if $b13 <= 0 goto label08;

        l2 = l0;

        goto label09;

     label08:
        $b8 = l2 cmp 0L;

        if $b8 >= 0 goto label09;

        l2 = 0L;

     label09:
        $r8 = new android.media.session.PlaybackState$Builder;

        specialinvoke $r8.<android.media.session.PlaybackState$Builder: void <init>(android.media.session.PlaybackState)>(r1);

        r4 = $r8;

        $i10 = virtualinvoke r1.<android.media.session.PlaybackState: int getState()>();

        $f3 = virtualinvoke r1.<android.media.session.PlaybackState: float getPlaybackSpeed()>();

        virtualinvoke r4.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState$Builder setState(int,long,float,long)>($i10, l2, $f3, l1);

        r13 = virtualinvoke r4.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState build()>();

     label10:
        if r13 != null goto label11;

        $r7 = r1;

        goto label12;

     label11:
        $r7 = r13;

     label12:
        return $r7;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    private int getControllerCbIndexForCb(android.media.session.ISessionControllerCallback)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.session.ISessionControllerCallback r1, $r6;
        android.os.IBinder r2, $r7;
        int i0, $i1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaSessionRecord;

        r1 := @parameter0: android.media.session.ISessionControllerCallback;

        r2 = interfaceinvoke r1.<android.media.session.ISessionControllerCallback: android.os.IBinder asBinder()>();

        $r3 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (android.media.session.ISessionControllerCallback) $r5;

        $r7 = interfaceinvoke $r6.<android.media.session.ISessionControllerCallback: android.os.IBinder asBinder()>();

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return -1;
    }

    static int access$200(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume>;

        return $i0;
    }

    static int access$300(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume>;

        return $i0;
    }

    static int access$202(com.android.server.media.MediaSessionRecord, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        r0.<com.android.server.media.MediaSessionRecord: int mOptimisticVolume> = i0;

        return i0;
    }

    static void access$400(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushVolumeUpdate()>();

        return;
    }

    static com.android.server.media.MediaSessionService access$500(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionService $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionService mService>;

        return $r1;
    }

    static com.android.server.media.MediaSessionRecord$MessageHandler access$600(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionRecord$MessageHandler $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$MessageHandler mHandler>;

        return $r1;
    }

    static com.android.server.media.MediaSessionRecord$ControllerStub access$700(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionRecord$ControllerStub $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$ControllerStub mController>;

        return $r1;
    }

    static boolean access$802(com.android.server.media.MediaSessionRecord, boolean)
    {
        com.android.server.media.MediaSessionRecord r0;
        boolean z0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        z0 := @parameter1: boolean;

        r0.<com.android.server.media.MediaSessionRecord: boolean mIsActive> = z0;

        return z0;
    }

    static long access$902(com.android.server.media.MediaSessionRecord, long)
    {
        com.android.server.media.MediaSessionRecord r0;
        long l0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        l0 := @parameter1: long;

        r0.<com.android.server.media.MediaSessionRecord: long mFlags> = l0;

        return l0;
    }

    static android.app.PendingIntent access$1002(com.android.server.media.MediaSessionRecord, android.app.PendingIntent)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.app.PendingIntent r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.app.PendingIntent;

        r0.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent mMediaButtonReceiver> = r1;

        return r1;
    }

    static android.app.PendingIntent access$1102(com.android.server.media.MediaSessionRecord, android.app.PendingIntent)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.app.PendingIntent r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.app.PendingIntent;

        r0.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent mLaunchIntent> = r1;

        return r1;
    }

    static java.lang.Object access$1200(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.lang.Object mLock>;

        return $r1;
    }

    static android.media.MediaMetadata access$1302(com.android.server.media.MediaSessionRecord, android.media.MediaMetadata)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.MediaMetadata r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.media.MediaMetadata;

        r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata> = r1;

        return r1;
    }

    static android.media.session.PlaybackState access$1400(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.session.PlaybackState $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState>;

        return $r1;
    }

    static long access$1502(com.android.server.media.MediaSessionRecord, long)
    {
        com.android.server.media.MediaSessionRecord r0;
        long l0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        l0 := @parameter1: long;

        r0.<com.android.server.media.MediaSessionRecord: long mLastActiveTime> = l0;

        return l0;
    }

    static android.media.session.PlaybackState access$1402(com.android.server.media.MediaSessionRecord, android.media.session.PlaybackState)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.session.PlaybackState r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.media.session.PlaybackState;

        r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState mPlaybackState> = r1;

        return r1;
    }

    static android.content.pm.ParceledListSlice access$1602(com.android.server.media.MediaSessionRecord, android.content.pm.ParceledListSlice)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.content.pm.ParceledListSlice r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.content.pm.ParceledListSlice;

        r0.<com.android.server.media.MediaSessionRecord: android.content.pm.ParceledListSlice mQueue> = r1;

        return r1;
    }

    static java.lang.CharSequence access$1702(com.android.server.media.MediaSessionRecord, java.lang.CharSequence)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<com.android.server.media.MediaSessionRecord: java.lang.CharSequence mQueueTitle> = r1;

        return r1;
    }

    static android.os.Bundle access$1802(com.android.server.media.MediaSessionRecord, android.os.Bundle)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.os.Bundle r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.os.Bundle;

        r0.<com.android.server.media.MediaSessionRecord: android.os.Bundle mExtras> = r1;

        return r1;
    }

    static int access$1902(com.android.server.media.MediaSessionRecord, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        r0.<com.android.server.media.MediaSessionRecord: int mRatingType> = i0;

        return i0;
    }

    static int access$302(com.android.server.media.MediaSessionRecord, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        r0.<com.android.server.media.MediaSessionRecord: int mCurrentVolume> = i0;

        return i0;
    }

    static int access$2000(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeType>;

        return $i0;
    }

    static int access$2002(com.android.server.media.MediaSessionRecord, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        r0.<com.android.server.media.MediaSessionRecord: int mVolumeType> = i0;

        return i0;
    }

    static android.media.AudioAttributes access$2102(com.android.server.media.MediaSessionRecord, android.media.AudioAttributes)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.AudioAttributes r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.media.AudioAttributes;

        r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs> = r1;

        return r1;
    }

    static int access$2202(com.android.server.media.MediaSessionRecord, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType> = i0;

        return i0;
    }

    static int access$2302(com.android.server.media.MediaSessionRecord, int)
    {
        com.android.server.media.MediaSessionRecord r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume> = i0;

        return i0;
    }

    static com.android.server.media.MediaSessionRecord$SessionCb access$2400(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        com.android.server.media.MediaSessionRecord$SessionCb $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: com.android.server.media.MediaSessionRecord$SessionCb mSessionCb>;

        return $r1;
    }

    static boolean access$2500(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $z0 = r0.<com.android.server.media.MediaSessionRecord: boolean mDestroyed>;

        return $z0;
    }

    static int access$2600(com.android.server.media.MediaSessionRecord, android.media.session.ISessionControllerCallback)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.session.ISessionControllerCallback r1;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: android.media.session.ISessionControllerCallback;

        $i0 = specialinvoke r0.<com.android.server.media.MediaSessionRecord: int getControllerCbIndexForCb(android.media.session.ISessionControllerCallback)>(r1);

        return $i0;
    }

    static java.util.ArrayList access$2700(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.util.ArrayList mControllerCallbacks>;

        return $r1;
    }

    static java.lang.String access$2800(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mPackageName>;

        return $r1;
    }

    static java.lang.String access$2900(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.lang.String mTag>;

        return $r1;
    }

    static android.app.PendingIntent access$1100(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.app.PendingIntent $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent mLaunchIntent>;

        return $r1;
    }

    static long access$900(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        long $l0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $l0 = r0.<com.android.server.media.MediaSessionRecord: long mFlags>;

        return $l0;
    }

    static int access$2200(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mVolumeControlType>;

        return $i0;
    }

    static int access$2300(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mMaxVolume>;

        return $i0;
    }

    static android.media.AudioAttributes access$2100(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.AudioAttributes $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes mAudioAttrs>;

        return $r1;
    }

    static android.media.AudioManager access$3000(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    static android.media.MediaMetadata access$1300(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.MediaMetadata $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.media.MediaMetadata mMetadata>;

        return $r1;
    }

    static android.media.session.PlaybackState access$3100(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.media.session.PlaybackState $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = specialinvoke r0.<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState getStateWithUpdatedPosition()>();

        return $r1;
    }

    static android.content.pm.ParceledListSlice access$1600(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.content.pm.ParceledListSlice $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.content.pm.ParceledListSlice mQueue>;

        return $r1;
    }

    static java.lang.CharSequence access$1700(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: java.lang.CharSequence mQueueTitle>;

        return $r1;
    }

    static android.os.Bundle access$1800(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        android.os.Bundle $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r1 = r0.<com.android.server.media.MediaSessionRecord: android.os.Bundle mExtras>;

        return $r1;
    }

    static int access$1900(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        $i0 = r0.<com.android.server.media.MediaSessionRecord: int mRatingType>;

        return $i0;
    }

    static void access$3200(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushMetadataUpdate()>();

        return;
    }

    static void access$3300(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushPlaybackStateUpdate()>();

        return;
    }

    static void access$3400(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushQueueUpdate()>();

        return;
    }

    static void access$3500(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushQueueTitleUpdate()>();

        return;
    }

    static void access$3600(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushExtrasUpdate()>();

        return;
    }

    static void access$3700(com.android.server.media.MediaSessionRecord, java.lang.String, android.os.Bundle)
    {
        com.android.server.media.MediaSessionRecord r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushEvent(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    static void access$3800(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionRecord r0;

        r0 := @parameter0: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionRecord: void pushSessionDestroyed()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.media.MediaSessionRecord: int OPTIMISTIC_VOLUME_TIMEOUT> = 1000;

        <com.android.server.media.MediaSessionRecord: int ACTIVE_BUFFER> = 30000;

        <com.android.server.media.MediaSessionRecord: boolean DEBUG> = 0;

        <com.android.server.media.MediaSessionRecord: java.lang.String TAG> = "MediaSessionRecord";

        return;
    }
}
