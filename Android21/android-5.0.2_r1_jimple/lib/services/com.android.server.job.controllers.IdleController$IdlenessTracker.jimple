class com.android.server.job.controllers.IdleController$IdlenessTracker extends android.content.BroadcastReceiver
{
    private android.app.AlarmManager mAlarm;
    private android.app.PendingIntent mIdleTriggerIntent;
    boolean mIdle;
    final com.android.server.job.controllers.IdleController this$0;

    public void <init>(com.android.server.job.controllers.IdleController)
    {
        com.android.server.job.controllers.IdleController$IdlenessTracker r0;
        com.android.server.job.controllers.IdleController r1;
        android.content.Intent r2, $r6, $r7;
        android.content.Context $r3, $r8;
        java.lang.Object $r4;
        android.app.AlarmManager $r5;
        android.app.PendingIntent $r9;

        r0 := @this: com.android.server.job.controllers.IdleController$IdlenessTracker;

        r1 := @parameter0: com.android.server.job.controllers.IdleController;

        r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: com.android.server.job.controllers.IdleController this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r3 = r1.<com.android.server.job.controllers.IdleController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r5 = (android.app.AlarmManager) $r4;

        r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: android.app.AlarmManager mAlarm> = $r5;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.task.controllers.IdleController.ACTION_TRIGGER_IDLE");

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("android");

        r2 = virtualinvoke $r7.<android.content.Intent: android.content.Intent setFlags(int)>(1073741824);

        $r8 = r1.<com.android.server.job.controllers.IdleController: android.content.Context mContext>;

        $r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r8, 0, r2, 0);

        r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: android.app.PendingIntent mIdleTriggerIntent> = $r9;

        r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle> = 0;

        return;
    }

    public boolean isIdle()
    {
        com.android.server.job.controllers.IdleController$IdlenessTracker r0;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.IdleController$IdlenessTracker;

        $z0 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle>;

        return $z0;
    }

    public void startTracking()
    {
        com.android.server.job.controllers.IdleController$IdlenessTracker r0;
        android.content.IntentFilter r1, $r2;
        com.android.server.job.controllers.IdleController $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.job.controllers.IdleController$IdlenessTracker;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DREAMING_STARTED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DREAMING_STOPPED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.task.controllers.IdleController.ACTION_TRIGGER_IDLE");

        $r3 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: com.android.server.job.controllers.IdleController this$0>;

        $r4 = $r3.<com.android.server.job.controllers.IdleController: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, r1);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.job.controllers.IdleController$IdlenessTracker r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.String r3;
        long l0, l1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.app.PendingIntent $r4, $r8;
        android.app.AlarmManager $r5, $r7;
        com.android.server.job.controllers.IdleController $r6, $r9;

        r0 := @this: com.android.server.job.controllers.IdleController$IdlenessTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_ON");

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DREAMING_STOPPED");

        if $z3 == 0 goto label2;

     label1:
        $z1 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle>;

        if $z1 == 0 goto label5;

        $r5 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: android.app.AlarmManager mAlarm>;

        $r4 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: android.app.PendingIntent mIdleTriggerIntent>;

        virtualinvoke $r5.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r4);

        r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle> = 0;

        $r6 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: com.android.server.job.controllers.IdleController this$0>;

        $z2 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle>;

        virtualinvoke $r6.<com.android.server.job.controllers.IdleController: void reportNewIdleState(boolean)>($z2);

        goto label5;

     label2:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_OFF");

        if $z4 != 0 goto label3;

        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DREAMING_STARTED");

        if $z6 == 0 goto label4;

     label3:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = l0 + 4260000L;

        $r7 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: android.app.AlarmManager mAlarm>;

        $r8 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: android.app.PendingIntent mIdleTriggerIntent>;

        virtualinvoke $r7.<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>(2, l1, 300000L, $r8);

        goto label5;

     label4:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("com.android.server.task.controllers.IdleController.ACTION_TRIGGER_IDLE");

        if $z5 == 0 goto label5;

        $z8 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle>;

        if $z8 != 0 goto label5;

        r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle> = 1;

        $r9 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: com.android.server.job.controllers.IdleController this$0>;

        $z7 = r0.<com.android.server.job.controllers.IdleController$IdlenessTracker: boolean mIdle>;

        virtualinvoke $r9.<com.android.server.job.controllers.IdleController: void reportNewIdleState(boolean)>($z7);

     label5:
        return;
    }
}
