class com.android.server.wm.DragState extends java.lang.Object
{
    final com.android.server.wm.WindowManagerService mService;
    android.os.IBinder mToken;
    android.view.SurfaceControl mSurfaceControl;
    int mFlags;
    android.os.IBinder mLocalWin;
    android.content.ClipData mData;
    android.content.ClipDescription mDataDescription;
    boolean mDragResult;
    float mCurrentX;
    float mCurrentY;
    float mThumbOffsetX;
    float mThumbOffsetY;
    android.view.InputChannel mServerChannel;
    android.view.InputChannel mClientChannel;
    com.android.server.wm.WindowManagerService$DragInputEventReceiver mInputEventReceiver;
    com.android.server.input.InputApplicationHandle mDragApplicationHandle;
    com.android.server.input.InputWindowHandle mDragWindowHandle;
    com.android.server.wm.WindowState mTargetWindow;
    java.util.ArrayList mNotifiedWindows;
    boolean mDragInProgress;
    android.view.Display mDisplay;
    private final android.graphics.Region mTmpRegion;

    void <init>(com.android.server.wm.WindowManagerService, android.os.IBinder, android.view.SurfaceControl, int, android.os.IBinder)
    {
        com.android.server.wm.DragState r0;
        com.android.server.wm.WindowManagerService r1;
        android.os.IBinder r2, r4;
        android.view.SurfaceControl r3;
        int i0;
        android.graphics.Region $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.android.server.wm.DragState;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.view.SurfaceControl;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.graphics.Region;

        specialinvoke $r5.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.DragState: android.graphics.Region mTmpRegion> = $r5;

        r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.DragState: android.os.IBinder mToken> = r2;

        r0.<com.android.server.wm.DragState: android.view.SurfaceControl mSurfaceControl> = r3;

        r0.<com.android.server.wm.DragState: int mFlags> = i0;

        r0.<com.android.server.wm.DragState: android.os.IBinder mLocalWin> = r4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows> = $r6;

        return;
    }

    void reset()
    {
        com.android.server.wm.DragState r0;
        android.view.SurfaceControl $r1, $r2;

        r0 := @this: com.android.server.wm.DragState;

        $r1 = r0.<com.android.server.wm.DragState: android.view.SurfaceControl mSurfaceControl>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.DragState: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl: void destroy()>();

     label1:
        r0.<com.android.server.wm.DragState: android.view.SurfaceControl mSurfaceControl> = null;

        r0.<com.android.server.wm.DragState: int mFlags> = 0;

        r0.<com.android.server.wm.DragState: android.os.IBinder mLocalWin> = null;

        r0.<com.android.server.wm.DragState: android.os.IBinder mToken> = null;

        r0.<com.android.server.wm.DragState: android.content.ClipData mData> = null;

        r0.<com.android.server.wm.DragState: float mThumbOffsetY> = 0.0F;

        r0.<com.android.server.wm.DragState: float mThumbOffsetX> = 0.0F;

        r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows> = null;

        return;
    }

    void register(android.view.Display)
    {
        com.android.server.wm.DragState r0;
        android.view.Display r1, $r22, $r42;
        android.view.InputChannel[] r2;
        android.graphics.Point r3, $r43;
        android.view.InputChannel $r4, $r5, $r6, $r8, $r16, $r23;
        com.android.server.wm.WindowManagerService $r7, $r11, $r13, $r48;
        com.android.server.input.InputManagerService $r9;
        com.android.server.wm.WindowManagerService$DragInputEventReceiver $r10;
        com.android.server.wm.WindowManagerService$H $r14;
        android.os.Looper $r15;
        com.android.server.input.InputApplicationHandle $r17, $r18, $r20, $r21;
        com.android.server.input.InputWindowHandle $r19, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r44, $r45, $r46, $r47;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Region $r39;

        r0 := @this: com.android.server.wm.DragState;

        r1 := @parameter0: android.view.Display;

        r0.<com.android.server.wm.DragState: android.view.Display mDisplay> = r1;

        $r4 = r0.<com.android.server.wm.DragState: android.view.InputChannel mClientChannel>;

        if $r4 == null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "Duplicate register of drag input channel");

        goto label2;

     label1:
        r2 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>("drag");

        $r5 = r2[0];

        r0.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel> = $r5;

        $r6 = r2[1];

        r0.<com.android.server.wm.DragState: android.view.InputChannel mClientChannel> = $r6;

        $r7 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r8 = r0.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel>;

        virtualinvoke $r9.<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,com.android.server.input.InputWindowHandle)>($r8, null);

        $r10 = new com.android.server.wm.WindowManagerService$DragInputEventReceiver;

        $r11 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = r0.<com.android.server.wm.DragState: android.view.InputChannel mClientChannel>;

        $r13 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r14 = $r13.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.WindowManagerService$H: android.os.Looper getLooper()>();

        specialinvoke $r10.<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void <init>(com.android.server.wm.WindowManagerService,android.view.InputChannel,android.os.Looper)>($r11, $r16, $r15);

        r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService$DragInputEventReceiver mInputEventReceiver> = $r10;

        $r18 = new com.android.server.input.InputApplicationHandle;

        specialinvoke $r18.<com.android.server.input.InputApplicationHandle: void <init>(java.lang.Object)>(null);

        r0.<com.android.server.wm.DragState: com.android.server.input.InputApplicationHandle mDragApplicationHandle> = $r18;

        $r17 = r0.<com.android.server.wm.DragState: com.android.server.input.InputApplicationHandle mDragApplicationHandle>;

        $r17.<com.android.server.input.InputApplicationHandle: java.lang.String name> = "drag";

        $r20 = r0.<com.android.server.wm.DragState: com.android.server.input.InputApplicationHandle mDragApplicationHandle>;

        $r20.<com.android.server.input.InputApplicationHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r19 = new com.android.server.input.InputWindowHandle;

        $r21 = r0.<com.android.server.wm.DragState: com.android.server.input.InputApplicationHandle mDragApplicationHandle>;

        $r22 = r0.<com.android.server.wm.DragState: android.view.Display mDisplay>;

        $i0 = virtualinvoke $r22.<android.view.Display: int getDisplayId()>();

        specialinvoke $r19.<com.android.server.input.InputWindowHandle: void <init>(com.android.server.input.InputApplicationHandle,java.lang.Object,int)>($r21, null, $i0);

        r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle> = $r19;

        $r24 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r24.<com.android.server.input.InputWindowHandle: java.lang.String name> = "drag";

        $r26 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r23 = r0.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel>;

        $r26.<com.android.server.input.InputWindowHandle: android.view.InputChannel inputChannel> = $r23;

        $r25 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $i1 = virtualinvoke r0.<com.android.server.wm.DragState: int getDragLayerLw()>();

        $r25.<com.android.server.input.InputWindowHandle: int layer> = $i1;

        $r27 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r27.<com.android.server.input.InputWindowHandle: int layoutParamsFlags> = 0;

        $r30 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r30.<com.android.server.input.InputWindowHandle: int layoutParamsPrivateFlags> = 0;

        $r31 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r31.<com.android.server.input.InputWindowHandle: int layoutParamsType> = 2016;

        $r28 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r28.<com.android.server.input.InputWindowHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r29 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r29.<com.android.server.input.InputWindowHandle: boolean visible> = 1;

        $r34 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r34.<com.android.server.input.InputWindowHandle: boolean canReceiveKeys> = 0;

        $r35 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r35.<com.android.server.input.InputWindowHandle: boolean hasFocus> = 1;

        $r32 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r32.<com.android.server.input.InputWindowHandle: boolean hasWallpaper> = 0;

        $r33 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r33.<com.android.server.input.InputWindowHandle: boolean paused> = 0;

        $r37 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        $r37.<com.android.server.input.InputWindowHandle: int ownerPid> = $i3;

        $r36 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r36.<com.android.server.input.InputWindowHandle: int ownerUid> = $i2;

        $r40 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r40.<com.android.server.input.InputWindowHandle: int inputFeatures> = 0;

        $r41 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r41.<com.android.server.input.InputWindowHandle: float scaleFactor> = 1.0F;

        $r38 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r39 = $r38.<com.android.server.input.InputWindowHandle: android.graphics.Region touchableRegion>;

        virtualinvoke $r39.<android.graphics.Region: void setEmpty()>();

        $r45 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r45.<com.android.server.input.InputWindowHandle: int frameLeft> = 0;

        $r44 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $r44.<com.android.server.input.InputWindowHandle: int frameTop> = 0;

        $r43 = new android.graphics.Point;

        specialinvoke $r43.<android.graphics.Point: void <init>()>();

        r3 = $r43;

        $r42 = r0.<com.android.server.wm.DragState: android.view.Display mDisplay>;

        virtualinvoke $r42.<android.view.Display: void getRealSize(android.graphics.Point)>(r3);

        $r47 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $i5 = r3.<android.graphics.Point: int x>;

        $r47.<com.android.server.input.InputWindowHandle: int frameRight> = $i5;

        $r46 = r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle>;

        $i4 = r3.<android.graphics.Point: int y>;

        $r46.<com.android.server.input.InputWindowHandle: int frameBottom> = $i4;

        $r48 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r48.<com.android.server.wm.WindowManagerService: void pauseRotationLocked()>();

     label2:
        return;
    }

    void unregister()
    {
        com.android.server.wm.DragState r0;
        android.view.InputChannel $r1, $r3, $r6, $r7;
        com.android.server.wm.WindowManagerService $r2, $r8;
        com.android.server.input.InputManagerService $r4;
        com.android.server.wm.WindowManagerService$DragInputEventReceiver $r5;

        r0 := @this: com.android.server.wm.DragState;

        $r1 = r0.<com.android.server.wm.DragState: android.view.InputChannel mClientChannel>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "Unregister of nonexistent drag input channel");

        goto label2;

     label1:
        $r2 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r3 = r0.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel>;

        virtualinvoke $r4.<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>($r3);

        $r5 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService$DragInputEventReceiver mInputEventReceiver>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void dispose()>();

        r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService$DragInputEventReceiver mInputEventReceiver> = null;

        $r6 = r0.<com.android.server.wm.DragState: android.view.InputChannel mClientChannel>;

        virtualinvoke $r6.<android.view.InputChannel: void dispose()>();

        $r7 = r0.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel>;

        virtualinvoke $r7.<android.view.InputChannel: void dispose()>();

        r0.<com.android.server.wm.DragState: android.view.InputChannel mClientChannel> = null;

        r0.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel> = null;

        r0.<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle mDragWindowHandle> = null;

        r0.<com.android.server.wm.DragState: com.android.server.input.InputApplicationHandle mDragApplicationHandle> = null;

        $r8 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void resumeRotationLocked()>();

     label2:
        return;
    }

    int getDragLayerLw()
    {
        com.android.server.wm.DragState r0;
        com.android.server.wm.WindowManagerService $r1;
        android.view.WindowManagerPolicy $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.wm.DragState;

        $r1 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = interfaceinvoke $r2.<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>(2016);

        $i1 = $i0 * 10000;

        $i2 = $i1 + 1000;

        return $i2;
    }

    void broadcastDragStartedLw(float, float)
    {
        com.android.server.wm.DragState r0;
        float f0, f1;
        com.android.server.wm.WindowList r1;
        int i0, i1;
        android.content.ClipData $r2, $r9;
        java.util.ArrayList $r3;
        android.view.Display $r4;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Object $r6;
        android.content.ClipDescription $r7, $r10;
        com.android.server.wm.WindowState $r8;

        r0 := @this: com.android.server.wm.DragState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<com.android.server.wm.DragState: android.content.ClipData mData>;

        if $r2 == null goto label1;

        $r9 = r0.<com.android.server.wm.DragState: android.content.ClipData mData>;

        $r10 = virtualinvoke $r9.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        goto label2;

     label1:
        $r10 = null;

     label2:
        r0.<com.android.server.wm.DragState: android.content.ClipDescription mDataDescription> = $r10;

        $r3 = r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        r0.<com.android.server.wm.DragState: boolean mDragInProgress> = 1;

        $r5 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r4 = r0.<com.android.server.wm.DragState: android.view.Display mDisplay>;

        r1 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)>($r4);

        if r1 == null goto label4;

        i0 = virtualinvoke r1.<com.android.server.wm.WindowList: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r6 = virtualinvoke r1.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.wm.WindowState) $r6;

        $r7 = r0.<com.android.server.wm.DragState: android.content.ClipDescription mDataDescription>;

        specialinvoke r0.<com.android.server.wm.DragState: void sendDragStartedLw(com.android.server.wm.WindowState,float,float,android.content.ClipDescription)>($r8, f0, f1, $r7);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void sendDragStartedLw(com.android.server.wm.WindowState, float, float, android.content.ClipDescription)
    {
        com.android.server.wm.DragState r0;
        com.android.server.wm.WindowState r1;
        float f0, f1;
        android.content.ClipDescription r2;
        android.os.IBinder r3, $r10;
        java.lang.Throwable r5, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean $z0, $z1;
        android.view.IWindow $r6, $r9;
        java.util.ArrayList $r7;
        com.android.server.wm.Session $r8, $r16, $r17;
        java.lang.StringBuilder $r11, $r13, $r15;
        android.os.RemoteException $r12;
        java.lang.String $r14;
        android.view.DragEvent r19;

        r0 := @this: com.android.server.wm.DragState;

        r1 := @parameter0: com.android.server.wm.WindowState;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.content.ClipDescription;

        $i0 = r0.<com.android.server.wm.DragState: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r9 = r1.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        r3 = interfaceinvoke $r9.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r10 = r0.<com.android.server.wm.DragState: android.os.IBinder mLocalWin>;

        if r3 == $r10 goto label1;

        return;

     label1:
        $z0 = r0.<com.android.server.wm.DragState: boolean mDragInProgress>;

        if $z0 == 0 goto label9;

        $z1 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isPotentialDragTarget()>();

        if $z1 == 0 goto label9;

        r19 = staticinvoke <com.android.server.wm.DragState: android.view.DragEvent obtainDragEvent(com.android.server.wm.WindowState,int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>(r1, 1, f0, f1, null, r2, null, 0);

     label2:
        $r6 = r1.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r6.<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>(r19);

        $r7 = r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        $i2 = staticinvoke <android.os.Process: int myPid()>();

        $r8 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i3 = $r8.<com.android.server.wm.Session: int mPid>;

        if $i2 == $i3 goto label9;

        virtualinvoke r19.<android.view.DragEvent: void recycle()>();

        goto label9;

     label4:
        $r12 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to drag-start window ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r14);

     label5:
        $i4 = staticinvoke <android.os.Process: int myPid()>();

        $r16 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i6 = $r16.<com.android.server.wm.Session: int mPid>;

        if $i4 == $i6 goto label9;

        virtualinvoke r19.<android.view.DragEvent: void recycle()>();

        goto label9;

     label6:
        $r18 := @caughtexception;

        r5 = $r18;

     label7:
        $i8 = staticinvoke <android.os.Process: int myPid()>();

        $r17 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i7 = $r17.<com.android.server.wm.Session: int mPid>;

        if $i8 == $i7 goto label8;

        virtualinvoke r19.<android.view.DragEvent: void recycle()>();

     label8:
        throw r5;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void sendDragStartedIfNeededLw(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DragState r0;
        com.android.server.wm.WindowState r1, r3;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        android.content.ClipDescription $r5;
        float $f0, $f1;
        java.lang.Object $r6;

        r0 := @this: com.android.server.wm.DragState;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.DragState: boolean mDragInProgress>;

        if $z0 == 0 goto label4;

        $r4 = r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.wm.WindowState) $r6;

        if r3 != r1 goto label2;

        return;

     label2:
        goto label1;

     label3:
        $f1 = r0.<com.android.server.wm.DragState: float mCurrentX>;

        $f0 = r0.<com.android.server.wm.DragState: float mCurrentY>;

        $r5 = r0.<com.android.server.wm.DragState: android.content.ClipDescription mDataDescription>;

        specialinvoke r0.<com.android.server.wm.DragState: void sendDragStartedLw(com.android.server.wm.WindowState,float,float,android.content.ClipDescription)>(r1, $f1, $f0, $r5);

     label4:
        return;
    }

    void broadcastDragEndedLw()
    {
        com.android.server.wm.DragState r0;
        android.view.DragEvent r1;
        java.util.Iterator r2;
        com.android.server.wm.WindowState r3;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;
        android.view.IWindow $r8;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.wm.DragState;

        $z0 = r0.<com.android.server.wm.DragState: boolean mDragResult>;

        r1 = staticinvoke <android.view.DragEvent: android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>(4, 0.0F, 0.0F, null, null, null, $z0);

        $r5 = r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.wm.WindowState) $r7;

     label2:
        $r8 = r3.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r8.<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>(r1);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to drag-end window ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r13);

     label5:
        goto label1;

     label6:
        $r6 = r0.<com.android.server.wm.DragState: java.util.ArrayList mNotifiedWindows>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        r0.<com.android.server.wm.DragState: boolean mDragInProgress> = 0;

        virtualinvoke r1.<android.view.DragEvent: void recycle()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void endDragLw()
    {
        com.android.server.wm.DragState r0, $r2, $r4, $r8;
        com.android.server.wm.WindowManagerService $r1, $r3, $r5, $r7, $r9;
        com.android.server.wm.InputMonitor $r6;

        r0 := @this: com.android.server.wm.DragState;

        $r1 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r2.<com.android.server.wm.DragState: void broadcastDragEndedLw()>();

        $r3 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r4.<com.android.server.wm.DragState: void unregister()>();

        $r5 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r6.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        $r7 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r8.<com.android.server.wm.DragState: void reset()>();

        $r9 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState> = null;

        return;
    }

    void notifyMoveLw(float, float)
    {
        com.android.server.wm.DragState r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable r1, $r16;
        android.os.IBinder r2, $r15;
        android.view.SurfaceControl $r3;
        com.android.server.wm.WindowState $r4, $r7, $r8, $r9, $r10, r17;
        android.view.IWindow $r5, $r11, $r13;
        com.android.server.wm.Session $r6, $r12;
        android.os.RemoteException $r14;
        android.view.DragEvent r18, r19;

        r0 := @this: com.android.server.wm.DragState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.view.SurfaceControl: void openTransaction()>();

     label01:
        $r3 = r0.<com.android.server.wm.DragState: android.view.SurfaceControl mSurfaceControl>;

        $f2 = r0.<com.android.server.wm.DragState: float mThumbOffsetX>;

        $f5 = f0 - $f2;

        $f3 = r0.<com.android.server.wm.DragState: float mThumbOffsetY>;

        $f4 = f1 - $f3;

        virtualinvoke $r3.<android.view.SurfaceControl: void setPosition(float,float)>($f5, $f4);

     label02:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        goto label05;

     label03:
        $r16 := @caughtexception;

        r1 = $r16;

     label04:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        throw r1;

     label05:
        r17 = specialinvoke r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState getTouchedWinAtPointLw(float,float)>(f0, f1);

        if r17 != null goto label06;

        return;

     label06:
        $i1 = r0.<com.android.server.wm.DragState: int mFlags>;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label07;

        $r13 = r17.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        r2 = interfaceinvoke $r13.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r15 = r0.<com.android.server.wm.DragState: android.os.IBinder mLocalWin>;

        if r2 == $r15 goto label07;

        r17 = null;

     label07:
        $r4 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState mTargetWindow>;

        if r17 == $r4 goto label08;

        $r8 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState mTargetWindow>;

        if $r8 == null goto label08;

        $r7 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState mTargetWindow>;

        r18 = staticinvoke <com.android.server.wm.DragState: android.view.DragEvent obtainDragEvent(com.android.server.wm.WindowState,int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>($r7, 6, f0, f1, null, null, null, 0);

        $r9 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState mTargetWindow>;

        $r11 = $r9.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r11.<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>(r18);

        $r10 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState mTargetWindow>;

        $r12 = $r10.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i4 = $r12.<com.android.server.wm.Session: int mPid>;

        if i0 == $i4 goto label08;

        virtualinvoke r18.<android.view.DragEvent: void recycle()>();

     label08:
        if r17 == null goto label09;

        r19 = staticinvoke <com.android.server.wm.DragState: android.view.DragEvent obtainDragEvent(com.android.server.wm.WindowState,int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>(r17, 2, f0, f1, null, null, null, 0);

        $r5 = r17.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r5.<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>(r19);

        $r6 = r17.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i3 = $r6.<com.android.server.wm.Session: int mPid>;

        if i0 == $i3 goto label09;

        virtualinvoke r19.<android.view.DragEvent: void recycle()>();

     label09:
        goto label11;

     label10:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "can\'t send drag notification to windows");

     label11:
        r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState mTargetWindow> = r17;

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch android.os.RemoteException from label07 to label09 with label10;
    }

    boolean notifyDropLw(float, float)
    {
        com.android.server.wm.DragState r0;
        float f0, f1;
        com.android.server.wm.WindowState r1;
        int i0, $i1, $i2, $i3;
        android.os.IBinder r2;
        android.view.DragEvent r3;
        android.os.Message r4;
        boolean z0;
        java.lang.Throwable r5, $r16;
        android.view.IWindow $r6, $r9;
        android.content.ClipData $r7;
        com.android.server.wm.WindowManagerService $r8, $r10, $r14;
        com.android.server.wm.WindowManagerService$H $r11, $r12, $r13;
        com.android.server.wm.Session $r15, $r17, $r23;
        java.lang.StringBuilder $r18, $r20, $r22;
        android.os.RemoteException $r19;
        java.lang.String $r21;

        r0 := @this: com.android.server.wm.DragState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = specialinvoke r0.<com.android.server.wm.DragState: com.android.server.wm.WindowState getTouchedWinAtPointLw(float,float)>(f0, f1);

        if r1 != null goto label01;

        r0.<com.android.server.wm.DragState: boolean mDragResult> = 0;

        return 1;

     label01:
        i0 = staticinvoke <android.os.Process: int myPid()>();

        $r6 = r1.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        r2 = interfaceinvoke $r6.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r7 = r0.<com.android.server.wm.DragState: android.content.ClipData mData>;

        r3 = staticinvoke <com.android.server.wm.DragState: android.view.DragEvent obtainDragEvent(com.android.server.wm.WindowState,int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>(r1, 3, f0, f1, null, null, $r7, 0);

     label02:
        $r9 = r1.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r9.<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>(r3);

        $r8 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r11 = $r8.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        virtualinvoke $r11.<com.android.server.wm.WindowManagerService$H: void removeMessages(int,java.lang.Object)>(21, r2);

        $r10 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r12 = $r10.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        r4 = virtualinvoke $r12.<com.android.server.wm.WindowManagerService$H: android.os.Message obtainMessage(int,java.lang.Object)>(21, r2);

        $r14 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r13 = $r14.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        virtualinvoke $r13.<com.android.server.wm.WindowManagerService$H: boolean sendMessageDelayed(android.os.Message,long)>(r4, 5000L);

     label03:
        $r15 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i1 = $r15.<com.android.server.wm.Session: int mPid>;

        if i0 == $i1 goto label10;

        virtualinvoke r3.<android.view.DragEvent: void recycle()>();

        goto label10;

     label04:
        $r19 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t send drop notification to win ");

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r21);

        z0 = 1;

     label05:
        $r23 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i3 = $r23.<com.android.server.wm.Session: int mPid>;

        if i0 == $i3 goto label06;

        virtualinvoke r3.<android.view.DragEvent: void recycle()>();

     label06:
        return z0;

     label07:
        $r16 := @caughtexception;

        r5 = $r16;

     label08:
        $r17 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i2 = $r17.<com.android.server.wm.Session: int mPid>;

        if i0 == $i2 goto label09;

        virtualinvoke r3.<android.view.DragEvent: void recycle()>();

     label09:
        throw r5;

     label10:
        r0.<com.android.server.wm.DragState: android.os.IBinder mToken> = r2;

        return 0;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private com.android.server.wm.WindowState getTouchedWinAtPointLw(float, float)
    {
        com.android.server.wm.DragState r0;
        float f0, f1;
        com.android.server.wm.WindowState r1, r3;
        int i0, i1, i2, i3, i4, i5, $i6;
        com.android.server.wm.WindowList r2;
        android.view.Display $r4;
        com.android.server.wm.WindowManagerService $r5;
        android.view.WindowManager$LayoutParams $r6;
        java.lang.Object $r7;
        boolean $z0, $z1;
        android.graphics.Region $r8, $r9;

        r0 := @this: com.android.server.wm.DragState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = null;

        i0 = (int) f0;

        i1 = (int) f1;

        $r5 = r0.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r4 = r0.<com.android.server.wm.DragState: android.view.Display mDisplay>;

        r2 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)>($r4);

        if r2 != null goto label1;

        return null;

     label1:
        i2 = virtualinvoke r2.<com.android.server.wm.WindowList: int size()>();

        i3 = i2 - 1;

     label2:
        if i3 < 0 goto label7;

        $r7 = virtualinvoke r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.wm.WindowState) $r7;

        $r6 = r3.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i4 = $r6.<android.view.WindowManager$LayoutParams: int flags>;

        $z0 = virtualinvoke r3.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z0 != 0 goto label3;

        goto label6;

     label3:
        $i6 = i4 & 16;

        if $i6 == 0 goto label4;

        goto label6;

     label4:
        $r9 = r0.<com.android.server.wm.DragState: android.graphics.Region mTmpRegion>;

        virtualinvoke r3.<com.android.server.wm.WindowState: void getTouchableRegion(android.graphics.Region)>($r9);

        i5 = i4 & 40;

        $r8 = r0.<com.android.server.wm.DragState: android.graphics.Region mTmpRegion>;

        $z1 = virtualinvoke $r8.<android.graphics.Region: boolean contains(int,int)>(i0, i1);

        if $z1 != 0 goto label5;

        if i5 != 0 goto label6;

     label5:
        r1 = r3;

        goto label7;

     label6:
        i3 = i3 + -1;

        goto label2;

     label7:
        return r1;
    }

    private static android.view.DragEvent obtainDragEvent(com.android.server.wm.WindowState, int, float, float, java.lang.Object, android.content.ClipDescription, android.content.ClipData, boolean)
    {
        com.android.server.wm.WindowState r0;
        int i0, $i1, $i2;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        java.lang.Object r1;
        android.content.ClipDescription r2;
        android.content.ClipData r3;
        boolean z0, $z1;
        android.graphics.Rect $r4, $r5;
        android.view.DragEvent $r6;

        r0 := @parameter0: com.android.server.wm.WindowState;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        r1 := @parameter4: java.lang.Object;

        r2 := @parameter5: android.content.ClipDescription;

        r3 := @parameter6: android.content.ClipData;

        z0 := @parameter7: boolean;

        $r4 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $f4 = (float) $i1;

        f2 = f0 - $f4;

        $r5 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i2 = $r5.<android.graphics.Rect: int top>;

        $f5 = (float) $i2;

        f3 = f1 - $f5;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z1 == 0 goto label1;

        $f7 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        f2 = f2 * $f7;

        $f6 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        f3 = f3 * $f6;

     label1:
        $r6 = staticinvoke <android.view.DragEvent: android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>(i0, f2, f3, r1, r2, r3, z0);

        return $r6;
    }
}
