final class com.android.server.hdmi.NewDeviceAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    static final int STATE_WAITING_FOR_SET_OSD_NAME;
    static final int STATE_WAITING_FOR_DEVICE_VENDOR_ID;
    private final int mDeviceLogicalAddress;
    private final int mDevicePhysicalAddress;
    private int mVendorId;
    private java.lang.String mDisplayName;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int, int)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0, i1;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress> = i0;

        r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress> = i1;

        r0.<com.android.server.hdmi.NewDeviceAction: int mVendorId> = 16777215;

        return;
    }

    public boolean start()
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r0.<com.android.server.hdmi.NewDeviceAction: int mState> = 1;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $z0 = specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: boolean mayProcessCommandIfCached(int,int)>($i0, 71);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: int getSourceAddress()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveOsdNameCommand(int,int)>($i1, $i2);

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addTimer(int,int)>($i3, 2000);

        return 1;
    }

    public boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int i0, i1, $i2, $i3, $i4, $i6;
        byte[] r2;
        java.io.UnsupportedEncodingException r3, $r6;
        byte $b5, $b7;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r7, $r8;
        short s9, s10;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        i1 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        if $i2 == i1 goto label01;

        return 0;

     label01:
        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i3 != 1 goto label08;

        if i0 != 71 goto label06;

     label02:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "US-ASCII");

        r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName> = $r4;

     label03:
        goto label05;

     label04:
        $r6 := @caughtexception;

        r3 = $r6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get OSD name: ");

        $r9 = virtualinvoke r3.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NewDeviceAction", $r10);

     label05:
        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId()>();

        return 1;

     label06:
        if i0 != 0 goto label10;

        $b7 = r2[0];

        s9 = $b7 & 255;

        if s9 != 70 goto label07;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId()>();

        return 1;

     label07:
        goto label10;

     label08:
        $i4 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i4 != 2 goto label10;

        if i0 != 135 goto label09;

        $i6 = staticinvoke <com.android.server.hdmi.HdmiUtils: int threeBytesToInt(byte[])>(r2);

        r0.<com.android.server.hdmi.NewDeviceAction: int mVendorId> = $i6;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>();

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void finish()>();

        return 1;

     label09:
        if i0 != 0 goto label10;

        $b5 = r2[0];

        s10 = $b5 & 255;

        if s10 != 140 goto label10;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>();

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void finish()>();

        return 1;

     label10:
        return 0;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label04;
    }

    private boolean mayProcessCommandIfCached(int, int)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage r1;
        com.android.server.hdmi.HdmiCecMessageCache $r2;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecMessageCache getCecMessageCache()>();

        r1 = virtualinvoke $r2.<com.android.server.hdmi.HdmiCecMessageCache: com.android.server.hdmi.HdmiCecMessage getMessage(int,int)>(i0, i1);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return $z0;

     label1:
        return 0;
    }

    private void requestVendorId()
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r0.<com.android.server.hdmi.NewDeviceAction: int mState> = 2;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $z0 = specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: boolean mayProcessCommandIfCached(int,int)>($i0, 135);

        if $z0 == 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: int getSourceAddress()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDeviceVendorIdCommand(int,int)>($i1, $i2);

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addTimer(int,int)>($i3, 2000);

        return;
    }

    private void addDeviceInfo()
    {
        com.android.server.hdmi.NewDeviceAction r0;
        android.hardware.hdmi.HdmiDeviceInfo r1, $r3;
        java.lang.String $r2, $r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r4, $r6, $r7;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        $r2 = r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName>;

        if $r2 != null goto label1;

        $i9 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $r8 = staticinvoke <com.android.server.hdmi.HdmiUtils: java.lang.String getDefaultDeviceName(int)>($i9);

        r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName> = $r8;

     label1:
        $r3 = new android.hardware.hdmi.HdmiDeviceInfo;

        $i0 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i1 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $r4 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $i3 = virtualinvoke $r4.<com.android.server.hdmi.HdmiCecLocalDeviceTv: int getPortId(int)>($i2);

        $i4 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i5 = staticinvoke <com.android.server.hdmi.HdmiUtils: int getTypeFromAddress(int)>($i4);

        $i6 = r0.<com.android.server.hdmi.NewDeviceAction: int mVendorId>;

        $r5 = r0.<com.android.server.hdmi.NewDeviceAction: java.lang.String mDisplayName>;

        specialinvoke $r3.<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int,int,java.lang.String)>($i0, $i1, $i3, $i5, $i6, $r5);

        r1 = $r3;

        $r6 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r6.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void addCecDevice(android.hardware.hdmi.HdmiDeviceInfo)>(r1);

        $i7 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i8 = staticinvoke <com.android.server.hdmi.HdmiUtils: int getTypeFromAddress(int)>($i7);

        if $i8 != 5 goto label2;

        $r7 = virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r7.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void onNewAvrAdded(android.hardware.hdmi.HdmiDeviceInfo)>(r1);

     label2:
        return;
    }

    public void handleTimerEvent(int)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i1 == 0 goto label1;

        $i2 = r0.<com.android.server.hdmi.NewDeviceAction: int mState>;

        if $i2 == i0 goto label2;

     label1:
        return;

     label2:
        if i0 != 1 goto label3;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void requestVendorId()>();

        goto label4;

     label3:
        if i0 != 2 goto label4;

        specialinvoke r0.<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>();

        virtualinvoke r0.<com.android.server.hdmi.NewDeviceAction: void finish()>();

     label4:
        return;
    }

    boolean isActionOf(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource)
    {
        com.android.server.hdmi.NewDeviceAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.NewDeviceAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource;

        $i1 = r0.<com.android.server.hdmi.NewDeviceAction: int mDeviceLogicalAddress>;

        $i0 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<com.android.server.hdmi.NewDeviceAction: int mDevicePhysicalAddress>;

        $i2 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.NewDeviceAction: int STATE_WAITING_FOR_DEVICE_VENDOR_ID> = 2;

        <com.android.server.hdmi.NewDeviceAction: int STATE_WAITING_FOR_SET_OSD_NAME> = 1;

        <com.android.server.hdmi.NewDeviceAction: java.lang.String TAG> = "NewDeviceAction";

        return;
    }
}
