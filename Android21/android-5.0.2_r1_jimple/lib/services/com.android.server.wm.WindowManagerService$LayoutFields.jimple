class com.android.server.wm.WindowManagerService$LayoutFields extends java.lang.Object
{
    static final int SET_UPDATE_ROTATION;
    static final int SET_WALLPAPER_MAY_CHANGE;
    static final int SET_FORCE_HIDING_CHANGED;
    static final int SET_ORIENTATION_CHANGE_COMPLETE;
    static final int SET_TURN_ON_SCREEN;
    static final int SET_WALLPAPER_ACTION_PENDING;
    boolean mWallpaperForceHidingChanged;
    boolean mWallpaperMayChange;
    boolean mOrientationChangeComplete;
    java.lang.Object mLastWindowFreezeSource;
    private com.android.server.wm.Session mHoldScreen;
    private boolean mObscured;
    private boolean mSyswin;
    private float mScreenBrightness;
    private float mButtonBrightness;
    private long mUserActivityTimeout;
    private boolean mUpdateRotation;
    boolean mWallpaperActionPending;
    boolean mDisplayHasContent;
    boolean mObscureApplicationContentOnSecondaryDisplays;
    float mPreferredRefreshRate;
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$LayoutFields;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mWallpaperForceHidingChanged> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mWallpaperMayChange> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mOrientationChangeComplete> = 1;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: java.lang.Object mLastWindowFreezeSource> = null;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: com.android.server.wm.Session mHoldScreen> = null;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mObscured> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mSyswin> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mScreenBrightness> = -1.0F;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mButtonBrightness> = -1.0F;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: long mUserActivityTimeout> = -1L;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mUpdateRotation> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mWallpaperActionPending> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mDisplayHasContent> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mObscureApplicationContentOnSecondaryDisplays> = 0;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mPreferredRefreshRate> = 0.0F;

        return;
    }

    static boolean access$1202(com.android.server.wm.WindowManagerService$LayoutFields, boolean)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mObscured> = z0;

        return z0;
    }

    static com.android.server.wm.Session access$1302(com.android.server.wm.WindowManagerService$LayoutFields, com.android.server.wm.Session)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        com.android.server.wm.Session r1;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        r1 := @parameter1: com.android.server.wm.Session;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: com.android.server.wm.Session mHoldScreen> = r1;

        return r1;
    }

    static boolean access$1400(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $z0 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mSyswin>;

        return $z0;
    }

    static float access$1500(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        float $f0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $f0 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mScreenBrightness>;

        return $f0;
    }

    static float access$1502(com.android.server.wm.WindowManagerService$LayoutFields, float)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        float f0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        f0 := @parameter1: float;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mScreenBrightness> = f0;

        return f0;
    }

    static float access$1600(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        float $f0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $f0 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mButtonBrightness>;

        return $f0;
    }

    static float access$1602(com.android.server.wm.WindowManagerService$LayoutFields, float)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        float f0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        f0 := @parameter1: float;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: float mButtonBrightness> = f0;

        return f0;
    }

    static long access$1700(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        long $l0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $l0 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: long mUserActivityTimeout>;

        return $l0;
    }

    static long access$1702(com.android.server.wm.WindowManagerService$LayoutFields, long)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        long l0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        l0 := @parameter1: long;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: long mUserActivityTimeout> = l0;

        return l0;
    }

    static boolean access$1402(com.android.server.wm.WindowManagerService$LayoutFields, boolean)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mSyswin> = z0;

        return z0;
    }

    static boolean access$1200(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $z0 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mObscured>;

        return $z0;
    }

    static com.android.server.wm.Session access$1300(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        com.android.server.wm.Session $r1;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $r1 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: com.android.server.wm.Session mHoldScreen>;

        return $r1;
    }

    static boolean access$1800(com.android.server.wm.WindowManagerService$LayoutFields)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        $z0 = r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mUpdateRotation>;

        return $z0;
    }

    static boolean access$1802(com.android.server.wm.WindowManagerService$LayoutFields, boolean)
    {
        com.android.server.wm.WindowManagerService$LayoutFields r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.WindowManagerService$LayoutFields;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mUpdateRotation> = z0;

        return z0;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowManagerService$LayoutFields: int SET_WALLPAPER_ACTION_PENDING> = 32;

        <com.android.server.wm.WindowManagerService$LayoutFields: int SET_TURN_ON_SCREEN> = 16;

        <com.android.server.wm.WindowManagerService$LayoutFields: int SET_ORIENTATION_CHANGE_COMPLETE> = 8;

        <com.android.server.wm.WindowManagerService$LayoutFields: int SET_FORCE_HIDING_CHANGED> = 4;

        <com.android.server.wm.WindowManagerService$LayoutFields: int SET_WALLPAPER_MAY_CHANGE> = 2;

        <com.android.server.wm.WindowManagerService$LayoutFields: int SET_UPDATE_ROTATION> = 1;

        return;
    }
}
