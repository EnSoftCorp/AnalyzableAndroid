final class com.android.server.tv.TvInputManagerService$ServiceCallback extends android.media.tv.ITvInputServiceCallback$Stub
{
    private final android.content.ComponentName mComponent;
    private final int mUserId;
    final com.android.server.tv.TvInputManagerService this$0;

    void <init>(com.android.server.tv.TvInputManagerService, android.content.ComponentName, int)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        com.android.server.tv.TvInputManagerService r1;
        android.content.ComponentName r2;
        int i0;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0> = r1;

        specialinvoke r0.<android.media.tv.ITvInputServiceCallback$Stub: void <init>()>();

        r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent> = r2;

        r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId> = i0;

        return;
    }

    private void ensureHardwarePermission()
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        com.android.server.tv.TvInputManagerService $r1;
        android.content.Context $r2;
        int $i0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        $r1 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r2 = staticinvoke <com.android.server.tv.TvInputManagerService: android.content.Context access$4300(com.android.server.tv.TvInputManagerService)>($r1);

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.TV_INPUT_HARDWARE");

        if $i0 == 0 goto label1;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("The caller does not have hardware permission");

        throw $r3;

     label1:
        return;
    }

    private void ensureValidInput(android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        android.media.tv.TvInputInfo r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        android.content.ComponentName $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: android.media.tv.TvInputInfo;

        $r2 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        if $r2 == null goto label1;

        $r4 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent>;

        $r5 = virtualinvoke r1.<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke $r4.<android.content.ComponentName: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid TvInputInfo");

        throw $r3;

     label2:
        return;
    }

    private void addTvInputLocked(android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        android.media.tv.TvInputInfo r1;
        com.android.server.tv.TvInputManagerService$ServiceState r2;
        int $i0, $i1;
        android.content.ComponentName $r3;
        com.android.server.tv.TvInputManagerService $r4, $r6;
        java.util.List $r5;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: android.media.tv.TvInputInfo;

        $r4 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r3 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent>;

        $i0 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        r2 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$ServiceState access$6400(com.android.server.tv.TvInputManagerService,android.content.ComponentName,int)>($r4, $r3, $i0);

        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1300(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r6 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $i1 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        staticinvoke <com.android.server.tv.TvInputManagerService: void access$400(com.android.server.tv.TvInputManagerService,int,java.lang.String[])>($r6, $i1, null);

        return;
    }

    public void addHardwareTvInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        int i0;
        android.media.tv.TvInputInfo r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.tv.TvInputManagerService $r4, $r6;
        com.android.server.tv.TvInputHardwareManager $r7;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureHardwarePermission()>();

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureValidInput(android.media.tv.TvInputInfo)>(r1);

        $r4 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService: java.lang.Object access$300(com.android.server.tv.TvInputManagerService)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager access$5400(com.android.server.tv.TvInputManagerService)>($r6);

        virtualinvoke $r7.<com.android.server.tv.TvInputHardwareManager: void addHardwareTvInput(int,android.media.tv.TvInputInfo)>(i0, r1);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void addTvInputLocked(android.media.tv.TvInputInfo)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addHdmiTvInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        int i0;
        android.media.tv.TvInputInfo r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.tv.TvInputManagerService $r4, $r6;
        com.android.server.tv.TvInputHardwareManager $r7;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureHardwarePermission()>();

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureValidInput(android.media.tv.TvInputInfo)>(r1);

        $r4 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService: java.lang.Object access$300(com.android.server.tv.TvInputManagerService)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager access$5400(com.android.server.tv.TvInputManagerService)>($r6);

        virtualinvoke $r7.<com.android.server.tv.TvInputHardwareManager: void addHdmiTvInput(int,android.media.tv.TvInputInfo)>(i0, r1);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void addTvInputLocked(android.media.tv.TvInputInfo)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeTvInput(java.lang.String)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        java.lang.String r1, $r14, $r19;
        java.lang.Object r2, $r7, $r17;
        com.android.server.tv.TvInputManagerService$ServiceState r3;
        boolean z0, $z1, $z2;
        java.util.Iterator r4;
        java.lang.Throwable r5, $r21;
        com.android.server.tv.TvInputManagerService $r6, $r9, $r15, $r16;
        int $i0, $i2;
        android.content.ComponentName $r8;
        java.util.List $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        com.android.server.tv.TvInputHardwareManager $r18;
        android.media.tv.TvInputInfo $r20;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureHardwarePermission()>();

        $r6 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService: java.lang.Object access$300(com.android.server.tv.TvInputManagerService)>($r6);

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r9 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r8 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent>;

        $i0 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        r3 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$ServiceState access$6400(com.android.server.tv.TvInputManagerService,android.content.ComponentName,int)>($r9, $r8, $i0);

        z0 = 0;

        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1300(com.android.server.tv.TvInputManagerService$ServiceState)>(r3);

        r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (android.media.tv.TvInputInfo) $r17;

        $r19 = virtualinvoke $r20.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        z0 = 1;

        goto label3;

     label3:
        if z0 == 0 goto label4;

        $r16 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $i2 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        staticinvoke <com.android.server.tv.TvInputManagerService: void access$400(com.android.server.tv.TvInputManagerService,int,java.lang.String[])>($r16, $i2, null);

        $r15 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r18 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager access$5400(com.android.server.tv.TvInputManagerService)>($r15);

        virtualinvoke $r18.<com.android.server.tv.TvInputHardwareManager: void removeTvInput(java.lang.String)>(r1);

        goto label5;

     label4:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to remove input ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TvInputManagerService", $r14);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
