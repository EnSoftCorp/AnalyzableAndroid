class com.android.server.pm.PackageManagerService$1 extends java.lang.Object implements java.lang.Runnable
{
    final long val$freeStorageSize;
    final android.content.pm.IPackageDataObserver val$observer;
    final com.android.server.pm.PackageManagerService this$0;

    void <init>(com.android.server.pm.PackageManagerService, long, android.content.pm.IPackageDataObserver)
    {
        com.android.server.pm.PackageManagerService$1 r0;
        com.android.server.pm.PackageManagerService r1;
        long l0;
        android.content.pm.IPackageDataObserver r2;

        r0 := @this: com.android.server.pm.PackageManagerService$1;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        l0 := @parameter1: long;

        r2 := @parameter2: android.content.pm.IPackageDataObserver;

        r0.<com.android.server.pm.PackageManagerService$1: com.android.server.pm.PackageManagerService this$0> = r1;

        r0.<com.android.server.pm.PackageManagerService$1: long val$freeStorageSize> = l0;

        r0.<com.android.server.pm.PackageManagerService$1: android.content.pm.IPackageDataObserver val$observer> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.pm.PackageManagerService$1 r0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r11;
        com.android.server.pm.PackageManagerService $r3, $r5, $r7;
        com.android.server.pm.PackageManagerService$PackageHandler $r4;
        long $l1;
        com.android.server.pm.Installer $r8;
        android.content.pm.IPackageDataObserver $r9, $r10;
        boolean $z0;
        android.os.RemoteException $r12;
        int i4;

        r0 := @this: com.android.server.pm.PackageManagerService$1;

        $r3 = r0.<com.android.server.pm.PackageManagerService$1: com.android.server.pm.PackageManagerService this$0>;

        $r4 = $r3.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: void removeCallbacks(java.lang.Runnable)>(r0);

        $r5 = r0.<com.android.server.pm.PackageManagerService$1: com.android.server.pm.PackageManagerService this$0>;

        $r6 = $r5.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService$1: com.android.server.pm.PackageManagerService this$0>;

        $r8 = $r7.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $l1 = r0.<com.android.server.pm.PackageManagerService$1: long val$freeStorageSize>;

        i4 = virtualinvoke $r8.<com.android.server.pm.Installer: int freeCache(long)>($l1);

        if i4 >= 0 goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t clear application caches");

     label02:
        exitmonitor r1;

     label03:
        goto label06;

     label04:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label05:
        throw r2;

     label06:
        $r9 = r0.<com.android.server.pm.PackageManagerService$1: android.content.pm.IPackageDataObserver val$observer>;

        if $r9 == null goto label12;

     label07:
        $r10 = r0.<com.android.server.pm.PackageManagerService$1: android.content.pm.IPackageDataObserver val$observer>;

        if i4 < 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        interfaceinvoke $r10.<android.content.pm.IPackageDataObserver: void onRemoveCompleted(java.lang.String,boolean)>(null, $z0);

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "RemoveException when invoking call back");

     label12:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch android.os.RemoteException from label07 to label10 with label11;
    }
}
