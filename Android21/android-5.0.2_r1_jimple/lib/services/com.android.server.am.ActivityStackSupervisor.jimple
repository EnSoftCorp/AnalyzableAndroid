public final class com.android.server.am.ActivityStackSupervisor extends java.lang.Object implements android.hardware.display.DisplayManager$DisplayListener
{
    static final boolean DEBUG;
    static final boolean DEBUG_ADD_REMOVE;
    static final boolean DEBUG_APP;
    static final boolean DEBUG_CONTAINERS;
    static final boolean DEBUG_IDLE;
    static final boolean DEBUG_RELEASE;
    static final boolean DEBUG_SAVED_STATE;
    static final boolean DEBUG_SCREENSHOTS;
    static final boolean DEBUG_STATES;
    static final boolean DEBUG_VISIBLE_BEHIND;
    public static final int HOME_STACK_ID;
    static final int IDLE_TIMEOUT;
    static final int SLEEP_TIMEOUT;
    static final int LAUNCH_TIMEOUT;
    static final int IDLE_TIMEOUT_MSG;
    static final int IDLE_NOW_MSG;
    static final int RESUME_TOP_ACTIVITY_MSG;
    static final int SLEEP_TIMEOUT_MSG;
    static final int LAUNCH_TIMEOUT_MSG;
    static final int HANDLE_DISPLAY_ADDED;
    static final int HANDLE_DISPLAY_CHANGED;
    static final int HANDLE_DISPLAY_REMOVED;
    static final int CONTAINER_CALLBACK_VISIBILITY;
    static final int LOCK_TASK_START_MSG;
    static final int LOCK_TASK_END_MSG;
    static final int CONTAINER_CALLBACK_TASK_LIST_EMPTY;
    static final int CONTAINER_TASK_LIST_EMPTY_TIMEOUT;
    static final int LAUNCH_TASK_BEHIND_COMPLETE;
    private static final java.lang.String VIRTUAL_DISPLAY_BASE_NAME;
    private static final java.lang.String LOCK_TASK_TAG;
    private android.os.IBinder mToken;
    private com.android.internal.statusbar.IStatusBarService mStatusBarService;
    private android.app.admin.IDevicePolicyManager mDevicePolicyManager;
    static final boolean VALIDATE_WAKE_LOCK_CALLER;
    final com.android.server.am.ActivityManagerService mService;
    final com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler;
    com.android.server.wm.WindowManagerService mWindowManager;
    android.hardware.display.DisplayManager mDisplayManager;
    private int mLastStackId;
    private int mCurTaskId;
    private int mCurrentUser;
    private com.android.server.am.ActivityStack mHomeStack;
    private com.android.server.am.ActivityStack mFocusedStack;
    private com.android.server.am.ActivityStack mLastFocusedStack;
    final java.util.ArrayList mWaitingVisibleActivities;
    final java.util.ArrayList mWaitingActivityVisible;
    final java.util.ArrayList mWaitingActivityLaunched;
    final java.util.ArrayList mStoppingActivities;
    final java.util.ArrayList mFinishingActivities;
    final java.util.ArrayList mGoingToSleepActivities;
    final java.util.ArrayList mStartingUsers;
    final java.util.ArrayList mStartingBackgroundUsers;
    boolean mUserLeaving;
    boolean mSleepTimeout;
    private boolean mLeanbackOnlyDevice;
    android.os.PowerManager$WakeLock mLaunchingActivity;
    android.os.PowerManager$WakeLock mGoingToSleep;
    android.util.SparseIntArray mUserStackInFront;
    private android.util.SparseArray mActivityContainers;
    private final android.util.SparseArray mActivityDisplays;
    android.hardware.input.InputManagerInternal mInputManagerInternal;
    com.android.server.am.TaskRecord mLockTaskModeTask;
    private boolean mLockTaskIsLocked;
    private com.android.server.am.LockTaskNotify mLockTaskNotify;
    final java.util.ArrayList mPendingActivityLaunches;

    public void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityManagerService r1, $r17;
        android.os.Binder $r2;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14;
        android.util.SparseIntArray $r11;
        android.util.SparseArray $r12, $r13;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r15;
        com.android.server.am.ActivityManagerService$MainHandler $r16;
        android.os.Looper $r18;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.os.Binder;

        specialinvoke $r2.<android.os.Binder: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: android.os.IBinder mToken> = $r2;

        r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId> = 0;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingBackgroundUsers> = $r10;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = 0;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout> = 0;

        $r11 = new android.util.SparseIntArray;

        specialinvoke $r11.<android.util.SparseIntArray: void <init>(int)>(2);

        r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront> = $r11;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityContainers> = $r12;

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches> = $r14;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService> = r1;

        $r15 = new com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler;

        $r17 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r16 = $r17.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r18 = virtualinvoke $r16.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Looper getLooper()>();

        specialinvoke $r15.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void <init>(com.android.server.am.ActivityStackSupervisor,android.os.Looper)>(r0, $r18);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler> = $r15;

        return;
    }

    void initPowerManagement()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.PowerManager r1;
        com.android.server.am.ActivityManagerService $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.os.PowerManager$WakeLock $r5, $r6, $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r1 = (android.os.PowerManager) $r4;

        $r5 = virtualinvoke r1.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ActivityManager-Sleep");

        r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep> = $r5;

        $r6 = virtualinvoke r1.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ActivityManager-Launch");

        r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity> = $r6;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        return;
    }

    private com.android.internal.statusbar.IStatusBarService getStatusBarService()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable r2, $r9;
        com.android.internal.statusbar.IStatusBarService $r4, $r5, $r7, $r8;
        android.os.IBinder $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.internal.statusbar.IStatusBarService mStatusBarService>;

        if $r4 != null goto label2;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("statusbar");

        $r7 = staticinvoke <com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)>($r6);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.internal.statusbar.IStatusBarService mStatusBarService> = $r7;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.internal.statusbar.IStatusBarService mStatusBarService>;

        if $r8 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("StatusBarManager", "warning: no STATUS_BAR_SERVICE");

     label2:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.internal.statusbar.IStatusBarService mStatusBarService>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private android.app.admin.IDevicePolicyManager getDevicePolicyManager()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable r2, $r9;
        android.app.admin.IDevicePolicyManager $r4, $r5, $r7, $r8;
        android.os.IBinder $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        if $r4 != null goto label2;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("device_policy");

        $r7 = staticinvoke <android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>($r6);

        r0.<com.android.server.am.ActivityStackSupervisor: android.app.admin.IDevicePolicyManager mDevicePolicyManager> = $r7;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        if $r8 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "warning: no DEVICE_POLICY_SERVICE");

     label2:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void setWindowManager(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.am.ActivityManagerService r2, $r6, $r7;
        android.view.Display[] r3;
        int i0, i1, $i3;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r4, $r17;
        java.lang.Throwable r5, $r20;
        android.content.Context $r8;
        java.lang.Object $r9, $r13;
        android.hardware.display.DisplayManager $r10, $r11, $r12;
        com.android.server.am.ActivityStack $r14;
        boolean $z0;
        android.hardware.input.InputManagerInternal $r15;
        android.view.Display $r16, $r19;
        android.util.SparseArray $r18;
        java.lang.IllegalStateException $r21;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager> = r1;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r10 = (android.hardware.display.DisplayManager) $r9;

        r0.<com.android.server.am.ActivityStackSupervisor: android.hardware.display.DisplayManager mDisplayManager> = $r10;

        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: android.hardware.display.DisplayManager mDisplayManager>;

        virtualinvoke $r11.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>(r0, null);

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: android.hardware.display.DisplayManager mDisplayManager>;

        r3 = virtualinvoke $r12.<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>();

        $i3 = lengthof r3;

        i0 = $i3 - 1;

     label2:
        if i0 < 0 goto label4;

        $r16 = r3[i0];

        i1 = virtualinvoke $r16.<android.view.Display: int getDisplayId()>();

        $r17 = new com.android.server.am.ActivityStackSupervisor$ActivityDisplay;

        specialinvoke $r17.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor,int)>(r0, i1);

        r4 = $r17;

        $r19 = r4.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: android.view.Display mDisplay>;

        if $r19 != null goto label3;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default Display does not exist");

        throw $r21;

     label3:
        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        virtualinvoke $r18.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r4);

        i0 = i0 + -1;

        goto label2;

     label4:
        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor: int createStackOnDisplay(int,int)>(0, 0);

        $r14 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(0);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mLastFocusedStack> = $r14;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = $r14;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack> = $r14;

        $r13 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "android/hardware/input/InputManagerInternal");

        $r15 = (android.hardware.input.InputManagerInternal) $r13;

        r0.<com.android.server.am.ActivityStackSupervisor: android.hardware.input.InputManagerInternal mInputManagerInternal> = $r15;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isLeanbackOnlyDevice()>();

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mLeanbackOnlyDevice> = $z0;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void notifyActivityDrawnForKeyguard()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void notifyActivityDrawnForKeyguard()>();

        return;
    }

    com.android.server.am.ActivityStack getFocusedStack()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r1;
    }

    com.android.server.am.ActivityStack getLastStack()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mLastFocusedStack>;

        return $r1;
    }

    boolean isFrontStack(com.android.server.am.ActivityStack)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1;
        com.android.server.am.ActivityRecord r2;
        java.util.ArrayList r3;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r4;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.Object $r5;
        com.android.server.am.TaskRecord $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityStack;

        $r4 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        r2 = $r4.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityRecord mParentActivity>;

        if r2 == null goto label1;

        $r6 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

     label1:
        r3 = r1.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        if r3 == null goto label4;

        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        if r1 != $r5 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    void moveHomeStack(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1, $z3;
        java.util.ArrayList r1;
        int i0, $i1, $i2;
        com.android.server.am.ActivityStack r2, $r3, $r5, $r6, $r7, $r9;
        java.lang.Object $r4, $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        r1 = $r3.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

        if i0 > 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActivityStack) $r4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        if r2 != $r5 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z1 = $z3;

        if z1 == z0 goto label6;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mLastFocusedStack> = r2;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>($r6);

        if z0 == 0 goto label4;

        $i2 = i0;

        goto label5;

     label4:
        $i2 = 0;

     label5:
        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        virtualinvoke r1.<java.util.ArrayList: void add(int,java.lang.Object)>($i2, $r7);

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (com.android.server.am.ActivityStack) $r8;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = $r9;

     label6:
        return;
    }

    void moveHomeStackTaskToTop(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        com.android.server.am.ActivityStack $r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void showRecentApps()>();

        return;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>(1);

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        virtualinvoke $r1.<com.android.server.am.ActivityStack: void moveHomeStackTaskToTop(int)>(i0);

        return;
    }

    boolean resumeHomeStackTask(int, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1;
        com.android.server.am.ActivityRecord r1, r2;
        com.android.server.am.ActivityManagerService $r3, $r5, $r6, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.am.ActivityStack $r4, $r7;
        com.android.server.am.TaskRecord $r8;
        com.android.server.wm.WindowManagerService $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z0 = $r3.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        if $z0 != 0 goto label1;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z4 = $r9.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z4 != 0 goto label1;

        return 0;

     label1:
        if i0 != 2 goto label2;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void showRecentApps()>();

        return 0;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStackTaskToTop(int)>(i0);

        if r1 == null goto label3;

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r8.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(0);

     label3:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        r2 = virtualinvoke $r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label4;

        $z2 = virtualinvoke r2.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z2 == 0 goto label4;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r2);

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>($r7, r1, null);

        return $z3;

     label4:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i1 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser>;

        $z1 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int)>($i1);

        return $z1;
    }

    void keyguardWaitingForActivityDrawn()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void keyguardWaitingForActivityDrawn()>();

        return;
    }

    com.android.server.am.TaskRecord anyTaskForIdLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.TaskRecord r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r1 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i4 - 1;

     label2:
        if i3 < 0 goto label4;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.am.ActivityStack) $r8;

        r3 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord taskForIdLocked(int)>(i0);

        if r3 == null goto label3;

        return r3;

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return null;
    }

    com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.IBinder r1;
        int i0, i1, i2, $i3;
        java.util.ArrayList r2;
        com.android.server.am.ActivityRecord r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;
        com.android.server.am.ActivityStack $r9;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.os.IBinder;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label2:
        if i2 < 0 goto label4;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.am.ActivityStack) $r8;

        r3 = virtualinvoke $r9.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r3 == null goto label3;

        return r3;

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return null;
    }

    void setNextTaskId(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        if i0 <= $i1 goto label1;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = i0;

     label1:
        return;
    }

    int getNextTaskId()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.am.TaskRecord $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

     label1:
        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        $i1 = $i0 + 1;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = $i1;

        $i2 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        if $i2 > 0 goto label2;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = 1;

     label2:
        $i3 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        $r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>($i3);

        if $r1 != null goto label1;

        $i4 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        return $i4;
    }

    com.android.server.am.ActivityRecord resumedAppLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1;
        com.android.server.am.ActivityRecord r2;
        com.android.server.am.ProcessRecord $r3, $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        if r1 != null goto label1;

        return null;

     label1:
        r2 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r2 == null goto label2;

        $r4 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r4 != null goto label4;

     label2:
        r2 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r2 == null goto label3;

        $r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r3 != null goto label4;

     label3:
        r2 = virtualinvoke r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label4:
        return r2;
    }

    boolean attachApplicationLocked(com.android.server.am.ProcessRecord) throws android.os.RemoteException
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1, $r12;
        java.lang.String r2, $r15, $r21, $r23;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList r3;
        com.android.server.am.ActivityStack r4;
        com.android.server.am.ActivityRecord r5;
        android.os.RemoteException r6, $r16;
        android.util.SparseArray $r7, $r8;
        java.lang.Object $r9, $r11;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r10;
        android.content.pm.ApplicationInfo $r13;
        android.content.pm.ActivityInfo $r14;
        java.lang.StringBuilder $r17, $r19, $r20;
        android.content.Intent $r18;
        android.content.ComponentName $r22;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        z0 = 0;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label01:
        if i0 < 0 goto label09;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r10 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r9;

        r3 = $r10.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label02:
        if i1 < 0 goto label08;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityStack) $r11;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r4);

        if $z1 != 0 goto label03;

        goto label07;

     label03:
        r5 = virtualinvoke r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r5 == null goto label07;

        $r12 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r12 != null goto label07;

        $i4 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r14 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r13 = $r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        if $i4 != $i5 goto label07;

        $r15 = r5.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label07;

     label04:
        $z3 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>(r5, r1, 1, 1);

        if $z3 == 0 goto label05;

        z0 = 1;

     label05:
        goto label07;

     label06:
        $r16 := @caughtexception;

        r6 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting activity ");

        $r18 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r22 = virtualinvoke $r18.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = virtualinvoke $r22.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r21, r6);

        throw r6;

     label07:
        i1 = i1 + -1;

        goto label02;

     label08:
        i0 = i0 + -1;

        goto label01;

     label09:
        if z0 != 0 goto label10;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label10:
        return z0;

        catch android.os.RemoteException from label04 to label05 with label06;
    }

    boolean allResumedActivitiesIdle()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.ArrayList r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.ActivityRecord r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label7;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r1 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label6;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityStack) $r8;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r2);

        if $z0 == 0 goto label5;

        $i4 = virtualinvoke r2.<com.android.server.am.ActivityStack: int numActivities()>();

        if $i4 != 0 goto label3;

        goto label5;

     label3:
        r3 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r3 == null goto label4;

        $z1 = r3.<com.android.server.am.ActivityRecord: boolean idle>;

        if $z1 != 0 goto label5;

     label4:
        return 0;

     label5:
        i1 = i1 + -1;

        goto label2;

     label6:
        i0 = i0 + -1;

        goto label1;

     label7:
        return 1;
    }

    boolean allResumedActivitiesComplete()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        com.android.server.am.ActivityStack r2, $r5;
        com.android.server.am.ActivityRecord r3;
        android.util.SparseArray $r4, $r6;
        java.lang.Object $r7, $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r8;
        boolean $z0;
        com.android.server.am.ActivityStack$ActivityState $r10, $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r8 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r7;

        r1 = $r8.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityStack) $r9;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r2);

        if $z0 == 0 goto label3;

        r3 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r3 == null goto label3;

        $r11 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r10 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r11 == $r10 goto label3;

        return 0;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mLastFocusedStack> = $r5;

        return 1;
    }

    boolean allResumedActivitiesVisible()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.ActivityRecord r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label6;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r1 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label5;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityStack) $r8;

        r3 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r3 == null goto label4;

        $z0 = r3.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z0 == 0 goto label3;

        $z1 = r3.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z1 == 0 goto label4;

     label3:
        return 0;

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        i0 = i0 + -1;

        goto label1;

     label6:
        return 1;
    }

    boolean pauseBackStacks(boolean, boolean, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1, z2, z3, $z4, $z5;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        com.android.server.am.ActivityStack r2;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5, $r7;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r6;
        com.android.server.am.ActivityRecord $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 = 0;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r6 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r5;

        r1 = $r6.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityStack) $r7;

        $z4 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r2);

        if $z4 != 0 goto label3;

        $r8 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r8 == null goto label3;

        $z5 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>(z0, 0, z1, z2);

        z3 = z3 | $z5;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return z3;
    }

    boolean allPausedActivitiesComplete()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.ActivityRecord r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;
        com.android.server.am.ActivityStack$ActivityState $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 = 1;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r1 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityStack) $r8;

        r3 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r3 == null goto label3;

        $r10 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r9 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        if $r10 == $r9 goto label3;

        $r11 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r12 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        if $r11 == $r12 goto label3;

        $r13 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r14 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r13 == $r14 goto label3;

        return 0;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return z0;
    }

    void pauseChildStacks(com.android.server.am.ActivityRecord, boolean, boolean, boolean, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, $r8, $r10;
        boolean z0, z1, z2, z3;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r9 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityStack) $r9;

        $r8 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r8 == null goto label3;

        $r11 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r10 = $r11.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityRecord mParentActivity>;

        if $r10 != r1 goto label3;

        virtualinvoke r3.<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>(z0, z1, z2, z3);

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return;
    }

    void reportActivityVisibleLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void sendWaitingVisibleReportLocked(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void notifyActivityDrawnForKeyguard()>();

        return;
    }

    void sendWaitingVisibleReportLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0;
        int i0, $i1;
        android.app.IActivityManager$WaitResult r2;
        java.util.ArrayList $r3, $r5;
        com.android.server.am.ActivityManagerService $r4;
        java.lang.Object $r6;
        android.content.ComponentName $r7, $r8;
        long $l2, $l3, $l4, $l5;
        android.content.pm.ActivityInfo $r9, $r10;
        java.lang.String $r11, $r12;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 = 0;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.app.IActivityManager$WaitResult) $r6;

        $r7 = r2.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        if $r7 != null goto label3;

        z0 = 1;

        r2.<android.app.IActivityManager$WaitResult: boolean timeout> = 0;

        if r1 == null goto label2;

        $r8 = new android.content.ComponentName;

        $r10 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r11 = $r10.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r9 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r12 = $r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r8.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        r2.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = $r8;

     label2:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r2.<android.app.IActivityManager$WaitResult: long thisTime>;

        $l4 = $l2 - $l3;

        r2.<android.app.IActivityManager$WaitResult: long totalTime> = $l4;

        $l5 = r2.<android.app.IActivityManager$WaitResult: long totalTime>;

        r2.<android.app.IActivityManager$WaitResult: long thisTime> = $l5;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

     label5:
        return;
    }

    void reportActivityLaunchedLocked(boolean, com.android.server.am.ActivityRecord, long, long)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1;
        com.android.server.am.ActivityRecord r1;
        long l0, l1;
        int i2, $i3;
        android.app.IActivityManager$WaitResult r2;
        java.util.ArrayList $r3, $r5;
        com.android.server.am.ActivityManagerService $r4;
        java.lang.Object $r6;
        android.content.ComponentName $r7, $r9;
        android.content.pm.ActivityInfo $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        z1 = 0;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        r2 = (android.app.IActivityManager$WaitResult) $r6;

        $r7 = r2.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        if $r7 != null goto label3;

        z1 = 1;

        r2.<android.app.IActivityManager$WaitResult: boolean timeout> = z0;

        if r1 == null goto label2;

        $r9 = new android.content.ComponentName;

        $r8 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r12 = $r8.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r11 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r10 = $r11.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r12, $r10);

        r2.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = $r9;

     label2:
        r2.<android.app.IActivityManager$WaitResult: long thisTime> = l0;

        r2.<android.app.IActivityManager$WaitResult: long totalTime> = l1;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        if z1 == 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

     label5:
        return;
    }

    com.android.server.am.ActivityRecord topRunningActivityLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1, r4, $r5;
        com.android.server.am.ActivityRecord r2, r7;
        java.util.ArrayList r3;
        int i0, $i1;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r2 = virtualinvoke r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        r3 = $r5.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label2:
        if i0 < 0 goto label4;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ActivityStack) $r6;

        if r4 == r1 goto label3;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r4);

        if $z0 == 0 goto label3;

        r7 = virtualinvoke r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r7 == null goto label3;

        return r7;

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        return null;
    }

    void getTasksLocked(int, java.util.List, int, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, i2, i3, i4, $i7, i9, i10;
        java.util.List r1;
        boolean z0, $z2;
        java.util.ArrayList r2, r3, r5, r6, $r7, $r16, r18;
        com.android.server.am.ActivityStack r4;
        long l5, l8;
        android.util.SparseArray $r8, $r14;
        java.lang.Object $r9, $r10, $r11, $r13, $r17;
        byte $b6;
        android.app.ActivityManager$RunningTaskInfo $r12;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r15;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        i2 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r13 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r15 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r13;

        r3 = $r15.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i4 = $i7 - 1;

     label2:
        if i4 < 0 goto label3;

        $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (com.android.server.am.ActivityStack) $r17;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r5 = $r16;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        virtualinvoke r4.<com.android.server.am.ActivityStack: void getTasksLocked(java.util.List,int,boolean)>(r5, i1, z0);

        i4 = i4 + -1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        if i0 <= 0 goto label8;

        l8 = -9223372036854775808L;

        r18 = null;

        i9 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i10 = 0;

     label5:
        if i10 >= i9 goto label7;

        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r6 = (java.util.ArrayList) $r10;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label6;

        $r11 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r12 = (android.app.ActivityManager$RunningTaskInfo) $r11;

        l5 = $r12.<android.app.ActivityManager$RunningTaskInfo: long lastActiveTime>;

        $b6 = l5 cmp l8;

        if $b6 <= 0 goto label6;

        l8 = l5;

        r18 = r6;

     label6:
        i10 = i10 + 1;

        goto label5;

     label7:
        if r18 == null goto label8;

        $r9 = virtualinvoke r18.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        i0 = i0 + -1;

        goto label4;

     label8:
        return;
    }

    android.content.pm.ActivityInfo resolveActivity(android.content.Intent, java.lang.String, int, android.app.ProfilerInfo, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.content.Intent r1;
        java.lang.String r2, $r9, $r10, $r12, $r13, $r16, $r18, $r19, $r21;
        int i0, i1, $i2, $i3;
        android.app.ProfilerInfo r3;
        android.content.pm.ActivityInfo r4, $r22;
        android.content.pm.ResolveInfo r5;
        android.content.pm.IPackageManager $r6;
        android.content.ComponentName $r7;
        android.content.pm.ApplicationInfo $r8, $r15, $r17;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityManagerService $r14, $r20, $r23;
        android.os.RemoteException $r24;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.app.ProfilerInfo;

        i1 := @parameter4: int;

     label1:
        $r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r5 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, 66560, i1);

        if r5 == null goto label2;

        $r22 = r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        goto label3;

     label2:
        $r22 = null;

     label3:
        r4 = $r22;

     label4:
        goto label6;

     label5:
        $r24 := @caughtexception;

        r4 = null;

     label6:
        if r4 == null goto label9;

        $r7 = new android.content.ComponentName;

        $r8 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = r4.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r9);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r7);

        $i2 = i0 & 2;

        if $i2 == 0 goto label7;

        $r19 = r4.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z2 != 0 goto label7;

        $r23 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r21 = r4.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r23.<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>($r21, 1, 0);

     label7:
        $i3 = i0 & 4;

        if $i3 == 0 goto label8;

        $r16 = r4.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z1 != 0 goto label8;

        $r20 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r17 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r18 = r4.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r20.<com.android.server.am.ActivityManagerService: void setOpenGlTraceApp(android.content.pm.ApplicationInfo,java.lang.String)>($r17, $r18);

     label8:
        if r3 == null goto label9;

        $r12 = r4.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z0 != 0 goto label9;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r15 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = r4.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,android.app.ProfilerInfo)>($r15, $r13, r3);

     label9:
        return r4;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    void startHomeActivity(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStackTaskToTop(int)>(1);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord)>(null, r1, null, r2, null, null, null, null, 0, 0, 0, null, 0, 0, 0, null, 0, null, null, null);

        return;
    }

    final int startActivityMayWait(android.app.IApplicationThread, int, java.lang.String, android.content.Intent, java.lang.String, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.app.IActivityManager$WaitResult, android.content.res.Configuration, android.os.Bundle, int, android.app.IActivityContainer, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IApplicationThread r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i19;
        java.lang.String r2, r4, r8, $r32, $r33, $r47, $r48, $r57, $r62, $r75, $r84, $r86, $r89, $r91;
        android.content.Intent r3, r19, $r22, $r52, r101;
        android.service.voice.IVoiceInteractionSession r5;
        com.android.internal.app.IVoiceInteractor r6;
        android.os.IBinder r7;
        android.app.ProfilerInfo r9;
        android.app.IActivityManager$WaitResult r10;
        android.content.res.Configuration r11, $r87;
        android.os.Bundle r12;
        android.app.IActivityContainer r13;
        boolean z0, $z1, $z2, $z3, $z5, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.server.am.TaskRecord r14, $r73;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r15;
        android.content.pm.ActivityInfo r16, $r34, $r35, $r68, r104;
        com.android.server.am.ActivityManagerService r17, $r25, $r26, $r36, $r41, $r42, $r44, $r49, $r50, $r59, $r66, $r69, $r83, $r88, $r93;
        long l7, $l9;
        com.android.server.am.ActivityStack r18, $r97;
        com.android.server.am.ProcessRecord r20, $r43, $r45, $r56, $r67, $r85;
        android.content.ComponentName $r21, $r28, $r31, $r40;
        com.android.server.am.ActivityRecord r23, r107;
        java.lang.Throwable r24, $r99;
        java.util.ArrayList $r27, $r37, $r55, $r77;
        com.android.server.am.ActivityStack$ActivityState $r29, $r30;
        android.content.pm.ApplicationInfo $r38, $r39, $r46, $r53, $r94;
        java.lang.String[] $r51;
        android.content.Intent[] $r54;
        android.content.IntentSender $r58;
        java.lang.Class $r64;
        android.content.pm.IPackageManager $r70;
        java.lang.Object $r76;
        java.lang.StringBuilder $r78, $r79, $r80, $r81, $r82, $r90, $r92;
        java.lang.InterruptedException $r95, $r100;
        android.os.RemoteException $r96;
        java.lang.IllegalArgumentException $r98;
        android.content.IIntentSender r102;
        android.content.pm.ResolveInfo r103;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.service.voice.IVoiceInteractionSession;

        r6 := @parameter6: com.android.internal.app.IVoiceInteractor;

        r7 := @parameter7: android.os.IBinder;

        r8 := @parameter8: java.lang.String;

        i1 := @parameter9: int;

        i2 := @parameter10: int;

        r9 := @parameter11: android.app.ProfilerInfo;

        r10 := @parameter12: android.app.IActivityManager$WaitResult;

        r11 := @parameter13: android.content.res.Configuration;

        r12 := @parameter14: android.os.Bundle;

        i3 := @parameter15: int;

        r13 := @parameter16: android.app.IActivityContainer;

        r14 := @parameter17: com.android.server.am.TaskRecord;

        if r3 == null goto label01;

        $z13 = virtualinvoke r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z13 == 0 goto label01;

        $r98 = new java.lang.IllegalArgumentException;

        specialinvoke $r98.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r98;

     label01:
        $r21 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r21 == null goto label02;

        $z12 = 1;

        goto label03;

     label02:
        $z12 = 0;

     label03:
        z0 = $z12;

        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(android.content.Intent)>(r3);

        r101 = $r22;

        r16 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,android.app.ProfilerInfo,int)>(r101, r4, i2, r9, i3);

        r15 = (com.android.server.am.ActivityStackSupervisor$ActivityContainer) r13;

        $r25 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r17 = $r25;

        entermonitor $r25;

     label04:
        i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 < 0 goto label05;

        i5 = -1;

        goto label07;

     label05:
        if r1 != null goto label06;

        i5 = i4;

        i0 = i6;

        goto label07;

     label06:
        i0 = -1;

        i5 = -1;

     label07:
        if r15 == null goto label08;

        $r97 = r15.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        $z11 = virtualinvoke $r97.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z11 == 0 goto label09;

     label08:
        r18 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        goto label10;

     label09:
        r18 = r15.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

     label10:
        if r11 == null goto label11;

        $r88 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r87 = $r88.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i17 = virtualinvoke $r87.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r11);

        if $i17 == 0 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        r18.<com.android.server.am.ActivityStack: boolean mConfigWillChange> = $z10;

        l7 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r16 == null goto label24;

        $r38 = r16.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r38.<android.content.pm.ApplicationInfo: int flags>;

        $i11 = $i10 & 268435456;

        if $i11 == 0 goto label24;

        $r48 = r16.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r39 = r16.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r47 = $r39.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z8 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z8 == 0 goto label24;

        $r49 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r43 = $r49.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r43 == null goto label24;

        $r44 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r45 = $r44.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r46 = $r45.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i13 = $r46.<android.content.pm.ApplicationInfo: int uid>;

        $r53 = r16.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r53.<android.content.pm.ApplicationInfo: int uid>;

        if $i13 != $i12 goto label13;

        $r93 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r85 = $r93.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r86 = $r85.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r84 = r16.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z9 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>($r84);

        if $z9 != 0 goto label24;

     label13:
        i8 = i0;

        if r1 == null goto label16;

        $r83 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r20 = virtualinvoke $r83.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r20 == null goto label14;

        $r94 = r20.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i8 = $r94.<android.content.pm.ApplicationInfo: int uid>;

        goto label16;

     label14:
        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r90 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r89 = virtualinvoke r101.<android.content.Intent: java.lang.String toString()>();

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r91);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r12);

        exitmonitor r17;

     label15:
        return -4;

     label16:
        $r50 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r54 = newarray (android.content.Intent)[1];

        $r54[0] = r101;

        $r51 = newarray (java.lang.String)[1];

        $r51[0] = r4;

        r102 = virtualinvoke $r50.<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(2, "android", i8, i3, null, null, 0, $r54, $r51, 1342177280, null);

        $r52 = new android.content.Intent;

        specialinvoke $r52.<android.content.Intent: void <init>()>();

        r19 = $r52;

        if i1 < 0 goto label17;

        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("has_result", 1);

     label17:
        $r58 = new android.content.IntentSender;

        specialinvoke $r58.<android.content.IntentSender: void <init>(android.content.IIntentSender)>(r102);

        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("intent", $r58);

        $r59 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r56 = $r59.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r55 = $r56.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i14 = virtualinvoke $r55.<java.util.ArrayList: int size()>();

        if $i14 <= 0 goto label18;

        $r66 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r67 = $r66.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r77 = $r67.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r76 = virtualinvoke $r77.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r23 = (com.android.server.am.ActivityRecord) $r76;

        $r75 = r23.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("cur_app", $r75);

        $r73 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i16 = $r73.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("cur_task", $i16);

     label18:
        $r57 = r16.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("new_app", $r57);

        $i15 = virtualinvoke r101.<android.content.Intent: int getFlags()>();

        virtualinvoke r19.<android.content.Intent: android.content.Intent setFlags(int)>($i15);

        $r64 = class "com/android/internal/app/HeavyWeightSwitcherActivity";

        $r62 = virtualinvoke $r64.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r19.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("android", $r62);

        r101 = r19;

        r4 = null;

        r1 = null;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        z0 = 1;

     label19:
        $r70 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r103 = interfaceinvoke $r70.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r101, null, 66560, i3);

        if r103 == null goto label20;

        $r68 = r103.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        goto label21;

     label20:
        $r68 = null;

     label21:
        r104 = $r68;

        $r69 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r16 = virtualinvoke $r69.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>(r104, i3);

     label22:
        goto label24;

     label23:
        $r96 := @caughtexception;

        r16 = null;

     label24:
        i19 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord)>(r1, r101, r4, r16, r5, r6, r7, r8, i1, i5, i0, r2, i4, i6, i2, r12, z0, null, r15, r14);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l7);

        $z1 = r18.<com.android.server.am.ActivityStack: boolean mConfigWillChange>;

        if $z1 == 0 goto label25;

        $r41 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r41.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        r18.<com.android.server.am.ActivityStack: boolean mConfigWillChange> = 0;

        $r42 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r42.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r11, null, 0, 0);

     label25:
        if r10 == null goto label36;

        r10.<android.app.IActivityManager$WaitResult: int result> = i19;

        if i19 != 0 goto label30;

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        virtualinvoke $r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label26:
        $r36 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r36.<java.lang.Object: void wait()>();

     label27:
        goto label29;

     label28:
        $r100 := @caughtexception;

     label29:
        $z5 = r10.<android.app.IActivityManager$WaitResult: boolean timeout>;

        if $z5 != 0 goto label36;

        $r40 = r10.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        if $r40 == null goto label26;

        goto label36;

     label30:
        if i19 != 2 goto label36;

        r107 = virtualinvoke r18.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        $z2 = r107.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z2 == 0 goto label31;

        $r29 = r107.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r30 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r29 != $r30 goto label31;

        r10.<android.app.IActivityManager$WaitResult: boolean timeout> = 0;

        $r28 = new android.content.ComponentName;

        $r35 = r107.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r32 = $r35.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r34 = r107.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r33 = $r34.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r28.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r32, $r33);

        r10.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = $r28;

        r10.<android.app.IActivityManager$WaitResult: long totalTime> = 0L;

        r10.<android.app.IActivityManager$WaitResult: long thisTime> = 0L;

        goto label36;

     label31:
        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r10.<android.app.IActivityManager$WaitResult: long thisTime> = $l9;

        $r27 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label32:
        $r26 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r26.<java.lang.Object: void wait()>();

     label33:
        goto label35;

     label34:
        $r95 := @caughtexception;

     label35:
        $z3 = r10.<android.app.IActivityManager$WaitResult: boolean timeout>;

        if $z3 != 0 goto label36;

        $r31 = r10.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        if $r31 == null goto label32;

     label36:
        exitmonitor r17;

     label37:
        return i19;

     label38:
        $r99 := @caughtexception;

        r24 = $r99;

        exitmonitor r17;

     label39:
        throw r24;

        catch android.os.RemoteException from label19 to label22 with label23;
        catch java.lang.InterruptedException from label26 to label27 with label28;
        catch java.lang.InterruptedException from label32 to label33 with label34;
        catch java.lang.Throwable from label04 to label15 with label38;
        catch java.lang.Throwable from label16 to label37 with label38;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    final int startActivities(android.app.IApplicationThread, int, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IApplicationThread r1;
        int i0, i1, i2, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String r2, $r16, $r18;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        android.os.Bundle r6, r11;
        long l3;
        com.android.server.am.ActivityManagerService r7, $r14, $r19;
        com.android.server.am.ActivityRecord[] r8;
        android.content.Intent r9, $r17, r31;
        android.content.pm.ActivityInfo r10, r32;
        boolean z0, $z1, $z2;
        java.lang.Throwable r12, r13, $r26, $r30;
        android.content.ComponentName $r15;
        com.android.server.am.ActivityRecord $r20, $r22;
        android.view.IApplicationToken$Stub $r21;
        android.content.pm.ApplicationInfo $r23;
        java.lang.IllegalArgumentException $r24, $r25, $r29;
        java.lang.NullPointerException $r27, $r28;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent[];

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: android.os.IBinder;

        r6 := @parameter6: android.os.Bundle;

        i1 := @parameter7: int;

        if r3 != null goto label01;

        $r27 = new java.lang.NullPointerException;

        specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>("intents is null");

        throw $r27;

     label01:
        if r4 != null goto label02;

        $r28 = new java.lang.NullPointerException;

        specialinvoke $r28.<java.lang.NullPointerException: void <init>(java.lang.String)>("resolvedTypes is null");

        throw $r28;

     label02:
        $i8 = lengthof r3;

        $i7 = lengthof r4;

        if $i8 == $i7 goto label03;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("intents are length different than resolvedTypes");

        throw $r29;

     label03:
        if i0 < 0 goto label04;

        i2 = -1;

        goto label06;

     label04:
        if r1 != null goto label05;

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        goto label06;

     label05:
        i0 = -1;

        i2 = -1;

     label06:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label07:
        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r7 = $r14;

        entermonitor $r14;

     label08:
        r8 = newarray (com.android.server.am.ActivityRecord)[1];

        i4 = 0;

     label09:
        $i9 = lengthof r3;

        if i4 >= $i9 goto label22;

        r9 = r3[i4];

        if r9 != null goto label10;

        goto label21;

     label10:
        if r9 == null goto label11;

        $z2 = virtualinvoke r9.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z2 == 0 goto label11;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r25;

     label11:
        $r15 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r15 == null goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        z0 = $z1;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(android.content.Intent)>(r9);

        r31 = $r17;

        $r16 = r4[i4];

        r10 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,android.app.ProfilerInfo,int)>(r31, $r16, 0, null, i1);

        $r19 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r32 = virtualinvoke $r19.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>(r10, i1);

        if r32 == null goto label14;

        $r23 = r32.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r23.<android.content.pm.ApplicationInfo: int flags>;

        $i13 = $i12 & 268435456;

        if $i13 == 0 goto label14;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FLAG_CANT_SAVE_STATE not supported here");

        throw $r24;

     label14:
        if r6 == null goto label15;

        $i11 = lengthof r3;

        $i10 = $i11 - 1;

        if i4 != $i10 goto label15;

        r11 = r6;

        goto label16;

     label15:
        r11 = null;

     label16:
        $r18 = r4[i4];

        i5 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord)>(r1, r31, $r18, r32, null, null, r5, null, -1, i2, i0, r2, i2, i0, 0, r11, z0, r8, null, null);

        if i5 >= 0 goto label18;

        i6 = i5;

        exitmonitor r7;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return i6;

     label18:
        $r22 = r8[0];

        if $r22 == null goto label19;

        $r20 = r8[0];

        $r21 = $r20.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        goto label20;

     label19:
        $r21 = null;

     label20:
        r5 = $r21;

     label21:
        i4 = i4 + 1;

        goto label09;

     label22:
        exitmonitor r7;

     label23:
        goto label26;

     label24:
        $r30 := @caughtexception;

        r12 = $r30;

        exitmonitor r7;

     label25:
        throw r12;

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label29;

     label27:
        $r26 := @caughtexception;

        r13 = $r26;

     label28:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r13;

     label29:
        return 0;

        catch java.lang.Throwable from label08 to label17 with label24;
        catch java.lang.Throwable from label18 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.Throwable from label07 to label17 with label27;
        catch java.lang.Throwable from label18 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    final boolean realStartActivityLocked(com.android.server.am.ActivityRecord, com.android.server.am.ProcessRecord, boolean, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, $r85;
        com.android.server.am.ProcessRecord r2, $r47, $r55, $r62, $r68, $r80, $r90, $r94;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z13, $z15;
        android.content.res.Configuration r3, $r34, $r35, $r98;
        com.android.server.am.ActivityStack r4;
        java.util.ArrayList r5, r6, $r13, $r88, $r95, $r116;
        java.lang.String r7, $r22, $r26, $r50, $r59, $r60, $r69, $r83, $r84, $r102, $r109, $r119;
        android.os.ParcelFileDescriptor r8;
        android.view.IApplicationToken$Stub $r11, $r30, $r112, $r117;
        com.android.server.wm.WindowManagerService $r12, $r96;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12, i15;
        long $l1;
        com.android.server.am.ActivityManagerService $r14, $r15, $r20, $r21, $r25, $r27, $r33, $r36, $r45, $r48, $r56, $r57, $r61, $r63, $r65, $r72, $r74, $r75, $r76, $r78, $r79, $r81, $r82, $r87, $r91, $r97, $r99, $r118;
        android.app.IApplicationThread $r16, $r29;
        com.android.server.am.TaskRecord $r17, $r39, $r89, $r100;
        android.content.Intent $r18, $r31, $r32, $r107;
        android.content.ComponentName $r19, $r108;
        android.content.pm.ApplicationInfo $r23, $r43, $r51;
        android.content.pm.ActivityInfo $r24, $r38;
        android.content.res.CompatibilityInfo $r28, $r37;
        android.os.PersistableBundle $r40;
        android.os.Bundle $r41;
        com.android.internal.app.IVoiceInteractor $r42;
        com.android.server.am.ActivityStack$ActivityState $r44;
        com.android.server.am.ActiveServices $r46;
        java.lang.StringBuilder $r49, $r52, $r53, $r54, $r64, $r67, $r70, $r71, $r73, $r105, $r106, $r110, $r111;
        com.android.server.am.ActivityManagerService$MainHandler $r58, $r66;
        android.app.ProfilerInfo $r77, r120;
        java.lang.Object $r86;
        java.lang.Integer $r92, $r101, $r103;
        java.lang.Object[] $r93;
        android.os.RemoteException $r104, $r115, r122;
        java.io.IOException $r113, $r114;
        android.os.Message r121;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>(r2, 0);

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r11 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r12.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r11, 1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void startLaunchTickingLocked()>();

        if z1 == 0 goto label03;

        $r96 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r97 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r98 = $r97.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $z13 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>(r2);

        if $z13 == 0 goto label01;

        $r112 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        goto label02;

     label01:
        $r112 = null;

     label02:
        r3 = virtualinvoke $r96.<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>($r98, $r112);

        $r99 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r99.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r3, r1, 0, 0);

     label03:
        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = r2;

        r2.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = null;

        $i0 = r1.<com.android.server.am.ActivityRecord: int launchCount>;

        $i2 = $i0 + 1;

        r1.<com.android.server.am.ActivityRecord: int launchCount> = $i2;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ActivityRecord: long lastLaunchTime> = $l1;

        $r13 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        i15 = virtualinvoke $r13.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i15 >= 0 goto label04;

        $r95 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r95.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label04:
        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 1, null);

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        $r17 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r4 = $r17.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

     label05:
        $r16 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 != null goto label06;

        $r104 = new android.os.RemoteException;

        specialinvoke $r104.<android.os.RemoteException: void <init>()>();

        throw $r104;

     label06:
        r5 = null;

        r6 = null;

        if z0 == 0 goto label07;

        r5 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        r6 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

     label07:
        if z0 == 0 goto label08;

        $r93 = newarray (java.lang.Object)[4];

        $i11 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r93[0] = $r92;

        $i10 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r93[1] = $r101;

        $r100 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i12 = $r100.<com.android.server.am.TaskRecord: int taskId>;

        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r93[2] = $r103;

        $r102 = r1.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r93[3] = $r102;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30006, $r93);

     label08:
        $z2 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z2 == 0 goto label09;

        $z11 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isNotResolverActivity()>();

        if $z11 == 0 goto label09;

        $r87 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r89 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r88 = $r89.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $r86 = virtualinvoke $r88.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r85 = (com.android.server.am.ActivityRecord) $r86;

        $r94 = $r85.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r87.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = $r94;

     label09:
        $r20 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r18 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r19 = virtualinvoke $r18.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r22 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r20.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r22);

        r1.<com.android.server.am.ActivityRecord: boolean sleeping> = 0;

        r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig> = 0;

        $r21 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r21.<com.android.server.am.ActivityManagerService: void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)>(r1);

        $r27 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r24 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r23 = $r24.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r28 = virtualinvoke $r27.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r23);

        r1.<com.android.server.am.ActivityRecord: android.content.res.CompatibilityInfo compat> = $r28;

        r7 = null;

        r8 = null;

        $r25 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r26 = $r25.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        if $r26 == null goto label11;

        $r74 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r84 = $r74.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $r83 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z10 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>($r83);

        if $z10 == 0 goto label11;

        $r82 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r80 = $r82.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r80 == null goto label10;

        $r91 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r90 = $r91.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r90 != r2 goto label11;

     label10:
        $r81 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r81.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = r2;

        $r78 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r7 = $r78.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        $r79 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r8 = $r79.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

     label11:
        r2.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 1;

        r2.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 1;

        if r8 == null goto label19;

     label12:
        r8 = virtualinvoke r8.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label13:
        goto label19;

     label14:
        $r114 := @caughtexception;

        if r8 == null goto label19;

     label15:
        virtualinvoke r8.<android.os.ParcelFileDescriptor: void close()>();

     label16:
        goto label18;

     label17:
        $r113 := @caughtexception;

     label18:
        r8 = null;

     label19:
        if r7 == null goto label20;

        $r77 = new android.app.ProfilerInfo;

        $r75 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i9 = $r75.<com.android.server.am.ActivityManagerService: int mSamplingInterval>;

        $r76 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z9 = $r76.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler>;

        specialinvoke $r77.<android.app.ProfilerInfo: void <init>(java.lang.String,android.os.ParcelFileDescriptor,int,boolean)>(r7, r8, $i9, $z9);

        goto label21;

     label20:
        $r77 = null;

     label21:
        r120 = $r77;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(2);

        $r29 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r31 = new android.content.Intent;

        $r32 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        specialinvoke $r31.<android.content.Intent: void <init>(android.content.Intent)>($r32);

        $r30 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r38 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r35 = new android.content.res.Configuration;

        $r33 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r34 = $r33.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r35.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r34);

        $r37 = r1.<com.android.server.am.ActivityRecord: android.content.res.CompatibilityInfo compat>;

        $r39 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r42 = $r39.<com.android.server.am.TaskRecord: com.android.internal.app.IVoiceInteractor voiceInteractor>;

        $i4 = r2.<com.android.server.am.ProcessRecord: int repProcState>;

        $r41 = r1.<com.android.server.am.ActivityRecord: android.os.Bundle icicle>;

        $r40 = r1.<com.android.server.am.ActivityRecord: android.os.PersistableBundle persistentState>;

        if z0 != 0 goto label22;

        $z4 = 1;

        goto label23;

     label22:
        $z4 = 0;

     label23:
        $r36 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z3 = virtualinvoke $r36.<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>();

        interfaceinvoke $r29.<android.app.IApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>($r31, $r30, $i3, $r38, $r35, $r37, $r42, $i4, $r41, $r40, r5, r6, $z4, $z3, r120);

        $r43 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i5 = $r43.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i5 & 268435456;

        if $i6 == 0 goto label25;

        $r60 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r51 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r59 = $r51.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z7 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z7 == 0 goto label25;

        $r61 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r55 = $r61.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r55 == null goto label24;

        $r63 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r62 = $r63.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r62 == r2 goto label24;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting new heavy weight process ");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when already running ");

        $r72 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r68 = $r72.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r67 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r69);

     label24:
        $r56 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r56.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = r2;

        $r57 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r58 = $r57.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r121 = virtualinvoke $r58.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(24);

        r121.<android.os.Message: java.lang.Object obj> = r1;

        $r65 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r66 = $r65.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r66.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r121);

     label25:
        goto label28;

     label26:
        $r115 := @caughtexception;

        r122 = $r115;

        $z15 = r1.<com.android.server.am.ActivityRecord: boolean launchFailed>;

        if $z15 == 0 goto label27;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Second failure launching ");

        $r107 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r108 = virtualinvoke $r107.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r109 = virtualinvoke $r108.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r110 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", giving up");

        $r119 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r119, r122);

        $r118 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r118.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord)>(r2);

        $r117 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r4.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r117, 0, null, "2nd-crash", 0);

        return 0;

     label27:
        $r116 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r116.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        throw r122;

     label28:
        r1.<com.android.server.am.ActivityRecord: boolean launchFailed> = 0;

        $z6 = virtualinvoke r4.<com.android.server.am.ActivityStack: boolean updateLRUListLocked(com.android.server.am.ActivityRecord)>(r1);

        if $z6 == 0 goto label29;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r49 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" being launched, but already in LRU list");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r50);

     label29:
        if z0 == 0 goto label30;

        virtualinvoke r4.<com.android.server.am.ActivityStack: void minimalResumeActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        goto label31;

     label30:
        $r44 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r44;

        r1.<com.android.server.am.ActivityRecord: boolean stopped> = 1;

     label31:
        $z5 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r4);

        if $z5 == 0 goto label32;

        $r45 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r45.<com.android.server.am.ActivityManagerService: void startSetupActivityLocked()>();

     label32:
        $r48 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r46 = $r48.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r47 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r46.<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>($r47);

        return 1;

        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label17;
        catch android.os.RemoteException from label05 to label25 with label26;
    }

    void startSpecificActivityLocked(com.android.server.am.ActivityRecord, boolean, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0, z1, $z4;
        com.android.server.am.ProcessRecord r2;
        android.os.RemoteException r3, $r29;
        android.content.pm.ActivityInfo $r4, $r10, $r17, $r19, $r20, $r27;
        android.content.pm.ApplicationInfo $r5, $r14, $r22;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r12, $r23, $r25, $r26, $r31, $r34;
        com.android.server.am.ActivityManagerService $r7, $r13, $r21;
        com.android.server.am.TaskRecord $r8;
        com.android.server.am.ActivityStack $r9;
        android.content.Intent $r11, $r33;
        android.content.ComponentName $r16, $r30;
        android.app.IApplicationThread $r18;
        com.android.server.am.ProcessStatsService $r24;
        java.lang.StringBuilder $r28, $r32, $r35;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r6 = r1.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $r4 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        r2 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r6, $i0, 1);

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r9 = $r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r9.<com.android.server.am.ActivityStack: void setLaunchTime(com.android.server.am.ActivityRecord)>(r1);

        if r2 == null goto label6;

        $r18 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label6;

     label1:
        $r17 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i2 = $r17.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i2 & 1;

        if $i1 == 0 goto label2;

        $r26 = "android";

        $r27 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r25 = $r27.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z4 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z4 != 0 goto label3;

     label2:
        $r20 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r23 = $r20.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r19 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r22 = $r19.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r22.<android.content.pm.ApplicationInfo: int versionCode>;

        $r21 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r24 = $r21.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>($r23, $i3, $r24);

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>(r1, r2, z0, z1);

     label4:
        return;

     label5:
        $r29 := @caughtexception;

        r3 = $r29;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting activity ");

        $r33 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r30 = virtualinvoke $r33.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r31 = virtualinvoke $r30.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r34, r3);

     label6:
        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r12 = r1.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $r10 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r14 = $r10.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r16 = virtualinvoke $r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>($r12, $r14, 1, 0, "activity", $r16, 0, 0, 1);

        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    final int startActivityLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.content.pm.ActivityInfo, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, android.os.IBinder, java.lang.String, int, int, int, java.lang.String, int, int, int, android.os.Bundle, boolean, com.android.server.am.ActivityRecord[], com.android.server.am.ActivityStackSupervisor$ActivityContainer, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2, r20;
        java.lang.String r3, r8, r9, r18, $r26, $r49, $r55, $r63, $r69, $r90, $r109, $r115, $r117;
        android.content.pm.ActivityInfo r4, $r46, $r80;
        android.service.voice.IVoiceInteractionSession r5, $r81;
        com.android.internal.app.IVoiceInteractor r6;
        android.os.IBinder r7;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, i24, i25;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13;
        android.os.Bundle r10;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r11;
        com.android.server.am.ActivityRecord[] r12;
        byte b6;
        com.android.server.am.TaskRecord r13, $r22, $r82;
        com.android.server.am.ProcessRecord r14;
        com.android.server.am.ActivityStack r15, r19, $r96, $r110, $r111;
        com.android.server.am.ActivityRecord r16, $r31, $r41, $r45, r122, r125;
        com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch r21, $r39;
        android.content.pm.ApplicationInfo $r23, $r29, $r42, $r48, $r74, $r79, $r88, $r112, $r121;
        com.android.server.am.ActivityManagerService $r24, $r25, $r28, $r30, $r33, $r34, $r35, $r37, $r38, $r40, $r43, $r102, $r113;
        com.android.server.firewall.IntentFirewall $r27;
        android.app.IActivityController $r32, $r50;
        android.content.res.Configuration $r36;
        java.util.ArrayList $r44;
        java.lang.StringBuilder $r47, $r51, $r52, $r53, $r54, $r56, $r57, $r58, $r59, $r61, $r62, $r64, $r65, $r66, $r67, $r68, $r70, $r71, $r72, $r73, $r75, $r76, $r77, $r78, $r89, $r91, $r92, $r94, $r97, $r98, $r100, $r101, $r103, $r104, $r105, $r106, $r107, $r108, $r116, $r118;
        java.lang.SecurityException $r60;
        android.content.ComponentName $r83, $r85, $r86;
        android.content.pm.IPackageManager $r84, $r87;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r93, $r95;
        android.os.RemoteException $r114, $r119, $r120;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.pm.ActivityInfo;

        r5 := @parameter4: android.service.voice.IVoiceInteractionSession;

        r6 := @parameter5: com.android.internal.app.IVoiceInteractor;

        r7 := @parameter6: android.os.IBinder;

        r8 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        i1 := @parameter9: int;

        i2 := @parameter10: int;

        r9 := @parameter11: java.lang.String;

        i3 := @parameter12: int;

        i4 := @parameter13: int;

        i5 := @parameter14: int;

        r10 := @parameter15: android.os.Bundle;

        z0 := @parameter16: boolean;

        r12 := @parameter17: com.android.server.am.ActivityRecord[];

        r11 := @parameter18: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r13 := @parameter19: com.android.server.am.TaskRecord;

        b6 = 0;

        r14 = null;

        if r1 == null goto label02;

        $r102 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r14 = virtualinvoke $r102.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r14 == null goto label01;

        i1 = r14.<com.android.server.am.ProcessRecord: int pid>;

        $r121 = r14.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i2 = $r121.<android.content.pm.ApplicationInfo: int uid>;

        goto label02;

     label01:
        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r118 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r117 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();

        $r116 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        $r115 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r115);

        b6 = -4;

     label02:
        if b6 != 0 goto label09;

        if r4 == null goto label03;

        $r112 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i21 = $r112.<android.content.pm.ApplicationInfo: int uid>;

        $i22 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i21);

        goto label04;

     label03:
        $i22 = 0;

     label04:
        i7 = $i22;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("START u");

        $r101 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r90 = virtualinvoke r2.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(1, 1, 1, 0);

        $r89 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} from uid ");

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r94 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on display ");

        if r11 != null goto label06;

        $r110 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        if $r110 != null goto label05;

        $i19 = 0;

        goto label08;

     label05:
        $r111 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        $i19 = $r111.<com.android.server.am.ActivityStack: int mDisplayId>;

        goto label08;

     label06:
        $r93 = r11.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        if $r93 != null goto label07;

        $i19 = 0;

        goto label08;

     label07:
        $r95 = r11.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $i19 = $r95.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

     label08:
        $r108 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r109);

     label09:
        r122 = null;

        r16 = null;

        if r7 == null goto label10;

        r122 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)>(r7);

        if r122 == null goto label10;

        if i0 < 0 goto label10;

        $z12 = r122.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z12 != 0 goto label10;

        r16 = r122;

     label10:
        if r16 != null goto label11;

        $r96 = null;

        goto label12;

     label11:
        $r22 = r16.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r96 = $r22.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

     label12:
        r15 = $r96;

        i8 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i10 = i8 & 33554432;

        if $i10 == 0 goto label15;

        if r122 == null goto label15;

        if i0 < 0 goto label13;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r10);

        return -3;

     label13:
        r16 = r122.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        r8 = r122.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        i0 = r122.<com.android.server.am.ActivityRecord: int requestCode>;

        r122.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

        if r16 == null goto label14;

        virtualinvoke r16.<com.android.server.am.ActivityRecord: void removeResultsLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>(r122, r8, i0);

     label14:
        $i16 = r122.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        if $i16 != i2 goto label15;

        r9 = r122.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

     label15:
        if b6 != 0 goto label16;

        $r85 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r85 != null goto label16;

        b6 = -1;

     label16:
        if b6 != 0 goto label17;

        if r4 != null goto label17;

        b6 = -2;

     label17:
        if b6 != 0 goto label21;

        if r122 == null goto label21;

        $r82 = r122.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r81 = $r82.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r81 == null goto label21;

        $i15 = i8 & 268435456;

        if $i15 != 0 goto label21;

        $r80 = r122.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r79 = $r80.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r79.<android.content.pm.ApplicationInfo: int uid>;

        $r88 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i18 = $r88.<android.content.pm.ApplicationInfo: int uid>;

        if $i17 == $i18 goto label21;

     label18:
        $r87 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r86 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z11 = interfaceinvoke $r87.<android.content.pm.IPackageManager: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>($r86, r2, r3);

        if $z11 != 0 goto label19;

        b6 = -7;

     label19:
        goto label21;

     label20:
        $r120 := @caughtexception;

        b6 = -7;

     label21:
        if b6 != 0 goto label25;

        if r5 == null goto label25;

     label22:
        $r84 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r83 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z10 = interfaceinvoke $r84.<android.content.pm.IPackageManager: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>($r83, r2, r3);

        if $z10 != 0 goto label23;

        b6 = -7;

     label23:
        goto label25;

     label24:
        $r119 := @caughtexception;

        b6 = -7;

     label25:
        if b6 == 0 goto label27;

        if r16 == null goto label26;

        virtualinvoke r15.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, r16, r8, i0, 0, null);

     label26:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r10);

        return b6;

     label27:
        $r24 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        i24 = virtualinvoke $r24.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.START_ANY_ACTIVITY", i1, i2);

        $r25 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r26 = r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r23 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = r4.<android.content.pm.ActivityInfo: boolean exported>;

        i9 = virtualinvoke $r25.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r26, i1, i2, $i11, $z1);

        if i24 == 0 goto label31;

        if i9 == 0 goto label31;

        if r16 == null goto label28;

        virtualinvoke r15.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, r16, r8, i0, 0, null);

     label28:
        $z8 = r4.<android.content.pm.ActivityInfo: boolean exported>;

        if $z8 != 0 goto label29;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r69 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r67 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r65 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r77 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r75 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not exported from uid ");

        $r74 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r74.<android.content.pm.ApplicationInfo: int uid>;

        $r73 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        r18 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label29:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r55 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r52 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r62 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r63 = r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r59 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        r18 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

     label30:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r18);

        $r60 = new java.lang.SecurityException;

        specialinvoke $r60.<java.lang.SecurityException: void <init>(java.lang.String)>(r18);

        throw $r60;

     label31:
        $r28 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r27 = $r28.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall>;

        $r29 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z2 = virtualinvoke $r27.<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>(r2, i2, i1, r3, $r29);

        if $z2 != 0 goto label32;

        $z7 = 1;

        goto label33;

     label32:
        $z7 = 0;

     label33:
        z13 = $z7;

        $r33 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r32 = $r33.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r32 == null goto label39;

     label34:
        r20 = virtualinvoke r2.<android.content.Intent: android.content.Intent cloneFilter()>();

        $r43 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r50 = $r43.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r48 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r49 = $r48.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z9 = interfaceinvoke $r50.<android.app.IActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>(r20, $r49);

        if $z9 != 0 goto label35;

        $z6 = 1;

        goto label36;

     label35:
        $z6 = 0;

     label36:
        z13 = z13 | $z6;

     label37:
        goto label39;

     label38:
        $r114 := @caughtexception;

        $r113 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r113.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

     label39:
        if z13 == 0 goto label41;

        if r16 == null goto label40;

        virtualinvoke r15.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, r16, r8, i0, 0, null);

     label40:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r10);

        return 0;

     label41:
        $r31 = new com.android.server.am.ActivityRecord;

        $r35 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r30 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r36 = $r30.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r31.<com.android.server.am.ActivityRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,java.lang.String,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.am.ActivityRecord,java.lang.String,int,boolean,com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityStackSupervisor$ActivityContainer,android.os.Bundle)>($r35, r14, i2, r9, r2, r3, r4, $r36, r16, r8, i0, z0, r0, r11, r10);

        r125 = $r31;

        if r12 == null goto label42;

        r12[0] = r125;

     label42:
        r19 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        if r5 != null goto label44;

        $r41 = r19.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r41 == null goto label43;

        $r45 = r19.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r46 = $r45.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r42 = $r46.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r42.<android.content.pm.ApplicationInfo: int uid>;

        if $i12 == i2 goto label44;

     label43:
        $r40 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z4 = virtualinvoke $r40.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,int,int,java.lang.String)>(i1, i2, i3, i4, "Activity start");

        if $z4 != 0 goto label44;

        $r39 = new com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch;

        specialinvoke $r39.<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: void <init>(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,com.android.server.am.ActivityStack)>(r125, r122, i5, r19);

        r21 = $r39;

        $r44 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r10);

        return 4;

     label44:
        $r34 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z3 = $r34.<com.android.server.am.ActivityManagerService: boolean mDidAppSwitch>;

        if $z3 == 0 goto label45;

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r37.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = 0L;

        goto label46;

     label45:
        $r38 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r38.<com.android.server.am.ActivityManagerService: boolean mDidAppSwitch> = 1;

     label46:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void doPendingActivityLaunchesLocked(boolean)>(0);

        i25 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,boolean,android.os.Bundle,com.android.server.am.TaskRecord)>(r125, r122, r5, r6, i5, 1, r10, r13);

        if i25 >= 0 goto label47;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void notifyActivityDrawnForKeyguard()>();

     label47:
        return i25;

        catch android.os.RemoteException from label18 to label19 with label20;
        catch android.os.RemoteException from label22 to label23 with label24;
        catch android.os.RemoteException from label34 to label37 with label38;
    }

    com.android.server.am.ActivityStack adjustStackFocus(com.android.server.am.ActivityRecord, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.am.TaskRecord r2;
        com.android.server.am.ActivityStack r3, r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18;
        java.util.ArrayList r4;
        int i0, $i1, $i2, i3;
        java.lang.Object $r11;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r16, r19;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z1 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mLeanbackOnlyDevice>;

        if $z1 != 0 goto label10;

        $z2 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>();

        if $z2 != 0 goto label01;

        if r2 == null goto label10;

        $z6 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isApplicationTask()>();

        if $z6 == 0 goto label10;

     label01:
        if r2 == null goto label03;

        r3 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z5 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z5 == 0 goto label02;

        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        if $r18 == r3 goto label02;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = r3;

     label02:
        return r3;

     label03:
        r19 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor$ActivityContainer mInitialActivityContainer>;

        if r19 == null goto label04;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor$ActivityContainer mInitialActivityContainer> = null;

        $r17 = r19.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        return $r17;

     label04:
        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        if $r8 == $r7 goto label06;

        if z0 == 0 goto label05;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        $r16 = $r14.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $z4 = virtualinvoke $r16.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean isEligibleForNewTasks()>();

        if $z4 == 0 goto label06;

     label05:
        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r15;

     label06:
        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        r4 = $r9.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label07:
        if i0 < 0 goto label09;

        $r11 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ActivityStack) $r11;

        $z3 = virtualinvoke r5.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z3 != 0 goto label08;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = r5;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r13;

     label08:
        i0 = i0 + -1;

        goto label07;

     label09:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int getNextStackId()>();

        i3 = specialinvoke r0.<com.android.server.am.ActivityStackSupervisor: int createStackOnDisplay(int,int)>($i2, 0);

        $r10 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i3);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = $r10;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r12;

     label10:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        return $r6;
    }

    void setFocusedStack(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r3;
        com.android.server.am.TaskRecord r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.am.ActivityStack $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        if r1 == null goto label9;

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z1 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>();

        if $z1 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        z0 = $z6;

        if z0 != 0 goto label5;

        if r2 == null goto label5;

        $z4 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isApplicationTask()>();

        if $z4 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z0 = $z5;

     label5:
        if z0 != 0 goto label8;

        if r2 == null goto label8;

        $r4 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r5 = $r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        r3 = $r5.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityRecord mParentActivity>;

        if r3 == null goto label6;

        $z2 = virtualinvoke r3.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z2 == 0 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        z0 = $z3;

     label8:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>(z0);

     label9:
        return;
    }

    final int startActivityUncheckedLocked(com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, int, boolean, android.os.Bundle, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r2, r8, r9, r12, r15, r16, r17, r18, $r21, $r26, $r27, $r29, $r31, $r65, $r75, $r77, $r91, $r104, $r107, $r146, $r148, $r151, $r153, r178, r182, r183, r184;
        android.service.voice.IVoiceInteractionSession r3;
        com.android.internal.app.IVoiceInteractor r4;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i62;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z13, $z14, $z15, $z17, $z18, $z20, $z21, $z22, $z23, $z24, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, z35, z36, z37;
        android.os.Bundle r5;
        com.android.server.am.TaskRecord r6, r11, r19, r20, $r25, $r32, $r33, $r36, $r42, $r46, $r47, $r61, $r62, $r66, $r69, $r78, $r79, $r80, $r84, $r86, $r87, $r88, $r90, $r93, $r94, $r97, $r102, $r103, $r105, $r106, $r108, $r110, $r111, $r113, $r115, $r119, $r121, $r122, $r123, $r124, $r125, $r131, $r150, r179, r181;
        android.content.Intent r7, r10, $r53, $r55, $r60, $r71, $r85, $r89, $r92, $r98, $r99, $r112, $r114, $r145, r175;
        com.android.server.am.ActivityStack r13, r14, $r28, $r126, $r147, $r152, r176, r177, r180;
        android.content.pm.ActivityInfo $r22, $r34, $r70, $r76, $r149, r174;
        java.lang.String $r23, $r30, $r40, $r51, $r63, $r64, $r127, $r132, $r154, $r157, $r160, $r168, $r173;
        com.android.server.am.UriPermissionOwner $r35;
        com.android.server.am.ActivityManagerService $r37, $r39;
        com.android.server.wm.WindowManagerService $r38, $r44, $r56;
        java.lang.Integer $r41, $r45;
        java.lang.Object[] $r43;
        android.content.ComponentName $r48, $r49, $r67, $r68, $r95, $r96, $r100, $r101, $r143, $r144, $r167, $r169;
        java.lang.StringBuilder $r50, $r52, $r54, $r57, $r58, $r59, $r72, $r73, $r74, $r116, $r117, $r118, $r120, $r128, $r129, $r130, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r155, $r156, $r159, $r161, $r162, $r163, $r164, $r166, $r170, $r171, $r172;
        com.android.server.am.ProcessRecord $r81, $r82;
        android.app.IApplicationThread $r83;
        java.lang.IllegalArgumentException $r142, $r158, $r165;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: android.service.voice.IVoiceInteractionSession;

        r4 := @parameter3: com.android.internal.app.IVoiceInteractor;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r5 := @parameter6: android.os.Bundle;

        r6 := @parameter7: com.android.server.am.TaskRecord;

        r7 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        i1 = r1.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        if r6 == null goto label001;

        $z34 = r6.<com.android.server.am.TaskRecord: boolean inRecents>;

        if $z34 != 0 goto label001;

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting activity in task not in recents: ");

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r173);

        r6 = null;

     label001:
        $i4 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i4 != 1 goto label002;

        $z33 = 1;

        goto label003;

     label002:
        $z33 = 0;

     label003:
        z1 = $z33;

        $i6 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i6 != 3 goto label004;

        $z32 = 1;

        goto label005;

     label004:
        $z32 = 0;

     label005:
        z2 = $z32;

        $i7 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i7 != 2 goto label006;

        $z31 = 1;

        goto label007;

     label006:
        $z31 = 0;

     label007:
        z3 = $z31;

        i2 = virtualinvoke r7.<android.content.Intent: int getFlags()>();

        $i5 = i2 & 524288;

        if $i5 == 0 goto label009;

        if z2 != 0 goto label008;

        if z3 == 0 goto label009;

     label008:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Ignoring FLAG_ACTIVITY_NEW_DOCUMENT, launchMode is \"singleInstance\" or \"singleTask\"");

        i2 = i2 & -134742017;

        goto label014;

     label009:
        $r22 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i8 = $r22.<android.content.pm.ActivityInfo: int documentLaunchMode>;

        tableswitch($i8)
        {
            case 0: goto label010;
            case 1: goto label011;
            case 2: goto label012;
            case 3: goto label013;
            default: goto label014;
        };

     label010:
        goto label014;

     label011:
        i2 = i2 | 524288;

        goto label014;

     label012:
        i2 = i2 | 524288;

        goto label014;

     label013:
        i2 = i2 & -134217729;

     label014:
        $z6 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z6 == 0 goto label015;

        if z3 != 0 goto label015;

        if z2 != 0 goto label015;

        $i62 = i2 & 524288;

        if $i62 == 0 goto label015;

        $z30 = 1;

        goto label016;

     label015:
        $z30 = 0;

     label016:
        z4 = $z30;

        $r21 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r21 == null goto label017;

        $i58 = i2 & 268435456;

        if $i58 == 0 goto label017;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Activity is launching as a new task, so cancelling activity result.");

        $r151 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r150 = $r151.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r152 = $r150.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r153 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r154 = r1.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        $i60 = r1.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke $r152.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r153, $r154, $i60, 0, null);

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

     label017:
        $i11 = i2 & 524288;

        if $i11 == 0 goto label018;

        $r148 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r148 != null goto label018;

        i2 = i2 | 268435456;

     label018:
        $i12 = i2 & 268435456;

        if $i12 == 0 goto label020;

        if z4 != 0 goto label019;

        $r149 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i59 = $r149.<android.content.pm.ActivityInfo: int documentLaunchMode>;

        if $i59 != 2 goto label020;

     label019:
        i2 = i2 | 134217728;

     label020:
        $i9 = i2 & 262144;

        if $i9 != 0 goto label021;

        $z28 = 1;

        goto label022;

     label021:
        $z28 = 0;

     label022:
        r0.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = $z28;

        if z0 != 0 goto label023;

        r1.<com.android.server.am.ActivityRecord: boolean delayedResume> = 1;

     label023:
        $i10 = i2 & 16777216;

        if $i10 == 0 goto label024;

        $r146 = r1;

        goto label025;

     label024:
        $r146 = null;

     label025:
        r9 = $r146;

        $i14 = i0 & 1;

        if $i14 == 0 goto label027;

        r8 = r2;

        if r8 != null goto label026;

        $r147 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r8 = virtualinvoke $r147.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(r9);

     label026:
        $r167 = r8.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r169 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z29 = virtualinvoke $r167.<android.content.ComponentName: boolean equals(java.lang.Object)>($r169);

        if $z29 != 0 goto label027;

        i0 = i0 & -2;

     label027:
        z35 = 0;

        r11 = null;

        if r2 != null goto label035;

        if r6 == null goto label035;

        $r126 = r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r126 == null goto label035;

        r10 = virtualinvoke r6.<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>();

        r12 = virtualinvoke r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getRootActivity()>();

        if r10 != null goto label028;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        $r165 = new java.lang.IllegalArgumentException;

        $r166 = new java.lang.StringBuilder;

        specialinvoke $r166.<java.lang.StringBuilder: void <init>()>();

        $r163 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launching into task without base intent: ");

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r168 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r165.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r168);

        throw $r165;

     label028:
        if z2 != 0 goto label029;

        if z3 == 0 goto label031;

     label029:
        $r144 = virtualinvoke r10.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r145 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r143 = virtualinvoke $r145.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z27 = virtualinvoke $r144.<android.content.ComponentName: boolean equals(java.lang.Object)>($r143);

        if $z27 != 0 goto label030;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        $r158 = new java.lang.IllegalArgumentException;

        $r155 = new java.lang.StringBuilder;

        specialinvoke $r155.<java.lang.StringBuilder: void <init>()>();

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to launch singleInstance/Task ");

        $r161 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into different task ");

        $r159 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r158.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r160);

        throw $r158;

     label030:
        if r12 == null goto label031;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        $r142 = new java.lang.IllegalArgumentException;

        $r139 = new java.lang.StringBuilder;

        specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller with inTask ");

        $r137 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has root ");

        $r135 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but target is singleInstance/Task");

        $r157 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r142.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r157);

        throw $r142;

     label031:
        if r12 != null goto label032;

        $i57 = i2 & -403185665;

        $i54 = virtualinvoke r10.<android.content.Intent: int getFlags()>();

        $i55 = $i54 & 403185664;

        i2 = $i57 | $i55;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setFlags(int)>(i2);

        virtualinvoke r6.<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>(r1);

        z35 = 1;

        goto label034;

     label032:
        $i56 = i2 & 268435456;

        if $i56 == 0 goto label033;

        z35 = 0;

        goto label034;

     label033:
        z35 = 1;

     label034:
        r11 = r6;

        goto label036;

     label035:
        r6 = null;

     label036:
        if r6 != null goto label040;

        if r2 != null goto label037;

        $i51 = i2 & 268435456;

        if $i51 != 0 goto label040;

        if r6 != null goto label040;

        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r129 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r128 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r127);

        i2 = i2 | 268435456;

        goto label040;

     label037:
        $i52 = r2.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i52 != 3 goto label038;

        i2 = i2 | 268435456;

        goto label040;

     label038:
        if z2 != 0 goto label039;

        if z3 == 0 goto label040;

     label039:
        i2 = i2 | 268435456;

     label040:
        r174 = null;

        r175 = null;

        if r2 == null goto label043;

        $z26 = r2.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z26 == 0 goto label042;

        $i47 = i2 & 268435456;

        if $i47 != 0 goto label041;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from finishing ");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; forcing ");

        $r134 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r133 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r132 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r132);

        i2 = i2 | 268435456;

        r174 = r2.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r131 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r175 = $r131.<com.android.server.am.TaskRecord: android.content.Intent intent>;

     label041:
        r2 = null;

        r176 = null;

        goto label044;

     label042:
        $r119 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r176 = $r119.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        goto label044;

     label043:
        r176 = null;

     label044:
        z5 = 0;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setFlags(int)>(i2);

        $i13 = i2 & 268435456;

        if $i13 == 0 goto label045;

        $i49 = i2 & 134217728;

        if $i49 == 0 goto label046;

     label045:
        if z2 != 0 goto label046;

        if z3 == 0 goto label077;

     label046:
        if r6 != null goto label077;

        $r75 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r75 != null goto label077;

        if z2 != 0 goto label047;

        $r77 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)>(r1);

        goto label048;

     label047:
        $r76 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r77 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo)>(r7, $r76);

     label048:
        r15 = $r77;

        if r15 == null goto label077;

        $r78 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z17 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>($r78);

        if $z17 == 0 goto label049;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "startActivityUnchecked: Attempt to violate Lock Task Mode");

        return 5;

     label049:
        $r79 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r79 != null goto label050;

        $r121 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task> = $r121;

     label050:
        $r80 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r13 = $r80.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        r13.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        virtualinvoke r13.<com.android.server.am.ActivityStack: void moveToFront()>();

        $r93 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r92 = $r93.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r92 != null goto label051;

        $r125 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r125.<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>(r1);

     label051:
        r14 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getLastStack()>();

        if r14 != null goto label052;

        $r91 = null;

        goto label053;

     label052:
        $r91 = virtualinvoke r14.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(r9);

     label053:
        r17 = $r91;

        if r17 == null goto label058;

        $r113 = r17.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r111 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r113 != $r111 goto label054;

        $r123 = r17.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r124 = virtualinvoke r14.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if $r123 == $r124 goto label058;

     label054:
        $r112 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r112.<android.content.Intent: android.content.Intent addFlags(int)>(4194304);

        if r2 == null goto label055;

        $r104 = virtualinvoke r176.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>();

        if $r104 == null goto label058;

        $r107 = virtualinvoke r176.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>();

        $r122 = $r107.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r106 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r122 != $r106 goto label058;

     label055:
        if z4 == 0 goto label056;

        if r2 == null goto label056;

        $r105 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r15.<com.android.server.am.ActivityRecord: void setTaskToAffiliateWith(com.android.server.am.TaskRecord)>($r105);

     label056:
        z5 = 1;

        $r108 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r13.<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>($r108, r1, r5);

        $i46 = i2 & 268451840;

        if $i46 != 268451840 goto label057;

        $r110 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r110.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(1);

     label057:
        r5 = null;

     label058:
        $i43 = i2 & 2097152;

        if $i43 == 0 goto label059;

        r15 = virtualinvoke r13.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord resetTaskIfNeededLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>(r15, r1);

     label059:
        $i42 = i0 & 1;

        if $i42 == 0 goto label062;

        if z0 == 0 goto label060;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(r13, null, r5);

        goto label061;

     label060:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

     label061:
        return 1;

     label062:
        $i41 = i2 & 268468224;

        if $i41 != 268468224 goto label063;

        r11 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r11.<com.android.server.am.TaskRecord: void performClearTaskLocked()>();

        virtualinvoke r11.<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>(r1);

        goto label074;

     label063:
        $i40 = i2 & 67108864;

        if $i40 != 0 goto label064;

        if z2 != 0 goto label064;

        if z3 == 0 goto label068;

     label064:
        $r86 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r16 = virtualinvoke $r86.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord performClearTaskLocked(com.android.server.am.ActivityRecord,int)>(r1, i2);

        if r16 == null goto label066;

        $z18 = r16.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z18 == 0 goto label065;

        $r88 = r16.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r88.<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>(r1);

     label065:
        $r90 = r16.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, $r90);

        $r89 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r16.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r89);

        goto label067;

     label066:
        z35 = 1;

        r2 = r15;

     label067:
        goto label074;

     label068:
        $r101 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r87 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r100 = $r87.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $z22 = virtualinvoke $r101.<android.content.ComponentName: boolean equals(java.lang.Object)>($r100);

        if $z22 == 0 goto label072;

        $i45 = i2 & 536870912;

        if $i45 != 0 goto label069;

        if z1 == 0 goto label071;

     label069:
        $r96 = r15.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r95 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z20 = virtualinvoke $r96.<android.content.ComponentName: boolean equals(java.lang.Object)>($r95);

        if $z20 == 0 goto label071;

        $r97 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, $r97);

        $z24 = r15.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z24 == 0 goto label070;

        $r115 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r115.<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>(r1);

     label070:
        $r114 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r15.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r114);

        goto label074;

     label071:
        $r99 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r94 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r98 = $r94.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $z21 = virtualinvoke $r99.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r98);

        if $z21 != 0 goto label074;

        z35 = 1;

        r2 = r15;

        goto label074;

     label072:
        $i44 = i2 & 2097152;

        if $i44 != 0 goto label073;

        z35 = 1;

        r2 = r15;

        goto label074;

     label073:
        $r103 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z23 = $r103.<com.android.server.am.TaskRecord: boolean rootWasReset>;

        if $z23 != 0 goto label074;

        $r102 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r102.<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>(r1);

     label074:
        if z35 != 0 goto label077;

        if r11 != null goto label077;

        if z0 == 0 goto label075;

        virtualinvoke r13.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>(null, r5);

        goto label076;

     label075:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

     label076:
        return 2;

     label077:
        $r23 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        if $r23 == null goto label082;

        r177 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r178 = virtualinvoke r177.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(r9);

        if r178 == null goto label081;

        $r65 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r65 != null goto label081;

        $r67 = r178.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r68 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z14 = virtualinvoke $r67.<android.content.ComponentName: boolean equals(java.lang.Object)>($r68);

        if $z14 == 0 goto label081;

        $i37 = r178.<com.android.server.am.ActivityRecord: int userId>;

        $i36 = r1.<com.android.server.am.ActivityRecord: int userId>;

        if $i37 != $i36 goto label081;

        $r81 = r178.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r81 == null goto label081;

        $r82 = r178.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r83 = $r82.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r83 == null goto label081;

        $i38 = i2 & 536870912;

        if $i38 != 0 goto label078;

        if z1 != 0 goto label078;

        if z3 == 0 goto label081;

     label078:
        $r84 = r178.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r178, $r84);

        r177.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        if z0 == 0 goto label079;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label079:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        $i39 = i0 & 1;

        if $i39 == 0 goto label080;

        return 1;

     label080:
        $r85 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r178.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r85);

        return 3;

     label081:
        goto label084;

     label082:
        $r27 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r27 == null goto label083;

        $r26 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r25 = $r26.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r28 = $r25.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r29 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r30 = r1.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        $i15 = r1.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke $r28.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r29, $r30, $i15, 0, null);

     label083:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        return -2;

     label084:
        z36 = 0;

        z37 = 0;

        if z4 == 0 goto label085;

        if r2 == null goto label085;

        $r66 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        goto label086;

     label085:
        $r66 = null;

     label086:
        r179 = $r66;

        $r31 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r31 != null goto label097;

        if r6 != null goto label097;

        if z35 != 0 goto label097;

        $i33 = i2 & 268435456;

        if $i33 == 0 goto label097;

        $z13 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>(r11);

        if $z13 == 0 goto label087;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted Lock Task Mode violation r=");

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r64 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r64);

        return 5;

     label087:
        z36 = 1;

        r180 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack adjustStackFocus(com.android.server.am.ActivityRecord,boolean)>(r1, z36);

        if z4 != 0 goto label088;

        virtualinvoke r180.<com.android.server.am.ActivityStack: void moveToFront()>();

     label088:
        if r11 != null goto label095;

        $i31 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int getNextTaskId()>();

        if r174 == null goto label089;

        $r70 = r174;

        goto label090;

     label089:
        $r70 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

     label090:
        if r175 == null goto label091;

        $r71 = r175;

        goto label092;

     label091:
        $r71 = r7;

     label092:
        if z4 != 0 goto label093;

        $z15 = 1;

        goto label094;

     label093:
        $z15 = 0;

     label094:
        $r69 = virtualinvoke r180.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord createTaskRecord(int,android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,boolean)>($i31, $r70, $r71, r3, r4, $z15);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>($r69, r179);

        goto label096;

     label095:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>(r11, r179);

     label096:
        if z5 != 0 goto label115;

        $i32 = i2 & 268451840;

        if $i32 != 268451840 goto label115;

        $r62 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r62.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(1);

        goto label115;

     label097:
        if r2 == null goto label106;

        r181 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z10 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>(r181);

        if $z10 == 0 goto label098;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted Lock Task Mode violation r=");

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r63 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r63);

        return 5;

     label098:
        r180 = r181.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke r180.<com.android.server.am.ActivityStack: void moveToFront()>();

        r19 = virtualinvoke r180.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if r19 == r181 goto label099;

        virtualinvoke r180.<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>(r181, r1, r5);

        goto label100;

     label099:
        $r56 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i30 = r19.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r56.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i30);

     label100:
        if z35 != 0 goto label103;

        $i28 = i2 & 67108864;

        if $i28 == 0 goto label103;

        r18 = virtualinvoke r181.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord performClearTaskLocked(com.android.server.am.ActivityRecord,int)>(r1, i2);

        z37 = 1;

        if r18 == null goto label102;

        $r61 = r18.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, $r61);

        $r60 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r18.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r60);

        r180.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        if z0 == 0 goto label101;

        virtualinvoke r180.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label101:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        return 3;

     label102:
        goto label105;

     label103:
        if z35 != 0 goto label105;

        $i29 = i2 & 131072;

        if $i29 == 0 goto label105;

        r182 = virtualinvoke r181.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord findActivityInHistoryLocked(com.android.server.am.ActivityRecord)>(r1);

        if r182 == null goto label105;

        r20 = r182.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r20.<com.android.server.am.TaskRecord: void moveActivityToFrontLocked(com.android.server.am.ActivityRecord)>(r182);

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, r20);

        virtualinvoke r182.<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.os.Bundle)>(r5);

        $r55 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r182.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r55);

        r180.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        if z0 == 0 goto label104;

        virtualinvoke r180.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label104:
        return 3;

     label105:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>(r181, null);

        goto label115;

     label106:
        if r6 == null goto label112;

        $z7 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>(r6);

        if $z7 == 0 goto label107;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted Lock Task Mode violation r=");

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        return 5;

     label107:
        r180 = r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke r180.<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>(r6, r1, r5);

        virtualinvoke r180.<com.android.server.am.ActivityStack: void moveToFront()>();

        $r44 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i21 = r6.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r44.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i21);

        r183 = virtualinvoke r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if r183 == null goto label110;

        $r48 = r183.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r49 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z9 = virtualinvoke $r48.<android.content.ComponentName: boolean equals(java.lang.Object)>($r49);

        if $z9 == 0 goto label110;

        $i24 = r183.<com.android.server.am.ActivityRecord: int userId>;

        $i26 = r1.<com.android.server.am.ActivityRecord: int userId>;

        if $i24 != $i26 goto label110;

        $i23 = i2 & 536870912;

        if $i23 != 0 goto label108;

        if z1 != 0 goto label108;

        if z3 == 0 goto label110;

     label108:
        $r47 = r183.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r183, $r47);

        $i25 = i0 & 1;

        if $i25 == 0 goto label109;

        return 1;

     label109:
        $r53 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r183.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r53);

        return 3;

     label110:
        if z35 != 0 goto label111;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r5);

        return 2;

     label111:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>(r6, null);

        goto label115;

     label112:
        r180 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack adjustStackFocus(com.android.server.am.ActivityRecord,boolean)>(r1, z36);

        virtualinvoke r180.<com.android.server.am.ActivityStack: void moveToFront()>();

        r184 = virtualinvoke r180.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>();

        if r184 == null goto label113;

        $r33 = r184.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        goto label114;

     label113:
        $i16 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int getNextTaskId()>();

        $r34 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r33 = virtualinvoke r180.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord createTaskRecord(int,android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,boolean)>($i16, $r34, r7, null, null, 1);

     label114:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>($r33, null);

        $r38 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r32 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i18 = $r32.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r38.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i18);

     label115:
        $r39 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r40 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r35 = virtualinvoke r1.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        $i17 = r1.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke $r39.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner,int)>(i1, $r40, r7, $r35, $i17);

        if r2 == null goto label116;

        $z8 = virtualinvoke r2.<com.android.server.am.ActivityRecord: boolean isRecentsActivity()>();

        if $z8 == 0 goto label116;

        $r46 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r46.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(2);

     label116:
        if z36 == 0 goto label117;

        $r43 = newarray (java.lang.Object)[2];

        $i20 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r43[0] = $r41;

        $r42 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i19 = $r42.<com.android.server.am.TaskRecord: int taskId>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r43[1] = $r45;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30004, $r43);

     label117:
        $r36 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30005, r1, $r36);

        r180.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        virtualinvoke r180.<com.android.server.am.ActivityStack: void startActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean,boolean,android.os.Bundle)>(r1, z36, z0, z37, r5);

        if z4 != 0 goto label118;

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r37.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r1);

     label118:
        return 0;
    }

    final void doPendingActivityLaunchesLocked(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch r1;
        java.util.ArrayList $r2, $r3, $r7;
        java.lang.Object $r4;
        int $i0;
        com.android.server.am.ActivityRecord $r5, $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r1 = (com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch) $r4;

        $r6 = r1.<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.am.ActivityRecord r>;

        $r5 = r1.<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.am.ActivityRecord sourceRecord>;

        $i0 = r1.<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: int startFlags>;

        if z0 == 0 goto label2;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        $z2 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,boolean,android.os.Bundle,com.android.server.am.TaskRecord)>($r6, $r5, null, null, $i0, $z3, null, null);

        goto label1;

     label4:
        return;
    }

    void removePendingActivityLaunchesLocked(com.android.server.am.ActivityStack)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1, $r6;
        int i0, $i1;
        com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch r2;
        java.util.ArrayList $r3, $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityStack;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch) $r5;

        $r6 = r2.<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.am.ActivityStack stack>;

        if $r6 != r1 goto label2;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mPendingActivityLaunches>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return;
    }

    void acquireLaunchWakelock()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $z0 = virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean hasMessages(int)>(104);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessageDelayed(int,long)>(104, 10000L);

     label1:
        return;
    }

    final com.android.server.am.ActivityRecord activityIdleInternalLocked(android.os.IBinder, boolean, android.content.res.Configuration)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.IBinder r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.content.res.Configuration r2;
        java.util.ArrayList r3, r4, $r7, $r8, $r11, $r12, $r13, $r14, $r26, $r27, $r28, $r29, $r30, $r31, r43, r44;
        com.android.server.am.ActivityRecord r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        com.android.server.am.ActivityStack r6, $r25, $r40;
        com.android.server.am.ActivityManagerService $r9, $r10, $r15, $r16, $r36, $r38, $r39, $r41, $r42;
        java.lang.Object $r17, $r19, $r21, $r23;
        com.android.server.am.UserStartedState $r18, $r22;
        com.android.server.am.TaskRecord $r20, $r24, $r34;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r32, $r35;
        android.os.PowerManager$WakeLock $r33, $r37;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.content.res.Configuration;

        r3 = null;

        r4 = null;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        r5 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r5 == null goto label04;

        $r35 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r35.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int,java.lang.Object)>(100, r5);

        virtualinvoke r5.<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>();

        if z0 == 0 goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void reportActivityLaunchedLocked(boolean,com.android.server.am.ActivityRecord,long,long)>(z0, r5, -1L, -1L);

     label01:
        if r2 == null goto label02;

        r5.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration> = r2;

     label02:
        r5.<com.android.server.am.ActivityRecord: boolean idle> = 1;

        $r34 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r40 = $r34.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z8 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>($r40);

        if $z8 != 0 goto label03;

        if z0 == 0 goto label04;

     label03:
        $r39 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        z1 = $r39.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        $r38 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r38.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        $r41 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z9 = $r41.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z9 != 0 goto label04;

        $r42 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r42.<com.android.server.am.ActivityManagerService: boolean mBooted> = 1;

        z2 = 1;

     label04:
        $z4 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesIdle()>();

        if $z4 == 0 goto label07;

        if r5 == null goto label05;

        $r36 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r36.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label05:
        $r33 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z7 = virtualinvoke $r33.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z7 == 0 goto label06;

        $r32 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r32.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int)>(104);

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r37.<android.os.PowerManager$WakeLock: void release()>();

     label06:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label07:
        r43 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList processStoppingActivitiesLocked(boolean)>(1);

        if r43 == null goto label08;

        $i6 = virtualinvoke r43.<java.util.ArrayList: int size()>();

        goto label09;

     label08:
        $i6 = 0;

     label09:
        i7 = $i6;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i8 = $i1;

        if $i1 <= 0 goto label10;

        $r30 = new java.util.ArrayList;

        $r29 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        specialinvoke $r30.<java.util.ArrayList: void <init>(java.util.Collection)>($r29);

        r3 = $r30;

        $r28 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r28.<java.util.ArrayList: void clear()>();

     label10:
        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label11;

        $r26 = new java.util.ArrayList;

        $r27 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        specialinvoke $r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r27);

        r4 = $r26;

        $r31 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        virtualinvoke $r31.<java.util.ArrayList: void clear()>();

     label11:
        i0 = 0;

     label12:
        if i0 >= i7 goto label15;

        $r23 = virtualinvoke r43.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ActivityRecord) $r23;

        $r24 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r6 = $r24.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z6 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z6 == 0 goto label13;

        virtualinvoke r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r5, 0, 0);

        goto label14;

     label13:
        virtualinvoke r6.<com.android.server.am.ActivityStack: void stopActivityLocked(com.android.server.am.ActivityRecord)>(r5);

     label14:
        i0 = i0 + 1;

        goto label12;

     label15:
        i9 = 0;

     label16:
        if i9 >= i8 goto label17;

        $r19 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r5 = (com.android.server.am.ActivityRecord) $r19;

        $r20 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r25 = $r20.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z5 = virtualinvoke $r25.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r5, 1, "finish-idle");

        z3 = z3 | $z5;

        i9 = i9 + 1;

        goto label16;

     label17:
        if z1 != 0 goto label21;

        if r4 == null goto label19;

        i10 = 0;

     label18:
        $i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i10 >= $i5 goto label19;

        $r16 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r21 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r22 = (com.android.server.am.UserStartedState) $r21;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService: void finishUserSwitch(com.android.server.am.UserStartedState)>($r22);

        i10 = i10 + 1;

        goto label18;

     label19:
        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingBackgroundUsers>;

        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label21;

        $r12 = new java.util.ArrayList;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingBackgroundUsers>;

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        r44 = $r12;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingBackgroundUsers>;

        virtualinvoke $r13.<java.util.ArrayList: void clear()>();

        i11 = 0;

     label20:
        $i4 = virtualinvoke r44.<java.util.ArrayList: int size()>();

        if i11 >= $i4 goto label21;

        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r17 = virtualinvoke r44.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r18 = (com.android.server.am.UserStartedState) $r17;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService: void finishUserBoot(com.android.server.am.UserStartedState)>($r18);

        i11 = i11 + 1;

        goto label20;

     label21:
        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        if z1 != 0 goto label22;

        if z2 == 0 goto label23;

     label22:
        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void postFinishBooting(boolean,boolean)>(z1, z2);

     label23:
        if z3 == 0 goto label24;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label24:
        return r5;
    }

    boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5, $r7;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r6;
        com.android.server.am.ActivityStack $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 = 0;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label4;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r6 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r5;

        r2 = $r6.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label3;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.am.ActivityStack) $r7;

        $z1 = virtualinvoke $r8.<com.android.server.am.ActivityStack: boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)>(r1);

        z0 = z0 | $z1;

        i1 = i1 + -1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return z0;
    }

    void closeSystemDialogsLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4, $r6;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r5;
        com.android.server.am.ActivityStack $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label4;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r5 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r4;

        r1 = $r5.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label3;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.am.ActivityStack) $r6;

        virtualinvoke $r7.<com.android.server.am.ActivityStack: void closeSystemDialogsLocked()>();

        i1 = i1 + -1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    void removeUserLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        virtualinvoke $r1.<android.util.SparseIntArray: void delete(int)>(i0);

        return;
    }

    boolean forceStopPackageLocked(java.lang.String, boolean, boolean, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.lang.String r1;
        boolean z0, z1, z2, $z3;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        z2 = 0;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i4 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i1 = $i4 - 1;

     label1:
        if i1 < 0 goto label5;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ActivityStack) $r8;

        $z3 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean forceStopPackageLocked(java.lang.String,boolean,boolean,int)>(r1, z0, z1, i0);

        if $z3 == 0 goto label3;

        z2 = 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i1 = i1 + -1;

        goto label1;

     label5:
        return z2;
    }

    void updatePreviousProcessLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, $r19, $r20, $r21, $r22;
        com.android.server.am.ProcessRecord r2, $r6, $r7, $r10, $r11, $r13;
        int i0, i1, $i2, $i7;
        java.util.ArrayList r3;
        com.android.server.am.ActivityStack r4;
        android.util.SparseArray $r5, $r16;
        com.android.server.am.ActivityManagerService $r8, $r9, $r12, $r14;
        long $l3, $l4, $l6;
        byte $b5;
        java.lang.Object $r15, $r18;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r17;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = null;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label6;

        $r16 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r17 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r15;

        r3 = $r17.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i7 - 1;

     label2:
        if i1 < 0 goto label5;

        $r18 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityStack) $r18;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r4);

        if $z0 == 0 goto label4;

        $r20 = r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r20 == null goto label3;

        $r21 = r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        r2 = $r21.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        goto label5;

     label3:
        $r19 = r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r19 == null goto label5;

        $r22 = r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        r2 = $r22.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        goto label5;

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        i0 = i0 + -1;

        goto label1;

     label6:
        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label7;

        if r2 == null goto label7;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == r2 goto label7;

        $l4 = r1.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $l3 = $r8.<com.android.server.am.ActivityManagerService: long mPreviousProcessVisibleTime>;

        $b5 = $l4 cmp $l3;

        if $b5 <= 0 goto label7;

        $r10 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r11 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r10 == $r11 goto label7;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess> = $r13;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $l6 = r1.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $r14.<com.android.server.am.ActivityManagerService: long mPreviousProcessVisibleTime> = $l6;

     label7:
        return;
    }

    boolean resumeTopActivitiesLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(null, null, null);

        return $z0;
    }

    boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack, com.android.server.am.ActivityRecord, android.os.Bundle)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1, r5;
        com.android.server.am.ActivityRecord r2;
        android.os.Bundle r3;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r4;
        android.util.SparseArray $r6, $r7;
        java.lang.Object $r8, $r10;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r9;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityStack;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

     label1:
        z0 = 0;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r1);

        if $z1 == 0 goto label2;

        z0 = virtualinvoke r1.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>(r2, r3);

     label2:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label3:
        if i0 < 0 goto label8;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r9 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r8;

        r4 = $r9.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label4:
        if i1 < 0 goto label7;

        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.am.ActivityStack) $r10;

        if r5 != r1 goto label5;

        goto label6;

     label5:
        $z2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r5);

        if $z2 == 0 goto label6;

        virtualinvoke r5.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label6:
        i1 = i1 + -1;

        goto label4;

     label7:
        i0 = i0 + -1;

        goto label3;

     label8:
        return z0;
    }

    void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i1, i2, $i3;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i3 - 1;

     label1:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ActivityStack) $r8;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)>(r1);

        i2 = i2 + 1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    void finishVoiceTask(android.service.voice.IVoiceInteractionSession)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.service.voice.IVoiceInteractionSession r1;
        int i0, i1, i2, $i3;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.service.voice.IVoiceInteractionSession;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i3 - 1;

     label1:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ActivityStack) $r8;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>(r1);

        i2 = i2 + 1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    void findTaskToMoveToFrontLocked(com.android.server.am.TaskRecord, int, android.os.Bundle)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.TaskRecord r1;
        int i0, $i1, $i2;
        android.os.Bundle r2;
        com.android.server.am.ActivityStack $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $i1 = i0 & 2;

        if $i1 != 0 goto label1;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = 1;

     label1:
        $i2 = i0 & 1;

        if $i2 == 0 goto label2;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(1);

     label2:
        $r3 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r3.<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>(r1, null, r2);

        return;
    }

    com.android.server.am.ActivityStack getStack(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.server.am.ActivityStack $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityContainers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActivityStackSupervisor$ActivityContainer) $r3;

        if r1 == null goto label1;

        $r4 = r1.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStack mStack>;

        return $r4;

     label1:
        return null;
    }

    java.util.ArrayList getStacks()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.util.ArrayList r1, $r2, $r7;
        int i0, $i1;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r6 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r5;

        $r7 = $r6.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r7);

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    android.os.IBinder getHomeActivityToken()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        android.view.IApplicationToken$Stub $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord getHomeActivity()>();

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        return $r2;

     label1:
        return null;
    }

    com.android.server.am.ActivityRecord getHomeActivity()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.util.ArrayList r1, r3;
        int i0, i1, $i2, $i3;
        com.android.server.am.TaskRecord r2;
        com.android.server.am.ActivityRecord r4;
        com.android.server.am.ActivityStack $r5;
        java.lang.Object $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        r1 = virtualinvoke $r5.<com.android.server.am.ActivityStack: java.util.ArrayList getAllTasks()>();

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.TaskRecord) $r6;

        $z0 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isHomeTask()>();

        if $z0 == 0 goto label4;

        r3 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityRecord) $r7;

        $z1 = virtualinvoke r4.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z1 == 0 goto label3;

        return r4;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return null;
    }

    com.android.server.am.ActivityStackSupervisor$ActivityContainer createActivityContainer(com.android.server.am.ActivityRecord, android.app.IActivityContainerCallback)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        android.app.IActivityContainerCallback r2;
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r3, $r4;
        int $i0;
        android.util.SparseArray $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: android.app.IActivityContainerCallback;

        $r4 = new com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        specialinvoke $r4.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void <init>(com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityRecord,android.app.IActivityContainerCallback)>(r0, r1, r2);

        r3 = $r4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityContainers>;

        $i0 = r3.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r3);

        $r6 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList mChildContainers>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        return r3;
    }

    void removeChildActivityContainers(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        java.util.ArrayList r2;
        int i0, $i1;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList mChildContainers>;

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r3 = (com.android.server.am.ActivityStackSupervisor$ActivityContainer) $r4;

        virtualinvoke r3.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void release()>();

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    void deleteActivityContainer(android.app.IActivityContainer)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IActivityContainer r1;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r2;
        int i0;
        android.util.SparseArray $r3;
        com.android.server.wm.WindowManagerService $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IActivityContainer;

        r2 = (com.android.server.am.ActivityStackSupervisor$ActivityContainer) r1;

        if r2 == null goto label1;

        i0 = r2.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId>;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityContainers>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void removeStack(int)>(i0);

     label1:
        return;
    }

    private int createStackOnDisplay(int, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r1;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r2, $r5;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r4;

        if r1 != null goto label1;

        return -1;

     label1:
        $r5 = new com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        specialinvoke $r5.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void <init>(com.android.server.am.ActivityStackSupervisor,int)>(r0, i0);

        r2 = $r5;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityContainers>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        virtualinvoke r2.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void attachToDisplayLocked(com.android.server.am.ActivityStackSupervisor$ActivityDisplay)>(r1);

        return i0;
    }

    int getNextStackId()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int $i0, $i1, $i2, $i3;
        com.android.server.am.ActivityStack $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

     label1:
        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        $i1 = $i0 + 1;

        r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId> = $i1;

        if $i1 > 0 goto label2;

        r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId> = 1;

     label2:
        $i2 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        $r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>($i2);

        if $r1 != null goto label1;

        goto label3;

     label3:
        $i3 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        return $i3;
    }

    void createStackForRestoredTaskHistory(java.util.ArrayList)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.util.ArrayList r1, r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.TaskRecord r3;
        com.android.server.am.ActivityRecord r5;
        java.lang.Object $r6, $r8;
        android.content.pm.ActivityInfo $r7, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        android.service.voice.IVoiceInteractionSession $r11;
        com.android.server.wm.WindowManagerService $r12;
        android.view.IApplicationToken$Stub $r13;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.util.ArrayList;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int getNextStackId()>();

        i0 = specialinvoke r0.<com.android.server.am.ActivityStackSupervisor: int createStackOnDisplay(int,int)>($i4, 0);

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i0);

        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i5 - 1;

     label1:
        if i1 < 0 goto label8;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.TaskRecord) $r6;

        virtualinvoke r2.<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,boolean,boolean)>(r3, 0, 0);

        i2 = r3.<com.android.server.am.TaskRecord: int taskId>;

        r4 = r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i6 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i3 = $i6 - 1;

     label2:
        if i3 < 0 goto label7;

        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (com.android.server.am.ActivityRecord) $r8;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r13 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r7 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i11 = $r7.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z1 = r5.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        $r9 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i7 = $r9.<android.content.pm.ActivityInfo: int flags>;

        $i8 = $i7 & 1024;

        if $i8 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $i9 = r5.<com.android.server.am.ActivityRecord: int userId>;

        $r10 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i10 = $r10.<android.content.pm.ActivityInfo: int configChanges>;

        $r11 = r3.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r11 == null goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        $z0 = r5.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        virtualinvoke $r12.<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>(0, $r13, i2, i0, $i11, $z1, $z2, $i9, $i10, $z3, $z0);

        i3 = i3 + -1;

        goto label2;

     label7:
        i1 = i1 + -1;

        goto label1;

     label8:
        return;
    }

    void moveTaskToStack(int, int, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1;
        boolean z0;
        com.android.server.am.TaskRecord r1;
        com.android.server.am.ActivityStack r2, $r3;
        com.android.server.wm.WindowManagerService $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i1);

        if r2 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToStack: no stack for id=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        return;

     label2:
        $r3 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r3.<com.android.server.am.ActivityStack: void removeTask(com.android.server.am.TaskRecord)>(r1);

        virtualinvoke r2.<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,boolean,boolean)>(r1, z0, 1);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void addTask(int,int,boolean)>(i0, i1, z0);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        return;
    }

    com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r4;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7, $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r8;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label7;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r8 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r7;

        r2 = $r8.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label6;

        $r9 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityStack) $r9;

        $z0 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>();

        if $z0 != 0 goto label3;

        $z2 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z2 != 0 goto label3;

        goto label5;

     label3:
        $r10 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $z1 = virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean isEligibleForNewTasks()>();

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        r4 = virtualinvoke r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)>(r1);

        if r4 == null goto label5;

        return r4;

     label5:
        i1 = i1 + -1;

        goto label2;

     label6:
        i0 = i0 + -1;

        goto label1;

     label7:
        return null;
    }

    com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r3;
        com.android.server.am.ActivityRecord r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7, $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r8;
        com.android.server.am.ActivityStack $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r8 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r7;

        r3 = $r8.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (com.android.server.am.ActivityStack) $r9;

        r4 = virtualinvoke $r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo)>(r1, r2);

        if r4 == null goto label3;

        return r4;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return null;
    }

    void goingToSleepLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.PowerManager$WakeLock $r1, $r2, $r3, $r4;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService $r5;
        com.android.server.am.ActivityManagerService$MainHandler $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void scheduleSleepTimeout()>();

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z1 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(104);

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        return;
    }

    boolean shutdownLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i2, i3, $i6, $i10;
        boolean z0, z1, $z2;
        long l1, $l4, $l5, $l7, l11;
        java.util.ArrayList r1;
        android.util.SparseArray $r2, $r3;
        byte $b8;
        com.android.server.am.ActivityManagerService $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r5;
        java.lang.Object $r6, $r7;
        com.android.server.am.ActivityStack $r8;
        java.lang.InterruptedException $r9;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void goingToSleepLocked()>();

        z0 = 0;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = (long) i0;

        l1 = $l4 + $l5;

     label01:
        z1 = 0;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i6 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i2 = $i6 - 1;

     label02:
        if i2 < 0 goto label05;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r1 = $r5.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i10 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i10 - 1;

     label03:
        if i3 < 0 goto label04;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r8 = (com.android.server.am.ActivityStack) $r7;

        $z2 = virtualinvoke $r8.<com.android.server.am.ActivityStack: boolean checkReadyForSleepLocked()>();

        z1 = z1 | $z2;

        i3 = i3 + -1;

        goto label03;

     label04:
        i2 = i2 + -1;

        goto label02;

     label05:
        if z1 == 0 goto label11;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l11 = l1 - $l7;

        $b8 = l11 cmp 0L;

        if $b8 <= 0 goto label09;

     label06:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<java.lang.Object: void wait(long)>(l11);

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        goto label10;

     label09:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Activity manager shutdown timed out");

        z0 = 1;

        goto label11;

     label10:
        goto label01;

     label11:
        r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout> = 1;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        return z0;

        catch java.lang.InterruptedException from label06 to label07 with label08;
    }

    void comeOutOfSleepIfNeededLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r5;
        com.android.server.am.ActivityStack r2;
        android.os.PowerManager$WakeLock $r3, $r10;
        boolean $z0, $z1;
        android.util.SparseArray $r4, $r6;
        java.lang.Object $r7, $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>();

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i2 - 1;

     label2:
        if i0 < 0 goto label6;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r8 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r7;

        r1 = $r8.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label3:
        if i1 < 0 goto label5;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityStack) $r9;

        virtualinvoke r2.<com.android.server.am.ActivityStack: void awakeFromSleepingLocked()>();

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r2);

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label4:
        i1 = i1 + -1;

        goto label3;

     label5:
        i0 = i0 + -1;

        goto label2;

     label6:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        return;
    }

    void activitySleptLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        return;
    }

    void checkReadyForSleepLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.util.ArrayList r1, $r14, $r15, r21;
        com.android.server.am.ActivityManagerService $r2, $r5, $r6;
        android.util.SparseArray $r3, $r9, $r13, $r17;
        android.os.PowerManager$WakeLock $r4, $r7;
        java.lang.Object $r8, $r12, $r16, $r19;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r10, $r18;
        com.android.server.am.ActivityStack $r11, $r20;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z1 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        $z2 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout>;

        if $z2 != 0 goto label08;

        z0 = 0;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i4 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        i0 = $i4 - 1;

     label02:
        if i0 < 0 goto label05;

        $r17 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r16 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r18 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r16;

        r1 = $r18.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i7 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i7 - 1;

     label03:
        if i1 < 0 goto label04;

        $r19 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r20 = (com.android.server.am.ActivityStack) $r19;

        $z5 = virtualinvoke $r20.<com.android.server.am.ActivityStack: boolean checkReadyForSleepLocked()>();

        z0 = z0 | $z5;

        i1 = i1 + -1;

        goto label03;

     label04:
        i0 = i0 + -1;

        goto label02;

     label05:
        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $i5 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label06;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

        z0 = 1;

     label06:
        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        $i6 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label07;

        z0 = 1;

     label07:
        if z0 == 0 goto label08;

        return;

     label08:
        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i8 = $i2 - 1;

     label09:
        if i8 < 0 goto label12;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r8 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        $r10 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r8;

        r21 = $r10.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r21.<java.util.ArrayList: int size()>();

        i9 = $i3 - 1;

     label10:
        if i9 < 0 goto label11;

        $r12 = virtualinvoke r21.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r11 = (com.android.server.am.ActivityStack) $r12;

        virtualinvoke $r11.<com.android.server.am.ActivityStack: void goToSleep()>();

        i9 = i9 + -1;

        goto label10;

     label11:
        i8 = i8 + -1;

        goto label09;

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>();

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z3 = virtualinvoke $r4.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z3 == 0 goto label13;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

     label13:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z4 = $r5.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z4 == 0 goto label14;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

     label14:
        return;
    }

    boolean reportResumedActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.TaskRecord $r3;
        boolean $z0, $z1;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.am.ActivityManagerService $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r2 = $r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.ActivityRecord,boolean)>(r1, 1);

     label1:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesComplete()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

        return 1;

     label2:
        return 0;
    }

    void handleAppCrashLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i1, i2, $i3;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i0 = $i3 - 1;

     label1:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ActivityStack) $r8;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void handleAppCrashLocked(com.android.server.am.ProcessRecord)>(r1);

        i2 = i2 + 1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    boolean requestVisibleBehindLocked(com.android.server.am.ActivityRecord, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r3, r4, $r6, $r15, $r16;
        boolean z0, z1, $z3;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ProcessRecord $r7, $r8, $r10;
        android.app.IApplicationThread $r9, $r12;
        android.view.IApplicationToken$Stub $r11, $r14;
        com.android.server.am.ActivityManagerService $r13;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        $r5 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r2 = $r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if r2 != null goto label01;

        return 0;

     label01:
        z1 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean hasVisibleBehindActivity()>();

        r3 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord topRunningActivityLocked()>();

        if r3 == null goto label02;

        if r3 == r1 goto label02;

        if z0 != z1 goto label05;

     label02:
        if z0 == 0 goto label03;

        $r6 = r1;

        goto label04;

     label03:
        $r6 = null;

     label04:
        virtualinvoke r2.<com.android.server.am.ActivityStack: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>($r6);

        return 1;

     label05:
        if z0 == 0 goto label06;

        $z3 = r3.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z3 == 0 goto label06;

        return 0;

     label06:
        if z0 != 0 goto label07;

        $r16 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>();

        if $r16 == r1 goto label07;

        return 0;

     label07:
        if z0 == 0 goto label08;

        $r15 = r1;

        goto label09;

     label08:
        $r15 = null;

     label09:
        virtualinvoke r2.<com.android.server.am.ActivityStack: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>($r15);

        if z0 != 0 goto label10;

        r4 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findNextTranslucentActivity(com.android.server.am.ActivityRecord)>(r1);

        if r4 == null goto label10;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r14 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService: boolean convertFromTranslucent(android.os.IBinder)>($r14);

     label10:
        $r7 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label14;

        $r8 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 == null goto label14;

     label11:
        $r10 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r12 = $r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r11 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r12.<android.app.IApplicationThread: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>($r11, z0);

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;

     label14:
        return 1;

        catch android.os.RemoteException from label11 to label12 with label13;
    }

    void handleLaunchTaskBehindCompleteLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord r2;
        com.android.server.am.ActivityStack $r3;
        android.graphics.Bitmap $r4;
        com.android.server.am.ActivityManagerService $r5;
        android.view.IApplicationToken$Stub $r6;
        com.android.server.wm.WindowManagerService $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind> = 0;

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ActivityStack: android.graphics.Bitmap screenshotActivities(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r2.<com.android.server.am.TaskRecord: boolean setLastThumbnail(android.graphics.Bitmap)>($r4);

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void addRecentTaskLocked(com.android.server.am.TaskRecord)>(r2);

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r6 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r6, 0);

        return;
    }

    void scheduleLaunchTaskBehindComplete(android.os.IBinder)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(113, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.ArrayList r2;
        com.android.server.am.ActivityStack r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i4 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i1 = $i4 - 1;

     label1:
        if i1 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i5 - 1;

        i3 = i2;

     label2:
        if i3 < 0 goto label3;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ActivityStack) $r8;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(r1, i0);

        i3 = i3 + -1;

        goto label2;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return;
    }

    void scheduleDestroyAllActivities(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;
        int i0, i1, i2, $i3;
        java.util.ArrayList r3;
        com.android.server.am.ActivityStack r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7, $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r8;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i0 = $i3 - 1;

     label1:
        if i0 < 0 goto label4;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r8 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r7;

        r3 = $r8.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ActivityStack) $r9;

        virtualinvoke r4.<com.android.server.am.ActivityStack: void scheduleDestroyActivities(com.android.server.am.ProcessRecord,java.lang.String)>(r1, r2);

        i2 = i2 + 1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    void releaseSomeActivitiesLocked(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;
        com.android.server.am.TaskRecord r3, $r26, $r27, $r31;
        android.util.ArraySet r4, $r30;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        com.android.server.am.ActivityRecord r5;
        java.util.ArrayList r6, $r8, $r15;
        com.android.server.am.ActivityStack r7;
        android.util.SparseArray $r9, $r10;
        java.lang.Object $r11, $r13, $r14;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r12;
        com.android.server.am.ActivityStack$ActivityState $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 = null;

        r4 = null;

        i0 = 0;

     label01:
        $r8 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label08;

        $r15 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r14 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ActivityRecord) $r14;

        $z0 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label02;

        $r18 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r16 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYING>;

        if $r18 == $r16 goto label02;

        $r19 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r17 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

        if $r19 != $r17 goto label03;

     label02:
        return;

     label03:
        $z1 = r5.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z1 != 0 goto label07;

        $z3 = r5.<com.android.server.am.ActivityRecord: boolean stopped>;

        if $z3 == 0 goto label07;

        $z2 = r5.<com.android.server.am.ActivityRecord: boolean haveState>;

        if $z2 == 0 goto label07;

        $r20 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r21 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r20 == $r21 goto label07;

        $r25 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r24 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r25 == $r24 goto label07;

        $r23 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r22 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        if $r23 == $r22 goto label07;

        $r29 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r28 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r29 != $r28 goto label04;

        goto label07;

     label04:
        $r26 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r26 == null goto label07;

        if r3 != null goto label05;

        r3 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        goto label07;

     label05:
        $r27 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r3 == $r27 goto label07;

        if r4 != null goto label06;

        $r30 = new android.util.ArraySet;

        specialinvoke $r30.<android.util.ArraySet: void <init>()>();

        r4 = $r30;

        virtualinvoke r4.<android.util.ArraySet: boolean add(java.lang.Object)>(r3);

     label06:
        $r31 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r4.<android.util.ArraySet: boolean add(java.lang.Object)>($r31);

     label07:
        i0 = i0 + 1;

        goto label01;

     label08:
        if r4 != null goto label09;

        return;

     label09:
        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        i5 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i6 = 0;

     label10:
        if i6 >= i5 goto label14;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r12 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r11;

        r6 = $r12.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        i1 = 0;

     label11:
        $i3 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label13;

        $r13 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r7 = (com.android.server.am.ActivityStack) $r13;

        $i4 = virtualinvoke r7.<com.android.server.am.ActivityStack: int releaseSomeActivitiesLocked(com.android.server.am.ProcessRecord,android.util.ArraySet,java.lang.String)>(r1, r4, r2);

        if $i4 <= 0 goto label12;

        return;

     label12:
        i1 = i1 + 1;

        goto label11;

     label13:
        i6 = i6 + 1;

        goto label10;

     label14:
        return;
    }

    boolean switchUserLocked(int, com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.am.UserStartedState r1;
        java.util.ArrayList r2, $r8;
        com.android.server.am.ActivityStack r3, $r6, r16;
        com.android.server.am.TaskRecord r4, r17;
        android.util.SparseIntArray $r5, $r7;
        android.util.SparseArray $r9, $r12;
        boolean $z1, z3;
        com.android.server.wm.WindowManagerService $r10, $r15;
        java.lang.Object $r11, $r14;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r13;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.UserStartedState;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        $i4 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser>;

        $r6 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $i5 = virtualinvoke $r6.<com.android.server.am.ActivityStack: int getStackId()>();

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>($i4, $i5);

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        i1 = virtualinvoke $r7.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser> = i0;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i6 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i2 = $i6 - 1;

     label1:
        if i2 < 0 goto label5;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r13 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r11;

        r2 = $r13.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = $i8 - 1;

     label2:
        if i3 < 0 goto label4;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ActivityStack) $r14;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void switchUserLocked(int)>(i0);

        r4 = virtualinvoke r3.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if r4 == null goto label3;

        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i9 = r4.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r15.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i9);

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        i2 = i2 + -1;

        goto label1;

     label5:
        r16 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i1);

        if r16 != null goto label6;

        r16 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

     label6:
        z3 = virtualinvoke r16.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        $z1 = virtualinvoke r16.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z1 == 0 goto label8;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>(z3);

        r17 = virtualinvoke r16.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if r17 == null goto label7;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i7 = r17.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i7);

     label7:
        goto label9;

     label8:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeHomeStackTask(int,com.android.server.am.ActivityRecord)>(1, null);

     label9:
        return z3;
    }

    public void startBackgroundUserLocked(int, com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        com.android.server.am.UserStartedState r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.UserStartedState;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingBackgroundUsers>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    final java.util.ArrayList processStoppingActivitiesLocked(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1, $z2, $z3, $z5, $z7;
        int i0, i1;
        java.util.ArrayList r1, $r3, $r4, $r6, $r7, $r10;
        com.android.server.am.ActivityRecord r2;
        java.lang.Object $r5;
        com.android.server.am.ActivityManagerService $r9;
        android.view.IApplicationToken$Stub $r11;
        com.android.server.wm.WindowManagerService $r12;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 > 0 goto label1;

        return null;

     label1:
        r1 = null;

        z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesVisible()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r5;

        $z2 = r2.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z2 == 0 goto label3;

        if z1 == 0 goto label3;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        r2.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

        $z7 = r2.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z7 == 0 goto label3;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r11 = r2.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r12.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r11, 0);

     label3:
        $z3 = r2.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z3 == 0 goto label4;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z5 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z5 == 0 goto label6;

     label4:
        if z0 == 0 goto label6;

        if r1 != null goto label5;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = $r7;

     label5:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i0 = i0 + -1;

        i1 = i1 + -1;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        return r1;
    }

    void validateTopActivitiesLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r12, $r17, $r20, $r26;
        java.lang.StringBuilder $r3, $r4, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r19, $r21, $r22, $r23, $r24;
        com.android.server.am.ActivityStack $r5, $r8;
        boolean $z0;
        int $i0;
        android.util.SparseIntArray $r18;
        android.util.SparseArray $r25;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFocusedStack=");

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLastFocusedStack=");

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mLastFocusedStack>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSleepTimeout=");

        $z0 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurTaskId=");

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUserStackInFront=");

        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mActivityContainers=");

        $r25 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityContainers>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        return;
    }

    java.util.ArrayList getDumpActivitiesLocked(java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.lang.String r1;
        com.android.server.am.ActivityStack $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityStack: java.util.ArrayList getDumpActivitiesLocked(java.lang.String)>(r1);

        return $r3;
    }

    static boolean printThisActivity(java.io.PrintWriter, com.android.server.am.ActivityRecord, java.lang.String, boolean, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.android.server.am.ActivityRecord r1;
        java.lang.String r2, r3, $r4;
        boolean z0, $z1;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        if r1 == null goto label3;

        if r2 == null goto label1;

        $r4 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r1);

        return 1;

     label3:
        return 0;
    }

    boolean dumpActivitiesLocked(java.io.FileDescriptor, java.io.PrintWriter, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, z20, z21, z22, z23, z24, z25, z26, z27;
        java.lang.String r3, $r19;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r4;
        java.util.ArrayList r5, $r9, $r10, $r11, $r12, $r13, $r23;
        com.android.server.am.ActivityStack r6;
        java.lang.StringBuilder r7, $r18;
        android.util.SparseArray $r8, $r14;
        java.lang.Object $r15, $r17;
        com.android.server.am.ActivityRecord $r22, $r24, $r25, $r26;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        z2 = 0;

        z3 = 0;

        i0 = 0;

     label01:
        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label10;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r15;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Display #");

        $i3 = r4.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" (activities from top to bottom):");

        r5 = r4.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i4 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i1 = $i4 - 1;

     label02:
        if i1 < 0 goto label09;

        $r17 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.am.ActivityStack) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(int)>(128);

        r7 = $r18;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Stack #");

        $i5 = r6.<com.android.server.am.ActivityStack: int mStackId>;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z15 = virtualinvoke r6.<com.android.server.am.ActivityStack: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,boolean,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, z1, r3, z3, $r19);

        z19 = z2 | $z15;

        $r23 = r6.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities>;

        if z0 != 0 goto label03;

        $z17 = 1;

        goto label04;

     label03:
        $z17 = 0;

     label04:
        $z16 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r23, "    ", "Run", 0, $z17, 0, r3, 1, "    Running activities (most recent first):", null);

        z2 = z19 | $z16;

        z20 = z2;

        $r22 = r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        z4 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r22, r3, z20, "    mPausingActivity: ");

        if z4 == 0 goto label05;

        z2 = 1;

        z20 = 0;

     label05:
        $r25 = r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        z21 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r25, r3, z20, "    mResumedActivity: ");

        if z21 == 0 goto label06;

        z2 = 1;

        z20 = 0;

     label06:
        if z0 == 0 goto label08;

        $r24 = r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity>;

        z22 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r24, r3, z20, "    mLastPausedActivity: ");

        if z22 == 0 goto label07;

        z2 = 1;

        z20 = 1;

     label07:
        $r26 = r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity>;

        $z18 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r26, r3, z20, "    mLastNoHistoryActivity: ");

        z2 = z2 | $z18;

     label08:
        z3 = z2;

        i1 = i1 + -1;

        goto label02;

     label09:
        i0 = i0 + 1;

        goto label01;

     label10:
        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        if z0 != 0 goto label11;

        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        $z5 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r9, "  ", "Fin", 0, $z13, 0, r3, 1, "  Activities waiting to finish:", null);

        z23 = z2 | $z5;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        if z0 != 0 goto label13;

        $z14 = 1;

        goto label14;

     label13:
        $z14 = 0;

     label14:
        $z6 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r10, "  ", "Stop", 0, $z14, 0, r3, 1, "  Activities waiting to stop:", null);

        z24 = z23 | $z6;

        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        if z0 != 0 goto label15;

        $z11 = 1;

        goto label16;

     label15:
        $z11 = 0;

     label16:
        $z7 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r11, "  ", "Wait", 0, $z11, 0, r3, 1, "  Activities waiting for another to become visible:", null);

        z25 = z24 | $z7;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        if z0 != 0 goto label17;

        $z12 = 1;

        goto label18;

     label17:
        $z12 = 0;

     label18:
        $z8 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r12, "  ", "Sleep", 0, $z12, 0, r3, 1, "  Activities waiting to sleep:", null);

        z26 = z25 | $z8;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        if z0 != 0 goto label19;

        $z9 = 1;

        goto label20;

     label19:
        $z9 = 0;

     label20:
        $z10 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r13, "  ", "Sleep", 0, $z9, 0, r3, 1, "  Activities waiting to sleep:", null);

        z27 = z26 | $z10;

        return z27;
    }

    static boolean dumpHistoryList(java.io.FileDescriptor, java.io.PrintWriter, java.util.List, java.lang.String, java.lang.String, boolean, boolean, boolean, java.lang.String, boolean, java.lang.String, java.lang.String)
    {
        java.io.FileDescriptor r0, $r22;
        java.io.PrintWriter r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r6, r7, r9, $r24, $r31, $r34, $r36, $r37, $r43, $r44, $r53;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8;
        com.android.server.am.TaskRecord r8, $r14;
        java.lang.String[] r10;
        com.android.server.am.ActivityRecord r11;
        int i0, $i1;
        com.android.internal.os.TransferPipe r12, $r18;
        java.lang.Throwable r13, $r51;
        java.lang.Object $r15;
        com.android.server.am.ProcessRecord $r16, $r17, $r21, $r25, $r30;
        android.app.IApplicationThread $r19, $r20;
        android.os.ParcelFileDescriptor $r23;
        android.view.IApplicationToken$Stub $r26;
        android.content.Intent $r27, $r28, $r29;
        java.lang.StringBuilder $r32, $r33, $r35, $r38, $r39, $r40, $r41, $r45, $r46, $r47, $r48, $r49, $r52;
        java.io.IOException $r42, r54;
        android.os.RemoteException $r50;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        r5 := @parameter8: java.lang.String;

        z3 := @parameter9: boolean;

        r6 := @parameter10: java.lang.String;

        r7 := @parameter11: java.lang.String;

        r8 = null;

        r9 = null;

        r10 = null;

        z4 = 0;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i0 = $i1 - 1;

     label01:
        if i0 < 0 goto label28;

        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r11 = (com.android.server.am.ActivityRecord) $r15;

        if r5 == null goto label02;

        $r43 = r11.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        if $z8 != 0 goto label02;

        goto label27;

     label02:
        if r9 != null goto label03;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        r9 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = newarray (java.lang.String)[0];

     label03:
        z4 = 1;

        if z1 != 0 goto label05;

        if z0 != 0 goto label04;

        $z7 = virtualinvoke r11.<com.android.server.am.ActivityRecord: boolean isInHistory()>();

        if $z7 != 0 goto label05;

     label04:
        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z5 = $z6;

        if z3 == 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        z3 = 0;

     label07:
        if r6 == null goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r6);

        r6 = null;

     label08:
        if r7 == null goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r7);

        r7 = null;

     label09:
        $r14 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r8 == $r14 goto label13;

        r8 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        if z5 == 0 goto label10;

        $r37 = "* ";

        goto label11;

     label10:
        $r37 = "  ";

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r37);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r8);

        if z5 == 0 goto label12;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r36);

        goto label13;

     label12:
        if z0 == 0 goto label13;

        $r28 = r8.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r28 == null goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r29 = r8.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r34 = virtualinvoke $r29.<android.content.Intent: java.lang.String toInsecureStringWithClip()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r34);

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        if z5 == 0 goto label14;

        $r31 = "  * ";

        goto label15;

     label14:
        $r31 = "    ";

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r11);

        if z5 == 0 goto label16;

        virtualinvoke r11.<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, r9);

        goto label17;

     label16:
        if z0 == 0 goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        $r27 = r11.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r24 = virtualinvoke $r27.<android.content.Intent: java.lang.String toInsecureString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r25 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r25 == null goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        $r30 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r30);

     label17:
        if z2 == 0 goto label27;

        $r17 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r17 == null goto label27;

        $r16 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r19 = $r16.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r19 == null goto label27;

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label18:
        $r18 = new com.android.internal.os.TransferPipe;

        specialinvoke $r18.<com.android.internal.os.TransferPipe: void <init>()>();

        r12 = $r18;

     label19:
        $r21 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r23 = virtualinvoke r12.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r22 = virtualinvoke $r23.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r26 = r11.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r20.<android.app.IApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>($r22, $r26, r9, r10);

        virtualinvoke r12.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r0, 2000L);

     label20:
        virtualinvoke r12.<com.android.internal.os.TransferPipe: void kill()>();

        goto label23;

     label21:
        $r51 := @caughtexception;

        r13 = $r51;

     label22:
        virtualinvoke r12.<com.android.internal.os.TransferPipe: void kill()>();

        throw r13;

     label23:
        goto label26;

     label24:
        $r42 := @caughtexception;

        r54 = $r42;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the activity: ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        goto label26;

     label25:
        $r50 := @caughtexception;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the activity");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r53);

     label26:
        z3 = 1;

     label27:
        i0 = i0 + -1;

        goto label01;

     label28:
        return z4;

        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.io.IOException from label18 to label23 with label24;
        catch android.os.RemoteException from label18 to label23 with label25;
    }

    void scheduleIdleTimeoutLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        android.os.Message r2;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r3, $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(100, r1);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 10000L);

        return;
    }

    final void scheduleIdleLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessage(int)>(101);

        return;
    }

    void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int,java.lang.Object)>(100, r1);

        return;
    }

    final void scheduleResumeTopActivities()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $z0 = virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean hasMessages(int)>(102);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessage(int)>(102);

     label1:
        return;
    }

    void removeSleepTimeouts()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout> = 0;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int)>(103);

        return;
    }

    final void scheduleSleepTimeout()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>();

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessageDelayed(int,long)>(103, 5000L);

        return;
    }

    public void onDisplayAdded(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r5, $r6;
        android.os.Message $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display added displayId=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r7 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,int,int)>(105, i0, 0);

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void onDisplayRemoved(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r5, $r6;
        android.os.Message $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display removed displayId=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r7 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,int,int)>(107, i0, 0);

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void onDisplayChanged(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r5, $r6;
        android.os.Message $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display changed displayId=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r7 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,int,int)>(106, i0, 0);

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void handleDisplayAddedLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService r1, $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r2, $r8;
        java.lang.Throwable r3, $r16;
        android.util.SparseArray $r5, $r10;
        java.lang.Object $r6;
        com.android.server.wm.WindowManagerService $r7;
        android.view.Display $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r15;
        java.lang.String $r14;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r6 != null goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z0 = $z1;

        if z0 == 0 goto label06;

        $r8 = new com.android.server.am.ActivityStackSupervisor$ActivityDisplay;

        specialinvoke $r8.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor,int)>(r0, i0);

        r2 = $r8;

        $r9 = r2.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: android.view.Display mDisplay>;

        if $r9 != null goto label05;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gone before initialization complete");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        if z0 == 0 goto label11;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void onDisplayAdded(int)>(i0);

     label11:
        return;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void handleDisplayRemovedLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2;
        com.android.server.am.ActivityManagerService r1, $r5;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r2;
        java.util.ArrayList r3;
        java.lang.Throwable r4, $r12;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7, $r10;
        com.android.server.wm.WindowManagerService $r8;
        com.android.server.am.ActivityStack $r11;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r13;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r7;

        if r2 == null goto label4;

        r3 = r2.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label2:
        if i1 < 0 goto label3;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r11 = (com.android.server.am.ActivityStack) $r10;

        $r13 = $r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void detachLocked()>();

        i1 = i1 + -1;

        goto label2;

     label3:
        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r1;

     label7:
        throw r4;

     label8:
        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void onDisplayRemoved(int)>(i0);

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void handleDisplayChangedLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay r2;
        java.lang.Throwable r3, $r8;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        com.android.server.wm.WindowManagerService $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        if r2 == null goto label2;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void onDisplayChanged(int)>(i0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.app.ActivityManager$StackInfo getStackInfo(com.android.server.am.ActivityStack)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1;
        android.app.ActivityManager$StackInfo r2, $r7;
        java.util.ArrayList r3;
        int i0, i1, $i2, $i3, $i4;
        int[] r4;
        java.lang.String[] r5;
        com.android.server.am.TaskRecord r6;
        android.graphics.Rect $r8;
        com.android.server.wm.WindowManagerService $r9;
        java.lang.Object $r10;
        android.content.ComponentName $r11, $r12, $r15, $r17;
        com.android.server.am.ActivityRecord $r13, $r14;
        java.lang.String $r16;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityStack;

        $r7 = new android.app.ActivityManager$StackInfo;

        specialinvoke $r7.<android.app.ActivityManager$StackInfo: void <init>()>();

        r2 = $r7;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i2 = r1.<com.android.server.am.ActivityStack: int mStackId>;

        $r8 = r2.<android.app.ActivityManager$StackInfo: android.graphics.Rect bounds>;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void getStackBounds(int,android.graphics.Rect)>($i2, $r8);

        r2.<android.app.ActivityManager$StackInfo: int displayId> = 0;

        $i3 = r1.<com.android.server.am.ActivityStack: int mStackId>;

        r2.<android.app.ActivityManager$StackInfo: int stackId> = $i3;

        r3 = virtualinvoke r1.<com.android.server.am.ActivityStack: java.util.ArrayList getAllTasks()>();

        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        r4 = newarray (int)[i0];

        r5 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.am.TaskRecord) $r10;

        $i4 = r6.<com.android.server.am.TaskRecord: int taskId>;

        r4[i1] = $i4;

        $r12 = r6.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        if $r12 == null goto label2;

        $r17 = r6.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        $r16 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String flattenToString()>();

        goto label5;

     label2:
        $r11 = r6.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        if $r11 == null goto label3;

        $r15 = r6.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $r16 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String flattenToString()>();

        goto label5;

     label3:
        $r14 = virtualinvoke r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r14 == null goto label4;

        $r13 = virtualinvoke r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        $r16 = $r13.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        goto label5;

     label4:
        $r16 = "unknown";

     label5:
        r5[i1] = $r16;

        i1 = i1 + 1;

        goto label1;

     label6:
        r2.<android.app.ActivityManager$StackInfo: int[] taskIds> = r4;

        r2.<android.app.ActivityManager$StackInfo: java.lang.String[] taskNames> = r5;

        return r2;
    }

    android.app.ActivityManager$StackInfo getStackInfoLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        com.android.server.am.ActivityStack r1;
        android.app.ActivityManager$StackInfo $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i0);

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.app.ActivityManager$StackInfo getStackInfo(com.android.server.am.ActivityStack)>(r1);

        return $r2;

     label1:
        return null;
    }

    java.util.ArrayList getAllStackInfosLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.util.ArrayList r1, r2, $r3;
        int i0, i1, $i2, $i3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r7;
        com.android.server.am.ActivityStack $r9;
        android.app.ActivityManager$StackInfo $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        i0 = 0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (com.android.server.am.ActivityStackSupervisor$ActivityDisplay) $r6;

        r2 = $r7.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label3;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.am.ActivityStack) $r8;

        $r10 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.app.ActivityManager$StackInfo getStackInfo(com.android.server.am.ActivityStack)>($r9);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i1 = i1 + -1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return r1;
    }

    void showLockTaskToast()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean $z0;
        com.android.server.am.LockTaskNotify $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.LockTaskNotify mLockTaskNotify>;

        $z0 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mLockTaskIsLocked>;

        virtualinvoke $r1.<com.android.server.am.LockTaskNotify: void showToast(boolean)>($z0);

        return;
    }

    void setLockTaskModeLocked(com.android.server.am.TaskRecord, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.TaskRecord r1, $r3, $r7, $r9, $r10;
        boolean z0, $z1;
        android.os.Message r2, r12;
        android.content.Intent $r4;
        android.content.ComponentName $r5;
        java.lang.String $r6;
        int $i0, $i3;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r8, $r11;
        byte $b1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        if r1 != null goto label2;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r9 == null goto label1;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        $i3 = $r10.<com.android.server.am.TaskRecord: int userId>;

        r2.<android.os.Message: int arg1> = $i3;

        r2.<android.os.Message: int what> = 110;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask> = null;

        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessage(android.os.Message)>(r2);

     label1:
        return;

     label2:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>(r1);

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "setLockTaskMode: Attempt to start a second Lock Task Mode task.");

        return;

     label3:
        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask> = r1;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void findTaskToMoveToFrontLocked(com.android.server.am.TaskRecord,int,android.os.Bundle)>(r1, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        r12 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        $r4 = $r3.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        r12.<android.os.Message: java.lang.Object obj> = $r6;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        $i0 = $r7.<com.android.server.am.TaskRecord: int userId>;

        r12.<android.os.Message: int arg1> = $i0;

        r12.<android.os.Message: int what> = 109;

        if z0 != 0 goto label4;

        $b1 = 1;

        goto label5;

     label4:
        $b1 = 0;

     label5:
        r12.<android.os.Message: int arg2> = $b1;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessage(android.os.Message)>(r12);

        return;
    }

    boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.TaskRecord r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r3 == r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void endLockTaskModeIfTaskEnding(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.TaskRecord r1, $r3, $r4, $r5;
        android.os.Message r2;
        int $i0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r4 != r1 goto label1;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        $i0 = $r5.<com.android.server.am.TaskRecord: int userId>;

        r2.<android.os.Message: int arg1> = $i0;

        r2.<android.os.Message: int what> = 110;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask> = null;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessage(android.os.Message)>(r2);

     label1:
        return;
    }

    boolean isInLockTaskMode()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.TaskRecord $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord mLockTaskModeTask>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isLeanbackOnlyDevice()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 = 0;

     label1:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        z0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.leanback_only");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static com.android.server.am.LockTaskNotify access$000(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.LockTaskNotify $r1;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.LockTaskNotify mLockTaskNotify>;

        return $r1;
    }

    static com.android.server.am.LockTaskNotify access$002(com.android.server.am.ActivityStackSupervisor, com.android.server.am.LockTaskNotify)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.LockTaskNotify r1;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter1: com.android.server.am.LockTaskNotify;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.LockTaskNotify mLockTaskNotify> = r1;

        return r1;
    }

    static boolean access$102(com.android.server.am.ActivityStackSupervisor, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter1: boolean;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mLockTaskIsLocked> = z0;

        return z0;
    }

    static com.android.internal.statusbar.IStatusBarService access$200(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.internal.statusbar.IStatusBarService $r1;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $r1 = specialinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.internal.statusbar.IStatusBarService getStatusBarService()>();

        return $r1;
    }

    static boolean access$100(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $z0 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mLockTaskIsLocked>;

        return $z0;
    }

    static android.os.IBinder access$300(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.IBinder mToken>;

        return $r1;
    }

    static android.app.admin.IDevicePolicyManager access$400(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.admin.IDevicePolicyManager $r1;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $r1 = specialinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.app.admin.IDevicePolicyManager getDevicePolicyManager()>();

        return $r1;
    }

    static android.util.SparseArray access$500(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray mActivityDisplays>;

        return $r1;
    }

    static int access$600(com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int $i0;

        r0 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityStackSupervisor: boolean VALIDATE_WAKE_LOCK_CALLER> = 0;

        <com.android.server.am.ActivityStackSupervisor: java.lang.String LOCK_TASK_TAG> = "Lock-to-App";

        <com.android.server.am.ActivityStackSupervisor: java.lang.String VIRTUAL_DISPLAY_BASE_NAME> = "ActivityViewVirtualDisplay";

        <com.android.server.am.ActivityStackSupervisor: int LAUNCH_TASK_BEHIND_COMPLETE> = 113;

        <com.android.server.am.ActivityStackSupervisor: int CONTAINER_TASK_LIST_EMPTY_TIMEOUT> = 112;

        <com.android.server.am.ActivityStackSupervisor: int CONTAINER_CALLBACK_TASK_LIST_EMPTY> = 111;

        <com.android.server.am.ActivityStackSupervisor: int LOCK_TASK_END_MSG> = 110;

        <com.android.server.am.ActivityStackSupervisor: int LOCK_TASK_START_MSG> = 109;

        <com.android.server.am.ActivityStackSupervisor: int CONTAINER_CALLBACK_VISIBILITY> = 108;

        <com.android.server.am.ActivityStackSupervisor: int HANDLE_DISPLAY_REMOVED> = 107;

        <com.android.server.am.ActivityStackSupervisor: int HANDLE_DISPLAY_CHANGED> = 106;

        <com.android.server.am.ActivityStackSupervisor: int HANDLE_DISPLAY_ADDED> = 105;

        <com.android.server.am.ActivityStackSupervisor: int LAUNCH_TIMEOUT_MSG> = 104;

        <com.android.server.am.ActivityStackSupervisor: int SLEEP_TIMEOUT_MSG> = 103;

        <com.android.server.am.ActivityStackSupervisor: int RESUME_TOP_ACTIVITY_MSG> = 102;

        <com.android.server.am.ActivityStackSupervisor: int IDLE_NOW_MSG> = 101;

        <com.android.server.am.ActivityStackSupervisor: int IDLE_TIMEOUT_MSG> = 100;

        <com.android.server.am.ActivityStackSupervisor: int LAUNCH_TIMEOUT> = 10000;

        <com.android.server.am.ActivityStackSupervisor: int SLEEP_TIMEOUT> = 5000;

        <com.android.server.am.ActivityStackSupervisor: int IDLE_TIMEOUT> = 10000;

        <com.android.server.am.ActivityStackSupervisor: int HOME_STACK_ID> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_VISIBLE_BEHIND> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_STATES> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_SCREENSHOTS> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_SAVED_STATE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_RELEASE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_IDLE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_CONTAINERS> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_APP> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_ADD_REMOVE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG> = 0;

        return;
    }
}
