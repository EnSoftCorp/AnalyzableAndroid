abstract class com.android.server.location.RemoteListenerHelper extends java.lang.Object
{
    private final java.lang.String mTag;
    private final java.util.HashMap mListenerMap;

    protected void <init>(java.lang.String)
    {
        com.android.server.location.RemoteListenerHelper r0;
        java.lang.String r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.location.RemoteListenerHelper;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap> = $r2;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag> = r1;

        return;
    }

    public boolean addListener(android.os.IInterface)
    {
        com.android.server.location.RemoteListenerHelper r0;
        android.os.IInterface r1;
        android.os.IBinder r2;
        com.android.server.location.RemoteListenerHelper$LinkedListener r3, $r8;
        java.util.HashMap r4, $r9, $r10, $r11, $r13;
        android.os.RemoteException r5, $r17;
        java.lang.Throwable r6, $r16;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.String $r14, $r15, $r18;

        r0 := @this: com.android.server.location.RemoteListenerHelper;

        r1 := @parameter0: android.os.IInterface;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Attempted to register a \'null\' listener.");

        $z0 = virtualinvoke r0.<com.android.server.location.RemoteListenerHelper: boolean isSupported()>();

        if $z0 != 0 goto label01;

        $r15 = r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r15, "Refused to add listener, the feature is not supported.");

        return 0;

     label01:
        r2 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        $r8 = new com.android.server.location.RemoteListenerHelper$LinkedListener;

        specialinvoke $r8.<com.android.server.location.RemoteListenerHelper$LinkedListener: void <init>(com.android.server.location.RemoteListenerHelper,android.os.IInterface)>(r0, r1);

        r3 = $r8;

        $r9 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        r4 = $r9;

        entermonitor $r9;

     label02:
        $r10 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        $z1 = virtualinvoke $r10.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label04;

        exitmonitor r4;

     label03:
        return 1;

     label04:
        interfaceinvoke r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r3, 0);

     label05:
        goto label08;

     label06:
        $r17 := @caughtexception;

        r5 = $r17;

        $r18 = r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r18, "Remote listener already died.", r5);

        exitmonitor r4;

     label07:
        return 0;

     label08:
        $r11 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r13 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        $i0 = virtualinvoke $r13.<java.util.HashMap: int size()>();

        if $i0 != 1 goto label10;

        $z2 = virtualinvoke r0.<com.android.server.location.RemoteListenerHelper: boolean registerWithService()>();

        if $z2 != 0 goto label10;

        $r14 = r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r14, "RegisterWithService failed, listener will be removed.");

        virtualinvoke r0.<com.android.server.location.RemoteListenerHelper: boolean removeListener(android.os.IInterface)>(r1);

        exitmonitor r4;

     label09:
        return 0;

     label10:
        exitmonitor r4;

     label11:
        goto label14;

     label12:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r4;

     label13:
        throw r6;

     label14:
        return 1;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public boolean removeListener(android.os.IInterface)
    {
        com.android.server.location.RemoteListenerHelper r0;
        android.os.IInterface r1;
        android.os.IBinder r2;
        com.android.server.location.RemoteListenerHelper$LinkedListener r3;
        java.util.HashMap r4, $r7, $r8, $r10;
        java.lang.Throwable r5, $r12;
        boolean $z0, $z1;
        java.lang.Object $r9;
        java.lang.String $r11;

        r0 := @this: com.android.server.location.RemoteListenerHelper;

        r1 := @parameter0: android.os.IInterface;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Attempted to remove a \'null\' listener.");

        $z0 = virtualinvoke r0.<com.android.server.location.RemoteListenerHelper: boolean isSupported()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r11, "Refused to remove listener, the feature is not supported.");

        return 0;

     label1:
        r2 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        $r7 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        r4 = $r7;

        entermonitor $r7;

     label2:
        $r8 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        r3 = (com.android.server.location.RemoteListenerHelper$LinkedListener) $r9;

        $r10 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        $z1 = virtualinvoke $r10.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        if r3 == null goto label3;

        virtualinvoke r0.<com.android.server.location.RemoteListenerHelper: void unregisterFromService()>();

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        if r3 == null goto label8;

        interfaceinvoke r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r3, 0);

     label8:
        return 1;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected abstract boolean isSupported();

    protected abstract boolean registerWithService();

    protected abstract void unregisterFromService();

    protected void foreach(com.android.server.location.RemoteListenerHelper$ListenerOperation)
    {
        com.android.server.location.RemoteListenerHelper r0;
        com.android.server.location.RemoteListenerHelper$ListenerOperation r1;
        java.util.ArrayList r2, $r9;
        java.util.HashMap r3, $r7, $r8;
        java.util.Collection r4;
        java.lang.Throwable r5, $r11;
        android.os.RemoteException r6, $r13;
        boolean $z0;
        java.lang.Object $r10;
        java.lang.String $r12;
        java.util.Iterator r14;
        com.android.server.location.RemoteListenerHelper$LinkedListener r15;
        android.os.IInterface r16;

        r0 := @this: com.android.server.location.RemoteListenerHelper;

        r1 := @parameter0: com.android.server.location.RemoteListenerHelper$ListenerOperation;

        $r7 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.location.RemoteListenerHelper: java.util.HashMap mListenerMap>;

        r4 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        r2 = $r9;

        exitmonitor r3;

     label02:
        goto label05;

     label03:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r3;

     label04:
        throw r5;

     label05:
        r14 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r10 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.server.location.RemoteListenerHelper$LinkedListener) $r10;

        r16 = virtualinvoke r15.<com.android.server.location.RemoteListenerHelper$LinkedListener: android.os.IInterface getUnderlyingListener()>();

     label07:
        interfaceinvoke r1.<com.android.server.location.RemoteListenerHelper$ListenerOperation: void execute(android.os.IInterface)>(r16);

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        r6 = $r13;

        $r12 = r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Error in monitored listener.", r6);

        virtualinvoke r0.<com.android.server.location.RemoteListenerHelper: boolean removeListener(android.os.IInterface)>(r16);

     label10:
        goto label06;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    static java.lang.String access$000(com.android.server.location.RemoteListenerHelper)
    {
        com.android.server.location.RemoteListenerHelper r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.location.RemoteListenerHelper;

        $r1 = r0.<com.android.server.location.RemoteListenerHelper: java.lang.String mTag>;

        return $r1;
    }
}
