class com.android.server.accessibility.TouchExplorer$DoubleTapDetector extends java.lang.Object
{
    private android.view.MotionEvent mDownEvent;
    private android.view.MotionEvent mFirstTapEvent;
    final com.android.server.accessibility.TouchExplorer this$0;

    private void <init>(com.android.server.accessibility.TouchExplorer)
    {
        com.android.server.accessibility.TouchExplorer$DoubleTapDetector r0;
        com.android.server.accessibility.TouchExplorer r1;

        r0 := @this: com.android.server.accessibility.TouchExplorer$DoubleTapDetector;

        r1 := @parameter0: com.android.server.accessibility.TouchExplorer;

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.TouchExplorer$DoubleTapDetector r0;
        android.view.MotionEvent r1, $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r21, $r22, $r23;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.accessibility.TouchExplorer $r7, $r9, $r17, $r19, $r20;

        r0 := @this: com.android.server.accessibility.TouchExplorer$DoubleTapDetector;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch(i2)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label01;
            case 6: goto label03;
            default: goto label11;
        };

     label01:
        $r2 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        if $r2 == null goto label02;

        $r4 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        $z0 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isSamePointerContext(android.view.MotionEvent,android.view.MotionEvent)>($r4, r1);

        if $z0 != 0 goto label02;

        virtualinvoke r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: void clear()>();

     label02:
        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent> = $r3;

        goto label11;

     label03:
        $r5 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        if $r5 != null goto label04;

        return;

     label04:
        $r6 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        $z1 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isSamePointerContext(android.view.MotionEvent,android.view.MotionEvent)>($r6, r1);

        if $z1 != 0 goto label05;

        virtualinvoke r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: void clear()>();

        return;

     label05:
        $r8 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        $r7 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $i3 = staticinvoke <com.android.server.accessibility.TouchExplorer: int access$600(com.android.server.accessibility.TouchExplorer)>($r7);

        $r9 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $i4 = staticinvoke <com.android.server.accessibility.TouchExplorer: int access$700(com.android.server.accessibility.TouchExplorer)>($r9);

        $z2 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isTap(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>($r8, r1, $i3, $i4, i1);

        if $z2 == 0 goto label09;

        $r12 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        if $r12 == null goto label06;

        $r16 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        $r17 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $i5 = staticinvoke <com.android.server.accessibility.TouchExplorer: int access$800(com.android.server.accessibility.TouchExplorer)>($r17);

        $z3 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isTimedOut(android.view.MotionEvent,android.view.MotionEvent,int)>($r16, r1, $i5);

        if $z3 == 0 goto label07;

     label06:
        $r15 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent> = $r15;

        $r14 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        virtualinvoke $r14.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent> = null;

        return;

     label07:
        $r18 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        $r19 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $i7 = staticinvoke <com.android.server.accessibility.TouchExplorer: int access$800(com.android.server.accessibility.TouchExplorer)>($r19);

        $r20 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $i6 = staticinvoke <com.android.server.accessibility.TouchExplorer: int access$900(com.android.server.accessibility.TouchExplorer)>($r20);

        $z4 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isMultiTap(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>($r18, r1, $i7, $i6, i1);

        if $z4 == 0 goto label08;

        virtualinvoke r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: void onDoubleTap(android.view.MotionEvent,int)>(r1, i0);

        $r23 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        virtualinvoke $r23.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent> = null;

        $r21 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        virtualinvoke $r21.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent> = null;

        return;

     label08:
        $r22 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        virtualinvoke $r22.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent> = null;

        goto label10;

     label09:
        $r11 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        if $r11 == null goto label10;

        $r13 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        virtualinvoke $r13.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent> = null;

     label10:
        $r10 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        virtualinvoke $r10.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent> = null;

     label11:
        return;
    }

    public void onDoubleTap(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.TouchExplorer$DoubleTapDetector r0;
        android.view.MotionEvent r1, r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11;
        android.graphics.Point r2;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords[] r4;
        com.android.server.accessibility.TouchExplorer $r6, $r8, $r10, $r13, $r14, $r16, $r17, $r24, $r25, $r27;
        com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed $r7;
        com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed $r9;
        com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed $r11;
        com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed $r12, $r15, $r23, $r26;
        boolean $z0, $z1, $z2;
        android.view.MotionEvent$PointerProperties $r18, $r19;
        float $f0, $f1;
        android.view.MotionEvent$PointerCoords $r20, $r21, $r22;
        long $l7, $l8;

        r0 := @this: com.android.server.accessibility.TouchExplorer$DoubleTapDetector;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i3 <= 2 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed access$1000(com.android.server.accessibility.TouchExplorer)>($r6);

        virtualinvoke $r7.<com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed: void cancel()>();

        $r8 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed access$1100(com.android.server.accessibility.TouchExplorer)>($r8);

        virtualinvoke $r9.<com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed: void cancel()>();

        $r10 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r11 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed access$1200(com.android.server.accessibility.TouchExplorer)>($r10);

        virtualinvoke $r11.<com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed: void cancel()>();

        $r13 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed access$1300(com.android.server.accessibility.TouchExplorer)>($r13);

        $z0 = virtualinvoke $r12.<com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed: boolean isPending()>();

        if $z0 == 0 goto label2;

        $r27 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r26 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed access$1300(com.android.server.accessibility.TouchExplorer)>($r27);

        virtualinvoke $r26.<com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed: void forceSendAndRemove()>();

     label2:
        $r14 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed access$1400(com.android.server.accessibility.TouchExplorer)>($r14);

        $z1 = virtualinvoke $r15.<com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed: boolean isPending()>();

        if $z1 == 0 goto label3;

        $r24 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $r23 = staticinvoke <com.android.server.accessibility.TouchExplorer: com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed access$1400(com.android.server.accessibility.TouchExplorer)>($r24);

        virtualinvoke $r23.<com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed: void forceSendAndRemove()>();

     label3:
        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>($i4);

        i2 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>(i1);

        $r16 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        r2 = staticinvoke <com.android.server.accessibility.TouchExplorer: android.graphics.Point access$1500(com.android.server.accessibility.TouchExplorer)>($r16);

        $r17 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $z2 = staticinvoke <com.android.server.accessibility.TouchExplorer: boolean access$1600(com.android.server.accessibility.TouchExplorer,android.graphics.Point)>($r17, r2);

        if $z2 != 0 goto label4;

        return;

     label4:
        r3 = newarray (android.view.MotionEvent$PointerProperties)[1];

        $r18 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r18.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r3[0] = $r18;

        $r19 = r3[0];

        virtualinvoke r1.<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>(i2, $r19);

        r4 = newarray (android.view.MotionEvent$PointerCoords)[1];

        $r20 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r20.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r4[0] = $r20;

        $r22 = r4[0];

        $i5 = r2.<android.graphics.Point: int x>;

        $f0 = (float) $i5;

        $r22.<android.view.MotionEvent$PointerCoords: float x> = $f0;

        $r21 = r4[0];

        $i6 = r2.<android.graphics.Point: int y>;

        $f1 = (float) $i6;

        $r21.<android.view.MotionEvent$PointerCoords: float y> = $f1;

        $l7 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $l8 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $i11 = virtualinvoke r1.<android.view.MotionEvent: int getDeviceId()>();

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getFlags()>();

        r5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>($l7, $l8, 0, 1, r3, r4, 0, 0, 1.0F, 1.0F, $i11, 0, $i10, $i9);

        $r25 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        staticinvoke <com.android.server.accessibility.TouchExplorer: void access$1700(com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int)>($r25, r5, i0);

        virtualinvoke r5.<android.view.MotionEvent: void recycle()>();

        return;
    }

    public void clear()
    {
        com.android.server.accessibility.TouchExplorer$DoubleTapDetector r0;
        android.view.MotionEvent $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.accessibility.TouchExplorer$DoubleTapDetector;

        $r1 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent>;

        virtualinvoke $r4.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mDownEvent> = null;

     label1:
        $r2 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        virtualinvoke $r3.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent> = null;

     label2:
        return;
    }

    public boolean firstTapDetected()
    {
        com.android.server.accessibility.TouchExplorer$DoubleTapDetector r0;
        android.view.MotionEvent $r1, $r2;
        long $l0, $l1, $l2, $l4;
        com.android.server.accessibility.TouchExplorer $r3;
        int $i3;
        byte $b5;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.TouchExplorer$DoubleTapDetector;

        $r1 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        if $r1 == null goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: android.view.MotionEvent mFirstTapEvent>;

        $l1 = virtualinvoke $r2.<android.view.MotionEvent: long getEventTime()>();

        $l2 = $l0 - $l1;

        $r3 = r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: com.android.server.accessibility.TouchExplorer this$0>;

        $i3 = staticinvoke <com.android.server.accessibility.TouchExplorer: int access$800(com.android.server.accessibility.TouchExplorer)>($r3);

        $l4 = (long) $i3;

        $b5 = $l2 cmp $l4;

        if $b5 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void <init>(com.android.server.accessibility.TouchExplorer, com.android.server.accessibility.TouchExplorer$1)
    {
        com.android.server.accessibility.TouchExplorer$DoubleTapDetector r0;
        com.android.server.accessibility.TouchExplorer r1;
        com.android.server.accessibility.TouchExplorer$1 r2;

        r0 := @this: com.android.server.accessibility.TouchExplorer$DoubleTapDetector;

        r1 := @parameter0: com.android.server.accessibility.TouchExplorer;

        r2 := @parameter1: com.android.server.accessibility.TouchExplorer$1;

        specialinvoke r0.<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: void <init>(com.android.server.accessibility.TouchExplorer)>(r1);

        return;
    }
}
