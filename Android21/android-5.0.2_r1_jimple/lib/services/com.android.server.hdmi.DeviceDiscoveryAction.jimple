final class com.android.server.hdmi.DeviceDiscoveryAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    private static final int STATE_WAITING_FOR_DEVICE_POLLING;
    private static final int STATE_WAITING_FOR_PHYSICAL_ADDRESS;
    private static final int STATE_WAITING_FOR_OSD_NAME;
    private static final int STATE_WAITING_FOR_VENDOR_ID;
    private final java.util.ArrayList mDevices;
    private final com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback mCallback;
    private int mProcessedDeviceCount;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback r2, $r5;
        java.util.ArrayList $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        r2 := @parameter1: com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices> = $r3;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount> = 0;

        $r4 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback) $r4;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback mCallback> = $r5;

        return;
    }

    boolean start()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.util.ArrayList $r1;
        com.android.server.hdmi.DeviceDiscoveryAction$1 $r2;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $r1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState> = 1;

        $r2 = new com.android.server.hdmi.DeviceDiscoveryAction$1;

        specialinvoke $r2.<com.android.server.hdmi.DeviceDiscoveryAction$1: void <init>(com.android.server.hdmi.DeviceDiscoveryAction)>(r0);

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void pollDevices(com.android.server.hdmi.HdmiControlService$DevicePollingCallback,int,int)>($r2, 131073, 1);

        return 1;
    }

    private void allocateDevices(java.util.List)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.util.List r1;
        java.util.Iterator r2;
        java.lang.Integer r3;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo r4, $r6;
        boolean $z0;
        java.lang.Object $r5;
        int $i0;
        java.util.ArrayList $r7;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r5;

        $r6 = new com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke $r6.<com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: void <init>(int,com.android.server.hdmi.DeviceDiscoveryAction$1)>($i0, null);

        r4 = $r6;

        $r7 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        return;
    }

    private void startPhysicalAddressStage()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start [Physical Address Stage]:");

        $r3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r5);

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount> = 0;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState> = 2;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;
    }

    private boolean verifyValidLogicalAddress(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 15 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void queryPhysicalAddress(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer $r1;
        com.android.server.hdmi.HdmiCecMessage $r2;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean verifyValidLogicalAddress(int)>(i0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;

     label1:
        $r1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer mActionTimer>;

        interfaceinvoke $r1.<com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer: void clearTimerMessage()>();

        $z1 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean mayProcessMessageIfCached(int,int)>(i0, 132);

        if $z1 == 0 goto label2;

        return;

     label2:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: int getSourceAddress()>();

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGivePhysicalAddress(int,int)>($i1, i0);

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r2);

        $i2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void addTimer(int,int)>($i2, 2000);

        return;
    }

    private void startOsdNameStage()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start [Osd Name Stage]:");

        $r3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r5);

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount> = 0;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState> = 3;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;
    }

    private void queryOsdName(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer $r1;
        com.android.server.hdmi.HdmiCecMessage $r2;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean verifyValidLogicalAddress(int)>(i0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;

     label1:
        $r1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer mActionTimer>;

        interfaceinvoke $r1.<com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer: void clearTimerMessage()>();

        $z1 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean mayProcessMessageIfCached(int,int)>(i0, 71);

        if $z1 == 0 goto label2;

        return;

     label2:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: int getSourceAddress()>();

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveOsdNameCommand(int,int)>($i1, i0);

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r2);

        $i2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void addTimer(int,int)>($i2, 2000);

        return;
    }

    private void startVendorIdStage()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start [Vendor Id Stage]:");

        $r3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r5);

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount> = 0;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState> = 4;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;
    }

    private void queryVendorId(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer $r1;
        com.android.server.hdmi.HdmiCecMessage $r2;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean verifyValidLogicalAddress(int)>(i0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;

     label1:
        $r1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer mActionTimer>;

        interfaceinvoke $r1.<com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer: void clearTimerMessage()>();

        $z1 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean mayProcessMessageIfCached(int,int)>(i0, 135);

        if $z1 == 0 goto label2;

        return;

     label2:
        $i1 = virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: int getSourceAddress()>();

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDeviceVendorIdCommand(int,int)>($i1, i0);

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r2);

        $i2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void addTimer(int,int)>($i2, 2000);

        return;
    }

    private boolean mayProcessMessageIfCached(int, int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage r1;
        com.android.server.hdmi.HdmiCecMessageCache $r2;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.HdmiCecMessageCache getCecMessageCache()>();

        r1 = virtualinvoke $r2.<com.android.server.hdmi.HdmiCecMessageCache: com.android.server.hdmi.HdmiCecMessage getMessage(int,int)>(i0, i1);

        if r1 == null goto label1;

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return 1;

     label1:
        return 0;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        tableswitch($i0)
        {
            case 1: goto label7;
            case 2: goto label1;
            case 3: goto label3;
            case 4: goto label5;
            default: goto label7;
        };

     label1:
        $i1 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i1 != 132 goto label2;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return 1;

     label2:
        return 0;

     label3:
        $i3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i3 != 71 goto label4;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void handleSetOsdName(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return 1;

     label4:
        return 0;

     label5:
        $i2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if $i2 != 135 goto label6;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void handleVendorId(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return 1;

     label6:
        return 0;

     label7:
        return 0;
    }

    private void handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo r2;
        byte[] r3;
        java.util.ArrayList $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i13, $i14, $i15, $i16, $i18;
        java.lang.Object $r6;
        short $s10;
        byte $b11;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r12;
        boolean $z1;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r4 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z1);

        $r5 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r2 = (com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo) $r6;

        $i3 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $i4 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        if $i3 == $i4 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched address[expected:");

        $i16 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual:");

        $i18 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r12);

        return;

     label3:
        r3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $i5 = staticinvoke <com.android.server.hdmi.HdmiUtils: int twoBytesToInt(byte[])>(r3);

        staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$502(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo,int)>(r2, $i5);

        $i7 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$500(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $i9 = specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: int getPortId(int)>($i7);

        staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$602(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo,int)>(r2, $i9);

        $b11 = r3[2];

        $s10 = $b11 & 255;

        staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$702(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo,int)>(r2, $s10);

        $r7 = virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i14 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $i13 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$700(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $i15 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$500(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        virtualinvoke $r7.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean updateCecSwitchInfo(int,int,int)>($i14, $i13, $i15);

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void increaseProcessedDeviceCount()>();

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;
    }

    private int getPortId(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, $i1;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i1 = virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: int getPortId(int)>(i0);

        return $i1;
    }

    private void handleSetOsdName(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo r2;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object $r5;
        java.lang.String $r6, $r13, $r16, $r19, r20;
        byte[] $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r15, $r17, $r18;
        java.io.UnsupportedEncodingException $r14;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z0);

        $r4 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r2 = (com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo) $r5;

        $i3 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $i4 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        if $i3 == $i4 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched address[expected:");

        $i5 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual:");

        $i6 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r13);

        return;

     label3:
        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "US-ASCII");

        r20 = $r6;

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to decode display name: ");

        $r16 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: java.lang.String toString()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r19);

        $i7 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        r20 = staticinvoke <com.android.server.hdmi.HdmiUtils: java.lang.String getDefaultDeviceName(int)>($i7);

     label6:
        staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: java.lang.String access$802(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo,java.lang.String)>(r2, r20);

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void increaseProcessedDeviceCount()>();

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private void handleVendorId(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo r2;
        byte[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r4 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z0);

        $r5 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        r2 = (com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo) $r6;

        $i4 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $i5 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        if $i4 == $i5 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched address[expected:");

        $i7 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual:");

        $i8 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r12);

        return;

     label3:
        r3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        i0 = staticinvoke <com.android.server.hdmi.HdmiUtils: int threeBytesToInt(byte[])>(r3);

        staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$902(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo,int)>(r2, i0);

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void increaseProcessedDeviceCount()>();

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;
    }

    private void increaseProcessedDeviceCount()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int $i0, $i1;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $i0 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount> = $i1;

        return;
    }

    private void removeDevice(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return;
    }

    private void wrapUpAndFinish()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.util.ArrayList r1, $r7, $r11, $r12;
        java.util.Iterator r2;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo r3;
        android.hardware.hdmi.HdmiDeviceInfo r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r15, $r16, $r17;
        int $i0;
        java.lang.String $r10, $r18;
        boolean $z0;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback $r13;
        java.lang.Object $r14;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---------Wrap up Device Discovery:[");

        $r7 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]---------");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r10);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r1 = $r11;

        $r12 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        r2 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo) $r14;

        r4 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: android.hardware.hdmi.HdmiDeviceInfo access$1000(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>(r3);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DeviceInfo: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r18);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", "--------------------------------------------");

        $r13 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback mCallback>;

        interfaceinvoke $r13.<com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback: void onDeviceDiscoveryDone(java.util.List)>(r1);

        virtualinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void finish()>();

        return;
    }

    private void checkAndProceedStage()
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r1, $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo $r5;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        $r1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void wrapUpAndFinish()>();

        return;

     label01:
        $i1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 != $i2 goto label06;

        r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount> = 0;

        $i5 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        tableswitch($i5)
        {
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            default: goto label05;
        };

     label02:
        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void startOsdNameStage()>();

        return;

     label03:
        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void startVendorIdStage()>();

        return;

     label04:
        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void wrapUpAndFinish()>();

        return;

     label05:
        return;

     label06:
        $r3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: java.util.ArrayList mDevices>;

        $i3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo) $r4;

        i0 = staticinvoke <com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo: int access$400(com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo)>($r5);

        $i4 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        tableswitch($i4)
        {
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label10;
        };

     label07:
        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void queryPhysicalAddress(int)>(i0);

        return;

     label08:
        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void queryOsdName(int)>(i0);

        return;

     label09:
        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void queryVendorId(int)>(i0);

     label10:
        return;
    }

    void handleTimerEvent(int)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.hdmi.DeviceDiscoveryAction;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        if $i1 == 0 goto label1;

        $i2 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        if $i2 == i0 goto label2;

     label1:
        return;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout[State=");

        $i3 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mState>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Processed=");

        $i4 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("DeviceDiscoveryAction", $r6);

        $i6 = r0.<com.android.server.hdmi.DeviceDiscoveryAction: int mProcessedDeviceCount>;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void removeDevice(int)>($i6);

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>();

        return;
    }

    static void access$000(com.android.server.hdmi.DeviceDiscoveryAction)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;

        r0 := @parameter0: com.android.server.hdmi.DeviceDiscoveryAction;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void wrapUpAndFinish()>();

        return;
    }

    static void access$100(com.android.server.hdmi.DeviceDiscoveryAction, java.util.List)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;
        java.util.List r1;

        r0 := @parameter0: com.android.server.hdmi.DeviceDiscoveryAction;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void allocateDevices(java.util.List)>(r1);

        return;
    }

    static void access$200(com.android.server.hdmi.DeviceDiscoveryAction)
    {
        com.android.server.hdmi.DeviceDiscoveryAction r0;

        r0 := @parameter0: com.android.server.hdmi.DeviceDiscoveryAction;

        specialinvoke r0.<com.android.server.hdmi.DeviceDiscoveryAction: void startPhysicalAddressStage()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.DeviceDiscoveryAction: int STATE_WAITING_FOR_VENDOR_ID> = 4;

        <com.android.server.hdmi.DeviceDiscoveryAction: int STATE_WAITING_FOR_OSD_NAME> = 3;

        <com.android.server.hdmi.DeviceDiscoveryAction: int STATE_WAITING_FOR_PHYSICAL_ADDRESS> = 2;

        <com.android.server.hdmi.DeviceDiscoveryAction: int STATE_WAITING_FOR_DEVICE_POLLING> = 1;

        <com.android.server.hdmi.DeviceDiscoveryAction: java.lang.String TAG> = "DeviceDiscoveryAction";

        return;
    }
}
