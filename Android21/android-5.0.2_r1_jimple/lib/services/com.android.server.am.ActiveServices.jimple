public final class com.android.server.am.ActiveServices extends java.lang.Object
{
    static final boolean DEBUG_SERVICE;
    static final boolean DEBUG_SERVICE_EXECUTING;
    static final boolean DEBUG_DELAYED_SERVICE;
    static final boolean DEBUG_DELAYED_STARTS;
    static final boolean DEBUG_MU;
    static final boolean LOG_SERVICE_START_STOP;
    static final java.lang.String TAG;
    static final java.lang.String TAG_MU;
    static final int SERVICE_TIMEOUT;
    static final int SERVICE_BACKGROUND_TIMEOUT;
    static final int SERVICE_RESTART_DURATION;
    static final int SERVICE_RESET_RUN_DURATION;
    static final int SERVICE_RESTART_DURATION_FACTOR;
    static final int SERVICE_MIN_RESTART_TIME_BETWEEN;
    static final int MAX_SERVICE_INACTIVITY;
    static final int BG_START_TIMEOUT;
    final com.android.server.am.ActivityManagerService mAm;
    final int mMaxStartingBackground;
    final android.util.SparseArray mServiceMap;
    final android.util.ArrayMap mServiceConnections;
    final java.util.ArrayList mPendingServices;
    final java.util.ArrayList mRestartingServices;
    final java.util.ArrayList mDestroyingServices;

    public void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActivityManagerService r1;
        int i0, $i1;
        android.util.SparseArray $r3;
        android.util.ArrayMap $r4;
        java.util.ArrayList $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;
        java.lang.RuntimeException $r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices> = $r7;

        r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm> = r1;

        i0 = 0;

     label1:
        $r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.config.max_starting_bg", "0");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        if i0 <= 0 goto label5;

        $i1 = i0;

        goto label7;

     label5:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label6;

        $i1 = 1;

        goto label7;

     label6:
        $i1 = 8;

     label7:
        r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground> = $i1;

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        com.android.server.am.ServiceRecord $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i0);

        $r3 = $r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.android.server.am.ServiceRecord) $r4;

        return $r5;
    }

    boolean hasBackgroundServices(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, $i1, $i2;
        com.android.server.am.ActiveServices$ServiceMap r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        if r1 == null goto label2;

        $r4 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i1 < $i2 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap r1, $r4;
        android.util.SparseArray $r2, $r8;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService $r5;
        com.android.server.am.ActivityManagerService$MainHandler $r6;
        android.os.Looper $r7;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.am.ActiveServices$ServiceMap;

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.am.ActiveServices$ServiceMap: void <init>(com.android.server.am.ActiveServices,android.os.Looper,int)>(r0, $r7, i0);

        r1 = $r4;

        $r8 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    android.util.ArrayMap getServices(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i0);

        $r2 = $r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        return $r2;
    }

    android.content.ComponentName startServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int, int, int)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3, $r12, $r21, $r28, $r35, $r36, $r39, $r45;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19;
        boolean z0, z1, $z2, $z3, $z5, $z7;
        com.android.server.am.ProcessRecord r4, r8, $r17;
        com.android.server.am.ServiceRecord r5, $r9;
        com.android.server.am.ActivityManagerService$NeededUriGrants r6;
        com.android.server.am.ActiveServices$ServiceMap r7;
        com.android.server.pm.UserManagerService $r10;
        com.android.server.am.ActivityManagerService $r11, $r13, $r20, $r22, $r37;
        com.android.server.am.ServiceRecord$StartItem $r14;
        long $l6;
        java.util.ArrayList $r15, $r24, $r27;
        android.content.ComponentName $r16, $r30, $r31, $r34;
        android.util.SparseArray $r18;
        java.lang.Object $r19;
        android.content.pm.ApplicationInfo $r23;
        java.lang.StringBuilder $r25, $r26, $r29, $r32, $r33, $r38, $r40, $r41, $r42, $r43, $r46, $r47, $r48;
        java.lang.SecurityException $r44;
        com.android.server.am.ActiveServices$ServiceLookupResult r49;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        if r1 == null goto label04;

        $r37 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r4 = virtualinvoke $r37.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r4 != null goto label01;

        $r44 = new java.lang.SecurityException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i19 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting service ");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.SecurityException: void <init>(java.lang.String)>($r45);

        throw $r44;

     label01:
        $i18 = r4.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i18 == 0 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        z0 = $z7;

        goto label05;

     label04:
        z0 = 1;

     label05:
        r49 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r2, r3, i0, i1, i2, 1, z0);

        if r49 != null goto label06;

        return null;

     label06:
        $r9 = r49.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r9 != null goto label09;

        $r34 = new android.content.ComponentName;

        $r35 = r49.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        if $r35 == null goto label07;

        $r36 = r49.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        goto label08;

     label07:
        $r36 = "private to package";

     label08:
        specialinvoke $r34.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!", $r36);

        return $r34;

     label09:
        r5 = r49.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r11 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r10 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $i3 = r5.<com.android.server.am.ServiceRecord: int userId>;

        $z2 = virtualinvoke $r10.<com.android.server.pm.UserManagerService: boolean exists(int)>($i3);

        if $z2 != 0 goto label10;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to start service with non-existent user! ");

        $i16 = r5.<com.android.server.am.ServiceRecord: int userId>;

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r39);

        return null;

     label10:
        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = r5.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i5 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i4 = r5.<com.android.server.am.ServiceRecord: int userId>;

        r6 = virtualinvoke $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants,int)>(i1, $r12, r2, $i5, null, $i4);

        $z3 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r5, i1, 0);

        if $z3 == 0 goto label11;

     label11:
        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r5.<com.android.server.am.ServiceRecord: long lastActivity> = $l6;

        r5.<com.android.server.am.ServiceRecord: boolean startRequested> = 1;

        r5.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $r15 = r5.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r14 = new com.android.server.am.ServiceRecord$StartItem;

        $i7 = virtualinvoke r5.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r14.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>(r5, 0, $i7, r2, r6);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $i8 = r5.<com.android.server.am.ServiceRecord: int userId>;

        r7 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i8);

        z1 = 0;

        if z0 != 0 goto label16;

        $r17 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r17 != null goto label16;

        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = $r20.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i9 = r5.<com.android.server.am.ServiceRecord: int userId>;

        $r19 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>($i9);

        if $r19 == null goto label16;

        $r22 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = r5.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r23 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i10 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        r8 = virtualinvoke $r22.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r21, $i10, 0);

        if r8 == null goto label12;

        $i14 = r8.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i14 <= 8 goto label15;

     label12:
        $z5 = r5.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z5 == 0 goto label13;

        $r30 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r30;

     label13:
        $r24 = r7.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i11 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        $i12 = r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i11 < $i12 goto label14;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delaying start of: ");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r28);

        $r27 = r7.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        r5.<com.android.server.am.ServiceRecord: boolean delayed> = 1;

        $r31 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r31;

     label14:
        z1 = 1;

        goto label16;

     label15:
        $i15 = r8.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i15 < 7 goto label16;

        z1 = 1;

     label16:
        $r16 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>(r7, r2, r5, z0, z1);

        return $r16;
    }

    android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap, android.content.Intent, com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ServiceMap r1;
        android.content.Intent r2;
        com.android.server.am.ServiceRecord r3;
        boolean z0, z1, $z2, $z4, z5;
        com.android.internal.app.ProcessStats$ServiceState r4;
        com.android.internal.os.BatteryStatsImpl r5, $r8;
        java.lang.Throwable r6, $r16;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r7, $r9;
        int $i0, $i1, $i4;
        android.content.ComponentName $r10, $r13;
        java.util.ArrayList $r11, $r12;
        long $l2, $l3, $l5;
        com.android.server.am.ProcessStatsService $r14;
        com.android.server.am.ActivityManagerService $r15;
        java.lang.String r17;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActiveServices$ServiceMap;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: com.android.server.am.ServiceRecord;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 = virtualinvoke r3.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState getTracker()>();

        if r4 == null goto label01;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i4 = virtualinvoke $r14.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l5 = r3.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r4.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(1, $i4, $l5);

     label01:
        r3.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        $r7 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        r5 = $r8;

        entermonitor $r8;

     label02:
        $r9 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startRunningLocked()>();

        exitmonitor r5;

     label03:
        goto label06;

     label04:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r5;

     label05:
        throw r6;

     label06:
        $i0 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        r17 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>(r3, $i0, z0, 0);

        if r17 == null goto label07;

        $r13 = new android.content.ComponentName;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!!", r17);

        return $r13;

     label07:
        $z2 = r3.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label11;

        if z1 == 0 goto label11;

        $r11 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        z5 = $z4;

        $r12 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l3 + 15000L;

        r3.<com.android.server.am.ServiceRecord: long startingBgTimeout> = $l2;

        if z5 == 0 goto label10;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStarts()>();

     label10:
        goto label12;

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r3);

     label12:
        $r10 = r3.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r10;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    private void stopServiceLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.internal.os.BatteryStatsImpl r2, $r5;
        java.lang.Throwable r3, $r11;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4, $r6;
        com.android.internal.app.ProcessStats$ServiceState $r7, $r10;
        com.android.server.am.ActivityManagerService $r8;
        com.android.server.am.ProcessStatsService $r9;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $z0 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z0 == 0 goto label1;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 1;

        return;

     label1:
        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r5 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        r1.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r7 == null goto label7;

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i0 = virtualinvoke $r9.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r10.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, $i0, $l1);

     label7:
        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, 0, 0);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    int stopServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3, $r17;
        int i0, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r4;
        com.android.server.am.ActiveServices$ServiceLookupResult r5;
        long l1;
        java.lang.Throwable r6, $r19;
        com.android.server.am.ActivityManagerService $r7;
        com.android.server.am.ServiceRecord $r8, $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r16, $r18;
        java.lang.SecurityException $r11;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r4 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r1 == null goto label1;

        if r4 != null goto label1;

        $r11 = new java.lang.SecurityException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when stopping service ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r5 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r2, r3, $i2, $i3, i0, 0, 0);

        if r5 == null goto label8;

        $r8 = r5.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r8 == null goto label7;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r9 = r5.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>($r9);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label6;

     label4:
        $r19 := @caughtexception;

        r6 = $r19;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r6;

     label6:
        return 1;

     label7:
        return -1;

     label8:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.os.IBinder peekServiceLocked(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1;
        java.lang.String r2, $r22, $r24;
        com.android.server.am.ActiveServices$ServiceLookupResult r3;
        android.os.IBinder r4;
        com.android.server.am.IntentBindRecord r5;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.am.ServiceRecord $r6, $r7, $r8, $r14;
        android.content.Intent$FilterComparison $r9;
        android.util.ArrayMap $r10;
        java.lang.Object $r11;
        java.lang.StringBuilder $r12, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r25;
        java.lang.SecurityException $r13;
        android.content.ComponentName $r17;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r1, r2, $i0, $i1, $i2, 0, 0);

        r4 = null;

        if r3 == null goto label2;

        $r6 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r6 != null goto label1;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r14 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r17 = $r14.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r22 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r13;

     label1:
        $r7 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r10 = $r7.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r8 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r9 = $r8.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r5 = (com.android.server.am.IntentBindRecord) $r11;

        if r5 == null goto label2;

        r4 = r5.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

     label2:
        return r4;
    }

    boolean stopServiceTokenLocked(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7;
        com.android.server.am.ServiceRecord r3;
        com.android.server.am.ServiceRecord$StartItem r4, r5;
        java.lang.Throwable r6, $r26;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r7, $r9;
        com.android.internal.os.BatteryStatsImpl $r8, r27;
        com.android.internal.app.ProcessStats$ServiceState $r10, $r13;
        com.android.server.am.ProcessStatsService $r11;
        com.android.server.am.ActivityManagerService $r12;
        long $l2, l9;
        java.util.ArrayList $r14, $r18, $r23, $r24;
        java.lang.StringBuilder $r15, $r16, $r17, $r19, $r20, $r22;
        java.lang.String $r21;
        java.lang.Object $r25;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r1, r2, $i1);

        if r3 == null goto label12;

        if i0 < 0 goto label05;

        r4 = virtualinvoke r3.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i0, 0);

        if r4 == null goto label03;

     label01:
        $r24 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i7 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label03;

        $r23 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $r25 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r5 = (com.android.server.am.ServiceRecord$StartItem) $r25;

        virtualinvoke r5.<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>();

        if r5 != r4 goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        $i4 = virtualinvoke r3.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        if $i4 == i0 goto label04;

        return 0;

     label04:
        $r14 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i5 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label05;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopServiceToken startId ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is last, but have ");

        $r18 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i6 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remaining args");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

     label05:
        $r7 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        r27 = $r8;

        entermonitor $r8;

     label06:
        $r9 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor r27;

     label07:
        goto label10;

     label08:
        $r26 := @caughtexception;

        r6 = $r26;

        exitmonitor r27;

     label09:
        throw r6;

     label10:
        r3.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r10 = r3.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r10 == null goto label11;

        $r13 = r3.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r12 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i3 = virtualinvoke $r11.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r13.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, $i3, $l2);

     label11:
        r3.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        l9 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r3, 0, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        return 1;

     label12:
        return 0;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void setServiceForegroundLocked(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, boolean)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        android.app.Notification r3;
        boolean z0, $z1;
        long l2;
        com.android.server.am.ServiceRecord r4;
        java.lang.Throwable r5, $r14;
        android.content.pm.ApplicationInfo $r6;
        com.android.server.am.ProcessRecord $r7, $r9, $r10, $r11, $r12;
        com.android.server.am.ActivityManagerService $r8;
        com.android.server.am.ActiveServices$ServiceMap $r13;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: android.app.Notification;

        z0 := @parameter4: boolean;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r4 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r1, r2, i1);

        if r4 == null goto label08;

        if i0 == 0 goto label05;

        if r3 != null goto label02;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null notification");

        throw $r15;

     label02:
        $i4 = r4.<com.android.server.am.ServiceRecord: int foregroundId>;

        if $i4 == i0 goto label03;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        r4.<com.android.server.am.ServiceRecord: int foregroundId> = i0;

     label03:
        $i6 = r3.<android.app.Notification: int flags>;

        $i5 = $i6 | 64;

        r3.<android.app.Notification: int flags> = $i5;

        r4.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = r3;

        r4.<com.android.server.am.ServiceRecord: boolean isForeground> = 1;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void postNotification()>();

        $r11 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label04;

        $r12 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r12, 1);

     label04:
        $i7 = r4.<com.android.server.am.ServiceRecord: int userId>;

        $r13 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i7);

        virtualinvoke $r13.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r4);

        goto label08;

     label05:
        $z1 = r4.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z1 == 0 goto label06;

        r4.<com.android.server.am.ServiceRecord: boolean isForeground> = 0;

        $r7 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label06;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r9, 0, null);

        $r10 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r10, 1);

     label06:
        if z0 == 0 goto label07;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        r4.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r4.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

        goto label08;

     label07:
        $r6 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i3 < 21 goto label08;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void stripForegroundServiceFlagFromNotification()>();

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label11;

     label09:
        $r14 := @caughtexception;

        r5 = $r14;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void updateServiceForegroundLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, z1, $z2;
        int i0, $i1;
        com.android.server.am.ServiceRecord r2;
        android.util.ArraySet $r3, $r5;
        com.android.server.am.ActivityManagerService $r4;
        java.lang.Object $r6;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 = 0;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i1 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r6 = virtualinvoke $r5.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r2 = (com.android.server.am.ServiceRecord) $r6;

        $z2 = r2.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z2 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, z1, z0);

        return;
    }

    public void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, r4;
        android.util.ArraySet r2, $r5, $r6, $r10;
        int i0, $i1;
        com.android.server.am.ConnectionRecord r3;
        java.lang.Object $r7;
        com.android.server.am.AppBindRecord $r8;
        com.android.server.am.ServiceRecord $r9;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = null;

        i0 = 0;

     label1:
        $r5 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i1 = virtualinvoke $r5.<android.util.ArraySet: int size()>();

        if i0 >= $i1 goto label6;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r7 = virtualinvoke $r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r3 = (com.android.server.am.ConnectionRecord) $r7;

        $r8 = r3.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r9 = $r8.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        r4 = $r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if r4 == null goto label5;

        if r4 != r1 goto label2;

        goto label5;

     label2:
        if r2 != null goto label3;

        $r10 = new android.util.ArraySet;

        specialinvoke $r10.<android.util.ArraySet: void <init>()>();

        r2 = $r10;

        goto label4;

     label3:
        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r4);

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>(r4, null, 0);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;
    }

    private boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord, com.android.server.am.ConnectionRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r16, $r18, $r20, $r22, $r24;
        com.android.server.am.ConnectionRecord r2, r5;
        boolean z0, z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.am.ServiceRecord r3;
        java.util.ArrayList r4, $r19, $r23;
        android.util.ArraySet $r6, $r8;
        com.android.server.am.ActivityManagerService $r7;
        android.util.ArrayMap $r9, $r11;
        java.lang.Object $r10, $r12, $r14;
        com.android.server.am.AppBindRecord $r13, $r15, $r17, $r21, $r25;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ConnectionRecord;

        z0 := @parameter2: boolean;

        if r2 == null goto label01;

        $r21 = r2.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r24 = $r21.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r24 == null goto label01;

        $r25 = r2.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r22 = $r25.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r23 = $r22.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i7 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label01;

        return 0;

     label01:
        z1 = 0;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i3 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        i0 = $i3 - 1;

     label02:
        if i0 < 0 goto label09;

        if z1 != 0 goto label09;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r10 = virtualinvoke $r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r3 = (com.android.server.am.ServiceRecord) $r10;

        $r9 = r3.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i4 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        i1 = $i4 - 1;

     label03:
        if i1 < 0 goto label08;

        if z1 != 0 goto label08;

        $r11 = r3.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (java.util.ArrayList) $r12;

        $i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i2 = $i5 - 1;

     label04:
        if i2 < 0 goto label07;

        $r14 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ConnectionRecord) $r14;

        $r13 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r16 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r16 == null goto label06;

        $r15 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r18 = $r15.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r18 != r1 goto label05;

        goto label06;

     label05:
        $r17 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r19 = $r20.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i6 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label06;

        z1 = 1;

        goto label07;

     label06:
        i2 = i2 + -1;

        goto label04;

     label07:
        i1 = i1 + -1;

        goto label03;

     label08:
        i0 = i0 + -1;

        goto label02;

     label09:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if z1 == $z2 goto label11;

        r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities> = z1;

        if z0 == 0 goto label10;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r1, z1, null);

     label10:
        return 1;

     label11:
        return 0;
    }

    int bindServiceLocked(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, int)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.os.IBinder r2, r13, $r41, $r93;
        android.content.Intent r3;
        java.lang.String r4, $r52, $r70, $r80, $r86, $r90, $r98;
        android.app.IServiceConnection r5, $r36, $r92;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i22, $i24;
        com.android.server.am.ProcessRecord r6, $r24, $r27, $r31, $r32, $r42, $r46, $r47, $r48, $r49, $r55, $r59, $r61, $r97;
        com.android.server.am.ActivityRecord r7;
        android.app.PendingIntent r8;
        com.android.server.am.ActiveServices$ServiceLookupResult r10;
        com.android.server.am.ServiceRecord r11, $r20;
        long l3, $l19, $l20, $l21;
        com.android.internal.app.ProcessStats$ServiceState r12;
        com.android.server.am.ConnectionRecord r14, $r21;
        byte b4;
        java.util.ArrayList r15, $r51, $r57, r100;
        com.android.server.am.ActivityManagerService $r16, $r45, $r50, $r63, $r67;
        java.lang.Throwable r17, $r75;
        android.content.pm.ApplicationInfo $r18, $r19;
        boolean $z0, $z5, $z7, $z9, $z10, $z12, $z13, $z16, $z17, z18;
        java.lang.Object $r22, $r28;
        android.util.ArrayMap $r23, $r29, $r38, $r54, $r64;
        android.util.ArraySet $r25, $r26;
        com.android.server.am.IntentBindRecord $r30, $r33, $r37, $r39, $r40, $r43, $r44;
        com.android.server.am.ActiveServices$ServiceMap $r34;
        android.content.ComponentName $r35;
        java.util.HashSet $r56, $r58, $r60;
        com.android.server.am.ProcessStatsService $r62;
        android.os.Parcelable $r66;
        java.lang.StringBuilder $r68, $r71, $r72, $r73, $r76, $r78, $r79, $r81, $r82, $r83, $r84, $r85, $r87, $r88, $r89, $r91, $r94, $r95;
        java.lang.SecurityException $r69;
        java.lang.RuntimeException $r74;
        java.lang.Exception $r77, r101;
        com.android.server.am.AppBindRecord $r96, r99;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.IServiceConnection;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r6 = virtualinvoke $r16.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r6 != null goto label01;

        $r69 = new java.lang.SecurityException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i24 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when binding service ");

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.lang.SecurityException: void <init>(java.lang.String)>($r86);

        throw $r69;

     label01:
        r7 = null;

        if r2 == null goto label02;

        r7 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r2);

        if r7 != null goto label02;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding with unknown activity: ");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r70);

        return 0;

     label02:
        i2 = 0;

        r8 = null;

        $r18 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        if $i6 != 1000 goto label07;

     label03:
        $r66 = virtualinvoke r3.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.client_intent");

        r8 = (android.app.PendingIntent) $r66;

     label04:
        goto label06;

     label05:
        $r74 := @caughtexception;

     label06:
        if r8 == null goto label07;

        i2 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.client_label", 0);

        if i2 == 0 goto label07;

        r3 = virtualinvoke r3.<android.content.Intent: android.content.Intent cloneFilter()>();

     label07:
        $i5 = i0 & 134217728;

        if $i5 == 0 goto label08;

        $r67 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r67.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "BIND_TREAT_LIKE_ACTIVITY");

     label08:
        $i8 = r6.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i8 == 0 goto label09;

        $z17 = 1;

        goto label10;

     label09:
        $z17 = 0;

     label10:
        z18 = $z17;

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r10 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r3, r4, $i7, $i9, i1, 1, z18);

        if r10 != null goto label11;

        return 0;

     label11:
        $r20 = r10.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r20 != null goto label12;

        return -1;

     label12:
        r11 = r10.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label13:
        $r19 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r11, $i10, 0);

        if $z0 == 0 goto label14;

     label14:
        $i11 = i0 & 1;

        if $i11 == 0 goto label15;

        $l20 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r11.<com.android.server.am.ServiceRecord: long lastActivity> = $l20;

        $z16 = virtualinvoke r11.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if $z16 != 0 goto label15;

        r12 = virtualinvoke r11.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState getTracker()>();

        if r12 == null goto label15;

        $r63 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r62 = $r63.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i22 = virtualinvoke $r62.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l21 = r11.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r12.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(1, $i22, $l21);

     label15:
        r99 = virtualinvoke r11.<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>(r3, r6);

        $r21 = new com.android.server.am.ConnectionRecord;

        specialinvoke $r21.<com.android.server.am.ConnectionRecord: void <init>(com.android.server.am.AppBindRecord,com.android.server.am.ActivityRecord,android.app.IServiceConnection,int,int,android.app.PendingIntent)>(r99, r7, r5, i0, i2, r8);

        r14 = $r21;

        r13 = interfaceinvoke r5.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r23 = r11.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r22 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r15 = (java.util.ArrayList) $r22;

        if r15 != null goto label16;

        $r57 = new java.util.ArrayList;

        specialinvoke $r57.<java.util.ArrayList: void <init>()>();

        r15 = $r57;

        $r64 = r11.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        virtualinvoke $r64.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r15);

     label16:
        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        $r26 = r99.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        virtualinvoke $r26.<android.util.ArraySet: boolean add(java.lang.Object)>(r14);

        if r7 == null goto label18;

        $r60 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r60 != null goto label17;

        $r56 = new java.util.HashSet;

        specialinvoke $r56.<java.util.HashSet: void <init>()>();

        r7.<com.android.server.am.ActivityRecord: java.util.HashSet connections> = $r56;

     label17:
        $r58 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        virtualinvoke $r58.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

     label18:
        $r24 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r25 = $r24.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r25.<android.util.ArraySet: boolean add(java.lang.Object)>(r14);

        $i13 = r14.<com.android.server.am.ConnectionRecord: int flags>;

        $i12 = $i13 & 8;

        if $i12 == 0 goto label19;

        $r59 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r59.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 1;

     label19:
        $r27 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r27 == null goto label20;

        $r61 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>($r61, r14, 1);

     label20:
        $r29 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r28 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r100 = (java.util.ArrayList) $r28;

        if r100 != null goto label21;

        $r51 = new java.util.ArrayList;

        specialinvoke $r51.<java.util.ArrayList: void <init>()>();

        r100 = $r51;

        $r54 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        virtualinvoke $r54.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r100);

     label21:
        virtualinvoke r100.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        $i14 = i0 & 1;

        if $i14 == 0 goto label23;

        $l19 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r11.<com.android.server.am.ServiceRecord: long lastActivity> = $l19;

        $i18 = virtualinvoke r3.<android.content.Intent: int getFlags()>();

        $r52 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>(r11, $i18, z18, 0);

        if $r52 == null goto label23;

        b4 = 0;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return b4;

     label23:
        $r32 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r32 == null goto label28;

        $i16 = i0 & 134217728;

        if $i16 == 0 goto label24;

        $r55 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r55.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 1;

     label24:
        $r50 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r47 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r42 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z9 = $r42.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if $z9 != 0 goto label25;

        $r46 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z12 = $r46.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z12 == 0 goto label26;

     label25:
        $z13 = 1;

        goto label27;

     label26:
        $z13 = 0;

     label27:
        $r48 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r50.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r47, $z13, $r48);

        $r45 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r49 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r45.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r49);

     label28:
        $r31 = r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r31 == null goto label33;

        $r39 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z7 = $r39.<com.android.server.am.IntentBindRecord: boolean received>;

        if $z7 == 0 goto label33;

     label29:
        $r36 = r14.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r35 = r11.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r40 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r41 = $r40.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

        interfaceinvoke $r36.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r35, $r41);

     label30:
        goto label32;

     label31:
        $r77 := @caughtexception;

        r101 = $r77;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r80 = r11.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r91 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r92 = r14.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r93 = interfaceinvoke $r92.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r94 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r96 = r14.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r97 = $r96.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r98 = $r97.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r88 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r90, r101);

     label32:
        $r37 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r38 = $r37.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i17 = virtualinvoke $r38.<android.util.ArrayMap: int size()>();

        if $i17 != 1 goto label34;

        $r43 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z10 = $r43.<com.android.server.am.IntentBindRecord: boolean doRebind>;

        if $z10 == 0 goto label34;

        $r44 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r11, $r44, z18, 1);

        goto label34;

     label33:
        $r30 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z5 = $r30.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z5 != 0 goto label34;

        $r33 = r99.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r11, $r33, z18, 0);

     label34:
        $i15 = r11.<com.android.server.am.ServiceRecord: int userId>;

        $r34 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i15);

        virtualinvoke $r34.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r11);

     label35:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label38;

     label36:
        $r75 := @caughtexception;

        r17 = $r75;

     label37:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r17;

     label38:
        return 1;

        catch java.lang.RuntimeException from label03 to label04 with label05;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Throwable from label13 to label22 with label36;
        catch java.lang.Throwable from label23 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    void publishServiceLocked(com.android.server.am.ServiceRecord, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.content.Intent r2;
        android.os.IBinder r3, $r32;
        long l0;
        android.content.Intent$FilterComparison r4, $r10, $r19;
        com.android.server.am.IntentBindRecord r5, $r20;
        int i1, i2, $i3, $i4;
        java.util.ArrayList r6, $r13;
        com.android.server.am.ConnectionRecord r7;
        java.lang.Exception r8, $r24;
        java.lang.Throwable r9, $r37;
        java.lang.Object $r11, $r16, $r18;
        android.util.ArrayMap $r12, $r14, $r15;
        boolean $z0, $z1, $z2;
        com.android.server.am.AppBindRecord $r17, $r35;
        android.content.ComponentName $r21, $r28;
        java.lang.StringBuilder $r22, $r25, $r26, $r27, $r29, $r30, $r34, $r39;
        android.app.IServiceConnection $r23, $r31;
        java.lang.String $r33, $r38;
        com.android.server.am.ProcessRecord $r36;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        if r1 == null goto label10;

        $r10 = new android.content.Intent$FilterComparison;

        specialinvoke $r10.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r2);

        r4 = $r10;

        $r12 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.am.IntentBindRecord) $r11;

        if r5 == null goto label09;

        $z1 = r5.<com.android.server.am.IntentBindRecord: boolean received>;

        if $z1 != 0 goto label09;

        r5.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = r3;

        r5.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

        r5.<com.android.server.am.IntentBindRecord: boolean received> = 1;

        $r14 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i3 = virtualinvoke $r14.<android.util.ArrayMap: int size()>();

        i1 = $i3 - 1;

     label02:
        if i1 < 0 goto label09;

        $r15 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r6 = (java.util.ArrayList) $r16;

        i2 = 0;

     label03:
        $i4 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i2 >= $i4 goto label08;

        $r18 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.am.ConnectionRecord) $r18;

        $r17 = r7.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r19 = $r20.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $z2 = virtualinvoke r4.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r19);

        if $z2 != 0 goto label04;

        goto label07;

     label04:
        $r23 = r7.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r21 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r23.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r21, r3);

     label05:
        goto label07;

     label06:
        $r24 := @caughtexception;

        r8 = $r24;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r28 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r31 = r7.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r32 = interfaceinvoke $r31.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r35 = r7.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r36 = $r35.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r33 = $r36.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r38, r8);

     label07:
        i2 = i2 + 1;

        goto label03;

     label08:
        i1 = i1 + -1;

        goto label02;

     label09:
        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $z0 = virtualinvoke $r13.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, $z0, 0);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label13;

     label11:
        $r37 := @caughtexception;

        r9 = $r37;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r9;

     label13:
        return;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    boolean unbindServiceLocked(android.app.IServiceConnection)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IServiceConnection r1;
        android.os.IBinder r2, $r39;
        java.util.ArrayList r3;
        long l0;
        com.android.server.am.ConnectionRecord r4;
        java.lang.Throwable r5, $r41;
        android.util.ArrayMap $r6;
        java.lang.Object $r7, $r8, $r30;
        int $i1, $i2, $i3, $i4;
        com.android.server.am.AppBindRecord $r9, $r13, $r16, $r20, $r22, $r27;
        com.android.server.am.ProcessRecord $r10, $r15, $r17, $r23, $r25, $r26;
        com.android.server.am.ServiceRecord $r11, $r12, $r18, $r19, $r21, $r28;
        com.android.server.am.ActivityManagerService $r14, $r24;
        boolean $z1, $z2, $z3;
        java.lang.StringBuilder $r29, $r31, $r32, $r33, $r34, $r35, $r38, $r40;
        java.lang.String $r37, $r42;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IServiceConnection;

        r2 = interfaceinvoke r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r6 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.util.ArrayList) $r7;

        if r3 != null goto label01;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind failed: could not find connection for ");

        $r39 = interfaceinvoke r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r42);

        return 0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label09;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r4 = (com.android.server.am.ConnectionRecord) $r8;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>(r4, null, null);

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label03;

        $r30 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        if $r30 != r4 goto label03;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not removed for binder ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r37);

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>(0);

     label03:
        $r9 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r11 = $r9.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r10 = $r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label08;

        $i4 = r4.<com.android.server.am.ConnectionRecord: int flags>;

        $i3 = $i4 & 134217728;

        if $i3 == 0 goto label07;

        $r16 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r18 = $r16.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r17 = $r18.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r17.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 1;

        $r24 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r20 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r19 = $r20.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r23 = $r19.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r22 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r21 = $r22.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r25 = $r21.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z1 = $r25.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if $z1 != 0 goto label04;

        $r27 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r28 = $r27.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r26 = $r28.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z2 = $r26.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z2 == 0 goto label05;

     label04:
        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        virtualinvoke $r24.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r23, $z3, null);

     label07:
        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r13 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r12 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r15 = $r12.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r15);

     label08:
        goto label02;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label12;

     label10:
        $r41 := @caughtexception;

        r5 = $r41;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label12:
        return 1;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void unbindFinishedLocked(com.android.server.am.ServiceRecord, android.content.Intent, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.content.Intent r2;
        boolean z0, z1, z2;
        long l0;
        android.content.Intent$FilterComparison r3, $r7;
        com.android.server.am.IntentBindRecord r4;
        int i1, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r5;
        java.lang.Throwable r6, $r16;
        android.util.ArrayMap $r8, $r11, $r12, $r14;
        java.util.ArrayList $r9;
        java.lang.Object $r10, $r13;
        com.android.server.am.AppBindRecord $r15;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        if r1 == null goto label07;

        $r7 = new android.content.Intent$FilterComparison;

        specialinvoke $r7.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r2);

        r3 = $r7;

        $r8 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r10 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.am.IntentBindRecord) $r10;

        $r9 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z1 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if r4 == null goto label06;

        $r11 = r4.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i2 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        if $i2 <= 0 goto label05;

        if z1 != 0 goto label05;

        z2 = 0;

        $r12 = r4.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i3 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        i1 = $i3 - 1;

     label02:
        if i1 < 0 goto label04;

        $r14 = r4.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r13 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r15 = (com.android.server.am.AppBindRecord) $r13;

        r5 = $r15.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if r5 == null goto label03;

        $i4 = r5.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i4 == 0 goto label03;

        z2 = 1;

        goto label04;

     label03:
        i1 = i1 + -1;

        goto label02;

     label04:
        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r1, r4, z2, 1);

        goto label06;

     label05:
        r4.<com.android.server.am.IntentBindRecord: boolean doRebind> = 1;

     label06:
        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z1, 0);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label10;

     label08:
        $r16 := @caughtexception;

        r6 = $r16;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private final com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0;
        com.android.server.am.ServiceRecord r3, $r4;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>(r1, i0);

        if r3 != r2 goto label1;

        $r4 = r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    private com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent, java.lang.String, int, int, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1, $r58;
        java.lang.String r2, $r16, $r30, $r34, $r38, $r51, $r57, $r62, $r63, $r66, $r67, $r81, $r83, $r94;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.am.ServiceRecord r3, $r75, r110;
        com.android.server.am.ActiveServices$ServiceMap r4;
        android.content.ComponentName r5, r8, $r21, $r27, $r42, $r53, $r85;
        android.content.Intent$FilterComparison r6, r9, $r59, $r95;
        android.content.pm.ServiceInfo r7, $r79, $r90, $r96;
        com.android.server.am.ActiveServices$ServiceRestarter r10, $r61;
        com.android.internal.os.BatteryStatsImpl r11, r13;
        java.lang.Throwable r12, $r107;
        com.android.server.am.ActivityManagerService $r14, $r17, $r19, $r60, $r73, $r88, $r91, $r99;
        android.content.pm.ApplicationInfo $r15, $r18, $r43, $r54, $r55, $r69, $r76, $r77, $r82, $r86, $r87, $r89;
        com.android.server.am.ActiveServices$ServiceLookupResult $r20, $r33, $r47;
        com.android.server.firewall.IntentFirewall $r22;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r35, $r36, $r37, $r39, $r40, $r41, $r44, $r45, $r46, $r48, $r49, $r50, $r56, $r92, $r93, $r100, $r101, $r102, $r103;
        android.content.pm.IPackageManager $r52;
        java.lang.Object $r64, $r78, $r97, $r105;
        android.util.ArrayMap $r65, $r72, $r74, $r98, $r104;
        com.android.server.am.BatteryStatsService $r68;
        java.util.ArrayList $r71, $r80, $r84;
        android.os.RemoteException $r106;
        android.content.pm.ResolveInfo r108;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r109;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r3 = null;

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        i13 = virtualinvoke $r14.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, i1, i2, 0, 1, "service", null);

        r4 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i13);

        r5 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r5 == null goto label01;

        $r104 = r4.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r105 = virtualinvoke $r104.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r3 = (com.android.server.am.ServiceRecord) $r105;

     label01:
        if r3 != null goto label02;

        $r95 = new android.content.Intent$FilterComparison;

        specialinvoke $r95.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r6 = $r95;

        $r98 = r4.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        $r97 = virtualinvoke $r98.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r3 = (com.android.server.am.ServiceRecord) $r97;

     label02:
        if r3 != null goto label19;

     label03:
        $r52 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r108 = interfaceinvoke $r52.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>(r1, r2, 1024, i13);

        if r108 == null goto label04;

        $r96 = r108.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        goto label05;

     label04:
        $r96 = null;

     label05:
        r7 = $r96;

        if r7 != null goto label07;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start service ");

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" U=");

        $r93 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not found");

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r94);

     label06:
        return null;

     label07:
        $r53 = new android.content.ComponentName;

        $r54 = r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r62 = $r54.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r63 = r7.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r53.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r62, $r63);

        r8 = $r53;

        if i13 <= 0 goto label09;

        $r91 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r81 = r7.<android.content.pm.ServiceInfo: java.lang.String processName>;

        $r82 = r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r83 = r7.<android.content.pm.ServiceInfo: java.lang.String name>;

        $i11 = r7.<android.content.pm.ServiceInfo: int flags>;

        $z6 = virtualinvoke $r91.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r81, $r82, $r83, $i11);

        if $z6 == 0 goto label08;

        $r99 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r86 = r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r86.<android.content.pm.ApplicationInfo: int uid>;

        $z7 = virtualinvoke $r99.<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>(i1, $i12);

        if $z7 == 0 goto label08;

        i13 = 0;

        r4 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(0);

     label08:
        $r90 = new android.content.pm.ServiceInfo;

        specialinvoke $r90.<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>(r7);

        r7 = $r90;

        $r88 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r89 = r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r87 = virtualinvoke $r88.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r89, i13);

        r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo> = $r87;

     label09:
        $r65 = r4.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r64 = virtualinvoke $r65.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r3 = (com.android.server.am.ServiceRecord) $r64;

        if r3 != null goto label17;

        if z0 == 0 goto label17;

        $r59 = new android.content.Intent$FilterComparison;

        $r58 = virtualinvoke r1.<android.content.Intent: android.content.Intent cloneFilter()>();

        specialinvoke $r59.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r58);

        r9 = $r59;

        $r61 = new com.android.server.am.ActiveServices$ServiceRestarter;

        specialinvoke $r61.<com.android.server.am.ActiveServices$ServiceRestarter: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ActiveServices$1)>(r0, null);

        r10 = $r61;

        $r60 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r68 = $r60.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r11 = virtualinvoke $r68.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r13 = r11;

        entermonitor r11;

     label10:
        $r69 = r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r69.<android.content.pm.ApplicationInfo: int uid>;

        $r66 = r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r67 = r7.<android.content.pm.ServiceInfo: java.lang.String name>;

        r109 = virtualinvoke r11.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>($i7, $r66, $r67);

        exitmonitor r13;

     label11:
        goto label14;

     label12:
        $r107 := @caughtexception;

        r12 = $r107;

        exitmonitor r13;

     label13:
        throw r12;

     label14:
        $r75 = new com.android.server.am.ServiceRecord;

        $r73 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        specialinvoke $r75.<com.android.server.am.ServiceRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.ComponentName,android.content.Intent$FilterComparison,android.content.pm.ServiceInfo,boolean,java.lang.Runnable)>($r73, r109, r8, r9, r7, z1, r10);

        r3 = $r75;

        virtualinvoke r10.<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>(r3);

        $r74 = r4.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        virtualinvoke $r74.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r3);

        $r72 = r4.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        virtualinvoke $r72.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r3);

        $r71 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i10 = virtualinvoke $r71.<java.util.ArrayList: int size()>();

        i14 = $i10 - 1;

     label15:
        if i14 < 0 goto label17;

        $r80 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r78 = virtualinvoke $r80.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r110 = (com.android.server.am.ServiceRecord) $r78;

        $r79 = r110.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r76 = $r79.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r76.<android.content.pm.ApplicationInfo: int uid>;

        $r77 = r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r77.<android.content.pm.ApplicationInfo: int uid>;

        if $i9 != $i8 goto label16;

        $r85 = r110.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z5 = virtualinvoke $r85.<android.content.ComponentName: boolean equals(java.lang.Object)>(r8);

        if $z5 == 0 goto label16;

        $r84 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r84.<java.util.ArrayList: java.lang.Object remove(int)>(i14);

     label16:
        i14 = i14 + -1;

        goto label15;

     label17:
        goto label19;

     label18:
        $r106 := @caughtexception;

     label19:
        if r3 == null goto label23;

        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = r3.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r15 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = r3.<com.android.server.am.ServiceRecord: boolean exported>;

        $i4 = virtualinvoke $r17.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r16, i0, i1, $i3, $z2);

        if $i4 == 0 goto label21;

        $z4 = r3.<com.android.server.am.ServiceRecord: boolean exported>;

        if $z4 != 0 goto label20;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r42 = r3.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not exported from uid ");

        $r43 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r43.<android.content.pm.ApplicationInfo: int uid>;

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        $r47 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not exported from uid ");

        $r55 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r55.<android.content.pm.ApplicationInfo: int uid>;

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, $r57);

        return $r47;

     label20:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r27 = r3.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r30 = r3.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r34);

        $r33 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        $r38 = r3.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        specialinvoke $r33.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, $r38);

        return $r33;

     label21:
        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r22 = $r19.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall>;

        $r21 = r3.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r18 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $z3 = virtualinvoke $r22.<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>($r21, r1, i1, i0, r2, $r18);

        if $z3 != 0 goto label22;

        return null;

     label22:
        $r20 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        specialinvoke $r20.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, r3, null);

        return $r20;

     label23:
        return null;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label03 to label06 with label18;
        catch android.os.RemoteException from label07 to label17 with label18;
    }

    private final void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        java.lang.String r2;
        long l0;
        com.android.internal.app.ProcessStats$ServiceState r3;
        int $i1, $i2, $i3, $i4, $i5;
        com.android.server.am.ProcessRecord $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14;
        android.util.ArraySet $r9, $r12;
        com.android.server.am.ProcessStatsService $r15;
        com.android.server.am.ActivityManagerService $r16;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i1 != 0 goto label3;

        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = z0;

        r3 = virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState getTracker()>();

        if r3 == null goto label1;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r16.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i5 = virtualinvoke $r15.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        virtualinvoke r3.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(1, $i5, l0);

     label1:
        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r8 == null goto label2;

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r10.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z6 = $r11.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        $z5 = $z6 | z0;

        $r11.<com.android.server.am.ProcessRecord: boolean execServicesFg> = $z5;

        $r13 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r12 = $r13.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i4 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        if $i4 != 1 goto label2;

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>($r14);

     label2:
        goto label4;

     label3:
        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label4;

        if z0 == 0 goto label4;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z3 = $r5.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z3 != 0 goto label4;

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r7.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 1;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>($r6);

     label4:
        $z1 = r1.<com.android.server.am.ServiceRecord: boolean executeFg>;

        $z2 = $z1 | z0;

        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = $z2;

        $i2 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i3 = $i2 + 1;

        r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i3;

        r1.<com.android.server.am.ServiceRecord: long executingStart> = l0;

        return;
    }

    private final boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord, com.android.server.am.IntentBindRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.server.am.IntentBindRecord r2;
        boolean z0, z1, $z2;
        com.android.server.am.ProcessRecord $r4, $r5, $r8, $r9, $r12;
        android.app.IApplicationThread $r6, $r11;
        android.util.ArrayMap $r7;
        int $i0, $i1;
        android.content.Intent$FilterComparison $r10;
        android.content.Intent $r13;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: com.android.server.am.IntentBindRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label1;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label2;

     label1:
        return 0;

     label2:
        $z2 = r2.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z2 == 0 goto label3;

        if z1 == 0 goto label8;

     label3:
        $r7 = r2.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label8;

     label4:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z0, "bind");

        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r8.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(7);

        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r10 = r2.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r13 = virtualinvoke $r10.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r12.<com.android.server.am.ProcessRecord: int repProcState>;

        interfaceinvoke $r11.<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>(r1, $r13, z1, $i1);

        if z1 != 0 goto label5;

        r2.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

     label5:
        r2.<com.android.server.am.IntentBindRecord: boolean hasBound> = 1;

        r2.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        return 0;

     label8:
        return 1;

        catch android.os.RemoteException from label4 to label6 with label7;
    }

    private final boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, r3, r58;
        boolean z0, z1, $z2, z5;
        com.android.server.am.ActiveServices$ServiceMap r2;
        long l0, l1, l4, $l10, $l11, $l12, $l13, $l14, $l17, $l21, $l23, $l24, $l25, $l28, $l29, $l31, $l32, $l33, $l34, $l37, $l38, $l39, $l41, $l42, $l43, $l46, $l47, $l50, $l52, l56, l57;
        int i2, i3, $i5, $i6, $i7, $i8, $i9, $i16, $i19, $i20, $i22, $i35, $i44, $i45, $i49, $i54, i58;
        com.android.server.am.ServiceRecord$StartItem r4;
        android.util.ArrayMap $r5, $r53;
        android.content.ComponentName $r6, $r44, $r54;
        java.lang.Object $r7, $r33, $r36, $r52;
        android.content.pm.ApplicationInfo $r8;
        android.content.pm.ServiceInfo $r9;
        java.util.ArrayList $r10, $r28, $r32, $r34, $r35, $r38, $r39, $r41;
        java.lang.Runnable $r11, $r13;
        com.android.server.am.ActivityManagerService $r12, $r15, $r30;
        com.android.server.am.ActivityManagerService$MainHandler $r14, $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r23, $r24, $r40, $r43, $r45, $r46, $r48, $r49, $r50, $r51, $r55, $r56;
        java.lang.String $r20, $r22, $r26, $r42, $r57;
        java.lang.Object[] $r25;
        java.lang.Integer $r27;
        java.lang.Long $r29;
        com.android.server.am.ProcessStatsService $r31;
        byte $b26, $b27, $b30, $b36, $b40, $b48, $b51;
        android.content.Intent $r37, $r47;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 = 0;

        $i5 = r1.<com.android.server.am.ServiceRecord: int userId>;

        r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i5);

        $r5 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        if $r7 == r1 goto label01;

        $r53 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r54 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r52 = virtualinvoke $r53.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r54);

        r3 = (com.android.server.am.ServiceRecord) $r52;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to schedule restart of ");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when found in map: ");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r57);

        return 0;

     label01:
        l56 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r9 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r8 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i7 & 8;

        if $i6 != 0 goto label18;

        l0 = 1000L;

        l1 = 60000L;

        $r32 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        i2 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        if i2 <= 0 goto label10;

        i3 = i2 - 1;

     label02:
        if i3 < 0 goto label09;

        $r39 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $r36 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.ServiceRecord$StartItem) $r36;

        virtualinvoke r4.<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>();

        $r37 = r4.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        if $r37 != null goto label03;

        goto label08;

     label03:
        if z0 == 0 goto label04;

        $i49 = r4.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        if $i49 >= 3 goto label07;

        $i54 = r4.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        if $i54 >= 6 goto label07;

     label04:
        $r41 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        virtualinvoke $r41.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r4);

        $l52 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l50 = r4.<com.android.server.am.ServiceRecord$StartItem: long deliveredTime>;

        l4 = $l52 - $l50;

        l57 = l4 * 2L;

        $b51 = l0 cmp l57;

        if $b51 >= 0 goto label05;

        l0 = l57;

     label05:
        $b48 = l1 cmp l57;

        if $b48 >= 0 goto label06;

        l1 = l57;

     label06:
        goto label08;

     label07:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling start item ");

        $r47 = r4.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in service ");

        $r44 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r42);

        z1 = 1;

     label08:
        i3 = i3 + -1;

        goto label02;

     label09:
        $r38 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        virtualinvoke $r38.<java.util.ArrayList: void clear()>();

     label10:
        $i19 = r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i20 = $i19 + 1;

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i20;

        $l21 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b27 = $l21 cmp 0L;

        if $b27 != 0 goto label11;

        $i44 = r1.<com.android.server.am.ServiceRecord: int restartCount>;

        $i45 = $i44 + 1;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = $i45;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l0;

        goto label13;

     label11:
        $l28 = r1.<com.android.server.am.ServiceRecord: long restartTime>;

        $l29 = $l28 + l1;

        $b30 = l56 cmp $l29;

        if $b30 <= 0 goto label12;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = 1;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l0;

        goto label13;

     label12:
        $l23 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l24 = $l23 * 4L;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l24;

        $l25 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b26 = $l25 cmp l0;

        if $b26 >= 0 goto label13;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l0;

     label13:
        $l34 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l33 = l56 + $l34;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l33;

     label14:
        z5 = 0;

        $r35 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i35 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        i58 = $i35 - 1;

     label15:
        if i58 < 0 goto label17;

        $r34 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r33 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i58);

        r58 = (com.android.server.am.ServiceRecord) $r33;

        if r58 == r1 goto label16;

        $l41 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l32 = r58.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l31 = $l32 - 10000L;

        $b40 = $l41 cmp $l31;

        if $b40 < 0 goto label16;

        $l37 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l43 = r58.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l42 = $l43 + 10000L;

        $b36 = $l37 cmp $l42;

        if $b36 >= 0 goto label16;

        $l39 = r58.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l38 = $l39 + 10000L;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l38;

        $l46 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l47 = $l46 - l56;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l47;

        z5 = 1;

        goto label17;

     label16:
        i58 = i58 + -1;

        goto label15;

     label17:
        if z5 != 0 goto label14;

        goto label19;

     label18:
        $i9 = r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i8 = $i9 + 1;

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i8;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = 0;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = 0L;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = l56;

     label19:
        $r10 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z2 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z2 != 0 goto label20;

        r1.<com.android.server.am.ServiceRecord: boolean createdFromFg> = 0;

        $r28 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r30 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r31 = $r30.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i22 = virtualinvoke $r31.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void makeRestarting(int,long)>($i22, l56);

     label20:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        $r12 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r11 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r11);

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r13 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $l10 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService$MainHandler: boolean postAtTime(java.lang.Runnable,long)>($r13, $l10);

        $l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l12 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l13 = $l11 + $l12;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l13;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling restart of crashed service ");

        $r20 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $l14 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r22);

        $r25 = newarray (java.lang.Object)[3];

        $i16 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r25[0] = $r27;

        $r26 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r25[1] = $r26;

        $l17 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l17);

        $r25[2] = $r29;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30035, $r25);

        return z1;
    }

    final void performServiceRestartLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.content.Intent$FilterComparison $r3;
        android.content.Intent $r4;
        int $i0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r4 = virtualinvoke $r3.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $i0 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        $z1 = r1.<com.android.server.am.ServiceRecord: boolean createdFromFg>;

        specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>(r1, $i0, $z1, 1);

        return;
    }

    private final boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord, int, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, $i1;
        boolean z0, z1;
        java.util.ArrayList $r2;
        com.android.server.am.ActivityManagerService $r3;
        java.lang.Runnable $r4;
        com.android.server.am.ActivityManagerService$MainHandler $r5;
        android.content.pm.ApplicationInfo $r6;
        long $l2;
        byte $b3;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        $l2 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        z1 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if z1 != 0 goto label2;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if i0 == $i1 goto label3;

     label2:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void resetRestartCounter()>();

     label3:
        if z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r1);

     label4:
        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r4 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r4);

        return 1;
    }

    private void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, $r9;
        boolean z0;
        int i0, $i1, $i2;
        com.android.internal.app.ProcessStats$ServiceState $r2, $r6, $r10, $r11;
        java.util.ArrayList $r3, $r7;
        com.android.server.am.ActivityManagerService $r4;
        com.android.server.am.ProcessStatsService $r5;
        long $l3;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        if $r2 == null goto label4;

        z0 = 0;

        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (com.android.server.am.ServiceRecord) $r8;

        $r10 = $r9.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        if $r10 != $r11 goto label2;

        z0 = 1;

        goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i2 = virtualinvoke $r5.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r6.<com.android.internal.app.ProcessStats$ServiceState: void setRestarting(boolean,int,long)>(0, $i2, $l3);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker> = null;

     label4:
        return;
    }

    private final java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i13;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, z11;
        java.lang.String r2, r3, $r12, $r25, $r38, $r47, $r59, $r67, $r71, $r74, r78;
        com.android.server.am.ProcessRecord r4, $r6, $r21, $r56, r77;
        android.os.RemoteException r5, $r69, $r72;
        java.util.ArrayList $r7, $r14, $r15, $r57;
        com.android.server.am.ActivityManagerService $r8, $r17, $r33, $r40;
        android.util.SparseArray $r9;
        android.content.pm.IPackageManager $r10;
        java.lang.Object $r11;
        android.content.pm.ServiceInfo $r13;
        android.content.ComponentName $r16;
        android.content.pm.ApplicationInfo $r18, $r20, $r24, $r34, $r35, $r36, $r43, $r46;
        java.lang.StringBuilder $r19, $r22, $r23, $r26, $r27, $r29, $r30, $r32, $r41, $r42, $r44, $r45, $r48, $r49, $r50, $r51, $r54, $r55, $r60, $r61, $r62, $r65, $r66, $r68, $r70, $r73;
        android.content.Intent$FilterComparison $r28, $r52;
        android.content.Intent $r31, $r53;
        android.app.IApplicationThread $r37, $r64;
        com.android.server.am.ProcessStatsService $r39;
        long $l11;
        byte $b12;
        com.android.server.am.ActiveServices$ServiceMap $r58;
        java.lang.IllegalArgumentException $r63, r76;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label01;

        $r56 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r64 = $r56.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r64 == null goto label01;

        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, 0);

        return null;

     label01:
        if z1 != 0 goto label02;

        $l11 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b12 = $l11 cmp 0L;

        if $b12 <= 0 goto label02;

        return null;

     label02:
        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z2 = virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z2 == 0 goto label03;

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r1);

     label03:
        $z3 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z3 == 0 goto label04;

        $i13 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r58 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i13);

        $r57 = $r58.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r57.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

     label04:
        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i1 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r11 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        if $r11 != null goto label05;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r46 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r47 = $r46.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r43 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i9 = $r43.<android.content.pm.ApplicationInfo: int uid>;

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r52 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r53 = virtualinvoke $r52.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r54 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $i10 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        r2 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return r2;

     label05:
        $r10 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r12 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i2 = r1.<com.android.server.am.ServiceRecord: int userId>;

        interfaceinvoke $r10.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r12, 0, $i2);

     label06:
        goto label09;

     label07:
        $r72 := @caughtexception;

        goto label09;

     label08:
        $r63 := @caughtexception;

        r76 = $r63;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r59 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r70 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r76);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r71);

     label09:
        $r13 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i3 = $r13.<android.content.pm.ServiceInfo: int flags>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        z11 = $z8;

        r3 = r1.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        if z11 != 0 goto label15;

        $r33 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r34 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r34.<android.content.pm.ApplicationInfo: int uid>;

        r4 = virtualinvoke $r33.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r3, $i6, 0);

        if r4 == null goto label16;

        $r37 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r37 == null goto label16;

     label12:
        $r36 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r38 = $r36.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r35 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r35.<android.content.pm.ApplicationInfo: int versionCode>;

        $r40 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r39 = $r40.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r4.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>($r38, $i8, $r39);

        specialinvoke r0.<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>(r1, r4, z0);

     label13:
        return null;

     label14:
        $r69 := @caughtexception;

        r5 = $r69;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting service ");

        $r67 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r73 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r74, r5);

        goto label16;

     label15:
        r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

     label16:
        if r4 != null goto label18;

        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r16 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r21 = virtualinvoke $r17.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>(r3, $r18, 1, i0, "service", $r16, 0, z11, 0);

        r77 = $r21;

        if $r21 != null goto label17;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r20 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r25 = $r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r28 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r31 = virtualinvoke $r28.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        r78 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r78);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return r78;

     label17:
        if z11 == 0 goto label18;

        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = r77;

     label18:
        $r14 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $z5 = virtualinvoke $r14.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z5 != 0 goto label19;

        $r15 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label19:
        $z4 = r1.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        if $z4 == 0 goto label20;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $z6 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z6 == 0 goto label20;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r1);

     label20:
        return null;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label05 to label06 with label08;
        catch android.os.RemoteException from label12 to label13 with label14;
    }

    private final void requestServiceBindingsLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1;
        int i0, $i1;
        com.android.server.am.IntentBindRecord r2;
        android.util.ArrayMap $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        $r3 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i1 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r2 = (com.android.server.am.IntentBindRecord) $r5;

        $z1 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r1, r2, z0, 0);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return;
    }

    private final void realStartServiceLocked(com.android.server.am.ServiceRecord, com.android.server.am.ProcessRecord, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.server.am.ProcessRecord r2;
        boolean z0, z1, $z3, $z4, $z6, $z7, $z9, z17;
        int i0, $i2, $i3, $i4, $i5;
        com.android.internal.os.BatteryStatsImpl r4, $r12;
        java.lang.Throwable r5, r6, $r30, $r35;
        android.app.IApplicationThread $r7, $r22;
        long $l1;
        android.util.ArraySet $r8, $r29, $r34, $r39;
        com.android.server.am.ActivityManagerService $r9, $r10, $r18, $r19, $r38;
        java.lang.String $r11, $r15, $r32, $r33, $r42;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r13, $r14;
        android.content.pm.ServiceInfo $r16, $r17, $r21;
        android.content.pm.ApplicationInfo $r20;
        android.content.res.CompatibilityInfo $r23;
        com.android.server.am.ActiveServices$ServiceMap $r24;
        java.util.ArrayList $r25, $r26, $r28;
        com.android.server.am.ServiceRecord$StartItem $r27;
        android.os.RemoteException $r31;
        java.lang.StringBuilder $r36, $r40, $r41;
        android.os.DeadObjectException $r37;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        z0 := @parameter2: boolean;

        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 != null goto label01;

        $r31 = new android.os.RemoteException;

        specialinvoke $r31.<android.os.RemoteException: void <init>()>();

        throw $r31;

     label01:
        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = r2;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ServiceRecord: long lastActivity> = $l1;

        r1.<com.android.server.am.ServiceRecord: long restartTime> = $l1;

        $r8 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z0, "create");

        $r9 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 0, null);

        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        z1 = 0;

     label02:
        $r11 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        i0 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label03;

        $r33 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        virtualinvoke $r33.<java.lang.String: java.lang.String substring(int)>(i0);

        goto label04;

     label03:
        $r32 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

     label04:
        $r13 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r12 = virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        r4 = $r12;

        entermonitor $r12;

     label05:
        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startLaunchedLocked()>();

        exitmonitor r4;

     label06:
        goto label09;

     label07:
        $r30 := @caughtexception;

        r5 = $r30;

        exitmonitor r4;

     label08:
        throw r5;

     label09:
        $r18 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r15 = $r16.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r18.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r15);

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(7);

        $r22 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r21 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r17 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r20 = $r17.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r23 = virtualinvoke $r19.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r20);

        $i2 = r2.<com.android.server.am.ProcessRecord: int repProcState>;

        interfaceinvoke $r22.<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>(r1, $r21, $r23, $i2);

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void postNotification()>();

        z17 = 1;

     label10:
        if z17 != 0 goto label16;

        $r29 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r29.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r1, 0);

        return;

     label11:
        $r37 := @caughtexception;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application dead when creating service ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r42);

        $r38 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r38.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord)>(r2);

     label12:
        if z1 != 0 goto label16;

        $r39 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r39.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r1, 0);

        return;

     label13:
        $r35 := @caughtexception;

        r6 = $r35;

     label14:
        if z1 != 0 goto label15;

        $r34 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r34.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r1, 0);

        return;

     label15:
        throw r6;

     label16:
        specialinvoke r0.<com.android.server.am.ActiveServices: void requestServiceBindingsLocked(com.android.server.am.ServiceRecord,boolean)>(r1, z0);

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>(r2, null, 1);

        $z6 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z6 == 0 goto label17;

        $z9 = r1.<com.android.server.am.ServiceRecord: boolean callStart>;

        if $z9 == 0 goto label17;

        $r26 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i4 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label17;

        $r28 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r27 = new com.android.server.am.ServiceRecord$StartItem;

        $i5 = virtualinvoke r1.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r27.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>(r1, 0, $i5, null, null);

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

     label17:
        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, 1);

        $z3 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z3 == 0 goto label18;

        $i3 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r24 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i3);

        $r25 = $r24.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r25.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

     label18:
        $z4 = r1.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        if $z4 == 0 goto label19;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $z7 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z7 == 0 goto label19;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r1);

     label19:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch android.os.DeadObjectException from label02 to label10 with label11;
        catch java.lang.Throwable from label02 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private final void sendServiceArgsLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z3;
        int i0, $i2, $i4, $i5, $i6, $i7, $i8;
        com.android.server.am.ServiceRecord$StartItem r2;
        byte b1;
        java.util.ArrayList $r3, $r4, $r5, $r8;
        java.lang.Object $r6;
        android.content.Intent $r7, $r10;
        long $l3;
        com.android.server.am.ActivityManagerService$NeededUriGrants $r9, $r15;
        com.android.server.am.ProcessRecord $r11, $r12;
        android.app.IApplicationThread $r13;
        com.android.server.am.ActivityManagerService $r14, $r16;
        java.lang.Exception $r17, r21;
        com.android.server.am.UriPermissionOwner $r18;
        android.os.RemoteException $r19;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r3 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label01;

        return;

     label01:
        $r4 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label12;

     label02:
        $r5 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r2 = (com.android.server.am.ServiceRecord$StartItem) $r6;

        $r7 = r2.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        if $r7 != null goto label04;

        if i0 <= 1 goto label04;

     label03:
        goto label01;

     label04:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r2.<com.android.server.am.ServiceRecord$StartItem: long deliveredTime> = $l3;

        $r8 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $i4 = r2.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        $i5 = $i4 + 1;

        r2.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount> = $i5;

        $r9 = r2.<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.ActivityManagerService$NeededUriGrants neededGrants>;

        if $r9 == null goto label05;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = r2.<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.ActivityManagerService$NeededUriGrants neededGrants>;

        $r18 = virtualinvoke r2.<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)>($r15, $r18);

     label05:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z0, "start");

        if z1 != 0 goto label06;

        z1 = 1;

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r12);

     label06:
        b1 = 0;

        $i7 = r2.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        if $i7 <= 1 goto label07;

        b1 = b1 | 2;

     label07:
        $i6 = r2.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        if $i6 <= 0 goto label08;

        b1 = b1 | 1;

     label08:
        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $z3 = r2.<com.android.server.am.ServiceRecord$StartItem: boolean taskRemoved>;

        $i8 = r2.<com.android.server.am.ServiceRecord$StartItem: int id>;

        $r10 = r2.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        interfaceinvoke $r13.<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>(r1, $z3, $i8, b1, $r10);

     label09:
        goto label01;

     label10:
        $r19 := @caughtexception;

        goto label12;

     label11:
        $r17 := @caughtexception;

        r21 = $r17;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unexpected exception", r21);

        goto label12;

     label12:
        return;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch android.os.RemoteException from label04 to label09 with label10;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label09 with label11;
    }

    private final boolean isServiceNeeded(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z2;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label1;

        return 1;

     label1:
        if z0 != 0 goto label2;

        z1 = virtualinvoke r1.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

     label2:
        if z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z2, $z3;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean isServiceNeeded(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, z1);

        if $z2 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $z3 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        return;

     label2:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return;
    }

    private final void bringDownServiceLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i12, i13, i14;
        java.util.ArrayList r2, $r14, $r16, $r34, $r40, $r42;
        com.android.server.am.ConnectionRecord r3, $r80, $r86;
        java.lang.Exception r4, $r64, $r71, $r78, r95, r98;
        java.lang.Throwable r5, $r87;
        android.util.ArrayMap $r6, $r9, $r11, $r17, $r25, $r44, $r51, $r59;
        com.android.server.am.ProcessRecord $r7, $r15, $r31, $r32, $r35, $r37, $r39, $r46, $r48, $r50, $r92;
        android.content.ComponentName $r8, $r55, $r76;
        android.content.Intent$FilterComparison $r12, $r56;
        boolean $z1, $z6;
        java.lang.Runnable $r18, $r27;
        com.android.server.am.ProcessStatsService $r19;
        com.android.server.am.ActivityManagerService $r20, $r38, $r49;
        com.android.internal.app.ProcessStats$ServiceState $r21, $r22, $r23, $r26;
        com.android.server.am.ActiveServices$ServiceRestarter $r24;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r28, $r29;
        com.android.internal.os.BatteryStatsImpl $r30, r97;
        android.util.ArraySet $r33;
        android.app.IApplicationThread $r36, $r43, $r45, $r57;
        java.lang.Object $r41, $r52, $r53, $r54, $r79, $r85;
        android.content.Intent $r58;
        java.lang.String $r60, $r62, $r67, $r69, $r88, $r91;
        java.lang.StringBuilder $r61, $r63, $r66, $r68, $r70, $r72, $r73, $r74, $r75, $r77, $r81, $r82, $r89, $r90;
        android.app.IServiceConnection $r65, $r83;
        android.os.IBinder $r84;
        com.android.server.am.AppBindRecord $r93;
        com.android.server.am.IntentBindRecord r94;
        com.android.server.am.ActiveServices$ServiceMap r96;
        long l15;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i2 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i0 = $i2 - 1;

     label01:
        if i0 < 0 goto label08;

        $r59 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r53 = virtualinvoke $r59.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r2 = (java.util.ArrayList) $r53;

        i1 = 0;

     label02:
        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i8 goto label07;

        $r54 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ConnectionRecord) $r54;

        r3.<com.android.server.am.ConnectionRecord: boolean serviceDead> = 1;

     label03:
        $r65 = r3.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r55 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r65.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r55, null);

     label04:
        goto label06;

     label05:
        $r78 := @caughtexception;

        r4 = $r78;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure disconnecting service ");

        $r76 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r76);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r85 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r86 = (com.android.server.am.ConnectionRecord) $r85;

        $r83 = $r86.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r84 = interfaceinvoke $r83.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r81 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r84);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r79 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r80 = (com.android.server.am.ConnectionRecord) $r79;

        $r93 = $r80.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r92 = $r93.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r91 = $r92.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r90 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r88, r4);

     label06:
        i1 = i1 + 1;

        goto label02;

     label07:
        i0 = i0 + -1;

        goto label01;

     label08:
        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label14;

        $r46 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r45 = $r46.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r45 == null goto label14;

        $r44 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i7 = virtualinvoke $r44.<android.util.ArrayMap: int size()>();

        i12 = $i7 - 1;

     label09:
        if i12 < 0 goto label14;

        $r51 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r52 = virtualinvoke $r51.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i12);

        r94 = (com.android.server.am.IntentBindRecord) $r52;

        $z6 = r94.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z6 == 0 goto label13;

     label10:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, 0, "bring down unbind");

        $r49 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r48 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r49.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r48);

        r94.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r50 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r57 = $r50.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r56 = r94.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r58 = virtualinvoke $r56.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r57.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r1, $r58);

     label11:
        goto label13;

     label12:
        $r64 := @caughtexception;

        r95 = $r64;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r60 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r62, r95);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r1);

     label13:
        i12 = i12 + -1;

        goto label09;

     label14:
        $i3 = r1.<com.android.server.am.ServiceRecord: int userId>;

        r96 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i3);

        $r9 = r96.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r8 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r8);

        $r11 = r96.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        $r12 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r12);

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r1, 0, 1);

        $r14 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i4 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        i13 = $i4 - 1;

     label15:
        if i13 < 0 goto label17;

        $r42 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r41 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        if $r41 != r1 goto label16;

        $r40 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r40.<java.util.ArrayList: java.lang.Object remove(int)>(i13);

     label16:
        i13 = i13 + -1;

        goto label15;

     label17:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        r1.<com.android.server.am.ServiceRecord: boolean isForeground> = 0;

        r1.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r1.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void clearDeliveredStartsLocked()>();

        $r16 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        virtualinvoke $r16.<java.util.ArrayList: void clear()>();

        $r15 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r15 == null goto label26;

        $r29 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r30 = virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        r97 = $r30;

        entermonitor $r30;

     label18:
        $r28 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor r97;

     label19:
        goto label22;

     label20:
        $r87 := @caughtexception;

        r5 = $r87;

        exitmonitor r97;

     label21:
        throw r5;

     label22:
        $r32 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r33 = $r32.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r33.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r31 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r36 = $r31.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r36 == null goto label26;

        $r35 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r35, 0);

     label23:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, 0, "destroy");

        $r34 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r34.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r38 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r39 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r38.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r39);

        $r37 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r43 = $r37.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r43.<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>(r1);

     label24:
        goto label26;

     label25:
        $r71 := @caughtexception;

        r98 = $r71;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when destroying service ");

        $r67 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r69, r98);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r1);

     label26:
        $r17 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i5 = virtualinvoke $r17.<android.util.ArrayMap: int size()>();

        if $i5 <= 0 goto label27;

        $r25 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        virtualinvoke $r25.<android.util.ArrayMap: void clear()>();

     label27:
        $r18 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $z1 = $r18 instanceof com.android.server.am.ActiveServices$ServiceRestarter;

        if $z1 == 0 goto label28;

        $r27 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $r24 = (com.android.server.am.ActiveServices$ServiceRestarter) $r27;

        virtualinvoke $r24.<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>(null);

     label28:
        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r19 = $r20.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i14 = virtualinvoke $r19.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r22 == null goto label29;

        $r23 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r23.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, i14, l15);

        $r21 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r21.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(0, i14, l15);

        $i6 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i6 != 0 goto label29;

        $r26 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r26.<com.android.internal.app.ProcessStats$ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>(r1, 0);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker> = null;

     label29:
        virtualinvoke r96.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r1);

        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    void removeConnectionLocked(com.android.server.am.ConnectionRecord, com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ConnectionRecord r1;
        com.android.server.am.ProcessRecord r2, $r15, $r18, $r25, $r28, $r30, $r31, $r33, $r39, $r40, $r43, $r46, $r49, $r55, $r56;
        com.android.server.am.ActivityRecord r3, $r13, $r51, $r53, $r57;
        android.os.IBinder r4;
        com.android.server.am.AppBindRecord r5;
        com.android.server.am.ServiceRecord r6;
        java.util.ArrayList r7, r66;
        java.lang.Exception r8, $r58;
        android.app.IServiceConnection $r9;
        android.util.ArrayMap $r10, $r14, $r27, $r45, $r47, $r61;
        java.lang.Object $r11, $r17;
        android.util.ArraySet $r12, $r16, $r50;
        boolean $z1, $z2, z9;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.server.am.ActivityManagerService $r19, $r29, $r42;
        com.android.internal.app.ProcessStats$ServiceState $r20, $r21;
        com.android.server.am.ProcessStatsService $r22;
        android.app.IApplicationThread $r23, $r36;
        com.android.server.am.IntentBindRecord $r24, $r26, $r32, $r34, $r38, $r41;
        long $l4;
        android.content.Intent $r35;
        android.content.Intent$FilterComparison $r37;
        java.util.HashSet $r52, $r54;
        java.lang.StringBuilder $r60, $r63, $r65;
        java.lang.String $r62, $r64;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ConnectionRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: com.android.server.am.ActivityRecord;

        $r9 = r1.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        r4 = interfaceinvoke $r9.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        r5 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r6 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r10 = r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (java.util.ArrayList) $r11;

        if r7 == null goto label01;

        virtualinvoke r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i12 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i12 != 0 goto label01;

        $r61 = r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        virtualinvoke $r61.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

     label01:
        $r12 = r5.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        virtualinvoke $r12.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r13 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        if $r13 == null goto label02;

        $r57 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        if $r57 == r3 goto label02;

        $r51 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        $r52 = $r51.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r52 == null goto label02;

        $r53 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        $r54 = $r53.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        virtualinvoke $r54.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

     label02:
        $r15 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r15 == r2 goto label04;

        $r49 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r50 = $r49.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r50.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $i10 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i11 = $i10 & 8;

        if $i11 == 0 goto label03;

        $r56 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r56.<com.android.server.am.ProcessRecord: void updateHasAboveClientLocked()>();

     label03:
        $r46 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r46 == null goto label04;

        $r55 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>($r55, r1, 1);

     label04:
        $r14 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r66 = (java.util.ArrayList) $r17;

        if r66 == null goto label05;

        virtualinvoke r66.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i9 = virtualinvoke r66.<java.util.ArrayList: int size()>();

        if $i9 != 0 goto label05;

        $r47 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        virtualinvoke $r47.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

     label05:
        $r16 = r5.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        $i0 = virtualinvoke $r16.<android.util.ArraySet: int size()>();

        if $i0 != 0 goto label06;

        $r41 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r45 = $r41.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r40 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r45.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r40);

     label06:
        $z1 = r1.<com.android.server.am.ConnectionRecord: boolean serviceDead>;

        if $z1 != 0 goto label13;

        $r18 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r18 == null goto label11;

        $r25 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r25.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r23 == null goto label11;

        $r24 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r27 = $r24.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i5 = virtualinvoke $r27.<android.util.ArrayMap: int size()>();

        if $i5 != 0 goto label11;

        $r26 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z2 = $r26.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z2 == 0 goto label11;

     label07:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r6, 0, "unbind");

        $r31 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r30 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r31 == $r30 goto label08;

        $i8 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i7 = $i8 & 32;

        if $i7 != 0 goto label08;

        $r39 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i6 = $r39.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i6 > 8 goto label08;

        $r42 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r43 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r42.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r43, 0, null);

     label08:
        $r29 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r28 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r29.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r28);

        $r34 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r34.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r32 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r32.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

        $r33 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r36 = $r33.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r38 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r37 = $r38.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r35 = virtualinvoke $r37.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r36.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r6, $r35);

     label09:
        goto label11;

     label10:
        $r58 := @caughtexception;

        r8 = $r58;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r62 = r6.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r64, r8);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r6);

     label11:
        $i1 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label13;

        z9 = virtualinvoke r6.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if z9 != 0 goto label12;

        $r20 = r6.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r20 == null goto label12;

        $r21 = r6.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r22 = $r19.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i3 = virtualinvoke $r22.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r21.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(0, $i3, $l4);

     label12:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r6, 1, z9);

     label13:
        return;

        catch java.lang.Exception from label07 to label09 with label10;
    }

    void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, int, int, int)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, i1, i2, $i3, $i5, $i6, $i7;
        boolean z0;
        com.android.server.am.ServiceRecord$StartItem r2;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r12, $r13, $r15;
        java.lang.String $r7, $r14;
        java.lang.IllegalArgumentException $r10;
        long l8;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if r1 == null goto label8;

        if i0 != 1 goto label7;

        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 1;

        lookupswitch(i2)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 1000: goto label4;
            default: goto label5;
        };

     label1:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 1);

        r1.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 0;

        goto label6;

     label2:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 1);

        $i7 = virtualinvoke r1.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        if $i7 != i1 goto label6;

        r1.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 1;

        goto label6;

     label3:
        r2 = virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 0);

        if r2 == null goto label6;

        r2.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount> = 0;

        $i6 = r2.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        $i5 = $i6 + 1;

        r2.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount> = $i5;

        r1.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 1;

        goto label6;

     label4:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 1);

        goto label6;

     label5:
        $r10 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown service start result: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label6:
        if i2 != 0 goto label7;

        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

     label7:
        l8 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, z0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        goto label9;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done executing unknown service from pid ");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

     label9:
        return;
    }

    private void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0;
        long l1;
        com.android.internal.app.ProcessStats$ServiceState $r2, $r5, $r6, $r7;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.ProcessStatsService $r4;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i0 = virtualinvoke $r4.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r5.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(0, i0, l1);

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r6.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(0, i0, l1);

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r7.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, i0, l1);

     label1:
        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, 1, 1);

        return;
    }

    private void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, $r24;
        boolean z0, z1, $z2, $z5, $z8;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7;
        com.android.server.am.ProcessRecord $r2, $r4, $r5, $r6, $r11, $r14, $r15, $r17, $r22, $r25, $r28, $r29;
        com.android.internal.app.ProcessStats$ServiceState $r3, $r10, $r12;
        android.util.ArraySet $r7, $r13, $r16, $r20, $r26;
        com.android.server.am.ProcessStatsService $r8;
        com.android.server.am.ActivityManagerService $r9, $r19, $r27;
        long $l4;
        java.util.ArrayList $r18;
        android.util.ArrayMap $r21;
        java.lang.Object $r23;
        com.android.server.am.ActivityManagerService$MainHandler $r30;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i1 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i2 = $i1 - 1;

        r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i2;

        $i3 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i3 > 0 goto label9;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label6;

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r11.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 0;

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r14.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r13.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r15 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i6 = virtualinvoke $r16.<android.util.ArraySet: int size()>();

        if $i6 != 0 goto label1;

        $r27 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r30 = $r27.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r28 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r30.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(12, $r28);

        goto label4;

     label1:
        $z5 = r1.<com.android.server.am.ServiceRecord: boolean executeFg>;

        if $z5 == 0 goto label4;

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r22.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i7 = virtualinvoke $r20.<android.util.ArraySet: int size()>();

        i0 = $i7 - 1;

     label2:
        if i0 < 0 goto label4;

        $r25 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r26 = $r25.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r23 = virtualinvoke $r26.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        $r24 = (com.android.server.am.ServiceRecord) $r23;

        $z8 = $r24.<com.android.server.am.ServiceRecord: boolean executeFg>;

        if $z8 == 0 goto label3;

        $r29 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r29.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 1;

        goto label4;

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        $r18 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r18.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r21 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        virtualinvoke $r21.<android.util.ArrayMap: void clear()>();

     label5:
        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r17 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r19.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r17);

     label6:
        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = 0;

        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r3 == null goto label7;

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r9 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i5 = virtualinvoke $r8.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r10.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(0, $i5, $l4);

        if z1 == 0 goto label7;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r12.<com.android.internal.app.ProcessStats$ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>(r1, 0);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker> = null;

     label7:
        if z1 == 0 goto label9;

        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label8;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z2 = $r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z2 != 0 goto label8;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r7.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label8:
        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

     label9:
        return;
    }

    boolean attachApplicationLocked(com.android.server.am.ProcessRecord, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r9, $r20;
        java.lang.String r2, $r17, $r25, $r30, $r31, $r34;
        boolean z0, $z1, $z2, $z3;
        com.android.server.am.ServiceRecord r3, r37;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r18, $r19, $r24;
        java.lang.Object $r8, $r21;
        com.android.server.am.ActivityManagerService $r10, $r14, $r26;
        com.android.server.am.ActivityManagerService$MainHandler $r11, $r15;
        java.lang.Runnable $r12, $r13;
        android.content.pm.ApplicationInfo $r16, $r22, $r23, $r28;
        com.android.server.am.ProcessStatsService $r27;
        android.os.RemoteException $r29, r36;
        java.lang.StringBuilder $r32, $r33, $r35;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        z0 = 0;

        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label07;

        r3 = null;

     label01:
        i0 = 0;

     label02:
        $r18 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i6 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if i0 >= $i6 goto label05;

        $r19 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r21 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ServiceRecord) $r21;

        $r20 = r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if r1 == $r20 goto label03;

        $i9 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r28 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        if $i9 != $i8 goto label04;

        $r30 = r3.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z3 != 0 goto label03;

        goto label04;

     label03:
        $r24 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r24.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        i0 = i0 + -1;

        $r22 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r25 = $r22.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r23 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r23.<android.content.pm.ApplicationInfo: int versionCode>;

        $r26 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r27 = $r26.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>($r25, $i7, $r27);

        $z2 = r3.<com.android.server.am.ServiceRecord: boolean createdFromFg>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>(r3, r1, $z2);

        z0 = 1;

     label04:
        i0 = i0 + 1;

        goto label02;

     label05:
        goto label07;

     label06:
        $r29 := @caughtexception;

        r36 = $r29;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting service ");

        $r31 = r3.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r34, r36);

        throw r36;

     label07:
        $r5 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label11;

        i10 = 0;

     label08:
        $r6 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i10 >= $i3 goto label11;

        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r37 = (com.android.server.am.ServiceRecord) $r8;

        $r9 = r37.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if r1 == $r9 goto label09;

        $i5 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r16 = r37.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        if $i5 != $i4 goto label10;

        $r17 = r37.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 != 0 goto label09;

        goto label10;

     label09:
        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r12 = r37.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r12);

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r14.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r13 = r37.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r13);

     label10:
        i10 = i10 + 1;

        goto label08;

     label11:
        return z0;

        catch android.os.RemoteException from label01 to label05 with label06;
    }

    void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r7;
        int i0, $i1, $i2, $i3;
        com.android.server.am.ServiceRecord r2;
        java.util.ArrayList $r3, $r4, $r13;
        java.lang.Object $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11, $r14, $r15;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label5;

        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ServiceRecord) $r5;

        $i3 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r6 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i2 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 != $i2 goto label2;

        $r14 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = r2.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label3;

     label2:
        $r7 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if $r7 != r1 goto label4;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forcing bringing down service: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        i0 = i0 + -1;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r2);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return;
    }

    private boolean collectForceStopServicesLocked(java.lang.String, int, boolean, boolean, android.util.ArrayMap, java.util.ArrayList)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, $r9, $r17;
        int i0, i1, $i2;
        boolean z0, z1, z2, $z4, $z6, $z7;
        android.util.ArrayMap r2;
        java.util.ArrayList r3;
        com.android.server.am.ServiceRecord r4;
        java.lang.Object $r5;
        com.android.server.am.ProcessRecord $r6, $r11, $r12, $r13, $r15, $r16;
        java.lang.StringBuilder $r7, $r8, $r10;
        android.util.ArraySet $r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: android.util.ArrayMap;

        r3 := @parameter5: java.util.ArrayList;

        z2 = 0;

        i1 = 0;

     label1:
        $i2 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        if i1 >= $i2 goto label7;

        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (com.android.server.am.ServiceRecord) $r5;

        if r1 == null goto label2;

        $r17 = r4.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z7 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label6;

     label2:
        $r6 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label3;

        if z0 != 0 goto label3;

        $r16 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z6 = $r16.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z6 != 0 goto label6;

     label3:
        if z1 != 0 goto label4;

        return 1;

     label4:
        z2 = 1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force stopping service ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $r11 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label5;

        $r12 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        $r13 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = $r13.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 != 0 goto label5;

        $r15 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r14 = $r15.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r14.<android.util.ArraySet: boolean remove(java.lang.Object)>(r4);

     label5:
        r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return z2;
    }

    boolean forceStopLocked(java.lang.String, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1;
        int i0, i1, $i2, i3, i4;
        boolean z0, z1, z2, $z3;
        java.util.ArrayList r2, $r4;
        android.util.ArrayMap r3, $r12;
        android.util.SparseArray $r5, $r9, $r11;
        java.lang.Object $r6, $r7, $r10;
        com.android.server.am.ServiceRecord $r8;
        com.android.server.am.ActiveServices$ServiceMap $r13, r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        if i0 != -1 goto label4;

        i1 = 0;

     label1:
        $r9 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        if i1 >= $i2 goto label3;

        $r11 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r13 = (com.android.server.am.ActiveServices$ServiceMap) $r10;

        $r12 = $r13.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $z3 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean collectForceStopServicesLocked(java.lang.String,int,boolean,boolean,android.util.ArrayMap,java.util.ArrayList)>(r1, i0, z0, z1, $r12, r2);

        z2 = z2 | $z3;

        if z1 != 0 goto label2;

        if z2 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        $r5 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r14 = (com.android.server.am.ActiveServices$ServiceMap) $r6;

        if r14 == null goto label5;

        r3 = r14.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean collectForceStopServicesLocked(java.lang.String,int,boolean,boolean,android.util.ArrayMap,java.util.ArrayList)>(r1, i0, z0, z1, r3, r2);

     label5:
        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label6:
        if i4 >= i3 goto label7;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>($r8);

        i4 = i4 + 1;

        goto label6;

     label7:
        return z2;
    }

    void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord, android.content.ComponentName, android.content.Intent)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.TaskRecord r1;
        android.content.ComponentName r2;
        android.content.Intent r3;
        java.util.ArrayList r4, $r7, $r10;
        android.util.ArrayMap r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        com.android.server.am.ServiceRecord r6, r24;
        java.lang.Object $r8, $r20;
        boolean $z0, $z3;
        android.content.pm.ServiceInfo $r9;
        com.android.server.am.ServiceRecord$StartItem $r11;
        com.android.server.am.ProcessRecord $r12, $r14;
        android.app.IApplicationThread $r13;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;
        java.lang.String $r16, $r21, $r22, $r23;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: android.content.Intent;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        $i1 = r1.<com.android.server.am.TaskRecord: int userId>;

        r5 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServices(int)>($i1);

        i0 = 0;

     label1:
        $i2 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        if i0 >= $i2 goto label3;

        $r20 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r6 = (com.android.server.am.ServiceRecord) $r20;

        $r21 = r6.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r23 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z3 == 0 goto label2;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        i8 = 0;

     label4:
        $i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i8 >= $i3 goto label7;

        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r24 = (com.android.server.am.ServiceRecord) $r8;

        $z0 = r24.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z0 == 0 goto label6;

        $r9 = r24.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i5 = $r9.<android.content.pm.ServiceInfo: int flags>;

        $i4 = $i5 & 1;

        if $i4 == 0 goto label5;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service ");

        $r16 = r24.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": remove task");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r22);

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r24);

        goto label6;

     label5:
        $r10 = r24.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r11 = new com.android.server.am.ServiceRecord$StartItem;

        $i6 = virtualinvoke r24.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r11.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>(r24, 1, $i6, r3, null);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = r24.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label6;

        $r14 = r24.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r14.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label6;

        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r24, 1, 0);

     label6:
        i8 = i8 + 1;

        goto label4;

     label7:
        return;
    }

    final void killServicesLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, r6, $r18, $r77, $r97, $r98, $r99;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z12, z13;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, i35, i36;
        com.android.server.am.ServiceRecord r2, r102, r103, r104, r105, r106;
        com.android.internal.os.BatteryStatsImpl r3, $r79;
        java.lang.Throwable r4, $r94;
        com.android.server.am.IntentBindRecord r5;
        com.android.server.am.AppBindRecord r7;
        com.android.server.am.ConnectionRecord r8, r100;
        android.util.ArraySet $r9, $r10, $r11, $r12, $r14, $r19, $r43, $r70, $r72, $r82, $r88, $r93, $r95;
        java.util.ArrayList $r13, $r16, $r17, $r21, $r22, $r25, $r30, $r35, $r40, $r44, $r76;
        java.lang.Object $r15, $r26, $r34, $r42, $r47, $r69, $r81, $r83, $r86, $r91, $r96;
        java.lang.String $r23, $r24, $r32, $r33, $r58, $r61, $r73;
        android.content.pm.ApplicationInfo $r27, $r28, $r36, $r37, $r53;
        android.content.pm.ServiceInfo $r29, $r38, $r54;
        android.content.ComponentName $r41;
        com.android.internal.app.ProcessStats$ServiceState $r45, $r50;
        android.util.ArrayMap $r46, $r84, $r87, $r89, $r90, $r92;
        long $l15;
        com.android.server.am.ActivityManagerService $r48;
        com.android.server.am.ProcessStatsService $r49;
        java.lang.StringBuilder $r51, $r52, $r56, $r57, $r59, $r63, $r64, $r65, $r66, $r67, $r74, $r75;
        java.lang.Object[] $r55;
        java.lang.Integer $r60, $r62, $r68;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r78, $r80;
        android.app.IApplicationThread $r85;
        com.android.server.am.ActiveServices$ServiceMap r101;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i3 = virtualinvoke $r9.<android.util.ArraySet: int size()>();

        i0 = $i3 - 1;

     label01:
        if i0 < 0 goto label18;

        $r82 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r81 = virtualinvoke $r82.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r2 = (com.android.server.am.ServiceRecord) $r81;

        $r80 = r2.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r79 = virtualinvoke $r80.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        r3 = $r79;

        entermonitor $r79;

     label02:
        $r78 = r2.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r78.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r94 := @caughtexception;

        r4 = $r94;

        exitmonitor r3;

     label05:
        throw r4;

     label06:
        $r77 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r77 == r1 goto label07;

        $r97 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r97 == null goto label07;

        $r98 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z12 = $r98.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z12 != 0 goto label07;

        $r99 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r93 = $r99.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r93.<android.util.ArraySet: boolean remove(java.lang.Object)>(r2);

     label07:
        r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        r2.<com.android.server.am.ServiceRecord: int executeNesting> = 0;

        virtualinvoke r2.<com.android.server.am.ServiceRecord: void forceClearTracker()>();

        $r76 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $z9 = virtualinvoke $r76.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        if $z9 == 0 goto label08;

     label08:
        $r89 = r2.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        i30 = virtualinvoke $r89.<android.util.ArrayMap: int size()>();

        i31 = i30 - 1;

     label09:
        if i31 < 0 goto label17;

        $r90 = r2.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r91 = virtualinvoke $r90.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i31);

        r5 = (com.android.server.am.IntentBindRecord) $r91;

        r5.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = null;

        r5.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        r5.<com.android.server.am.IntentBindRecord: boolean received> = 0;

        r5.<com.android.server.am.IntentBindRecord: boolean requested> = 0;

        $r92 = r5.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i27 = virtualinvoke $r92.<android.util.ArrayMap: int size()>();

        i1 = $i27 - 1;

     label10:
        if i1 < 0 goto label16;

        $r84 = r5.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r83 = virtualinvoke $r84.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r6 = (com.android.server.am.ProcessRecord) $r83;

        $z8 = r6.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z8 != 0 goto label15;

        $r85 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r85 != null goto label11;

        goto label15;

     label11:
        $r87 = r5.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r86 = virtualinvoke $r87.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r7 = (com.android.server.am.AppBindRecord) $r86;

        z1 = 0;

        $r88 = r7.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        $i26 = virtualinvoke $r88.<android.util.ArraySet: int size()>();

        i2 = $i26 - 1;

     label12:
        if i2 < 0 goto label14;

        $r95 = r7.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        $r96 = virtualinvoke $r95.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r8 = (com.android.server.am.ConnectionRecord) $r96;

        $i28 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i29 = $i28 & 49;

        if $i29 != 1 goto label13;

        z1 = 1;

        goto label14;

     label13:
        i2 = i2 + -1;

        goto label12;

     label14:
        if z1 != 0 goto label15;

        goto label15;

     label15:
        i1 = i1 + -1;

        goto label10;

     label16:
        i31 = i31 + -1;

        goto label09;

     label17:
        i0 = i0 + -1;

        goto label01;

     label18:
        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i4 = virtualinvoke $r10.<android.util.ArraySet: int size()>();

        i32 = $i4 - 1;

     label19:
        if i32 < 0 goto label20;

        $r70 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r69 = virtualinvoke $r70.<android.util.ArraySet: java.lang.Object valueAt(int)>(i32);

        r100 = (com.android.server.am.ConnectionRecord) $r69;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>(r100, r1, null);

        i32 = i32 + -1;

        goto label19;

     label20:
        virtualinvoke r0.<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>(r1);

        $r11 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r11.<android.util.ArraySet: void clear()>();

        $i5 = r1.<com.android.server.am.ProcessRecord: int userId>;

        r101 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i5);

        $r12 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i6 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        i33 = $i6 - 1;

     label21:
        if i33 < 0 goto label29;

        $r43 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r42 = virtualinvoke $r43.<android.util.ArraySet: java.lang.Object valueAt(int)>(i33);

        r102 = (com.android.server.am.ServiceRecord) $r42;

        $z4 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 != 0 goto label22;

        $r72 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r72.<android.util.ArraySet: java.lang.Object removeAt(int)>(i33);

     label22:
        $r46 = r101.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r41 = r102.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r47 = virtualinvoke $r46.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r41);

        r103 = (com.android.server.am.ServiceRecord) $r47;

        if r103 == r102 goto label23;

        if r103 == null goto label28;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r102);

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in process ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r75 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not same as in map: ");

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r103);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r73);

        goto label28;

     label23:
        if z0 == 0 goto label24;

        $i16 = r102.<com.android.server.am.ServiceRecord: int crashCount>;

        if $i16 < 2 goto label24;

        $r54 = r102.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r53 = $r54.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i19 = $r53.<android.content.pm.ApplicationInfo: int flags>;

        $i18 = $i19 & 8;

        if $i18 != 0 goto label24;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service crashed ");

        $i17 = r102.<com.android.server.am.ServiceRecord: int crashCount>;

        $r57 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, stopping: ");

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r102);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r58);

        $r55 = newarray (java.lang.Object)[4];

        $i21 = r102.<com.android.server.am.ServiceRecord: int userId>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r55[0] = $r62;

        $i23 = r102.<com.android.server.am.ServiceRecord: int crashCount>;

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r55[1] = $r60;

        $r61 = r102.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r55[2] = $r61;

        $i22 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        $r55[3] = $r68;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30034, $r55);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r102);

        goto label28;

     label24:
        if z0 != 0 goto label25;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r102);

        goto label28;

     label25:
        z13 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r102, 1);

        $z6 = r102.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z6 == 0 goto label28;

        $z5 = r102.<com.android.server.am.ServiceRecord: boolean stopIfKilled>;

        if $z5 != 0 goto label26;

        if z13 == 0 goto label28;

     label26:
        $r44 = r102.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i13 = virtualinvoke $r44.<java.util.ArrayList: int size()>();

        if $i13 != 0 goto label28;

        r102.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r45 = r102.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r45 == null goto label27;

        $r50 = r102.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r48 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r49 = $r48.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i14 = virtualinvoke $r49.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r50.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, $i14, $l15);

     label27:
        $z7 = virtualinvoke r102.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if $z7 != 0 goto label28;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r102);

     label28:
        i33 = i33 + -1;

        goto label21;

     label29:
        if z0 != 0 goto label35;

        $r19 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r19.<android.util.ArraySet: void clear()>();

        $r22 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i8 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        i34 = $i8 - 1;

     label30:
        if i34 < 0 goto label32;

        $r35 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r34 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object get(int)>(i34);

        r104 = (com.android.server.am.ServiceRecord) $r34;

        $r32 = r104.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r33 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z3 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z3 == 0 goto label31;

        $r38 = r104.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r37 = $r38.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        $r36 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i12 = $r36.<android.content.pm.ApplicationInfo: int uid>;

        if $i11 != $i12 goto label31;

        $r40 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r40.<java.util.ArrayList: java.lang.Object remove(int)>(i34);

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r104);

     label31:
        i34 = i34 + -1;

        goto label30;

     label32:
        $r21 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i7 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        i35 = $i7 - 1;

     label33:
        if i35 < 0 goto label35;

        $r25 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        r105 = (com.android.server.am.ServiceRecord) $r26;

        $r24 = r105.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r23 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label34;

        $r29 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r27 = $r29.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r27.<android.content.pm.ApplicationInfo: int uid>;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        if $i10 != $i9 goto label34;

        $r30 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r30.<java.util.ArrayList: java.lang.Object remove(int)>(i35);

     label34:
        i35 = i35 + -1;

        goto label33;

     label35:
        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        i36 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

     label36:
        if i36 <= 0 goto label38;

        i36 = i36 + -1;

        $r16 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $r15 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i36);

        r106 = (com.android.server.am.ServiceRecord) $r15;

        $r18 = r106.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r18 != r1 goto label37;

        virtualinvoke r106.<com.android.server.am.ServiceRecord: void forceClearTracker()>();

        $r17 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object remove(int)>(i36);

     label37:
        goto label36;

     label38:
        $r14 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r14.<android.util.ArraySet: void clear()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.app.ActivityManager$RunningServiceInfo r2, $r5;
        int i0, i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.util.ArrayList r3;
        com.android.server.am.ConnectionRecord r4;
        android.content.ComponentName $r6;
        com.android.server.am.ProcessRecord $r7, $r11, $r12, $r19, $r21, $r22, $r23;
        android.content.pm.ApplicationInfo $r8, $r20;
        java.lang.String $r9, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l3, $l5;
        android.util.ArrayMap $r10, $r13, $r15;
        java.lang.Object $r14, $r16;
        com.android.server.am.AppBindRecord $r17;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r5 = new android.app.ActivityManager$RunningServiceInfo;

        specialinvoke $r5.<android.app.ActivityManager$RunningServiceInfo: void <init>()>();

        r2 = $r5;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r2.<android.app.ActivityManager$RunningServiceInfo: android.content.ComponentName service> = $r6;

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label01;

        $r23 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i20 = $r23.<com.android.server.am.ProcessRecord: int pid>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int pid> = $i20;

     label01:
        $r8 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i2 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int uid> = $i2;

        $r9 = r1.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        r2.<android.app.ActivityManager$RunningServiceInfo: java.lang.String process> = $r9;

        $z0 = r1.<com.android.server.am.ServiceRecord: boolean isForeground>;

        r2.<android.app.ActivityManager$RunningServiceInfo: boolean foreground> = $z0;

        $l3 = r1.<com.android.server.am.ServiceRecord: long createTime>;

        r2.<android.app.ActivityManager$RunningServiceInfo: long activeSince> = $l3;

        $z1 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        r2.<android.app.ActivityManager$RunningServiceInfo: boolean started> = $z1;

        $r10 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i4 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        r2.<android.app.ActivityManager$RunningServiceInfo: int clientCount> = $i4;

        $i6 = r1.<com.android.server.am.ServiceRecord: int crashCount>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int crashCount> = $i6;

        $l5 = r1.<com.android.server.am.ServiceRecord: long lastActivity>;

        r2.<android.app.ActivityManager$RunningServiceInfo: long lastActivityTime> = $l5;

        $z3 = r1.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z3 == 0 goto label02;

        $i17 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i21 = $i17 | 2;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i21;

     label02:
        $z2 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label03;

        $i19 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i16 = $i19 | 1;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i16;

     label03:
        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label04;

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i13 = $r22.<com.android.server.am.ProcessRecord: int pid>;

        $i15 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i13 != $i15 goto label04;

        $i14 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i18 = $i14 | 4;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i18;

     label04:
        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label05;

        $r21 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = $r21.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 == 0 goto label05;

        $i11 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i12 = $i11 | 8;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i12;

     label05:
        $r13 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i7 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        i0 = $i7 - 1;

     label06:
        if i0 < 0 goto label10;

        $r15 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r14 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r3 = (java.util.ArrayList) $r14;

        i1 = 0;

     label07:
        $i8 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i1 >= $i8 goto label09;

        $r16 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ConnectionRecord) $r16;

        $i9 = r4.<com.android.server.am.ConnectionRecord: int clientLabel>;

        if $i9 == 0 goto label08;

        $r17 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r19 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r20 = $r19.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r18 = $r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r2.<android.app.ActivityManager$RunningServiceInfo: java.lang.String clientPackage> = $r18;

        $i10 = r4.<com.android.server.am.ConnectionRecord: int clientLabel>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int clientLabel> = $i10;

        return r2;

     label08:
        i1 = i1 + 1;

        goto label07;

     label09:
        i0 = i0 + -1;

        goto label06;

     label10:
        return r2;
    }

    java.util.List getRunningServiceInfoLocked(int, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, i21, i22, i23, i24;
        java.util.ArrayList r1, $r6, $r7, $r8, $r13, $r14;
        long l3, $l11, $l16;
        int[] r2;
        android.util.ArrayMap r3, r21;
        com.android.server.am.ServiceRecord r4, r19, r22, r23;
        java.lang.Throwable r5, $r18;
        java.lang.Object $r9, $r11, $r15, $r17;
        android.app.ActivityManager$RunningServiceInfo $r10, $r16, r20, r24;
        com.android.server.am.ActivityManagerService $r12;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $i6 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i2);

        if $i6 != 0 goto label08;

        $r12 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r2 = virtualinvoke $r12.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        i4 = 0;

     label02:
        $i13 = lengthof r2;

        if i4 >= $i13 goto label05;

        $i18 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i18 >= i0 goto label05;

        $i19 = r2[i4];

        r3 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServices(int)>($i19);

        i5 = 0;

     label03:
        $i17 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i5 >= $i17 goto label04;

        $i20 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i20 >= i0 goto label04;

        $r17 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r4 = (com.android.server.am.ServiceRecord) $r17;

        $r16 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        i5 = i5 + 1;

        goto label03;

     label04:
        i4 = i4 + 1;

        goto label02;

     label05:
        i21 = 0;

     label06:
        $r14 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i15 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if i21 >= $i15 goto label07;

        $i14 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i14 >= i0 goto label07;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r19 = (com.android.server.am.ServiceRecord) $r15;

        r20 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r19);

        $l16 = r19.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        r20.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l16;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

        i21 = i21 + 1;

        goto label06;

     label07:
        goto label13;

     label08:
        i22 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        r21 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServices(int)>(i22);

        i23 = 0;

     label09:
        $i7 = virtualinvoke r21.<android.util.ArrayMap: int size()>();

        if i23 >= $i7 goto label10;

        $i12 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i12 >= i0 goto label10;

        $r11 = virtualinvoke r21.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i23);

        r22 = (com.android.server.am.ServiceRecord) $r11;

        $r10 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r22);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i23 = i23 + 1;

        goto label09;

     label10:
        i24 = 0;

     label11:
        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i8 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i24 >= $i8 goto label13;

        $i9 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i9 >= i0 goto label13;

        $r8 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r23 = (com.android.server.am.ServiceRecord) $r9;

        $i10 = r23.<com.android.server.am.ServiceRecord: int userId>;

        if $i10 != i22 goto label12;

        r24 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r23);

        $l11 = r23.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        r24.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l11;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r24);

     label12:
        i24 = i24 + 1;

        goto label11;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label16;

     label14:
        $r18 := @caughtexception;

        r5 = $r18;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r5;

     label16:
        return r1;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.am.ServiceRecord r2;
        java.util.ArrayList r3;
        android.util.ArrayMap $r4, $r5;
        java.lang.Object $r6, $r7, $r11;
        android.app.PendingIntent $r8, $r12;
        com.android.server.am.ConnectionRecord $r9, $r10;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        r2 = virtualinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>(r1, i0);

        if r2 == null goto label5;

        $r4 = r2.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i4 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i1 = $i4 - 1;

     label1:
        if i1 < 0 goto label5;

        $r5 = r2.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r3 = (java.util.ArrayList) $r6;

        i2 = 0;

     label2:
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i2 >= $i5 goto label4;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.am.ConnectionRecord) $r7;

        $r8 = $r9.<com.android.server.am.ConnectionRecord: android.app.PendingIntent clientIntent>;

        if $r8 == null goto label3;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (com.android.server.am.ConnectionRecord) $r11;

        $r12 = $r10.<com.android.server.am.ConnectionRecord: android.app.PendingIntent clientIntent>;

        return $r12;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        i1 = i1 + -1;

        goto label1;

     label5:
        return null;
    }

    void serviceTimeout(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, $r20, $r23;
        com.android.server.am.ActivityManagerService r3, $r7, $r12, $r13, $r15, $r17;
        long l0, l1, $l4, $l5, $l7, $l10, $l12;
        com.android.server.am.ServiceRecord r4, r5;
        int i2, $i3, $i6, $i13;
        java.lang.Throwable r6, $r28;
        android.util.ArraySet $r8, $r10, $r25;
        android.app.IApplicationThread $r9;
        boolean $z0, $z1, $z3;
        com.android.server.am.ActivityManagerService$MainHandler $r11, $r14;
        java.lang.StringBuilder $r16, $r19, $r21, $r22, $r24, $r27;
        java.util.ArrayList $r18;
        java.lang.Object $r26;
        byte $b9, $b11;
        android.os.Message r29;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = null;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i3 = virtualinvoke $r8.<android.util.ArraySet: int size()>();

        if $i3 == 0 goto label02;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 != null goto label04;

     label02:
        exitmonitor r3;

     label03:
        return;

     label04:
        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z0 == 0 goto label05;

        $i13 = 20000;

        goto label06;

     label05:
        $i13 = 200000;

     label06:
        $l5 = (long) $i13;

        l0 = $l4 - $l5;

        r4 = null;

        l1 = 0L;

        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i6 = virtualinvoke $r10.<android.util.ArraySet: int size()>();

        i2 = $i6 - 1;

     label07:
        if i2 < 0 goto label10;

        $r25 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r26 = virtualinvoke $r25.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r5 = (com.android.server.am.ServiceRecord) $r26;

        $l12 = r5.<com.android.server.am.ServiceRecord: long executingStart>;

        $b11 = $l12 cmp l0;

        if $b11 >= 0 goto label08;

        r4 = r5;

        goto label10;

     label08:
        $l10 = r5.<com.android.server.am.ServiceRecord: long executingStart>;

        $b9 = $l10 cmp l1;

        if $b9 <= 0 goto label09;

        l1 = r5.<com.android.server.am.ServiceRecord: long executingStart>;

     label09:
        i2 = i2 + -1;

        goto label07;

     label10:
        if r4 == null goto label11;

        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = $r17.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $z3 = virtualinvoke $r18.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label11;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout executing service: ");

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r20);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing service ");

        $r23 = r4.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        r2 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label11:
        $r12 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r29 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(12);

        r29.<android.os.Message: java.lang.Object obj> = r1;

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z1 == 0 goto label12;

        $l7 = l1 + 20000L;

        goto label13;

     label12:
        $l7 = l1 + 200000L;

     label13:
        virtualinvoke $r14.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageAtTime(android.os.Message,long)>(r29, $l7);

     label14:
        exitmonitor r3;

     label15:
        goto label18;

     label16:
        $r28 := @caughtexception;

        r6 = $r28;

        exitmonitor r3;

     label17:
        throw r6;

     label18:
        if r2 == null goto label19;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, null, null, 0, r2);

     label19:
        return;

        catch java.lang.Throwable from label01 to label03 with label16;
        catch java.lang.Throwable from label04 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        long l0, $l2;
        android.os.Message r2;
        android.util.ArraySet $r3;
        int $i1;
        android.app.IApplicationThread $r4;
        com.android.server.am.ActivityManagerService $r5, $r7;
        com.android.server.am.ActivityManagerService$MainHandler $r6, $r8;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i1 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if $i1 == 0 goto label1;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 != null goto label2;

     label1:
        return;

     label2:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(12);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z0 == 0 goto label3;

        $l2 = l0 + 20000L;

        goto label4;

     label3:
        $l2 = l0 + 200000L;

     label4:
        virtualinvoke $r8.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageAtTime(android.os.Message,long)>(r2, $l2);

        return;
    }

    void dumpServicesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        java.io.FileDescriptor r1, $r83;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i3, i4, i6, i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, i26, i27, i28, i29, i30, i31, i32, i33;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z20, z21, z22, z23, z24, z25;
        java.lang.String r4, $r30, $r42, $r48, $r53, $r61, $r63, $r67, $r76, $r97, $r99, $r104, $r106, $r113;
        com.android.server.am.ActivityManagerService$ItemMatcher r5, $r14;
        int[] r6, r7;
        com.android.server.am.ActiveServices$ServiceMap r8;
        long l5, $l21;
        com.android.server.am.ServiceRecord r9, $r23, $r29, r119, r120, r122, r123, r124;
        java.util.ArrayList r10, $r16, $r17, $r19, $r34, $r35, $r39, $r43, $r44, $r49, $r51, $r57, $r58, $r59, r125;
        com.android.server.am.ConnectionRecord r11, r126;
        java.lang.Throwable r12, $r111;
        com.android.server.am.ProcessRecord r13, $r27, $r32, $r80, $r88, $r90, $r91;
        com.android.server.am.ActivityManagerService $r15;
        android.util.ArrayMap $r18, $r21, $r50, $r74, $r75, $r78, $r79, $r82, $r84;
        java.lang.Object $r20, $r22, $r38, $r40, $r45, $r55, $r71, $r73, $r85, $r87;
        android.content.ComponentName $r24, $r37, $r41, $r46, $r54, $r72, $r81;
        com.android.server.am.AppBindRecord $r25, $r26, $r28, $r33, $r86, $r105;
        android.content.pm.ApplicationInfo $r31, $r36, $r47, $r52, $r60, $r77, $r98;
        java.lang.StringBuilder $r56, $r62, $r64, $r65, $r66, $r68, $r69, $r70, $r95, $r96, $r107, $r108, $r109, $r114, $r115;
        android.app.IApplicationThread $r89, $r94;
        com.android.internal.os.TransferPipe $r92, r116;
        android.os.ParcelFileDescriptor $r93;
        java.lang.Exception $r100, r121;
        com.android.server.am.IntentBindRecord $r101;
        android.content.Intent$FilterComparison $r102;
        android.content.Intent $r103;
        java.io.IOException $r110, r117;
        android.os.RemoteException $r112;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        z2 = 0;

        z3 = 0;

        $r14 = new com.android.server.am.ActivityManagerService$ItemMatcher;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>();

        r5 = $r14;

        virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>(r3, i0);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER SERVICES (dumpsys activity services)");

     label01:
        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r6 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        r7 = r6;

        i1 = lengthof r7;

        i2 = 0;

     label02:
        if i2 >= i1 goto label42;

        i3 = r7[i2];

        r8 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i3);

        z4 = 0;

        $r50 = r8.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $i18 = virtualinvoke $r50.<android.util.ArrayMap: int size()>();

        if $i18 <= 0 goto label27;

        l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        z2 = 0;

        i6 = 0;

     label03:
        $r75 = r8.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $i19 = virtualinvoke $r75.<android.util.ArrayMap: int size()>();

        if i6 >= $i19 goto label26;

        $r74 = r8.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r73 = virtualinvoke $r74.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r9 = (com.android.server.am.ServiceRecord) $r73;

        $r81 = r9.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z18 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r9, $r81);

        if $z18 != 0 goto label04;

        goto label25;

     label04:
        if r4 == null goto label05;

        $r98 = r9.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r99 = $r98.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z19 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r99);

        if $z19 != 0 goto label05;

        goto label25;

     label05:
        if z4 != 0 goto label07;

        if z3 == 0 goto label06;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label06:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r95 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" active services:");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r97);

        z4 = 1;

     label07:
        z3 = 1;

        if z2 == 0 goto label08;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r9);

        if z0 == 0 goto label09;

        virtualinvoke r9.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        z2 = 1;

        goto label15;

     label09:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    app=");

        $r80 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r80);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    created=");

        $l21 = r9.<com.android.server.am.ServiceRecord: long createTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l21, l5, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" started=");

        $z17 = r9.<com.android.server.am.ServiceRecord: boolean startRequested>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z17);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" connections=");

        $r79 = r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i20 = virtualinvoke $r79.<android.util.ArrayMap: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i20);

        $r78 = r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i24 = virtualinvoke $r78.<android.util.ArrayMap: int size()>();

        if $i24 <= 0 goto label15;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    Connections:");

        i7 = 0;

     label10:
        $r82 = r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i22 = virtualinvoke $r82.<android.util.ArrayMap: int size()>();

        if i7 >= $i22 goto label15;

        $r84 = r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r85 = virtualinvoke $r84.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r10 = (java.util.ArrayList) $r85;

        i8 = 0;

     label11:
        $i23 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        if i8 >= $i23 goto label14;

        $r87 = virtualinvoke r10.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r11 = (com.android.server.am.ConnectionRecord) $r87;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r86 = r11.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r101 = $r86.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r102 = $r101.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r103 = virtualinvoke $r102.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r104 = virtualinvoke $r103.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(0, 0, 0, 0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r104);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> ");

        $r105 = r11.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r13 = $r105.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if r13 == null goto label12;

        $r106 = virtualinvoke r13.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        goto label13;

     label12:
        $r106 = "null";

     label13:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r106);

        i8 = i8 + 1;

        goto label11;

     label14:
        i7 = i7 + 1;

        goto label10;

     label15:
        if z1 == 0 goto label25;

        $r88 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r88 == null goto label25;

        $r90 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r89 = $r90.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r89 == null goto label25;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    Client:");

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label16:
        $r92 = new com.android.internal.os.TransferPipe;

        specialinvoke $r92.<com.android.internal.os.TransferPipe: void <init>()>();

        r116 = $r92;

     label17:
        $r91 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r94 = $r91.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r93 = virtualinvoke r116.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r83 = virtualinvoke $r93.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke $r94.<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>($r83, r9, r3);

        virtualinvoke r116.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>("      ");

        virtualinvoke r116.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r1, 2000L);

     label18:
        virtualinvoke r116.<com.android.internal.os.TransferPipe: void kill()>();

        goto label21;

     label19:
        $r111 := @caughtexception;

        r12 = $r111;

     label20:
        virtualinvoke r116.<com.android.internal.os.TransferPipe: void kill()>();

        throw r12;

     label21:
        goto label24;

     label22:
        $r110 := @caughtexception;

        r117 = $r110;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      Failure while dumping the service: ");

        $r114 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r117);

        $r113 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r113);

        goto label24;

     label23:
        $r112 := @caughtexception;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Got a RemoteException while dumping the service");

     label24:
        z2 = 1;

     label25:
        i6 = i6 + 1;

        goto label03;

     label26:
        z2 = z2 | z4;

     label27:
        z20 = 0;

        i26 = 0;

        $r51 = r8.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        i4 = virtualinvoke $r51.<java.util.ArrayList: int size()>();

     label28:
        if i26 >= i4 goto label34;

        $r59 = r8.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $r71 = virtualinvoke $r59.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r119 = (com.android.server.am.ServiceRecord) $r71;

        $r72 = r119.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z15 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r119, $r72);

        if $z15 != 0 goto label29;

        goto label33;

     label29:
        if r4 == null goto label30;

        $r77 = r119.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r76 = $r77.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z16 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r76);

        if $z16 != 0 goto label30;

        goto label33;

     label30:
        if z20 != 0 goto label32;

        if z3 == 0 goto label31;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label31:
        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r66 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delayed start services:");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        z20 = 1;

     label32:
        z3 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Delayed start ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r119);

     label33:
        i26 = i26 + 1;

        goto label28;

     label34:
        z21 = 0;

        i27 = 0;

        $r57 = r8.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        i28 = virtualinvoke $r57.<java.util.ArrayList: int size()>();

     label35:
        if i27 >= i28 goto label41;

        $r58 = r8.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $r55 = virtualinvoke $r58.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r120 = (com.android.server.am.ServiceRecord) $r55;

        $r54 = r120.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z13 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r120, $r54);

        if $z13 != 0 goto label36;

        goto label40;

     label36:
        if r4 == null goto label37;

        $r60 = r120.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r61 = $r60.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z14 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r61);

        if $z14 != 0 goto label37;

        goto label40;

     label37:
        if z21 != 0 goto label39;

        if z3 == 0 goto label38;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label38:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r62 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starting in background:");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r63);

        z21 = 1;

     label39:
        z3 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Starting bg ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r120);

     label40:
        i27 = i27 + 1;

        goto label35;

     label41:
        i2 = i2 + 1;

        goto label02;

     label42:
        goto label44;

     label43:
        $r100 := @caughtexception;

        r121 = $r100;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception in dumpServicesLocked", r121);

     label44:
        $r17 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i11 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i11 <= 0 goto label52;

        z22 = 0;

        i29 = 0;

     label45:
        $r49 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i17 = virtualinvoke $r49.<java.util.ArrayList: int size()>();

        if i29 >= $i17 goto label51;

        $r44 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r45 = virtualinvoke $r44.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r122 = (com.android.server.am.ServiceRecord) $r45;

        $r46 = r122.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z11 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r122, $r46);

        if $z11 != 0 goto label46;

        goto label50;

     label46:
        if r4 == null goto label47;

        $r52 = r122.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r53 = $r52.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z12 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        if $z12 != 0 goto label47;

        goto label50;

     label47:
        z3 = 1;

        if z22 != 0 goto label49;

        if z2 == 0 goto label48;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label48:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Pending services:");

        z22 = 1;

     label49:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Pending ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r122);

        virtualinvoke r122.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label50:
        i29 = i29 + 1;

        goto label45;

     label51:
        z2 = 1;

     label52:
        $r16 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i10 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i10 <= 0 goto label60;

        z23 = 0;

        i30 = 0;

     label53:
        $r43 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i16 = virtualinvoke $r43.<java.util.ArrayList: int size()>();

        if i30 >= $i16 goto label59;

        $r39 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r123 = (com.android.server.am.ServiceRecord) $r40;

        $r41 = r123.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z8 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r123, $r41);

        if $z8 != 0 goto label54;

        goto label58;

     label54:
        if r4 == null goto label55;

        $r47 = r123.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r48 = $r47.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z10 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r48);

        if $z10 != 0 goto label55;

        goto label58;

     label55:
        z3 = 1;

        if z23 != 0 goto label57;

        if z2 == 0 goto label56;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label56:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Restarting services:");

        z23 = 1;

     label57:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Restarting ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r123);

        virtualinvoke r123.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label58:
        i30 = i30 + 1;

        goto label53;

     label59:
        z2 = 1;

     label60:
        $r19 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if $i13 <= 0 goto label68;

        z24 = 0;

        i31 = 0;

     label61:
        $r35 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $i15 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if i31 >= $i15 goto label67;

        $r34 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $r38 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i31);

        r124 = (com.android.server.am.ServiceRecord) $r38;

        $r37 = r124.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z7 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r124, $r37);

        if $z7 != 0 goto label62;

        goto label66;

     label62:
        if r4 == null goto label63;

        $r36 = r124.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r42 = $r36.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z9 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z9 != 0 goto label63;

        goto label66;

     label63:
        z3 = 1;

        if z24 != 0 goto label65;

        if z2 == 0 goto label64;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label64:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Destroying services:");

        z24 = 1;

     label65:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Destroy ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r124);

        virtualinvoke r124.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label66:
        i31 = i31 + 1;

        goto label61;

     label67:
        z2 = 1;

     label68:
        if z0 == 0 goto label77;

        z25 = 0;

        i32 = 0;

     label69:
        $r18 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $i12 = virtualinvoke $r18.<android.util.ArrayMap: int size()>();

        if i32 >= $i12 goto label77;

        $r21 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i32);

        r125 = (java.util.ArrayList) $r22;

        i33 = 0;

     label70:
        $i14 = virtualinvoke r125.<java.util.ArrayList: int size()>();

        if i33 >= $i14 goto label76;

        $r20 = virtualinvoke r125.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        r126 = (com.android.server.am.ConnectionRecord) $r20;

        $r25 = r126.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r29 = $r25.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r26 = r126.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r23 = $r26.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r24 = $r23.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z5 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>($r29, $r24);

        if $z5 != 0 goto label71;

        goto label75;

     label71:
        if r4 == null goto label72;

        $r28 = r126.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r27 = $r28.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r27 == null goto label75;

        $r33 = r126.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r32 = $r33.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r31 = $r32.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r30 = $r31.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z6 != 0 goto label72;

        goto label75;

     label72:
        z3 = 1;

        if z25 != 0 goto label74;

        if z2 == 0 goto label73;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label73:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Connection bindings to services:");

        z25 = 1;

     label74:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r126);

        virtualinvoke r126.<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label75:
        i33 = i33 + 1;

        goto label70;

     label76:
        i32 = i32 + 1;

        goto label69;

     label77:
        if z3 != 0 goto label78;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label78:
        return;

        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.io.IOException from label16 to label21 with label22;
        catch android.os.RemoteException from label16 to label21 with label23;
        catch java.lang.Exception from label01 to label42 with label43;
    }

    protected boolean dumpService(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r17, $r25;
        java.lang.String[] r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15;
        boolean z0, $z1, $z4, $z5, z8;
        java.util.ArrayList r5, $r13;
        com.android.server.am.ActivityManagerService r6, $r15, $r16;
        int[] r7, r8, r34;
        com.android.server.am.ActiveServices$ServiceMap r9, r35;
        android.util.ArrayMap r10, r36;
        com.android.server.am.ServiceRecord r11, r12, $r20;
        java.lang.Throwable r14, $r30;
        java.lang.Object $r18, $r19, $r23, $r27, $r28;
        android.util.SparseArray $r21, $r29;
        android.content.ComponentName $r22, $r24, $r26, r32;
        java.lang.RuntimeException $r31;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r5 = $r13;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r6 = $r16;

        entermonitor $r16;

     label01:
        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r7 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        $r17 = "all";

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label07;

        r8 = r7;

        i1 = lengthof r8;

        i2 = 0;

     label02:
        if i2 >= i1 goto label06;

        i3 = r8[i2];

        $r29 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r28 = virtualinvoke $r29.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.am.ActiveServices$ServiceMap) $r28;

        if r9 != null goto label03;

        goto label05;

     label03:
        r10 = r9.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        i4 = 0;

     label04:
        $i10 = virtualinvoke r10.<android.util.ArrayMap: int size()>();

        if i4 >= $i10 goto label05;

        $r27 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r11 = (com.android.server.am.ServiceRecord) $r27;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        i4 = i4 + 1;

        goto label04;

     label05:
        i2 = i2 + 1;

        goto label02;

     label06:
        goto label21;

     label07:
        if r3 == null goto label08;

        $r26 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r3);

        goto label09;

     label08:
        $r26 = null;

     label09:
        r32 = $r26;

        i11 = 0;

        if r32 != null goto label13;

     label10:
        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 16);

        r3 = null;

        r32 = null;

     label11:
        goto label13;

     label12:
        $r31 := @caughtexception;

     label13:
        r34 = r7;

        i12 = lengthof r34;

        i13 = 0;

     label14:
        if i13 >= i12 goto label21;

        i14 = r34[i13];

        $r21 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r19 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object get(int)>(i14);

        r35 = (com.android.server.am.ActiveServices$ServiceMap) $r19;

        if r35 != null goto label15;

        goto label20;

     label15:
        r36 = r35.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        i5 = 0;

     label16:
        $i8 = virtualinvoke r36.<android.util.ArrayMap: int size()>();

        if i5 >= $i8 goto label20;

        $r23 = virtualinvoke r36.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r12 = (com.android.server.am.ServiceRecord) $r23;

        if r32 == null goto label17;

        $r24 = r12.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z5 = virtualinvoke $r24.<android.content.ComponentName: boolean equals(java.lang.Object)>(r32);

        if $z5 == 0 goto label19;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        goto label19;

     label17:
        if r3 == null goto label18;

        $r22 = r12.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r25 = virtualinvoke $r22.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z4 = virtualinvoke $r25.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z4 == 0 goto label19;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        goto label19;

     label18:
        $i9 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r12);

        if $i9 != i11 goto label19;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label19:
        i5 = i5 + 1;

        goto label16;

     label20:
        i13 = i13 + 1;

        goto label14;

     label21:
        exitmonitor r6;

     label22:
        goto label25;

     label23:
        $r30 := @caughtexception;

        r14 = $r30;

        exitmonitor r6;

     label24:
        throw r14;

     label25:
        $i7 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label26;

        return 0;

     label26:
        z8 = 0;

        i15 = 0;

     label27:
        $i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i15 >= $i6 goto label29;

        if z8 == 0 goto label28;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label28:
        z8 = 1;

        $r18 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        $r20 = (com.android.server.am.ServiceRecord) $r18;

        specialinvoke r0.<com.android.server.am.ActiveServices: void dumpService(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ServiceRecord,java.lang.String[],boolean)>("", r1, r2, $r20, r4, z0);

        i15 = i15 + 1;

        goto label27;

     label29:
        return 1;

        catch java.lang.RuntimeException from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private void dumpService(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ServiceRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, r6, $r14, $r16, $r29, $r37, $r42;
        java.io.FileDescriptor r2, $r25;
        java.io.PrintWriter r3;
        com.android.server.am.ServiceRecord r4;
        java.lang.String[] r5;
        boolean z0;
        com.android.server.am.ActivityManagerService r7, $r13;
        java.lang.Throwable r8, r9, $r39, $r40;
        java.lang.StringBuilder $r10, $r11, $r12, $r24, $r26, $r27, $r31, $r32, $r33, $r34, $r35, $r36, $r41;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r15, $r17, $r19, $r20, $r30;
        android.app.IApplicationThread $r18, $r23;
        com.android.internal.os.TransferPipe $r21, r43;
        android.os.ParcelFileDescriptor $r22;
        java.io.IOException $r28, r44;
        android.os.RemoteException $r38;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: com.android.server.am.ServiceRecord;

        r5 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r7 = $r13;

        entermonitor $r13;

     label01:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("SERVICE ");

        $r14 = r4.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r4);

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r15 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r15 == null goto label02;

        $r30 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r30.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i1);

        goto label03;

     label02:
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label03:
        if z0 == 0 goto label04;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r3, r6);

     label04:
        exitmonitor r7;

     label05:
        goto label08;

     label06:
        $r40 := @caughtexception;

        r8 = $r40;

        exitmonitor r7;

     label07:
        throw r8;

     label08:
        $r17 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r17 == null goto label17;

        $r19 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r18 = $r19.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label17;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("  Client:");

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

     label09:
        $r21 = new com.android.internal.os.TransferPipe;

        specialinvoke $r21.<com.android.internal.os.TransferPipe: void <init>()>();

        r43 = $r21;

     label10:
        $r20 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = virtualinvoke r43.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r25 = virtualinvoke $r22.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke $r23.<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>($r25, r4, r5);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r43.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>($r29);

        virtualinvoke r43.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r2);

     label11:
        virtualinvoke r43.<com.android.internal.os.TransferPipe: void kill()>();

        goto label14;

     label12:
        $r39 := @caughtexception;

        r9 = $r39;

     label13:
        virtualinvoke r43.<com.android.internal.os.TransferPipe: void kill()>();

        throw r9;

     label14:
        goto label17;

     label15:
        $r28 := @caughtexception;

        r44 = $r28;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Failure while dumping the service: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        goto label17;

     label16:
        $r38 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Got a RemoteException while dumping the service");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r42);

     label17:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.io.IOException from label09 to label14 with label15;
        catch android.os.RemoteException from label09 to label14 with label16;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActiveServices: int BG_START_TIMEOUT> = 15000;

        <com.android.server.am.ActiveServices: int MAX_SERVICE_INACTIVITY> = 1800000;

        <com.android.server.am.ActiveServices: int SERVICE_MIN_RESTART_TIME_BETWEEN> = 10000;

        <com.android.server.am.ActiveServices: int SERVICE_RESTART_DURATION_FACTOR> = 4;

        <com.android.server.am.ActiveServices: int SERVICE_RESET_RUN_DURATION> = 60000;

        <com.android.server.am.ActiveServices: int SERVICE_RESTART_DURATION> = 1000;

        <com.android.server.am.ActiveServices: int SERVICE_BACKGROUND_TIMEOUT> = 200000;

        <com.android.server.am.ActiveServices: int SERVICE_TIMEOUT> = 20000;

        <com.android.server.am.ActiveServices: java.lang.String TAG_MU> = "ActivityManagerServiceMU";

        <com.android.server.am.ActiveServices: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActiveServices: boolean LOG_SERVICE_START_STOP> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_MU> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_DELAYED_STARTS> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_DELAYED_SERVICE> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_SERVICE_EXECUTING> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_SERVICE> = 0;

        return;
    }
}
