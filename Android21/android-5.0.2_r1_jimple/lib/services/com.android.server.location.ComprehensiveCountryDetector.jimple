public class com.android.server.location.ComprehensiveCountryDetector extends com.android.server.location.CountryDetectorBase
{
    private static final java.lang.String TAG;
    static final boolean DEBUG;
    private static final int MAX_LENGTH_DEBUG_LOGS;
    private static final long LOCATION_REFRESH_INTERVAL;
    protected com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector;
    protected java.util.Timer mLocationRefreshTimer;
    private android.location.Country mCountry;
    private final android.telephony.TelephonyManager mTelephonyManager;
    private android.location.Country mCountryFromLocation;
    private boolean mStopped;
    private android.telephony.PhoneStateListener mPhoneStateListener;
    private final java.util.concurrent.ConcurrentLinkedQueue mDebugLogs;
    private android.location.Country mLastCountryAddedToLogs;
    private final java.lang.Object mObject;
    private long mStartTime;
    private long mStopTime;
    private long mTotalTime;
    private int mCountServiceStateChanges;
    private int mTotalCountServiceStateChanges;
    private android.location.CountryListener mLocationBasedCountryDetectionListener;

    public void <init>(android.content.Context)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.content.Context r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;
        java.lang.Object $r3, $r5;
        com.android.server.location.ComprehensiveCountryDetector$1 $r4;
        android.telephony.TelephonyManager $r6;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.location.CountryDetectorBase: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.location.ComprehensiveCountryDetector: boolean mStopped> = 0;

        $r2 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.lang.Object mObject> = $r3;

        $r4 = new com.android.server.location.ComprehensiveCountryDetector$1;

        specialinvoke $r4.<com.android.server.location.ComprehensiveCountryDetector$1: void <init>(com.android.server.location.ComprehensiveCountryDetector)>(r0);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mLocationBasedCountryDetectionListener> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r5;

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager> = $r6;

        return;
    }

    public android.location.Country detectCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0, $z1;
        android.location.Country $r1;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = r0.<com.android.server.location.ComprehensiveCountryDetector: boolean mStopped>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry(boolean,boolean)>(0, $z1);

        return $r1;
    }

    public void stop()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("CountryDetector", "Stop the detector.");

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void cancelLocationRefresh()>();

        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener> = null;

        r0.<com.android.server.location.ComprehensiveCountryDetector: boolean mStopped> = 1;

        return;
    }

    private android.location.Country getCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getNetworkBasedCountry()>();

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLastKnownLocationBasedCountry()>();

     label1:
        if r1 != null goto label2;

        r1 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getSimBasedCountry()>();

     label2:
        if r1 != null goto label3;

        r1 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLocaleCountry()>();

     label3:
        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void addToLogs(android.location.Country)>(r1);

        return r1;
    }

    private void addToLogs(android.location.Country)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, $r5, $r10;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        java.util.concurrent.ConcurrentLinkedQueue $r6, $r7, $r8;
        int $i0;
        boolean $z1;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.lang.Object mObject>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mLastCountryAddedToLogs>;

        if $r5 == null goto label4;

        $r10 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mLastCountryAddedToLogs>;

        $z1 = virtualinvoke $r10.<android.location.Country: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        exitmonitor r2;

     label3:
        return;

     label4:
        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mLastCountryAddedToLogs> = r1;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        if $i0 < 20 goto label9;

        $r8 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        virtualinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

     label9:
        $r7 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        virtualinvoke $r7.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r1);

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private boolean isNetworkCountryCodeAvailable()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        int i0;
        android.telephony.TelephonyManager $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getPhoneType()>();

        if i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected android.location.Country getNetworkBasedCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0, $z1;
        android.telephony.TelephonyManager $r1;
        android.location.Country $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isNetworkCountryCodeAvailable()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        r3 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label1;

        $r2 = new android.location.Country;

        specialinvoke $r2.<android.location.Country: void <init>(java.lang.String,int)>(r3, 0);

        return $r2;

     label1:
        return null;
    }

    protected android.location.Country getLastKnownLocationBasedCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country $r1;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountryFromLocation>;

        return $r1;
    }

    protected android.location.Country getSimBasedCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.telephony.TelephonyManager $r1;
        boolean $z0;
        android.location.Country $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        r3 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        $r2 = new android.location.Country;

        specialinvoke $r2.<android.location.Country: void <init>(java.lang.String,int)>(r3, 2);

        return $r2;

     label1:
        return null;
    }

    protected android.location.Country getLocaleCountry()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.util.Locale r1;
        android.location.Country $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        if r1 == null goto label1;

        $r2 = new android.location.Country;

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        specialinvoke $r2.<android.location.Country: void <init>(java.lang.String,int)>($r3, 3);

        return $r2;

     label1:
        return null;
    }

    private android.location.Country detectCountry(boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean z0, z1;
        android.location.Country r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getCountry()>();

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry>;

        if $r2 == null goto label1;

        $r3 = new android.location.Country;

        $r5 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry>;

        specialinvoke $r3.<android.location.Country: void <init>(android.location.Country)>($r5);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry>;

     label2:
        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetectionAsync(android.location.Country,android.location.Country,boolean,boolean)>($r3, r1, z0, z1);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry> = r1;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountry>;

        return $r4;
    }

    protected void runAfterDetectionAsync(android.location.Country, android.location.Country, boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2;
        boolean z0, z1;
        com.android.server.location.ComprehensiveCountryDetector$2 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        r2 := @parameter1: android.location.Country;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.os.Handler mHandler>;

        $r3 = new com.android.server.location.ComprehensiveCountryDetector$2;

        specialinvoke $r3.<com.android.server.location.ComprehensiveCountryDetector$2: void <init>(com.android.server.location.ComprehensiveCountryDetector,android.location.Country,android.location.Country,boolean,boolean)>(r0, r1, r2, z0, z1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void setCountryListener(android.location.CountryListener)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.CountryListener r1, r2, $r3;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.CountryListener;

        r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener> = r1;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        if $r3 != null goto label1;

        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void cancelLocationRefresh()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime> = $l1;

        $l3 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mTotalTime>;

        $l2 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime>;

        $l4 = $l3 + $l2;

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mTotalTime> = $l4;

        goto label2;

     label1:
        if r2 != null goto label2;

        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry(boolean,boolean)>(0, 1);

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mStartTime> = $l0;

        r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime> = 0L;

        r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges> = 0;

     label2:
        return;
    }

    void runAfterDetection(android.location.Country, android.location.Country, boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2;
        boolean z0, z1, $z2, $z3;
        int $i0, $i1;
        android.location.CountryListener $r3, $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        r2 := @parameter1: android.location.Country;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void notifyIfCountryChanged(android.location.Country,android.location.Country)>(r1, r2);

     label1:
        if z1 == 0 goto label3;

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<android.location.Country: int getSource()>();

        if $i1 <= 1 goto label3;

     label2:
        $z2 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isAirplaneModeOff()>();

        if $z2 == 0 goto label3;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        if $r3 == null goto label3;

        $z3 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isGeoCoderImplemented()>();

        if $z3 == 0 goto label3;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mLocationBasedCountryDetectionListener>;

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)>($r4);

     label3:
        if r2 == null goto label4;

        $i0 = virtualinvoke r2.<android.location.Country: int getSource()>();

        if $i0 < 1 goto label5;

     label4:
        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void scheduleLocationRefresh()>();

        goto label6;

     label5:
        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void cancelLocationRefresh()>();

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

     label6:
        return;
    }

    private synchronized void startLocationBasedDetector(android.location.CountryListener)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.CountryListener r1;
        com.android.server.location.CountryDetectorBase $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.CountryListener;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase createLocationBasedCountryDetector()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector> = $r3;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        virtualinvoke $r4.<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>(r1);

        $r5 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        virtualinvoke $r5.<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>();

        return;
    }

    private synchronized void stopLocationBasedDetector()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        com.android.server.location.CountryDetectorBase $r1, $r2;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector>;

        virtualinvoke $r2.<com.android.server.location.CountryDetectorBase: void stop()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase mLocationBasedCountryDetector> = null;

     label1:
        return;
    }

    protected com.android.server.location.CountryDetectorBase createLocationBasedCountryDetector()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        com.android.server.location.LocationBasedCountryDetector $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = new com.android.server.location.LocationBasedCountryDetector;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.content.Context mContext>;

        specialinvoke $r1.<com.android.server.location.LocationBasedCountryDetector: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    protected boolean isAirplaneModeOff()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "airplane_mode_on", 0);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void notifyIfCountryChanged(android.location.Country, android.location.Country)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1, r2;
        android.location.CountryListener $r3;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter0: android.location.Country;

        r2 := @parameter1: android.location.Country;

        if r2 == null goto label2;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.CountryListener mListener>;

        if $r3 == null goto label2;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.location.Country: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void notifyListener(android.location.Country)>(r2);

     label2:
        return;
    }

    private synchronized void scheduleLocationRefresh()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.util.Timer $r1, $r2, $r4;
        com.android.server.location.ComprehensiveCountryDetector$3 $r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new java.util.Timer;

        specialinvoke $r2.<java.util.Timer: void <init>()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer> = $r2;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

        $r3 = new com.android.server.location.ComprehensiveCountryDetector$3;

        specialinvoke $r3.<com.android.server.location.ComprehensiveCountryDetector$3: void <init>(com.android.server.location.ComprehensiveCountryDetector)>(r0);

        virtualinvoke $r4.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r3, 86400000L);

        return;
    }

    private synchronized void cancelLocationRefresh()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        java.util.Timer $r1, $r2;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer>;

        virtualinvoke $r2.<java.util.Timer: void cancel()>();

        r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.Timer mLocationRefreshTimer> = null;

     label1:
        return;
    }

    protected synchronized void addPhoneStateListener()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.telephony.PhoneStateListener $r1, $r3;
        com.android.server.location.ComprehensiveCountryDetector$4 $r2;
        android.telephony.TelephonyManager $r4;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        if $r1 != null goto label1;

        $r2 = new com.android.server.location.ComprehensiveCountryDetector$4;

        specialinvoke $r2.<com.android.server.location.ComprehensiveCountryDetector$4: void <init>(com.android.server.location.ComprehensiveCountryDetector)>(r0);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener> = $r2;

        $r4 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r4.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r3, 1);

     label1:
        return;
    }

    protected synchronized void removePhoneStateListener()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.telephony.PhoneStateListener $r1, $r2;
        android.telephony.TelephonyManager $r3;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $r1 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.TelephonyManager mTelephonyManager>;

        $r2 = r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r3.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r2, 0);

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.telephony.PhoneStateListener mPhoneStateListener> = null;

     label1:
        return;
    }

    protected boolean isGeoCoderImplemented()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = staticinvoke <android.location.Geocoder: boolean isPresent()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        long l0, l1, $l2, $l4, $l5, $l6, $l9, $l10, $l11;
        java.lang.StringBuilder r1, $r4, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r16, $r17, $r19, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31, $r32, $r33, $r41, $r42, $r46, $r49, $r50, $r51, $r52;
        java.util.Iterator r2;
        android.location.Country r3;
        byte $b3;
        java.lang.String $r11, $r15, $r20, $r26, $r37, $r38, $r40, $r45, $r47;
        int $i7, $i8;
        java.util.concurrent.ConcurrentLinkedQueue $r34;
        boolean $z0;
        java.lang.Object $r43;

        r0 := @this: com.android.server.location.ComprehensiveCountryDetector;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = 0L;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ComprehensiveCountryDetector{");

        $l2 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $l11 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStartTime>;

        l1 = l0 - $l11;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeRunning=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r47 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastRunTimeLength=");

        $l6 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStopTime>;

        $l4 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mStartTime>;

        $l5 = $l6 - $l4;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalCountServiceStateChanges=");

        $i7 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mTotalCountServiceStateChanges>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currentCountServiceStateChanges=");

        $i8 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges>;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalTime=");

        $l9 = r0.<com.android.server.location.ComprehensiveCountryDetector: long mTotalTime>;

        $l10 = $l9 + l1;

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currentTime=");

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("countries=");

        $r34 = r0.<com.android.server.location.ComprehensiveCountryDetector: java.util.concurrent.ConcurrentLinkedQueue mDebugLogs>;

        r2 = virtualinvoke $r34.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r43 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.location.Country) $r43;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   ");

        $r40 = virtualinvoke r3.<android.location.Country: java.lang.String toString()>();

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r38 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;
    }

    static android.location.Country access$002(com.android.server.location.ComprehensiveCountryDetector, android.location.Country)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        android.location.Country r1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        r1 := @parameter1: android.location.Country;

        r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country mCountryFromLocation> = r1;

        return r1;
    }

    static android.location.Country access$100(com.android.server.location.ComprehensiveCountryDetector, boolean, boolean)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean z0, z1;
        android.location.Country $r1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry(boolean,boolean)>(z0, z1);

        return $r1;
    }

    static void access$200(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>();

        return;
    }

    static int access$308(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        $i0 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges>;

        $i1 = $i0 + 1;

        r0.<com.android.server.location.ComprehensiveCountryDetector: int mCountServiceStateChanges> = $i1;

        return $i0;
    }

    static int access$408(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        $i0 = r0.<com.android.server.location.ComprehensiveCountryDetector: int mTotalCountServiceStateChanges>;

        $i1 = $i0 + 1;

        r0.<com.android.server.location.ComprehensiveCountryDetector: int mTotalCountServiceStateChanges> = $i1;

        return $i0;
    }

    static boolean access$500(com.android.server.location.ComprehensiveCountryDetector)
    {
        com.android.server.location.ComprehensiveCountryDetector r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.ComprehensiveCountryDetector;

        $z0 = specialinvoke r0.<com.android.server.location.ComprehensiveCountryDetector: boolean isNetworkCountryCodeAvailable()>();

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.location.ComprehensiveCountryDetector: long LOCATION_REFRESH_INTERVAL> = 86400000L;

        <com.android.server.location.ComprehensiveCountryDetector: int MAX_LENGTH_DEBUG_LOGS> = 20;

        <com.android.server.location.ComprehensiveCountryDetector: boolean DEBUG> = 0;

        <com.android.server.location.ComprehensiveCountryDetector: java.lang.String TAG> = "CountryDetector";

        return;
    }
}
