class com.android.server.backup.BackupManagerService$PerformBackupTask extends java.lang.Object implements com.android.server.backup.BackupManagerService$BackupRestoreTask
{
    private static final java.lang.String TAG;
    com.android.internal.backup.IBackupTransport mTransport;
    java.util.ArrayList mQueue;
    java.util.ArrayList mOriginalQueue;
    java.io.File mStateDir;
    java.io.File mJournal;
    com.android.server.backup.BackupManagerService$BackupState mCurrentState;
    android.app.IBackupAgent mAgentBinder;
    android.content.pm.PackageInfo mCurrentPackage;
    java.io.File mSavedStateName;
    java.io.File mBackupDataName;
    java.io.File mNewStateName;
    android.os.ParcelFileDescriptor mSavedState;
    android.os.ParcelFileDescriptor mBackupData;
    android.os.ParcelFileDescriptor mNewState;
    int mStatus;
    boolean mFinished;
    final com.android.server.backup.BackupManagerService this$0;

    public void <init>(com.android.server.backup.BackupManagerService, com.android.internal.backup.IBackupTransport, java.lang.String, java.util.ArrayList, java.io.File)
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        com.android.server.backup.BackupManagerService r1;
        com.android.internal.backup.IBackupTransport r2;
        java.lang.String r3;
        java.util.ArrayList r4;
        java.io.File r5, $r6, $r7;
        com.android.server.backup.BackupManagerService$BackupState $r8;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService;

        r2 := @parameter1: com.android.internal.backup.IBackupTransport;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.io.File;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport> = r2;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue> = r4;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mJournal> = r5;

        $r6 = new java.io.File;

        $r7 = r1.<com.android.server.backup.BackupManagerService: java.io.File mBaseStateDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r3);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir> = $r6;

        $r8 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState INITIAL>;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService$BackupState mCurrentState> = $r8;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: boolean mFinished> = 0;

        virtualinvoke r1.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("STATE => INITIAL");

        return;
    }

    public void execute()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        com.android.server.backup.BackupManagerService$BackupState $r1;
        int[] $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r2 = <com.android.server.backup.BackupManagerService$6: int[] $SwitchMap$com$android$server$backup$BackupManagerService$BackupState>;

        $r1 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService$BackupState mCurrentState>;

        $i0 = virtualinvoke $r1.<com.android.server.backup.BackupManagerService$BackupState: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void beginBackup()>();

        goto label6;

     label2:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void invokeNextAgent()>();

        goto label6;

     label3:
        $z0 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: boolean mFinished>;

        if $z0 != 0 goto label4;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void finalizeBackup()>();

        goto label5;

     label4:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", "Duplicate finish");

     label5:
        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: boolean mFinished> = 1;

     label6:
        return;
    }

    void beginBackup()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.StringBuilder r1, $r6, $r15, $r17, $r19, $r20, $r25, $r26, $r29, $r41, $r44, $r45, $r46, $r48, $r52, $r54, $r59, $r61, $r69, $r71, $r73, $r75, $r76, $r82, $r83, $r85, $r87;
        java.util.Iterator r2;
        com.android.server.backup.BackupManagerService$BackupRequest r3;
        java.lang.Throwable r4, $r72;
        com.android.server.backup.BackupManagerService $r5, $r10, $r27, $r32, $r34, $r40, $r47, $r49, $r53, $r57, $r67, $r70, $r74, $r80, $r84, $r89;
        java.util.ArrayList $r8, $r12, $r14, $r16, $r18;
        boolean $z0, $z1;
        java.lang.String $r11, $r21, $r30, $r36, $r43, $r55, $r60, $r65, $r68, $r81, $r86, r92;
        java.lang.Object $r13, $r63;
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i14, $i16, $i18, $i21, $i22, $i24, $i25;
        java.io.File $r22, $r23, $r28, $r56, $r79, $r90, r91;
        com.android.internal.backup.IBackupTransport $r24, $r31, $r42, $r51;
        com.android.server.backup.BackupManagerService$BackupState $r33, $r66, $r77, $r88;
        com.android.server.backup.PackageManagerBackupAgent $r35, r93;
        android.app.IBackupAgent $r37;
        android.os.IBinder $r38;
        android.content.pm.PackageManager $r39;
        com.android.server.backup.BackupManagerService$BackupHandler $r50;
        long $l12;
        byte $b13;
        java.lang.Object[] $r58;
        java.lang.Exception $r78, r94;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r5.<com.android.server.backup.BackupManagerService: void clearBackupTrace()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>(256);

        r1 = $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("beginBackup: [");

        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r63 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.backup.BackupManagerService$BackupRequest) $r63;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r65 = r3.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        goto label01;

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r11);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r12 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        $z1 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PerformBackupTask", "Backup begun with an empty queue - nothing to do.");

        $r67 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r67.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("queue empty at begin");

        $r66 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r66);

        return;

     label03:
        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object clone()>();

        $r16 = (java.util.ArrayList) $r13;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue> = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning backup of ");

        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $i0 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targets");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PerformBackupTask", $r21);

        $r23 = new java.io.File;

        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, "@pm@");

        r91 = $r23;

     label04:
        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        r92 = interfaceinvoke $r24.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2821, r92);

        $i5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 != 0 goto label06;

        $l12 = virtualinvoke r91.<java.io.File: long length()>();

        $b13 = $l12 cmp 0L;

        if $b13 > 0 goto label06;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "Initializing (wiping) backup state and transport storage");

        $r47 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initializing transport ");

        $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r92);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r55);

        $r57 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r56 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r57.<com.android.server.backup.BackupManagerService: void resetBackupState(java.io.File)>($r56);

        $r51 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i14 = interfaceinvoke $r51.<com.android.internal.backup.IBackupTransport: int initializeDevice()>();

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = $i14;

        $r53 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transport.initializeDevice() == ");

        $i18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r60);

        $i16 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i16 != 0 goto label05;

        $r58 = newarray (java.lang.Object)[0];

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2827, $r58);

        goto label06;

     label05:
        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, "(initialize)");

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", "Transport error in initializeDevice()");

     label06:
        $i2 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i2 != 0 goto label07;

        $r35 = new com.android.server.backup.PackageManagerBackupAgent;

        $r34 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r39 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r34);

        specialinvoke $r35.<com.android.server.backup.PackageManagerBackupAgent: void <init>(android.content.pm.PackageManager)>($r39);

        r93 = $r35;

        $r38 = virtualinvoke r93.<com.android.server.backup.PackageManagerBackupAgent: android.os.IBinder onBind()>();

        $r37 = staticinvoke <android.app.IBackupAgent$Stub: android.app.IBackupAgent asInterface(android.os.IBinder)>($r38);

        $r42 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i9 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int invokeAgentForBackup(java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport)>("@pm@", $r37, $r42);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = $i9;

        $r40 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PMBA invoke: ");

        $i10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r43);

        $r49 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r50 = $r49.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r50.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(7);

     label07:
        $i3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i3 != -1001 goto label08;

        $r31 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $r36 = interfaceinvoke $r31.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2826, $r36);

     label08:
        $r27 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting prelim: ");

        $i6 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r30);

        $i7 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i7 == 0 goto label14;

        $r32 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r28 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r32.<com.android.server.backup.BackupManagerService: void resetBackupState(java.io.File)>($r28);

        $r33 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r33);

        goto label14;

     label09:
        $r78 := @caughtexception;

        r94 = $r78;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PerformBackupTask", "Error in backup thread", r94);

        $r74 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in backup thread: ");

        $r87 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r94);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r74.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r86);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = -1000;

     label10:
        $r84 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting prelim: ");

        $i24 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r84.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r81);

        $i25 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i25 == 0 goto label14;

        $r89 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r90 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r89.<com.android.server.backup.BackupManagerService: void resetBackupState(java.io.File)>($r90);

        $r88 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r88);

        goto label14;

     label11:
        $r72 := @caughtexception;

        r4 = $r72;

     label12:
        $r70 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting prelim: ");

        $i22 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r70.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r68);

        $i21 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i21 == 0 goto label13;

        $r80 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r79 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r80.<com.android.server.backup.BackupManagerService: void resetBackupState(java.io.File)>($r79);

        $r77 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r77);

     label13:
        throw r4;

     label14:
        return;

        catch java.lang.Exception from label04 to label08 with label09;
        catch java.lang.Throwable from label04 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    void invokeNextAgent()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        com.android.server.backup.BackupManagerService$BackupRequest r1;
        com.android.server.backup.BackupManagerService$BackupState r2, r5, $r59, $r69, $r82, r96, r98, r99;
        java.lang.SecurityException r3, $r83;
        java.lang.Throwable r4, $r79;
        java.lang.StringBuilder $r6, $r8, $r10, $r16, $r17, $r19, $r20, $r21, $r23, $r43, $r44, $r46, $r62, $r63, $r67, $r72;
        com.android.server.backup.BackupManagerService $r7, $r22, $r25, $r35, $r40, $r45, $r48, $r51, $r53, $r54, $r57, $r60, $r66, $r68, $r73, $r74, $r77, $r80, $r81, $r86, $r88, $r89, $r91, $r92, $r93;
        java.util.ArrayList $r9, $r12, $r13, $r14, $r55, $r65, $r75, $r85, $r95;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String $r11, $r18, $r24, $r26, $r30, $r34, $r49, $r50, $r52, $r58, $r64, $r71, $r76, $r87, $r94;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r15;
        android.content.pm.PackageInfo $r27, $r28, $r31, $r38, $r42;
        android.content.pm.PackageManager $r29;
        android.content.pm.ApplicationInfo $r32, $r33, $r39, $r41;
        android.os.WorkSource $r36;
        android.os.PowerManager$WakeLock $r37, $r47, $r61, $r70, $r78, $r90;
        com.android.internal.backup.IBackupTransport $r56;
        android.content.pm.PackageManager$NameNotFoundException $r84;
        android.app.IBackupAgent r97;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invoke q=");

        $r9 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r11);

        $r12 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z0 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "queue now empty");

        $r82 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r82);

        return;

     label01:
        $r13 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.backup.BackupManagerService$BackupRequest) $r15;

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starting agent for backup of ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", $r18);

        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launch agent for ");

        $r24 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r26);

     label02:
        $r25 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r29 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r25);

        $r30 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r27 = virtualinvoke $r29.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r30, 64);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage> = $r27;

        $r28 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r33 = $r28.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r34 = $r33.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r34 != null goto label09;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r64 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer supports backup; skipping");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", $r71);

        $r73 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r73.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("skipping - no agent, completion is noop");

        $r69 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r69);

     label03:
        $r68 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r70 = $r68.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r70.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i11 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i11 == 0 goto label07;

        r2 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = null;

        $i13 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i13 != -1003 goto label04;

        $r74 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r76 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r74, $r76);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r75 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z4 = virtualinvoke $r75.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label06;

        r2 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label06;

     label04:
        $i12 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i12 != -1004 goto label05;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label06;

     label05:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r2 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

     label06:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>(r2);

        goto label08;

     label07:
        $r77 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r77.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("expecting completion/timeout callback");

     label08:
        return;

     label09:
        $r31 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r32 = $r31.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r32.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 2097152;

        if $i2 == 0 goto label16;

        $r53 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r53.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("skipping - stopped");

        $r59 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r59);

     label10:
        $r60 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r61 = $r60.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r61.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i10 == 0 goto label14;

        r96 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = null;

        $i8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i8 != -1003 goto label11;

        $r66 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r58 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r66, $r58);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r65 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z3 = virtualinvoke $r65.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label13;

        r96 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label13;

     label11:
        $i9 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i9 != -1004 goto label12;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label13;

     label12:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r96 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

     label13:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>(r96);

        goto label15;

     label14:
        $r57 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r57.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("expecting completion/timeout callback");

     label15:
        return;

     label16:
        $r35 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r37 = $r35.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        $r36 = new android.os.WorkSource;

        $r38 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r39 = $r38.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r39.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke $r36.<android.os.WorkSource: void <init>(int)>($i3);

        virtualinvoke $r37.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>($r36);

        $r40 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r42 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r41 = $r42.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r97 = virtualinvoke $r40.<com.android.server.backup.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>($r41, 0);

        $r45 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("agent bound; a? = ");

        if r97 == null goto label17;

        $z1 = 1;

        goto label18;

     label17:
        $z1 = 0;

     label18:
        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r49 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r49);

        if r97 == null goto label19;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = r97;

        $r52 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r56 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i7 = virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int invokeAgentForBackup(java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport)>($r52, r97, $r56);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = $i7;

        goto label20;

     label19:
        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = -1003;

     label20:
        goto label22;

     label21:
        $r83 := @caughtexception;

        r3 = $r83;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("PerformBackupTask", "error in bind/backup", r3);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = -1003;

        $r81 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r81.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("agent SE");

     label22:
        $r48 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r47 = $r48.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r47.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i4 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i4 == 0 goto label26;

        r98 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = null;

        $i6 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i6 != -1003 goto label23;

        $r54 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r50 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r54, $r50);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r55 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z2 = virtualinvoke $r55.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label25;

        r98 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label25;

     label23:
        $i5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 != -1004 goto label24;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label25;

     label24:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r98 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

     label25:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>(r98);

        goto label40;

     label26:
        $r51 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r51.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("expecting completion/timeout callback");

        goto label40;

     label27:
        $r84 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", "Package does not exist; skipping");

        $r92 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r92.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("no such package");

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = -1004;

     label28:
        $r91 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r90 = $r91.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r90.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i19 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i19 == 0 goto label32;

        r99 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = null;

        $i18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i18 != -1003 goto label29;

        $r93 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r94 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r93, $r94);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r95 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z6 = virtualinvoke $r95.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 == 0 goto label31;

        r99 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label31;

     label29:
        $i17 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i17 != -1004 goto label30;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label31;

     label30:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r99 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

     label31:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>(r99);

        goto label40;

     label32:
        $r89 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r89.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("expecting completion/timeout callback");

        goto label40;

     label33:
        $r79 := @caughtexception;

        r4 = $r79;

     label34:
        $r80 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r78 = $r80.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r78.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i14 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i14 == 0 goto label38;

        r5 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder> = null;

        $i16 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i16 != -1003 goto label35;

        $r86 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r87 = r1.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r86, $r87);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r85 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z5 = virtualinvoke $r85.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 == 0 goto label37;

        r5 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label37;

     label35:
        $i15 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i15 != -1004 goto label36;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label37;

     label36:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r5 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

     label37:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>(r5);

        goto label39;

     label38:
        $r88 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r88.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("expecting completion/timeout callback");

     label39:
        throw r4;

     label40:
        return;

        catch java.lang.SecurityException from label16 to label20 with label21;
        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label27;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label27;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label22 with label27;
        catch java.lang.Throwable from label02 to label03 with label33;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.Throwable from label16 to label22 with label33;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    void finalizeBackup()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.Throwable r2, $r26;
        com.android.server.backup.BackupManagerService $r3, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r25;
        java.io.File $r4, $r18, $r20;
        long $l0, $l6;
        byte $b1;
        java.lang.Object $r7, r27;
        int $i2, $i5;
        android.os.PowerManager$WakeLock $r11;
        com.android.internal.backup.IBackupTransport $r16;
        boolean $z0;
        java.lang.StringBuilder $r19, $r21, $r23;
        android.os.RemoteException $r22;
        java.lang.String $r24;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r3.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("finishing");

        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mJournal>;

        if $r4 == null goto label01;

        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mJournal>;

        $z0 = virtualinvoke $r18.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label01;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove backup journal file ");

        $r20 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mJournal>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r24);

     label01:
        $r5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $l0 = $r5.<com.android.server.backup.BackupManagerService: long mCurrentToken>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label05;

        $i5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 != 0 goto label05;

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r14.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("success; recording token");

     label02:
        $r15 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r16 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $l6 = interfaceinvoke $r16.<com.android.internal.backup.IBackupTransport: long getCurrentRestoreSet()>();

        $r15.<com.android.server.backup.BackupManagerService: long mCurrentToken> = $l6;

        $r17 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r17.<com.android.server.backup.BackupManagerService: void writeRestoreTokens()>();

     label03:
        goto label05;

     label04:
        $r22 := @caughtexception;

        $r25 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r25.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("transport threw returning token");

     label05:
        $r6 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r7 = $r6.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r27 = $r7;

        entermonitor $r7;

     label06:
        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r8.<com.android.server.backup.BackupManagerService: boolean mBackupRunning> = 0;

        $i2 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i2 != -1001 goto label07;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void clearMetadata()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", "Server requires init; rerunning");

        $r13 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r13.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("init required; rerunning");

        $r12 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r12.<com.android.server.backup.BackupManagerService: void backupNow()>();

     label07:
        exitmonitor r27;

     label08:
        goto label11;

     label09:
        $r26 := @caughtexception;

        r2 = $r26;

        exitmonitor r27;

     label10:
        throw r2;

     label11:
        $r9 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r9.<com.android.server.backup.BackupManagerService: void clearBackupTrace()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "Backup pass finished.");

        $r10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r11 = $r10.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void release()>();

        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void clearMetadata()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.io.File r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r2 = new java.io.File;

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "@pm@");

        r1 = $r2;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    int invokeAgentForBackup(java.lang.String, android.app.IBackupAgent, com.android.internal.backup.IBackupTransport)
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.String r1, $r8, $r14, $r21, $r27, $r50, $r61, $r62, $r63;
        android.app.IBackupAgent r2;
        com.android.internal.backup.IBackupTransport r3;
        int i0;
        java.lang.Exception r4, $r53;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r11, $r12, $r17, $r19, $r22, $r23, $r25, $r28, $r47, $r48, $r51, $r52, $r55, $r57, $r58, $r59, $r60;
        com.android.server.backup.BackupManagerService $r10, $r18, $r30, $r36, $r38, $r40, $r41, $r42, $r56;
        java.io.File $r13, $r15, $r16, $r20, $r24, $r26, $r29, $r32, $r34, $r37, $r46;
        boolean $z0, $z1;
        android.os.ParcelFileDescriptor $r31, $r33, $r35, $r43, $r44, $r45;
        android.app.backup.IBackupManager $r39;
        android.content.pm.PackageInfo $r49, $r54;
        java.lang.Object[] $r64;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.IBackupAgent;

        r3 := @parameter2: com.android.internal.backup.IBackupTransport;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invokeAgentForBackup on ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", $r8);

        $r10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invoking ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r14);

        $r13 = new java.io.File;

        $r16 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, r1);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mSavedStateName> = $r13;

        $r15 = new java.io.File;

        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r20 = $r18.<com.android.server.backup.BackupManagerService: java.io.File mDataDir>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".data");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, $r21);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName> = $r15;

        $r24 = new java.io.File;

        $r26 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".new");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r27);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mNewStateName> = $r24;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState> = null;

        $r30 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        i0 = virtualinvoke $r30.<com.android.server.backup.BackupManagerService: int generateToken()>();

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("@pm@");

        if $z0 == 0 goto label2;

        $r49 = new android.content.pm.PackageInfo;

        specialinvoke $r49.<android.content.pm.PackageInfo: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage> = $r49;

        $r54 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r54.<android.content.pm.PackageInfo: java.lang.String packageName> = r1;

     label2:
        $r29 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mSavedStateName>;

        $r33 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r29, 402653184);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState> = $r33;

        $r34 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $r31 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r34, 1006632960);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData> = $r31;

        $r32 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $z1 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r32);

        if $z1 != 0 goto label3;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELinux restorecon failed on ");

        $r46 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r50);

     label3:
        $r37 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mNewStateName>;

        $r35 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r37, 1006632960);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState> = $r35;

        $r36 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r36.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("setting timeout");

        $r40 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r40.<com.android.server.backup.BackupManagerService: void prepareOperationTimeout(int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask)>(i0, 30000L, r0);

        $r41 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r41.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("calling agent doBackup()");

        $r43 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState>;

        $r44 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        $r45 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState>;

        $r38 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r39 = $r38.<com.android.server.backup.BackupManagerService: android.app.backup.IBackupManager mBackupManagerBinder>;

        interfaceinvoke r2.<android.app.IBackupAgent: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>($r43, $r44, $r45, i0, $r39);

     label4:
        goto label6;

     label5:
        $r53 := @caughtexception;

        r4 = $r53;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error invoking for backup on ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r61);

        $r56 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception: ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r63 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r63);

        $r64 = newarray (java.lang.Object)[2];

        $r64[0] = r1;

        $r62 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r64[1] = $r62;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2823, $r64);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void agentErrorCleanup()>();

        return -1003;

     label6:
        $r42 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r42.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("invoke success");

        return 0;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void failAgent(android.app.IBackupAgent, java.lang.String)
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        android.app.IBackupAgent r1;
        java.lang.String r2, $r8, $r10;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5, $r6, $r9;
        android.content.pm.PackageInfo $r7;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: android.app.IBackupAgent;

        r2 := @parameter1: java.lang.String;

     label1:
        interfaceinvoke r1.<android.app.IBackupAgent: void fail(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error conveying failure to ");

        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r8 = $r7.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PerformBackupTask", $r10);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void operationComplete()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.String r1, r5, $r30, $r39, $r51, $r57, $r73, $r74;
        long l0, $l2;
        java.io.FileDescriptor r2, $r46;
        android.os.ParcelFileDescriptor r3, $r11, r84;
        android.app.backup.BackupDataInput r4, $r45;
        java.lang.Throwable r6, r7, $r66, $r68;
        android.content.pm.PackageInfo $r9, $r13, $r42, $r47;
        java.io.File $r10, $r18, $r21, $r24, $r25, $r38, $r44;
        android.content.pm.ApplicationInfo $r12, $r48;
        android.app.backup.BackupDataOutput $r14, r80;
        com.android.server.backup.BackupManagerService $r15, $r16, $r19, $r28, $r29, $r34, $r36, $r41, $r58, $r67;
        com.android.server.backup.BackupManagerService$BackupHandler $r17, $r65;
        int $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i18, $i19, i26;
        java.util.ArrayList $r20;
        boolean $z1, $z3;
        com.android.server.backup.BackupManagerService$BackupState $r22, r88;
        java.lang.Object[] $r23, $r56;
        java.lang.Integer $r26;
        java.lang.StringBuilder $r27, $r31, $r32, $r35, $r37, $r40, $r49, $r52, $r53, $r54, $r55, $r59, $r60, $r61, $r62, $r64, $r72, $r75, $r76, $r77;
        com.android.internal.backup.IBackupTransport $r33, $r43;
        android.app.IBackupAgent $r50;
        char $c20;
        java.io.IOException $r63, $r69, $r71, $r79;
        android.system.ErrnoException $r70;
        java.lang.Exception $r78, r86;
        byte[] r81;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r9 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        r1 = $r9.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        l0 = virtualinvoke $r10.<java.io.File: long length()>();

        $r11 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        r2 = virtualinvoke $r11.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

     label01:
        $r13 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r12 = $r13.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r12 == null goto label10;

        $r47 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r48 = $r47.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i18 = $r48.<android.content.pm.ApplicationInfo: int flags>;

        $i19 = $i18 & 1;

        if $i19 != 0 goto label10;

        $r44 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r44, 268435456);

        $r45 = new android.app.backup.BackupDataInput;

        $r46 = virtualinvoke r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r45.<android.app.backup.BackupDataInput: void <init>(java.io.FileDescriptor)>($r46);

        r4 = $r45;

     label02:
        $z3 = virtualinvoke r4.<android.app.backup.BackupDataInput: boolean readNextHeader()>();

        if $z3 == 0 goto label06;

        r5 = virtualinvoke r4.<android.app.backup.BackupDataInput: java.lang.String getKey()>();

        if r5 == null goto label05;

        $c20 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        if $c20 < 65280 goto label05;

        $r50 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.app.IBackupAgent mAgentBinder>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal backup key: ");

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void failAgent(android.app.IBackupAgent,java.lang.String)>($r50, $r51);

        $r58 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal key ");

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r55 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r57);

        $r56 = newarray (java.lang.Object)[2];

        $r56[0] = r1;

        $r56[1] = "bad key";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2823, $r56);

        $r67 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r65 = $r67.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r65.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(7);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void agentErrorCleanup()>();

     label03:
        if r3 == null goto label04;

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label04:
        return;

     label05:
        virtualinvoke r4.<android.app.backup.BackupDataInput: void skipEntityData()>();

        goto label02;

     label06:
        if r3 == null goto label10;

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

        goto label10;

     label07:
        $r66 := @caughtexception;

        r6 = $r66;

     label08:
        if r3 == null goto label09;

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label09:
        throw r6;

     label10:
        $r14 = new android.app.backup.BackupDataOutput;

        specialinvoke $r14.<android.app.backup.BackupDataOutput: void <init>(java.io.FileDescriptor)>(r2);

        r80 = $r14;

        r81 = staticinvoke <com.android.server.AppWidgetBackupBridge: byte[] getWidgetState(java.lang.String,int)>(r1, 0);

        if r81 == null goto label11;

        $i13 = lengthof r81;

        virtualinvoke r80.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>("\uffed\uffedwidget", $i13);

        $i15 = lengthof r81;

        virtualinvoke r80.<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>(r81, $i15);

        goto label12;

     label11:
        virtualinvoke r80.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>("\uffed\uffedwidget", -1);

     label12:
        goto label17;

     label13:
        $r63 := @caughtexception;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to save widget state for ");

        $r72 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PerformBackupTask", $r73);

     label14:
        staticinvoke <android.system.Os: void ftruncate(java.io.FileDescriptor,long)>(r2, l0);

     label15:
        goto label17;

     label16:
        $r70 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PerformBackupTask", "Unable to roll back!");

     label17:
        $r15 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r17 = $r15.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r17.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(7);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void clearAgentState()>();

        $r16 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r16.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("operation complete");

        r84 = null;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = 0;

     label18:
        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $l2 = virtualinvoke $r18.<java.io.File: long length()>();

        i26 = (int) $l2;

        if i26 <= 0 goto label20;

        $i8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i8 != 0 goto label19;

        $r38 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        r84 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r38, 268435456);

        $r41 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r41.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("sending data to transport");

        $r43 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $r42 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $i17 = interfaceinvoke $r43.<com.android.internal.backup.IBackupTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>($r42, r84);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = $i17;

     label19:
        $r28 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data delivered: ");

        $i9 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r30);

        $i11 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i11 != 0 goto label21;

        $r34 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r34.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("finishing op on transport");

        $r33 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i10 = interfaceinvoke $r33.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = $i10;

        $r36 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished: ");

        $i12 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r39);

        goto label21;

     label20:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "no backup data written; not calling transport");

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r19.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("no data to send");

     label21:
        $i5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 != 0 goto label22;

        $r21 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        virtualinvoke $r21.<java.io.File: boolean delete()>();

        $r25 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mNewStateName>;

        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mSavedStateName>;

        virtualinvoke $r25.<java.io.File: boolean renameTo(java.io.File)>($r24);

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = r1;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);

        $r23[1] = $r26;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2824, $r23);

        $r29 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r29.<com.android.server.backup.BackupManagerService: void logBackupComplete(java.lang.String)>(r1);

        goto label23;

     label22:
        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, r1);

     label23:
        if r84 == null goto label24;

        virtualinvoke r84.<android.os.ParcelFileDescriptor: void close()>();

     label24:
        goto label35;

     label25:
        $r79 := @caughtexception;

        goto label35;

     label26:
        $r78 := @caughtexception;

        r86 = $r78;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport error backing up ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PerformBackupTask", $r74, r86);

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, r1);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus> = -1000;

     label27:
        if r84 == null goto label28;

        virtualinvoke r84.<android.os.ParcelFileDescriptor: void close()>();

     label28:
        goto label35;

     label29:
        $r69 := @caughtexception;

        goto label35;

     label30:
        $r68 := @caughtexception;

        r7 = $r68;

     label31:
        if r84 == null goto label32;

        virtualinvoke r84.<android.os.ParcelFileDescriptor: void close()>();

     label32:
        goto label34;

     label33:
        $r71 := @caughtexception;

     label34:
        throw r7;

     label35:
        $i6 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i6 == 0 goto label36;

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r88 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label39;

     label36:
        $r20 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z1 = virtualinvoke $r20.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label37;

        $r22 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label38;

     label37:
        $r22 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

     label38:
        r88 = $r22;

     label39:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>(r88);

        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.io.IOException from label01 to label04 with label13;
        catch java.io.IOException from label05 to label12 with label13;
        catch android.system.ErrnoException from label14 to label15 with label16;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Exception from label18 to label23 with label26;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label18 to label23 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    public void handleTimeout()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r10, $r12, $r16;
        android.content.pm.PackageInfo $r3, $r8, $r14, $r18;
        java.lang.String $r4, $r6, $r9, $r13, $r15, $r17;
        java.lang.Object[] $r7;
        com.android.server.backup.BackupManagerService $r11, $r19;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout backing up ");

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r4 = $r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r6);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r9 = $r8.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r7[0] = $r9;

        $r7[1] = "timeout";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2823, $r7);

        $r11 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeout of ");

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r13 = $r14.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r15);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void agentErrorCleanup()>();

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r17 = $r18.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r19, $r17);

        return;
    }

    void revertAndEndBackup()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.util.Iterator r1;
        com.android.server.backup.BackupManagerService$BackupRequest r2;
        com.android.server.backup.BackupManagerService $r3, $r7;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r3.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("transport error; reverting");

        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.backup.BackupManagerService$BackupRequest) $r5;

        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r6 = r2.<com.android.server.backup.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.backup.BackupManagerService: void access$700(com.android.server.backup.BackupManagerService,java.lang.String)>($r7, $r6);

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void restartBackupAlarm()>();

        return;
    }

    void agentErrorCleanup()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.io.File $r1, $r2;
        java.util.ArrayList $r3;
        boolean $z2;
        com.android.server.backup.BackupManagerService$BackupState $r4;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r1 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $r2 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.io.File mNewStateName>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void clearAgentState()>();

        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z2 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $r4 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState FINAL>;

        goto label2;

     label1:
        $r4 = <com.android.server.backup.BackupManagerService$BackupState: com.android.server.backup.BackupManagerService$BackupState RUNNING_QUEUE>;

     label2:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>($r4);

        return;
    }

    void clearAgentState()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.Throwable r1, $r25;
        android.os.ParcelFileDescriptor $r2, $r3, $r4, $r21, $r23, $r24;
        com.android.server.backup.BackupManagerService $r5, $r7, $r12, $r17;
        java.lang.Object $r6, r30;
        android.util.SparseArray $r8;
        android.content.pm.PackageInfo $r9, $r13, $r19;
        android.content.pm.ApplicationInfo $r10, $r22;
        java.lang.StringBuilder $r11, $r14, $r15;
        java.lang.String $r16, $r18;
        android.app.IActivityManager $r20;
        java.io.IOException $r26, $r27, $r28;
        android.os.RemoteException $r29;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

     label01:
        $r2 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState>;

        if $r2 == null goto label02;

        $r23 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState>;

        virtualinvoke $r23.<android.os.ParcelFileDescriptor: void close()>();

     label02:
        goto label04;

     label03:
        $r27 := @caughtexception;

     label04:
        $r3 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        if $r3 == null goto label05;

        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        virtualinvoke $r24.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        goto label07;

     label06:
        $r28 := @caughtexception;

     label07:
        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState>;

        if $r4 == null goto label08;

        $r21 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState>;

        virtualinvoke $r21.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

     label10:
        $r5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r6 = $r5.<com.android.server.backup.BackupManagerService: java.lang.Object mCurrentOpLock>;

        r30 = $r6;

        entermonitor $r6;

     label11:
        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r8 = $r7.<com.android.server.backup.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r8.<android.util.SparseArray: void clear()>();

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData> = null;

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState> = null;

        exitmonitor r30;

     label12:
        goto label15;

     label13:
        $r25 := @caughtexception;

        r1 = $r25;

        exitmonitor r30;

     label14:
        throw r1;

     label15:
        $r9 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r10 = $r9.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r10 == null goto label19;

        $r12 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbinding ");

        $r13 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r16 = $r13.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r18);

     label16:
        $r17 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r20 = staticinvoke <com.android.server.backup.BackupManagerService: android.app.IActivityManager access$800(com.android.server.backup.BackupManagerService)>($r17);

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r22 = $r19.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        interfaceinvoke $r20.<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>($r22);

     label17:
        goto label19;

     label18:
        $r29 := @caughtexception;

     label19:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    void restartBackupAlarm()
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r3, $r9;
        com.android.server.backup.BackupManagerService $r4, $r5, $r8;
        com.android.internal.backup.IBackupTransport $r7;
        long $l0;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r4.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>("setting backup trigger");

        $r5 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r6 = $r5.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $l0 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: long requestBackupTime()>();

        staticinvoke <com.android.server.backup.BackupManagerService: void access$000(com.android.server.backup.BackupManagerService,long)>($r8, $l0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void executeNextState(com.android.server.backup.BackupManagerService$BackupState)
    {
        com.android.server.backup.BackupManagerService$PerformBackupTask r0;
        com.android.server.backup.BackupManagerService$BackupState r1;
        android.os.Message r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.server.backup.BackupManagerService $r4, $r8, $r10;
        java.lang.String $r7;
        com.android.server.backup.BackupManagerService$BackupHandler $r9, $r11;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService$BackupState;

        $r4 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("executeNextState => ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.server.backup.BackupManagerService: void addBackupTrace(java.lang.String)>($r7);

        r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService$BackupState mCurrentState> = r1;

        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r9 = $r8.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        r2 = virtualinvoke $r9.<com.android.server.backup.BackupManagerService$BackupHandler: android.os.Message obtainMessage(int,java.lang.Object)>(20, r0);

        $r10 = r0.<com.android.server.backup.BackupManagerService$PerformBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r11 = $r10.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r11.<com.android.server.backup.BackupManagerService$BackupHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.BackupManagerService$PerformBackupTask: java.lang.String TAG> = "PerformBackupTask";

        return;
    }
}
