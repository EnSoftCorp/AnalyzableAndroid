abstract class com.android.server.hdmi.RequestArcAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    protected static final int STATE_WATING_FOR_REQUEST_ARC_REQUEST_RESPONSE;
    protected final int mAvrAddress;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int)
    {
        com.android.server.hdmi.RequestArcAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0, $i1;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        $i1 = virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: int getSourceAddress()>();

        staticinvoke <com.android.server.hdmi.HdmiUtils: void verifyAddressType(int,int)>($i1, 0);

        staticinvoke <com.android.server.hdmi.HdmiUtils: void verifyAddressType(int,int)>(i0, 5);

        r0.<com.android.server.hdmi.RequestArcAction: int mAvrAddress> = i0;

        return;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.RequestArcAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int i0, $i2, $i3;
        short s1;
        boolean $z0;
        byte[] $r2;
        byte $b4;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i2 = r0.<com.android.server.hdmi.RequestArcAction: int mState>;

        if $i2 != 1 goto label1;

        $i3 = r0.<com.android.server.hdmi.RequestArcAction: int mAvrAddress>;

        $z0 = staticinvoke <com.android.server.hdmi.HdmiUtils: boolean checkCommandSource(com.android.server.hdmi.HdmiCecMessage,int,java.lang.String)>(r1, $i3, "RequestArcAction");

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        lookupswitch(i0)
        {
            case 0: goto label3;
            default: goto label6;
        };

     label3:
        $r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b4 = $r2[0];

        s1 = $b4 & 255;

        if s1 == 195 goto label4;

        if s1 != 196 goto label5;

     label4:
        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void disableArcTransmission()>();

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void finish()>();

        return 1;

     label5:
        return 0;

     label6:
        return 0;
    }

    protected final void disableArcTransmission()
    {
        com.android.server.hdmi.RequestArcAction r0;
        com.android.server.hdmi.SetArcTransmissionStateAction r1, $r2;
        com.android.server.hdmi.HdmiCecLocalDevice $r3;
        int $i0;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        $r2 = new com.android.server.hdmi.SetArcTransmissionStateAction;

        $r3 = virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: com.android.server.hdmi.HdmiCecLocalDevice localDevice()>();

        $i0 = r0.<com.android.server.hdmi.RequestArcAction: int mAvrAddress>;

        specialinvoke $r2.<com.android.server.hdmi.SetArcTransmissionStateAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice,int,boolean)>($r3, $i0, 0);

        r1 = $r2;

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>(r1);

        return;
    }

    final void handleTimerEvent(int)
    {
        com.android.server.hdmi.RequestArcAction r0;
        int i0, $i1;
        java.lang.Object[] $r1;

        r0 := @this: com.android.server.hdmi.RequestArcAction;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.hdmi.RequestArcAction: int mState>;

        if $i1 != i0 goto label1;

        if i0 == 1 goto label2;

     label1:
        return;

     label2:
        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void debug(java.lang.String,java.lang.Object[])>("[T]RequestArcAction.", $r1);

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void disableArcTransmission()>();

        virtualinvoke r0.<com.android.server.hdmi.RequestArcAction: void finish()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.RequestArcAction: int STATE_WATING_FOR_REQUEST_ARC_REQUEST_RESPONSE> = 1;

        <com.android.server.hdmi.RequestArcAction: java.lang.String TAG> = "RequestArcAction";

        return;
    }
}
