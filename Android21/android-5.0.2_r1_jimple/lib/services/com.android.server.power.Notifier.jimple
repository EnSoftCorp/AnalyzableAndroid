final class com.android.server.power.Notifier extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int POWER_STATE_UNKNOWN;
    private static final int POWER_STATE_AWAKE;
    private static final int POWER_STATE_ASLEEP;
    private static final int MSG_USER_ACTIVITY;
    private static final int MSG_BROADCAST;
    private static final int MSG_WIRELESS_CHARGING_STARTED;
    private final java.lang.Object mLock;
    private final android.content.Context mContext;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private final com.android.internal.app.IAppOpsService mAppOps;
    private final com.android.server.power.SuspendBlocker mSuspendBlocker;
    private final android.view.WindowManagerPolicy mPolicy;
    private final android.app.ActivityManagerInternal mActivityManagerInternal;
    private final android.hardware.input.InputManagerInternal mInputManagerInternal;
    private final com.android.server.power.Notifier$NotifierHandler mHandler;
    private final android.content.Intent mScreenOnIntent;
    private final android.content.Intent mScreenOffIntent;
    private int mActualPowerState;
    private int mLastGoToSleepReason;
    private boolean mPendingWakeUpBroadcast;
    private boolean mPendingGoToSleepBroadcast;
    private int mBroadcastedPowerState;
    private boolean mBroadcastInProgress;
    private long mBroadcastStartTime;
    private boolean mUserActivityPending;
    private final android.content.BroadcastReceiver mWakeUpBroadcastDone;
    private final android.content.BroadcastReceiver mGoToSleepBroadcastDone;

    public void <init>(android.os.Looper, android.content.Context, com.android.internal.app.IBatteryStats, com.android.internal.app.IAppOpsService, com.android.server.power.SuspendBlocker, android.view.WindowManagerPolicy)
    {
        com.android.server.power.Notifier r0;
        android.os.Looper r1;
        android.content.Context r2;
        com.android.internal.app.IBatteryStats r3, $r23;
        com.android.internal.app.IAppOpsService r4;
        com.android.server.power.SuspendBlocker r5;
        android.view.WindowManagerPolicy r6;
        java.lang.Object $r8, $r11, $r13;
        com.android.server.power.Notifier$3 $r9;
        com.android.server.power.Notifier$4 $r10;
        android.app.ActivityManagerInternal $r12;
        android.hardware.input.InputManagerInternal $r14;
        com.android.server.power.Notifier$NotifierHandler $r15;
        android.content.Intent $r16, $r17, $r18, $r21;
        android.os.RemoteException $r22;

        r0 := @this: com.android.server.power.Notifier;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.internal.app.IBatteryStats;

        r4 := @parameter3: com.android.internal.app.IAppOpsService;

        r5 := @parameter4: com.android.server.power.SuspendBlocker;

        r6 := @parameter5: android.view.WindowManagerPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.Notifier: java.lang.Object mLock> = $r8;

        $r9 = new com.android.server.power.Notifier$3;

        specialinvoke $r9.<com.android.server.power.Notifier$3: void <init>(com.android.server.power.Notifier)>(r0);

        r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mWakeUpBroadcastDone> = $r9;

        $r10 = new com.android.server.power.Notifier$4;

        specialinvoke $r10.<com.android.server.power.Notifier$4: void <init>(com.android.server.power.Notifier)>(r0);

        r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mGoToSleepBroadcastDone> = $r10;

        r0.<com.android.server.power.Notifier: android.content.Context mContext> = r2;

        r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats> = r3;

        r0.<com.android.server.power.Notifier: com.android.internal.app.IAppOpsService mAppOps> = r4;

        r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker> = r5;

        r0.<com.android.server.power.Notifier: android.view.WindowManagerPolicy mPolicy> = r6;

        $r11 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "android/app/ActivityManagerInternal");

        $r12 = (android.app.ActivityManagerInternal) $r11;

        r0.<com.android.server.power.Notifier: android.app.ActivityManagerInternal mActivityManagerInternal> = $r12;

        $r13 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "android/hardware/input/InputManagerInternal");

        $r14 = (android.hardware.input.InputManagerInternal) $r13;

        r0.<com.android.server.power.Notifier: android.hardware.input.InputManagerInternal mInputManagerInternal> = $r14;

        $r15 = new com.android.server.power.Notifier$NotifierHandler;

        specialinvoke $r15.<com.android.server.power.Notifier$NotifierHandler: void <init>(com.android.server.power.Notifier,android.os.Looper)>(r0, r1);

        r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler> = $r15;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SCREEN_ON");

        r0.<com.android.server.power.Notifier: android.content.Intent mScreenOnIntent> = $r17;

        $r16 = r0.<com.android.server.power.Notifier: android.content.Intent mScreenOnIntent>;

        virtualinvoke $r16.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SCREEN_OFF");

        r0.<com.android.server.power.Notifier: android.content.Intent mScreenOffIntent> = $r18;

        $r21 = r0.<com.android.server.power.Notifier: android.content.Intent mScreenOffIntent>;

        virtualinvoke $r21.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

     label1:
        $r23 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r23.<com.android.internal.app.IBatteryStats: void noteInteractive(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onWakeLockAcquired(int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String r1, r2, r4;
        android.os.WorkSource r3;
        boolean z0, $z1;
        com.android.internal.app.IBatteryStats $r5, $r9;
        com.android.internal.app.IAppOpsService $r6, $r7;
        android.os.IBinder $r8;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.WorkSource;

        r4 := @parameter6: java.lang.String;

     label1:
        i3 = staticinvoke <com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i0);

        $i4 = i0 & 1073741824;

        if $i4 == 0 goto label2;

        if i1 != 1000 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if r3 == null goto label4;

        $r9 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r9.<com.android.internal.app.IBatteryStats: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r3, i2, r1, r4, i3, z0);

        goto label5;

     label4:
        $r5 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>(i1, i2, r1, r4, i3, z0);

        $r7 = r0.<com.android.server.power.Notifier: com.android.internal.app.IAppOpsService mAppOps>;

        $r6 = r0.<com.android.server.power.Notifier: com.android.internal.app.IAppOpsService mAppOps>;

        $r8 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r6);

        interfaceinvoke $r7.<com.android.internal.app.IAppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>($r8, 40, i1, r2);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

     label7:
        return;

        catch android.os.RemoteException from label1 to label5 with label6;
    }

    public void onWakeLockChanging(int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String, int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        java.lang.String r1, r2, r4, r5, r6, r8;
        android.os.WorkSource r3, r7;
        boolean z0, $z1;
        com.android.internal.app.IBatteryStats $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.WorkSource;

        r4 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        r5 := @parameter8: java.lang.String;

        r6 := @parameter9: java.lang.String;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        r7 := @parameter12: android.os.WorkSource;

        r8 := @parameter13: java.lang.String;

        if r3 == null goto label7;

        if r7 == null goto label7;

        i6 = staticinvoke <com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i0);

        i7 = staticinvoke <com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i3);

        $i8 = i3 & 1073741824;

        if $i8 == 0 goto label1;

        if i4 != 1000 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        $r10 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r10.<com.android.internal.app.IBatteryStats: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r3, i2, r1, r4, i6, r7, i5, r5, r8, i7, z0);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

     label6:
        goto label8;

     label7:
        virtualinvoke r0.<com.android.server.power.Notifier: void onWakeLockReleased(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>(i0, r1, r2, i1, i2, r3, r4);

        virtualinvoke r0.<com.android.server.power.Notifier: void onWakeLockAcquired(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>(i3, r5, r6, i4, i5, r7, r8);

     label8:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onWakeLockReleased(int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2, r4;
        android.os.WorkSource r3;
        com.android.internal.app.IBatteryStats $r5, $r9;
        com.android.internal.app.IAppOpsService $r6, $r7;
        android.os.IBinder $r8;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.WorkSource;

        r4 := @parameter6: java.lang.String;

     label1:
        i3 = staticinvoke <com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i0);

        if r3 == null goto label2;

        $r9 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r9.<com.android.internal.app.IBatteryStats: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>(r3, i2, r1, r4, i3);

        goto label3;

     label2:
        $r5 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>(i1, i2, r1, r4, i3);

        $r7 = r0.<com.android.server.power.Notifier: com.android.internal.app.IAppOpsService mAppOps>;

        $r6 = r0.<com.android.server.power.Notifier: com.android.internal.app.IAppOpsService mAppOps>;

        $r8 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r6);

        interfaceinvoke $r7.<com.android.internal.app.IAppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>($r8, 40, i1, r2);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private static int getBatteryStatsWakeLockMonitorType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 65535;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 32: goto label1;
            default: goto label2;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    public void onInteractiveStateChangeStarted(boolean, int)
    {
        com.android.server.power.Notifier r0;
        boolean z0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.hardware.input.InputManagerInternal $r4;
        com.android.internal.app.IBatteryStats $r5;
        com.android.server.power.Notifier$1 $r6;
        com.android.server.power.Notifier$NotifierHandler $r7;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.power.Notifier;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        if z0 == 0 goto label02;

        $i1 = r0.<com.android.server.power.Notifier: int mActualPowerState>;

        if $i1 == 1 goto label03;

        r0.<com.android.server.power.Notifier: int mActualPowerState> = 1;

        r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast> = 1;

        $r7 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        $r6 = new com.android.server.power.Notifier$1;

        specialinvoke $r6.<com.android.server.power.Notifier$1: void <init>(com.android.server.power.Notifier)>(r0);

        virtualinvoke $r7.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>($r6);

        specialinvoke r0.<com.android.server.power.Notifier: void updatePendingBroadcastLocked()>();

        goto label03;

     label02:
        r0.<com.android.server.power.Notifier: int mLastGoToSleepReason> = i0;

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $r4 = r0.<com.android.server.power.Notifier: android.hardware.input.InputManagerInternal mInputManagerInternal>;

        virtualinvoke $r4.<android.hardware.input.InputManagerInternal: void setInteractive(boolean)>(z0);

        if z0 == 0 goto label11;

     label08:
        $r5 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void noteInteractive(boolean)>(1);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public void onInteractiveStateChangeFinished(boolean)
    {
        com.android.server.power.Notifier r0;
        boolean z0, $z1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        com.android.internal.app.IBatteryStats $r4;
        int $i0;
        com.android.server.power.Notifier$2 $r5;
        com.android.server.power.Notifier$NotifierHandler $r6, $r7;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.power.Notifier;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        if z0 != 0 goto label03;

        $i0 = r0.<com.android.server.power.Notifier: int mActualPowerState>;

        if $i0 == 2 goto label03;

        r0.<com.android.server.power.Notifier: int mActualPowerState> = 2;

        r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast> = 1;

        $z1 = r0.<com.android.server.power.Notifier: boolean mUserActivityPending>;

        if $z1 == 0 goto label02;

        r0.<com.android.server.power.Notifier: boolean mUserActivityPending> = 0;

        $r7 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r7.<com.android.server.power.Notifier$NotifierHandler: void removeMessages(int)>(1);

     label02:
        $r6 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        $r5 = new com.android.server.power.Notifier$2;

        specialinvoke $r5.<com.android.server.power.Notifier$2: void <init>(com.android.server.power.Notifier)>(r0);

        virtualinvoke $r6.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>($r5);

        specialinvoke r0.<com.android.server.power.Notifier: void updatePendingBroadcastLocked()>();

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        if z0 != 0 goto label11;

     label08:
        $r4 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteInteractive(boolean)>(0);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public void onUserActivity(int, int)
    {
        com.android.server.power.Notifier r0;
        int i0, i1;
        android.os.Message r2;
        java.lang.Throwable r3, $r8;
        com.android.internal.app.IBatteryStats $r4;
        java.lang.Object $r5, r10;
        boolean $z0;
        com.android.server.power.Notifier$NotifierHandler $r6, $r7;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label01:
        $r4 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteUserActivity(int,int)>(i1, i0);

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

     label04:
        $r5 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        r10 = $r5;

        entermonitor $r5;

     label05:
        $z0 = r0.<com.android.server.power.Notifier: boolean mUserActivityPending>;

        if $z0 != 0 goto label06;

        r0.<com.android.server.power.Notifier: boolean mUserActivityPending> = 1;

        $r6 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r2 = virtualinvoke $r6.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r2.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r7 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r7.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r2);

     label06:
        exitmonitor r10;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r10;

     label09:
        throw r3;

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onWirelessChargingStarted()
    {
        com.android.server.power.Notifier r0;
        android.os.Message r1;
        com.android.server.power.SuspendBlocker $r2;
        com.android.server.power.Notifier$NotifierHandler $r3, $r4;

        r0 := @this: com.android.server.power.Notifier;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r2.<com.android.server.power.SuspendBlocker: void acquire()>();

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r4.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    private void updatePendingBroadcastLocked()
    {
        com.android.server.power.Notifier r0;
        android.os.Message r1;
        boolean $z0, $z1, $z3;
        int $i0, $i1, $i2;
        com.android.server.power.SuspendBlocker $r2;
        com.android.server.power.Notifier$NotifierHandler $r3, $r4;

        r0 := @this: com.android.server.power.Notifier;

        $z0 = r0.<com.android.server.power.Notifier: boolean mBroadcastInProgress>;

        if $z0 != 0 goto label2;

        $i0 = r0.<com.android.server.power.Notifier: int mActualPowerState>;

        if $i0 == 0 goto label2;

        $z1 = r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast>;

        if $z1 != 0 goto label1;

        $z3 = r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast>;

        if $z3 != 0 goto label1;

        $i2 = r0.<com.android.server.power.Notifier: int mActualPowerState>;

        $i1 = r0.<com.android.server.power.Notifier: int mBroadcastedPowerState>;

        if $i2 == $i1 goto label2;

     label1:
        r0.<com.android.server.power.Notifier: boolean mBroadcastInProgress> = 1;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r2.<com.android.server.power.SuspendBlocker: void acquire()>();

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r4.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r1);

     label2:
        return;
    }

    private void finishPendingBroadcastLocked()
    {
        com.android.server.power.Notifier r0;
        com.android.server.power.SuspendBlocker $r1;

        r0 := @this: com.android.server.power.Notifier;

        r0.<com.android.server.power.Notifier: boolean mBroadcastInProgress> = 0;

        $r1 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r1.<com.android.server.power.SuspendBlocker: void release()>();

        return;
    }

    private void sendUserActivity()
    {
        com.android.server.power.Notifier r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        android.view.WindowManagerPolicy $r4;

        r0 := @this: com.android.server.power.Notifier;

        $r3 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.android.server.power.Notifier: boolean mUserActivityPending>;

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.power.Notifier: boolean mUserActivityPending> = 0;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r4 = r0.<com.android.server.power.Notifier: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r4.<android.view.WindowManagerPolicy: void userActivity()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void sendNextBroadcast()
    {
        com.android.server.power.Notifier r0;
        int i0, $i1, $i2, $i5, $i6;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        long $l3;

        r0 := @this: com.android.server.power.Notifier;

        $r3 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        $i1 = r0.<com.android.server.power.Notifier: int mBroadcastedPowerState>;

        if $i1 != 0 goto label02;

        r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedPowerState> = 1;

        goto label10;

     label02:
        $i2 = r0.<com.android.server.power.Notifier: int mBroadcastedPowerState>;

        if $i2 != 1 goto label06;

        $z2 = r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast>;

        if $z2 != 0 goto label03;

        $z3 = r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast>;

        if $z3 != 0 goto label03;

        $i6 = r0.<com.android.server.power.Notifier: int mActualPowerState>;

        if $i6 != 2 goto label04;

     label03:
        r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedPowerState> = 2;

        goto label10;

     label04:
        specialinvoke r0.<com.android.server.power.Notifier: void finishPendingBroadcastLocked()>();

        exitmonitor r1;

     label05:
        return;

     label06:
        $z0 = r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast>;

        if $z0 != 0 goto label07;

        $z1 = r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast>;

        if $z1 != 0 goto label07;

        $i5 = r0.<com.android.server.power.Notifier: int mActualPowerState>;

        if $i5 != 1 goto label08;

     label07:
        r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedPowerState> = 1;

        goto label10;

     label08:
        specialinvoke r0.<com.android.server.power.Notifier: void finishPendingBroadcastLocked()>();

        exitmonitor r1;

     label09:
        return;

     label10:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.power.Notifier: long mBroadcastStartTime> = $l3;

        i0 = r0.<com.android.server.power.Notifier: int mBroadcastedPowerState>;

        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label13:
        throw r2;

     label14:
        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(2725, 1);

        if i0 != 1 goto label15;

        specialinvoke r0.<com.android.server.power.Notifier: void sendWakeUpBroadcast()>();

        goto label16;

     label15:
        specialinvoke r0.<com.android.server.power.Notifier: void sendGoToSleepBroadcast()>();

     label16:
        return;

        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void sendWakeUpBroadcast()
    {
        com.android.server.power.Notifier r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        com.android.server.power.Notifier$NotifierHandler $r4;
        android.content.BroadcastReceiver $r5;
        android.os.UserHandle $r6;
        android.content.Intent $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.power.Notifier;

        $z0 = staticinvoke <android.app.ActivityManagerNative: boolean isSystemReady()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r7 = r0.<com.android.server.power.Notifier: android.content.Intent mScreenOnIntent>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r5 = r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mWakeUpBroadcastDone>;

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r8.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>($r7, $r6, null, $r5, $r4, 0, null, null);

        goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[1] = $r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2727, $r1);

        specialinvoke r0.<com.android.server.power.Notifier: void sendNextBroadcast()>();

     label2:
        return;
    }

    private void sendGoToSleepBroadcast()
    {
        com.android.server.power.Notifier r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        com.android.server.power.Notifier$NotifierHandler $r4;
        android.content.BroadcastReceiver $r5;
        android.os.UserHandle $r6;
        android.content.Intent $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.power.Notifier;

        $z0 = staticinvoke <android.app.ActivityManagerNative: boolean isSystemReady()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r7 = r0.<com.android.server.power.Notifier: android.content.Intent mScreenOffIntent>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r5 = r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mGoToSleepBroadcastDone>;

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r8.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>($r7, $r6, null, $r5, $r4, 0, null, null);

        goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[1] = $r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2727, $r1);

        specialinvoke r0.<com.android.server.power.Notifier: void sendNextBroadcast()>();

     label2:
        return;
    }

    private void playWirelessChargingStartedSound()
    {
        com.android.server.power.Notifier r0;
        java.lang.String r1, $r10;
        android.net.Uri r2;
        android.media.Ringtone r3;
        android.content.Context $r4, $r11;
        android.content.ContentResolver $r5;
        com.android.server.power.SuspendBlocker $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.power.Notifier;

        $r4 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, "wireless_charging_started_sound");

        if r1 == null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r10);

        if r2 == null goto label1;

        $r11 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        r3 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r11, r2);

        if r3 == null goto label1;

        virtualinvoke r3.<android.media.Ringtone: void setStreamType(int)>(1);

        virtualinvoke r3.<android.media.Ringtone: void play()>();

     label1:
        $r6 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r6.<com.android.server.power.SuspendBlocker: void release()>();

        return;
    }

    static android.view.WindowManagerPolicy access$000(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        android.view.WindowManagerPolicy $r1;

        r0 := @parameter0: com.android.server.power.Notifier;

        $r1 = r0.<com.android.server.power.Notifier: android.view.WindowManagerPolicy mPolicy>;

        return $r1;
    }

    static android.app.ActivityManagerInternal access$100(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        android.app.ActivityManagerInternal $r1;

        r0 := @parameter0: com.android.server.power.Notifier;

        $r1 = r0.<com.android.server.power.Notifier: android.app.ActivityManagerInternal mActivityManagerInternal>;

        return $r1;
    }

    static int access$200(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        int $i0;

        r0 := @parameter0: com.android.server.power.Notifier;

        $i0 = r0.<com.android.server.power.Notifier: int mLastGoToSleepReason>;

        return $i0;
    }

    static long access$300(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        long $l0;

        r0 := @parameter0: com.android.server.power.Notifier;

        $l0 = r0.<com.android.server.power.Notifier: long mBroadcastStartTime>;

        return $l0;
    }

    static void access$400(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;

        r0 := @parameter0: com.android.server.power.Notifier;

        specialinvoke r0.<com.android.server.power.Notifier: void sendNextBroadcast()>();

        return;
    }

    static void access$500(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;

        r0 := @parameter0: com.android.server.power.Notifier;

        specialinvoke r0.<com.android.server.power.Notifier: void sendUserActivity()>();

        return;
    }

    static void access$600(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;

        r0 := @parameter0: com.android.server.power.Notifier;

        specialinvoke r0.<com.android.server.power.Notifier: void playWirelessChargingStartedSound()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.power.Notifier: int MSG_WIRELESS_CHARGING_STARTED> = 3;

        <com.android.server.power.Notifier: int MSG_BROADCAST> = 2;

        <com.android.server.power.Notifier: int MSG_USER_ACTIVITY> = 1;

        <com.android.server.power.Notifier: int POWER_STATE_ASLEEP> = 2;

        <com.android.server.power.Notifier: int POWER_STATE_AWAKE> = 1;

        <com.android.server.power.Notifier: int POWER_STATE_UNKNOWN> = 0;

        <com.android.server.power.Notifier: boolean DEBUG> = 0;

        <com.android.server.power.Notifier: java.lang.String TAG> = "PowerManagerNotifier";

        return;
    }
}
