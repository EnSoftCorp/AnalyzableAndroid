public class com.android.server.pm.UserManagerService extends android.os.IUserManager$Stub
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private static final java.lang.String TAG_NAME;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_ICON_PATH;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_CREATION_TIME;
    private static final java.lang.String ATTR_LAST_LOGGED_IN_TIME;
    private static final java.lang.String ATTR_SALT;
    private static final java.lang.String ATTR_PIN_HASH;
    private static final java.lang.String ATTR_FAILED_ATTEMPTS;
    private static final java.lang.String ATTR_LAST_RETRY_MS;
    private static final java.lang.String ATTR_SERIAL_NO;
    private static final java.lang.String ATTR_NEXT_SERIAL_NO;
    private static final java.lang.String ATTR_PARTIAL;
    private static final java.lang.String ATTR_GUEST_TO_REMOVE;
    private static final java.lang.String ATTR_USER_VERSION;
    private static final java.lang.String ATTR_PROFILE_GROUP_ID;
    private static final java.lang.String TAG_GUEST_RESTRICTIONS;
    private static final java.lang.String TAG_USERS;
    private static final java.lang.String TAG_USER;
    private static final java.lang.String TAG_RESTRICTIONS;
    private static final java.lang.String TAG_ENTRY;
    private static final java.lang.String TAG_VALUE;
    private static final java.lang.String ATTR_KEY;
    private static final java.lang.String ATTR_VALUE_TYPE;
    private static final java.lang.String ATTR_MULTIPLE;
    private static final java.lang.String ATTR_TYPE_STRING_ARRAY;
    private static final java.lang.String ATTR_TYPE_STRING;
    private static final java.lang.String ATTR_TYPE_BOOLEAN;
    private static final java.lang.String ATTR_TYPE_INTEGER;
    private static final java.lang.String USER_INFO_DIR;
    private static final java.lang.String USER_LIST_FILENAME;
    private static final java.lang.String USER_PHOTO_FILENAME;
    private static final java.lang.String RESTRICTIONS_FILE_PREFIX;
    private static final java.lang.String XML_SUFFIX;
    private static final int MIN_USER_ID;
    private static final int USER_VERSION;
    private static final long EPOCH_PLUS_30_YEARS;
    private static final int BACKOFF_INC_INTERVAL;
    private static final int MAX_MANAGED_PROFILES;
    private static final int[] BACKOFF_TIMES;
    private final android.content.Context mContext;
    private final com.android.server.pm.PackageManagerService mPm;
    private final java.lang.Object mInstallLock;
    private final java.lang.Object mPackagesLock;
    private final android.os.Handler mHandler;
    private final java.io.File mUsersDir;
    private final java.io.File mUserListFile;
    private final java.io.File mBaseUserPath;
    private final android.util.SparseArray mUsers;
    private final android.util.SparseArray mUserRestrictions;
    private final android.os.Bundle mGuestRestrictions;
    private final android.util.SparseArray mRestrictionsPinStates;
    private final android.util.SparseBooleanArray mRemovingUserIds;
    private int[] mUserIds;
    private int mNextSerialNumber;
    private int mUserVersion;
    private com.android.internal.app.IAppOpsService mAppOpsService;
    private static com.android.server.pm.UserManagerService sInstance;

    public static com.android.server.pm.UserManagerService getInstance()
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r3;
        com.android.server.pm.UserManagerService $r2;

        r0 = class "com/android/server/pm/UserManagerService";

        entermonitor class "com/android/server/pm/UserManagerService";

     label1:
        $r2 = <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance>;

        exitmonitor r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void <init>(java.io.File, java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        java.io.File r1, r2;
        java.lang.Object $r3, $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object,java.io.File,java.io.File)>(null, null, $r3, $r4, r1, r2);

        return;
    }

    void <init>(android.content.Context, com.android.server.pm.PackageManagerService, java.lang.Object, java.lang.Object)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context r1;
        com.android.server.pm.PackageManagerService r2;
        java.lang.Object r3, r4;
        java.io.File $r5, $r6, $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.PackageManagerService;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r6 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "user");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object,java.io.File,java.io.File)>(r1, r2, r3, r4, $r5, $r6);

        return;
    }

    private void <init>(android.content.Context, com.android.server.pm.PackageManagerService, java.lang.Object, java.lang.Object, java.io.File, java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context r1;
        com.android.server.pm.PackageManagerService r2;
        java.lang.Object r3, r4, r7, r8, $r19, $r22, $r34, $r42;
        java.io.File r5, r6, r9, $r21, $r23, $r25, $r26, $r28, $r29, $r31;
        java.util.ArrayList r10, $r30;
        int i0, $i2, $i3, $i5, i6;
        android.content.pm.UserInfo r11, r46;
        java.lang.Throwable r12, r13, $r44, $r45;
        android.util.SparseArray $r14, $r16, $r18, $r32, $r43;
        android.os.Bundle $r15;
        android.util.SparseBooleanArray $r17;
        android.os.Handler $r20;
        java.lang.String $r24, $r27, $r36, $r39;
        java.lang.StringBuilder $r33, $r35, $r37, $r38, $r40, $r41;
        boolean $z2, $z3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.PackageManagerService;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.io.File;

        r6 := @parameter5: java.io.File;

        specialinvoke r0.<android.os.IUserManager$Stub: void <init>()>();

        $r14 = new android.util.SparseArray;

        specialinvoke $r14.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers> = $r14;

        $r16 = new android.util.SparseArray;

        specialinvoke $r16.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions> = $r16;

        $r15 = new android.os.Bundle;

        specialinvoke $r15.<android.os.Bundle: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions> = $r15;

        $r18 = new android.util.SparseArray;

        specialinvoke $r18.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates> = $r18;

        $r17 = new android.util.SparseBooleanArray;

        specialinvoke $r17.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds> = $r17;

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = 0;

        r0.<com.android.server.pm.UserManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm> = r2;

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock> = r3;

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock> = r4;

        $r20 = new android.os.Handler;

        specialinvoke $r20.<android.os.Handler: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler> = $r20;

        $r19 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        r7 = $r19;

        entermonitor $r19;

     label01:
        $r22 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r8 = $r22;

        entermonitor $r22;

     label02:
        $r21 = new java.io.File;

        $r24 = <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, $r24);

        r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir> = $r21;

        $r23 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        virtualinvoke $r23.<java.io.File: boolean mkdirs()>();

        $r25 = new java.io.File;

        $r26 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, "0");

        r9 = $r25;

        virtualinvoke r9.<java.io.File: boolean mkdirs()>();

        r0.<com.android.server.pm.UserManagerService: java.io.File mBaseUserPath> = r6;

        $r28 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r27 = virtualinvoke $r28.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r27, 509, -1, -1);

        $r31 = new java.io.File;

        $r29 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r29, "userlist.xml");

        r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile> = $r31;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readUserListLocked()>();

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r10 = $r30;

        i0 = 0;

     label03:
        $r32 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r32.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label06;

        $r43 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r42 = virtualinvoke $r43.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r11 = (android.content.pm.UserInfo) $r42;

        $z2 = r11.<android.content.pm.UserInfo: boolean partial>;

        if $z2 != 0 goto label04;

        $z3 = r11.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z3 == 0 goto label05;

     label04:
        if i0 == 0 goto label05;

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

     label05:
        i0 = i0 + 1;

        goto label03;

     label06:
        i6 = 0;

     label07:
        $i2 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label08;

        $r34 = virtualinvoke r10.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r46 = (android.content.pm.UserInfo) $r34;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing partially created user #");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (name=");

        $r36 = r46.<android.content.pm.UserInfo: java.lang.String name>;

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r39);

        $i5 = r46.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserStateLocked(int)>($i5);

        i6 = i6 + 1;

        goto label07;

     label08:
        <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance> = r0;

        exitmonitor r8;

     label09:
        goto label12;

     label10:
        $r44 := @caughtexception;

        r12 = $r44;

        exitmonitor r8;

     label11:
        throw r12;

     label12:
        exitmonitor r7;

     label13:
        goto label16;

     label14:
        $r45 := @caughtexception;

        r13 = $r45;

        exitmonitor r7;

     label15:
        throw r13;

     label16:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    void systemReady()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i3;
        android.os.IBinder $r2;
        com.android.internal.app.IAppOpsService $r3, $r7;
        int[] $r4, $r5, $r9;
        android.util.SparseArray $r6;
        java.lang.Object $r8;
        android.os.Bundle $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void userForeground(int)>(0);

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appops");

        $r3 = staticinvoke <com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>($r2);

        r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService> = $r3;

        i0 = 0;

     label1:
        $r4 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label6;

     label2:
        $r7 = r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r5 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $i2 = $r5[i0];

        $r8 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r10 = (android.os.Bundle) $r8;

        $r9 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $i3 = $r9[i0];

        interfaceinvoke $r7.<com.android.internal.app.IAppOpsService: void setUserRestrictions(android.os.Bundle,int)>($r10, $i3);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Unable to notify AppOpsService of UserRestrictions");

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public java.util.List getUsers(boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, $z2, $z3;
        java.lang.Object r1, $r5, $r10;
        java.util.ArrayList r2, $r6;
        int i0, $i1, $i2, $i3;
        android.content.pm.UserInfo r3;
        java.lang.Throwable r4, $r12;
        android.util.SparseArray $r7, $r8, $r9;
        android.util.SparseBooleanArray $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query users");

        $r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = new java.util.ArrayList;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r6;

        i0 = 0;

     label2:
        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i2 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label6;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r10;

        $z2 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z2 == 0 goto label3;

        goto label5;

     label3:
        if z0 == 0 goto label4;

        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i3 = r3.<android.content.pm.UserInfo: int id>;

        $z3 = virtualinvoke $r11.<android.util.SparseBooleanArray: boolean get(int)>($i3);

        if $z3 != 0 goto label5;

     label4:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label5:
        i0 = i0 + 1;

        goto label2;

     label6:
        exitmonitor r1;

     label7:
        return r2;

     label8:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r1;

     label9:
        throw r4;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.util.List getProfiles(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        boolean z0;
        long l1;
        java.lang.Object r1, $r5;
        java.util.List r2;
        java.lang.Throwable r3, r4, $r10, $r11;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == $i2 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting profiles related to user ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>($r8);

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r5;

        entermonitor $r5;

     label3:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getProfilesLocked(int,boolean)>(i0, z0);

        exitmonitor r1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r2;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    private java.util.List getProfilesLocked(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z3, $z4;
        android.content.pm.UserInfo r1, r3;
        java.util.ArrayList r2, $r4;
        android.util.SparseArray $r5, $r6, $r7;
        java.lang.Object $r8;
        android.util.SparseBooleanArray $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        $r4 = new java.util.ArrayList;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        r2 = $r4;

        if r1 != null goto label1;

        return r2;

     label1:
        i1 = 0;

     label2:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i1 >= $i3 goto label7;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (android.content.pm.UserInfo) $r8;

        $z1 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isProfileOf(android.content.pm.UserInfo,android.content.pm.UserInfo)>(r1, r3);

        if $z1 != 0 goto label3;

        goto label6;

     label3:
        if z0 == 0 goto label4;

        $z4 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z4 != 0 goto label4;

        goto label6;

     label4:
        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i4 = r3.<android.content.pm.UserInfo: int id>;

        $z3 = virtualinvoke $r9.<android.util.SparseBooleanArray: boolean get(int)>($i4);

        if $z3 == 0 goto label5;

        goto label6;

     label5:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        return r2;
    }

    public android.content.pm.UserInfo getProfileParent(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        java.lang.Object r1, $r4;
        android.content.pm.UserInfo r2, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the profile parent");

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        i1 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        if i1 != -1 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        $r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i1);

        exitmonitor r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean isProfileOf(android.content.pm.UserInfo, android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1, r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 := @parameter1: android.content.pm.UserInfo;

        $i1 = r1.<android.content.pm.UserInfo: int id>;

        $i0 = r2.<android.content.pm.UserInfo: int id>;

        if $i1 == $i0 goto label1;

        $i2 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        if $i2 == -1 goto label2;

        $i4 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        $i3 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        if $i4 != $i3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void setUserEnabled(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r4;
        android.content.pm.UserInfo r2;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("enable user");

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z0 != 0 goto label2;

        $i1 = r2.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 ^ 64;

        r2.<android.content.pm.UserInfo: int flags> = $i2;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r2);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.UserInfo getUserInfo(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.content.pm.UserInfo $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query user");

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isRestricted()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        int $i0;
        android.content.pm.UserInfo $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>($i0);

        $z0 = virtualinvoke $r4.<android.content.pm.UserInfo: boolean isRestricted()>();

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.content.pm.UserInfo getUserInfoLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.pm.UserInfo r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.content.pm.UserInfo) $r3;

        if r1 == null goto label1;

        $z0 = r1.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserInfo: unknown user #");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r8);

        return null;

     label1:
        return r1;
    }

    public boolean exists(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        int[] $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r4, i0);

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setUserName(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.String r1, $r11, $r12;
        boolean z0, $z1, $z2;
        java.lang.Object r2, $r5, $r7;
        android.content.pm.UserInfo r3;
        java.lang.Throwable r4, $r13;
        android.util.SparseArray $r6;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("rename users");

        z0 = 0;

        $r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r7;

        if r3 == null goto label02;

        $z1 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label04;

     label02:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserName: unknown user #");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r11);

        exitmonitor r2;

     label03:
        return;

     label04:
        if r1 == null goto label05;

        $r12 = r3.<android.content.pm.UserInfo: java.lang.String name>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label05;

        r3.<android.content.pm.UserInfo: java.lang.String name> = r1;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r3);

        z0 = 1;

     label05:
        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        if z0 == 0 goto label10;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(i0);

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void setUserIcon(int, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.graphics.Bitmap r1;
        long l1;
        java.lang.Object r2, $r6, $r8;
        android.content.pm.UserInfo r3;
        java.lang.Throwable r4, r5, $r13, $r14;
        android.util.SparseArray $r7;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("update users");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r6 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r8;

        if r3 == null goto label03;

        $z0 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label05;

     label03:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserIcon: unknown user #");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r11);

        exitmonitor r2;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label05:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBitmapLocked(android.content.pm.UserInfo,android.graphics.Bitmap)>(r3, r1);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r3);

        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(i0);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label13;

     label11:
        $r14 := @caughtexception;

        r5 = $r14;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

     label13:
        return;

        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void sendUserInfoChangedBroadcast(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INFO_CHANGED");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r6 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        return;
    }

    public android.graphics.Bitmap getUserIcon(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i3, $i4;
        java.lang.Object r1, $r4, $r6, $r12;
        android.content.pm.UserInfo r2, $r14;
        java.lang.Throwable r3, $r17;
        android.util.SparseArray $r5, $r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, $r13, $r16;
        boolean $z0;
        android.graphics.Bitmap $r15;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.content.pm.UserInfo) $r6;

        if r2 == null goto label02;

        $z0 = r2.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label04;

     label02:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserIcon: unknown user #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        exitmonitor r1;

     label03:
        return null;

     label04:
        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        $r14 = (android.content.pm.UserInfo) $r12;

        i1 = $r14.<android.content.pm.UserInfo: int profileGroupId>;

        if i1 == -1 goto label05;

        $i4 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        if i1 == $i4 goto label06;

     label05:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the icon of a user who is not related");

     label06:
        $r13 = r2.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r13 != null goto label08;

        exitmonitor r1;

     label07:
        return null;

     label08:
        $r16 = r2.<android.content.pm.UserInfo: java.lang.String iconPath>;

        $r15 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r16);

        exitmonitor r1;

     label09:
        return $r15;

     label10:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r1;

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void makeInitialized(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4, $i5;
        java.lang.Object r1, $r4, $r6;
        android.content.pm.UserInfo r2;
        java.lang.Throwable r3, $r11;
        android.util.SparseArray $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("makeInitialized");

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.content.pm.UserInfo) $r6;

        if r2 == null goto label2;

        $z0 = r2.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeInitialized: unknown user #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

     label3:
        $i2 = r2.<android.content.pm.UserInfo: int flags>;

        $i3 = $i2 & 16;

        if $i3 != 0 goto label4;

        $i4 = r2.<android.content.pm.UserInfo: int flags>;

        $i5 = $i4 | 16;

        r2.<android.content.pm.UserInfo: int flags> = $i5;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r2);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void initDefaultGuestRestrictions()
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_outgoing_calls", 1);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

     label1:
        return;
    }

    public android.os.Bundle getDefaultGuestRestrictions()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.os.Bundle $r4, $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("getDefaultGuestRestrictions");

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new android.os.Bundle;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>($r5);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setDefaultGuestRestrictions(android.os.Bundle)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle r1, $r5, $r6;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setDefaultGuestRestrictions");

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r5.<android.os.Bundle: void clear()>();

        $r6 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r6.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean hasUserRestriction(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2, $r5, $r7;
        android.os.Bundle r3;
        java.lang.Throwable r4, $r8;
        android.util.SparseArray $r6;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.os.Bundle) $r7;

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>(r1);

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r2;

     label4:
        return $z0;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.os.Bundle getUserRestrictions(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r4, $r6;
        android.os.Bundle r2, $r7;
        java.lang.Throwable r3, $r8;
        android.util.SparseArray $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.os.Bundle) $r6;

        if r2 == null goto label2;

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>(android.os.Bundle)>(r2);

        goto label3;

     label2:
        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

     label3:
        exitmonitor r1;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setUserRestrictions(android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle r1, $r9, $r12, $r17;
        int i0;
        java.lang.Object r2, $r6, $r8, $r11, $r14, $r19;
        long l1;
        java.lang.Throwable r4, r5, $r20, $r21;
        android.util.SparseArray $r7, $r10, $r13, $r16;
        com.android.internal.app.IAppOpsService $r15;
        android.content.pm.UserInfo $r18;
        android.os.RemoteException $r22;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setUserRestrictions");

        if r1 != null goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r9 = (android.os.Bundle) $r8;

        virtualinvoke $r9.<android.os.Bundle: void clear()>();

        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r12 = (android.os.Bundle) $r11;

        virtualinvoke $r12.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r15 = r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r13 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r17 = (android.os.Bundle) $r14;

        interfaceinvoke $r15.<com.android.internal.app.IAppOpsService: void setUserRestrictions(android.os.Bundle,int)>($r17, i0);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label09;

     label05:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Unable to notify AppOpsService of UserRestrictions");

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label09;

     label07:
        $r20 := @caughtexception;

        r4 = $r20;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label09:
        $r16 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r19 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r18 = (android.content.pm.UserInfo) $r19;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r18);

        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r2;

     label12:
        throw r5;

     label13:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private boolean isUserLimitReachedLocked()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, $i3, $i4;
        android.content.pm.UserInfo r1;
        android.util.SparseArray $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4;
        android.util.SparseBooleanArray $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = 0;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (android.content.pm.UserInfo) $r4;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i4 = r1.<android.content.pm.UserInfo: int id>;

        $z1 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>($i4);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z2 != 0 goto label2;

        $z3 = r1.<android.content.pm.UserInfo: boolean partial>;

        if $z3 != 0 goto label2;

        i0 = i0 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i3 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if i0 < $i3 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private static final void checkManageUsersPermission(java.lang.String)
    {
        java.lang.String r0, $r5;
        int i0, $i1;
        java.lang.SecurityException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label1;

        if i0 == 0 goto label1;

        $i1 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.MANAGE_USERS", i0, -1, 1);

        if $i1 == 0 goto label1;

        $r1 = new java.lang.SecurityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS permission to: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    private void writeBitmapLocked(android.content.pm.UserInfo, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1;
        android.graphics.Bitmap r2;
        java.io.File r3, r4, $r7, $r8, $r10;
        java.io.FileOutputStream r5, $r11;
        int $i0;
        java.lang.String $r9, $r13, $r14;
        boolean $z0, $z1;
        android.graphics.Bitmap$CompressFormat $r12;
        java.io.IOException $r15;
        java.io.FileNotFoundException $r16, r17;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 := @parameter1: android.graphics.Bitmap;

     label1:
        $r7 = new java.io.File;

        $r8 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r9);

        r3 = $r7;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "photo.png");

        r4 = $r10;

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        virtualinvoke r3.<java.io.File: boolean mkdir()>();

        $r14 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r14, 505, -1, -1);

     label2:
        $r12 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r11 = new java.io.FileOutputStream;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        r5 = $r11;

        $z1 = virtualinvoke r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r12, 100, $r11);

        if $z1 == 0 goto label3;

        $r13 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        r1.<android.content.pm.UserInfo: java.lang.String iconPath> = $r13;

     label3:
        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;

        r17 = $r16;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Error setting photo for user ", r17);

     label8:
        return;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.io.FileNotFoundException from label1 to label6 with label7;
    }

    public int[] getUserIds()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        int[] $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    int[] getUserIdsLPr()
    {
        com.android.server.pm.UserManagerService r0;
        int[] $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        return $r1;
    }

    private void readUserListLocked()
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileInputStream r1;
        android.util.AtomicFile r2, $r10;
        org.xmlpull.v1.XmlPullParser r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, i13;
        java.lang.String r5, $r12, r24, r25, r26;
        android.content.pm.UserInfo r6;
        java.lang.Throwable r7, $r20;
        java.io.File $r9, $r11;
        boolean $z0, $z1, $z2, $z3;
        android.os.Bundle $r13, $r14;
        android.util.SparseArray $r15;
        java.io.IOException $r16, $r17, $r18, $r19, $r22, $r23;
        org.xmlpull.v1.XmlPullParserException $r21;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r9 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

        return;

     label01:
        r1 = null;

        $r10 = new android.util.AtomicFile;

        $r11 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r10.<android.util.AtomicFile: void <init>(java.io.File)>($r11);

        r2 = $r10;

     label02:
        r1 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label03:
        $i1 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label04;

        if i0 == 1 goto label04;

        goto label03;

     label04:
        if i0 == 2 goto label10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Unable to read user list");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label05:
        if r1 == null goto label09;

     label06:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r18 := @caughtexception;

     label09:
        return;

     label10:
        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = -1;

        $r12 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("users");

        if $z1 == 0 goto label12;

        r24 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nextSerialNumber");

        if r24 == null goto label11;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r24);

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i10;

     label11:
        r5 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        if r5 == null goto label12;

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = $i12;

     label12:
        $i2 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i13 = $i2;

        if $i2 == 1 goto label17;

        if i13 != 2 goto label12;

        r25 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z2 == 0 goto label15;

        r26 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r26);

        r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo readUserLocked(int)>($i3);

        if r6 == null goto label14;

        $r15 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i4 = r6.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, r6);

        $i6 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        if $i6 < 0 goto label13;

        $i7 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i9 = r6.<android.content.pm.UserInfo: int id>;

        if $i7 > $i9 goto label14;

     label13:
        $i5 = r6.<android.content.pm.UserInfo: int id>;

        $i8 = $i5 + 1;

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i8;

     label14:
        goto label16;

     label15:
        $z3 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("guestRestrictions");

        if $z3 == 0 goto label16;

        $r13 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r13.<android.os.Bundle: void clear()>();

        $r14 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readRestrictionsLocked(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>(r3, $r14);

     label16:
        goto label12;

     label17:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void upgradeIfNecessaryLocked()>();

     label18:
        if r1 == null goto label38;

     label19:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label20:
        goto label38;

     label21:
        $r19 := @caughtexception;

        goto label38;

     label22:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label23:
        if r1 == null goto label38;

     label24:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label25:
        goto label38;

     label26:
        $r16 := @caughtexception;

        goto label38;

     label27:
        $r21 := @caughtexception;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label28:
        if r1 == null goto label38;

     label29:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label30:
        goto label38;

     label31:
        $r17 := @caughtexception;

        goto label38;

     label32:
        $r20 := @caughtexception;

        r7 = $r20;

     label33:
        if r1 == null goto label37;

     label34:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label35:
        goto label37;

     label36:
        $r23 := @caughtexception;

     label37:
        throw r7;

     label38:
        return;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label02 to label05 with label22;
        catch java.io.IOException from label10 to label18 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label05 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label18 with label27;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.Throwable from label02 to label05 with label32;
        catch java.lang.Throwable from label10 to label18 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    private void upgradeIfNecessaryLocked()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i3, $i4, $i5, $i6;
        android.content.pm.UserInfo r1, r17;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7, $r12, $r13, $r15;
        android.util.SparseArray $r8, $r11;
        java.lang.Object $r9, $r10;
        android.content.Context $r14;
        boolean $z0;
        android.content.res.Resources $r16;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        if i0 >= 1 goto label2;

        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r1 = (android.content.pm.UserInfo) $r10;

        $r12 = "Primary";

        $r13 = r1.<android.content.pm.UserInfo: java.lang.String name>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label1;

        $r14 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(17040889);

        r1.<android.content.pm.UserInfo: java.lang.String name> = $r15;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r1);

     label1:
        i0 = 1;

     label2:
        if i0 >= 2 goto label4;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r17 = (android.content.pm.UserInfo) $r9;

        $i3 = r17.<android.content.pm.UserInfo: int flags>;

        $i4 = $i3 & 16;

        if $i4 != 0 goto label3;

        $i6 = r17.<android.content.pm.UserInfo: int flags>;

        $i5 = $i6 | 16;

        r17.<android.content.pm.UserInfo: int flags> = $i5;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r17);

     label3:
        i0 = 2;

     label4:
        if i0 >= 4 goto label5;

        i0 = 4;

     label5:
        if i0 >= 5 goto label6;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        i0 = 5;

     label6:
        if i0 >= 5 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User version ");

        $i1 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t upgrade as expected to ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r7);

        goto label8;

     label7:
        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = i0;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

     label8:
        return;
    }

    private void fallbackToSingleUserLocked()
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1, $r3;
        android.os.Bundle r2, $r8;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        java.lang.String $r6;
        android.util.SparseArray $r7, $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = new android.content.pm.UserInfo;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(17040889);

        specialinvoke $r3.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(0, $r6, null, 19);

        r1 = $r3;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(0, r1);

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = 10;

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = 5;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r2 = $r8;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r9.<android.util.SparseArray: void append(int,java.lang.Object)>(0, r2);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r1);

        return;
    }

    private void writeUserLocked(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1;
        java.io.FileOutputStream r2;
        android.util.AtomicFile r3, $r8;
        java.io.BufferedOutputStream r4, $r15;
        com.android.internal.util.FastXmlSerializer r5, $r16;
        com.android.server.pm.UserManagerService$RestrictionsPinState r6;
        android.os.Bundle r7;
        java.io.File $r9, $r11;
        java.lang.StringBuilder $r10, $r12, $r13, $r52, $r54, $r58, $r59, $r60;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i12, $i13, $i17;
        java.lang.String $r14, $r19, $r22, $r23, $r25, $r28, $r29, $r32, $r40, $r42, $r45, $r47, $r48, $r51, $r56, $r57;
        java.lang.Boolean $r18;
        long $l4, $l5, $l10, $l14, $l15;
        boolean $z0, $z1;
        java.lang.Object $r30, $r38;
        android.util.SparseArray $r31, $r34;
        byte $b11;
        java.lang.Exception $r53, r61;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 = null;

        $r8 = new android.util.AtomicFile;

        $r9 = new java.io.File;

        $r11 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, $r14);

        specialinvoke $r8.<android.util.AtomicFile: void <init>(java.io.File)>($r9);

        r3 = $r8;

     label01:
        r2 = virtualinvoke r3.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r15 = new java.io.BufferedOutputStream;

        specialinvoke $r15.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r2);

        r4 = $r15;

        $r16 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r16.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r5 = $r16;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r4, "utf-8");

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r18);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i1 = r1.<android.content.pm.UserInfo: int id>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r19);

        $i2 = r1.<android.content.pm.UserInfo: int serialNumber>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "serialNumber", $r22);

        $i3 = r1.<android.content.pm.UserInfo: int flags>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r23);

        $l4 = r1.<android.content.pm.UserInfo: long creationTime>;

        $r25 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "created", $r25);

        $l5 = r1.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $r28 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastLoggedIn", $r28);

        $r31 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $i6 = r1.<android.content.pm.UserInfo: int id>;

        $r30 = virtualinvoke $r31.<android.util.SparseArray: java.lang.Object get(int)>($i6);

        r6 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r30;

        if r6 == null goto label04;

        $l10 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $b11 = $l10 cmp 0L;

        if $b11 == 0 goto label02;

        $l14 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $r56 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l14);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "salt", $r56);

     label02:
        $r47 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        if $r47 == null goto label03;

        $r48 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pinHash", $r48);

     label03:
        $i12 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        if $i12 == 0 goto label04;

        $i13 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "failedAttempts", $r45);

        $l15 = r6.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime>;

        $r51 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l15);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastAttemptMs", $r51);

     label04:
        $r29 = r1.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r29 == null goto label05;

        $r40 = r1.<android.content.pm.UserInfo: java.lang.String iconPath>;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r40);

     label05:
        $z0 = r1.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label06;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "partial", "true");

     label06:
        $z1 = r1.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z1 == 0 goto label07;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "guestToRemove", "true");

     label07:
        $i7 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        if $i7 == -1 goto label08;

        $i9 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "profileGroupId", $r42);

     label08:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "name");

        $r32 = r1.<android.content.pm.UserInfo: java.lang.String name>;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r32);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "name");

        $r34 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $i8 = r1.<android.content.pm.UserInfo: int id>;

        $r38 = virtualinvoke $r34.<android.util.SparseArray: java.lang.Object get(int)>($i8);

        r7 = (android.os.Bundle) $r38;

        if r7 == null goto label09;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeRestrictionsLocked(org.xmlpull.v1.XmlSerializer,android.os.Bundle)>(r5, r7);

     label09:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r3.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label10:
        goto label12;

     label11:
        $r53 := @caughtexception;

        r61 = $r53;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing user info ");

        $i17 = r1.<android.content.pm.UserInfo: int id>;

        $r60 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r61);

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r57);

        virtualinvoke r3.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

     label12:
        return;

        catch java.lang.Exception from label01 to label10 with label11;
    }

    private void writeUserListLocked()
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileOutputStream r1;
        android.util.AtomicFile r2, $r6;
        java.io.BufferedOutputStream r3, $r8;
        com.android.internal.util.FastXmlSerializer r4, $r9;
        int i0, $i1, $i2, $i3, $i4;
        android.content.pm.UserInfo r5;
        java.io.File $r7;
        java.lang.Boolean $r10;
        java.lang.String $r13, $r14, $r26;
        android.os.Bundle $r18;
        android.util.SparseArray $r19, $r20;
        java.lang.Object $r22;
        java.lang.Exception $r27;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = null;

        $r6 = new android.util.AtomicFile;

        $r7 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r6.<android.util.AtomicFile: void <init>(java.io.File)>($r7);

        r2 = $r6;

     label1:
        r1 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r8 = new java.io.BufferedOutputStream;

        specialinvoke $r8.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

        r3 = $r8;

        $r9 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r9.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r4 = $r9;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r3, "utf-8");

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r10);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "users");

        $i1 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nextSerialNumber", $r13);

        $i2 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r14);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "guestRestrictions");

        $r18 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeRestrictionsLocked(org.xmlpull.v1.XmlSerializer,android.os.Bundle)>(r4, $r18);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "guestRestrictions");

        i0 = 0;

     label2:
        $r19 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r19.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label3;

        $r20 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r22 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r5 = (android.content.pm.UserInfo) $r22;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i4 = r5.<android.content.pm.UserInfo: int id>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r26);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

        i0 = i0 + 1;

        goto label2;

     label3:
        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "users");

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label4:
        goto label6;

     label5:
        $r27 := @caughtexception;

        virtualinvoke r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error writing user list");

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private void writeRestrictionsLocked(org.xmlpull.v1.XmlSerializer, android.os.Bundle) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.os.Bundle r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: android.os.Bundle;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_wifi");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_modify_accounts");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_install_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_uninstall_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_share_location");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_install_unknown_sources");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_bluetooth");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_usb_file_transfer");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_credentials");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_remove_user");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_debugging_features");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_vpn");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_tethering");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_factory_reset");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_add_user");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "ensure_verify_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_cell_broadcasts");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_mobile_networks");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_control_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_physical_media");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_unmute_microphone");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_adjust_volume");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_outgoing_calls");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_sms");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_create_windows");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_cross_profile_copy_paste");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r1, r2, "no_outgoing_beam");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

        return;
    }

    private android.content.pm.UserInfo readUserLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, i6, i7, i9, $i10, $i12, $i13, i14, i15, i16, i17;
        java.lang.String r1, r2, r3, r8, $r13, $r16, $r24, $r26, $r27, $r28, $r29, $r30, r43, r44;
        long l3, l4, l5, l8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.os.Bundle r4, $r11;
        android.util.AtomicFile r5, $r10;
        java.io.FileInputStream r6;
        org.xmlpull.v1.XmlPullParser r7;
        java.lang.Throwable r9, $r42;
        java.io.File $r12, $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r33, $r34, $r35;
        android.content.pm.UserInfo $r19, r45, r47;
        android.util.SparseArray $r20, $r23, $r25;
        java.lang.Object $r21;
        com.android.server.pm.UserManagerService$RestrictionsPinState $r22, r46;
        byte $b11;
        java.io.IOException $r31, $r32, $r36, $r37, $r39, $r40, $r41;
        org.xmlpull.v1.XmlPullParserException $r38;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 = 0;

        i2 = i0;

        r1 = null;

        r2 = null;

        l3 = 0L;

        l4 = 0L;

        l5 = 0L;

        r3 = null;

        i6 = 0;

        i7 = -1;

        l8 = 0L;

        z0 = 0;

        z1 = 0;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r4 = $r11;

        r6 = null;

     label01:
        $r10 = new android.util.AtomicFile;

        $r14 = new java.io.File;

        $r12 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, $r16);

        specialinvoke $r10.<android.util.AtomicFile: void <init>(java.io.File)>($r14);

        r5 = $r10;

        r6 = virtualinvoke r5.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r7 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r6, null);

     label02:
        $i10 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        i9 = $i10;

        if $i10 == 2 goto label03;

        if i9 == 1 goto label03;

        goto label02;

     label03:
        if i9 == 2 goto label09;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read user ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r30);

     label04:
        if r6 == null goto label08;

     label05:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r40 := @caughtexception;

     label08:
        return null;

     label09:
        if i9 != 2 goto label24;

        $r24 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z2 == 0 goto label24;

        i14 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "id", -1);

        if i14 == i0 goto label15;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "User id does not match the file name");

     label10:
        if r6 == null goto label14;

     label11:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r32 := @caughtexception;

     label14:
        return null;

     label15:
        i2 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "serialNumber", i0);

        i1 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "flags", 0);

        r2 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        l3 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r7, "created", 0L);

        l4 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r7, "lastLoggedIn", 0L);

        l5 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r7, "salt", 0L);

        r3 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pinHash");

        i6 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "failedAttempts", 0);

        l8 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r7, "lastAttemptMs", 0L);

        i7 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "profileGroupId", -1);

        if i7 != -1 goto label16;

        i7 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "relatedGroupId", -1);

     label16:
        r43 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "partial");

        $r26 = "true";

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r43);

        if $z3 == 0 goto label17;

        z0 = 1;

     label17:
        r44 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "guestToRemove");

        $r28 = "true";

        $z4 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r44);

        if $z4 == 0 goto label18;

        z1 = 1;

     label18:
        i15 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label19:
        $i12 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        i16 = $i12;

        if $i12 == 1 goto label24;

        if i16 != 3 goto label20;

        $i13 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i13 <= i15 goto label24;

     label20:
        if i16 == 3 goto label19;

        if i16 != 4 goto label21;

        goto label19;

     label21:
        r8 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r27 = "name";

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z5 == 0 goto label22;

        i17 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i17 != 4 goto label23;

        r1 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        goto label23;

     label22:
        $r29 = "restrictions";

        $z6 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z6 == 0 goto label23;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readRestrictionsLocked(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>(r7, r4);

     label23:
        goto label19;

     label24:
        $r19 = new android.content.pm.UserInfo;

        specialinvoke $r19.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(i0, r1, r2, i1);

        r45 = $r19;

        r45.<android.content.pm.UserInfo: int serialNumber> = i2;

        r45.<android.content.pm.UserInfo: long creationTime> = l3;

        r45.<android.content.pm.UserInfo: long lastLoggedInTime> = l4;

        r45.<android.content.pm.UserInfo: boolean partial> = z0;

        r45.<android.content.pm.UserInfo: boolean guestToRemove> = z1;

        r45.<android.content.pm.UserInfo: int profileGroupId> = i7;

        $r20 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r20.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, r4);

        $b11 = l5 cmp 0L;

        if $b11 == 0 goto label26;

        $r23 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r21 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r46 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r21;

        if r46 != null goto label25;

        $r22 = new com.android.server.pm.UserManagerService$RestrictionsPinState;

        specialinvoke $r22.<com.android.server.pm.UserManagerService$RestrictionsPinState: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r46 = $r22;

        $r25 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        virtualinvoke $r25.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r46);

     label25:
        r46.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = l5;

        r46.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash> = r3;

        r46.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = i6;

        r46.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime> = l8;

     label26:
        r47 = r45;

     label27:
        if r6 == null goto label31;

     label28:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label29:
        goto label31;

     label30:
        $r37 := @caughtexception;

     label31:
        return r47;

     label32:
        $r31 := @caughtexception;

     label33:
        if r6 == null goto label48;

     label34:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label35:
        goto label48;

     label36:
        $r41 := @caughtexception;

        goto label48;

     label37:
        $r38 := @caughtexception;

     label38:
        if r6 == null goto label48;

     label39:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label40:
        goto label48;

     label41:
        $r39 := @caughtexception;

        goto label48;

     label42:
        $r42 := @caughtexception;

        r9 = $r42;

     label43:
        if r6 == null goto label47;

     label44:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label45:
        goto label47;

     label46:
        $r36 := @caughtexception;

     label47:
        throw r9;

     label48:
        return null;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label01 to label04 with label32;
        catch java.io.IOException from label09 to label10 with label32;
        catch java.io.IOException from label15 to label27 with label32;
        catch java.io.IOException from label34 to label35 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label04 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label27 with label37;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.lang.Throwable from label01 to label04 with label42;
        catch java.lang.Throwable from label09 to label10 with label42;
        catch java.lang.Throwable from label15 to label27 with label42;
        catch java.lang.Throwable from label32 to label33 with label42;
        catch java.lang.Throwable from label37 to label38 with label42;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.lang.Throwable from label42 to label43 with label42;
    }

    private void readRestrictionsLocked(org.xmlpull.v1.XmlPullParser, android.os.Bundle) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.os.Bundle r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_wifi");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_modify_accounts");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_install_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_uninstall_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_share_location");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_install_unknown_sources");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_bluetooth");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_usb_file_transfer");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_credentials");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_remove_user");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_debugging_features");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_vpn");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_tethering");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_factory_reset");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_add_user");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "ensure_verify_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_cell_broadcasts");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_config_mobile_networks");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_control_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_physical_media");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_unmute_microphone");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_adjust_volume");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_outgoing_calls");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_sms");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_create_windows");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_cross_profile_copy_paste");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r1, r2, "no_outgoing_beam");

        return;
    }

    private void readBoolean(org.xmlpull.v1.XmlPullParser, android.os.Bundle, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.os.Bundle r2;
        java.lang.String r3, r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r3);

        if r4 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r4);

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r3, $z0);

     label1:
        return;
    }

    private void writeBoolean(org.xmlpull.v1.XmlSerializer, android.os.Bundle, java.lang.String) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.os.Bundle r2;
        java.lang.String r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>(r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r3, $r4);

     label1:
        return;
    }

    private int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        int i0, $i1;
        java.lang.NumberFormatException $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 != null goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return $i1;

     label3:
        $r5 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        long l0, $l1;
        java.lang.NumberFormatException $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 != null goto label1;

        return l0;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        return $l1;

     label3:
        $r5 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean isPackageInstalled(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        android.content.pm.ApplicationInfo r2;
        com.android.server.pm.PackageManagerService $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        r2 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 8192, i0);

        if r2 == null goto label1;

        $i1 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 8388608;

        if $i2 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private void cleanAppRestrictions(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2;
        java.lang.Object r1, $r8;
        java.io.File r2, r6, $r9;
        java.lang.String[] r3, r4;
        java.lang.String r5;
        java.lang.Throwable r7, $r10;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r8 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r8;

        entermonitor $r8;

     label01:
        r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        r3 = virtualinvoke r2.<java.io.File: java.lang.String[] list()>();

        if r3 != null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label04:
        if i2 >= i1 goto label06;

        r5 = r4[i2];

        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("res_");

        if $z0 == 0 goto label05;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, r5);

        r6 = $r9;

        $z1 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label05;

        virtualinvoke r6.<java.io.File: boolean delete()>();

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r7 = $r10;

        exitmonitor r1;

     label09:
        throw r7;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void cleanAppRestrictionsForPackage(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r8;
        int i0;
        java.lang.Object r2, $r6;
        java.io.File r3, r4, $r7;
        java.lang.Throwable r5, $r9;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        r3 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r7 = new java.io.File;

        $r8 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r1);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, $r8);

        r4 = $r7;

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        virtualinvoke r4.<java.io.File: boolean delete()>();

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.UserInfo createProfileForUser(java.lang.String, int, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0, i1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can create users");

        if i1 == 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", "Only user owner can have profiles");

        return null;

     label1:
        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternal(java.lang.String,int,int)>(r1, i0, i1);

        return $r2;
    }

    public android.content.pm.UserInfo createUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can create users");

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternal(java.lang.String,int,int)>(r1, i0, -10000);

        return $r2;
    }

    private android.content.pm.UserInfo createUserInternal(java.lang.String, int, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r15;
        int i0, i1, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, i17;
        boolean z0, $z1, $z2, $z3;
        long l2, l3, $l15;
        java.lang.Object r2, r3, $r11, $r12;
        android.content.pm.UserInfo r4, $r14, $r25, r29;
        java.io.File r5, $r13, $r16, $r18;
        android.os.Bundle r6, $r10, $r21;
        java.lang.Throwable r7, r8, r9, $r26, $r27, $r28;
        byte $b7;
        android.util.SparseArray $r17, $r19;
        com.android.server.pm.PackageManagerService $r20;
        android.content.Intent $r22, r30;
        android.content.Context $r23;
        android.os.UserHandle $r24;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r10 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i4);

        $z1 = virtualinvoke $r10.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_add_user", 0);

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot add user. DISALLOW_ADD_USER is enabled.");

        return null;

     label01:
        $i5 = i0 & 4;

        if $i5 == 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z0 = $z3;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r12 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        r2 = $r12;

        entermonitor $r12;

     label05:
        $r11 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r3 = $r11;

        entermonitor $r11;

     label06:
        r4 = null;

        if i1 == -10000 goto label09;

        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i1);

        if r4 != null goto label09;

        exitmonitor r3;

     label07:
        exitmonitor r2;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return null;

     label09:
        if z0 != 0 goto label12;

        $z2 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isUserLimitReachedLocked()>();

        if $z2 == 0 goto label12;

        exitmonitor r3;

     label10:
        exitmonitor r2;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return null;

     label12:
        if z0 == 0 goto label15;

        $r25 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo findCurrentGuestUserLocked()>();

        if $r25 == null goto label15;

        exitmonitor r3;

     label13:
        exitmonitor r2;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return null;

     label15:
        $i6 = i0 & 32;

        if $i6 == 0 goto label18;

        $i14 = specialinvoke r0.<com.android.server.pm.UserManagerService: int numberOfUsersOfTypeLocked(int,boolean)>(32, 1);

        if $i14 < 1 goto label18;

        exitmonitor r3;

     label16:
        exitmonitor r2;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return null;

     label18:
        i17 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getNextAvailableIdLocked()>();

        $r14 = new android.content.pm.UserInfo;

        specialinvoke $r14.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(i17, r1, null, i0);

        r29 = $r14;

        $r13 = new java.io.File;

        $r16 = r0.<com.android.server.pm.UserManagerService: java.io.File mBaseUserPath>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, $r15);

        r5 = $r13;

        $i8 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i9 = $i8 + 1;

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i9;

        r29.<android.content.pm.UserInfo: int serialNumber> = $i8;

        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b7 = l3 cmp 946080000000L;

        if $b7 <= 0 goto label19;

        $l15 = l3;

        goto label20;

     label19:
        $l15 = 0L;

     label20:
        r29.<android.content.pm.UserInfo: long creationTime> = $l15;

        r29.<android.content.pm.UserInfo: boolean partial> = 1;

        $i10 = r29.<android.content.pm.UserInfo: int id>;

        $r18 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>($i10);

        virtualinvoke $r18.<java.io.File: boolean mkdirs()>();

        $r17 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>(i17, r29);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        if r4 == null goto label22;

        $i13 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        if $i13 != -1 goto label21;

        $i16 = r4.<android.content.pm.UserInfo: int id>;

        r4.<android.content.pm.UserInfo: int profileGroupId> = $i16;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r4);

     label21:
        $i12 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        r29.<android.content.pm.UserInfo: int profileGroupId> = $i12;

     label22:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r29);

        $r20 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r20.<com.android.server.pm.PackageManagerService: void createNewUserLILPw(int,java.io.File)>(i17, r5);

        r29.<android.content.pm.UserInfo: boolean partial> = 0;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r29);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        $r21 = new android.os.Bundle;

        specialinvoke $r21.<android.os.Bundle: void <init>()>();

        r6 = $r21;

        $r19 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r19.<android.util.SparseArray: void append(int,java.lang.Object)>(i17, r6);

        exitmonitor r3;

     label23:
        goto label26;

     label24:
        $r27 := @caughtexception;

        r8 = $r27;

        exitmonitor r3;

     label25:
        throw r8;

     label26:
        exitmonitor r2;

     label27:
        goto label30;

     label28:
        $r26 := @caughtexception;

        r7 = $r26;

        exitmonitor r2;

     label29:
        throw r7;

     label30:
        if r29 == null goto label31;

        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_ADDED");

        r30 = $r22;

        $i11 = r29.<android.content.pm.UserInfo: int id>;

        virtualinvoke r30.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i11);

        $r23 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r24 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r23.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r30, $r24, "android.permission.MANAGE_USERS");

     label31:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label34;

     label32:
        $r28 := @caughtexception;

        r9 = $r28;

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r9;

     label34:
        return r29;

        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label18 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.Throwable from label05 to label08 with label28;
        catch java.lang.Throwable from label09 to label11 with label28;
        catch java.lang.Throwable from label12 to label14 with label28;
        catch java.lang.Throwable from label15 to label17 with label28;
        catch java.lang.Throwable from label18 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label04 to label08 with label32;
        catch java.lang.Throwable from label09 to label11 with label32;
        catch java.lang.Throwable from label12 to label14 with label32;
        catch java.lang.Throwable from label15 to label17 with label32;
        catch java.lang.Throwable from label18 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    private int numberOfUsersOfTypeLocked(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z0, $z1;
        android.content.pm.UserInfo r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        android.util.SparseBooleanArray $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = 0;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label4;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (android.content.pm.UserInfo) $r4;

        if z0 == 0 goto label2;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i6 = r1.<android.content.pm.UserInfo: int id>;

        $z1 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>($i6);

        if $z1 != 0 goto label3;

     label2:
        $i4 = r1.<android.content.pm.UserInfo: int flags>;

        $i5 = $i4 & i0;

        if $i5 == 0 goto label3;

        i1 = i1 + 1;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        return i1;
    }

    private android.content.pm.UserInfo findCurrentGuestUserLocked()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2;
        android.content.pm.UserInfo r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;
        android.util.SparseBooleanArray $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.content.pm.UserInfo) $r4;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 == 0 goto label2;

        $z1 = r1.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = r1.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>($i2);

        if $z2 != 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public boolean markGuestForDeletion(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4;
        long l1;
        android.content.pm.UserInfo r1;
        java.lang.Object r2, $r6, $r8;
        boolean z0, $z1, $z2, $z3, z4;
        java.lang.Throwable r3, r4, $r10, $r11;
        android.os.Bundle $r5;
        android.util.SparseArray $r7;
        android.util.SparseBooleanArray $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can remove users");

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i2);

        $z1 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_remove_user", 0);

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot remove user. DISALLOW_REMOVE_USER is enabled.");

        return 0;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r6 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r6;

        entermonitor $r6;

     label03:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.content.pm.UserInfo) $r8;

        if i0 == 0 goto label04;

        if r1 == null goto label04;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z3 = virtualinvoke $r9.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z3 == 0 goto label06;

     label04:
        z0 = 0;

        exitmonitor r2;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label06:
        $z2 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z2 != 0 goto label08;

        z4 = 0;

        exitmonitor r2;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z4;

     label08:
        r1.<android.content.pm.UserInfo: boolean guestToRemove> = 1;

        $i4 = r1.<android.content.pm.UserInfo: int flags>;

        $i3 = $i4 | 64;

        r1.<android.content.pm.UserInfo: int flags> = $i3;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r1);

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label11:
        throw r3;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label15;

     label13:
        $r11 := @caughtexception;

        r4 = $r11;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label15:
        return 1;

        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label02 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean removeUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i10;
        long l1;
        android.content.pm.UserInfo r1;
        java.lang.Object r2, $r6, $r8;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6;
        java.lang.Throwable r3, r4, $r15, $r17;
        android.os.Bundle $r5;
        android.util.SparseArray $r7;
        android.util.SparseBooleanArray $r9, $r10;
        com.android.internal.app.IAppOpsService $r11;
        android.app.IActivityManager $r12;
        com.android.server.pm.UserManagerService$1 $r13;
        android.os.RemoteException $r14, $r16, r18;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can remove users");

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i2);

        $z1 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_remove_user", 0);

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot remove user. DISALLOW_REMOVE_USER is enabled.");

        return 0;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r6 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r6;

        entermonitor $r6;

     label03:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.content.pm.UserInfo) $r8;

        if i0 == 0 goto label04;

        if r1 == null goto label04;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z2 = virtualinvoke $r9.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z2 == 0 goto label06;

     label04:
        z0 = 0;

        exitmonitor r2;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label06:
        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        virtualinvoke $r10.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

     label07:
        $r11 = r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        interfaceinvoke $r11.<com.android.internal.app.IAppOpsService: void removeUser(int)>(i0);

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        r18 = $r14;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Unable to notify AppOpsService of removing user", r18);

     label10:
        r1.<android.content.pm.UserInfo: boolean partial> = 1;

        $i3 = r1.<android.content.pm.UserInfo: int flags>;

        $i4 = $i3 | 64;

        r1.<android.content.pm.UserInfo: int flags> = $i4;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r1);

        exitmonitor r2;

     label11:
        goto label14;

     label12:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r2;

     label13:
        throw r3;

     label14:
        $i5 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        if $i5 == -1 goto label15;

        $z3 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z3 == 0 goto label15;

        $i6 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        $i7 = r1.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendProfileRemovedBroadcast(int,int)>($i6, $i7);

     label15:
        $r12 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r13 = new com.android.server.pm.UserManagerService$1;

        specialinvoke $r13.<com.android.server.pm.UserManagerService$1: void <init>(com.android.server.pm.UserManagerService)>(r0);

        i10 = interfaceinvoke $r12.<android.app.IActivityManager: int stopUser(int,android.app.IStopUserCallback)>(i0, $r13);

     label16:
        goto label19;

     label17:
        $r16 := @caughtexception;

        z5 = 0;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z5;

     label19:
        if i10 != 0 goto label20;

        $z4 = 1;

        goto label21;

     label20:
        $z4 = 0;

     label21:
        z6 = $z4;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z6;

     label23:
        $r17 := @caughtexception;

        r4 = $r17;

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label03 to label05 with label12;
        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label02 to label05 with label23;
        catch java.lang.Throwable from label06 to label18 with label23;
        catch java.lang.Throwable from label19 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    void finishRemoveUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        long l1;
        android.content.Intent r1, $r3;
        java.lang.Throwable r2, $r8;
        com.android.server.pm.UserManagerService$2 $r5;
        android.content.Context $r6;
        android.os.UserHandle $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_REMOVED");

        r1 = $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r6 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r5 = new com.android.server.pm.UserManagerService$2;

        specialinvoke $r5.<com.android.server.pm.UserManagerService$2: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke $r6.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r1, $r7, "android.permission.MANAGE_USERS", $r5, null, -1, null, null);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void removeUserStateLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.util.AtomicFile r1, $r7;
        com.android.server.pm.PackageManagerService $r2;
        android.util.SparseArray $r3, $r6;
        com.android.server.pm.UserManagerService$3 $r4;
        android.os.Handler $r5;
        java.io.File $r8, $r10, $r14;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService: void cleanUpUserLILPw(com.android.server.pm.UserManagerService,int)>(r0, i0);

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        $r5 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r4 = new com.android.server.pm.UserManagerService$3;

        specialinvoke $r4.<com.android.server.pm.UserManagerService$3: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 60000L);

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        $r7 = new android.util.AtomicFile;

        $r8 = new java.io.File;

        $r10 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r13);

        specialinvoke $r7.<android.util.AtomicFile: void <init>(java.io.File)>($r8);

        r1 = $r7;

        virtualinvoke r1.<android.util.AtomicFile: void delete()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        $r14 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeDirectoryRecursive(java.io.File)>($r14);

        return;
    }

    private void removeDirectoryRecursive(java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        java.io.File r1, r5, $r6;
        java.lang.String[] r2, r3;
        int i0, i1;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r4);

        r5 = $r6;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeDirectoryRecursive(java.io.File)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;
    }

    private void sendProfileRemovedBroadcast(int, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r4, $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MANAGED_PROFILE_REMOVED");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r4 = new android.os.UserHandle;

        specialinvoke $r4.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r4);

        $r7 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r6 = new android.os.UserHandle;

        specialinvoke $r6.<android.os.UserHandle: void <init>(int)>(i0);

        virtualinvoke $r7.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r1, $r6, null);

        return;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int $i0;
        android.os.Bundle $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>(r1, $i0);

        return $r2;
    }

    public android.os.Bundle getApplicationRestrictionsForUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.Bundle $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 != i0 goto label1;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(r1);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, $i3);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can get restrictions for other users/apps");

     label2:
        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r4;

        entermonitor $r4;

     label3:
        $r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setApplicationRestrictions(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        android.os.Bundle r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r11;
        boolean $z0, $z1, $z2;
        android.content.Intent $r6, r12;
        android.os.UserHandle $r9;
        android.content.Context $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 != i0 goto label01;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(r1);

        $z2 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i3, $i2);

        if $z2 != 0 goto label02;

     label01:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can set restrictions for other users/apps");

     label02:
        $r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r3 = $r5;

        entermonitor $r5;

     label03:
        if r2 == null goto label04;

        $z1 = virtualinvoke r2.<android.os.Bundle: boolean isEmpty()>();

        if $z1 == 0 goto label05;

     label04:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void cleanAppRestrictionsForPackage(java.lang.String,int)>(r1, i0);

        goto label06;

     label05:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLocked(java.lang.String,android.os.Bundle,int)>(r1, r2, i0);

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label09:
        throw r4;

     label10:
        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isPackageInstalled(java.lang.String,int)>(r1, i0);

        if $z0 == 0 goto label11;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");

        r12 = $r6;

        virtualinvoke r12.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        virtualinvoke r12.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r10 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r9 = new android.os.UserHandle;

        specialinvoke $r9.<android.os.UserHandle: void <init>(int)>(i0);

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r12, $r9);

     label11:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean setRestrictionsChallenge(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r10;
        int i0;
        java.lang.Object r2, $r6, $r8, $r12;
        com.android.server.pm.UserManagerService$RestrictionsPinState r3, $r16;
        java.lang.Throwable r5, $r17;
        android.util.SparseArray $r7, $r11, $r13;
        java.security.SecureRandom $r9;
        long $l1, $l2, $l3;
        android.content.pm.UserInfo $r14;
        java.security.NoSuchAlgorithmException $r15;
        double $d0, $d1;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can modify the restrictions pin");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r6 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r8;

        if r3 != null goto label02;

        $r16 = new com.android.server.pm.UserManagerService$RestrictionsPinState;

        specialinvoke $r16.<com.android.server.pm.UserManagerService$RestrictionsPinState: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r3 = $r16;

     label02:
        if r1 != null goto label03;

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = 0L;

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash> = null;

        goto label07;

     label03:
        $r9 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>("SHA1PRNG");

        $l1 = virtualinvoke $r9.<java.security.SecureRandom: long nextLong()>();

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = $l1;

     label04:
        goto label06;

     label05:
        $r15 := @caughtexception;

        $d1 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d1 * 9.223372036854776E18;

        $l3 = (long) $d0;

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = $l3;

     label06:
        $l2 = r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $r10 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String passwordToHash(java.lang.String,long)>(r1, $l2);

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash> = $r10;

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = 0;

     label07:
        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

        $r13 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r12 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r14 = (android.content.pm.UserInfo) $r12;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r14);

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r17 := @caughtexception;

        r5 = $r17;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return 1;

        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public int checkRestrictionsChallenge(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r8, $r12, $r13, $r14, $r23;
        int i0, i1, $i6, $i7, i10;
        java.lang.Object r2, $r5, $r7, $r17, $r18;
        com.android.server.pm.UserManagerService$RestrictionsPinState r3;
        java.lang.Throwable r4, $r25;
        android.util.SparseArray $r6, $r15, $r20;
        long $l2, $l5, $l8;
        byte $b3;
        java.lang.StringBuilder $r9, $r10, $r11, $r21, $r22, $r24;
        boolean $z0;
        android.content.pm.UserInfo $r16, $r19;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can verify the restrictions pin");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r7;

        if r3 == null goto label02;

        $l2 = r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label02;

        $r8 = r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        if $r8 != null goto label04;

     label02:
        exitmonitor r2;

     label03:
        return -2;

     label04:
        if r1 != null goto label06;

        i1 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getRemainingTimeForPinAttempt(com.android.server.pm.UserManagerService$RestrictionsPinState)>(r3);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remaining waittime peek=");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r23);

        exitmonitor r2;

     label05:
        return i1;

     label06:
        i10 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getRemainingTimeForPinAttempt(com.android.server.pm.UserManagerService$RestrictionsPinState)>(r3);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remaining waittime=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r12);

        if i10 <= 0 goto label08;

        exitmonitor r2;

     label07:
        return i10;

     label08:
        $l5 = r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $r13 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String passwordToHash(java.lang.String,long)>(r1, $l5);

        $r14 = r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label10;

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = 0;

        $r20 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r18 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r19 = (android.content.pm.UserInfo) $r18;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r19);

        exitmonitor r2;

     label09:
        return -1;

     label10:
        $i7 = r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $i6 = $i7 + 1;

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = $i6;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime> = $l8;

        $r15 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r17 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r16 = (android.content.pm.UserInfo) $r17;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r16);

        exitmonitor r2;

     label11:
        return i10;

     label12:
        $r25 := @caughtexception;

        r4 = $r25;

        exitmonitor r2;

     label13:
        throw r4;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private int getRemainingTimeForPinAttempt(com.android.server.pm.UserManagerService$RestrictionsPinState)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserManagerService$RestrictionsPinState r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i14, $i15;
        int[] $r2, $r3;
        long $l8, $l9, $l10, $l11, $l12, $l13;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: com.android.server.pm.UserManagerService$RestrictionsPinState;

        $i2 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $i5 = $i2 / 5;

        $r2 = <com.android.server.pm.UserManagerService: int[] BACKOFF_TIMES>;

        $i3 = lengthof $r2;

        $i4 = $i3 - 1;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i6 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $i7 = $i6 % 5;

        if $i7 != 0 goto label1;

        $r3 = <com.android.server.pm.UserManagerService: int[] BACKOFF_TIMES>;

        $i15 = $r3[i0];

        goto label2;

     label1:
        $i15 = 0;

     label2:
        i1 = $i15;

        $l9 = (long) i1;

        $l8 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime>;

        $l10 = $l9 + $l8;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l13 = $l10 - $l11;

        $l12 = staticinvoke <java.lang.Math: long max(long,long)>($l13, 0L);

        $i14 = (int) $l12;

        return $i14;
    }

    public boolean hasRestrictionsChallenge()
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean hasRestrictionsPinLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean hasRestrictionsPinLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$RestrictionsPinState r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        long $l1;
        byte $b2;
        java.lang.String $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r3;

        if r1 == null goto label1;

        $l1 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r4 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        if $r4 != null goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void removeRestrictions()
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can remove restrictions");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeRestrictionsForUser(int,boolean)>(i0, 1);

        return;
    }

    private void removeRestrictionsForUser(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean z0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.os.Bundle $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void setUserRestrictions(android.os.Bundle,int)>($r4, i0);

        virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean setRestrictionsChallenge(java.lang.String)>(null);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void cleanAppRestrictions(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        if z0 == 0 goto label6;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void unhideAllInstalledAppsForUser(int)>(i0);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void unhideAllInstalledAppsForUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$4 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r1 = new com.android.server.pm.UserManagerService$4;

        specialinvoke $r1.<com.android.server.pm.UserManagerService$4: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private java.lang.String passwordToHash(java.lang.String, long)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r2, r3, $r13, $r16, $r18, $r25;
        long l0;
        byte[] r4, r5, r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r19, $r20, $r21, $r23, $r24;
        java.security.MessageDigest $r14, $r15;
        java.security.NoSuchAlgorithmException $r22;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = null;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        r2 = "SHA-1";

        $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        r5 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest(byte[])>(r4);

        r2 = "MD5";

        $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        r6 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>(r4);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String toHex(byte[])>(r5);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String toHex(byte[])>(r6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        goto label5;

     label4:
        $r22 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to encode string because of missing algorithm: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", $r25);

     label5:
        return r3;

        catch java.security.NoSuchAlgorithmException from label2 to label3 with label4;
    }

    private static java.lang.String toHex(byte[])
    {
        byte[] r0;
        java.lang.String r2, $r5, $r9, r11;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r10;
        byte $b2, $b3, $b4, $b6, $b7;
        char $c5, $c8;

        r0 := @parameter0: byte[];

        r2 = "";

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = "0123456789ABCDEF";

        $b2 = r0[i0];

        $b3 = $b2 >> 4;

        $b4 = $b3 & 15;

        $c5 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($b4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r9 = "0123456789ABCDEF";

        $b7 = r0[i0];

        $b6 = $b7 & 15;

        $c8 = virtualinvoke $r9.<java.lang.String: char charAt(int)>($b6);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    private int getUidForPackage(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        long l0;
        int i1;
        byte b2;
        java.lang.Throwable r2, $r7;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 8192);

        i1 = $r5.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r6 := @caughtexception;

        b2 = -1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return b2;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private android.os.Bundle readApplicationRestrictionsLocked(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r9, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r31, r40, r41, r42;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i9, i10;
        android.os.Bundle r2, r7, $r14;
        java.util.ArrayList r3, $r13;
        java.io.FileInputStream r4;
        android.util.AtomicFile r5, $r16;
        org.xmlpull.v1.XmlPullParser r6;
        java.lang.String[] r10;
        java.lang.Throwable r11, $r38;
        java.io.File $r15, $r18, $r27;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.lang.StringBuilder $r28, $r29, $r32;
        java.io.IOException $r30, $r33, $r34, $r35, $r36, $r37;
        org.xmlpull.v1.XmlPullParserException $r39;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r14 = new android.os.Bundle;

        specialinvoke $r14.<android.os.Bundle: void <init>()>();

        r2 = $r14;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = $r13;

        r4 = null;

     label01:
        $r16 = new android.util.AtomicFile;

        $r15 = new java.io.File;

        $r18 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r17 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r1);

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r18, $r17);

        specialinvoke $r16.<android.util.AtomicFile: void <init>(java.io.File)>($r15);

        r5 = $r16;

        r4 = virtualinvoke r5.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r6 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r4, null);

     label02:
        $i4 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i4;

        if $i4 == 2 goto label03;

        if i1 == 1 goto label03;

        goto label02;

     label03:
        if i1 == 2 goto label09;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read restrictions file ");

        $r27 = virtualinvoke r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r31);

        r7 = r2;

     label04:
        if r4 == null goto label08;

     label05:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r35 := @caughtexception;

     label08:
        return r7;

     label09:
        $i3 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        i9 = $i3;

        if $i3 == 1 goto label16;

        if i9 != 2 goto label09;

        $r19 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("entry");

        if $z0 == 0 goto label09;

        r40 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        r41 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        r9 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

        if r9 == null goto label12;

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

     label10:
        if i2 <= 0 goto label11;

        $i6 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        i10 = $i6;

        if $i6 == 1 goto label11;

        if i10 != 2 goto label10;

        $r23 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z5 == 0 goto label10;

        $r26 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r25 = virtualinvoke $r26.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        i2 = i2 + -1;

        goto label10;

     label11:
        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        r10 = newarray (java.lang.String)[$i7];

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        virtualinvoke r2.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>(r40, r10);

        goto label15;

     label12:
        $r20 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        r42 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();

        $r22 = "b";

        $z1 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z1 == 0 goto label13;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r42);

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r40, $z2);

        goto label15;

     label13:
        $r21 = "i";

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z3 == 0 goto label14;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r42);

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>(r40, $i5);

        goto label15;

     label14:
        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r40, r42);

     label15:
        goto label09;

     label16:
        if r4 == null goto label36;

     label17:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label18:
        goto label36;

     label19:
        $r33 := @caughtexception;

        goto label36;

     label20:
        $r37 := @caughtexception;

     label21:
        if r4 == null goto label36;

     label22:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label23:
        goto label36;

     label24:
        $r30 := @caughtexception;

        goto label36;

     label25:
        $r39 := @caughtexception;

     label26:
        if r4 == null goto label36;

     label27:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label28:
        goto label36;

     label29:
        $r36 := @caughtexception;

        goto label36;

     label30:
        $r38 := @caughtexception;

        r11 = $r38;

     label31:
        if r4 == null goto label35;

     label32:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label33:
        goto label35;

     label34:
        $r34 := @caughtexception;

     label35:
        throw r11;

     label36:
        return r2;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label01 to label04 with label20;
        catch java.io.IOException from label09 to label16 with label20;
        catch java.io.IOException from label22 to label23 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label04 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label16 with label25;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label01 to label04 with label30;
        catch java.lang.Throwable from label09 to label16 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    private void writeApplicationRestrictionsLocked(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r8, r12, $r15, $r27, $r32, $r34, $r40, $r44;
        android.os.Bundle r2;
        int i0, i1, i2, $i3;
        java.io.FileOutputStream r3;
        android.util.AtomicFile r4, $r14;
        java.io.BufferedOutputStream r5, $r17;
        com.android.internal.util.FastXmlSerializer r6, $r18;
        java.util.Iterator r7;
        java.lang.Object r9, $r23;
        java.lang.String[] r10, r11, $r30;
        java.io.File $r13, $r16;
        java.lang.Boolean $r20;
        java.util.Set $r21;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r42;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        r3 = null;

        $r14 = new android.util.AtomicFile;

        $r13 = new java.io.File;

        $r16 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r15 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r1);

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, $r15);

        specialinvoke $r14.<android.util.AtomicFile: void <init>(java.io.File)>($r13);

        r4 = $r14;

     label01:
        r3 = virtualinvoke r4.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r17 = new java.io.BufferedOutputStream;

        specialinvoke $r17.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r3);

        r5 = $r17;

        $r18 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r18.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r6 = $r18;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r5, "utf-8");

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r20);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

        $r21 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r7 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r23 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r23;

        r9 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r8);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "entry");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", r8);

        $z1 = r9 instanceof java.lang.Boolean;

        if $z1 == 0 goto label03;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "b");

        $r44 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r44);

        goto label12;

     label03:
        $z2 = r9 instanceof java.lang.Integer;

        if $z2 == 0 goto label04;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "i");

        $r40 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r40);

        goto label12;

     label04:
        if r9 == null goto label05;

        $z3 = r9 instanceof java.lang.String;

        if $z3 == 0 goto label08;

     label05:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "s");

        if r9 == null goto label06;

        $r27 = (java.lang.String) r9;

        goto label07;

     label06:
        $r27 = "";

     label07:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r27);

        goto label12;

     label08:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "sa");

        $r30 = (java.lang.String[]) r9;

        r10 = (java.lang.String[]) $r30;

        $i3 = lengthof r10;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r32);

        r11 = r10;

        i1 = lengthof r11;

        i2 = 0;

     label09:
        if i2 >= i1 goto label12;

        r12 = r11[i2];

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "value");

        if r12 == null goto label10;

        $r34 = r12;

        goto label11;

     label10:
        $r34 = "";

     label11:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r34);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "value");

        i2 = i2 + 1;

        goto label09;

     label12:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "entry");

        goto label02;

     label13:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r4.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r3);

     label14:
        goto label16;

     label15:
        $r42 := @caughtexception;

        virtualinvoke r4.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r3);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error writing application restrictions list");

     label16:
        return;

        catch java.lang.Exception from label01 to label14 with label15;
    }

    public int getUserSerialNumber(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        android.content.pm.UserInfo $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return -1;

     label3:
        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        $i1 = $r4.<android.content.pm.UserInfo: int serialNumber>;

        exitmonitor r1;

     label4:
        return $i1;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getUserHandle(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, i3, $i4;
        java.lang.Object r1, $r4;
        int[] r2;
        java.lang.Throwable r3, $r6;
        android.content.pm.UserInfo $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r2 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        i1 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        i3 = r2[i2];

        $r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i3);

        $i4 = $r5.<android.content.pm.UserInfo: int serialNumber>;

        if $i4 != i0 goto label4;

        exitmonitor r1;

     label3:
        return i3;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return -1;

     label7:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void updateUserIdsLocked()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.util.SparseArray $r1, $r2, $r3, $r6, $r8;
        java.lang.Object $r4, $r7;
        android.content.pm.UserInfo $r5, $r9;
        boolean $z0, $z1;
        int[] r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = 0;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i4 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i4 goto label3;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r7 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (android.content.pm.UserInfo) $r7;

        $z1 = $r9.<android.content.pm.UserInfo: boolean partial>;

        if $z1 != 0 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r10 = newarray (int)[i0];

        i2 = 0;

        i3 = 0;

     label4:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i5 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i3 >= $i5 goto label6;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (android.content.pm.UserInfo) $r4;

        $z0 = $r5.<android.content.pm.UserInfo: boolean partial>;

        if $z0 != 0 goto label5;

        $i6 = i2;

        i2 = i2 + 1;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i7 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i3);

        r10[$i6] = $i7;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        r0.<com.android.server.pm.UserManagerService: int[] mUserIds> = r10;

        return;
    }

    public void userForeground(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r4, $r6;
        android.content.pm.UserInfo r2;
        long l1;
        java.lang.Throwable r3, $r11;
        android.util.SparseArray $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        byte $b3;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.content.pm.UserInfo) $r6;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if r2 == null goto label2;

        $z0 = r2.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label4;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userForeground: unknown user #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        exitmonitor r1;

     label3:
        return;

     label4:
        $b3 = l1 cmp 946080000000L;

        if $b3 <= 0 goto label5;

        r2.<android.content.pm.UserInfo: long lastLoggedInTime> = l1;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r2);

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private int getNextAvailableIdLocked()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r3;
        int i0, $i1;
        java.lang.Throwable r2, $r6;
        android.util.SparseArray $r4;
        android.util.SparseBooleanArray $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        i0 = 10;

     label2:
        if i0 >= 2147483647 goto label4;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 >= 0 goto label3;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z0 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return i0;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.String packageToRestrictionsFileName(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("res_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String restrictionsFileNameToPackage(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = "res_";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = ".xml";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i1 - $i2;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        return $r4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0, $l6, $l7, $l9, $l10, $l11, $l12;
        java.lang.StringBuilder r4, $r9, $r17, $r19, $r20, $r21, $r22, $r25, $r26;
        java.lang.Object r5, $r10, $r13;
        int i1, $i2, $i3, $i4, $i5, $i14, $i15;
        android.content.pm.UserInfo r6;
        java.lang.Throwable r7, $r24;
        android.content.Context $r8;
        android.util.SparseArray $r11, $r12, $r15;
        android.util.SparseBooleanArray $r14;
        boolean $z0, $z1;
        byte $b8, $b13;
        java.lang.String $r23;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r8 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump UserManager from from pid=");

        $i14 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i15 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        return;

     label01:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r4 = $r9;

        $r10 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        r5 = $r10;

        entermonitor $r10;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Users:");

        i1 = 0;

     label03:
        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        if i1 >= $i3 goto label11;

        $r12 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r6 = (android.content.pm.UserInfo) $r13;

        if r6 != null goto label04;

        goto label10;

     label04:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>(r6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" serialNo=");

        $i4 = r6.<android.content.pm.UserInfo: int serialNumber>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i4);

        $r14 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $r15 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i5 = virtualinvoke $r15.<android.util.SparseArray: int keyAt(int)>(i1);

        $z0 = virtualinvoke $r14.<android.util.SparseBooleanArray: boolean get(int)>($i5);

        if $z0 == 0 goto label05;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" <removing> ");

     label05:
        $z1 = r6.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label06;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" <partial>");

     label06:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Created: ");

        $l6 = r6.<android.content.pm.UserInfo: long creationTime>;

        $b8 = $l6 cmp 0L;

        if $b8 != 0 goto label07;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

        goto label08;

     label07:
        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);

        $l7 = r6.<android.content.pm.UserInfo: long creationTime>;

        $l9 = l0 - $l7;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l9, r4);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Last logged in: ");

        $l12 = r6.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $b13 = $l12 cmp 0L;

        if $b13 != 0 goto label09;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

        goto label10;

     label09:
        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);

        $l10 = r6.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $l11 = l0 - $l10;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l11, r4);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label10:
        i1 = i1 + 1;

        goto label03;

     label11:
        exitmonitor r5;

     label12:
        goto label15;

     label13:
        $r24 := @caughtexception;

        r7 = $r24;

        exitmonitor r5;

     label14:
        throw r7;

     label15:
        return;

        catch java.lang.Throwable from label02 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    static java.lang.Object access$000(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        return $r1;
    }

    static void access$200(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserStateLocked(int)>(i0);

        return;
    }

    static android.util.SparseBooleanArray access$300(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        return $r1;
    }

    static com.android.server.pm.PackageManagerService access$400(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.PackageManagerService $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        int[] $r6;

        <com.android.server.pm.UserManagerService: int MAX_MANAGED_PROFILES> = 1;

        <com.android.server.pm.UserManagerService: int BACKOFF_INC_INTERVAL> = 5;

        <com.android.server.pm.UserManagerService: long EPOCH_PLUS_30_YEARS> = 946080000000L;

        <com.android.server.pm.UserManagerService: int USER_VERSION> = 5;

        <com.android.server.pm.UserManagerService: int MIN_USER_ID> = 10;

        <com.android.server.pm.UserManagerService: java.lang.String XML_SUFFIX> = ".xml";

        <com.android.server.pm.UserManagerService: java.lang.String RESTRICTIONS_FILE_PREFIX> = "res_";

        <com.android.server.pm.UserManagerService: java.lang.String USER_PHOTO_FILENAME> = "photo.png";

        <com.android.server.pm.UserManagerService: java.lang.String USER_LIST_FILENAME> = "userlist.xml";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_INTEGER> = "i";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BOOLEAN> = "b";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING> = "s";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING_ARRAY> = "sa";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_MULTIPLE> = "m";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_VALUE_TYPE> = "type";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_KEY> = "key";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_VALUE> = "value";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_ENTRY> = "entry";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_RESTRICTIONS> = "restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USER> = "user";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USERS> = "users";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_GUEST_RESTRICTIONS> = "guestRestrictions";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PROFILE_GROUP_ID> = "profileGroupId";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_USER_VERSION> = "version";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_GUEST_TO_REMOVE> = "guestToRemove";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PARTIAL> = "partial";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_NEXT_SERIAL_NO> = "nextSerialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SERIAL_NO> = "serialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_RETRY_MS> = "lastAttemptMs";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_FAILED_ATTEMPTS> = "failedAttempts";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PIN_HASH> = "pinHash";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SALT> = "salt";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_LOGGED_IN_TIME> = "lastLoggedIn";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_CREATION_TIME> = "created";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ID> = "id";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ICON_PATH> = "icon";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_NAME> = "name";

        <com.android.server.pm.UserManagerService: boolean DBG> = 0;

        <com.android.server.pm.UserManagerService: java.lang.String LOG_TAG> = "UserManagerService";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system");

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR> = $r5;

        $r6 = newarray (int)[5];

        $r6[0] = 0;

        $r6[1] = 30000;

        $r6[2] = 60000;

        $r6[3] = 300000;

        $r6[4] = 1800000;

        <com.android.server.pm.UserManagerService: int[] BACKOFF_TIMES> = $r6;

        return;
    }
}
