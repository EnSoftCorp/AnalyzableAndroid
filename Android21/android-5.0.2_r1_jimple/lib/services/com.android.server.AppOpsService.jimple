public class com.android.server.AppOpsService extends com.android.internal.app.IAppOpsService$Stub
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final long WRITE_DELAY;
    android.content.Context mContext;
    final android.util.AtomicFile mFile;
    final android.os.Handler mHandler;
    boolean mWriteScheduled;
    final java.lang.Runnable mWriteRunner;
    final android.util.SparseArray mUidOps;
    private final android.util.SparseArray mOpRestrictions;
    final android.util.SparseArray mOpModeWatchers;
    final android.util.ArrayMap mPackageModeWatchers;
    final android.util.ArrayMap mModeWatchers;
    final android.util.SparseArray mAudioRestrictions;
    final android.util.ArrayMap mClients;

    public void <init>(java.io.File, android.os.Handler)
    {
        com.android.server.AppOpsService r0;
        java.io.File r1;
        android.os.Handler r2;
        com.android.server.AppOpsService$1 $r3;
        android.util.SparseArray $r4, $r5, $r6, $r9;
        android.util.ArrayMap $r7, $r8, $r10;
        android.util.AtomicFile $r11;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<com.android.internal.app.IAppOpsService$Stub: void <init>()>();

        $r3 = new com.android.server.AppOpsService$1;

        specialinvoke $r3.<com.android.server.AppOpsService$1: void <init>(com.android.server.AppOpsService)>(r0);

        r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.SparseArray mOpRestrictions> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions> = $r9;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients> = $r10;

        $r11 = new android.util.AtomicFile;

        specialinvoke $r11.<android.util.AtomicFile: void <init>(java.io.File)>(r1);

        r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile> = $r11;

        r0.<com.android.server.AppOpsService: android.os.Handler mHandler> = r2;

        virtualinvoke r0.<com.android.server.AppOpsService: void readState()>();

        return;
    }

    public void publish(android.content.Context)
    {
        com.android.server.AppOpsService r0;
        android.content.Context r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.server.AppOpsService: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r0.<com.android.server.AppOpsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("appops", $r2);

        return;
    }

    public void systemReady()
    {
        com.android.server.AppOpsService r0, r1;
        boolean z0, $z1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.HashMap r2;
        java.util.Iterator r3;
        com.android.server.AppOpsService$Ops r4;
        java.lang.Throwable r6, $r26;
        android.util.SparseArray $r8, $r9, $r13;
        java.lang.Object $r10, $r12;
        java.util.Collection $r11;
        android.content.pm.PackageManager $r14;
        android.content.Context $r15;
        java.lang.String $r16, $r20, $r23;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r24, $r25;
        android.content.pm.PackageManager$NameNotFoundException $r27;

        r0 := @this: com.android.server.AppOpsService;

        r1 = r0;

        entermonitor r0;

     label01:
        z0 = 0;

        i0 = 0;

     label02:
        $r8 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i2 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label11;

        $r9 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r2 = (java.util.HashMap) $r10;

        $r11 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.AppOpsService$Ops) $r12;

     label04:
        $r15 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $r14 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r16 = r4.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $i4 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        i1 = virtualinvoke $r14.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>($r16, $i5);

     label05:
        goto label07;

     label06:
        $r27 := @caughtexception;

        i1 = -1;

     label07:
        $i6 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        if i1 == $i6 goto label08;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pruning old package ");

        $r20 = r4.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i7 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": new uid=");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AppOps", $r23);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        z0 = 1;

     label08:
        goto label03;

     label09:
        $i3 = virtualinvoke r2.<java.util.HashMap: int size()>();

        if $i3 > 0 goto label10;

        $r13 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r13.<android.util.SparseArray: void removeAt(int)>(i0);

     label10:
        i0 = i0 + 1;

        goto label02;

     label11:
        if z0 == 0 goto label12;

        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label12:
        exitmonitor r1;

     label13:
        goto label16;

     label14:
        $r26 := @caughtexception;

        r6 = $r26;

        exitmonitor r1;

     label15:
        throw r6;

     label16:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void packageRemoved(int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r2;
        int i0, $i1;
        java.lang.String r1;
        java.util.HashMap r3;
        java.lang.Throwable r4, $r10;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7, $r8;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (java.util.HashMap) $r7;

        if r3 == null goto label3;

        $r8 = virtualinvoke r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r8 == null goto label3;

        $i1 = virtualinvoke r3.<java.util.HashMap: int size()>();

        if $i1 > 0 goto label2;

        $r9 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void uidRemoved(int)
    {
        com.android.server.AppOpsService r0, r1;
        int i0, $i1;
        java.lang.Throwable r2, $r6;
        android.util.SparseArray $r4, $r5;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 < 0 goto label2;

        $r5 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void shutdown()
    {
        com.android.server.AppOpsService r0, r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.AppOpsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", "Writing app ops before shutdown...");

        z0 = 0;

        r1 = r0;

        entermonitor r0;

     label1:
        $z1 = r0.<com.android.server.AppOpsService: boolean mWriteScheduled>;

        if $z1 == 0 goto label2;

        r0.<com.android.server.AppOpsService: boolean mWriteScheduled> = 0;

        z0 = 1;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        if z0 == 0 goto label7;

        virtualinvoke r0.<com.android.server.AppOpsService: void writeState()>();

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private java.util.ArrayList collectOps(com.android.server.AppOpsService$Ops, int[])
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Ops r1;
        int[] r2;
        java.util.ArrayList r3, $r7, $r8;
        int i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i12, $i13, i14;
        com.android.server.AppOpsService$Op r4, r11;
        java.lang.Object $r5, $r9;
        android.app.AppOpsManager$OpEntry $r6, $r10;
        long $l4, $l5, $l10, $l11;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Ops;

        r2 := @parameter1: int[];

        r3 = null;

        if r2 != null goto label3;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        i0 = 0;

     label1:
        $i8 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: int size()>();

        if i0 >= $i8 goto label2;

        $r9 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: java.lang.Object valueAt(int)>(i0);

        r4 = (com.android.server.AppOpsService$Op) $r9;

        $r10 = new android.app.AppOpsManager$OpEntry;

        $i12 = r4.<com.android.server.AppOpsService$Op: int op>;

        $i13 = r4.<com.android.server.AppOpsService$Op: int mode>;

        $l10 = r4.<com.android.server.AppOpsService$Op: long time>;

        $l11 = r4.<com.android.server.AppOpsService$Op: long rejectTime>;

        $i9 = r4.<com.android.server.AppOpsService$Op: int duration>;

        specialinvoke $r10.<android.app.AppOpsManager$OpEntry: void <init>(int,int,long,long,int)>($i12, $i13, $l10, $l11, $i9);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i0 = i0 + 1;

        goto label1;

     label2:
        goto label7;

     label3:
        i14 = 0;

     label4:
        $i1 = lengthof r2;

        if i14 >= $i1 goto label7;

        $i2 = r2[i14];

        $r5 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: java.lang.Object get(int)>($i2);

        r11 = (com.android.server.AppOpsService$Op) $r5;

        if r11 == null goto label6;

        if r3 != null goto label5;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

     label5:
        $r6 = new android.app.AppOpsManager$OpEntry;

        $i7 = r11.<com.android.server.AppOpsService$Op: int op>;

        $i6 = r11.<com.android.server.AppOpsService$Op: int mode>;

        $l5 = r11.<com.android.server.AppOpsService$Op: long time>;

        $l4 = r11.<com.android.server.AppOpsService$Op: long rejectTime>;

        $i3 = r11.<com.android.server.AppOpsService$Op: int duration>;

        specialinvoke $r6.<android.app.AppOpsManager$OpEntry: void <init>(int,int,long,long,int)>($i7, $i6, $l5, $l4, $i3);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label6:
        i14 = i14 + 1;

        goto label4;

     label7:
        return r3;
    }

    public java.util.List getPackagesForOps(int[])
    {
        com.android.server.AppOpsService r0, r3;
        int[] r1;
        java.util.ArrayList r2, r7, $r20;
        int i0, $i1, $i2, $i3, $i4;
        java.util.HashMap r4;
        java.util.Iterator r5;
        com.android.server.AppOpsService$Ops r6;
        android.app.AppOpsManager$PackageOps r8, $r17;
        java.lang.Throwable r9, $r19;
        android.content.Context $r10;
        android.util.SparseArray $r12, $r13;
        java.util.Collection $r14;
        java.lang.Object $r15, $r16;
        boolean $z0;
        java.lang.String $r18;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: int[];

        $r10 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r10.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i1, $i2, null);

        r2 = null;

        r3 = r0;

        entermonitor r0;

     label01:
        i0 = 0;

     label02:
        $r12 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i3 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label07;

        $r13 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r15 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (java.util.HashMap) $r15;

        $r14 = virtualinvoke r4.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.AppOpsService$Ops) $r16;

        r7 = specialinvoke r0.<com.android.server.AppOpsService: java.util.ArrayList collectOps(com.android.server.AppOpsService$Ops,int[])>(r6, r1);

        if r7 == null goto label05;

        if r2 != null goto label04;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r2 = $r20;

     label04:
        $r17 = new android.app.AppOpsManager$PackageOps;

        $r18 = r6.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $i4 = r6.<com.android.server.AppOpsService$Ops: int uid>;

        specialinvoke $r17.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>($r18, $i4, r7);

        r8 = $r17;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label05:
        goto label03;

     label06:
        i0 = i0 + 1;

        goto label02;

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r19 := @caughtexception;

        r9 = $r19;

        exitmonitor r3;

     label10:
        throw r9;

     label11:
        return r2;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getOpsForPackage(int, java.lang.String, int[])
    {
        com.android.server.AppOpsService r0, r3;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r13;
        int[] r2;
        com.android.server.AppOpsService$Ops r4;
        java.util.ArrayList r5, r6, $r11;
        android.app.AppOpsManager$PackageOps r7, $r12;
        java.lang.Throwable r8, $r14;
        android.content.Context $r9;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: int[];

        $r9 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r9.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i1, $i2, null);

        r3 = r0;

        entermonitor r0;

     label1:
        r4 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i0, r1, 0);

        if r4 != null goto label3;

        exitmonitor r3;

     label2:
        return null;

     label3:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: java.util.ArrayList collectOps(com.android.server.AppOpsService$Ops,int[])>(r4, r2);

        if r5 != null goto label5;

        exitmonitor r3;

     label4:
        return null;

     label5:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r6 = $r11;

        $r12 = new android.app.AppOpsManager$PackageOps;

        $r13 = r4.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $i3 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        specialinvoke $r12.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>($r13, $i3, r5);

        r7 = $r12;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        exitmonitor r3;

     label6:
        return r6;

     label7:
        $r14 := @caughtexception;

        r8 = $r14;

        exitmonitor r3;

     label8:
        throw r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void pruneOp(com.android.server.AppOpsService$Op, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Op r1;
        int i0, $i5, $i6, $i7;
        java.lang.String r2, $r7;
        com.android.server.AppOpsService$Ops r3;
        java.util.HashMap r4;
        long $l1, $l3;
        byte $b2, $b4;
        android.util.SparseArray $r5, $r9;
        java.lang.Object $r6;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Op;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $l1 = r1.<com.android.server.AppOpsService$Op: long time>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l3 = r1.<com.android.server.AppOpsService$Op: long rejectTime>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i0, r2, 0);

        if r3 == null goto label1;

        $i5 = r1.<com.android.server.AppOpsService$Op: int op>;

        virtualinvoke r3.<com.android.server.AppOpsService$Ops: void remove(int)>($i5);

        $i6 = virtualinvoke r3.<com.android.server.AppOpsService$Ops: int size()>();

        if $i6 > 0 goto label1;

        $r5 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (java.util.HashMap) $r6;

        if r4 == null goto label1;

        $r7 = r3.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        virtualinvoke r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

        $i7 = virtualinvoke r4.<java.util.HashMap: int size()>();

        if $i7 > 0 goto label1;

        $r9 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    public void setMode(int, int, java.lang.String, int)
    {
        com.android.server.AppOpsService r0, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        java.lang.String r1;
        java.util.ArrayList r2, r5, $r15, $r17, r20;
        com.android.server.AppOpsService$Op r4;
        java.lang.Throwable r6, $r18;
        java.lang.Object $r8, $r13, $r14;
        com.android.internal.app.IAppOpsCallback $r9;
        com.android.server.AppOpsService$Callback $r10;
        android.util.SparseArray $r11;
        android.util.ArrayMap $r12;
        android.content.Context $r16;
        android.os.RemoteException $r19;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Process: int myPid()>();

        if $i3 == $i4 goto label01;

        $r16 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i10 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r16.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", $i10, $i9, null);

     label01:
        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r2 = null;

        i11 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        r3 = r0;

        entermonitor r0;

     label02:
        r4 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(int,int,java.lang.String,boolean)>(i11, i1, r1, 1);

        if r4 == null goto label08;

        $i6 = r4.<com.android.server.AppOpsService$Op: int mode>;

        if $i6 == i2 goto label08;

        r4.<com.android.server.AppOpsService$Op: int mode> = i2;

        $r11 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r13 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i11);

        r5 = (java.util.ArrayList) $r13;

        if r5 == null goto label04;

        if r2 != null goto label03;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r2 = $r17;

     label03:
        virtualinvoke r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r5);

     label04:
        $r12 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r14 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r20 = (java.util.ArrayList) $r14;

        if r20 == null goto label06;

        if r2 != null goto label05;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r2 = $r15;

     label05:
        virtualinvoke r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r20);

     label06:
        $i7 = r4.<com.android.server.AppOpsService$Op: int op>;

        $i8 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i7);

        if i2 != $i8 goto label07;

        specialinvoke r0.<com.android.server.AppOpsService: void pruneOp(com.android.server.AppOpsService$Op,int,java.lang.String)>(r4, i1, r1);

     label07:
        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteNowLocked()>();

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r3;

     label11:
        throw r6;

     label12:
        if r2 == null goto label18;

        i12 = 0;

     label13:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i12 >= $i5 goto label18;

     label14:
        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r10 = (com.android.server.AppOpsService$Callback) $r8;

        $r9 = $r10.<com.android.server.AppOpsService$Callback: com.android.internal.app.IAppOpsCallback mCallback>;

        interfaceinvoke $r9.<com.android.internal.app.IAppOpsCallback: void opChanged(int,java.lang.String)>(i11, r1);

     label15:
        goto label17;

     label16:
        $r19 := @caughtexception;

     label17:
        i12 = i12 + 1;

        goto label13;

     label18:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private static java.util.HashMap addCallbacks(java.util.HashMap, java.lang.String, int, java.util.ArrayList)
    {
        java.util.HashMap r0, $r11;
        java.lang.String r1;
        int i0, i1, $i2;
        java.util.ArrayList r2, r4, $r9;
        com.android.server.AppOpsService$Callback r3;
        java.lang.Object $r5, $r6;
        android.util.Pair $r7;
        java.lang.Integer $r8;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.util.ArrayList;

        if r2 != null goto label1;

        return r0;

     label1:
        if r0 != null goto label2;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0 = $r11;

     label2:
        i1 = 0;

     label3:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label5;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.AppOpsService$Callback) $r5;

        $r6 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.ArrayList) $r6;

        if r4 != null goto label4;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label4:
        $r7 = new android.util.Pair;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r8);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label3;

     label5:
        return r0;
    }

    public void resetAllModes()
    {
        com.android.server.AppOpsService r0, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, i26;
        java.util.HashMap r1, r3, r40;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r4, r41;
        java.util.Map$Entry r5, r42;
        java.lang.String r6, $r21;
        com.android.server.AppOpsService$Ops r7;
        com.android.server.AppOpsService$Op r8;
        java.lang.Throwable r9, $r38;
        android.content.Context $r10;
        android.util.SparseArray $r11, $r23, $r24, $r27, $r33;
        java.util.Set $r13, $r26;
        java.lang.Object $r14, $r15, $r16, $r17, $r19, $r20, $r25, $r28, $r29, $r30, $r31, $r32, $r34;
        java.lang.Integer $r18;
        com.android.internal.app.IAppOpsCallback $r22;
        java.util.ArrayList $r35, $r36, r44;
        long $l21, $l24;
        android.util.ArrayMap $r37;
        byte $b23, $b25;
        android.os.RemoteException $r39;
        com.android.server.AppOpsService$Callback r43;
        android.util.Pair r45;

        r0 := @this: com.android.server.AppOpsService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r10.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", $i3, i0, null);

        r1 = null;

        r2 = r0;

        entermonitor r0;

     label01:
        z0 = 0;

        $r11 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i4 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        i1 = $i4 - 1;

     label02:
        if i1 < 0 goto label11;

        $r24 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r25 = virtualinvoke $r24.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (java.util.HashMap) $r25;

        $i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r23 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i8 = virtualinvoke $r23.<android.util.SparseArray: int keyAt(int)>(i1);

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i8);

        if $i7 == $i9 goto label03;

        goto label10;

     label03:
        $r26 = virtualinvoke r3.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r28 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r28;

        $r30 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r30;

        $r29 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (com.android.server.AppOpsService$Ops) $r29;

        $i12 = virtualinvoke r7.<com.android.server.AppOpsService$Ops: int size()>();

        i2 = $i12 - 1;

     label05:
        if i2 < 0 goto label07;

        $r31 = virtualinvoke r7.<com.android.server.AppOpsService$Ops: java.lang.Object valueAt(int)>(i2);

        r8 = (com.android.server.AppOpsService$Op) $r31;

        $i14 = r8.<com.android.server.AppOpsService$Op: int op>;

        $z3 = staticinvoke <android.app.AppOpsManager: boolean opAllowsReset(int)>($i14);

        if $z3 == 0 goto label06;

        $i18 = r8.<com.android.server.AppOpsService$Op: int mode>;

        $i13 = r8.<com.android.server.AppOpsService$Op: int op>;

        $i17 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i13);

        if $i18 == $i17 goto label06;

        $i16 = r8.<com.android.server.AppOpsService$Op: int op>;

        $i15 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i16);

        r8.<com.android.server.AppOpsService$Op: int mode> = $i15;

        z0 = 1;

        $i19 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r33 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i20 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r32 = virtualinvoke $r33.<android.util.SparseArray: java.lang.Object get(int)>($i20);

        $r36 = (java.util.ArrayList) $r32;

        r40 = staticinvoke <com.android.server.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,java.lang.String,int,java.util.ArrayList)>(r1, r6, $i19, $r36);

        $i22 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r37 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r34 = virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        $r35 = (java.util.ArrayList) $r34;

        r1 = staticinvoke <com.android.server.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,java.lang.String,int,java.util.ArrayList)>(r40, r6, $i22, $r35);

        $l21 = r8.<com.android.server.AppOpsService$Op: long time>;

        $b23 = $l21 cmp 0L;

        if $b23 != 0 goto label06;

        $l24 = r8.<com.android.server.AppOpsService$Op: long rejectTime>;

        $b25 = $l24 cmp 0L;

        if $b25 != 0 goto label06;

        virtualinvoke r7.<com.android.server.AppOpsService$Ops: void removeAt(int)>(i2);

     label06:
        i2 = i2 + -1;

        goto label05;

     label07:
        $i11 = virtualinvoke r7.<com.android.server.AppOpsService$Ops: int size()>();

        if $i11 != 0 goto label08;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label08:
        goto label04;

     label09:
        $i10 = virtualinvoke r3.<java.util.HashMap: int size()>();

        if $i10 != 0 goto label10;

        $r27 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r27.<android.util.SparseArray: void removeAt(int)>(i1);

     label10:
        i1 = i1 + -1;

        goto label02;

     label11:
        if z0 == 0 goto label12;

        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteNowLocked()>();

     label12:
        exitmonitor r2;

     label13:
        goto label16;

     label14:
        $r38 := @caughtexception;

        r9 = $r38;

        exitmonitor r2;

     label15:
        throw r9;

     label16:
        if r1 == null goto label24;

        $r13 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();

        r41 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r14 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.util.Map$Entry) $r14;

        $r16 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getKey()>();

        r43 = (com.android.server.AppOpsService$Callback) $r16;

        $r15 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getValue()>();

        r44 = (java.util.ArrayList) $r15;

        i26 = 0;

     label18:
        $i5 = virtualinvoke r44.<java.util.ArrayList: int size()>();

        if i26 >= $i5 goto label23;

        $r17 = virtualinvoke r44.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r45 = (android.util.Pair) $r17;

     label19:
        $r22 = r43.<com.android.server.AppOpsService$Callback: com.android.internal.app.IAppOpsCallback mCallback>;

        $r19 = r45.<android.util.Pair: java.lang.Object second>;

        $r18 = (java.lang.Integer) $r19;

        $i6 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $r20 = r45.<android.util.Pair: java.lang.Object first>;

        $r21 = (java.lang.String) $r20;

        interfaceinvoke $r22.<com.android.internal.app.IAppOpsCallback: void opChanged(int,java.lang.String)>($i6, $r21);

     label20:
        goto label22;

     label21:
        $r39 := @caughtexception;

     label22:
        i26 = i26 + 1;

        goto label18;

     label23:
        goto label17;

     label24:
        return;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch android.os.RemoteException from label19 to label20 with label21;
    }

    public void startWatchingMode(int, java.lang.String, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.AppOpsService r0, r3;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.app.IAppOpsCallback r2;
        com.android.server.AppOpsService$Callback r4, $r19;
        java.util.ArrayList r5, $r13, $r18, r25;
        java.lang.Throwable r6, $r23;
        android.util.ArrayMap $r8, $r11, $r15, $r22;
        android.os.IBinder $r9, $r21;
        java.lang.Object $r10, $r12, $r16;
        android.util.SparseArray $r17, $r20;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.IAppOpsCallback;

        r3 = r0;

        entermonitor r0;

     label01:
        i1 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        $r8 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r9 = interfaceinvoke r2.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r10 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r4 = (com.android.server.AppOpsService$Callback) $r10;

        if r4 != null goto label02;

        $r19 = new com.android.server.AppOpsService$Callback;

        specialinvoke $r19.<com.android.server.AppOpsService$Callback: void <init>(com.android.server.AppOpsService,com.android.internal.app.IAppOpsCallback)>(r0, r2);

        r4 = $r19;

        $r22 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r21 = interfaceinvoke r2.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r4);

     label02:
        if i1 == -1 goto label04;

        $r17 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r16 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (java.util.ArrayList) $r16;

        if r5 != null goto label03;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r5 = $r18;

        $r20 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke $r20.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r5);

     label03:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label04:
        if r1 == null goto label06;

        $r11 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r25 = (java.util.ArrayList) $r12;

        if r25 != null goto label05;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r25 = $r13;

        $r15 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r25);

     label05:
        virtualinvoke r25.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r3;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void stopWatchingMode(com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.AppOpsService r0, r2;
        com.android.internal.app.IAppOpsCallback r1;
        com.android.server.AppOpsService$Callback r3;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.util.ArrayList r4, r20;
        java.lang.Throwable r5, $r18;
        android.util.ArrayMap $r7, $r11, $r13, $r15;
        android.os.IBinder $r8;
        java.lang.Object $r9, $r12, $r16;
        android.util.SparseArray $r10, $r17, $r19;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.internal.app.IAppOpsCallback;

        r2 = r0;

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r8 = interfaceinvoke r1.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r8);

        r3 = (com.android.server.AppOpsService$Callback) $r9;

        if r3 == null goto label07;

        virtualinvoke r3.<com.android.server.AppOpsService$Callback: void unlinkToDeath()>();

        $r10 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i1 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        i0 = $i1 - 1;

     label02:
        if i0 < 0 goto label04;

        $r17 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r16 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (java.util.ArrayList) $r16;

        virtualinvoke r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $i4 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i4 > 0 goto label03;

        $r19 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke $r19.<android.util.SparseArray: void removeAt(int)>(i0);

     label03:
        i0 = i0 + -1;

        goto label02;

     label04:
        $r11 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i2 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        i5 = $i2 - 1;

     label05:
        if i5 < 0 goto label07;

        $r13 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r12 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r20 = (java.util.ArrayList) $r12;

        virtualinvoke r20.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $i3 = virtualinvoke r20.<java.util.ArrayList: int size()>();

        if $i3 > 0 goto label06;

        $r15 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i5);

     label06:
        i5 = i5 + -1;

        goto label05;

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.os.IBinder getToken(android.os.IBinder)
    {
        com.android.server.AppOpsService r0, r2;
        android.os.IBinder r1;
        com.android.server.AppOpsService$ClientState r3, $r8;
        java.lang.Throwable r4, $r11;
        android.util.ArrayMap $r6, $r9;
        java.lang.Object $r7;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.AppOpsService$ClientState) $r7;

        if r3 != null goto label2;

        $r8 = new com.android.server.AppOpsService$ClientState;

        specialinvoke $r8.<com.android.server.AppOpsService$ClientState: void <init>(com.android.server.AppOpsService,android.os.IBinder)>(r0, r1);

        r3 = $r8;

        $r9 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label2:
        exitmonitor r2;

     label3:
        return r3;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int checkOperation(int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r2;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r1;
        com.android.server.AppOpsService$Op r3;
        java.lang.Throwable r4, $r6;
        boolean $z0;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = specialinvoke r0.<com.android.server.AppOpsService: boolean isOpRestricted(int,int,java.lang.String)>(i1, i0, r1);

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return 1;

     label3:
        $i2 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(int,int,java.lang.String,boolean)>($i2, i1, r1, 0);

        if r3 != null goto label5;

        $i4 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>(i0);

        exitmonitor r2;

     label4:
        return $i4;

     label5:
        $i3 = r3.<com.android.server.AppOpsService$Op: int mode>;

        exitmonitor r2;

     label6:
        return $i3;

     label7:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int checkAudioOperation(int, int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r2;
        int i0, i1, i2, i3, $i4;
        java.lang.String r1;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        i3 = specialinvoke r0.<com.android.server.AppOpsService: int checkRestrictionLocked(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        if i3 == 0 goto label3;

        exitmonitor r2;

     label2:
        return i3;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $i4 = virtualinvoke r0.<com.android.server.AppOpsService: int checkOperation(int,int,java.lang.String)>(i0, i2, r1);

        return $i4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int checkRestrictionLocked(int, int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        android.util.SparseArray r2, $r4;
        com.android.server.AppOpsService$Restriction r3;
        java.lang.Object $r5, $r6;
        android.util.ArraySet $r7;
        boolean $z0;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r4 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.SparseArray) $r5;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.AppOpsService$Restriction) $r6;

        if r3 == null goto label1;

        $r7 = r3.<com.android.server.AppOpsService$Restriction: android.util.ArraySet exceptionPackages>;

        $z0 = virtualinvoke $r7.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $i3 = r3.<com.android.server.AppOpsService$Restriction: int mode>;

        return $i3;

     label1:
        return 0;
    }

    public void setAudioRestriction(int, int, int, int, java.lang.String[])
    {
        com.android.server.AppOpsService r0, r2;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String[] r1;
        android.util.SparseArray r3, $r8, $r14, $r15;
        com.android.server.AppOpsService$Restriction r4, $r10;
        java.lang.String r5, $r13;
        java.lang.Throwable r6, $r16;
        java.lang.Object $r9;
        android.util.ArraySet $r11, $r12;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.String[];

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i2);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r2 = r0;

        entermonitor r0;

     label01:
        $r8 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.util.SparseArray) $r9;

        if r3 != null goto label02;

        $r15 = new android.util.SparseArray;

        specialinvoke $r15.<android.util.SparseArray: void <init>()>();

        r3 = $r15;

        $r14 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

     label02:
        virtualinvoke r3.<android.util.SparseArray: void remove(int)>(i1);

        if i3 == 0 goto label06;

        $r10 = new com.android.server.AppOpsService$Restriction;

        specialinvoke $r10.<com.android.server.AppOpsService$Restriction: void <init>(com.android.server.AppOpsService$1)>(null);

        r4 = $r10;

        r4.<com.android.server.AppOpsService$Restriction: int mode> = i3;

        if r1 == null goto label05;

        i4 = lengthof r1;

        $r12 = new android.util.ArraySet;

        specialinvoke $r12.<android.util.ArraySet: void <init>(int)>(i4);

        r4.<com.android.server.AppOpsService$Restriction: android.util.ArraySet exceptionPackages> = $r12;

        i5 = 0;

     label03:
        if i5 >= i4 goto label05;

        r5 = r1[i5];

        if r5 == null goto label04;

        $r11 = r4.<com.android.server.AppOpsService$Restriction: android.util.ArraySet exceptionPackages>;

        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r11.<android.util.ArraySet: boolean add(java.lang.Object)>($r13);

     label04:
        i5 = i5 + 1;

        goto label03;

     label05:
        virtualinvoke r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r4);

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r2;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public int checkPackage(int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r2;
        int i0;
        java.lang.String r1;
        java.lang.Throwable r3, $r6;
        com.android.server.AppOpsService$Ops $r5;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsRawLocked(int,java.lang.String,boolean)>(i0, r1, 1);

        if $r5 == null goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        exitmonitor r2;

     label4:
        return 2;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int noteOperation(int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r2;
        int i0, i1, i2, $i3, $i5, $i7, $i8;
        java.lang.String r1, $r20;
        com.android.server.AppOpsService$Ops r3;
        com.android.server.AppOpsService$Op r4, r5, $r9;
        java.lang.Throwable r6, $r21;
        boolean $z0;
        long $l4, $l6, $l9;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r2 = r0;

        entermonitor r0;

     label01:
        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i1, r1, 1);

        if r3 != null goto label03;

        exitmonitor r2;

     label02:
        return 2;

     label03:
        r4 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r3, i0, 1);

        $z0 = specialinvoke r0.<com.android.server.AppOpsService: boolean isOpRestricted(int,int,java.lang.String)>(i1, i0, r1);

        if $z0 == 0 goto label05;

        exitmonitor r2;

     label04:
        return 1;

     label05:
        $i3 = r4.<com.android.server.AppOpsService$Op: int duration>;

        if $i3 != -1 goto label06;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Noting op not finished: uid ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $l9 = r4.<com.android.server.AppOpsService$Op: long time>;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration=");

        $i8 = r4.<com.android.server.AppOpsService$Op: int duration>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r20);

     label06:
        r4.<com.android.server.AppOpsService$Op: int duration> = 0;

        i2 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        if i2 == i0 goto label07;

        $r9 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r3, i2, 1);

        goto label08;

     label07:
        $r9 = r4;

     label08:
        r5 = $r9;

        $i5 = r5.<com.android.server.AppOpsService$Op: int mode>;

        if $i5 == 0 goto label10;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4.<com.android.server.AppOpsService$Op: long rejectTime> = $l6;

        $i7 = r5.<com.android.server.AppOpsService$Op: int mode>;

        exitmonitor r2;

     label09:
        return $i7;

     label10:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4.<com.android.server.AppOpsService$Op: long time> = $l4;

        r4.<com.android.server.AppOpsService$Op: long rejectTime> = 0L;

        exitmonitor r2;

     label11:
        return 0;

     label12:
        $r21 := @caughtexception;

        r6 = $r21;

        exitmonitor r2;

     label13:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public int startOperation(android.os.IBinder, int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r4;
        android.os.IBinder r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i9;
        java.lang.String r2;
        com.android.server.AppOpsService$ClientState r3;
        com.android.server.AppOpsService$Ops r5;
        com.android.server.AppOpsService$Op r6, r7, $r12;
        java.lang.Throwable r8, $r13;
        boolean $z0;
        java.util.ArrayList $r10, $r11;
        long $l7, $l8;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r3 = (com.android.server.AppOpsService$ClientState) r1;

        r4 = r0;

        entermonitor r0;

     label01:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i1, r2, 1);

        if r5 != null goto label03;

        exitmonitor r4;

     label02:
        return 2;

     label03:
        r6 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r5, i0, 1);

        $z0 = specialinvoke r0.<com.android.server.AppOpsService: boolean isOpRestricted(int,int,java.lang.String)>(i1, i0, r2);

        if $z0 == 0 goto label05;

        exitmonitor r4;

     label04:
        return 1;

     label05:
        i2 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        if i2 == i0 goto label06;

        $r12 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r5, i2, 1);

        goto label07;

     label06:
        $r12 = r6;

     label07:
        r7 = $r12;

        $i3 = r7.<com.android.server.AppOpsService$Op: int mode>;

        if $i3 == 0 goto label09;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r6.<com.android.server.AppOpsService$Op: long rejectTime> = $l8;

        $i9 = r7.<com.android.server.AppOpsService$Op: int mode>;

        exitmonitor r4;

     label08:
        return $i9;

     label09:
        $i5 = r6.<com.android.server.AppOpsService$Op: int nesting>;

        if $i5 != 0 goto label10;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r6.<com.android.server.AppOpsService$Op: long time> = $l7;

        r6.<com.android.server.AppOpsService$Op: long rejectTime> = 0L;

        r6.<com.android.server.AppOpsService$Op: int duration> = -1;

     label10:
        $i4 = r6.<com.android.server.AppOpsService$Op: int nesting>;

        $i6 = $i4 + 1;

        r6.<com.android.server.AppOpsService$Op: int nesting> = $i6;

        $r10 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        if $r10 == null goto label11;

        $r11 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label11:
        exitmonitor r4;

     label12:
        return 0;

     label13:
        $r13 := @caughtexception;

        r8 = $r13;

        exitmonitor r4;

     label14:
        throw r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label08 with label13;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void finishOperation(android.os.IBinder, int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r4;
        android.os.IBinder r1;
        int i0, i1, $i2, $i3;
        java.lang.String r2, $r14, $r19;
        com.android.server.AppOpsService$ClientState r3;
        com.android.server.AppOpsService$Op r5;
        java.lang.Throwable r6, $r20;
        java.util.ArrayList $r8, $r9;
        boolean $z0;
        java.lang.IllegalStateException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r18;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r3 = (com.android.server.AppOpsService$ClientState) r1;

        r4 = r0;

        entermonitor r0;

     label1:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(int,int,java.lang.String,boolean)>(i0, i1, r2, 1);

        if r5 != null goto label3;

        exitmonitor r4;

     label2:
        return;

     label3:
        $r8 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        if $r8 == null goto label4;

        $r9 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $z0 = virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        if $z0 != 0 goto label4;

        $r10 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not started: uid");

        $i2 = r5.<com.android.server.AppOpsService$Op: int uid>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r14 = r5.<com.android.server.AppOpsService$Op: java.lang.String packageName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op=");

        $i3 = r5.<com.android.server.AppOpsService$Op: int op>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r10;

     label4:
        virtualinvoke r0.<com.android.server.AppOpsService: void finishOperationLocked(com.android.server.AppOpsService$Op)>(r5);

        exitmonitor r4;

     label5:
        goto label8;

     label6:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r4;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void finishOperationLocked(com.android.server.AppOpsService$Op)
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Op r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i12, $i16;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r6, $r16;
        long $l6, $l10, $l11, $l13, $l14, $l15, $l17;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Op;

        $i0 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        if $i0 > 1 goto label3;

        $i3 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        if $i3 != 1 goto label1;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l10 = r1.<com.android.server.AppOpsService$Op: long time>;

        $l13 = $l11 - $l10;

        $i12 = (int) $l13;

        r1.<com.android.server.AppOpsService$Op: int duration> = $i12;

        $l14 = r1.<com.android.server.AppOpsService$Op: long time>;

        $i16 = r1.<com.android.server.AppOpsService$Op: int duration>;

        $l17 = (long) $i16;

        $l15 = $l14 + $l17;

        r1.<com.android.server.AppOpsService$Op: long time> = $l15;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finishing op nesting under-run: uid ");

        $i4 = r1.<com.android.server.AppOpsService$Op: int uid>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        $r6 = r1.<com.android.server.AppOpsService$Op: java.lang.String packageName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code ");

        $i5 = r1.<com.android.server.AppOpsService$Op: int op>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $l6 = r1.<com.android.server.AppOpsService$Op: long time>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration=");

        $i7 = r1.<com.android.server.AppOpsService$Op: int duration>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nesting=");

        $i8 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r16);

     label2:
        r1.<com.android.server.AppOpsService$Op: int nesting> = 0;

        goto label4;

     label3:
        $i1 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        $i2 = $i1 - 1;

        r1.<com.android.server.AppOpsService$Op: int nesting> = $i2;

     label4:
        return;
    }

    private void verifyIncomingUid(int)
    {
        com.android.server.AppOpsService r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r1;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 != $i3 goto label2;

        return;

     label2:
        $r1 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", $i4, $i5, null);

        return;
    }

    private void verifyIncomingOp(int)
    {
        com.android.server.AppOpsService r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 48 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad operation #");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private com.android.server.AppOpsService$Ops getOpsLocked(int, java.lang.String, boolean)
    {
        com.android.server.AppOpsService r0;
        int i0;
        java.lang.String r1;
        boolean z0;
        com.android.server.AppOpsService$Ops $r2;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if i0 != 0 goto label1;

        r1 = "root";

        goto label2;

     label1:
        if i0 != 2000 goto label2;

        r1 = "com.android.shell";

     label2:
        $r2 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsRawLocked(int,java.lang.String,boolean)>(i0, r1, z0);

        return $r2;
    }

    private com.android.server.AppOpsService$Ops getOpsRawLocked(int, java.lang.String, boolean)
    {
        com.android.server.AppOpsService r0;
        int i0, i2, $i3, $i4, $i5;
        java.lang.String r1, $r11, $r19;
        boolean z0, z1, $z2, $z3;
        java.util.HashMap r2, $r22;
        com.android.server.AppOpsService$Ops r3, $r9;
        long l1;
        android.content.pm.ApplicationInfo r4;
        java.lang.Throwable r5, $r23;
        android.util.SparseArray $r6, $r20;
        java.lang.Object $r7, $r8;
        android.content.pm.IPackageManager $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.os.RemoteException $r21, r24;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r6 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.HashMap) $r7;

        if r2 != null goto label02;

        if z0 != 0 goto label01;

        return null;

     label01:
        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        r2 = $r22;

        $r20 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r20.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label02:
        $r8 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.AppOpsService$Ops) $r8;

        if r3 != null goto label17;

        if z0 != 0 goto label03;

        return null;

     label03:
        z1 = 0;

        if i0 == 0 goto label16;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        i2 = -1;

     label05:
        $r10 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r4 = interfaceinvoke $r10.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, $i3);

        if r4 == null goto label08;

        i2 = r4.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = r4.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & 1073741824;

        if $i5 == 0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        z1 = $z3;

        goto label09;

     label08:
        $r11 = "media";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label09;

        i2 = 1013;

        z1 = 0;

     label09:
        goto label11;

     label10:
        $r21 := @caughtexception;

        r24 = $r21;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Could not contact PackageManager", r24);

     label11:
        if i2 == i0 goto label13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad call: specified package ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" under uid ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it is really ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r19);

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return null;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label16;

     label14:
        $r23 := @caughtexception;

        r5 = $r23;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

     label16:
        $r9 = new com.android.server.AppOpsService$Ops;

        specialinvoke $r9.<com.android.server.AppOpsService$Ops: void <init>(java.lang.String,int,boolean)>(r1, i0, z1);

        r3 = $r9;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label17:
        return r3;

        catch android.os.RemoteException from label05 to label09 with label10;
        catch java.lang.Throwable from label04 to label12 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void scheduleWriteLocked()
    {
        com.android.server.AppOpsService r0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.AppOpsService;

        $z0 = r0.<com.android.server.AppOpsService: boolean mWriteScheduled>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.AppOpsService: boolean mWriteScheduled> = 1;

        $r2 = r0.<com.android.server.AppOpsService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 1800000L);

     label1:
        return;
    }

    private void scheduleWriteNowLocked()
    {
        com.android.server.AppOpsService r0;
        boolean $z0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: com.android.server.AppOpsService;

        $z0 = r0.<com.android.server.AppOpsService: boolean mWriteScheduled>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.AppOpsService: boolean mWriteScheduled> = 1;

     label1:
        $r2 = r0.<com.android.server.AppOpsService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.server.AppOpsService: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private com.android.server.AppOpsService$Op getOpLocked(int, int, java.lang.String, boolean)
    {
        com.android.server.AppOpsService r0;
        int i0, i1;
        java.lang.String r1;
        boolean z0;
        com.android.server.AppOpsService$Ops r2;
        com.android.server.AppOpsService$Op $r3;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r2 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i1, r1, z0);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r2, i0, z0);

        return $r3;
    }

    private com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops, int, boolean)
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Ops r1;
        int i0, $i1;
        boolean z0;
        com.android.server.AppOpsService$Op r2, $r4;
        java.lang.Object $r3;
        java.lang.String $r5;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Ops;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.AppOpsService$Op) $r3;

        if r2 != null goto label2;

        if z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.android.server.AppOpsService$Op;

        $i1 = r1.<com.android.server.AppOpsService$Ops: int uid>;

        $r5 = r1.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        specialinvoke $r4.<com.android.server.AppOpsService$Op: void <init>(int,java.lang.String,int)>($i1, $r5, i0);

        r2 = $r4;

        virtualinvoke r1.<com.android.server.AppOpsService$Ops: void put(int,java.lang.Object)>(i0, r2);

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label3:
        return r2;
    }

    private boolean isOpRestricted(int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0, r3;
        int i0, i1, i2;
        java.lang.String r1;
        boolean[] r2;
        com.android.server.AppOpsService$Ops r4;
        java.lang.Throwable r5, $r9;
        android.util.SparseArray $r6;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r6 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpRestrictions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r2 = (boolean[]) $r7;

        if r2 == null goto label8;

        $z0 = r2[i1];

        if $z0 == 0 goto label8;

        $z1 = staticinvoke <android.app.AppOpsManager: boolean opAllowSystemBypassRestriction(int)>(i1);

        if $z1 == 0 goto label7;

        r3 = r0;

        entermonitor r0;

     label1:
        r4 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i0, r1, 1);

        if r4 == null goto label3;

        $z2 = r4.<com.android.server.AppOpsService$Ops: boolean isPrivileged>;

        if $z2 == 0 goto label3;

        exitmonitor r3;

     label2:
        return 0;

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r3;

     label6:
        throw r5;

     label7:
        return 1;

     label8:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void readState()
    {
        com.android.server.AppOpsService r0, r2;
        android.util.AtomicFile r1, $r11, $r13, $r32;
        java.io.FileInputStream r3;
        org.xmlpull.v1.XmlPullParser r5;
        int i0, i1, $i2, $i3, $i5, i13;
        java.lang.String r6, $r16, $r18, $r31, $r35, $r46, $r53, $r57, $r63, $r76;
        java.lang.Throwable r7, r9, r10, $r21, $r59, $r71;
        android.util.SparseArray $r14, $r24, $r29, $r47, $r54, $r65, $r72, $r74;
        boolean $z0, z1, z2;
        java.lang.StringBuilder $r15, $r17, $r19, $r26, $r27, $r28, $r33, $r34, $r36, $r37, $r40, $r41, $r42, $r43, $r44, $r45, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r75;
        java.lang.IllegalStateException $r20, $r67, r78;
        java.io.IOException $r22, $r25, $r48, $r49, $r50, $r51, $r52, $r55, $r73, r86;
        org.xmlpull.v1.XmlPullParserException $r23, r84;
        java.io.FileNotFoundException $r30;
        java.io.File $r38;
        java.lang.NumberFormatException $r39, r82;
        java.lang.NullPointerException $r61, r80;
        java.lang.IndexOutOfBoundsException $r69, r88;

        r0 := @this: com.android.server.AppOpsService;

        $r11 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        r1 = $r11;

        entermonitor $r11;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        $r13 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        r3 = virtualinvoke $r13.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        goto label07;

     label04:
        $r30 := @caughtexception;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing app ops ");

        $r32 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        $r38 = virtualinvoke $r32.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; starting empty");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AppOps", $r35);

        exitmonitor r2;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        z1 = 0;

     label08:
        r5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r3, null);

     label09:
        $i2 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 == 2 goto label10;

        if i0 == 1 goto label10;

        goto label09;

     label10:
        if i0 == 2 goto label11;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no start tag found");

        throw $r20;

     label11:
        i1 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label12:
        $i3 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>();

        i13 = $i3;

        if $i3 == 1 goto label17;

        if i13 != 3 goto label13;

        $i5 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i1 goto label17;

     label13:
        if i13 == 3 goto label12;

        if i13 != 4 goto label14;

        goto label12;

     label14:
        r6 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z0 == 0 goto label15;

        virtualinvoke r0.<com.android.server.AppOpsService: void readPackage(org.xmlpull.v1.XmlPullParser)>(r5);

        goto label16;

     label15:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <app-ops>: ");

        $r16 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r18);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label16:
        goto label12;

     label17:
        z2 = 1;

     label18:
        if z2 != 0 goto label19;

        $r14 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r14.<android.util.SparseArray: void clear()>();

     label19:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label20:
        goto label58;

     label21:
        $r49 := @caughtexception;

        goto label58;

     label22:
        $r67 := @caughtexception;

        r78 = $r67;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r78);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r63);

     label23:
        if z1 != 0 goto label24;

        $r72 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r72.<android.util.SparseArray: void clear()>();

     label24:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label25:
        goto label58;

     label26:
        $r55 := @caughtexception;

        goto label58;

     label27:
        $r61 := @caughtexception;

        r80 = $r61;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r80);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r57);

     label28:
        if z1 != 0 goto label29;

        $r65 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r65.<android.util.SparseArray: void clear()>();

     label29:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label30:
        goto label58;

     label31:
        $r50 := @caughtexception;

        goto label58;

     label32:
        $r39 := @caughtexception;

        r82 = $r39;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r82);

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r46);

     label33:
        if z1 != 0 goto label34;

        $r47 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r47.<android.util.SparseArray: void clear()>();

     label34:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label35:
        goto label58;

     label36:
        $r52 := @caughtexception;

        goto label58;

     label37:
        $r23 := @caughtexception;

        r84 = $r23;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r84);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r31);

     label38:
        if z1 != 0 goto label39;

        $r29 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r29.<android.util.SparseArray: void clear()>();

     label39:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label40:
        goto label58;

     label41:
        $r22 := @caughtexception;

        goto label58;

     label42:
        $r48 := @caughtexception;

        r86 = $r48;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r86);

        $r53 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r53);

     label43:
        if z1 != 0 goto label44;

        $r54 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r54.<android.util.SparseArray: void clear()>();

     label44:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label45:
        goto label58;

     label46:
        $r51 := @caughtexception;

        goto label58;

     label47:
        $r69 := @caughtexception;

        r88 = $r69;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r75 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r88);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r76);

     label48:
        if z1 != 0 goto label49;

        $r74 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r74.<android.util.SparseArray: void clear()>();

     label49:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label50:
        goto label58;

     label51:
        $r73 := @caughtexception;

        goto label58;

     label52:
        $r21 := @caughtexception;

        r7 = $r21;

     label53:
        if z1 != 0 goto label54;

        $r24 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r24.<android.util.SparseArray: void clear()>();

     label54:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label55:
        goto label57;

     label56:
        $r25 := @caughtexception;

     label57:
        throw r7;

     label58:
        exitmonitor r2;

     label59:
        goto label62;

     label60:
        $r59 := @caughtexception;

        r9 = $r59;

        exitmonitor r2;

     label61:
        throw r9;

     label62:
        exitmonitor r1;

     label63:
        goto label66;

     label64:
        $r71 := @caughtexception;

        r10 = $r71;

        exitmonitor r1;

     label65:
        throw r10;

     label66:
        return;

        catch java.io.FileNotFoundException from label02 to label03 with label04;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.IllegalStateException from label08 to label18 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.NullPointerException from label08 to label18 with label27;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.NumberFormatException from label08 to label18 with label32;
        catch java.io.IOException from label34 to label35 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label18 with label37;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.io.IOException from label08 to label18 with label42;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.lang.IndexOutOfBoundsException from label08 to label18 with label47;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.lang.Throwable from label08 to label18 with label52;
        catch java.lang.Throwable from label22 to label23 with label52;
        catch java.lang.Throwable from label27 to label28 with label52;
        catch java.lang.Throwable from label32 to label33 with label52;
        catch java.lang.Throwable from label37 to label38 with label52;
        catch java.lang.Throwable from label42 to label43 with label52;
        catch java.lang.Throwable from label47 to label48 with label52;
        catch java.io.IOException from label54 to label55 with label56;
        catch java.lang.Throwable from label52 to label53 with label52;
        catch java.lang.Throwable from label02 to label05 with label60;
        catch java.lang.Throwable from label07 to label59 with label60;
        catch java.lang.Throwable from label60 to label61 with label60;
        catch java.lang.Throwable from label01 to label06 with label64;
        catch java.lang.Throwable from label07 to label63 with label64;
        catch java.lang.Throwable from label64 to label65 with label64;
    }

    void readPackage(org.xmlpull.v1.XmlPullParser) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, $r6, $r8;
        int i0, i1, $i2, $i4;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label6;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("uid");

        if $z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.AppOpsService: void readUid(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <pkg>: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    void readUid(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r6, r8, r9, r10, $r13, $r17, $r18, $r19, r31;
        int i0, $i1, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i13, i14, i15;
        boolean z0, $z1, $z2;
        android.content.pm.IPackageManager r4, $r28;
        android.content.pm.ApplicationInfo r5;
        com.android.server.AppOpsService$Op r7, $r20;
        java.util.HashMap r11, $r25;
        com.android.server.AppOpsService$Ops r12, $r26;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.Object $r21, $r22;
        android.util.SparseArray $r23, $r27;
        long $l5, $l6;
        android.os.RemoteException $r29, r30;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "p");

        z0 = 0;

        if r3 != null goto label08;

     label01:
        r4 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        if r4 == null goto label05;

        $r28 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i11 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r5 = interfaceinvoke $r28.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r2, 0, $i11);

        if r5 == null goto label04;

        $i10 = r5.<android.content.pm.ApplicationInfo: int flags>;

        $i13 = $i10 & 1073741824;

        if $i13 == 0 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z0 = $z2;

     label04:
        goto label06;

     label05:
        return;

     label06:
        goto label09;

     label07:
        $r29 := @caughtexception;

        r30 = $r29;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Could not contact PackageManager", r30);

        goto label09;

     label08:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r3);

     label09:
        i14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label10:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i15 = $i1;

        if $i1 == 1 goto label21;

        if i15 != 3 goto label11;

        $i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i14 goto label21;

     label11:
        if i15 == 3 goto label10;

        if i15 != 4 goto label12;

        goto label10;

     label12:
        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("op");

        if $z1 == 0 goto label19;

        $r20 = new com.android.server.AppOpsService$Op;

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        specialinvoke $r20.<com.android.server.AppOpsService$Op: void <init>(int,java.lang.String,int)>(i0, r2, $i3);

        r7 = $r20;

        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

        if r8 == null goto label13;

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r8);

        r7.<com.android.server.AppOpsService$Op: int mode> = $i9;

     label13:
        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "t");

        if r9 == null goto label14;

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r9);

        r7.<com.android.server.AppOpsService$Op: long time> = $l6;

     label14:
        r31 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "r");

        if r31 == null goto label15;

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r31);

        r7.<com.android.server.AppOpsService$Op: long rejectTime> = $l5;

     label15:
        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "d");

        if r10 == null goto label16;

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r10);

        r7.<com.android.server.AppOpsService$Op: int duration> = $i7;

     label16:
        $r23 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r21 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (java.util.HashMap) $r21;

        if r11 != null goto label17;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r11 = $r25;

        $r27 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r27.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r11);

     label17:
        $r22 = virtualinvoke r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (com.android.server.AppOpsService$Ops) $r22;

        if r12 != null goto label18;

        $r26 = new com.android.server.AppOpsService$Ops;

        specialinvoke $r26.<com.android.server.AppOpsService$Ops: void <init>(java.lang.String,int,boolean)>(r2, i0, z0);

        r12 = $r26;

        virtualinvoke r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r12);

     label18:
        $i4 = r7.<com.android.server.AppOpsService$Op: int op>;

        virtualinvoke r12.<com.android.server.AppOpsService$Ops: void put(int,java.lang.Object)>($i4, r7);

        goto label20;

     label19:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <pkg>: ");

        $r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r18);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label20:
        goto label10;

     label21:
        return;

        catch android.os.RemoteException from label01 to label05 with label07;
    }

    void writeState()
    {
        com.android.server.AppOpsService r0, r7;
        android.util.AtomicFile r1, $r11, $r12, $r17, $r55;
        java.util.List r2, r57;
        java.io.FileOutputStream r3;
        java.io.IOException r4, $r49, $r51, r59;
        java.lang.String r5, $r19, $r22, $r23, $r26, $r32, $r34, $r36, $r39, $r40, $r43, $r54;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, i16;
        android.app.AppOpsManager$PackageOps r6;
        com.android.server.AppOpsService$Ops r8;
        java.lang.Throwable r9, r10, $r52, $r53;
        long l1, l17;
        com.android.internal.util.FastXmlSerializer $r13, r56;
        java.lang.Boolean $r14;
        java.lang.Object $r20, $r29;
        boolean $z0, $z1;
        byte $b11, $b12;
        java.lang.StringBuilder $r44, $r45, $r46;
        android.app.AppOpsManager$OpEntry r58;

        r0 := @this: com.android.server.AppOpsService;

        $r11 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        r1 = $r11;

        entermonitor $r11;

     label01:
        r2 = virtualinvoke r0.<com.android.server.AppOpsService: java.util.List getPackagesForOps(int[])>(null);

     label02:
        $r12 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        r3 = virtualinvoke $r12.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label03:
        goto label06;

     label04:
        $r49 := @caughtexception;

        r4 = $r49;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write state: ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r54 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r54);

        exitmonitor r1;

     label05:
        return;

     label06:
        $r13 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r13.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r56 = $r13;

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r3, "utf-8");

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r14);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "app-ops");

        if r2 == null goto label24;

        r5 = null;

        i0 = 0;

     label07:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i3 goto label23;

        $r20 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r6 = (android.app.AppOpsManager$PackageOps) $r20;

        $r19 = virtualinvoke r6.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label09;

        if r5 == null goto label08;

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label08:
        r5 = virtualinvoke r6.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", r5);

     label09:
        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uid");

        $i4 = virtualinvoke r6.<android.app.AppOpsManager$PackageOps: int getUid()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r22);

        r7 = r0;

        entermonitor r0;

     label10:
        $i5 = virtualinvoke r6.<android.app.AppOpsManager$PackageOps: int getUid()>();

        $r23 = virtualinvoke r6.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        r8 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>($i5, $r23, 0);

        if r8 == null goto label11;

        $z1 = r8.<com.android.server.AppOpsService$Ops: boolean isPrivileged>;

        $r40 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "p", $r40);

        goto label12;

     label11:
        $r26 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(0);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "p", $r26);

     label12:
        exitmonitor r7;

     label13:
        goto label16;

     label14:
        $r53 := @caughtexception;

        r9 = $r53;

        exitmonitor r7;

     label15:
        throw r9;

     label16:
        r57 = virtualinvoke r6.<android.app.AppOpsManager$PackageOps: java.util.List getOps()>();

        i16 = 0;

     label17:
        $i6 = interfaceinvoke r57.<java.util.List: int size()>();

        if i16 >= $i6 goto label22;

        $r29 = interfaceinvoke r57.<java.util.List: java.lang.Object get(int)>(i16);

        r58 = (android.app.AppOpsManager$OpEntry) $r29;

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "op");

        $i7 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r32);

        $i10 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $i9 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $i8 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i9);

        if $i10 == $i8 goto label18;

        $i13 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $r43 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r43);

     label18:
        l1 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: long getTime()>();

        $b12 = l1 cmp 0L;

        if $b12 == 0 goto label19;

        $r39 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "t", $r39);

     label19:
        l17 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: long getRejectTime()>();

        $b11 = l17 cmp 0L;

        if $b11 == 0 goto label20;

        $r34 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l17);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "r", $r34);

     label20:
        i2 = virtualinvoke r58.<android.app.AppOpsManager$OpEntry: int getDuration()>();

        if i2 == 0 goto label21;

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "d", $r36);

     label21:
        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "op");

        i16 = i16 + 1;

        goto label17;

     label22:
        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uid");

        i0 = i0 + 1;

        goto label07;

     label23:
        if r5 == null goto label24;

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label24:
        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "app-ops");

        interfaceinvoke r56.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r17 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        virtualinvoke $r17.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r3);

     label25:
        goto label27;

     label26:
        $r51 := @caughtexception;

        r59 = $r51;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Failed to write state, restoring backup.", r59);

        $r55 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        virtualinvoke $r55.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r3);

     label27:
        exitmonitor r1;

     label28:
        goto label31;

     label29:
        $r52 := @caughtexception;

        r10 = $r52;

        exitmonitor r1;

     label30:
        throw r10;

     label31:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.io.IOException from label06 to label25 with label26;
        catch java.lang.Throwable from label01 to label05 with label29;
        catch java.lang.Throwable from label06 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.AppOpsService r0, r4;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0, $l18, $l20, $l21, $l22, $l25, $l26, $l27;
        boolean z0, $z1, $z2, z3;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i23, $i24, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, i50, i51, i52, i53;
        java.util.ArrayList r5, $r37, $r38, $r39, $r47, r73;
        com.android.server.AppOpsService$Op r6, r80;
        com.android.server.AppOpsService$Restriction r7;
        android.content.Context $r8;
        java.lang.Throwable r9, $r67;
        android.util.SparseArray $r11, $r15, $r16, $r17, $r19, $r25, $r26, $r30, $r55, $r64, $r66, r76;
        android.util.ArrayMap $r12, $r13, $r14, $r34, $r41, $r43, $r45, $r49, $r51, $r53, $r54, $r57;
        java.util.Collection $r18;
        java.lang.Object $r20, $r22, $r24, $r28, $r31, $r32, $r40, $r42, $r48, $r50, $r52, $r56, $r58, $r59, $r62, $r63;
        java.lang.String $r21, $r23, $r27, $r33, $r44, $r46, $r60, $r65, $r68, r75;
        byte $b17, $b19;
        android.util.ArraySet $r29, $r35, $r36;
        java.lang.StringBuilder $r61, $r69, $r70, $r71, $r72;
        com.android.server.AppOpsService$ClientState r74;
        java.util.HashMap r77;
        java.util.Iterator r78;
        com.android.server.AppOpsService$Ops r79;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r8 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i6 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i6 == 0 goto label01;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ApOps service from from pid=");

        $i45 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i44 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i44);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r68);

        return;

     label01:
        r4 = r0;

        entermonitor r0;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Current AppOps Service state:");

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        z0 = 0;

        $r11 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i7 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        if $i7 <= 0 goto label06;

        z0 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Op mode watchers:");

        i1 = 0;

     label03:
        $r55 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i40 = virtualinvoke $r55.<android.util.SparseArray: int size()>();

        if i1 >= $i40 goto label06;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Op ");

        $r66 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i43 = virtualinvoke $r66.<android.util.SparseArray: int keyAt(int)>(i1);

        $r65 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i43);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r65);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r64 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r63 = virtualinvoke $r64.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r5 = (java.util.ArrayList) $r63;

        i2 = 0;

     label04:
        $i42 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i2 >= $i42 goto label05;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r62 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r62);

        i2 = i2 + 1;

        goto label04;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r12 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i8 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        if $i8 <= 0 goto label10;

        z0 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Package mode watchers:");

        i46 = 0;

     label07:
        $r51 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i38 = virtualinvoke $r51.<android.util.ArrayMap: int size()>();

        if i46 >= $i38 goto label10;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Pkg ");

        $r49 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r59 = virtualinvoke $r49.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i46);

        $r60 = (java.lang.String) $r59;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r60);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r57 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r58 = virtualinvoke $r57.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i46);

        r73 = (java.util.ArrayList) $r58;

        i47 = 0;

     label08:
        $i41 = virtualinvoke r73.<java.util.ArrayList: int size()>();

        if i47 >= $i41 goto label09;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i47);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r56 = virtualinvoke r73.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r56);

        i47 = i47 + 1;

        goto label08;

     label09:
        i46 = i46 + 1;

        goto label07;

     label10:
        $r13 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $i9 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        if $i9 <= 0 goto label12;

        z0 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  All mode watchers:");

        i48 = 0;

     label11:
        $r45 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $i39 = virtualinvoke $r45.<android.util.ArrayMap: int size()>();

        if i48 >= $i39 goto label12;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r54 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r52 = virtualinvoke $r54.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i48);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>($r52);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> ");

        $r53 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r50 = virtualinvoke $r53.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i48);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r50);

        i48 = i48 + 1;

        goto label11;

     label12:
        $r14 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $i10 = virtualinvoke $r14.<android.util.ArrayMap: int size()>();

        if $i10 <= 0 goto label16;

        z0 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Clients:");

        i49 = 0;

     label13:
        $r34 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $i32 = virtualinvoke $r34.<android.util.ArrayMap: int size()>();

        if i49 >= $i32 goto label16;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r41 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $r40 = virtualinvoke $r41.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i49);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>($r40);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r43 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $r42 = virtualinvoke $r43.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i49);

        r74 = (com.android.server.AppOpsService$ClientState) $r42;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r74);

        $r38 = r74.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        if $r38 == null goto label15;

        $r37 = r74.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $i34 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        if $i34 <= 0 goto label15;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Started ops:");

        i50 = 0;

     label14:
        $r39 = r74.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $i36 = virtualinvoke $r39.<java.util.ArrayList: int size()>();

        if i50 >= $i36 goto label15;

        $r47 = r74.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $r48 = virtualinvoke $r47.<java.util.ArrayList: java.lang.Object get(int)>(i50);

        r6 = (com.android.server.AppOpsService$Op) $r48;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("uid=");

        $i37 = r6.<com.android.server.AppOpsService$Op: int uid>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i37);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" pkg=");

        $r44 = r6.<com.android.server.AppOpsService$Op: java.lang.String packageName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r44);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" op=");

        $i35 = r6.<com.android.server.AppOpsService$Op: int op>;

        $r46 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i35);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r46);

        i50 = i50 + 1;

        goto label14;

     label15:
        i49 = i49 + 1;

        goto label13;

     label16:
        $r15 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        $i11 = virtualinvoke $r15.<android.util.SparseArray: int size()>();

        if $i11 <= 0 goto label23;

        z3 = 0;

        i51 = 0;

     label17:
        $r25 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        $i29 = virtualinvoke $r25.<android.util.SparseArray: int size()>();

        if i51 >= $i29 goto label23;

        $r26 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        $i28 = virtualinvoke $r26.<android.util.SparseArray: int keyAt(int)>(i51);

        r75 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i28);

        $r30 = r0.<com.android.server.AppOpsService: android.util.SparseArray mAudioRestrictions>;

        $r31 = virtualinvoke $r30.<android.util.SparseArray: java.lang.Object valueAt(int)>(i51);

        r76 = (android.util.SparseArray) $r31;

        i3 = 0;

     label18:
        $i31 = virtualinvoke r76.<android.util.SparseArray: int size()>();

        if i3 >= $i31 goto label22;

        if z3 != 0 goto label19;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Audio Restrictions:");

        z3 = 1;

        z0 = 1;

     label19:
        i4 = virtualinvoke r76.<android.util.SparseArray: int keyAt(int)>(i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r75);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" usage=");

        $r27 = staticinvoke <android.media.AudioAttributes: java.lang.String usageToString(int)>(i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        $r28 = virtualinvoke r76.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r7 = (com.android.server.AppOpsService$Restriction) $r28;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": mode=");

        $i30 = r7.<com.android.server.AppOpsService$Restriction: int mode>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i30);

        $r29 = r7.<com.android.server.AppOpsService$Restriction: android.util.ArraySet exceptionPackages>;

        $z2 = virtualinvoke $r29.<android.util.ArraySet: boolean isEmpty()>();

        if $z2 != 0 goto label21;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Exceptions:");

        i5 = 0;

     label20:
        $r35 = r7.<com.android.server.AppOpsService$Restriction: android.util.ArraySet exceptionPackages>;

        $i33 = virtualinvoke $r35.<android.util.ArraySet: int size()>();

        if i5 >= $i33 goto label21;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        $r36 = r7.<com.android.server.AppOpsService$Restriction: android.util.ArraySet exceptionPackages>;

        $r32 = virtualinvoke $r36.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        $r33 = (java.lang.String) $r32;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        i5 = i5 + 1;

        goto label20;

     label21:
        i3 = i3 + 1;

        goto label18;

     label22:
        i51 = i51 + 1;

        goto label17;

     label23:
        if z0 == 0 goto label24;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label24:
        i52 = 0;

     label25:
        $r16 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i13 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if i52 >= $i13 goto label34;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Uid ");

        $r17 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i12 = virtualinvoke $r17.<android.util.SparseArray: int keyAt(int)>(i52);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r2, $i12);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r19 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i52);

        r77 = (java.util.HashMap) $r20;

        $r18 = virtualinvoke r77.<java.util.HashMap: java.util.Collection values()>();

        r78 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label26:
        $z1 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label33;

        $r22 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r79 = (com.android.server.AppOpsService$Ops) $r22;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Package ");

        $r21 = r79.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        i53 = 0;

     label27:
        $i14 = virtualinvoke r79.<com.android.server.AppOpsService$Ops: int size()>();

        if i53 >= $i14 goto label32;

        $r24 = virtualinvoke r79.<com.android.server.AppOpsService$Ops: java.lang.Object valueAt(int)>(i53);

        r80 = (com.android.server.AppOpsService$Op) $r24;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $i16 = r80.<com.android.server.AppOpsService$Op: int op>;

        $r23 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i16);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": mode=");

        $i15 = r80.<com.android.server.AppOpsService$Op: int mode>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i15);

        $l20 = r80.<com.android.server.AppOpsService$Op: long time>;

        $b19 = $l20 cmp 0L;

        if $b19 == 0 goto label28;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; time=");

        $l26 = r80.<com.android.server.AppOpsService$Op: long time>;

        $l25 = l0 - $l26;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l25, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label28:
        $l18 = r80.<com.android.server.AppOpsService$Op: long rejectTime>;

        $b17 = $l18 cmp 0L;

        if $b17 == 0 goto label29;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; rejectTime=");

        $l21 = r80.<com.android.server.AppOpsService$Op: long rejectTime>;

        $l27 = l0 - $l21;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l27, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label29:
        $i24 = r80.<com.android.server.AppOpsService$Op: int duration>;

        if $i24 != -1 goto label30;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" (running)");

        goto label31;

     label30:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; duration=");

        $i23 = r80.<com.android.server.AppOpsService$Op: int duration>;

        $l22 = (long) $i23;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l22, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label31:
        i53 = i53 + 1;

        goto label27;

     label32:
        goto label26;

     label33:
        i52 = i52 + 1;

        goto label25;

     label34:
        exitmonitor r4;

     label35:
        goto label38;

     label36:
        $r67 := @caughtexception;

        r9 = $r67;

        exitmonitor r4;

     label37:
        throw r9;

     label38:
        return;

        catch java.lang.Throwable from label02 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    public void setUserRestrictions(android.os.Bundle, int) throws android.os.RemoteException
    {
        com.android.server.AppOpsService r0;
        android.os.Bundle r1;
        int i0, i1, $i2;
        boolean[] r2;
        java.lang.String r3;
        android.util.SparseArray $r4, $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.AppOpsService: void checkSystemUid(java.lang.String)>("setUserRestrictions");

        $r4 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpRestrictions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (boolean[]) $r5;

        if r2 != null goto label1;

        r2 = newarray (boolean)[48];

        $r6 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpRestrictions>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label1:
        i1 = 0;

     label2:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label5;

        r3 = staticinvoke <android.app.AppOpsManager: java.lang.String opToRestriction(int)>(i1);

        if r3 == null goto label3;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r3, 0);

        r2[i1] = $z0;

        goto label4;

     label3:
        r2[i1] = 0;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return;
    }

    public void removeUser(int) throws android.os.RemoteException
    {
        com.android.server.AppOpsService r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.AppOpsService: void checkSystemUid(java.lang.String)>("removeUser");

        $r1 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpRestrictions>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    private void checkSystemUid(java.lang.String)
    {
        com.android.server.AppOpsService r0;
        java.lang.String r1, $r6;
        int i0;
        java.lang.SecurityException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label1;

        $r2 = new java.lang.SecurityException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must by called by the system");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.AppOpsService: long WRITE_DELAY> = 1800000L;

        <com.android.server.AppOpsService: boolean DEBUG> = 0;

        <com.android.server.AppOpsService: java.lang.String TAG> = "AppOps";

        return;
    }
}
