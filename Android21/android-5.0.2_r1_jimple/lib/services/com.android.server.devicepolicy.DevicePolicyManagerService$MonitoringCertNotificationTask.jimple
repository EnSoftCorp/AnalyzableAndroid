class com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask extends android.os.AsyncTask
{
    final com.android.server.devicepolicy.DevicePolicyManagerService this$0;

    private void <init>(com.android.server.devicepolicy.DevicePolicyManagerService)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask r0;
        com.android.server.devicepolicy.DevicePolicyManagerService r1;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask;

        r1 := @parameter0: com.android.server.devicepolicy.DevicePolicyManagerService;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Void doInBackground(android.content.Intent[])
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask r0;
        android.content.Intent[] r1;
        int i0;
        java.util.Iterator r2;
        android.content.pm.UserInfo r3;
        android.content.Intent $r4;
        android.os.UserHandle $r5, $r10;
        com.android.server.devicepolicy.DevicePolicyManagerService $r6;
        android.os.UserManager $r7;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask;

        r1 := @parameter0: android.content.Intent[];

        $r4 = r1[0];

        i0 = virtualinvoke $r4.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.user_handle", -1);

        if i0 != -1 goto label3;

        $r6 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r7 = $r6.<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserManager mUserManager>;

        $r8 = virtualinvoke $r7.<android.os.UserManager: java.util.List getUsers()>();

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.UserInfo) $r9;

        $r10 = virtualinvoke r3.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: void manageNotification(android.os.UserHandle)>($r10);

        goto label1;

     label2:
        goto label4;

     label3:
        $r5 = new android.os.UserHandle;

        specialinvoke $r5.<android.os.UserHandle: void <init>(int)>(i0);

        specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: void manageNotification(android.os.UserHandle)>($r5);

     label4:
        return null;
    }

    private void manageNotification(android.os.UserHandle)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask r0;
        android.os.UserHandle r1;
        boolean z0, $z1, $z2;
        long l0;
        android.security.KeyChain$KeyChainConnection r2;
        android.os.RemoteException r3, $r58;
        java.lang.Throwable r4, r5, $r49, $r57;
        android.app.PendingIntent r6;
        android.content.Context r7, $r11, $r18, $r24, $r25, $r31, $r39, $r44;
        android.content.pm.PackageManager$NameNotFoundException r8, $r47;
        com.android.server.devicepolicy.DevicePolicyManagerService $r9, $r12, $r16, $r17, $r21, $r23, $r27, $r34, $r40, $r42, $r43;
        android.os.UserManager $r10;
        android.security.IKeyChainService $r13;
        java.util.List $r14;
        android.content.pm.ParceledListSlice $r15;
        android.content.Intent $r20, r63;
        android.app.Notification$Builder $r26, $r28, $r29, $r30, $r33, $r35, $r36, $r37;
        java.lang.String $r32, $r55, r61, r62;
        int $i1, i5;
        android.content.res.Resources $r38;
        android.app.NotificationManager $r41, $r48;
        java.lang.Object[] $r45;
        java.lang.StringBuilder $r46, $r52, $r53, $r54;
        java.lang.InterruptedException $r50;
        java.lang.Thread $r51;
        java.lang.RuntimeException $r56, r60;
        android.app.Notification r64;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask;

        r1 := @parameter0: android.os.UserHandle;

        $r9 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r10 = $r9.<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserManager mUserManager>;

        $z1 = virtualinvoke $r10.<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)>(r1);

        if $z1 != 0 goto label01;

        return;

     label01:
        z0 = 0;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r11 = $r12.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        r2 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bindAsUser(android.content.Context,android.os.UserHandle)>($r11, r1);

     label03:
        $r13 = virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        $r15 = interfaceinvoke $r13.<android.security.IKeyChainService: android.content.pm.ParceledListSlice getUserCaAliases()>();

        $r14 = virtualinvoke $r15.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $z2 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label04;

        z0 = 1;

     label04:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        goto label09;

     label05:
        $r58 := @caughtexception;

        r3 = $r58;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManagerService", "Could not connect to KeyChain service", r3);

     label06:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        goto label09;

     label07:
        $r57 := @caughtexception;

        r4 = $r57;

     label08:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        throw r4;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label16;

     label10:
        $r50 := @caughtexception;

        $r51 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r51.<java.lang.Thread: void interrupt()>();

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label16;

     label12:
        $r56 := @caughtexception;

        r60 = $r56;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManagerService", "Could not connect to KeyChain service", r60);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label16;

     label14:
        $r49 := @caughtexception;

        r5 = $r49;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label16:
        if z0 != 0 goto label17;

        $r43 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r48 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.app.NotificationManager access$600(com.android.server.devicepolicy.DevicePolicyManagerService)>($r43);

        virtualinvoke $r48.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 17039584, r1);

        return;

     label17:
        $r16 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        r61 = virtualinvoke $r16.<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwnerName()>();

        if r61 == null goto label18;

        $r40 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r44 = $r40.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        $r45 = newarray (java.lang.Object)[1];

        $r45[0] = r61;

        r62 = virtualinvoke $r44.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039586, $r45);

        i5 = 17303157;

        goto label19;

     label18:
        $r17 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r18 = $r17.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        r62 = virtualinvoke $r18.<android.content.Context: java.lang.String getString(int)>(17039585);

        i5 = 17301642;

     label19:
        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("com.android.settings.MONITORING_CERT_INFO");

        r63 = $r20;

        virtualinvoke r63.<android.content.Intent: android.content.Intent setFlags(int)>(268468224);

        virtualinvoke r63.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.settings");

        $r21 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r25 = $r21.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r25, 0, r63, 134217728, null, r1);

     label20:
        $r23 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r24 = $r23.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        r7 = virtualinvoke $r24.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>("android", 0, r1);

     label21:
        goto label23;

     label22:
        $r47 := @caughtexception;

        r8 = $r47;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create context as ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyManagerService", $r55, r8);

        return;

     label23:
        $r28 = new android.app.Notification$Builder;

        specialinvoke $r28.<android.app.Notification$Builder: void <init>(android.content.Context)>(r7);

        $r26 = virtualinvoke $r28.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(i5);

        $r27 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r31 = $r27.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        $r32 = virtualinvoke $r31.<android.content.Context: java.lang.String getString(int)>(17039584);

        $r29 = virtualinvoke $r26.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>($r32);

        $r30 = virtualinvoke $r29.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r62);

        $r35 = virtualinvoke $r30.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>(r6);

        $r36 = virtualinvoke $r35.<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)>(1);

        $r33 = virtualinvoke $r36.<android.app.Notification$Builder: android.app.Notification$Builder setShowWhen(boolean)>(0);

        $r34 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r39 = $r34.<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Context mContext>;

        $r38 = virtualinvoke $r39.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r38.<android.content.res.Resources: int getColor(int)>(17170520);

        $r37 = virtualinvoke $r33.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i1);

        r64 = virtualinvoke $r37.<android.app.Notification$Builder: android.app.Notification build()>();

        $r42 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: com.android.server.devicepolicy.DevicePolicyManagerService this$0>;

        $r41 = staticinvoke <com.android.server.devicepolicy.DevicePolicyManagerService: android.app.NotificationManager access$600(com.android.server.devicepolicy.DevicePolicyManagerService)>($r42);

        virtualinvoke $r41.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 17039584, r64, r1);

        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.InterruptedException from label02 to label09 with label10;
        catch java.lang.RuntimeException from label02 to label09 with label12;
        catch java.lang.Throwable from label02 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label22;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask r0;
        java.lang.Object[] r1;
        android.content.Intent[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (android.content.Intent[]) r1;

        $r3 = virtualinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: java.lang.Void doInBackground(android.content.Intent[])>($r2);

        return $r3;
    }

    void <init>(com.android.server.devicepolicy.DevicePolicyManagerService, com.android.server.devicepolicy.DevicePolicyManagerService$1)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask r0;
        com.android.server.devicepolicy.DevicePolicyManagerService r1;
        com.android.server.devicepolicy.DevicePolicyManagerService$1 r2;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask;

        r1 := @parameter0: com.android.server.devicepolicy.DevicePolicyManagerService;

        r2 := @parameter1: com.android.server.devicepolicy.DevicePolicyManagerService$1;

        specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask: void <init>(com.android.server.devicepolicy.DevicePolicyManagerService)>(r1);

        return;
    }
}
