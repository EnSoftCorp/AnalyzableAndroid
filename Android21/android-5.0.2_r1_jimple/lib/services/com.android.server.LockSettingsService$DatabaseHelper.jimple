class com.android.server.LockSettingsService$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String TAG;
    private static final java.lang.String DATABASE_NAME;
    private static final int DATABASE_VERSION;
    final com.android.server.LockSettingsService this$0;

    public void <init>(com.android.server.LockSettingsService, android.content.Context)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        com.android.server.LockSettingsService r1;
        android.content.Context r2;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: com.android.server.LockSettingsService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.LockSettingsService$DatabaseHelper: com.android.server.LockSettingsService this$0> = r1;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r2, "locksettings.db", null, 2);

        virtualinvoke r0.<com.android.server.LockSettingsService$DatabaseHelper: void setWriteAheadLoggingEnabled(boolean)>(1);

        return;
    }

    private void createTable(android.database.sqlite.SQLiteDatabase)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE locksettings (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,user INTEGER,value TEXT);");

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<com.android.server.LockSettingsService$DatabaseHelper: void createTable(android.database.sqlite.SQLiteDatabase)>(r1);

        specialinvoke r0.<com.android.server.LockSettingsService$DatabaseHelper: void initializeDefaults(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    private void initializeDefaults(android.database.sqlite.SQLiteDatabase)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        boolean z0;
        com.android.server.LockSettingsService $r2;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.lockscreen.disable.default", 0);

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.server.LockSettingsService$DatabaseHelper: com.android.server.LockSettingsService this$0>;

        staticinvoke <com.android.server.LockSettingsService: void access$200(com.android.server.LockSettingsService,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,int)>($r2, r1, "lockscreen.disabled", "1", 0);

     label1:
        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1, i2;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0;

        if i2 != 1 goto label1;

        specialinvoke r0.<com.android.server.LockSettingsService$DatabaseHelper: void maybeEnableWidgetSettingForUsers(android.database.sqlite.SQLiteDatabase)>(r1);

        i2 = 2;

     label1:
        if i2 == 2 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LockSettingsDB", "Failed to upgrade database!");

     label2:
        return;
    }

    private void maybeEnableWidgetSettingForUsers(android.database.sqlite.SQLiteDatabase)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.os.UserManager r2;
        java.util.List r4;
        int i0, i1, $i2;
        boolean z0;
        com.android.server.LockSettingsService $r5, $r8, $r13, $r21;
        android.content.Context $r6, $r9;
        java.lang.Object $r7, $r11;
        android.content.pm.UserInfo $r10;
        com.android.internal.widget.LockPatternUtils $r12, $r20;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        int[] $r23;
        java.lang.String $r24;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r5 = r0.<com.android.server.LockSettingsService$DatabaseHelper: com.android.server.LockSettingsService this$0>;

        $r6 = staticinvoke <com.android.server.LockSettingsService: android.content.Context access$000(com.android.server.LockSettingsService)>($r5);

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        r2 = (android.os.UserManager) $r7;

        $r8 = r0.<com.android.server.LockSettingsService$DatabaseHelper: com.android.server.LockSettingsService this$0>;

        $r9 = staticinvoke <com.android.server.LockSettingsService: android.content.Context access$000(com.android.server.LockSettingsService)>($r8);

        virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke r2.<android.os.UserManager: java.util.List getUsers()>();

        i0 = 0;

     label1:
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if i0 >= $i2 goto label2;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (android.content.pm.UserInfo) $r11;

        i1 = $r10.<android.content.pm.UserInfo: int id>;

        $r13 = r0.<com.android.server.LockSettingsService$DatabaseHelper: com.android.server.LockSettingsService this$0>;

        $r12 = staticinvoke <com.android.server.LockSettingsService: com.android.internal.widget.LockPatternUtils access$300(com.android.server.LockSettingsService)>($r13);

        z0 = virtualinvoke $r12.<com.android.internal.widget.LockPatternUtils: boolean hasWidgetsEnabledInKeyguard(int)>(i1);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Widget upgrade uid=");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", enabled=");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", w[]=");

        $r21 = r0.<com.android.server.LockSettingsService$DatabaseHelper: com.android.server.LockSettingsService this$0>;

        $r20 = staticinvoke <com.android.server.LockSettingsService: com.android.internal.widget.LockPatternUtils access$300(com.android.server.LockSettingsService)>($r21);

        $r23 = virtualinvoke $r20.<com.android.internal.widget.LockPatternUtils: int[] getAppWidgets()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LockSettingsDB", $r24);

        specialinvoke r0.<com.android.server.LockSettingsService$DatabaseHelper: void loadSetting(android.database.sqlite.SQLiteDatabase,java.lang.String,int,boolean)>(r1, "lockscreen.widgets_enabled", i1, z0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void loadSetting(android.database.sqlite.SQLiteDatabase, java.lang.String, int, boolean)
    {
        com.android.server.LockSettingsService$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2;
        int i0;
        boolean z0;
        android.database.sqlite.SQLiteStatement r3;
        java.lang.Throwable r4, $r5;
        long $l1, $l2;

        r0 := @this: com.android.server.LockSettingsService$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 = null;

     label1:
        r3 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>("INSERT OR REPLACE INTO locksettings(name,user,value) VALUES(?,?,?);");

        virtualinvoke r3.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, r2);

        $l1 = (long) i0;

        virtualinvoke r3.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(2, $l1);

        if z0 == 0 goto label2;

        $l2 = 1L;

        goto label3;

     label2:
        $l2 = 0L;

     label3:
        virtualinvoke r3.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(3, $l2);

        virtualinvoke r3.<android.database.sqlite.SQLiteStatement: void execute()>();

     label4:
        if r3 == null goto label8;

        virtualinvoke r3.<android.database.sqlite.SQLiteStatement: void close()>();

        goto label8;

     label5:
        $r5 := @caughtexception;

        r4 = $r5;

     label6:
        if r3 == null goto label7;

        virtualinvoke r3.<android.database.sqlite.SQLiteStatement: void close()>();

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.LockSettingsService$DatabaseHelper: int DATABASE_VERSION> = 2;

        <com.android.server.LockSettingsService$DatabaseHelper: java.lang.String DATABASE_NAME> = "locksettings.db";

        <com.android.server.LockSettingsService$DatabaseHelper: java.lang.String TAG> = "LockSettingsDB";

        return;
    }
}
