final class com.android.server.pm.Settings extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int CURRENT_DATABASE_VERSION;
    private static final boolean DEBUG_STOPPED;
    private static final boolean DEBUG_MU;
    private static final java.lang.String TAG_READ_EXTERNAL_STORAGE;
    private static final java.lang.String ATTR_ENFORCEMENT;
    private static final java.lang.String TAG_ITEM;
    private static final java.lang.String TAG_DISABLED_COMPONENTS;
    private static final java.lang.String TAG_ENABLED_COMPONENTS;
    private static final java.lang.String TAG_PACKAGE_RESTRICTIONS;
    private static final java.lang.String TAG_PACKAGE;
    private static final java.lang.String TAG_PERSISTENT_PREFERRED_ACTIVITIES;
    static final java.lang.String TAG_CROSS_PROFILE_INTENT_FILTERS;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_USER;
    private static final java.lang.String ATTR_CODE;
    private static final java.lang.String ATTR_NOT_LAUNCHED;
    private static final java.lang.String ATTR_ENABLED;
    private static final java.lang.String ATTR_ENABLED_CALLER;
    private static final java.lang.String ATTR_STOPPED;
    private static final java.lang.String ATTR_BLOCKED;
    private static final java.lang.String ATTR_HIDDEN;
    private static final java.lang.String ATTR_INSTALLED;
    private static final java.lang.String ATTR_BLOCK_UNINSTALL;
    private final java.io.File mSettingsFilename;
    private final java.io.File mBackupSettingsFilename;
    private final java.io.File mPackageListFilename;
    private final java.io.File mStoppedPackagesFilename;
    private final java.io.File mBackupStoppedPackagesFilename;
    final java.util.HashMap mPackages;
    private final java.util.HashMap mDisabledSysPackages;
    private static int mFirstAvailableUid;
    int mInternalSdkPlatform;
    int mExternalSdkPlatform;
    int mInternalDatabaseVersion;
    int mExternalDatabaseVersion;
    java.lang.String mFingerprint;
    java.lang.Boolean mReadExternalStorageEnforced;
    private android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity;
    final android.util.SparseArray mPreferredActivities;
    final android.util.SparseArray mPersistentPreferredActivities;
    final android.util.SparseArray mCrossProfileIntentResolvers;
    final java.util.HashMap mSharedUsers;
    private final java.util.ArrayList mUserIds;
    private final android.util.SparseArray mOtherUserIds;
    private final java.util.ArrayList mPastSignatures;
    final java.util.HashMap mPermissions;
    final java.util.HashMap mPermissionTrees;
    final java.util.ArrayList mPackagesToBeCleaned;
    final java.util.HashMap mRenamedPackages;
    final java.lang.StringBuilder mReadMessages;
    private final java.util.ArrayList mPendingPackages;
    private final java.io.File mSystemDir;
    public final com.android.server.pm.KeySetManagerService mKeySetManagerService;
    static final java.lang.Object[] FLAG_DUMP_SPEC;

    void <init>(android.content.Context)
    {
        com.android.server.pm.Settings r0;
        android.content.Context r1;
        java.io.File $r2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke r0.<com.android.server.pm.Settings: void <init>(android.content.Context,java.io.File)>(r1, $r2);

        return;
    }

    void <init>(android.content.Context, java.io.File)
    {
        com.android.server.pm.Settings r0;
        android.content.Context r1;
        java.io.File r2, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.util.HashMap $r3, $r4, $r8, $r12, $r13, $r15, $r18;
        android.util.SparseArray $r5, $r6, $r7, $r10;
        java.util.ArrayList $r9, $r11, $r14, $r16;
        java.lang.StringBuilder $r17;
        com.android.server.pm.KeySetManagerService $r19;
        java.lang.String $r23;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.HashMap mPackages> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds> = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages> = $r15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages> = $r17;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages> = $r16;

        $r19 = new com.android.server.pm.KeySetManagerService;

        $r18 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        specialinvoke $r19.<com.android.server.pm.KeySetManagerService: void <init>(java.util.Map)>($r18);

        r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService> = $r19;

        $r21 = new java.io.File;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "system");

        r0.<com.android.server.pm.Settings: java.io.File mSystemDir> = $r21;

        $r20 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        virtualinvoke $r20.<java.io.File: boolean mkdirs()>();

        $r22 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        $r23 = virtualinvoke $r22.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r23, 509, -1, -1);

        $r25 = new java.io.File;

        $r24 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, "packages.xml");

        r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename> = $r25;

        $r27 = new java.io.File;

        $r26 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, "packages-backup.xml");

        r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename> = $r27;

        $r29 = new java.io.File;

        $r28 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r29.<java.io.File: void <init>(java.io.File,java.lang.String)>($r28, "packages.list");

        r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename> = $r29;

        $r32 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        staticinvoke <android.os.FileUtils: int setPermissions(java.io.File,int,int,int)>($r32, 432, 1000, 1032);

        $r30 = new java.io.File;

        $r31 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r30.<java.io.File: void <init>(java.io.File,java.lang.String)>($r31, "packages-stopped.xml");

        r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename> = $r30;

        $r33 = new java.io.File;

        $r34 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r33.<java.io.File: void <init>(java.io.File,java.lang.String)>($r34, "packages-stopped-backup.xml");

        r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename> = $r33;

        return;
    }

    com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package, com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, int, android.os.UserHandle, boolean)
    {
        com.android.server.pm.Settings r0;
        android.content.pm.PackageParser$Package r1;
        com.android.server.pm.PackageSetting r2, r12;
        java.lang.String r3, r7, r8, r9, r11;
        com.android.server.pm.SharedUserSetting r4;
        java.io.File r5, r6;
        int i0, $i1;
        android.os.UserHandle r10;
        boolean z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.server.pm.SharedUserSetting;

        r5 := @parameter4: java.io.File;

        r6 := @parameter5: java.io.File;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        r9 := @parameter8: java.lang.String;

        i0 := @parameter9: int;

        r10 := @parameter10: android.os.UserHandle;

        z0 := @parameter11: boolean;

        r11 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $i1 = r1.<android.content.pm.PackageParser$Package: int mVersionCode>;

        r12 = specialinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(java.lang.String,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,int,android.os.UserHandle,boolean,boolean)>(r11, r2, r3, r4, r5, r6, r7, r8, r9, $i1, i0, r10, z0, 1);

        return r12;
    }

    com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.pm.PackageSetting $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.pm.PackageSetting) $r3;

        return $r4;
    }

    void setInstallStatus(java.lang.String, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        int i0, $i1;
        com.android.server.pm.PackageSetting r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<com.android.server.pm.PackageSetting: int getInstallStatus()>();

        if $i1 == i0 goto label1;

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setInstallStatus(int)>(i0);

     label1:
        return;
    }

    void setInstallerPackageName(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, r2;
        com.android.server.pm.PackageSetting r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.PackageSetting) $r5;

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.server.pm.PackageSetting: void setInstallerPackageName(java.lang.String)>(r2);

     label1:
        return;
    }

    com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String, int, boolean)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r11;
        int i0, $i1, $i2, $i4;
        boolean z0;
        com.android.server.pm.SharedUserSetting r2, $r5;
        java.util.HashMap $r3, $r12;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.SharedUserSetting) $r4;

        if r2 != null goto label2;

        if z0 != 0 goto label1;

        return null;

     label1:
        $r5 = new com.android.server.pm.SharedUserSetting;

        specialinvoke $r5.<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int)>(r1, i0);

        r2 = $r5;

        $i1 = specialinvoke r0.<com.android.server.pm.Settings: int newUserIdLPw(java.lang.Object)>(r2);

        r2.<com.android.server.pm.SharedUserSetting: int userId> = $i1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New shared user ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": id=");

        $i2 = r2.<com.android.server.pm.SharedUserSetting: int userId>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r11);

        $i4 = r2.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i4 < 0 goto label2;

        $r12 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return r2;
    }

    java.util.Collection getAllSharedUsersLPw()
    {
        com.android.server.pm.Settings r0;
        java.util.HashMap $r1;
        java.util.Collection $r2;

        r0 := @this: com.android.server.pm.Settings;

        $r1 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        return $r2;
    }

    boolean disableSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r21;
        com.android.server.pm.PackageSetting r2, r3, r4, $r12;
        java.util.HashMap $r5, $r7, $r10;
        java.lang.Object $r6, $r8;
        android.content.pm.PackageParser$Package $r9, $r13, $r15;
        android.content.pm.ApplicationInfo $r14, $r16;
        int $i0, $i1;
        java.lang.StringBuilder $r17, $r18, $r19, $r20;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r6;

        if r2 != null goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an installed package");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

        return 0;

     label1:
        $r7 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.PackageSetting) $r8;

        if r3 != null goto label3;

        $r9 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r9 == null goto label2;

        $r13 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r14 = $r13.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r14 == null goto label2;

        $r15 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r16 = $r15.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r16.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 | 128;

        $r16.<android.content.pm.ApplicationInfo: int flags> = $i1;

     label2:
        $r10 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r12 = new com.android.server.pm.PackageSetting;

        specialinvoke $r12.<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting)>(r2);

        r4 = $r12;

        specialinvoke r0.<com.android.server.pm.Settings: void replacePackageLPw(java.lang.String,com.android.server.pm.PackageSetting)>(r1, r4);

        return 1;

     label3:
        return 0;
    }

    com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r7, $r8, $r9, $r10, $r13, $r23;
        com.android.server.pm.PackageSetting r2, r3;
        java.util.HashMap $r4, $r15;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6, $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.File $r11, $r12;
        android.content.pm.ApplicationInfo $r16, $r18;
        java.lang.StringBuilder $r20, $r21, $r22, $r24;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r5;

        if r2 != null goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not disabled");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        return null;

     label1:
        $r6 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r6 == null goto label2;

        $r17 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r16 = $r17.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r16 == null goto label2;

        $r19 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r18 = $r19.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r18.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i4 & -129;

        $r18.<android.content.pm.ApplicationInfo: int flags> = $i3;

     label2:
        $r13 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $r12 = r2.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r11 = r2.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $r10 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $r9 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $r7 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $i2 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $i1 = r2.<com.android.server.pm.PackageSetting: int versionCode>;

        $i0 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        r3 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r1, $r13, $r12, $r11, $r10, $r9, $r8, $r7, $i2, $i1, $i0);

        $r15 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return r3;
    }

    boolean isDisabledSystemPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    void removeDisabledSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    com.android.server.pm.PackageSetting addPackageLPw(java.lang.String, java.lang.String, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, r2, r5, r6, r7, r8, $r18;
        java.io.File r3, r4;
        int i0, i1, i2, $i3;
        com.android.server.pm.PackageSetting r9, $r12, r19;
        java.util.HashMap $r10, $r13;
        java.lang.Object $r11;
        boolean $z0;
        java.lang.StringBuilder $r15, $r16, $r17;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.File;

        r4 := @parameter3: java.io.File;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        i1 := @parameter9: int;

        i2 := @parameter10: int;

        $r10 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (com.android.server.pm.PackageSetting) $r11;

        if r9 == null goto label2;

        $i3 = r9.<com.android.server.pm.PackageSetting: int appId>;

        if $i3 != i0 goto label1;

        return r9;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate package, keeping first: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r18);

        return null;

     label2:
        $r12 = new com.android.server.pm.PackageSetting;

        specialinvoke $r12.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>(r1, r2, r3, r4, r5, r6, r7, r8, i1, i2);

        r19 = $r12;

        r19.<com.android.server.pm.PackageSetting: int appId> = i0;

        $z0 = specialinvoke r0.<com.android.server.pm.Settings: boolean addUserIdLPw(int,java.lang.Object,java.lang.Object)>(i0, r19, r1);

        if $z0 == 0 goto label3;

        $r13 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r19);

        return r19;

     label3:
        return null;
    }

    com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String, int, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r11;
        int i0, i1, $i2;
        com.android.server.pm.SharedUserSetting r2, $r5, r12;
        java.util.HashMap $r3, $r6;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.SharedUserSetting) $r4;

        if r2 == null goto label2;

        $i2 = r2.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i2 != i0 goto label1;

        return r2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared user, keeping first: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r11);

        return null;

     label2:
        $r5 = new com.android.server.pm.SharedUserSetting;

        specialinvoke $r5.<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int)>(r1, i1);

        r12 = $r5;

        r12.<com.android.server.pm.SharedUserSetting: int userId> = i0;

        $z0 = specialinvoke r0.<com.android.server.pm.Settings: boolean addUserIdLPw(int,java.lang.Object,java.lang.Object)>(i0, r12, r1);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r12);

        return r12;

     label3:
        return null;
    }

    void pruneSharedUsersLPw()
    {
        com.android.server.pm.Settings r0;
        java.util.ArrayList r1, $r5;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        com.android.server.pm.SharedUserSetting r4;
        java.util.HashMap $r6, $r8;
        java.util.Set $r7;
        boolean $z0;
        int $i0, $i1, i2;
        java.lang.Object $r9, $r11, $r12, $r13;
        java.util.HashSet $r14;

        r0 := @this: com.android.server.pm.Settings;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.android.server.pm.SharedUserSetting) $r12;

        if r4 == null goto label2;

        $r14 = r4.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        $i1 = virtualinvoke $r14.<java.util.HashSet: int size()>();

        if $i1 != 0 goto label3;

     label2:
        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label3:
        goto label1;

     label4:
        i2 = 0;

     label5:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label6;

        $r8 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r9);

        i2 = i2 + 1;

        goto label5;

     label6:
        return;
    }

    void transferPermissionsLPw(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, r2, $r8;
        int i0;
        java.util.HashMap r3, $r11;
        java.util.Iterator r4;
        com.android.server.pm.BasePermission r5;
        java.util.Collection $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        android.content.pm.PermissionInfo $r9, $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        if i0 >= 2 goto label8;

        if i0 != 0 goto label2;

        $r11 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        goto label3;

     label2:
        $r11 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

     label3:
        r3 = $r11;

        $r6 = virtualinvoke r3.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.BasePermission) $r7;

        $r8 = r5.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label6;

        r5.<com.android.server.pm.BasePermission: java.lang.String sourcePackage> = r2;

        r5.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = null;

        r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = null;

        $r9 = r5.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        if $r9 == null goto label5;

        $r10 = r5.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        $r10.<android.content.pm.PermissionInfo: java.lang.String packageName> = r2;

     label5:
        r5.<com.android.server.pm.BasePermission: int uid> = 0;

        r5.<com.android.server.pm.BasePermission: int[] gids> = null;

     label6:
        goto label4;

     label7:
        i0 = i0 + 1;

        goto label1;

     label8:
        return;
    }

    private com.android.server.pm.PackageSetting getPackageLPw(java.lang.String, com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, int, int, android.os.UserHandle, boolean, boolean)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, r3, r7, r8, r9, $r24, $r39, $r44, $r58, $r59, $r60, $r71, $r74, $r76, $r77;
        com.android.server.pm.PackageSetting r2, r11, $r18, $r42, r80;
        com.android.server.pm.SharedUserSetting r4, $r43, $r47, $r53, $r57;
        java.io.File r5, r6, $r46, $r65;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, i32;
        android.os.UserHandle r10;
        boolean z0, z1, z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, z11;
        com.android.server.pm.UserManagerService r12;
        java.util.Iterator r13, r82, r85;
        android.content.pm.UserInfo r14, r83, r86;
        java.lang.Object $r15, $r17, $r19, $r32, $r37, $r38;
        java.util.HashMap $r16, $r20, $r41;
        long $l10, $l27;
        java.lang.StringBuilder $r21, $r22, $r25, $r26, $r45, $r48, $r49, $r50, $r51, $r52, $r54, $r55, $r56, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r70, $r72, $r73, $r75;
        com.android.server.pm.PackageSignatures $r23, $r34, $r36, r78;
        java.util.HashSet $r27, $r28, $r30, $r31;
        android.content.pm.Signature[] $r29, $r33, $r35;
        java.util.List r79, r81, r84;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.server.pm.SharedUserSetting;

        r5 := @parameter4: java.io.File;

        r6 := @parameter5: java.io.File;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        r9 := @parameter8: java.lang.String;

        i0 := @parameter9: int;

        i1 := @parameter10: int;

        r10 := @parameter11: android.os.UserHandle;

        z0 := @parameter12: boolean;

        z1 := @parameter13: boolean;

        $r16 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (com.android.server.pm.PackageSetting) $r15;

        r12 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        if r11 == null goto label08;

        r11.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = r8;

        r11.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = r9;

        $r46 = r11.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z10 = virtualinvoke $r46.<java.io.File: boolean equals(java.lang.Object)>(r5);

        if $z10 != 0 goto label02;

        $i28 = r11.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i29 = $i28 & 1;

        if $i29 == 0 goto label01;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to update system app code path from ");

        $r71 = r11.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r76 = virtualinvoke r5.<java.io.File: java.lang.String toString()>();

        $r75 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r77);

        goto label02;

     label01:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codePath changed from ");

        $r65 = r11.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Retaining data and using new");

        $r74 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r74);

        r11.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = r7;

     label02:
        $r47 = r11.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r47 == r4 goto label07;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r52 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared user changed from ");

        $r53 = r11.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r53 == null goto label03;

        $r57 = r11.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r58 = $r57.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        goto label04;

     label03:
        $r58 = "<nothing>";

     label04:
        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        if r4 == null goto label05;

        $r60 = r4.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        goto label06;

     label05:
        $r60 = "<nothing>";

     label06:
        $r48 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; replacing with new");

        $r59 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r59);

        r11 = null;

        goto label08;

     label07:
        i2 = i1 & 1073741825;

        $i25 = r11.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i24 = $i25 | i2;

        r11.<com.android.server.pm.PackageSetting: int pkgFlags> = $i24;

     label08:
        if r11 != null goto label25;

        if r2 == null goto label09;

        $r42 = new com.android.server.pm.PackageSetting;

        $r44 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke $r42.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>($r44, r1, r5, r6, r7, r8, r9, null, i0, i1);

        r11 = $r42;

        r78 = r11.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void copyFrom(com.android.server.pm.PackageSettingBase)>(r2);

        r11.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures> = r78;

        $r43 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        r11.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = $r43;

        $i22 = r2.<com.android.server.pm.PackageSetting: int appId>;

        r11.<com.android.server.pm.PackageSetting: int appId> = $i22;

        r11.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSettingBase origPackage> = r2;

        $r41 = r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r39 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r39);

        r1 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $l27 = virtualinvoke r5.<java.io.File: long lastModified()>();

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l27);

        goto label23;

     label09:
        $r18 = new com.android.server.pm.PackageSetting;

        specialinvoke $r18.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>(r1, r3, r5, r6, r7, r8, r9, null, i0, i1);

        r11 = $r18;

        $l10 = virtualinvoke r5.<java.io.File: long lastModified()>();

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l10);

        r11.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = r4;

        $i13 = i1 & 1;

        if $i13 != 0 goto label17;

        r79 = specialinvoke r0.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if r10 == null goto label10;

        $i23 = virtualinvoke r10.<android.os.UserHandle: int getIdentifier()>();

        goto label11;

     label10:
        $i23 = 0;

     label11:
        i3 = $i23;

        if r79 == null goto label17;

        if z1 == 0 goto label17;

        r13 = interfaceinvoke r79.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z9 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label17;

        $r38 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (android.content.pm.UserInfo) $r38;

        if r10 == null goto label14;

        if i3 != -1 goto label13;

        $i19 = r14.<android.content.pm.UserInfo: int id>;

        $z8 = virtualinvoke r0.<com.android.server.pm.Settings: boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService,int)>(r12, $i19);

        if $z8 == 0 goto label14;

     label13:
        $i18 = r14.<android.content.pm.UserInfo: int id>;

        if i3 != $i18 goto label15;

     label14:
        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        z2 = $z7;

        $i20 = r14.<android.content.pm.UserInfo: int id>;

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,java.util.HashSet,java.util.HashSet,boolean)>($i20, 0, z2, 1, 1, 0, null, null, null, 0);

        $i21 = r14.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i21);

        goto label12;

     label17:
        if r4 == null goto label18;

        $i17 = r4.<com.android.server.pm.SharedUserSetting: int userId>;

        r11.<com.android.server.pm.PackageSetting: int appId> = $i17;

        goto label23;

     label18:
        $r20 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r19 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r80 = (com.android.server.pm.PackageSetting) $r19;

        if r80 == null goto label22;

        $r23 = r80.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r29 = $r23.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r29 == null goto label19;

        $r36 = r11.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r34 = r80.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r35 = $r34.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r37 = virtualinvoke $r35.<java.lang.Object: java.lang.Object clone()>();

        $r33 = (android.content.pm.Signature[]) $r37;

        $r36.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures> = $r33;

     label19:
        $i15 = r80.<com.android.server.pm.PackageSetting: int appId>;

        r11.<com.android.server.pm.PackageSetting: int appId> = $i15;

        $r28 = new java.util.HashSet;

        $r27 = r80.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        specialinvoke $r28.<java.util.HashSet: void <init>(java.util.Collection)>($r27);

        r11.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions> = $r28;

        r81 = specialinvoke r0.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if r81 == null goto label21;

        r82 = interfaceinvoke r81.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z6 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label21;

        $r32 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r83 = (android.content.pm.UserInfo) $r32;

        i32 = r83.<android.content.pm.UserInfo: int id>;

        $r31 = virtualinvoke r80.<com.android.server.pm.PackageSetting: java.util.HashSet getDisabledComponents(int)>(i32);

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void setDisabledComponentsCopy(java.util.HashSet,int)>($r31, i32);

        $r30 = virtualinvoke r80.<com.android.server.pm.PackageSetting: java.util.HashSet getEnabledComponents(int)>(i32);

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void setEnabledComponentsCopy(java.util.HashSet,int)>($r30, i32);

        goto label20;

     label21:
        $i16 = r11.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.Settings: boolean addUserIdLPw(int,java.lang.Object,java.lang.Object)>($i16, r11, r1);

        goto label23;

     label22:
        $i12 = specialinvoke r0.<com.android.server.pm.Settings: int newUserIdLPw(java.lang.Object)>(r11);

        r11.<com.android.server.pm.PackageSetting: int appId> = $i12;

     label23:
        $i14 = r11.<com.android.server.pm.PackageSetting: int appId>;

        if $i14 >= 0 goto label24;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be assigned a valid uid");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r24);

        return null;

     label24:
        if z0 == 0 goto label30;

        specialinvoke r0.<com.android.server.pm.Settings: void addPackageSettingLPw(com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting)>(r11, r1, r4);

        goto label30;

     label25:
        if r10 == null goto label30;

        if z1 == 0 goto label30;

        r84 = specialinvoke r0.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if r84 == null goto label30;

        r85 = interfaceinvoke r84.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z3 = interfaceinvoke r85.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label30;

        $r17 = interfaceinvoke r85.<java.util.Iterator: java.lang.Object next()>();

        r86 = (android.content.pm.UserInfo) $r17;

        $i4 = virtualinvoke r10.<android.os.UserHandle: int getIdentifier()>();

        if $i4 != -1 goto label27;

        $i11 = r86.<android.content.pm.UserInfo: int id>;

        $z4 = virtualinvoke r0.<com.android.server.pm.Settings: boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService,int)>(r12, $i11);

        if $z4 == 0 goto label28;

     label27:
        $i6 = virtualinvoke r10.<android.os.UserHandle: int getIdentifier()>();

        $i5 = r86.<android.content.pm.UserInfo: int id>;

        if $i6 != $i5 goto label29;

     label28:
        $i9 = r86.<android.content.pm.UserInfo: int id>;

        z11 = virtualinvoke r11.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i9);

        if z11 != 0 goto label29;

        $i7 = r86.<android.content.pm.UserInfo: int id>;

        virtualinvoke r11.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, $i7);

        $i8 = r86.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i8);

     label29:
        goto label26;

     label30:
        return r11;
    }

    boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.UserManagerService r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", i0);

        return $z0;
    }

    void insertPackageSettingLPw(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1;
        android.content.pm.PackageParser$Package r2, $r33, $r49;
        java.lang.String r3, r4, r5, $r9, $r10, $r11, $r14, $r15, $r16, $r21, $r34, $r37, $r40, $r48, $r50, $r52;
        android.content.pm.ApplicationInfo $r6, $r7, $r8, $r12, $r13, $r19, $r27;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.Signature[] $r17, $r23, $r28, $r31;
        com.android.server.pm.PackageSignatures $r18, $r26, $r29, $r32;
        com.android.server.pm.SharedUserSetting $r20, $r22, $r24, $r25;
        java.lang.StringBuilder $r30, $r35, $r36, $r38, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r53, $r54, $r55;
        java.io.File $r45, $r51;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg> = r2;

        $r6 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = virtualinvoke $r6.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        $r7 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r4 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>();

        $r8 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r5 = $r8.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r9 = r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r3, $r9);

        if $z0 != 0 goto label1;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code path for pkg : ");

        $r49 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r48 = $r49.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r52 = r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r50);

        $r51 = new java.io.File;

        specialinvoke $r51.<java.io.File: void <init>(java.lang.String)>(r3);

        r1.<com.android.server.pm.PackageSetting: java.io.File codePath> = $r51;

        r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString> = r3;

     label1:
        $r10 = r1.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r4, $r10);

        if $z1 != 0 goto label2;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource path for pkg : ");

        $r33 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r34 = $r33.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r37 = r1.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r40);

        $r45 = new java.io.File;

        specialinvoke $r45.<java.io.File: void <init>(java.lang.String)>(r4);

        r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath> = $r45;

        r1.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString> = r4;

     label2:
        $r11 = r1.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r5, $r11);

        if $z2 != 0 goto label3;

        r1.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = r5;

     label3:
        $r12 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r12.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        r1.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = $r14;

        $r13 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r16 = $r13.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        r1.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = $r16;

        $r15 = r2.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride>;

        r1.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString> = $r15;

        $i0 = r2.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $i1 = r1.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i0 == $i1 goto label4;

        $i5 = r2.<android.content.pm.PackageParser$Package: int mVersionCode>;

        r1.<com.android.server.pm.PackageSetting: int versionCode> = $i5;

     label4:
        $r18 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r17 = $r18.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r17 != null goto label5;

        $r32 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r31 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        virtualinvoke $r32.<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>($r31);

     label5:
        $r19 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r19.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = r1.<com.android.server.pm.PackageSetting: int pkgFlags>;

        if $i3 == $i2 goto label6;

        $r27 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r27.<android.content.pm.ApplicationInfo: int flags>;

        r1.<com.android.server.pm.PackageSetting: int pkgFlags> = $i4;

     label6:
        $r20 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r20 == null goto label7;

        $r25 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r26 = $r25.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r23 = $r26.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r23 != null goto label7;

        $r24 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r29 = $r24.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r28 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        virtualinvoke $r29.<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>($r28);

     label7:
        $r21 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r22 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        specialinvoke r0.<com.android.server.pm.Settings: void addPackageSettingLPw(com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting)>(r1, $r21, $r22);

        return;
    }

    private void addPackageSettingLPw(com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1;
        java.lang.String r2, $r9, $r19, $r21, $r31;
        com.android.server.pm.SharedUserSetting r3, $r6, $r18, $r27, $r29;
        java.util.HashMap $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r22, $r23, $r24, $r25, $r26, $r28, $r30;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.pm.SharedUserSetting;

        $r4 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        if r3 == null goto label3;

        $r6 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r6 == null goto label1;

        $r18 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r18 == r3 goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r21 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user ");

        $r27 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r31);

        $r29 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r29.<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>(r1);

        goto label2;

     label1:
        $i1 = r1.<com.android.server.pm.PackageSetting: int appId>;

        $i0 = r3.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i1 == $i0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r9 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user id ");

        $i3 = r1.<com.android.server.pm.PackageSetting: int appId>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now user ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with id ");

        $i4 = r3.<com.android.server.pm.SharedUserSetting: int userId>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r19);

     label2:
        virtualinvoke r3.<com.android.server.pm.SharedUserSetting: void addPackage(com.android.server.pm.PackageSetting)>(r1);

        r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = r3;

        $i2 = r3.<com.android.server.pm.SharedUserSetting: int userId>;

        r1.<com.android.server.pm.PackageSetting: int appId> = $i2;

     label3:
        return;
    }

    void updateSharedUserPermsLPw(com.android.server.pm.PackageSetting, int[])
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1, r7;
        int[] r2, $r16, r29;
        com.android.server.pm.SharedUserSetting r3, $r9;
        java.util.Iterator r4, r6, r30;
        java.lang.String r5, $r26, $r27, r31;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7;
        android.content.pm.PackageParser$Package $r8, $r10, $r21, $r22, $r24, $r25;
        java.util.ArrayList $r11, $r28;
        java.util.HashSet $r12, $r17, $r19, $r20;
        java.lang.Object $r13, $r14, $r18, $r23;
        java.util.HashMap $r15;
        com.android.server.pm.BasePermission r32;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: int[];

        if r1 == null goto label01;

        $r8 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r8 != null goto label02;

     label01:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Trying to update info for null package. Just ignoring");

        return;

     label02:
        $r9 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r9 != null goto label03;

        return;

     label03:
        r3 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r10 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r11 = $r10.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        r4 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r18;

        z0 = 0;

        $r17 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        $z3 = virtualinvoke $r17.<java.util.HashSet: boolean contains(java.lang.Object)>(r5);

        if $z3 != 0 goto label05;

        goto label04;

     label05:
        $r19 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        r6 = virtualinvoke $r19.<java.util.HashSet: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.PackageSetting) $r23;

        $r24 = r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r24 == null goto label07;

        $r21 = r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r27 = $r21.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r22 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r26 = $r22.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z6 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z6 != 0 goto label07;

        $r25 = r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r28 = $r25.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $z7 = virtualinvoke $r28.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z7 == 0 goto label07;

        z0 = 1;

        goto label08;

     label07:
        goto label06;

     label08:
        if z0 != 0 goto label09;

        $r20 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        virtualinvoke $r20.<java.util.HashSet: boolean remove(java.lang.Object)>(r5);

     label09:
        goto label04;

     label10:
        r29 = r2;

        $r12 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        r30 = virtualinvoke $r12.<java.util.HashSet: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r13 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.lang.String) $r13;

        $r15 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r14 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r31);

        r32 = (com.android.server.pm.BasePermission) $r14;

        if r32 == null goto label12;

        $r16 = r32.<com.android.server.pm.BasePermission: int[] gids>;

        r29 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>(r29, $r16);

     label12:
        goto label11;

     label13:
        r3.<com.android.server.pm.SharedUserSetting: int[] gids> = r29;

        return;
    }

    int removePackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r12;
        com.android.server.pm.PackageSetting r2;
        java.util.HashMap $r3, $r5, $r14;
        java.lang.Object $r4;
        com.android.server.pm.SharedUserSetting $r7, $r8, $r9, $r11, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.HashSet $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 == null goto label2;

        $r5 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r7 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r7 == null goto label1;

        $r8 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r8.<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>(r2);

        $r9 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r10 = $r9.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        $i2 = virtualinvoke $r10.<java.util.HashSet: int size()>();

        if $i2 != 0 goto label2;

        $r14 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r11 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r12 = $r11.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r12);

        $r15 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $i3 = $r15.<com.android.server.pm.SharedUserSetting: int userId>;

        specialinvoke r0.<com.android.server.pm.Settings: void removeUserIdLPw(int)>($i3);

        $r16 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $i4 = $r16.<com.android.server.pm.SharedUserSetting: int userId>;

        return $i4;

     label1:
        $i0 = r2.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.Settings: void removeUserIdLPw(int)>($i0);

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        return $i1;

     label2:
        return -1;
    }

    private void replacePackageLPw(java.lang.String, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        com.android.server.pm.PackageSetting r2, r3;
        java.util.HashMap $r4, $r6;
        java.lang.Object $r5;
        com.android.server.pm.SharedUserSetting $r8, $r9, $r10;
        int $i0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        $r4 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.PackageSetting) $r5;

        if r3 == null goto label2;

        $r8 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r8 == null goto label1;

        $r9 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r9.<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>(r3);

        $r10 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r10.<com.android.server.pm.SharedUserSetting: void addPackage(com.android.server.pm.PackageSetting)>(r2);

        goto label2;

     label1:
        $i0 = r3.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.Settings: void replaceUserIdLPw(int,java.lang.Object)>($i0, r2);

     label2:
        $r6 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    private boolean addUserIdLPw(int, java.lang.Object, java.lang.Object)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2;
        java.lang.Object r1, r2, $r4, $r13;
        android.util.SparseArray $r3, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r11, $r23;
        java.util.ArrayList $r12, $r14, $r16, $r22;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        if i0 <= 19999 goto label1;

        return 0;

     label1:
        if i0 < 10000 goto label5;

        $r12 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i2 = i0 - 10000;

     label2:
        if i2 < i1 goto label3;

        $r22 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r14 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r13 == null goto label4;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate user id: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r23);

        return 0;

     label4:
        $r16 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r16.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, r1);

        goto label7;

     label5:
        $r3 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r4 == null goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared id: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r11);

        return 0;

     label6:
        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label7:
        return 1;
    }

    public java.lang.Object getUserIdLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r5;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        if i0 < 10000 goto label3;

        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = i0 - 10000;

        if i2 >= i1 goto label1;

        $r4 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;

     label3:
        $r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        return $r2;
    }

    private void removeUserIdLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2, $i3;
        android.util.SparseArray $r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        if i0 < 10000 goto label2;

        $r2 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = i0 - 10000;

        if i2 >= i1 goto label1;

        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, null);

     label1:
        goto label3;

     label2:
        $r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

     label3:
        $i3 = i0 + 1;

        specialinvoke r0.<com.android.server.pm.Settings: void setFirstAvailableUid(int)>($i3);

        return;
    }

    private void replaceUserIdLPw(int, java.lang.Object)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.util.SparseArray $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 < 10000 goto label2;

        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = i0 - 10000;

        if i2 >= i1 goto label1;

        $r4 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, r1);

     label1:
        goto label3;

     label2:
        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label3:
        return;
    }

    com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.PreferredIntentResolver r1, $r4;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.PreferredIntentResolver) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.PreferredIntentResolver;

        specialinvoke $r4.<com.android.server.pm.PreferredIntentResolver: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.PersistentPreferredIntentResolver r1, $r4;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.PersistentPreferredIntentResolver) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.PersistentPreferredIntentResolver;

        specialinvoke $r4.<com.android.server.pm.PersistentPreferredIntentResolver: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.CrossProfileIntentResolver r1, $r4;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.CrossProfileIntentResolver) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.CrossProfileIntentResolver;

        specialinvoke $r4.<com.android.server.pm.CrossProfileIntentResolver: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    private java.io.File getUserPackagesStateFile(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "package-restrictions.xml");

        return $r1;
    }

    private java.io.File getUserPackagesStateBackupFile(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "package-restrictions-backup.xml");

        return $r1;
    }

    void writeAllUsersPackageRestrictionsLPr()
    {
        com.android.server.pm.Settings r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.content.pm.UserInfo r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.server.pm.Settings;

        r1 = specialinvoke r0.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if r1 != null goto label1;

        return;

     label1:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.UserInfo) $r4;

        $i0 = r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i0);

        goto label2;

     label3:
        return;
    }

    void readAllUsersPackageRestrictionsLPr()
    {
        com.android.server.pm.Settings r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.content.pm.UserInfo r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.server.pm.Settings;

        r1 = specialinvoke r0.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>(0);

        return;

     label1:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.UserInfo) $r4;

        $i0 = r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>($i0);

        goto label2;

     label3:
        return;
    }

    public boolean isInternalDatabaseVersionOlderThan(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.pm.Settings: int mInternalDatabaseVersion>;

        if $i1 >= i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isExternalDatabaseVersionOlderThan(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.pm.Settings: int mExternalDatabaseVersion>;

        if $i1 >= i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void updateInternalDatabaseVersion()
    {
        com.android.server.pm.Settings r0;

        r0 := @this: com.android.server.pm.Settings;

        r0.<com.android.server.pm.Settings: int mInternalDatabaseVersion> = 3;

        return;
    }

    public void updateExternalDatabaseVersion()
    {
        com.android.server.pm.Settings r0;

        r0 := @this: com.android.server.pm.Settings;

        r0.<com.android.server.pm.Settings: int mExternalDatabaseVersion> = 3;

        return;
    }

    private void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r2, $r6, $r9, $r10, $r16, $r17, $r19;
        com.android.server.pm.PreferredActivity r3, $r8;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7, $r12, $r14, $r15, $r18, $r20;
        com.android.server.pm.PreferredComponent $r11, $r13;
        com.android.server.pm.PreferredIntentResolver $r21;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label8;

        if i2 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        $r8 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r8.<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        r3 = $r8;

        $r11 = r3.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r10 = virtualinvoke $r11.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        if $r10 != null goto label4;

        $r21 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(i0);

        virtualinvoke $r21.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>(r3);

        goto label5;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r13 = r3.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r16 = virtualinvoke $r13.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r19);

     label5:
        goto label7;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r9);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label7:
        goto label1;

     label8:
        return;
    }

    private void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r2, $r6, $r9;
        com.android.server.pm.PersistentPreferredActivity r3, $r8;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7;
        com.android.server.pm.PersistentPreferredIntentResolver $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label6;

        if i2 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label6;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        $r8 = new com.android.server.pm.PersistentPreferredActivity;

        specialinvoke $r8.<com.android.server.pm.PersistentPreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        r3 = $r8;

        $r10 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)>(i0);

        virtualinvoke $r10.<com.android.server.pm.PersistentPreferredIntentResolver: void addFilter(android.content.IntentFilter)>(r3);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <persistent-preferred-activities>: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r9);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r2, $r6, r10;
        com.android.server.pm.CrossProfileIntentFilter r3, $r9;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7;
        com.android.server.pm.CrossProfileIntentResolver $r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label6;

        if i2 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label6;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        $r9 = new com.android.server.pm.CrossProfileIntentFilter;

        specialinvoke $r9.<com.android.server.pm.CrossProfileIntentFilter: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        r3 = $r9;

        $r8 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)>(i0);

        virtualinvoke $r8.<com.android.server.pm.CrossProfileIntentResolver: void addFilter(android.content.IntentFilter)>(r3);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under crossProfile-intent-filters: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r10);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    void readPackageRestrictionsLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        java.io.FileInputStream r1, $r32, $r35;
        java.io.File r2, r3;
        com.android.server.pm.PackageSetting r4, r65;
        java.lang.String r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, $r18, $r21, $r25, $r40, $r43, $r44, $r52, $r57, $r59, $r61, r66;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z21;
        java.util.HashSet r15, r16;
        java.lang.StringBuilder $r17, $r19, $r20, $r24, $r26, $r27, $r28, $r31, $r33, $r34, $r38, $r39, $r41, $r42, $r45, $r46, $r47, $r48, $r49, $r53, $r54, $r55, $r56, $r58, $r60, $r62;
        java.lang.Object $r22, $r36;
        java.util.HashMap $r23, $r30;
        java.util.Collection $r29;
        org.xmlpull.v1.XmlPullParserException $r37, r67;
        java.io.IOException $r50, $r51, r68;
        java.util.Iterator r63;
        org.xmlpull.v1.XmlPullParser r64;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 = null;

        r2 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(i0);

        r3 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(i0);

        $z5 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label04;

     label01:
        $r35 = new java.io.FileInputStream;

        specialinvoke $r35.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        r1 = $r35;

        $r33 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup stopped packages file");

        $z19 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z19 == 0 goto label02;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up stopped packages file ");

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r40);

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label02:
        goto label04;

     label03:
        $r51 := @caughtexception;

     label04:
        if r1 != null goto label08;

        $z18 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z18 != 0 goto label07;

        $r28 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No stopped packages file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No stopped packages file; assuming all started");

        $r30 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r29 = virtualinvoke $r30.<java.util.HashMap: java.util.Collection values()>();

        r63 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z20 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label06;

        $r36 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PackageSetting) $r36;

        virtualinvoke r4.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,java.util.HashSet,java.util.HashSet,boolean)>(i0, 0, 1, 0, 0, 0, null, null, null, 0);

        goto label05;

     label06:
        return;

     label07:
        $r32 = new java.io.FileInputStream;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        r1 = $r32;

     label08:
        r64 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label09:
        $i5 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int next()>();

        i10 = $i5;

        if $i5 == 2 goto label10;

        if i10 == 1 goto label10;

        goto label09;

     label10:
        if i10 == 2 goto label12;

        $r31 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in package restrictions file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager stopped packages");

     label11:
        return;

     label12:
        i1 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label13:
        $i4 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int next()>();

        i11 = $i4;

        if $i4 == 1 goto label41;

        if i11 != 3 goto label14;

        $i8 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i1 goto label41;

     label14:
        if i11 == 3 goto label13;

        if i11 != 4 goto label15;

        goto label13;

     label15:
        r5 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z8 == 0 goto label36;

        r6 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r23 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r22 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r65 = (com.android.server.pm.PackageSetting) $r22;

        if r65 != null goto label16;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package known for stopped package: ");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r25);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r64);

        goto label13;

     label16:
        r7 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabled");

        if r7 != null goto label17;

        $i6 = 0;

        goto label18;

     label17:
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

     label18:
        i2 = $i6;

        r8 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabledCaller");

        r9 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "inst");

        if r9 != null goto label19;

        $z10 = 1;

        goto label20;

     label19:
        $z10 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r9);

     label20:
        z0 = $z10;

        r10 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "stopped");

        if r10 != null goto label21;

        $z12 = 0;

        goto label22;

     label21:
        $z12 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r10);

     label22:
        z1 = $z12;

        r11 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "blocked");

        if r11 != null goto label23;

        $z11 = 0;

        goto label24;

     label23:
        $z11 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r11);

     label24:
        z2 = $z11;

        r13 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "hidden");

        if r13 != null goto label25;

        $z14 = z2;

        goto label26;

     label25:
        $z14 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r13);

     label26:
        z21 = $z14;

        r12 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nl");

        if r10 != null goto label27;

        $z13 = 0;

        goto label28;

     label27:
        $z13 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r12);

     label28:
        z3 = $z13;

        r14 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "blockUninstall");

        if r14 != null goto label29;

        $z17 = 0;

        goto label30;

     label29:
        $z17 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r14);

     label30:
        z4 = $z17;

        r15 = null;

        r16 = null;

        i3 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label31:
        $i7 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int next()>();

        i12 = $i7;

        if $i7 == 1 goto label35;

        if i12 != 3 goto label32;

        $i9 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i9 <= i3 goto label35;

     label32:
        if i12 == 3 goto label31;

        if i12 != 4 goto label33;

        goto label31;

     label33:
        r66 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z15 = virtualinvoke r66.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z15 == 0 goto label34;

        r15 = specialinvoke r0.<com.android.server.pm.Settings: java.util.HashSet readComponentsLPr(org.xmlpull.v1.XmlPullParser)>(r64);

        goto label31;

     label34:
        $z16 = virtualinvoke r66.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

        if $z16 == 0 goto label31;

        r16 = specialinvoke r0.<com.android.server.pm.Settings: java.util.HashSet readComponentsLPr(org.xmlpull.v1.XmlPullParser)>(r64);

        goto label31;

     label35:
        virtualinvoke r65.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,java.util.HashSet,java.util.HashSet,boolean)>(i0, i2, z0, z1, z3, z21, r8, r15, r16, z4);

        goto label40;

     label36:
        $z9 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

        if $z9 == 0 goto label37;

        specialinvoke r0.<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r64, i0);

        goto label40;

     label37:
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("persistent-preferred-activities");

        if $z6 == 0 goto label38;

        specialinvoke r0.<com.android.server.pm.Settings: void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r64, i0);

        goto label40;

     label38:
        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("crossProfile-intent-filters");

        if $z7 == 0 goto label39;

        specialinvoke r0.<com.android.server.pm.Settings: void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser,int)>(r64, i0);

        goto label40;

     label39:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <stopped-packages>: ");

        $r18 = interfaceinvoke r64.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r64);

     label40:
        goto label13;

     label41:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label42:
        goto label45;

     label43:
        $r37 := @caughtexception;

        r67 = $r37;

        $r46 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r44 = virtualinvoke r67.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading stopped packages: ");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r52);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", r67);

        goto label45;

     label44:
        $r50 := @caughtexception;

        r68 = $r50;

        $r48 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r59 = virtualinvoke r68.<java.io.IOException: java.lang.String toString()>();

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r61);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", r68);

     label45:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label06 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label11 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label42 with label43;
        catch java.io.IOException from label04 to label06 with label44;
        catch java.io.IOException from label07 to label11 with label44;
        catch java.io.IOException from label12 to label42 with label44;
    }

    private java.util.HashSet readComponentsLPr(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.HashSet r2, $r5;
        int i0, i1, $i2, $i3;
        java.lang.String r3, r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = null;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 == 1 goto label6;

        if i0 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label6;

     label2:
        if i0 == 3 goto label1;

        if i0 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label1;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r4 == null goto label5;

        if r2 != null goto label4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r2 = $r5;

     label4:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label5:
        goto label1;

     label6:
        return r2;
    }

    void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer, int, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        boolean z0, $z1;
        com.android.server.pm.PreferredIntentResolver r2;
        java.util.Iterator r3;
        com.android.server.pm.PreferredActivity r4;
        android.util.SparseArray $r6;
        java.lang.Object $r7, $r10;
        java.util.Set $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        $r6 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.pm.PreferredIntentResolver) $r7;

        if r2 == null goto label2;

        $r9 = virtualinvoke r2.<com.android.server.pm.PreferredIntentResolver: java.util.Set filterSet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PreferredActivity) $r10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke r4.<com.android.server.pm.PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>(r1, z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        return;
    }

    void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        com.android.server.pm.PersistentPreferredIntentResolver r2;
        java.util.Iterator r3;
        com.android.server.pm.PersistentPreferredActivity r4;
        android.util.SparseArray $r6;
        java.lang.Object $r7, $r10;
        java.util.Set $r9;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "persistent-preferred-activities");

        $r6 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.pm.PersistentPreferredIntentResolver) $r7;

        if r2 == null goto label2;

        $r9 = virtualinvoke r2.<com.android.server.pm.PersistentPreferredIntentResolver: java.util.Set filterSet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PersistentPreferredActivity) $r10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke r4.<com.android.server.pm.PersistentPreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "persistent-preferred-activities");

        return;
    }

    void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        com.android.server.pm.CrossProfileIntentResolver r2;
        java.util.Iterator r3;
        com.android.server.pm.CrossProfileIntentFilter r4;
        android.util.SparseArray $r6;
        java.lang.Object $r7, $r10;
        java.util.Set $r9;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "crossProfile-intent-filters");

        $r6 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.pm.CrossProfileIntentResolver) $r7;

        if r2 == null goto label2;

        $r9 = virtualinvoke r2.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.CrossProfileIntentFilter) $r10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke r4.<com.android.server.pm.CrossProfileIntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "crossProfile-intent-filters");

        return;
    }

    void writePackageRestrictionsLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.File r1, r2, $r11, $r62;
        java.io.FileOutputStream r3, $r14;
        java.io.BufferedOutputStream r4, $r13;
        com.android.internal.util.FastXmlSerializer r5, $r15;
        java.util.Iterator r6, r9, r65;
        com.android.server.pm.PackageSetting r7;
        android.content.pm.PackageUserState r8;
        java.lang.String r10, $r12, $r21, $r25, $r45, $r49, $r51, $r61, r66;
        boolean $z0, $z2, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20, $z21;
        java.lang.Boolean $r17;
        java.util.Collection $r18;
        java.util.HashMap $r19;
        java.lang.Object $r22, $r32, $r43;
        java.util.HashSet $r26, $r28, $r29, $r31, $r34, $r38, $r52, $r56, $r57, $r58;
        java.lang.StringBuilder $r59, $r63, $r64;
        java.io.IOException $r60, r67;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(i0);

        r2 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(i0);

        $r11 = new java.io.File;

        $r12 = virtualinvoke r1.<java.io.File: java.lang.String getParent()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);

        virtualinvoke $r11.<java.io.File: boolean mkdirs()>();

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        $z17 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z17 != 0 goto label01;

        $z21 = virtualinvoke r1.<java.io.File: boolean renameTo(java.io.File)>(r2);

        if $z21 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "Unable to backup user packages state file, current changes will be lost at reboot");

        return;

     label01:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Preserving older stopped packages backup");

     label02:
        $r14 = new java.io.FileOutputStream;

        specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r3 = $r14;

        $r13 = new java.io.BufferedOutputStream;

        specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r3);

        r4 = $r13;

        $r15 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r15.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r5 = $r15;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r4, "utf-8");

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r17);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package-restrictions");

        $r19 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r18 = virtualinvoke $r19.<java.util.HashMap: java.util.Collection values()>();

        r6 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.PackageSetting) $r22;

        r8 = virtualinvoke r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

        $z5 = r8.<android.content.pm.PackageUserState: boolean stopped>;

        if $z5 != 0 goto label06;

        $z15 = r8.<android.content.pm.PackageUserState: boolean notLaunched>;

        if $z15 != 0 goto label06;

        $z13 = r8.<android.content.pm.PackageUserState: boolean installed>;

        if $z13 == 0 goto label06;

        $i6 = r8.<android.content.pm.PackageUserState: int enabled>;

        if $i6 != 0 goto label06;

        $z14 = r8.<android.content.pm.PackageUserState: boolean hidden>;

        if $z14 != 0 goto label06;

        $r52 = r8.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        if $r52 == null goto label04;

        $r56 = r8.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        $i7 = virtualinvoke $r56.<java.util.HashSet: int size()>();

        if $i7 > 0 goto label06;

     label04:
        $r57 = r8.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        if $r57 == null goto label05;

        $r58 = r8.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        $i8 = virtualinvoke $r58.<java.util.HashSet: int size()>();

        if $i8 > 0 goto label06;

     label05:
        $z18 = r8.<android.content.pm.PackageUserState: boolean blockUninstall>;

        if $z18 == 0 goto label19;

     label06:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

        $r25 = r7.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r25);

        $z6 = r8.<android.content.pm.PackageUserState: boolean installed>;

        if $z6 != 0 goto label07;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "inst", "false");

     label07:
        $z9 = r8.<android.content.pm.PackageUserState: boolean stopped>;

        if $z9 == 0 goto label08;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "stopped", "true");

     label08:
        $z10 = r8.<android.content.pm.PackageUserState: boolean notLaunched>;

        if $z10 == 0 goto label09;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nl", "true");

     label09:
        $z7 = r8.<android.content.pm.PackageUserState: boolean hidden>;

        if $z7 == 0 goto label10;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "hidden", "true");

     label10:
        $z8 = r8.<android.content.pm.PackageUserState: boolean blockUninstall>;

        if $z8 == 0 goto label11;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "blockUninstall", "true");

     label11:
        $i2 = r8.<android.content.pm.PackageUserState: int enabled>;

        if $i2 == 0 goto label12;

        $i5 = r8.<android.content.pm.PackageUserState: int enabled>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabled", $r49);

        $r51 = r8.<android.content.pm.PackageUserState: java.lang.String lastDisableAppCaller>;

        if $r51 == null goto label12;

        $r45 = r8.<android.content.pm.PackageUserState: java.lang.String lastDisableAppCaller>;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabledCaller", $r45);

     label12:
        $r28 = r8.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        if $r28 == null goto label15;

        $r34 = r8.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        $i4 = virtualinvoke $r34.<java.util.HashSet: int size()>();

        if $i4 <= 0 goto label15;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "enabled-components");

        $r38 = r8.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        r9 = virtualinvoke $r38.<java.util.HashSet: java.util.Iterator iterator()>();

     label13:
        $z12 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label14;

        $r43 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r43;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r10);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label13;

     label14:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "enabled-components");

     label15:
        $r26 = r8.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        if $r26 == null goto label18;

        $r31 = r8.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        $i3 = virtualinvoke $r31.<java.util.HashSet: int size()>();

        if $i3 <= 0 goto label18;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disabled-components");

        $r29 = r8.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        r65 = virtualinvoke $r29.<java.util.HashSet: java.util.Iterator iterator()>();

     label16:
        $z11 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label17;

        $r32 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        r66 = (java.lang.String) $r32;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r66);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label16;

     label17:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disabled-components");

     label18:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label19:
        goto label03;

     label20:
        virtualinvoke r0.<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int,boolean)>(r5, i0, 1);

        virtualinvoke r0.<com.android.server.pm.Settings: void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int)>(r5, i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer,int)>(r5, i0);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package-restrictions");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r4.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r3);

        virtualinvoke r4.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke r2.<java.io.File: boolean delete()>();

        $r21 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r21, 432, -1, -1);

     label21:
        return;

     label22:
        $r60 := @caughtexception;

        r67 = $r60;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager user packages state,  current changes will be lost at reboot", r67);

        $z20 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z20 == 0 goto label23;

        $z19 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z19 != 0 goto label23;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up mangled file: ");

        $r62 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r61);

     label23:
        return;

        catch java.io.IOException from label02 to label21 with label22;
    }

    void readStoppedLPw()
    {
        com.android.server.pm.Settings r0;
        java.io.FileInputStream r1, $r26, $r32;
        com.android.server.pm.PackageSetting r3, r6;
        int i0, $i1, $i2, $i5, i9, i10;
        java.lang.String r4, r5, $r9, $r11, $r18, $r19, $r20, $r41, $r42, $r44, $r50, $r57, $r62, $r66;
        java.io.File $r7, $r21, $r27, $r31, $r35, $r38, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r8, $r10, $r12, $r15, $r16, $r17, $r22, $r24, $r30, $r34, $r37, $r39, $r43, $r47, $r48, $r49, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r64, $r65;
        java.lang.Object $r13, $r33;
        java.util.HashMap $r14, $r28;
        java.util.Collection $r29;
        org.xmlpull.v1.XmlPullParserException $r46, r69;
        java.io.IOException $r51, $r63, r70;
        java.util.Iterator r67;
        org.xmlpull.v1.XmlPullParser r68;

        r0 := @this: com.android.server.pm.Settings;

        r1 = null;

        $r7 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

     label01:
        $r32 = new java.io.FileInputStream;

        $r31 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.io.File)>($r31);

        r1 = $r32;

        $r30 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup stopped packages file");

        $r35 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z5 = virtualinvoke $r35.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label02;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up stopped packages file ");

        $r38 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r41);

        $r40 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r40.<java.io.File: boolean delete()>();

     label02:
        goto label04;

     label03:
        $r63 := @caughtexception;

     label04:
        if r1 != null goto label08;

        $r21 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $z3 = virtualinvoke $r21.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label07;

        $r24 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No stopped packages file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No stopped packages file file; assuming all started");

        $r28 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r29 = virtualinvoke $r28.<java.util.HashMap: java.util.Collection values()>();

        r67 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r33 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.PackageSetting) $r33;

        virtualinvoke r3.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(0, 0);

        virtualinvoke r3.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(0, 0);

        goto label05;

     label06:
        return;

     label07:
        $r26 = new java.io.FileInputStream;

        $r27 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        specialinvoke $r26.<java.io.FileInputStream: void <init>(java.io.File)>($r27);

        r1 = $r26;

     label08:
        r68 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label09:
        $i1 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: int next()>();

        i9 = $i1;

        if $i1 == 2 goto label10;

        if i9 == 1 goto label10;

        goto label09;

     label10:
        if i9 == 2 goto label12;

        $r22 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager stopped packages");

     label11:
        return;

     label12:
        i0 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label13:
        $i2 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: int next()>();

        i10 = $i2;

        if $i2 == 1 goto label20;

        if i10 != 3 goto label14;

        $i5 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i0 goto label20;

     label14:
        if i10 == 3 goto label13;

        if i10 != 4 goto label15;

        goto label13;

     label15:
        r4 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z1 == 0 goto label18;

        r5 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r14 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.PackageSetting) $r13;

        if r6 == null goto label16;

        virtualinvoke r6.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(1, 0);

        $r19 = "1";

        $r20 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nl");

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label17;

        virtualinvoke r6.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(1, 0);

        goto label17;

     label16:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package known for stopped package: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r18);

     label17:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r68);

        goto label19;

     label18:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <stopped-packages>: ");

        $r9 = interfaceinvoke r68.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r68);

     label19:
        goto label13;

     label20:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label21:
        goto label24;

     label22:
        $r46 := @caughtexception;

        r69 = $r46;

        $r48 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r42 = virtualinvoke r69.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        $r43 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading stopped packages: ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r50);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", r69);

        goto label24;

     label23:
        $r51 := @caughtexception;

        r70 = $r51;

        $r60 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r62 = virtualinvoke r70.<java.io.IOException: java.lang.String toString()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r57 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r70);

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r66);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", r70);

     label24:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label06 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label11 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label21 with label22;
        catch java.io.IOException from label04 to label06 with label23;
        catch java.io.IOException from label07 to label11 with label23;
        catch java.io.IOException from label12 to label21 with label23;
    }

    void writeLPr()
    {
        com.android.server.pm.Settings r0;
        java.io.FileOutputStream r1, $r16, $r53, r129;
        java.io.BufferedOutputStream r2, $r18, $r51, r130;
        com.android.internal.util.FastXmlSerializer r3, $r17;
        java.util.Iterator r4, r6, r8, r113, r115, r117, r119, r121, r124;
        com.android.server.pm.BasePermission r5, r114;
        java.lang.String r7, r11, $r20, $r21, $r22, $r23, $r25, $r40, $r44, $r45, $r63, $r67, $r70, $r71, $r74, $r75, $r79, $r80, $r83, $r86, $r87, $r98, $r99, $r110, r123;
        com.android.server.pm.PackageSetting r9, r116, r118;
        android.content.pm.ApplicationInfo r10, $r61;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        int[] r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.io.File $r13, $r15, $r39, $r41, $r47, $r48, $r55, $r96, $r97, $r103, $r104, $r107, $r108, $r111, r126, r128;
        java.util.ArrayList $r14, $r35, $r82, $r85;
        java.lang.Boolean $r19, $r28, $r90;
        android.content.pm.VerifierDeviceIdentity $r24, $r100;
        java.util.Collection $r26, $r29, $r32, $r34, $r38, $r60;
        java.util.HashMap $r27, $r30, $r31, $r33, $r36, $r37, $r59, $r76;
        com.android.server.pm.KeySetManagerService $r42;
        java.lang.StringBuilder $r43, $r46, $r49, $r50, $r57, $r64, $r65, $r66, $r101, $r102, $r112, r131;
        java.io.FileDescriptor $r52;
        com.android.internal.util.JournaledFile $r54, r127;
        android.content.pm.PackageParser$Package $r56, $r62, $r68;
        java.lang.Object $r58, $r72, $r73, $r78, $r81, $r88, $r89, $r91, $r92, $r93, $r94;
        byte[] $r69;
        java.util.Set $r77;
        com.android.server.pm.PackageSignatures $r84;
        java.util.HashSet $r95;
        org.xmlpull.v1.XmlPullParserException $r105, r133;
        java.lang.Exception $r106, r132;
        java.io.IOException $r109, r134;
        com.android.server.pm.SharedUserSetting r120;
        android.content.pm.PackageCleanItem r122;
        java.util.Map$Entry r125;

        r0 := @this: com.android.server.pm.Settings;

        $r13 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z1 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label02;

        $r96 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z13 = virtualinvoke $r96.<java.io.File: boolean exists()>();

        if $z13 != 0 goto label01;

        $r107 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r108 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z17 = virtualinvoke $r107.<java.io.File: boolean renameTo(java.io.File)>($r108);

        if $z17 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "Unable to backup package manager settings,  current changes will be lost at reboot");

        return;

     label01:
        $r97 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r97.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Preserving older settings backup");

     label02:
        $r14 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r14.<java.util.ArrayList: void clear()>();

     label03:
        $r16 = new java.io.FileOutputStream;

        $r15 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.io.File)>($r15);

        r1 = $r16;

        $r18 = new java.io.BufferedOutputStream;

        specialinvoke $r18.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

        r2 = $r18;

        $r17 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r17.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r3 = $r17;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, "utf-8");

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r19);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "packages");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "last-platform-version");

        $i1 = r0.<com.android.server.pm.Settings: int mInternalSdkPlatform>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "internal", $r20);

        $i2 = r0.<com.android.server.pm.Settings: int mExternalSdkPlatform>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "external", $r21);

        $r22 = r0.<com.android.server.pm.Settings: java.lang.String mFingerprint>;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "fingerprint", $r22);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "last-platform-version");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "database-version");

        $i3 = r0.<com.android.server.pm.Settings: int mInternalDatabaseVersion>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "internal", $r23);

        $i4 = r0.<com.android.server.pm.Settings: int mExternalDatabaseVersion>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "external", $r25);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "database-version");

        $r24 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        if $r24 == null goto label04;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "verifier");

        $r100 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        $r98 = virtualinvoke $r100.<android.content.pm.VerifierDeviceIdentity: java.lang.String toString()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "device", $r98);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "verifier");

     label04:
        $r28 = r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        if $r28 == null goto label07;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "read-external-storage");

        $r90 = r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $z14 = virtualinvoke $r90.<java.lang.Boolean: boolean booleanValue()>();

        if $z14 == 0 goto label05;

        $r99 = "1";

        goto label06;

     label05:
        $r99 = "0";

     label06:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enforcement", $r99);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "read-external-storage");

     label07:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        $r27 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r26 = virtualinvoke $r27.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r89 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.BasePermission) $r89;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePermissionLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.BasePermission)>(r3, r5);

        goto label08;

     label09:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r30 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r29 = virtualinvoke $r30.<java.util.HashMap: java.util.Collection values()>();

        r113 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r113.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r92 = interfaceinvoke r113.<java.util.Iterator: java.lang.Object next()>();

        r114 = (com.android.server.pm.BasePermission) $r92;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePermissionLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.BasePermission)>(r3, r114);

        goto label10;

     label11:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r33 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r34 = virtualinvoke $r33.<java.util.HashMap: java.util.Collection values()>();

        r115 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke r115.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r93 = interfaceinvoke r115.<java.util.Iterator: java.lang.Object next()>();

        r116 = (com.android.server.pm.PackageSetting) $r93;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>(r3, r116);

        goto label12;

     label13:
        $r31 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r32 = virtualinvoke $r31.<java.util.HashMap: java.util.Collection values()>();

        r117 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z6 = interfaceinvoke r117.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label15;

        $r91 = interfaceinvoke r117.<java.util.Iterator: java.lang.Object next()>();

        r118 = (com.android.server.pm.PackageSetting) $r91;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>(r3, r118);

        goto label14;

     label15:
        $r37 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r38 = virtualinvoke $r37.<java.util.HashMap: java.util.Collection values()>();

        r119 = interfaceinvoke $r38.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z5 = interfaceinvoke r119.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label19;

        $r88 = interfaceinvoke r119.<java.util.Iterator: java.lang.Object next()>();

        r120 = (com.android.server.pm.SharedUserSetting) $r88;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "shared-user");

        $r87 = r120.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r87);

        $i16 = r120.<com.android.server.pm.SharedUserSetting: int userId>;

        $r83 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i16);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r83);

        $r84 = r120.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r85 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r84.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(r3, "sigs", $r85);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        $r95 = r120.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        r6 = virtualinvoke $r95.<java.util.HashSet: java.util.Iterator iterator()>();

     label17:
        $z12 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label18;

        $r94 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r94;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r7);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label17;

     label18:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "shared-user");

        goto label16;

     label19:
        $r35 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        $i5 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label23;

        $r82 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        r121 = virtualinvoke $r82.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z10 = interfaceinvoke r121.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label23;

        $r78 = interfaceinvoke r121.<java.util.Iterator: java.lang.Object next()>();

        r122 = (android.content.pm.PackageCleanItem) $r78;

        $i15 = r122.<android.content.pm.PackageCleanItem: int userId>;

        r123 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cleaning-package");

        $r79 = r122.<android.content.pm.PackageCleanItem: java.lang.String packageName>;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r79);

        $z11 = r122.<android.content.pm.PackageCleanItem: boolean andCode>;

        if $z11 == 0 goto label21;

        $r86 = "true";

        goto label22;

     label21:
        $r86 = "false";

     label22:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "code", $r86);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "user", r123);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cleaning-package");

        goto label20;

     label23:
        $r36 = r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $i6 = virtualinvoke $r36.<java.util.HashMap: int size()>();

        if $i6 <= 0 goto label25;

        $r76 = r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r77 = virtualinvoke $r76.<java.util.HashMap: java.util.Set entrySet()>();

        r124 = interfaceinvoke $r77.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z8 = interfaceinvoke r124.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label25;

        $r72 = interfaceinvoke r124.<java.util.Iterator: java.lang.Object next()>();

        r125 = (java.util.Map$Entry) $r72;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "renamed-package");

        $r73 = interfaceinvoke r125.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r74 = (java.lang.String) $r73;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "new", $r74);

        $r81 = interfaceinvoke r125.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r80 = (java.lang.String) $r81;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "old", $r80);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "renamed-package");

        goto label24;

     label25:
        $r42 = r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        virtualinvoke $r42.<com.android.server.pm.KeySetManagerService: void writeKeySetManagerServiceLPr(org.xmlpull.v1.XmlSerializer)>(r3);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "packages");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r2.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r1);

        virtualinvoke r2.<java.io.BufferedOutputStream: void close()>();

        $r39 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        virtualinvoke $r39.<java.io.File: boolean delete()>();

        $r41 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r40 = virtualinvoke $r41.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r40, 432, -1, -1);

        $r47 = new java.io.File;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        $r44 = virtualinvoke $r48.<java.io.File: java.lang.String getAbsolutePath()>();

        $r43 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.io.File: void <init>(java.lang.String)>($r45);

        r126 = $r47;

        $r54 = new com.android.internal.util.JournaledFile;

        $r55 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        specialinvoke $r54.<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>($r55, r126);

        r127 = $r54;

        r128 = virtualinvoke r127.<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>();

        $r53 = new java.io.FileOutputStream;

        specialinvoke $r53.<java.io.FileOutputStream: void <init>(java.io.File)>(r128);

        r129 = $r53;

        $r51 = new java.io.BufferedOutputStream;

        specialinvoke $r51.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r129);

        r130 = $r51;

     label26:
        $r52 = virtualinvoke r129.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.io.FileDescriptor,int,int,int)>($r52, 432, 1000, 1032);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        r131 = $r50;

        $r59 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r60 = virtualinvoke $r59.<java.util.HashMap: java.util.Collection values()>();

        r8 = interfaceinvoke $r60.<java.util.Collection: java.util.Iterator iterator()>();

     label27:
        $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label39;

        $r58 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.pm.PackageSetting) $r58;

        $r56 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r56 == null goto label28;

        $r62 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r61 = $r62.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r61 != null goto label29;

     label28:
        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping ");

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to missing metadata");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r63);

        goto label27;

     label29:
        $r68 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r10 = $r68.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r11 = r10.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $i9 = r10.<android.content.pm.ApplicationInfo: int flags>;

        $i8 = $i9 & 2;

        if $i8 == 0 goto label30;

        $z9 = 1;

        goto label31;

     label30:
        $z9 = 0;

     label31:
        z0 = $z9;

        r12 = virtualinvoke r9.<com.android.server.pm.PackageSetting: int[] getGids()>();

        $i7 = virtualinvoke r11.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if $i7 < 0 goto label32;

        goto label27;

     label32:
        virtualinvoke r131.<java.lang.StringBuilder: void setLength(int)>(0);

        $r67 = r10.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i13 = r10.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        if z0 == 0 goto label33;

        $r75 = " 1 ";

        goto label34;

     label33:
        $r75 = " 0 ";

     label34:
        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r71 = r10.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        if r12 == null goto label37;

        $i11 = lengthof r12;

        if $i11 <= 0 goto label37;

        $i10 = r12[0];

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        i0 = 1;

     label35:
        $i12 = lengthof r12;

        if i0 >= $i12 goto label36;

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i14 = r12[i0];

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        i0 = i0 + 1;

        goto label35;

     label36:
        goto label38;

     label37:
        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");

     label38:
        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r70 = virtualinvoke r131.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = virtualinvoke $r70.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r130.<java.io.BufferedOutputStream: void write(byte[])>($r69);

        goto label27;

     label39:
        virtualinvoke r130.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r129);

        virtualinvoke r130.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke r127.<com.android.internal.util.JournaledFile: void commit()>();

     label40:
        goto label42;

     label41:
        $r106 := @caughtexception;

        r132 = $r106;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", "Failed to write packages.list", r132);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r130);

        virtualinvoke r127.<com.android.internal.util.JournaledFile: void rollback()>();

     label42:
        virtualinvoke r0.<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>();

     label43:
        return;

     label44:
        $r105 := @caughtexception;

        r133 = $r105;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", r133);

        goto label46;

     label45:
        $r109 := @caughtexception;

        r134 = $r109;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", r134);

     label46:
        $r104 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z16 = virtualinvoke $r104.<java.io.File: boolean exists()>();

        if $z16 == 0 goto label47;

        $r103 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z15 = virtualinvoke $r103.<java.io.File: boolean delete()>();

        if $z15 != 0 goto label47;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up mangled file: ");

        $r111 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r112 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r111);

        $r110 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", $r110);

     label47:
        return;

        catch java.lang.Exception from label26 to label40 with label41;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label43 with label44;
        catch java.io.IOException from label03 to label43 with label45;
    }

    void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageSetting) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageSetting r2;
        java.util.Iterator r3;
        java.lang.String r4, $r7, $r9, $r10, $r12, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r40, $r42, $r44, $r46, $r48, $r50, $r52;
        com.android.server.pm.BasePermission r5;
        long $l0, $l1, $l2;
        int $i3, $i4, $i5;
        boolean $z0, $z1;
        com.android.server.pm.SharedUserSetting $r24, $r28;
        java.util.HashSet $r32;
        java.lang.Object $r35, $r37;
        java.util.HashMap $r36;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "updated-package");

        $r7 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r7);

        $r9 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r9 == null goto label01;

        $r52 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "realName", $r52);

     label01:
        $r10 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r10);

        $l0 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ft", $r12);

        $l1 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $r15 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "it", $r15);

        $l2 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r16 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ut", $r16);

        $i3 = r2.<com.android.server.pm.PackageSetting: int versionCode>;

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r19);

        $r22 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r21 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z0 != 0 goto label02;

        $r46 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r46);

     label02:
        $r20 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        if $r20 == null goto label03;

        $r44 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nativeLibraryPath", $r44);

     label03:
        $r25 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r25 == null goto label04;

        $r50 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "primaryCpuAbi", $r50);

     label04:
        $r26 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r26 == null goto label05;

        $r48 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "secondaryCpuAbi", $r48);

     label05:
        $r23 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        if $r23 == null goto label06;

        $r40 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cpuAbiOverride", $r40);

     label06:
        $r24 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r24 != null goto label07;

        $i5 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r42);

        goto label08;

     label07:
        $i4 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r27);

     label08:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        $r28 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r28 != null goto label11;

        $r32 = r2.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        r3 = virtualinvoke $r32.<java.util.HashSet: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r37 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r37;

        $r36 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r35 = virtualinvoke $r36.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.pm.BasePermission) $r35;

        if r5 == null goto label10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

     label10:
        goto label09;

     label11:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "updated-package");

        return;
    }

    void writePackageLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageSetting) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageSetting r2;
        java.util.Iterator r3;
        java.lang.String r4, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r23, $r27, $r28, $r29, $r43, $r47, $r49, $r52, $r54, $r56, $r58, $r60;
        boolean $z0, $z1, $z2;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9;
        long $l1, $l2, $l3;
        com.android.server.pm.SharedUserSetting $r26, $r39;
        com.android.server.pm.PackageSignatures $r31;
        java.util.ArrayList $r32;
        com.android.server.pm.PackageKeySetData $r34, $r35, $r36;
        java.util.HashSet $r37;
        java.lang.Object $r45;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package");

        $r6 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r6);

        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r8 == null goto label01;

        $r60 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "realName", $r60);

     label01:
        $r9 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r9);

        $r12 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r11 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label02;

        $r54 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r54);

     label02:
        $r13 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        if $r13 == null goto label03;

        $r52 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nativeLibraryPath", $r52);

     label03:
        $r14 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r14 == null goto label04;

        $r58 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "primaryCpuAbi", $r58);

     label04:
        $r16 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r16 == null goto label05;

        $r56 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "secondaryCpuAbi", $r56);

     label05:
        $r15 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        if $r15 == null goto label06;

        $r49 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cpuAbiOverride", $r49);

     label06:
        $i0 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r17);

        $l1 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ft", $r20);

        $l2 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $r21 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "it", $r21);

        $l3 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r23 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ut", $r23);

        $i4 = r2.<com.android.server.pm.PackageSetting: int versionCode>;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r27);

        $r26 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r26 != null goto label07;

        $i9 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r47);

        goto label08;

     label07:
        $i5 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r28);

     label08:
        $z1 = r2.<com.android.server.pm.PackageSetting: boolean uidError>;

        if $z1 == 0 goto label09;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uidError", "true");

     label09:
        $i6 = r2.<com.android.server.pm.PackageSetting: int installStatus>;

        if $i6 != 0 goto label10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installStatus", "false");

     label10:
        $r29 = r2.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r29 == null goto label11;

        $r43 = r2.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installer", $r43);

     label11:
        $r31 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r32 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r31.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(r1, "sigs", $r32);

        $i8 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i7 = $i8 & 1;

        if $i7 != 0 goto label14;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        $r39 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r39 != null goto label13;

        $r37 = r2.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        r3 = virtualinvoke $r37.<java.util.HashSet: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r45 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r45;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label12;

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

     label14:
        $r36 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeSigningKeySetsLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(r1, $r36);

        $r35 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(r1, $r35);

        $r34 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(r1, $r34);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package");

        return;
    }

    void writeSigningKeySetsLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageKeySetData r2;
        long l0, l3;
        long[] r3, $r4;
        int i1, i2;
        java.lang.String $r6, $r11;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageKeySetData;

        $r4 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: long[] getSigningKeySets()>();

        if $r4 == null goto label2;

        l0 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "proper-signing-keyset");

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "proper-signing-keyset");

        r3 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: long[] getSigningKeySets()>();

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        l3 = r3[i2];

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "signing-keyset");

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "signing-keyset");

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageKeySetData r2;
        long[] r3;
        int i0, i1;
        long l2;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageKeySetData;

        $z0 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>();

        if $z0 == 0 goto label2;

        r3 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        l2 = r3[i1];

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "upgrade-keyset");

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "upgrade-keyset");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageKeySetData r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r9, $r13;
        java.lang.String $r10, $r14;
        java.lang.Long $r12;
        long $l0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageKeySetData;

        $r5 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: java.util.Map getAliases()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r7;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "defined-keyset");

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "alias", $r10);

        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Long) $r13;

        $l0 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "defined-keyset");

        goto label1;

     label2:
        return;
    }

    void writePermissionLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.BasePermission) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.BasePermission r2;
        android.content.pm.PermissionInfo r3, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r6, $r8, $r15, $r18, $r22;
        android.content.pm.PackageParser$Permission $r11, $r20;
        java.lang.CharSequence $r13, $r14;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.BasePermission;

        $i0 = r2.<com.android.server.pm.BasePermission: int type>;

        if $i0 == 1 goto label6;

        $r4 = r2.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        if $r4 == null goto label6;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r6 = r2.<com.android.server.pm.BasePermission: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r6);

        $r8 = r2.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "package", $r8);

        $i1 = r2.<com.android.server.pm.BasePermission: int protectionLevel>;

        if $i1 == 0 goto label1;

        $i5 = r2.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "protection", $r22);

     label1:
        $i2 = r2.<com.android.server.pm.BasePermission: int type>;

        if $i2 != 2 goto label5;

        $r11 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r11 == null goto label2;

        $r20 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r19 = $r20.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        goto label3;

     label2:
        $r19 = r2.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

     label3:
        r3 = $r19;

        if r3 == null goto label5;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "dynamic");

        $i3 = r3.<android.content.pm.PermissionInfo: int icon>;

        if $i3 == 0 goto label4;

        $i4 = r3.<android.content.pm.PermissionInfo: int icon>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r18);

     label4:
        $r13 = r3.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r13 == null goto label5;

        $r14 = r3.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r15 = interfaceinvoke $r14.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r15);

     label5:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

     label6:
        return;
    }

    java.util.ArrayList getListOfIncompleteInstallPackagesLPr()
    {
        com.android.server.pm.Settings r0;
        java.util.HashSet r1, $r6;
        java.util.Iterator r2;
        java.util.ArrayList r3, $r9;
        java.lang.String r4;
        com.android.server.pm.PackageSetting r5;
        java.util.HashMap $r7, $r11;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r10, $r12;
        int $i0;

        r0 := @this: com.android.server.pm.Settings;

        $r6 = new java.util.HashSet;

        $r7 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>();

        specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

        r1 = $r6;

        r2 = virtualinvoke r1.<java.util.HashSet: java.util.Iterator iterator()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r10;

        $r11 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.pm.PackageSetting) $r12;

        $i0 = virtualinvoke r5.<com.android.server.pm.PackageSetting: int getInstallStatus()>();

        if $i0 != 0 goto label2;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label2:
        goto label1;

     label3:
        return r3;
    }

    void addPackageToCleanLPw(android.content.pm.PackageCleanItem)
    {
        com.android.server.pm.Settings r0;
        android.content.pm.PackageCleanItem r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.pm.PackageCleanItem;

        $r2 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    boolean readLPw(com.android.server.pm.PackageManagerService, java.util.List, int, boolean)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageManagerService r1;
        java.util.List r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i20, $i21, $i23, i28, i29, i30;
        boolean z0, z1, $z2, $z3, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z30;
        java.io.FileInputStream r3, $r84, $r95;
        java.lang.String r5, r6, r7, r8, $r31, $r42, $r45, $r56, $r59, $r60, $r61, $r65, $r66, $r67, $r69, $r72, $r74, $r76, $r81, $r85, $r100, $r106, $r110, $r112, $r119, $r121, $r123, $r127, $r129, r138, r139, r140, r141, r143, r144, r146, r148, r154, r155;
        java.io.File $r10, $r14, $r16, $r17, $r32, $r55, $r58, $r88, $r91, $r94, $r96, $r99, $r107;
        java.util.ArrayList $r11, $r12, $r13, $r15, $r36;
        java.util.Collection $r18;
        java.util.HashMap $r19, $r25, $r28, $r79, $r80, $r82;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r46, $r47, $r48, $r50, $r52, $r53, $r54, $r62, $r63, $r64, $r68, $r70, $r71, $r87, $r90, $r93, $r98, $r101, $r102, $r103, $r104, $r105, $r108, $r109, $r113, $r115, $r116, $r117, $r118, $r122, $r126, $r128, $r131, $r132, $r133, $r134;
        java.lang.Object $r29, $r34, $r35, r152, r160;
        com.android.server.pm.SharedUserSetting $r33, $r57;
        android.content.pm.VerifierDeviceIdentity $r73;
        com.android.server.pm.KeySetManagerService $r75;
        java.lang.Boolean $r77;
        android.content.pm.PackageCleanItem $r78;
        org.xmlpull.v1.XmlPullParserException $r97, r149;
        java.io.IOException $r114, $r136, r150;
        java.lang.NumberFormatException $r124, $r125, $r135;
        java.lang.IllegalArgumentException $r130, r147;
        org.xmlpull.v1.XmlPullParser r137;
        com.android.server.pm.PendingPackage r151;
        com.android.server.pm.PackageSetting r153, r159;
        java.util.Iterator r156, r158;
        android.content.pm.UserInfo r157;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 = null;

        $r10 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z2 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label04;

     label01:
        $r84 = new java.io.FileInputStream;

        $r91 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        specialinvoke $r84.<java.io.FileInputStream: void <init>(java.io.File)>($r91);

        r3 = $r84;

        $r90 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup settings file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup settings file");

        $r88 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z30 = virtualinvoke $r88.<java.io.File: boolean exists()>();

        if $z30 == 0 goto label02;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up settings file ");

        $r107 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r108 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r107);

        $r106 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r106);

        $r99 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r99.<java.io.File: boolean delete()>();

     label02:
        goto label04;

     label03:
        $r136 := @caughtexception;

     label04:
        $r12 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r12.<java.util.ArrayList: void clear()>();

        $r11 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

     label05:
        if r3 != null goto label08;

        $r96 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z28 = virtualinvoke $r96.<java.io.File: boolean exists()>();

        if $z28 != 0 goto label07;

        $r87 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No settings file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No settings file; creating initial state");

        r0.<com.android.server.pm.Settings: int mExternalSdkPlatform> = i0;

        r0.<com.android.server.pm.Settings: int mInternalSdkPlatform> = i0;

        $r85 = <android.os.Build: java.lang.String FINGERPRINT>;

        r0.<com.android.server.pm.Settings: java.lang.String mFingerprint> = $r85;

     label06:
        return 0;

     label07:
        $r95 = new java.io.FileInputStream;

        $r94 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        specialinvoke $r95.<java.io.FileInputStream: void <init>(java.io.File)>($r94);

        r3 = $r95;

     label08:
        r137 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r3, null);

     label09:
        $i4 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i4;

        if $i4 == 2 goto label10;

        if i1 == 1 goto label10;

        goto label09;

     label10:
        if i1 == 2 goto label12;

        $r93 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in settings file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager settings");

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "No start tag found in package manager settings");

     label11:
        return 0;

     label12:
        i2 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label13:
        $i5 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: int next()>();

        i28 = $i5;

        if $i5 == 1 goto label53;

        if i28 != 3 goto label14;

        $i23 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i23 <= i2 goto label53;

     label14:
        if i28 == 3 goto label13;

        if i28 != 4 goto label15;

        goto label13;

     label15:
        r5 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z15 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z15 == 0 goto label16;

        specialinvoke r0.<com.android.server.pm.Settings: void readPackageLPw(org.xmlpull.v1.XmlPullParser)>(r137);

        goto label52;

     label16:
        $z16 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("permissions");

        if $z16 == 0 goto label17;

        $r80 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        specialinvoke r0.<com.android.server.pm.Settings: void readPermissionsLPw(java.util.HashMap,org.xmlpull.v1.XmlPullParser)>($r80, r137);

        goto label52;

     label17:
        $z13 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("permission-trees");

        if $z13 == 0 goto label18;

        $r79 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        specialinvoke r0.<com.android.server.pm.Settings: void readPermissionsLPw(java.util.HashMap,org.xmlpull.v1.XmlPullParser)>($r79, r137);

        goto label52;

     label18:
        $z14 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("shared-user");

        if $z14 == 0 goto label19;

        specialinvoke r0.<com.android.server.pm.Settings: void readSharedUserLPw(org.xmlpull.v1.XmlPullParser)>(r137);

        goto label52;

     label19:
        $z11 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("preferred-packages");

        if $z11 == 0 goto label20;

        goto label52;

     label20:
        $z12 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

        if $z12 == 0 goto label21;

        specialinvoke r0.<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r137, 0);

        goto label52;

     label21:
        $z24 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("persistent-preferred-activities");

        if $z24 == 0 goto label22;

        specialinvoke r0.<com.android.server.pm.Settings: void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r137, 0);

        goto label52;

     label22:
        $z23 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("crossProfile-intent-filters");

        if $z23 == 0 goto label23;

        specialinvoke r0.<com.android.server.pm.Settings: void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser,int)>(r137, 0);

        goto label52;

     label23:
        $z22 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("updated-package");

        if $z22 == 0 goto label24;

        specialinvoke r0.<com.android.server.pm.Settings: void readDisabledSysPackageLPw(org.xmlpull.v1.XmlPullParser)>(r137);

        goto label52;

     label24:
        $z21 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("cleaning-package");

        if $z21 == 0 goto label31;

        r6 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r7 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "user");

        r8 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "code");

        if r6 == null goto label30;

        i3 = 0;

        z1 = 1;

     label25:
        if r7 == null goto label26;

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

     label26:
        goto label28;

     label27:
        $r135 := @caughtexception;

     label28:
        if r8 == null goto label29;

        z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r8);

     label29:
        $r78 = new android.content.pm.PackageCleanItem;

        specialinvoke $r78.<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>(i3, r6, z1);

        virtualinvoke r0.<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>($r78);

     label30:
        goto label52;

     label31:
        $z20 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("renamed-package");

        if $z20 == 0 goto label33;

        r138 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "new");

        r139 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "old");

        if r138 == null goto label32;

        if r139 == null goto label32;

        $r82 = r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        virtualinvoke $r82.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r138, r139);

     label32:
        goto label52;

     label33:
        $z19 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("last-platform-version");

        if $z19 == 0 goto label39;

        r0.<com.android.server.pm.Settings: int mExternalSdkPlatform> = 0;

        r0.<com.android.server.pm.Settings: int mInternalSdkPlatform> = 0;

     label34:
        r140 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "internal");

        if r140 == null goto label35;

        $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r140);

        r0.<com.android.server.pm.Settings: int mInternalSdkPlatform> = $i21;

     label35:
        r141 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "external");

        if r141 == null goto label36;

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r141);

        r0.<com.android.server.pm.Settings: int mExternalSdkPlatform> = $i20;

     label36:
        goto label38;

     label37:
        $r124 := @caughtexception;

     label38:
        $r81 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "fingerprint");

        r0.<com.android.server.pm.Settings: java.lang.String mFingerprint> = $r81;

        goto label52;

     label39:
        $z18 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("database-version");

        if $z18 == 0 goto label44;

        r0.<com.android.server.pm.Settings: int mExternalDatabaseVersion> = 0;

        r0.<com.android.server.pm.Settings: int mInternalDatabaseVersion> = 0;

     label40:
        r143 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "internal");

        if r143 == null goto label41;

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r143);

        r0.<com.android.server.pm.Settings: int mInternalDatabaseVersion> = $i16;

     label41:
        r144 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "external");

        if r144 == null goto label42;

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r144);

        r0.<com.android.server.pm.Settings: int mExternalDatabaseVersion> = $i17;

     label42:
        goto label52;

     label43:
        $r125 := @caughtexception;

        goto label52;

     label44:
        $z17 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("verifier");

        if $z17 == 0 goto label49;

        r146 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "device");

     label45:
        $r73 = staticinvoke <android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity parse(java.lang.String)>(r146);

        r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity> = $r73;

     label46:
        goto label48;

     label47:
        $r130 := @caughtexception;

        r147 = $r130;

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discard invalid verifier device id: ");

        $r127 = virtualinvoke r147.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r128 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);

        $r123 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r123);

     label48:
        goto label52;

     label49:
        $r72 = "read-external-storage";

        $z26 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z26 == 0 goto label50;

        r148 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enforcement");

        $r76 = "1";

        $z27 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r148);

        $r77 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z27);

        r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced> = $r77;

        goto label52;

     label50:
        $z25 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("keyset-settings");

        if $z25 == 0 goto label51;

        $r75 = r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        virtualinvoke $r75.<com.android.server.pm.KeySetManagerService: void readKeySetsLPw(org.xmlpull.v1.XmlPullParser)>(r137);

        goto label52;

     label51:
        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <packages>: ");

        $r69 = interfaceinvoke r137.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r74 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r74);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r137);

     label52:
        goto label13;

     label53:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label54:
        goto label57;

     label55:
        $r97 := @caughtexception;

        r149 = $r97;

        $r102 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r100 = virtualinvoke r149.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        $r101 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r121 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r149);

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r119);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", r149);

        goto label57;

     label56:
        $r114 := @caughtexception;

        r150 = $r114;

        $r116 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r110 = virtualinvoke r150.<java.io.IOException: java.lang.String toString()>();

        $r109 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r112 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r150);

        $r129 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r129);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", r150);

     label57:
        $r13 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        i29 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i30 = 0;

     label58:
        if i30 >= i29 goto label63;

        $r36 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        $r35 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r151 = (com.android.server.pm.PendingPackage) $r35;

        $i9 = r151.<com.android.server.pm.PendingPackage: int sharedId>;

        r152 = virtualinvoke r0.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i9);

        if r152 == null goto label60;

        $z10 = r152 instanceof com.android.server.pm.SharedUserSetting;

        if $z10 == 0 goto label60;

        $r66 = r151.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r65 = r151.<com.android.server.pm.PendingPackage: java.lang.String realName>;

        $r57 = (com.android.server.pm.SharedUserSetting) r152;

        $r58 = r151.<com.android.server.pm.PendingPackage: java.io.File codePath>;

        $r55 = r151.<com.android.server.pm.PendingPackage: java.io.File resourcePath>;

        $r56 = r151.<com.android.server.pm.PendingPackage: java.lang.String legacyNativeLibraryPathString>;

        $r59 = r151.<com.android.server.pm.PendingPackage: java.lang.String primaryCpuAbiString>;

        $r60 = r151.<com.android.server.pm.PendingPackage: java.lang.String secondaryCpuAbiString>;

        $i13 = r151.<com.android.server.pm.PendingPackage: int versionCode>;

        $i14 = r151.<com.android.server.pm.PendingPackage: int pkgFlags>;

        r153 = specialinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(java.lang.String,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,int,android.os.UserHandle,boolean,boolean)>($r66, null, $r65, $r57, $r58, $r55, $r56, $r59, $r60, $i13, $i14, null, 1, 0);

        if r153 != null goto label59;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application package for ");

        $r61 = r151.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r67 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r67);

        goto label62;

     label59:
        virtualinvoke r153.<com.android.server.pm.PackageSetting: void copyFrom(com.android.server.pm.PackageSettingBase)>(r151);

        goto label62;

     label60:
        if r152 == null goto label61;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r45 = r151.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r52 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        $i12 = r151.<com.android.server.pm.PendingPackage: int sharedId>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not a shared uid\n");

        r154 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r154);

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, r154);

        goto label62;

     label61:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r42 = r151.<com.android.server.pm.PendingPackage: java.lang.String name>;

        $r37 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        $i11 = r151.<com.android.server.pm.PendingPackage: int sharedId>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r47 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not defined\n");

        r155 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, r155);

     label62:
        i30 = i30 + 1;

        goto label58;

     label63:
        $r15 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r15.<java.util.ArrayList: void clear()>();

        $r14 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        $z3 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label64;

        $r32 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $z9 = virtualinvoke $r32.<java.io.File: boolean exists()>();

        if $z9 == 0 goto label65;

     label64:
        virtualinvoke r0.<com.android.server.pm.Settings: void readStoppedLPw()>();

        $r16 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        virtualinvoke $r16.<java.io.File: boolean delete()>();

        $r17 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r17.<java.io.File: boolean delete()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(0);

        goto label68;

     label65:
        if r2 != null goto label66;

        virtualinvoke r0.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>(0);

        goto label68;

     label66:
        r156 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label67:
        $z8 = interfaceinvoke r156.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label68;

        $r34 = interfaceinvoke r156.<java.util.Iterator: java.lang.Object next()>();

        r157 = (android.content.pm.UserInfo) $r34;

        $i10 = r157.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>($i10);

        goto label67;

     label68:
        $r19 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r18 = virtualinvoke $r19.<java.util.HashMap: java.util.Collection values()>();

        r158 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label69:
        $z6 = interfaceinvoke r158.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label71;

        $r29 = interfaceinvoke r158.<java.util.Iterator: java.lang.Object next()>();

        r159 = (com.android.server.pm.PackageSetting) $r29;

        $i8 = r159.<com.android.server.pm.PackageSetting: int appId>;

        r160 = virtualinvoke r0.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i8);

        if r160 == null goto label70;

        $z7 = r160 instanceof com.android.server.pm.SharedUserSetting;

        if $z7 == 0 goto label70;

        $r33 = (com.android.server.pm.SharedUserSetting) r160;

        r159.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = $r33;

     label70:
        goto label69;

     label71:
        $r20 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read completed successfully: ");

        $r25 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $i6 = virtualinvoke $r25.<java.util.HashMap: int size()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packages, ");

        $r28 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $i7 = virtualinvoke $r28.<java.util.HashMap: int size()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared uids\n");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        return 1;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label25 to label26 with label27;
        catch java.lang.NumberFormatException from label34 to label36 with label37;
        catch java.lang.NumberFormatException from label40 to label42 with label43;
        catch java.lang.IllegalArgumentException from label45 to label46 with label47;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label55;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label11 with label55;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label54 with label55;
        catch java.io.IOException from label05 to label06 with label56;
        catch java.io.IOException from label07 to label11 with label56;
        catch java.io.IOException from label12 to label54 with label56;
    }

    void readDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService, int)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageManagerService r1;
        int i0, i1, i2, $i3, $i9, $i10, $i11, i14, i15;
        java.util.Iterator r2;
        com.android.server.pm.PackageSetting r3;
        java.util.ArrayList r4, $r52;
        android.content.pm.PackageParser$ActivityIntentInfo r5;
        java.io.FileInputStream r6, $r16;
        org.xmlpull.v1.XmlPullParser r7;
        java.lang.Throwable r9, $r63;
        java.util.HashMap $r11;
        java.util.Collection $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.File $r13, $r14, r73, r75;
        java.lang.String $r15, $r17, $r18, $r21, $r29, $r34, $r40, $r42, $r57, $r60, $r61, $r67;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r41, $r44, $r45, $r46, $r62, $r64, $r66, $r68, $r69, $r70;
        java.lang.Object $r43, $r48;
        android.content.pm.PackageParser$Package $r47, $r50, $r51;
        android.content.ComponentName $r49;
        java.io.IOException $r53, $r54, $r55, $r56, $r59, $r65, $r71, r80;
        android.content.pm.PackageParser$Activity $r58;
        org.xmlpull.v1.XmlPullParserException $r72, r78;
        java.io.File[] r74;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 := @parameter1: int;

        $r11 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r43 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.PackageSetting) $r43;

        $i9 = r3.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i11 = $i9 & 1;

        if $i11 == 0 goto label03;

        $r50 = r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r50 == null goto label03;

        $r51 = r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r52 = $r51.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters>;

        if $r52 == null goto label03;

        $r47 = r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r4 = $r47.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters>;

        i1 = 0;

     label02:
        $i10 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i1 >= $i10 goto label03;

        $r48 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (android.content.pm.PackageParser$ActivityIntentInfo) $r48;

        $r49 = new android.content.ComponentName;

        $r60 = r3.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r58 = r5.<android.content.pm.PackageParser$ActivityIntentInfo: android.content.pm.PackageParser$Activity activity>;

        $r57 = $r58.<android.content.pm.PackageParser$Activity: java.lang.String className>;

        specialinvoke $r49.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r60, $r57);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.IntentFilter,android.content.ComponentName,int)>(r1, r5, $r49, i0);

        i1 = i1 + 1;

        goto label02;

     label03:
        goto label01;

     label04:
        $r14 = new java.io.File;

        $r13 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, "etc/preferred-apps");

        r73 = $r14;

        $z2 = virtualinvoke r73.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label05;

        $z1 = virtualinvoke r73.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label06;

     label05:
        return;

     label06:
        $z3 = virtualinvoke r73.<java.io.File: boolean canRead()>();

        if $z3 != 0 goto label07;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r42 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r42);

        return;

     label07:
        r74 = virtualinvoke r73.<java.io.File: java.io.File[] listFiles()>();

        i14 = lengthof r74;

        i15 = 0;

     label08:
        if i15 >= i14 goto label45;

        r75 = r74[i15];

        $r15 = virtualinvoke r75.<java.io.File: java.lang.String getPath()>();

        $z4 = virtualinvoke $r15.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z4 != 0 goto label09;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageSettings", $r40);

        goto label44;

     label09:
        $z5 = virtualinvoke r75.<java.io.File: boolean canRead()>();

        if $z5 != 0 goto label10;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r34);

        goto label44;

     label10:
        r6 = null;

     label11:
        $r16 = new java.io.FileInputStream;

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.io.File)>(r75);

        r6 = $r16;

        r7 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r6, null);

     label12:
        $i3 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 2 goto label13;

        if i2 == 1 goto label13;

        goto label12;

     label13:
        if i2 == 2 goto label18;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have start tag");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r29);

     label14:
        if r6 == null goto label44;

     label15:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label16:
        goto label44;

     label17:
        $r53 := @caughtexception;

        goto label44;

     label18:
        $r18 = "preferred-activities";

        $r17 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z6 != 0 goto label23;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not start with \'preferred-activities\'");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r21);

     label19:
        if r6 == null goto label44;

     label20:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label21:
        goto label44;

     label22:
        $r59 := @caughtexception;

        goto label44;

     label23:
        specialinvoke r0.<com.android.server.pm.Settings: void readDefaultPreferredActivitiesLPw(com.android.server.pm.PackageManagerService,org.xmlpull.v1.XmlPullParser,int)>(r1, r7, i0);

     label24:
        if r6 == null goto label44;

     label25:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label26:
        goto label44;

     label27:
        $r55 := @caughtexception;

        goto label44;

     label28:
        $r72 := @caughtexception;

        r78 = $r72;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading apps file ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r67 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", $r67, r78);

     label29:
        if r6 == null goto label44;

     label30:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label31:
        goto label44;

     label32:
        $r71 := @caughtexception;

        goto label44;

     label33:
        $r65 := @caughtexception;

        r80 = $r65;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading apps file ");

        $r62 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", $r61, r80);

     label34:
        if r6 == null goto label44;

     label35:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label36:
        goto label44;

     label37:
        $r54 := @caughtexception;

        goto label44;

     label38:
        $r63 := @caughtexception;

        r9 = $r63;

     label39:
        if r6 == null goto label43;

     label40:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label41:
        goto label43;

     label42:
        $r56 := @caughtexception;

     label43:
        throw r9;

     label44:
        i15 = i15 + 1;

        goto label08;

     label45:
        return;

        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label25 to label26 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label14 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label11 to label14 with label33;
        catch java.io.IOException from label18 to label19 with label33;
        catch java.io.IOException from label23 to label24 with label33;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label11 to label14 with label38;
        catch java.lang.Throwable from label18 to label19 with label38;
        catch java.lang.Throwable from label23 to label24 with label38;
        catch java.lang.Throwable from label28 to label29 with label38;
        catch java.lang.Throwable from label33 to label34 with label38;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    private void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService, android.content.IntentFilter, android.content.ComponentName, int)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageManagerService r1;
        android.content.IntentFilter r2;
        android.content.ComponentName r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        android.content.Intent r4, r9, $r12, r13, $r17, $r21, $r27, $r32, $r44, $r47, r56, r58, r62, r63;
        java.lang.String r5, r6, $r15, $r33, $r37, $r39, $r40, $r41, $r45, r59, r61;
        boolean z0, $z1, $z2, $z3, z4, z5, z6;
        android.net.Uri$Builder r7, r11, $r18, $r23, $r28, $r35, $r50, r55, r57, r60;
        android.os.PatternMatcher r8, r10;
        android.net.Uri $r19, $r24, $r31, $r43, $r48;
        android.content.IntentFilter$AuthorityEntry r54;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: android.content.IntentFilter;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>()>();

        r4 = $r12;

        i1 = 0;

        $r15 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getAction(int)>(0);

        virtualinvoke r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r15);

        i2 = 0;

     label01:
        $i6 = virtualinvoke r2.<android.content.IntentFilter: int countCategories()>();

        if i2 >= $i6 goto label04;

        r5 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getCategory(int)>(i2);

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.category.DEFAULT");

        if $z3 == 0 goto label02;

        i1 = i1 | 65536;

        goto label03;

     label02:
        virtualinvoke r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r5);

     label03:
        i2 = i2 + 1;

        goto label01;

     label04:
        z4 = 1;

        z5 = 0;

        i3 = 0;

     label05:
        $i5 = virtualinvoke r2.<android.content.IntentFilter: int countDataSchemes()>();

        if i3 >= $i5 goto label17;

        z0 = 1;

        r6 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(i3);

        if r6 == null goto label06;

        $z2 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label06;

        z5 = 1;

     label06:
        i4 = 0;

     label07:
        $i10 = virtualinvoke r2.<android.content.IntentFilter: int countDataSchemeSpecificParts()>();

        if i4 >= $i10 goto label08;

        $r50 = new android.net.Uri$Builder;

        specialinvoke $r50.<android.net.Uri$Builder: void <init>()>();

        r7 = $r50;

        virtualinvoke r7.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r6);

        r8 = virtualinvoke r2.<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>(i4);

        $r45 = virtualinvoke r8.<android.os.PatternMatcher: java.lang.String getPath()>();

        virtualinvoke r7.<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(java.lang.String)>($r45);

        $r47 = new android.content.Intent;

        specialinvoke $r47.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r9 = $r47;

        $r48 = virtualinvoke r7.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r9.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r48);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r9, i1, r3, r6, r8, null, null, i0);

        z0 = 0;

        i4 = i4 + 1;

        goto label07;

     label08:
        i12 = 0;

     label09:
        $i9 = virtualinvoke r2.<android.content.IntentFilter: int countDataAuthorities()>();

        if i12 >= $i9 goto label15;

        z6 = 1;

        r54 = virtualinvoke r2.<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>(i12);

        i13 = 0;

     label10:
        $i11 = virtualinvoke r2.<android.content.IntentFilter: int countDataPaths()>();

        if i13 >= $i11 goto label12;

        $r35 = new android.net.Uri$Builder;

        specialinvoke $r35.<android.net.Uri$Builder: void <init>()>();

        r11 = $r35;

        virtualinvoke r11.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r6);

        $r40 = virtualinvoke r54.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if $r40 == null goto label11;

        $r41 = virtualinvoke r54.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        virtualinvoke r11.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r41);

     label11:
        r10 = virtualinvoke r2.<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>(i13);

        $r39 = virtualinvoke r10.<android.os.PatternMatcher: java.lang.String getPath()>();

        virtualinvoke r11.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>($r39);

        $r44 = new android.content.Intent;

        specialinvoke $r44.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r13 = $r44;

        $r43 = virtualinvoke r11.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r13.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r43);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r13, i1, r3, r6, null, r54, r10, i0);

        z0 = 0;

        z6 = 0;

        i13 = i13 + 1;

        goto label10;

     label12:
        if z6 == 0 goto label14;

        $r28 = new android.net.Uri$Builder;

        specialinvoke $r28.<android.net.Uri$Builder: void <init>()>();

        r55 = $r28;

        virtualinvoke r55.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r6);

        $r33 = virtualinvoke r54.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if $r33 == null goto label13;

        $r37 = virtualinvoke r54.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        virtualinvoke r55.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r37);

     label13:
        $r32 = new android.content.Intent;

        specialinvoke $r32.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r56 = $r32;

        $r31 = virtualinvoke r55.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r56.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r31);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r56, i1, r3, r6, null, r54, null, i0);

        z0 = 0;

     label14:
        i12 = i12 + 1;

        goto label09;

     label15:
        if z0 == 0 goto label16;

        $r23 = new android.net.Uri$Builder;

        specialinvoke $r23.<android.net.Uri$Builder: void <init>()>();

        r57 = $r23;

        virtualinvoke r57.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r6);

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r58 = $r27;

        $r24 = virtualinvoke r57.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r58.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r24);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r58, i1, r3, r6, null, null, null, i0);

     label16:
        z4 = 0;

        i3 = i3 + 1;

        goto label05;

     label17:
        i14 = 0;

     label18:
        $i7 = virtualinvoke r2.<android.content.IntentFilter: int countDataTypes()>();

        if i14 >= $i7 goto label24;

        r59 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getDataType(int)>(i14);

        if z5 == 0 goto label22;

        $r18 = new android.net.Uri$Builder;

        specialinvoke $r18.<android.net.Uri$Builder: void <init>()>();

        r60 = $r18;

        i15 = 0;

     label19:
        $i8 = virtualinvoke r2.<android.content.IntentFilter: int countDataSchemes()>();

        if i15 >= $i8 goto label21;

        r61 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(i15);

        if r61 == null goto label20;

        $z1 = virtualinvoke r61.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label20;

        $r21 = new android.content.Intent;

        specialinvoke $r21.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r62 = $r21;

        virtualinvoke r60.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r61);

        $r19 = virtualinvoke r60.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r62.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r19, r59);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r62, i1, r3, r61, null, null, null, i0);

     label20:
        i15 = i15 + 1;

        goto label19;

     label21:
        goto label23;

     label22:
        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r63 = $r17;

        virtualinvoke r63.<android.content.Intent: android.content.Intent setType(java.lang.String)>(r59);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r63, i1, r3, null, null, null, null, i0);

     label23:
        z4 = 0;

        i14 = i14 + 1;

        goto label18;

     label24:
        if z4 == 0 goto label25;

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, r4, i1, r3, null, null, null, null, i0);

     label25:
        return;
    }

    private void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService, android.content.Intent, int, android.content.ComponentName, java.lang.String, android.os.PatternMatcher, android.content.IntentFilter$AuthorityEntry, android.os.PatternMatcher, int)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageManagerService r1;
        android.content.Intent r2;
        int i0, i1, i2, i4, $i5, $i7, $i8, $i10, $i12, $i13, $i14, $i15, $i16, i18;
        android.content.ComponentName r3, r9, $r37, $r57;
        java.lang.String r4, r13, $r14, $r18, $r20, $r24, $r29, $r33, $r36, $r38, $r39, $r44, $r49, $r50, $r51, $r52, $r54, $r58, $r59, $r61, $r62, $r69, $r72;
        android.os.PatternMatcher r5, r7;
        android.content.IntentFilter$AuthorityEntry r6;
        java.util.List r8;
        byte b3;
        boolean z0, $z1, $z2, $z3;
        android.content.ComponentName[] r10;
        android.content.pm.ActivityInfo r11;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r12;
        java.lang.StringBuilder $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r63, $r65, $r70, $r71, $r73, r78;
        android.content.IntentFilter $r40, r74;
        com.android.server.pm.PreferredActivity $r43, r77;
        java.util.Set $r45, $r46;
        java.lang.Object $r47, $r55, $r60, $r66;
        com.android.server.pm.PreferredIntentResolver $r48;
        android.content.pm.ApplicationInfo $r53;
        android.content.pm.ResolveInfo $r56, $r67, $r68;
        android.content.IntentFilter$MalformedMimeTypeException $r64;
        java.util.Iterator r75;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.ComponentName;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.PatternMatcher;

        r6 := @parameter6: android.content.IntentFilter$AuthorityEntry;

        r7 := @parameter7: android.os.PatternMatcher;

        i1 := @parameter8: int;

        $r12 = r1.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r14 = virtualinvoke r2.<android.content.Intent: java.lang.String getType()>();

        r8 = virtualinvoke $r12.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r2, $r14, i0, 0);

        i2 = 0;

        b3 = 0;

        if r8 == null goto label24;

        $i5 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i5 <= 1 goto label24;

        z0 = 0;

        r9 = null;

        $i7 = interfaceinvoke r8.<java.util.List: int size()>();

        r10 = newarray (android.content.ComponentName)[$i7];

        i4 = 0;

     label01:
        $i8 = interfaceinvoke r8.<java.util.List: int size()>();

        if i4 >= $i8 goto label04;

        $r55 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        $r56 = (android.content.pm.ResolveInfo) $r55;

        r11 = $r56.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r57 = new android.content.ComponentName;

        $r52 = r11.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r51 = r11.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r57.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r52, $r51);

        r10[i4] = $r57;

        $r53 = r11.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r53.<android.content.pm.ApplicationInfo: int flags>;

        $i15 = $i14 & 1;

        if $i15 != 0 goto label02;

        $r66 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        $r68 = (android.content.pm.ResolveInfo) $r66;

        $i16 = $r68.<android.content.pm.ResolveInfo: int match>;

        if $i16 < b3 goto label03;

        r9 = r10[i4];

        goto label04;

     label02:
        $r61 = virtualinvoke r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r62 = r11.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r62);

        if $z3 == 0 goto label03;

        $r59 = virtualinvoke r3.<android.content.ComponentName: java.lang.String getClassName()>();

        $r58 = r11.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z2 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>($r58);

        if $z2 == 0 goto label03;

        z0 = 1;

        $r60 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        $r67 = (android.content.pm.ResolveInfo) $r60;

        i2 = $r67.<android.content.pm.ResolveInfo: int match>;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        if r9 == null goto label05;

        if b3 >= i2 goto label05;

        r9 = null;

     label05:
        if z0 == 0 goto label18;

        if r9 != null goto label18;

        $r40 = new android.content.IntentFilter;

        specialinvoke $r40.<android.content.IntentFilter: void <init>()>();

        r74 = $r40;

        $r39 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        if $r39 == null goto label06;

        $r54 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r74.<android.content.IntentFilter: void addAction(java.lang.String)>($r54);

     label06:
        $r45 = virtualinvoke r2.<android.content.Intent: java.util.Set getCategories()>();

        if $r45 == null goto label08;

        $r46 = virtualinvoke r2.<android.content.Intent: java.util.Set getCategories()>();

        r75 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r47 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r47;

        virtualinvoke r74.<android.content.IntentFilter: void addCategory(java.lang.String)>(r13);

        goto label07;

     label08:
        $i12 = i0 & 65536;

        if $i12 == 0 goto label09;

        virtualinvoke r74.<android.content.IntentFilter: void addCategory(java.lang.String)>("android.intent.category.DEFAULT");

     label09:
        if r4 == null goto label10;

        virtualinvoke r74.<android.content.IntentFilter: void addDataScheme(java.lang.String)>(r4);

     label10:
        if r5 == null goto label11;

        $r50 = virtualinvoke r5.<android.os.PatternMatcher: java.lang.String getPath()>();

        $i13 = virtualinvoke r5.<android.os.PatternMatcher: int getType()>();

        virtualinvoke r74.<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>($r50, $i13);

     label11:
        if r6 == null goto label12;

        virtualinvoke r74.<android.content.IntentFilter: void addDataAuthority(android.content.IntentFilter$AuthorityEntry)>(r6);

     label12:
        if r7 == null goto label13;

        virtualinvoke r74.<android.content.IntentFilter: void addDataPath(android.os.PatternMatcher)>(r7);

     label13:
        $r44 = virtualinvoke r2.<android.content.Intent: java.lang.String getType()>();

        if $r44 == null goto label17;

     label14:
        $r49 = virtualinvoke r2.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke r74.<android.content.IntentFilter: void addDataType(java.lang.String)>($r49);

     label15:
        goto label17;

     label16:
        $r64 := @caughtexception;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed mimetype ");

        $r72 = virtualinvoke r2.<android.content.Intent: java.lang.String getType()>();

        $r73 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r70 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r69);

     label17:
        $r43 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r43.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>(r74, i2, r10, r3, 1);

        r77 = $r43;

        $r48 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(i1);

        virtualinvoke $r48.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>(r77);

        goto label23;

     label18:
        if r9 != null goto label22;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        r78 = $r27;

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No component ");

        $r33 = virtualinvoke r3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found setting preferred ");

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; possible matches are ");

        i18 = 0;

     label19:
        $i10 = lengthof r10;

        if i18 >= $i10 goto label21;

        if i18 <= 0 goto label20;

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label20:
        $r37 = r10[i18];

        $r36 = virtualinvoke $r37.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        i18 = i18 + 1;

        goto label19;

     label21:
        $r38 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r38);

        goto label23;

     label22:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not setting preferred ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; found third party match ");

        $r24 = virtualinvoke r9.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageSettings", $r29);

     label23:
        goto label25;

     label24:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No potential matches found for ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while setting preferred ");

        $r18 = virtualinvoke r3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r20);

     label25:
        return;

        catch android.content.IntentFilter$MalformedMimeTypeException from label14 to label15 with label16;
    }

    private void readDefaultPreferredActivitiesLPw(com.android.server.pm.PackageManagerService, org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageManagerService r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r3, $r7, $r8, $r13, $r15, $r20, $r22;
        com.android.server.pm.PreferredActivity r4, $r11;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r9, $r12, $r14, $r17, $r18, $r19;
        com.android.server.pm.PreferredComponent $r10, $r16, $r21;
        android.content.ComponentName $r23;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter2: int;

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label8;

        if i2 != 3 goto label2;

        $i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        $r11 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r11.<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(r2);

        r4 = $r11;

        $r10 = r4.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r13 = virtualinvoke $r10.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        if $r13 != null goto label4;

        $r21 = r4.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r23 = $r21.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(com.android.server.pm.PackageManagerService,android.content.IntentFilter,android.content.ComponentName,int)>(r1, r4, $r23, i0);

        goto label5;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r16 = r4.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r15 = virtualinvoke $r16.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r20 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r22);

     label5:
        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

     label7:
        goto label1;

     label8:
        return;
    }

    private int readInt(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, $r12, $r14;
        int i0, $i1;
        java.lang.NumberFormatException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13, $r15;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r2, r3);

     label1:
        if r4 != null goto label3;

     label2:
        return i0;

     label3:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label4:
        return $i1;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: attribute ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad integer value ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r14);

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private void readPermissionsLPw(java.util.HashMap, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        java.util.HashMap r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r3, r4, r5, r6, $r10, $r15, $r16, $r18, $r20, $r22, $r25, $r26, $r28, $r29;
        boolean z0, $z1;
        com.android.server.pm.BasePermission r7, $r23;
        android.content.pm.PermissionInfo r8, $r24;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r17, $r19, $r21;
        byte $b9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.util.HashMap;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label11;

        if i1 != 3 goto label02;

        $i8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i0 goto label11;

     label02:
        if i1 == 3 goto label01;

        if i1 != 4 goto label03;

        goto label01;

     label03:
        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label09;

        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        if r4 == null goto label07;

        if r5 == null goto label07;

        $r20 = "dynamic";

        z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        $r23 = new com.android.server.pm.BasePermission;

        if z0 == 0 goto label04;

        $b9 = 2;

        goto label05;

     label04:
        $b9 = 0;

     label05:
        specialinvoke $r23.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>(r4, r5, $b9);

        r7 = $r23;

        $i5 = specialinvoke r0.<com.android.server.pm.Settings: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>(r2, null, "protection", 0);

        r7.<com.android.server.pm.BasePermission: int protectionLevel> = $i5;

        $i3 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i4 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>($i3);

        r7.<com.android.server.pm.BasePermission: int protectionLevel> = $i4;

        if z0 == 0 goto label06;

        $r24 = new android.content.pm.PermissionInfo;

        specialinvoke $r24.<android.content.pm.PermissionInfo: void <init>()>();

        r8 = $r24;

        $r25 = virtualinvoke r5.<java.lang.String: java.lang.String intern()>();

        r8.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r25;

        $r29 = virtualinvoke r4.<java.lang.String: java.lang.String intern()>();

        r8.<android.content.pm.PermissionInfo: java.lang.String name> = $r29;

        $i7 = specialinvoke r0.<com.android.server.pm.Settings: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>(r2, null, "icon", 0);

        r8.<android.content.pm.PermissionInfo: int icon> = $i7;

        $r28 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        r8.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel> = $r28;

        $i6 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        r8.<android.content.pm.PermissionInfo: int protectionLevel> = $i6;

        r7.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo> = r8;

     label06:
        $r26 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r7);

        goto label08;

     label07:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: permissions has no name at ");

        $r18 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r22);

     label08:
        goto label10;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element reading permissions: ");

        $r10 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r15 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r16);

     label10:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label11:
        return;
    }

    private void readDisabledSysPackageLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r15, r16, r17, $r25, $r28, r35, r37, r39, r41;
        int i0, i2, $i3, $i4, $i5, $i8, $i9, i11, i13;
        java.io.File r13, $r18, $r19;
        com.android.server.pm.PackageSetting r14, $r20;
        long l1, $l6, $l7, l12;
        boolean $z0, $z1;
        java.util.HashMap $r21;
        java.lang.StringBuilder $r22, $r24, $r26;
        java.util.HashSet $r27;
        java.lang.NumberFormatException $r29, $r30, $r31, $r32, $r33;
        byte b10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "realName");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "requiredCpuAbi");

        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nativeLibraryPath");

        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "primaryCpuAbi");

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "secondaryCpuAbi");

        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cpuAbiOverride");

        if r8 != null goto label01;

        if r6 == null goto label01;

        r8 = r6;

     label01:
        if r5 != null goto label02;

        r5 = r4;

     label02:
        r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        i0 = 0;

        if r11 == null goto label06;

     label03:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r11);

     label04:
        goto label06;

     label05:
        $r32 := @caughtexception;

     label06:
        b10 = 0;

        i11 = b10 | 1;

        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>(r4);

        r13 = $r18;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>(r13);

        if $z0 == 0 goto label07;

        i11 = i11 | 1073741824;

     label07:
        $r20 = new com.android.server.pm.PackageSetting;

        $r19 = new java.io.File;

        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>(r5);

        specialinvoke $r20.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>(r2, r3, r13, $r19, r7, r8, r9, r10, i0, i11);

        r14 = $r20;

        r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ft");

        if r15 == null goto label11;

     label08:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r15, 16);

        virtualinvoke r14.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(l1);

     label09:
        goto label15;

     label10:
        $r31 := @caughtexception;

        goto label15;

     label11:
        r35 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

        if r35 == null goto label15;

     label12:
        l12 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r35);

        virtualinvoke r14.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(l12);

     label13:
        goto label15;

     label14:
        $r30 := @caughtexception;

     label15:
        r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "it");

        if r37 == null goto label19;

     label16:
        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r37, 16);

        r14.<com.android.server.pm.PackageSetting: long firstInstallTime> = $l6;

     label17:
        goto label19;

     label18:
        $r29 := @caughtexception;

     label19:
        r39 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ut");

        if r39 == null goto label23;

     label20:
        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r39, 16);

        r14.<com.android.server.pm.PackageSetting: long lastUpdateTime> = $l7;

     label21:
        goto label23;

     label22:
        $r33 := @caughtexception;

     label23:
        r41 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        if r41 == null goto label24;

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r41);

        goto label25;

     label24:
        $i8 = 0;

     label25:
        r14.<com.android.server.pm.PackageSetting: int appId> = $i8;

        $i4 = r14.<com.android.server.pm.PackageSetting: int appId>;

        if $i4 > 0 goto label28;

        r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        if r16 == null goto label26;

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

        goto label27;

     label26:
        $i9 = 0;

     label27:
        r14.<com.android.server.pm.PackageSetting: int appId> = $i9;

     label28:
        i13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label29:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label34;

        if i2 != 3 goto label30;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i13 goto label34;

     label30:
        if i2 == 3 goto label29;

        if i2 != 4 goto label31;

        goto label29;

     label31:
        r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z1 == 0 goto label32;

        $r27 = r14.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        specialinvoke r0.<com.android.server.pm.Settings: void readGrantedPermissionsLPw(org.xmlpull.v1.XmlPullParser,java.util.HashSet)>(r1, $r27);

        goto label33;

     label32:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <updated-package>: ");

        $r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r28);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label33:
        goto label29;

     label34:
        $r21 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r14);

        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch java.lang.NumberFormatException from label12 to label13 with label14;
        catch java.lang.NumberFormatException from label16 to label17 with label18;
        catch java.lang.NumberFormatException from label20 to label21 with label22;
    }

    private void readPackageLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, r6, r7, r8, r10, r11, $r17, $r19, $r21, $r23, $r24, $r27, $r28, $r29, $r31, $r39, $r49, $r51, $r56, $r57, $r59, $r62, $r66, $r68, $r71, $r76, $r82, $r84, $r89, $r91, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114;
        long l0, l2, l3, l7, l16, l17, l18;
        int i1, i4, i5, i6, $i8, $i9, $i10, $i11, $i13, i14, i15;
        com.android.server.pm.PackageSettingBase r9;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r22, $r25, $r26, $r38, $r40, $r41, $r42, $r43, $r44, $r52, $r53, $r58, $r60, $r61, $r63, $r64, $r65, $r67, $r69, $r70, $r75, $r77, $r78, $r79, $r80, $r83, $r87, $r88, $r92, $r93, $r95, $r96, $r97, $r98, $r99;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.server.pm.PackageKeySetData $r30, $r32, $r33, $r37;
        com.android.server.pm.PackageSignatures $r34;
        java.util.HashSet $r35;
        java.util.ArrayList $r36, $r45;
        com.android.server.pm.PendingPackage $r46, $r50;
        java.io.File $r47, $r48, $r54, $r55;
        byte $b12;
        java.lang.NumberFormatException $r72, $r73, $r74, $r81, $r85, $r86, $r90, $r94;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = null;

        r3 = null;

        r4 = null;

        r5 = null;

        r6 = null;

        r7 = null;

        r8 = null;

        i1 = 0;

        l0 = 0L;

        l2 = 0L;

        l3 = 0L;

        r9 = null;

        i4 = 0;

     label01:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r100 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "realName");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uidError");

        r101 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        r102 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        r103 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        r104 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "requiredCpuAbi");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nativeLibraryPath");

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "primaryCpuAbi");

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "secondaryCpuAbi");

        r105 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cpuAbiOverride");

        if r5 != null goto label02;

        if r104 == null goto label02;

        r5 = r104;

     label02:
        r106 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        if r106 == null goto label06;

     label03:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r106);

     label04:
        goto label06;

     label05:
        $r73 := @caughtexception;

     label06:
        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installer");

        r107 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

        if r107 == null goto label10;

     label07:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r107);

     label08:
        goto label14;

     label09:
        $r86 := @caughtexception;

        goto label14;

     label10:
        r108 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

        if r108 == null goto label13;

        $r71 = "true";

        $z10 = virtualinvoke $r71.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r108);

        if $z10 == 0 goto label11;

        $b12 = 1;

        goto label12;

     label11:
        $b12 = 0;

     label12:
        i1 = 0 | $b12;

        goto label14;

     label13:
        i1 = 1;

     label14:
        r109 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ft");

        if r109 == null goto label18;

     label15:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r109, 16);

     label16:
        goto label22;

     label17:
        $r72 := @caughtexception;

        goto label22;

     label18:
        r110 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

        if r110 == null goto label22;

     label19:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r110);

     label20:
        goto label22;

     label21:
        $r74 := @caughtexception;

     label22:
        r111 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "it");

        if r111 == null goto label26;

     label23:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r111, 16);

     label24:
        goto label26;

     label25:
        $r90 := @caughtexception;

     label26:
        r112 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ut");

        if r112 == null goto label30;

     label27:
        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r112, 16);

     label28:
        goto label30;

     label29:
        $r81 := @caughtexception;

     label30:
        if r3 == null goto label31;

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        goto label32;

     label31:
        $i13 = 0;

     label32:
        i14 = $i13;

        if r103 != null goto label33;

        r103 = r102;

     label33:
        if r100 == null goto label34;

        r100 = virtualinvoke r100.<java.lang.String: java.lang.String intern()>();

     label34:
        if r2 != null goto label35;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no name at ");

        $r62 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r75 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r76);

        goto label43;

     label35:
        if r102 != null goto label36;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no codePath at ");

        $r57 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r59);

        goto label43;

     label36:
        if i14 <= 0 goto label38;

        $r56 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r55 = new java.io.File;

        specialinvoke $r55.<java.io.File: void <init>(java.lang.String)>(r102);

        $r54 = new java.io.File;

        specialinvoke $r54.<java.io.File: void <init>(java.lang.String)>(r103);

        r9 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>($r56, r100, $r55, $r54, r4, r5, r6, r105, i14, i4, i1);

        if r9 != null goto label37;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure adding uid ");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r67 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while parsing settings at ");

        $r66 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r68);

        goto label43;

     label37:
        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>(l0);

        r9.<com.android.server.pm.PackageSettingBase: long firstInstallTime> = l2;

        r9.<com.android.server.pm.PackageSettingBase: long lastUpdateTime> = l3;

        goto label43;

     label38:
        if r101 == null goto label42;

        if r101 == null goto label39;

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r101);

        goto label40;

     label39:
        $i11 = 0;

     label40:
        i15 = $i11;

        if i15 <= 0 goto label41;

        $r50 = new com.android.server.pm.PendingPackage;

        $r49 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r48 = new java.io.File;

        specialinvoke $r48.<java.io.File: void <init>(java.lang.String)>(r102);

        $r47 = new java.io.File;

        specialinvoke $r47.<java.io.File: void <init>(java.lang.String)>(r103);

        specialinvoke $r50.<com.android.server.pm.PendingPackage: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>($r49, r100, $r48, $r47, r4, r5, r6, r105, i15, i4, i1);

        r9 = $r50;

        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>(l0);

        r9.<com.android.server.pm.PackageSettingBase: long firstInstallTime> = l2;

        r9.<com.android.server.pm.PackageSettingBase: long lastUpdateTime> = l3;

        $r45 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        $r46 = (com.android.server.pm.PendingPackage) r9;

        virtualinvoke $r45.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

        goto label43;

     label41:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad sharedId ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r39 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r52 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r51);

        goto label43;

     label42:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r17);

     label43:
        goto label45;

     label44:
        $r94 := @caughtexception;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r98 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r96 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r91 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r92 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r89 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r89);

     label45:
        if r9 == null goto label70;

        $r21 = "true";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        r9.<com.android.server.pm.PackageSettingBase: boolean uidError> = $z1;

        r9.<com.android.server.pm.PackageSettingBase: java.lang.String installerPackageName> = r7;

        r9.<com.android.server.pm.PackageSettingBase: java.lang.String legacyNativeLibraryPathString> = r4;

        r9.<com.android.server.pm.PackageSettingBase: java.lang.String primaryCpuAbiString> = r5;

        r9.<com.android.server.pm.PackageSettingBase: java.lang.String secondaryCpuAbiString> = r6;

        r113 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabled");

        if r113 == null goto label53;

     label46:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r113);

        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>($i9, 0, null);

     label47:
        goto label54;

     label48:
        $r85 := @caughtexception;

        $z12 = virtualinvoke r113.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z12 == 0 goto label49;

        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(1, 0, null);

        goto label52;

     label49:
        $z11 = virtualinvoke r113.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z11 == 0 goto label50;

        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(2, 0, null);

        goto label52;

     label50:
        $z13 = virtualinvoke r113.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("default");

        if $z13 == 0 goto label51;

        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(0, 0, null);

        goto label52;

     label51:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r80 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad enabled value: ");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r84 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r83 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r82);

     label52:
        goto label54;

     label53:
        virtualinvoke r9.<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>(0, 0, null);

     label54:
        r114 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installStatus");

        if r114 == null goto label56;

        $z9 = virtualinvoke r114.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z9 == 0 goto label55;

        r9.<com.android.server.pm.PackageSettingBase: int installStatus> = 0;

        goto label56;

     label55:
        r9.<com.android.server.pm.PackageSettingBase: int installStatus> = 1;

     label56:
        i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label57:
        $i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i5 = $i8;

        if $i8 == 1 goto label69;

        if i5 != 3 goto label58;

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 <= i6 goto label69;

     label58:
        if i5 == 3 goto label57;

        if i5 != 4 goto label59;

        goto label57;

     label59:
        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

        if $z0 == 0 goto label60;

        specialinvoke r0.<com.android.server.pm.Settings: void readDisabledComponentsLPw(com.android.server.pm.PackageSettingBase,org.xmlpull.v1.XmlPullParser,int)>(r9, r1, 0);

        goto label68;

     label60:
        $z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z5 == 0 goto label61;

        specialinvoke r0.<com.android.server.pm.Settings: void readEnabledComponentsLPw(com.android.server.pm.PackageSettingBase,org.xmlpull.v1.XmlPullParser,int)>(r9, r1, 0);

        goto label68;

     label61:
        $z6 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z6 == 0 goto label62;

        $r34 = r9.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageSignatures signatures>;

        $r36 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r34.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r1, $r36);

        goto label68;

     label62:
        $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z7 == 0 goto label63;

        $r35 = r9.<com.android.server.pm.PackageSettingBase: java.util.HashSet grantedPermissions>;

        specialinvoke r0.<com.android.server.pm.Settings: void readGrantedPermissionsLPw(org.xmlpull.v1.XmlPullParser,java.util.HashSet)>(r1, $r35);

        r9.<com.android.server.pm.PackageSettingBase: boolean permissionsFixed> = 1;

        goto label68;

     label63:
        $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("proper-signing-keyset");

        if $z8 == 0 goto label64;

        $r29 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r29);

        $r37 = r9.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r37.<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>(l7);

        goto label68;

     label64:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("signing-keyset");

        if $z2 == 0 goto label65;

        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l16 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r28);

        $r30 = r9.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r30.<com.android.server.pm.PackageKeySetData: void addSigningKeySet(long)>(l16);

        goto label68;

     label65:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("upgrade-keyset");

        if $z3 == 0 goto label66;

        $r31 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l17 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r31);

        $r33 = r9.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r33.<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>(l17);

        goto label68;

     label66:
        $z4 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("defined-keyset");

        if $z4 == 0 goto label67;

        $r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l18 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r23);

        r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "alias");

        $r32 = r9.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r32.<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>(l18, r11);

        goto label68;

     label67:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <package>: ");

        $r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r24);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label68:
        goto label57;

     label69:
        goto label71;

     label70:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label71:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label15 to label16 with label17;
        catch java.lang.NumberFormatException from label19 to label20 with label21;
        catch java.lang.NumberFormatException from label23 to label24 with label25;
        catch java.lang.NumberFormatException from label27 to label28 with label29;
        catch java.lang.NumberFormatException from label01 to label43 with label44;
        catch java.lang.NumberFormatException from label46 to label47 with label48;
    }

    private void readDisabledComponentsLPw(com.android.server.pm.PackageSettingBase, org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSettingBase r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r3, r4, $r7, $r8, $r13, $r14, $r15;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSettingBase;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter2: int;

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label8;

        if i2 != 3 goto label2;

        $i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r4 == null goto label4;

        $r14 = virtualinvoke r4.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r1.<com.android.server.pm.PackageSettingBase: void addDisabledComponent(java.lang.String,int)>($r14, i0);

        goto label5;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <disabled-components> has no name at ");

        $r13 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r15);

     label5:
        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <disabled-components>: ");

        $r7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label8:
        return;
    }

    private void readEnabledComponentsLPw(com.android.server.pm.PackageSettingBase, org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSettingBase r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r3, r4, $r7, $r8, $r13, $r14, $r15;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSettingBase;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter2: int;

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label8;

        if i2 != 3 goto label2;

        $i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r4 == null goto label4;

        $r14 = virtualinvoke r4.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r1.<com.android.server.pm.PackageSettingBase: void addEnabledComponent(java.lang.String,int)>($r14, i0);

        goto label5;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <enabled-components> has no name at ");

        $r13 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r15);

     label5:
        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <enabled-components>: ");

        $r7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label8:
        return;
    }

    private void readSharedUserLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r5, $r6, $r7, $r8, $r13, $r15, $r19, $r23, $r29, $r31, $r34, $r38, $r43, $r46;
        byte b0;
        com.android.server.pm.SharedUserSetting r4, $r9;
        int i1, i2, $i3, $i4, $i5, i6;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r12, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r30, $r32, $r33, $r35, $r36, $r39, $r40, $r41, $r42, $r44, $r45;
        java.util.HashSet $r14;
        com.android.server.pm.PackageSignatures $r16;
        java.util.ArrayList $r17;
        java.lang.NumberFormatException $r37;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = null;

        r3 = null;

        b0 = 0;

        r4 = null;

     label01:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        if r3 == null goto label02;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        goto label03;

     label02:
        $i5 = 0;

     label03:
        i1 = $i5;

        $r6 = "true";

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label04;

        b0 = b0 | 1;

     label04:
        if r2 != null goto label05;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <shared-user> has no name at ");

        $r34 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r38);

        goto label07;

     label05:
        if i1 != 0 goto label06;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: shared-user ");

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r31 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r29);

        goto label07;

     label06:
        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r9 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>($r8, i1, b0);

        r4 = $r9;

        if $r9 != null goto label07;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Occurred while parsing settings at ");

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r23);

     label07:
        goto label09;

     label08:
        $r37 := @caughtexception;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r43 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r46);

     label09:
        if r4 == null goto label17;

        i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label10:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 1 goto label16;

        if i2 != 3 goto label11;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i6 goto label16;

     label11:
        if i2 == 3 goto label10;

        if i2 != 4 goto label12;

        goto label10;

     label12:
        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z1 == 0 goto label13;

        $r16 = r4.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r17 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r16.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r1, $r17);

        goto label15;

     label13:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z2 == 0 goto label14;

        $r14 = r4.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        specialinvoke r0.<com.android.server.pm.Settings: void readGrantedPermissionsLPw(org.xmlpull.v1.XmlPullParser,java.util.HashSet)>(r1, $r14);

        goto label15;

     label14:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <shared-user>: ");

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r15);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label15:
        goto label10;

     label16:
        goto label18;

     label17:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label18:
        return;

        catch java.lang.NumberFormatException from label01 to label07 with label08;
    }

    private void readGrantedPermissionsLPw(org.xmlpull.v1.XmlPullParser, java.util.HashSet) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.HashSet r2;
        int i0, i1, $i2, $i3;
        java.lang.String r3, r4, $r7, $r9, $r11, $r13, $r15;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r12, $r14;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.HashSet;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label8;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label8;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r4 == null goto label4;

        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r15);

        goto label5;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <perms> has no name at ");

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r13);

     label5:
        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <perms>: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r9);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label8:
        return;
    }

    void createNewUserLILPw(com.android.server.pm.PackageManagerService, com.android.server.pm.Installer, int, java.io.File)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageManagerService r1;
        com.android.server.pm.Installer r2;
        int i0, $i2, $i3, $i4, $i5;
        java.io.File r3;
        java.util.Iterator r4;
        com.android.server.pm.PackageSetting r5;
        java.lang.String $r6, $r13, $r15;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        boolean $z1, $z2;
        java.lang.Object $r9;
        android.content.pm.PackageParser$Package $r10, $r12, $r14;
        android.content.pm.ApplicationInfo $r11, $r16;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: com.android.server.pm.Installer;

        i0 := @parameter2: int;

        r3 := @parameter3: java.io.File;

        virtualinvoke r3.<java.io.File: boolean mkdir()>();

        $r6 = virtualinvoke r3.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r6, 505, -1, -1);

        $r7 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.PackageSetting) $r9;

        $r10 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r10 == null goto label1;

        $r12 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r11 = $r12.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r11 != null goto label2;

        goto label1;

     label2:
        $i3 = r5.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i2 = $i3 & 1;

        if $i2 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        virtualinvoke r5.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z2, i0);

        $r13 = r5.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $i4 = r5.<com.android.server.pm.PackageSetting: int appId>;

        $i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i4);

        $r14 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r16 = $r14.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r15 = $r16.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        virtualinvoke r2.<com.android.server.pm.Installer: int createUserData(java.lang.String,int,int,java.lang.String)>($r13, $i5, i0, $r15);

        goto label1;

     label5:
        virtualinvoke r0.<com.android.server.pm.Settings: void readDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>(r1, i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        return;
    }

    void removeUserLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.HashMap $r4;
        boolean $z0;
        android.util.SparseArray $r5;
        java.lang.Object $r6, $r7;
        com.android.server.pm.PackageSetting $r8;
        java.io.File r9, r10;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        r1 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (com.android.server.pm.PackageSetting) $r7;

        virtualinvoke $r8.<com.android.server.pm.PackageSetting: void removeUser(int)>(i0);

        goto label1;

     label2:
        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        r9 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(i0);

        virtualinvoke r9.<java.io.File: boolean delete()>();

        r10 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(i0);

        virtualinvoke r10.<java.io.File: boolean delete()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void removeCrossProfileIntentFiltersLPw(int)>(i0);

        return;
    }

    void removeCrossProfileIntentFiltersLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2, i3, $i4;
        android.util.SparseArray r1, $r7, $r8, $r10, $r11, $r13, $r18;
        com.android.server.pm.CrossProfileIntentResolver r2;
        boolean z0, $z1;
        java.util.HashSet r3, $r15;
        java.util.Iterator r4;
        com.android.server.pm.CrossProfileIntentFilter r5;
        java.lang.Throwable r6, $r17;
        java.lang.Object $r9, $r12, $r16;
        java.util.Set $r14;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r7 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r9 == null goto label02;

        $r18 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        virtualinvoke $r18.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

     label02:
        $r10 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        i1 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        i2 = 0;

     label03:
        if i2 >= i1 goto label08;

        $r11 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        i3 = virtualinvoke $r11.<android.util.SparseArray: int keyAt(int)>(i2);

        $r13 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r12 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.pm.CrossProfileIntentResolver) $r12;

        z0 = 0;

        $r15 = new java.util.HashSet;

        $r14 = virtualinvoke r2.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r14);

        r3 = $r15;

        r4 = virtualinvoke r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.CrossProfileIntentFilter) $r16;

        $i4 = virtualinvoke r5.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        if $i4 != i0 goto label05;

        z0 = 1;

        virtualinvoke r2.<com.android.server.pm.CrossProfileIntentResolver: void removeFilter(android.content.IntentFilter)>(r5);

     label05:
        goto label04;

     label06:
        if z0 == 0 goto label07;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i3);

     label07:
        i2 = i2 + 1;

        goto label03;

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r1;

     label11:
        throw r6;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void setFirstAvailableUid(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $i1 = <com.android.server.pm.Settings: int mFirstAvailableUid>;

        if i0 <= $i1 goto label1;

        <com.android.server.pm.Settings: int mFirstAvailableUid> = i0;

     label1:
        return;
    }

    private int newUserIdLPw(java.lang.Object)
    {
        com.android.server.pm.Settings r0;
        java.lang.Object r1, $r5;
        int i0, i1, $i2, $i3;
        java.util.ArrayList $r2, $r3, $r4, $r6;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = <com.android.server.pm.Settings: int mFirstAvailableUid>;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        if $r5 != null goto label2;

        $r6 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, r1);

        $i3 = 10000 + i1;

        return $i3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if i0 <= 9999 goto label4;

        return -1;

     label4:
        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i2 = 10000 + i0;

        return $i2;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()
    {
        com.android.server.pm.Settings r0;
        android.content.pm.VerifierDeviceIdentity $r1, $r2, $r3;

        r0 := @this: com.android.server.pm.Settings;

        $r1 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity generate()>();

        r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity> = $r3;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeLPr()>();

     label1:
        $r2 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        return $r2;
    }

    public com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        com.android.server.pm.PackageSetting r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        return r2;
    }

    private java.lang.String compToString(java.util.HashSet)
    {
        com.android.server.pm.Settings r0;
        java.util.HashSet r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.util.HashSet;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.util.HashSet: java.lang.Object[] toArray()>();

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2);

        goto label2;

     label1:
        $r3 = "[]";

     label2:
        return $r3;
    }

    boolean isEnabledLPr(android.content.pm.ComponentInfo, int, int)
    {
        com.android.server.pm.Settings r0;
        android.content.pm.ComponentInfo r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r2, $r10, $r13;
        com.android.server.pm.PackageSetting r3;
        android.content.pm.PackageUserState r4;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Package $r7, $r14;
        java.util.HashSet $r8, $r9, $r11, $r12;
        boolean $z0, $z1, $z2, $z3;
        android.content.pm.ApplicationInfo $r15;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.pm.ComponentInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 & 512;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        r2 = r1.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        $r5 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.server.pm.PackageSetting) $r6;

        if r3 != null goto label2;

        return 0;

     label2:
        r4 = virtualinvoke r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $i3 = i0 & 32768;

        if $i3 == 0 goto label3;

        $i7 = r4.<android.content.pm.PackageUserState: int enabled>;

        if $i7 != 4 goto label3;

        return 1;

     label3:
        $i4 = r4.<android.content.pm.PackageUserState: int enabled>;

        if $i4 == 2 goto label4;

        $i5 = r4.<android.content.pm.PackageUserState: int enabled>;

        if $i5 == 3 goto label4;

        $i6 = r4.<android.content.pm.PackageUserState: int enabled>;

        if $i6 == 4 goto label4;

        $r7 = r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 == null goto label5;

        $r14 = r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r15 = $r14.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z3 = $r15.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z3 != 0 goto label5;

        $i8 = r4.<android.content.pm.PackageUserState: int enabled>;

        if $i8 != 0 goto label5;

     label4:
        return 0;

     label5:
        $r9 = r4.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        if $r9 == null goto label6;

        $r12 = r4.<android.content.pm.PackageUserState: java.util.HashSet enabledComponents>;

        $r13 = r1.<android.content.pm.ComponentInfo: java.lang.String name>;

        $z2 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>($r13);

        if $z2 == 0 goto label6;

        return 1;

     label6:
        $r8 = r4.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        if $r8 == null goto label7;

        $r11 = r4.<android.content.pm.PackageUserState: java.util.HashSet disabledComponents>;

        $r10 = r1.<android.content.pm.ComponentInfo: java.lang.String name>;

        $z1 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z1 == 0 goto label7;

        return 0;

     label7:
        $z0 = r1.<android.content.pm.ComponentInfo: boolean enabled>;

        return $z0;
    }

    java.lang.String getInstallerPackageNameLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r5, $r10;
        com.android.server.pm.PackageSetting r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r5 = r2.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        return $r5;
    }

    int getApplicationEnabledSettingLPr(java.lang.String, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r9;
        int i0, $i1;
        com.android.server.pm.PackageSetting r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $i1 = virtualinvoke r2.<com.android.server.pm.PackageSetting: int getEnabled(int)>(i0);

        return $i1;
    }

    int getComponentEnabledSettingLPr(android.content.ComponentName, int)
    {
        com.android.server.pm.Settings r0;
        android.content.ComponentName r1;
        int i0, $i1;
        java.lang.String r2, r4, $r11;
        com.android.server.pm.PackageSetting r3;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.server.pm.PackageSetting) $r6;

        if r3 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $i1 = virtualinvoke r3.<com.android.server.pm.PackageSetting: int getCurrentEnabledStateLPr(java.lang.String,int)>(r4, i0);

        return $i1;
    }

    boolean setPackageStoppedStateLPw(java.lang.String, boolean, boolean, int, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r5, $r7, $r8, $r18, $r22;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.pm.PackageSetting r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int[] $r6;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r21;
        java.lang.SecurityException $r10;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r3 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 != null goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label1:
        if z1 != 0 goto label2;

        $i3 = r2.<com.android.server.pm.PackageSetting: int appId>;

        if i2 == $i3 goto label2;

        $r10 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: attempt to change stopped state from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", package uid=");

        $i5 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label2:
        $z2 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getStopped(int)>(i1);

        if $z2 == z0 goto label5;

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(z0, i1);

        $z3 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>(i1);

        if $z3 == 0 goto label4;

        $r5 = r2.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r5 == null goto label3;

        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r7 = r2.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        $r6 = newarray (int)[1];

        $r6[0] = i1;

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_FIRST_LAUNCH", $r8, null, $r7, null, $r6);

     label3:
        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(0, i1);

     label4:
        return 1;

     label5:
        return 0;
    }

    private java.util.List getAllUsers()
    {
        com.android.server.pm.Settings r0;
        long l0;
        java.util.List r1;
        java.lang.Throwable r2, $r4;
        com.android.server.pm.UserManagerService $r3;
        java.lang.NullPointerException $r5;

        r0 := @this: com.android.server.pm.Settings;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r1 = virtualinvoke $r3.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r1;

     label3:
        $r5 := @caughtexception;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label7:
        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static final void printFlags(java.io.PrintWriter, int, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.Object[] r1;
        java.lang.Object $r2, $r4;
        java.lang.Integer $r3;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("[ ");

        i1 = 0;

     label1:
        $i3 = lengthof r1;

        if i1 >= $i3 goto label3;

        $r2 = r1[i1];

        $r3 = (java.lang.Integer) $r2;

        i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i4 = i0 & i2;

        if $i4 == 0 goto label2;

        $i5 = i1 + 1;

        $r4 = r1[$i5];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.Object)>($r4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

     label2:
        i1 = i1 + 2;

        goto label1;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("]");

        return;
    }

    void dumpPackageLPr(java.io.PrintWriter, java.lang.String, java.lang.String, com.android.server.pm.PackageSetting, java.text.SimpleDateFormat, java.util.Date, java.util.List)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, r10, r13, $r14, $r15, $r16, $r17, $r18, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r33, $r40, $r43, $r46, $r54, $r87, $r90, $r95, $r101, $r102, $r103, $r110, $r112, $r113, $r114, $r115, $r116, $r117, $r118, r121, r124, r126;
        com.android.server.pm.PackageSetting r4;
        java.text.SimpleDateFormat r5;
        java.util.Date r6;
        java.util.List r7;
        java.util.Iterator r8, r12, r119, r123, r125;
        android.content.pm.UserInfo r9, r120;
        java.util.HashSet r11, $r35, $r36, r122;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, i55, i56, i57, i58;
        int[] $r19;
        android.content.pm.PackageParser$Package $r20, $r27, $r28, $r42, $r47, $r49, $r50, $r52, $r53, $r56, $r58, $r60, $r62, $r65, $r67, $r69, $r71, $r73, $r75, $r78, $r79, $r82, $r85, $r86, $r91, $r93, $r96, $r98, $r100, $r107, $r109;
        com.android.server.pm.SharedUserSetting $r21, $r104;
        long $l3, $l4, $l5, $l41, $l42;
        com.android.server.pm.PackageSignatures $r32;
        java.lang.Object[] $r34, $r44;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16;
        java.lang.Object $r37, $r38, $r39, $r41, $r80, $r89, $r105, $r111;
        android.content.pm.ApplicationInfo $r45, $r48, $r51, $r55, $r57, $r59, $r61, $r63, $r66, $r108;
        java.util.ArrayList $r64, $r72, $r74, $r76, $r77, $r81, $r88, $r92, $r94, $r97, $r99, $r106;
        java.lang.String[] $r68, $r70, $r83, $r84;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.server.pm.PackageSetting;

        r5 := @parameter4: java.text.SimpleDateFormat;

        r6 := @parameter5: java.util.Date;

        r7 := @parameter6: java.util.List;

        if r3 == null goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r102 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r102 == null goto label01;

        $r101 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label02;

     label01:
        $r101 = r4.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r101);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i44 = r4.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i44);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i43 = r4.<com.android.server.pm.PackageSetting: int versionCode>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i43);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l42 = r4.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l42);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l41 = r4.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r112 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r112 == null goto label03;

        $r115 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        goto label04;

     label03:
        $r115 = "?";

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r115);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z14 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label16;

        $r111 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.content.pm.UserInfo) $r111;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("usr");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i53 = r9.<android.content.pm.UserInfo: int id>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i53);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i54 = r9.<android.content.pm.UserInfo: int id>;

        $z15 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i54);

        if $z15 == 0 goto label06;

        $r113 = "I";

        goto label07;

     label06:
        $r113 = "i";

     label07:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r113);

        $i52 = r9.<android.content.pm.UserInfo: int id>;

        $z12 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getHidden(int)>($i52);

        if $z12 == 0 goto label08;

        $r114 = "B";

        goto label09;

     label08:
        $r114 = "b";

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r114);

        $i48 = r9.<android.content.pm.UserInfo: int id>;

        $z11 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getStopped(int)>($i48);

        if $z11 == 0 goto label10;

        $r117 = "S";

        goto label11;

     label10:
        $r117 = "s";

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r117);

        $i47 = r9.<android.content.pm.UserInfo: int id>;

        $z13 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>($i47);

        if $z13 == 0 goto label12;

        $r118 = "l";

        goto label13;

     label12:
        $r118 = "L";

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r118);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i51 = r9.<android.content.pm.UserInfo: int id>;

        $i49 = virtualinvoke r4.<com.android.server.pm.PackageSetting: int getEnabled(int)>($i51);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i49);

        $i50 = r9.<android.content.pm.UserInfo: int id>;

        r10 = virtualinvoke r4.<com.android.server.pm.PackageSetting: java.lang.String getLastDisabledAppCaller(int)>($i50);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if r10 == null goto label14;

        $r116 = r10;

        goto label15;

     label14:
        $r116 = "?";

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r116);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label05;

     label16:
        return;

     label17:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Package [");

        $r14 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r14 == null goto label18;

        $r15 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label19;

     label18:
        $r15 = r4.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r4);

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r17 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r17 == null goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  compat name=");

        $r103 = r4.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r103);

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  userId=");

        $i1 = r4.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" gids=");

        $r19 = r4.<com.android.server.pm.PackageSetting: int[] gids>;

        $r18 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>($r19);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r21 = r4.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r21 == null goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  sharedUser=");

        $r104 = r4.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r104);

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  pkg=");

        $r20 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  codePath=");

        $r23 = r4.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  resourcePath=");

        $r22 = r4.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  legacyNativeLibraryDir=");

        $r25 = r4.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  primaryCpuAbi=");

        $r24 = r4.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  secondaryCpuAbi=");

        $r26 = r4.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  versionCode=");

        $i2 = r4.<com.android.server.pm.PackageSetting: int versionCode>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        $r28 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r28 == null goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" targetSdk=");

        $r109 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r108 = $r109.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i46 = $r108.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i46);

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r27 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r27 == null goto label43;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  versionName=");

        $r47 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r46 = $r47.<android.content.pm.PackageParser$Package: java.lang.String mVersionName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r46);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  applicationInfo=");

        $r49 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r48 = $r49.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r43 = virtualinvoke $r48.<android.content.pm.ApplicationInfo: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  flags=");

        $r42 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r45 = $r42.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i21 = $r45.<android.content.pm.ApplicationInfo: int flags>;

        $r44 = <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(r1, $i21, $r44);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  dataDir=");

        $r53 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r55 = $r53.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r54 = $r55.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r54);

        $r50 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $z10 = $r50.<android.content.pm.PackageParser$Package: boolean mOperationPending>;

        if $z10 == 0 goto label23;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mOperationPending=true");

     label23:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  supportsScreens=[");

        z16 = 1;

        $r52 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r51 = $r52.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i24 = $r51.<android.content.pm.ApplicationInfo: int flags>;

        $i25 = $i24 & 512;

        if $i25 == 0 goto label25;

        if z16 != 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label24:
        z16 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("small");

     label25:
        $r58 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r59 = $r58.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i22 = $r59.<android.content.pm.ApplicationInfo: int flags>;

        $i23 = $i22 & 1024;

        if $i23 == 0 goto label27;

        if z16 != 0 goto label26;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label26:
        z16 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("medium");

     label27:
        $r56 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r57 = $r56.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i28 = $r57.<android.content.pm.ApplicationInfo: int flags>;

        $i29 = $i28 & 2048;

        if $i29 == 0 goto label29;

        if z16 != 0 goto label28;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label28:
        z16 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("large");

     label29:
        $r62 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r63 = $r62.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i26 = $r63.<android.content.pm.ApplicationInfo: int flags>;

        $i27 = $i26 & 524288;

        if $i27 == 0 goto label31;

        if z16 != 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label30:
        z16 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("xlarge");

     label31:
        $r60 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r61 = $r60.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i33 = $r61.<android.content.pm.ApplicationInfo: int flags>;

        $i32 = $i33 & 4096;

        if $i32 == 0 goto label33;

        if z16 != 0 goto label32;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label32:
        z16 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("resizeable");

     label33:
        $r67 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r66 = $r67.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i31 = $r66.<android.content.pm.ApplicationInfo: int flags>;

        $i30 = $i31 & 8192;

        if $i30 == 0 goto label35;

        if z16 != 0 goto label34;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label34:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("anyDensity");

     label35:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("]");

        $r65 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r64 = $r65.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        if $r64 == null goto label37;

        $r91 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r92 = $r91.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i38 = virtualinvoke $r92.<java.util.ArrayList: int size()>();

        if $i38 <= 0 goto label37;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  libraries:");

        i55 = 0;

     label36:
        $r93 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r94 = $r93.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i45 = virtualinvoke $r94.<java.util.ArrayList: int size()>();

        if i55 >= $i45 goto label37;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r107 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r106 = $r107.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r105 = virtualinvoke $r106.<java.util.ArrayList: java.lang.Object get(int)>(i55);

        $r110 = (java.lang.String) $r105;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r110);

        i55 = i55 + 1;

        goto label36;

     label37:
        $r75 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r74 = $r75.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r74 == null goto label39;

        $r96 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r97 = $r96.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $i39 = virtualinvoke $r97.<java.util.ArrayList: int size()>();

        if $i39 <= 0 goto label39;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesLibraries:");

        i56 = 0;

     label38:
        $r98 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r99 = $r98.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $i40 = virtualinvoke $r99.<java.util.ArrayList: int size()>();

        if i56 >= $i40 goto label39;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r100 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r88 = $r100.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r89 = virtualinvoke $r88.<java.util.ArrayList: java.lang.Object get(int)>(i56);

        $r90 = (java.lang.String) $r89;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r90);

        i56 = i56 + 1;

        goto label38;

     label39:
        $r73 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r72 = $r73.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r72 == null goto label41;

        $r86 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r76 = $r86.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $i34 = virtualinvoke $r76.<java.util.ArrayList: int size()>();

        if $i34 <= 0 goto label41;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesOptionalLibraries:");

        i57 = 0;

     label40:
        $r78 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r77 = $r78.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $i35 = virtualinvoke $r77.<java.util.ArrayList: int size()>();

        if i57 >= $i35 goto label41;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r79 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r81 = $r79.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r80 = virtualinvoke $r81.<java.util.ArrayList: java.lang.Object get(int)>(i57);

        $r95 = (java.lang.String) $r80;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r95);

        i57 = i57 + 1;

        goto label40;

     label41:
        $r71 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r70 = $r71.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        if $r70 == null goto label43;

        $r69 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r68 = $r69.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $i36 = lengthof $r68;

        if $i36 <= 0 goto label43;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesLibraryFiles:");

        i58 = 0;

     label42:
        $r82 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r83 = $r82.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $i37 = lengthof $r83;

        if i58 >= $i37 goto label43;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r85 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r84 = $r85.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $r87 = $r84[i58];

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r87);

        i58 = i58 + 1;

        goto label42;

     label43:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  timeStamp=");

        $l4 = r4.<com.android.server.pm.PackageSetting: long timeStamp>;

        virtualinvoke r6.<java.util.Date: void setTime(long)>($l4);

        $r30 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  firstInstallTime=");

        $l3 = r4.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        virtualinvoke r6.<java.util.Date: void setTime(long)>($l3);

        $r29 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  lastUpdateTime=");

        $l5 = r4.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        virtualinvoke r6.<java.util.Date: void setTime(long)>($l5);

        $r33 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r31 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r31 == null goto label44;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  installerPackageName=");

        $r40 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

     label44:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  signatures=");

        $r32 = r4.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  permissionsFixed=");

        $z0 = r4.<com.android.server.pm.PackageSetting: boolean permissionsFixed>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" haveGids=");

        $z1 = r4.<com.android.server.pm.PackageSetting: boolean haveGids>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" installStatus=");

        $i6 = r4.<com.android.server.pm.PackageSetting: int installStatus>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  pkgFlags=");

        $i7 = r4.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $r34 = <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(r1, $i7, $r34);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        r119 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label45:
        $z2 = interfaceinvoke r119.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label51;

        $r37 = interfaceinvoke r119.<java.util.Iterator: java.lang.Object next()>();

        r120 = (android.content.pm.UserInfo) $r37;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  User ");

        $i10 = r120.<android.content.pm.UserInfo: int id>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" installed=");

        $i9 = r120.<android.content.pm.UserInfo: int id>;

        $z5 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" hidden=");

        $i12 = r120.<android.content.pm.UserInfo: int id>;

        $z4 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getHidden(int)>($i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" stopped=");

        $i11 = r120.<android.content.pm.UserInfo: int id>;

        $z7 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getStopped(int)>($i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" notLaunched=");

        $i14 = r120.<android.content.pm.UserInfo: int id>;

        $z6 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>($i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" enabled=");

        $i13 = r120.<android.content.pm.UserInfo: int id>;

        $i17 = virtualinvoke r4.<com.android.server.pm.PackageSetting: int getEnabled(int)>($i13);

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i17);

        $i18 = r120.<android.content.pm.UserInfo: int id>;

        r121 = virtualinvoke r4.<com.android.server.pm.PackageSetting: java.lang.String getLastDisabledAppCaller(int)>($i18);

        if r121 == null goto label46;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    lastDisabledCaller: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r121);

     label46:
        $i19 = r120.<android.content.pm.UserInfo: int id>;

        r11 = virtualinvoke r4.<com.android.server.pm.PackageSetting: java.util.HashSet getDisabledComponents(int)>($i19);

        if r11 == null goto label48;

        $i20 = virtualinvoke r11.<java.util.HashSet: int size()>();

        if $i20 <= 0 goto label48;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    disabledComponents:");

        r12 = virtualinvoke r11.<java.util.HashSet: java.util.Iterator iterator()>();

     label47:
        $z8 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label48;

        $r39 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r39;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r13);

        goto label47;

     label48:
        $i15 = r120.<android.content.pm.UserInfo: int id>;

        r122 = virtualinvoke r4.<com.android.server.pm.PackageSetting: java.util.HashSet getEnabledComponents(int)>($i15);

        if r122 == null goto label50;

        $i16 = virtualinvoke r122.<java.util.HashSet: int size()>();

        if $i16 <= 0 goto label50;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    enabledComponents:");

        r123 = virtualinvoke r122.<java.util.HashSet: java.util.Iterator iterator()>();

     label49:
        $z9 = interfaceinvoke r123.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label50;

        $r41 = interfaceinvoke r123.<java.util.Iterator: java.lang.Object next()>();

        r124 = (java.lang.String) $r41;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r124);

        goto label49;

     label50:
        goto label45;

     label51:
        $r35 = r4.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        $i8 = virtualinvoke $r35.<java.util.HashSet: int size()>();

        if $i8 <= 0 goto label53;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  grantedPermissions:");

        $r36 = r4.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        r125 = virtualinvoke $r36.<java.util.HashSet: java.util.Iterator iterator()>();

     label52:
        $z3 = interfaceinvoke r125.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label53;

        $r38 = interfaceinvoke r125.<java.util.Iterator: java.lang.Object next()>();

        r126 = (java.lang.String) $r38;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r126);

        goto label52;

     label53:
        return;
    }

    void dumpPackagesLPr(java.io.PrintWriter, java.lang.String, com.android.server.pm.PackageManagerService$DumpState, boolean)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r16, $r18, $r19, $r24, $r26, $r28, $r32, $r34, $r35;
        com.android.server.pm.PackageManagerService$DumpState r3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15;
        java.text.SimpleDateFormat r4, $r9;
        java.util.Date r5, $r10;
        java.util.List r6;
        java.util.Iterator r7, r36, r38;
        com.android.server.pm.PackageSetting r8, r39;
        java.util.HashMap $r11, $r13, $r15, $r20, $r22;
        java.util.Collection $r12, $r14;
        int $i0, $i1;
        java.lang.Object $r17, $r23, $r25, $r27, $r29, $r30, $r33;
        java.util.Set $r21;
        com.android.server.pm.SharedUserSetting $r31;
        java.util.Map$Entry r37;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.pm.PackageManagerService$DumpState;

        z0 := @parameter3: boolean;

        $r9 = new java.text.SimpleDateFormat;

        specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        r4 = $r9;

        $r10 = new java.util.Date;

        specialinvoke $r10.<java.util.Date: void <init>()>();

        r5 = $r10;

        z1 = 0;

        r6 = specialinvoke r0.<com.android.server.pm.Settings: java.util.List getAllUsers()>();

        $r11 = r0.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r7 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.pm.PackageSetting) $r33;

        if r2 == null goto label02;

        $r35 = r8.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z13 != 0 goto label02;

        $r34 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z12 != 0 goto label02;

        goto label01;

     label02:
        if z0 != 0 goto label03;

        if r2 == null goto label03;

        $r31 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: void setSharedUser(com.android.server.pm.SharedUserSetting)>($r31);

     label03:
        if z0 != 0 goto label05;

        if z1 != 0 goto label05;

        $z11 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z11 == 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Packages:");

        z1 = 1;

     label05:
        if z0 == 0 goto label06;

        $r32 = "pkg";

        goto label07;

     label06:
        $r32 = null;

     label07:
        virtualinvoke r0.<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List)>(r1, "  ", $r32, r8, r4, r5, r6);

        goto label01;

     label08:
        z14 = 0;

        if z0 != 0 goto label17;

        $r20 = r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $i1 = virtualinvoke $r20.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label17;

        $r22 = r0.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r21 = virtualinvoke $r22.<java.util.HashMap: java.util.Set entrySet()>();

        r36 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z7 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label17;

        $r25 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r25;

        if r2 == null goto label10;

        $r30 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z10 != 0 goto label10;

        $r29 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z9 != 0 goto label10;

        goto label09;

     label10:
        if z0 != 0 goto label13;

        if z14 != 0 goto label12;

        $z8 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z8 == 0 goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Renamed packages:");

        z14 = 1;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        goto label14;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("ren,");

     label14:
        $r23 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = (java.lang.String) $r23;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        if z0 == 0 goto label15;

        $r26 = " -> ";

        goto label16;

     label15:
        $r26 = ",";

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        $r27 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (java.lang.String) $r27;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        goto label09;

     label17:
        z15 = 0;

        $r13 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $i0 = virtualinvoke $r13.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label24;

        $r15 = r0.<com.android.server.pm.Settings: java.util.HashMap mDisabledSysPackages>;

        $r14 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r38 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label24;

        $r17 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (com.android.server.pm.PackageSetting) $r17;

        if r2 == null goto label19;

        $r18 = r39.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z5 != 0 goto label19;

        $r19 = r39.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z6 != 0 goto label19;

        goto label18;

     label19:
        if z0 != 0 goto label21;

        if z15 != 0 goto label21;

        $z4 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z4 == 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Hidden system packages:");

        z15 = 1;

     label21:
        if z0 == 0 goto label22;

        $r16 = "dis";

        goto label23;

     label22:
        $r16 = null;

     label23:
        virtualinvoke r0.<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List)>(r1, "  ", $r16, r39, r4, r5, r6);

        goto label18;

     label24:
        return;
    }

    void dumpPermissionsLPr(java.io.PrintWriter, java.lang.String, com.android.server.pm.PackageManagerService$DumpState)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r9, $r10, $r11, $r13, $r14, $r17, $r18, $r22;
        com.android.server.pm.PackageManagerService$DumpState r3;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r4;
        com.android.server.pm.BasePermission r5;
        java.util.HashMap $r6;
        java.util.Collection $r7;
        java.lang.Object $r8;
        int $i0, $i1, $i2, $i3;
        int[] $r12;
        android.content.pm.PackageParser$Permission $r15, $r21;
        com.android.server.pm.PackageSettingBase $r16, $r20;
        java.lang.Boolean $r19;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.pm.PackageManagerService$DumpState;

        z0 = 0;

        $r6 = r0.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.BasePermission) $r8;

        if r2 == null goto label2;

        $r22 = r5.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z4 != 0 goto label2;

        goto label1;

     label2:
        if z0 != 0 goto label4;

        $z3 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z3 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Permissions:");

        z0 = 1;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Permission [");

        $r9 = r5.<com.android.server.pm.BasePermission: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r5);

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    sourcePackage=");

        $r11 = r5.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    uid=");

        $i1 = r5.<com.android.server.pm.BasePermission: int uid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" gids=");

        $r12 = r5.<com.android.server.pm.BasePermission: int[] gids>;

        $r13 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" type=");

        $i2 = r5.<com.android.server.pm.BasePermission: int type>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" prot=");

        $i3 = r5.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r14 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r16 = r5.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r16 == null goto label5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    packageSetting=");

        $r20 = r5.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r20);

     label5:
        $r15 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r15 == null goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    perm=");

        $r21 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r21);

     label6:
        $r17 = "android.permission.READ_EXTERNAL_STORAGE";

        $r18 = r5.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    enforced=");

        $r19 = r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r19);

     label7:
        goto label1;

     label8:
        return;
    }

    void dumpSharedUsersLPr(java.io.PrintWriter, java.lang.String, com.android.server.pm.PackageManagerService$DumpState)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r7, $r11, $r12, $r13;
        com.android.server.pm.PackageManagerService$DumpState r3;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r4, r6;
        com.android.server.pm.SharedUserSetting r5, $r17;
        java.util.HashMap $r8;
        java.util.Collection $r9;
        java.lang.Object $r10, $r16;
        int $i0, $i1;
        int[] $r14;
        java.util.HashSet $r15;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.pm.PackageManagerService$DumpState;

        z0 = 0;

        $r8 = r0.<com.android.server.pm.Settings: java.util.HashMap mSharedUsers>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.SharedUserSetting) $r10;

        if r2 == null goto label2;

        $r17 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>();

        if r5 == $r17 goto label2;

        goto label1;

     label2:
        if z0 != 0 goto label4;

        $z3 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z3 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Shared users:");

        z0 = 1;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  SharedUser [");

        $r11 = r5.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r5);

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    userId=");

        $i1 = r5.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" gids=");

        $r14 = r5.<com.android.server.pm.SharedUserSetting: int[] gids>;

        $r13 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    grantedPermissions:");

        $r15 = r5.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        r6 = virtualinvoke $r15.<java.util.HashSet: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r16;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r7);

        goto label5;

     label6:
        goto label1;

     label7:
        return;
    }

    void dumpReadMessagesLPr(java.io.PrintWriter, com.android.server.pm.PackageManagerService$DumpState)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        com.android.server.pm.PackageManagerService$DumpState r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$DumpState;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Settings parse messages:");

        $r3 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;
        java.lang.Integer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        <com.android.server.pm.Settings: java.lang.String ATTR_BLOCK_UNINSTALL> = "blockUninstall";

        <com.android.server.pm.Settings: java.lang.String ATTR_INSTALLED> = "inst";

        <com.android.server.pm.Settings: java.lang.String ATTR_HIDDEN> = "hidden";

        <com.android.server.pm.Settings: java.lang.String ATTR_BLOCKED> = "blocked";

        <com.android.server.pm.Settings: java.lang.String ATTR_STOPPED> = "stopped";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENABLED_CALLER> = "enabledCaller";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENABLED> = "enabled";

        <com.android.server.pm.Settings: java.lang.String ATTR_NOT_LAUNCHED> = "nl";

        <com.android.server.pm.Settings: java.lang.String ATTR_CODE> = "code";

        <com.android.server.pm.Settings: java.lang.String ATTR_USER> = "user";

        <com.android.server.pm.Settings: java.lang.String ATTR_NAME> = "name";

        <com.android.server.pm.Settings: java.lang.String TAG_CROSS_PROFILE_INTENT_FILTERS> = "crossProfile-intent-filters";

        <com.android.server.pm.Settings: java.lang.String TAG_PERSISTENT_PREFERRED_ACTIVITIES> = "persistent-preferred-activities";

        <com.android.server.pm.Settings: java.lang.String TAG_PACKAGE> = "pkg";

        <com.android.server.pm.Settings: java.lang.String TAG_PACKAGE_RESTRICTIONS> = "package-restrictions";

        <com.android.server.pm.Settings: java.lang.String TAG_ENABLED_COMPONENTS> = "enabled-components";

        <com.android.server.pm.Settings: java.lang.String TAG_DISABLED_COMPONENTS> = "disabled-components";

        <com.android.server.pm.Settings: java.lang.String TAG_ITEM> = "item";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENFORCEMENT> = "enforcement";

        <com.android.server.pm.Settings: java.lang.String TAG_READ_EXTERNAL_STORAGE> = "read-external-storage";

        <com.android.server.pm.Settings: boolean DEBUG_MU> = 0;

        <com.android.server.pm.Settings: boolean DEBUG_STOPPED> = 0;

        <com.android.server.pm.Settings: int CURRENT_DATABASE_VERSION> = 3;

        <com.android.server.pm.Settings: java.lang.String TAG> = "PackageSettings";

        <com.android.server.pm.Settings: int mFirstAvailableUid> = 0;

        $r0 = newarray (java.lang.Object)[36];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r0[0] = $r1;

        $r0[1] = "SYSTEM";

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r0[2] = $r2;

        $r0[3] = "DEBUGGABLE";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r0[4] = $r3;

        $r0[5] = "HAS_CODE";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r0[6] = $r4;

        $r0[7] = "PERSISTENT";

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r0[8] = $r5;

        $r0[9] = "FACTORY_TEST";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        $r0[10] = $r6;

        $r0[11] = "ALLOW_TASK_REPARENTING";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        $r0[12] = $r7;

        $r0[13] = "ALLOW_CLEAR_USER_DATA";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        $r0[14] = $r8;

        $r0[15] = "UPDATED_SYSTEM_APP";

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(256);

        $r0[16] = $r9;

        $r0[17] = "TEST_ONLY";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16384);

        $r0[18] = $r10;

        $r0[19] = "VM_SAFE_MODE";

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32768);

        $r0[20] = $r11;

        $r0[21] = "ALLOW_BACKUP";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(65536);

        $r0[22] = $r12;

        $r0[23] = "KILL_AFTER_RESTORE";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(131072);

        $r0[24] = $r13;

        $r0[25] = "RESTORE_ANY_VERSION";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262144);

        $r0[26] = $r14;

        $r0[27] = "EXTERNAL_STORAGE";

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1048576);

        $r0[28] = $r15;

        $r0[29] = "LARGE_HEAP";

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $r0[30] = $r17;

        $r0[31] = "PRIVILEGED";

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(536870912);

        $r0[32] = $r16;

        $r0[33] = "FORWARD_LOCK";

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(268435456);

        $r0[34] = $r18;

        $r0[35] = "CANT_SAVE_STATE";

        <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC> = $r0;

        return;
    }
}
