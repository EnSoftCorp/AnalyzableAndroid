class com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState extends com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState
{
    final com.android.server.connectivity.Tethering$TetherMasterSM this$1;

    void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState;

        r1 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1> = r1;

        specialinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r1);

        return;
    }

    public void enter()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r2, $r5;
        com.android.server.connectivity.Tethering $r3, $r6;
        android.os.INetworkManagementService $r4, $r7;
        java.lang.Exception $r8, $r9;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Tethering", "Error in setDnsForwarders");

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void notify(int)>(11);

     label1:
        $r2 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r3 = $r2.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r4 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r3);

        interfaceinvoke $r4.<android.os.INetworkManagementService: void stopTethering()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r5 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r6 = $r5.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r7 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r6);

        interfaceinvoke $r7.<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>(0);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
