class com.android.server.wm.WindowManagerService$4 extends java.lang.Object implements android.os.PowerManagerInternal$LowPowerModeListener
{
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$4 r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$4;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$4: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onLowPowerModeChanged(boolean)
    {
        com.android.server.wm.WindowManagerService$4 r0;
        boolean z0, $z1;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r8;
        com.android.server.wm.WindowManagerService $r3, $r5, $r6, $r7;

        r0 := @this: com.android.server.wm.WindowManagerService$4;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.wm.WindowManagerService$4: com.android.server.wm.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.wm.WindowManagerService$4: com.android.server.wm.WindowManagerService this$0>;

        $z1 = $r5.<com.android.server.wm.WindowManagerService: boolean mAnimationsDisabled>;

        if $z1 == z0 goto label2;

        $r6 = r0.<com.android.server.wm.WindowManagerService$4: com.android.server.wm.WindowManagerService this$0>;

        $r6.<com.android.server.wm.WindowManagerService: boolean mAnimationsDisabled> = z0;

        $r7 = r0.<com.android.server.wm.WindowManagerService$4: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void dispatchNewAnimatorScaleLocked(com.android.server.wm.Session)>(null);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
