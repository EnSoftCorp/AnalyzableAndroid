public class com.android.server.pm.BackgroundDexOptService extends android.app.job.JobService
{
    static final java.lang.String TAG;
    static final int BACKGROUND_DEXOPT_JOB;
    private static android.content.ComponentName sDexoptServiceName;
    final java.util.concurrent.atomic.AtomicBoolean mIdleTime;

    public void <init>()
    {
        com.android.server.pm.BackgroundDexOptService r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.server.pm.BackgroundDexOptService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.pm.BackgroundDexOptService: java.util.concurrent.atomic.AtomicBoolean mIdleTime> = $r1;

        return;
    }

    public static void schedule(android.content.Context)
    {
        android.content.Context r0;
        android.app.job.JobScheduler r1;
        android.app.job.JobInfo r2;
        java.lang.Object $r3;
        android.app.job.JobInfo$Builder $r4, $r6, $r7;
        android.content.ComponentName $r5;

        r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        r1 = (android.app.job.JobScheduler) $r3;

        $r4 = new android.app.job.JobInfo$Builder;

        $r5 = <com.android.server.pm.BackgroundDexOptService: android.content.ComponentName sDexoptServiceName>;

        specialinvoke $r4.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(800, $r5);

        $r6 = virtualinvoke $r4.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $r7 = virtualinvoke $r6.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>(1);

        r2 = virtualinvoke $r7.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r1.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>(r2);

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.pm.BackgroundDexOptService r0;
        android.app.job.JobParameters r1, r4;
        com.android.server.pm.PackageManagerService r2;
        java.util.HashSet r3;
        android.os.IBinder $r5;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        com.android.server.pm.BackgroundDexOptService$1 $r7;

        r0 := @this: com.android.server.pm.BackgroundDexOptService;

        r1 := @parameter0: android.app.job.JobParameters;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BackgroundDexOptService", "onIdleStart");

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r2 = (com.android.server.pm.PackageManagerService) $r5;

        $z0 = virtualinvoke r2.<com.android.server.pm.PackageManagerService: boolean isStorageLow()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r3 = virtualinvoke r2.<com.android.server.pm.PackageManagerService: java.util.HashSet getPackagesThatNeedDexOpt()>();

        if r3 != null goto label2;

        return 0;

     label2:
        r4 = r1;

        $r6 = r0.<com.android.server.pm.BackgroundDexOptService: java.util.concurrent.atomic.AtomicBoolean mIdleTime>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r7 = new com.android.server.pm.BackgroundDexOptService$1;

        specialinvoke $r7.<com.android.server.pm.BackgroundDexOptService$1: void <init>(com.android.server.pm.BackgroundDexOptService,java.lang.String,java.util.HashSet,com.android.server.pm.PackageManagerService,android.app.job.JobParameters)>(r0, "BackgroundDexOptService_DexOpter", r3, r2, r4);

        virtualinvoke $r7.<com.android.server.pm.BackgroundDexOptService$1: void start()>();

        return 1;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.pm.BackgroundDexOptService r0;
        android.app.job.JobParameters r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: com.android.server.pm.BackgroundDexOptService;

        r1 := @parameter0: android.app.job.JobParameters;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BackgroundDexOptService", "onIdleStop");

        $r2 = r0.<com.android.server.pm.BackgroundDexOptService: java.util.concurrent.atomic.AtomicBoolean mIdleTime>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return 0;
    }

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <com.android.server.pm.BackgroundDexOptService: int BACKGROUND_DEXOPT_JOB> = 800;

        <com.android.server.pm.BackgroundDexOptService: java.lang.String TAG> = "BackgroundDexOptService";

        $r0 = new android.content.ComponentName;

        $r1 = class "com/android/server/pm/BackgroundDexOptService";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.pm.BackgroundDexOptService: android.content.ComponentName sDexoptServiceName> = $r0;

        return;
    }
}
