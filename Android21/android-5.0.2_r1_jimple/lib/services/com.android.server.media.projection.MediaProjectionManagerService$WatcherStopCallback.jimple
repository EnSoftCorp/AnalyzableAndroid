final class com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback extends java.lang.Object implements java.lang.Runnable
{
    private android.media.projection.IMediaProjectionWatcherCallback mCallback;
    private android.media.projection.MediaProjectionInfo mInfo;

    public void <init>(android.media.projection.MediaProjectionInfo, android.media.projection.IMediaProjectionWatcherCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback r0;
        android.media.projection.MediaProjectionInfo r1;
        android.media.projection.IMediaProjectionWatcherCallback r2;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback;

        r1 := @parameter0: android.media.projection.MediaProjectionInfo;

        r2 := @parameter1: android.media.projection.IMediaProjectionWatcherCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback: android.media.projection.MediaProjectionInfo mInfo> = r1;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback: android.media.projection.IMediaProjectionWatcherCallback mCallback> = r2;

        return;
    }

    public void run()
    {
        com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback r0;
        android.os.RemoteException r1, $r4;
        android.media.projection.MediaProjectionInfo $r2;
        android.media.projection.IMediaProjectionWatcherCallback $r3;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback;

     label1:
        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback: android.media.projection.IMediaProjectionWatcherCallback mCallback>;

        $r2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback: android.media.projection.MediaProjectionInfo mInfo>;

        interfaceinvoke $r3.<android.media.projection.IMediaProjectionWatcherCallback: void onStop(android.media.projection.MediaProjectionInfo)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaProjectionManagerService", "Failed to notify media projection has stopped", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
