final class com.android.server.am.AppWaitingForDebuggerDialog extends com.android.server.am.BaseErrorDialog
{
    final com.android.server.am.ActivityManagerService mService;
    final com.android.server.am.ProcessRecord mProc;
    private java.lang.CharSequence mAppName;
    private final android.os.Handler mHandler;

    public void <init>(com.android.server.am.ActivityManagerService, android.content.Context, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.AppWaitingForDebuggerDialog r0;
        com.android.server.am.ActivityManagerService r1;
        android.content.Context r2;
        com.android.server.am.ProcessRecord r3;
        java.lang.StringBuilder r4, $r10, $r20, $r22, $r23;
        android.view.WindowManager$LayoutParams r5;
        com.android.server.am.AppWaitingForDebuggerDialog$1 $r6;
        android.content.pm.PackageManager $r7;
        android.content.pm.ApplicationInfo $r8, $r21;
        java.lang.CharSequence $r9, $r11, $r27, $r31;
        java.lang.String $r13, $r17, $r24, $r26, $r33;
        android.os.Handler $r16;
        android.view.Window $r18, $r25;
        android.os.Message $r19;
        int $i0;

        r0 := @this: com.android.server.am.AppWaitingForDebuggerDialog;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.server.am.ProcessRecord;

        specialinvoke r0.<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>(r2);

        $r6 = new com.android.server.am.AppWaitingForDebuggerDialog$1;

        specialinvoke $r6.<com.android.server.am.AppWaitingForDebuggerDialog$1: void <init>(com.android.server.am.AppWaitingForDebuggerDialog)>(r0);

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.os.Handler mHandler> = $r6;

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: com.android.server.am.ActivityManagerService mService> = r1;

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: com.android.server.am.ProcessRecord mProc> = r3;

        $r7 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = virtualinvoke $r7.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r8);

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName> = $r9;

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setCancelable(boolean)>(0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r4 = $r10;

        $r11 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        if $r11 == null goto label1;

        $r27 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        $i0 = interfaceinvoke $r27.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r31 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r31);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (process ");

        $r33 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        goto label2;

     label1:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r13 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label2:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is waiting for the debugger to attach.");

        $r17 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setMessage(java.lang.CharSequence)>($r17);

        $r16 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.os.Handler mHandler>;

        $r19 = virtualinvoke $r16.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r3);

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>(-1, "Force Close", $r19);

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setTitle(java.lang.CharSequence)>("Waiting For Debugger");

        $r18 = virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.view.Window getWindow()>();

        r5 = virtualinvoke $r18.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting For Debugger: ");

        $r21 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r24 = $r21.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r26);

        $r25 = virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.view.Window getWindow()>();

        virtualinvoke $r25.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r5);

        return;
    }

    public void onStop()
    {
        com.android.server.am.AppWaitingForDebuggerDialog r0;

        r0 := @this: com.android.server.am.AppWaitingForDebuggerDialog;

        return;
    }
}
