class com.android.server.location.FlpHardwareProvider$1 extends android.hardware.location.IFusedLocationHardware$Stub
{
    final com.android.server.location.FlpHardwareProvider this$0;

    void <init>(com.android.server.location.FlpHardwareProvider)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        com.android.server.location.FlpHardwareProvider r1;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        r1 := @parameter0: com.android.server.location.FlpHardwareProvider;

        r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0> = r1;

        specialinvoke r0.<android.hardware.location.IFusedLocationHardware$Stub: void <init>()>();

        return;
    }

    public void registerSink(android.hardware.location.IFusedLocationHardwareSink)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        android.hardware.location.IFusedLocationHardwareSink r1, $r7;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r10;
        com.android.server.location.FlpHardwareProvider $r4, $r6, $r8;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        r1 := @parameter0: android.hardware.location.IFusedLocationHardwareSink;

        $r4 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $r5 = staticinvoke <com.android.server.location.FlpHardwareProvider: java.lang.Object access$100(com.android.server.location.FlpHardwareProvider)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $r7 = staticinvoke <com.android.server.location.FlpHardwareProvider: android.hardware.location.IFusedLocationHardwareSink access$200(com.android.server.location.FlpHardwareProvider)>($r6);

        if $r7 == null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FlpHardwareProvider", "Replacing an existing IFusedLocationHardware sink");

     label2:
        $r8 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: android.hardware.location.IFusedLocationHardwareSink access$202(com.android.server.location.FlpHardwareProvider,android.hardware.location.IFusedLocationHardwareSink)>($r8, r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unregisterSink(android.hardware.location.IFusedLocationHardwareSink)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        android.hardware.location.IFusedLocationHardwareSink r1, $r7;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r10;
        com.android.server.location.FlpHardwareProvider $r4, $r6, $r8;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        r1 := @parameter0: android.hardware.location.IFusedLocationHardwareSink;

        $r4 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $r5 = staticinvoke <com.android.server.location.FlpHardwareProvider: java.lang.Object access$100(com.android.server.location.FlpHardwareProvider)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $r7 = staticinvoke <com.android.server.location.FlpHardwareProvider: android.hardware.location.IFusedLocationHardwareSink access$200(com.android.server.location.FlpHardwareProvider)>($r6);

        if $r7 != r1 goto label2;

        $r8 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: android.hardware.location.IFusedLocationHardwareSink access$202(com.android.server.location.FlpHardwareProvider,android.hardware.location.IFusedLocationHardwareSink)>($r8, null);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getSupportedBatchSize()
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        com.android.server.location.FlpHardwareProvider $r1;
        int $i0;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        $r1 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $i0 = staticinvoke <com.android.server.location.FlpHardwareProvider: int access$300(com.android.server.location.FlpHardwareProvider)>($r1);

        return $i0;
    }

    public void startBatching(int, android.location.FusedBatchOptions)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        int i0;
        android.location.FusedBatchOptions r1;
        com.android.server.location.FlpHardwareProvider $r2;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.location.FusedBatchOptions;

        $r2 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: void access$400(com.android.server.location.FlpHardwareProvider,int,android.location.FusedBatchOptions)>($r2, i0, r1);

        return;
    }

    public void stopBatching(int)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        int i0;
        com.android.server.location.FlpHardwareProvider $r1;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: void access$500(com.android.server.location.FlpHardwareProvider,int)>($r1, i0);

        return;
    }

    public void updateBatchingOptions(int, android.location.FusedBatchOptions)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        int i0;
        android.location.FusedBatchOptions r1;
        com.android.server.location.FlpHardwareProvider $r2;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.location.FusedBatchOptions;

        $r2 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: void access$600(com.android.server.location.FlpHardwareProvider,int,android.location.FusedBatchOptions)>($r2, i0, r1);

        return;
    }

    public void requestBatchOfLocations(int)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        int i0;
        com.android.server.location.FlpHardwareProvider $r1;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: void access$700(com.android.server.location.FlpHardwareProvider,int)>($r1, i0);

        return;
    }

    public boolean supportsDiagnosticDataInjection()
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        com.android.server.location.FlpHardwareProvider $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        $r1 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $z0 = staticinvoke <com.android.server.location.FlpHardwareProvider: boolean access$800(com.android.server.location.FlpHardwareProvider)>($r1);

        return $z0;
    }

    public void injectDiagnosticData(java.lang.String)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        java.lang.String r1;
        com.android.server.location.FlpHardwareProvider $r2;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: void access$900(com.android.server.location.FlpHardwareProvider,java.lang.String)>($r2, r1);

        return;
    }

    public boolean supportsDeviceContextInjection()
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        com.android.server.location.FlpHardwareProvider $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        $r1 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        $z0 = staticinvoke <com.android.server.location.FlpHardwareProvider: boolean access$1000(com.android.server.location.FlpHardwareProvider)>($r1);

        return $z0;
    }

    public void injectDeviceContext(int)
    {
        com.android.server.location.FlpHardwareProvider$1 r0;
        int i0;
        com.android.server.location.FlpHardwareProvider $r1;

        r0 := @this: com.android.server.location.FlpHardwareProvider$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.location.FlpHardwareProvider$1: com.android.server.location.FlpHardwareProvider this$0>;

        staticinvoke <com.android.server.location.FlpHardwareProvider: void access$1100(com.android.server.location.FlpHardwareProvider,int)>($r1, i0);

        return;
    }
}
