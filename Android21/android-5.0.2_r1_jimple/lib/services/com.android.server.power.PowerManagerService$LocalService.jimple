final class com.android.server.power.PowerManagerService$LocalService extends android.os.PowerManagerInternal
{
    final com.android.server.power.PowerManagerService this$0;

    private void <init>(com.android.server.power.PowerManagerService)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<android.os.PowerManagerInternal: void <init>()>();

        return;
    }

    public void setScreenBrightnessOverrideFromWindowManager(int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        if i0 < -1 goto label1;

        if i0 <= 255 goto label2;

     label1:
        i0 = -1;

     label2:
        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5100(com.android.server.power.PowerManagerService,int)>($r1, i0);

        return;
    }

    public void setButtonBrightnessOverrideFromWindowManager(int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        return;
    }

    public void setDozeOverrideFromDreamManager(int, int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        i0 = 0;

     label3:
        if i1 < -1 goto label4;

        if i1 <= 255 goto label5;

     label4:
        i1 = -1;

     label5:
        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5200(com.android.server.power.PowerManagerService,int,int)>($r1, i0, i1);

        return;
    }

    public void setUserActivityTimeoutOverrideFromWindowManager(long)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        long l0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5300(com.android.server.power.PowerManagerService,long)>($r1, l0);

        return;
    }

    public boolean getLowPowerModeEnabled()
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r6;
        com.android.server.power.PowerManagerService $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        $r3 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$800(com.android.server.power.PowerManagerService)>($r3);

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$600(com.android.server.power.PowerManagerService)>($r5);

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        android.os.PowerManagerInternal$LowPowerModeListener r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.power.PowerManagerService $r4, $r6;
        java.util.ArrayList $r7;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: android.os.PowerManagerInternal$LowPowerModeListener;

        $r4 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$800(com.android.server.power.PowerManagerService)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $r7 = staticinvoke <com.android.server.power.PowerManagerService: java.util.ArrayList access$900(com.android.server.power.PowerManagerService)>($r6);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void <init>(com.android.server.power.PowerManagerService, com.android.server.power.PowerManagerService$1)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService r1;
        com.android.server.power.PowerManagerService$1 r2;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r2 := @parameter1: com.android.server.power.PowerManagerService$1;

        specialinvoke r0.<com.android.server.power.PowerManagerService$LocalService: void <init>(com.android.server.power.PowerManagerService)>(r1);

        return;
    }
}
