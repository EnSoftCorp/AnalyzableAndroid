class com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState extends com.android.internal.util.State
{
    protected static final boolean TRY_TO_SETUP_MOBILE_CONNECTION;
    protected static final boolean WAIT_FOR_NETWORK_TO_SETTLE;
    final com.android.server.connectivity.Tethering$TetherMasterSM this$1;

    void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        r1 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1> = r1;

        specialinvoke r0.<com.android.internal.util.State: void <init>()>();

        return;
    }

    public boolean processMessage(android.os.Message)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        android.os.Message r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        r1 := @parameter0: android.os.Message;

        return 0;
    }

    protected java.lang.String enableString(int)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        int i0;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 4: goto label1;
            case 5: goto label2;
            default: goto label3;
        };

     label1:
        return "enableDUNAlways";

     label2:
        return "enableHIPRI";

     label3:
        return null;
    }

    protected boolean turnOnUpstreamMobileConnection(int)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        int i0, $i2, $i4, i5;
        boolean z0;
        java.lang.String r1;
        android.os.Message r2;
        com.android.server.connectivity.Tethering$TetherMasterSM $r3, $r4, $r7, $r8, $r9, $r10;
        com.android.server.connectivity.Tethering $r5;
        android.net.ConnectivityManager $r6;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != -1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i2 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r3);

        if i0 == $i2 goto label2;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffUpstreamMobileConnection()>();

     label2:
        r1 = virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: java.lang.String enableString(int)>(i0);

        if r1 != null goto label3;

        return 0;

     label3:
        $r4 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r5 = $r4.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r6 = staticinvoke <com.android.server.connectivity.Tethering: android.net.ConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r5);

        i5 = virtualinvoke $r6.<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>(0, r1);

        tableswitch(i5)
        {
            case 0: goto label4;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label5;
            default: goto label5;
        };

     label4:
        $r7 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2902(com.android.server.connectivity.Tethering$TetherMasterSM,int)>($r7, i0);

        $r8 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        r2 = virtualinvoke $r8.<com.android.server.connectivity.Tethering$TetherMasterSM: android.os.Message obtainMessage(int)>(4);

        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i4 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$3104(com.android.server.connectivity.Tethering$TetherMasterSM)>($r9);

        r2.<android.os.Message: int arg1> = $i4;

        $r10 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        virtualinvoke $r10.<com.android.server.connectivity.Tethering$TetherMasterSM: void sendMessageDelayed(android.os.Message,long)>(r2, 40000L);

        goto label6;

     label5:
        z0 = 0;

     label6:
        return z0;
    }

    protected boolean turnOffUpstreamMobileConnection()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r1, $r2, $r3, $r6, $r8;
        int $i1, $i2;
        com.android.server.connectivity.Tethering $r4;
        android.net.ConnectivityManager $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$3104(com.android.server.connectivity.Tethering$TetherMasterSM)>($r1);

        $r2 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i1 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r2);

        if $i1 == -1 goto label1;

        $r3 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r4 = $r3.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r5 = staticinvoke <com.android.server.connectivity.Tethering: android.net.ConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r4);

        $r6 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i2 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r6);

        $r7 = virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: java.lang.String enableString(int)>($i2);

        virtualinvoke $r5.<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>(0, $r7);

        $r8 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2902(com.android.server.connectivity.Tethering$TetherMasterSM,int)>($r8, -1);

     label1:
        return 1;
    }

    protected boolean turnOnMasterTetherSettings()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r3, $r6, $r9, $r13, $r14, $r16, $r19, $r20, $r25, $r26;
        com.android.server.connectivity.Tethering $r4, $r7, $r10, $r23, $r24, $r29;
        android.os.INetworkManagementService $r5, $r8, $r22, $r27;
        java.lang.String[] $r11, $r28;
        java.lang.Exception $r12, $r17, $r21;
        com.android.internal.util.State $r15, $r18;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

     label01:
        $r3 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r4 = $r3.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r5 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r4);

        interfaceinvoke $r5.<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>(1);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

        $r14 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r13 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r15 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3200(com.android.server.connectivity.Tethering$TetherMasterSM)>($r13);

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$3300(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r14, $r15);

        return 0;

     label04:
        $r6 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r7 = $r6.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r8 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r7);

        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r10 = $r9.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r11 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$3400(com.android.server.connectivity.Tethering)>($r10);

        interfaceinvoke $r8.<android.os.INetworkManagementService: void startTethering(java.lang.String[])>($r11);

     label05:
        goto label10;

     label06:
        $r21 := @caughtexception;

     label07:
        $r20 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r23 = $r20.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r22 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r23);

        interfaceinvoke $r22.<android.os.INetworkManagementService: void stopTethering()>();

        $r25 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r24 = $r25.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r27 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r24);

        $r26 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r29 = $r26.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r28 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$3400(com.android.server.connectivity.Tethering)>($r29);

        interfaceinvoke $r27.<android.os.INetworkManagementService: void startTethering(java.lang.String[])>($r28);

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        $r19 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r16 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r18 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3500(com.android.server.connectivity.Tethering$TetherMasterSM)>($r16);

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$3600(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r19, $r18);

        return 0;

     label10:
        return 1;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    protected boolean turnOffMasterTetherSettings()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r2, $r5, $r8, $r9, $r12, $r13, $r16, $r17;
        com.android.server.connectivity.Tethering $r3, $r6;
        android.os.INetworkManagementService $r4, $r7;
        com.android.internal.util.State $r10, $r14, $r18;
        java.lang.Exception $r11, $r15;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

     label1:
        $r2 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r3 = $r2.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r4 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r3);

        interfaceinvoke $r4.<android.os.INetworkManagementService: void stopTethering()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r13 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r12 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r14 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3700(com.android.server.connectivity.Tethering$TetherMasterSM)>($r12);

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$3800(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r13, $r14);

        return 0;

     label4:
        $r5 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r6 = $r5.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r7 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r6);

        interfaceinvoke $r7.<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>(0);

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        $r16 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r17 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r18 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r17);

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4000(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r16, $r18);

        return 0;

     label7:
        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r8 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r10 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4100(com.android.server.connectivity.Tethering$TetherMasterSM)>($r8);

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4200(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r9, $r10);

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected void chooseUpstreamType(boolean)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        boolean z0, $z1, $z3, $z4, $z7, $z8, z9;
        int i0, $i1, $i3, $i5, $i8, $i10;
        java.lang.String r1, $r26, $r38, $r46, $r56, $r57;
        java.lang.Object r2, $r12, $r43, $r61;
        java.util.Iterator r3, r72;
        java.lang.Integer r4;
        android.net.NetworkInfo r5;
        java.lang.Throwable r6, $r65;
        java.net.InetAddress r7, $r51;
        com.android.server.connectivity.Tethering$TetherMasterSM $r8, $r10, $r13, $r21, $r25, $r27, $r30, $r32, $r52, $r53, $r60, $r62, $r63;
        com.android.server.connectivity.Tethering $r9, $r11, $r15, $r20, $r28, $r31, $r33, $r37, $r54, $r59;
        java.util.Collection $r14;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r35, $r39, $r40, $r41, $r44, $r45, $r47, $r48, $r49, $r55;
        android.net.ConnectivityManager $r29, $r34, $r58;
        android.os.INetworkManagementService $r36;
        java.util.ArrayList $r42, r71;
        java.util.List $r50, r70;
        java.lang.Exception $r64;
        com.android.internal.util.State $r66;
        android.net.LinkProperties r67;
        android.net.RouteInfo r68;
        java.lang.String[] r69;
        android.net.Network r73;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        z0 := @parameter0: boolean;

        i0 = -1;

        r1 = null;

        $r8 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r9 = $r8.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        virtualinvoke $r9.<com.android.server.connectivity.Tethering: void updateConfiguration()>();

        $r10 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r11 = $r10.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r12 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.Object access$100(com.android.server.connectivity.Tethering)>($r11);

        r2 = $r12;

        entermonitor $r12;

     label01:
        $r13 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r15 = $r13.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r14 = staticinvoke <com.android.server.connectivity.Tethering: java.util.Collection access$4300(com.android.server.connectivity.Tethering)>($r15);

        r3 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r61 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Integer) $r61;

        $r60 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r59 = $r60.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r58 = staticinvoke <com.android.server.connectivity.Tethering: android.net.ConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r59);

        $i10 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        r5 = virtualinvoke $r58.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>($i10);

        if r5 == null goto label03;

        $z8 = virtualinvoke r5.<android.net.NetworkInfo: boolean isConnected()>();

        if $z8 == 0 goto label03;

        i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        goto label04;

     label03:
        goto label02;

     label04:
        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r65 := @caughtexception;

        r6 = $r65;

        exitmonitor r2;

     label07:
        throw r6;

     label08:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseUpstreamType(");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), preferredApn =");

        $r21 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r20 = $r21.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $i1 = staticinvoke <com.android.server.connectivity.Tethering: int access$4400(com.android.server.connectivity.Tethering)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got type=");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Tethering", $r26);

        if i0 == 4 goto label09;

        if i0 != 5 goto label10;

     label09:
        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>(i0);

        goto label11;

     label10:
        if i0 == -1 goto label11;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffUpstreamMobileConnection()>();

     label11:
        if i0 != -1 goto label14;

        z9 = 1;

        if z0 != 1 goto label12;

        $r52 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r54 = $r52.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $i8 = staticinvoke <com.android.server.connectivity.Tethering: int access$4400(com.android.server.connectivity.Tethering)>($r54);

        $z7 = virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>($i8);

        if $z7 != 1 goto label12;

        z9 = 0;

     label12:
        if z9 == 0 goto label13;

        $r53 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        virtualinvoke $r53.<com.android.server.connectivity.Tethering$TetherMasterSM: void sendMessageDelayed(int,long)>(5, 10000L);

     label13:
        goto label24;

     label14:
        $r25 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r28 = $r25.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r29 = staticinvoke <com.android.server.connectivity.Tethering: android.net.ConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r28);

        r67 = virtualinvoke $r29.<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>(i0);

        if r67 == null goto label16;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finding IPv4 upstream interface on: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Tethering", $r46);

        $r50 = virtualinvoke r67.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        $r51 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        r68 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>($r50, $r51);

        if r68 == null goto label15;

        r1 = virtualinvoke r68.<android.net.RouteInfo: java.lang.String getInterface()>();

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found interface ");

        $r56 = virtualinvoke r68.<android.net.RouteInfo: java.lang.String getInterface()>();

        $r55 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Tethering", $r57);

        goto label16;

     label15:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Tethering", "No IPv4 upstream interface, giving up.");

     label16:
        if r1 == null goto label24;

        $r27 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r31 = $r27.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        r69 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$4500(com.android.server.connectivity.Tethering)>($r31);

        r70 = virtualinvoke r67.<android.net.LinkProperties: java.util.List getDnsServers()>();

        if r70 == null goto label20;

        $r42 = new java.util.ArrayList;

        $i3 = interfaceinvoke r70.<java.util.Collection: int size()>();

        specialinvoke $r42.<java.util.ArrayList: void <init>(int)>($i3);

        r71 = $r42;

        r72 = interfaceinvoke r70.<java.util.Collection: java.util.Iterator iterator()>();

     label17:
        $z3 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r43 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.net.InetAddress) $r43;

        $z4 = r7 instanceof java.net.Inet4Address;

        if $z4 == 0 goto label18;

        virtualinvoke r71.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label18:
        goto label17;

     label19:
        $i5 = virtualinvoke r71.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label20;

        r69 = staticinvoke <android.net.NetworkUtils: java.lang.String[] makeStrings(java.util.Collection)>(r71);

     label20:
        $r30 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r33 = $r30.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r34 = staticinvoke <com.android.server.connectivity.Tethering: android.net.ConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r33);

        r73 = virtualinvoke $r34.<android.net.ConnectivityManager: android.net.Network getNetworkForType(int)>(i0);

        if r73 != null goto label21;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Network for upstream type ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Tethering", $r38);

     label21:
        $r32 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r37 = $r32.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r36 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r37);

        interfaceinvoke $r36.<android.os.INetworkManagementService: void setDnsForwarders(android.net.Network,java.lang.String[])>(r73, r69);

     label22:
        goto label24;

     label23:
        $r64 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Tethering", "Setting DNS forwarders failed!");

        $r63 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r62 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r66 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4600(com.android.server.connectivity.Tethering$TetherMasterSM)>($r62);

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4700(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r63, $r66);

     label24:
        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void notifyTetheredOfNewUpstreamIface(java.lang.String)>(r1);

        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Exception from label20 to label22 with label23;
    }

    protected void notifyTetheredOfNewUpstreamIface(java.lang.String)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        java.lang.String r1, $r7;
        java.util.Iterator r2;
        com.android.server.connectivity.Tethering$TetherInterfaceSM r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        com.android.server.connectivity.Tethering$TetherMasterSM $r8, $r10;
        java.util.ArrayList $r11;
        boolean $z0;
        java.lang.Object $r12;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifying tethered with iface =");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Tethering", $r7);

        $r8 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String access$4802(com.android.server.connectivity.Tethering$TetherMasterSM,java.lang.String)>($r8, r1);

        $r10 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r11 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: java.util.ArrayList access$4900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r10);

        r2 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.connectivity.Tethering$TetherInterfaceSM) $r12;

        virtualinvoke r3.<com.android.server.connectivity.Tethering$TetherInterfaceSM: void sendMessage(int,java.lang.Object)>(12, r1);

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean WAIT_FOR_NETWORK_TO_SETTLE> = 0;

        <com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean TRY_TO_SETUP_MOBILE_CONNECTION> = 1;

        return;
    }
}
