final class com.android.server.am.ActivityRecord extends java.lang.Object
{
    static final java.lang.String TAG;
    static final boolean DEBUG_SAVED_STATE;
    public static final java.lang.String RECENTS_PACKAGE_NAME;
    private static final java.lang.String TAG_ACTIVITY;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String TAG_INTENT;
    private static final java.lang.String ATTR_USERID;
    private static final java.lang.String TAG_PERSISTABLEBUNDLE;
    private static final java.lang.String ATTR_LAUNCHEDFROMUID;
    private static final java.lang.String ATTR_LAUNCHEDFROMPACKAGE;
    private static final java.lang.String ATTR_RESOLVEDTYPE;
    private static final java.lang.String ATTR_COMPONENTSPECIFIED;
    static final java.lang.String ACTIVITY_ICON_SUFFIX;
    final com.android.server.am.ActivityManagerService service;
    final android.view.IApplicationToken$Stub appToken;
    final android.content.pm.ActivityInfo info;
    final android.content.pm.ApplicationInfo appInfo;
    final int launchedFromUid;
    final java.lang.String launchedFromPackage;
    final int userId;
    final android.content.Intent intent;
    final android.content.ComponentName realActivity;
    final java.lang.String shortComponentName;
    final java.lang.String resolvedType;
    final java.lang.String packageName;
    final java.lang.String processName;
    final java.lang.String taskAffinity;
    final boolean stateNotNeeded;
    boolean fullscreen;
    final boolean noDisplay;
    final boolean componentSpecified;
    static final int APPLICATION_ACTIVITY_TYPE;
    static final int HOME_ACTIVITY_TYPE;
    static final int RECENTS_ACTIVITY_TYPE;
    int mActivityType;
    java.lang.CharSequence nonLocalizedLabel;
    int labelRes;
    int icon;
    int logo;
    int theme;
    int realTheme;
    int windowFlags;
    com.android.server.am.TaskRecord task;
    long createTime;
    long displayStartTime;
    long fullyDrawnStartTime;
    long startTime;
    long lastVisibleTime;
    long cpuTimeAtResume;
    long pauseTime;
    long launchTickTime;
    android.content.res.Configuration configuration;
    android.content.res.CompatibilityInfo compat;
    com.android.server.am.ActivityRecord resultTo;
    final java.lang.String resultWho;
    final int requestCode;
    java.util.ArrayList results;
    java.util.HashSet pendingResults;
    java.util.ArrayList newIntents;
    android.app.ActivityOptions pendingOptions;
    android.app.ActivityOptions returningOptions;
    java.util.HashSet connections;
    com.android.server.am.UriPermissionOwner uriPermissions;
    com.android.server.am.ProcessRecord app;
    com.android.server.am.ActivityStack$ActivityState state;
    android.os.Bundle icicle;
    android.os.PersistableBundle persistentState;
    boolean frontOfTask;
    boolean launchFailed;
    boolean haveState;
    boolean stopped;
    boolean delayedResume;
    boolean finishing;
    boolean configDestroy;
    int configChangeFlags;
    boolean keysPaused;
    int launchMode;
    boolean visible;
    boolean sleeping;
    boolean waitingVisible;
    boolean nowVisible;
    boolean idle;
    boolean hasBeenLaunched;
    boolean frozenBeforeDestroy;
    boolean immersive;
    boolean forceNewConfig;
    int launchCount;
    long lastLaunchTime;
    java.util.ArrayList mChildContainers;
    java.lang.String stringName;
    private boolean inHistory;
    final com.android.server.am.ActivityStackSupervisor mStackSupervisor;
    boolean mStartingWindowShown;
    com.android.server.am.ActivityStackSupervisor$ActivityContainer mInitialActivityContainer;
    android.app.ActivityManager$TaskDescription taskDescription;
    boolean mLaunchTaskBehind;

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ActivityRecord r0, $r20, $r21;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, $r6, $r7, $r8, $r11, $r12, $r14, $r18, $r19, $r22, $r26, $r33, $r35, $r39, $r50, $r56, $r60, $r62, $r64, $r65, $r68, $r69, $r71, $r72, $r73;
        long l0, $l8, $l11, $l13, $l15, $l18, $l20, $l21, $l23, $l26, $l27, $l29;
        java.lang.ref.WeakReference r4;
        com.android.server.am.PendingIntentRecord r5, $r54;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i12, $i17, $i24, $i30, $i31, $i32, $i33, $i34, $i35, i36;
        com.android.server.am.ProcessRecord $r9;
        android.content.Intent $r10, r78;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        com.android.server.am.TaskRecord $r13;
        android.content.ComponentName $r15;
        android.content.pm.ApplicationInfo $r16, $r66, $r67, $r74, $r75, $r76;
        android.content.res.CompatibilityInfo $r17;
        android.content.res.Configuration $r23;
        android.app.ActivityManager$TaskDescription $r24, $r51, $r52, $r57, $r59, $r61, $r63, $r70;
        java.util.ArrayList $r25, $r30, $r41, $r43, $r44, $r53;
        android.app.ActivityOptions $r27, $r36;
        com.android.server.am.UriPermissionOwner $r28, $r37;
        java.util.HashSet $r29, $r34, $r38, $r40, $r49;
        byte $b9, $b14, $b16, $b19, $b22, $b25, $b28;
        com.android.server.am.ActivityStack$ActivityState $r31;
        android.os.Bundle $r32;
        java.lang.Object $r42, $r47, $r55;
        java.lang.StringBuilder $r45, $r46, $r48;
        android.graphics.Bitmap $r58;
        java.util.Iterator r77;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("packageName=");

        $r6 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" processName=");

        $r7 = r0.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("launchedFromUid=");

        $i1 = r0.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" launchedFromPackage=");

        $r8 = r0.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" userId=");

        $i2 = r0.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("app=");

        $r9 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r10 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r11 = virtualinvoke $r10.<android.content.Intent: java.lang.String toInsecureStringWithClip()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("frontOfTask=");

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" task=");

        $r13 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("taskAffinity=");

        $r12 = r0.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("realActivity=");

        $r15 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r14 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r16 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo>;

        if $r16 == null goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("baseDir=");

        $r74 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo>;

        $r73 = $r74.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r73);

        $r76 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo>;

        $r64 = $r76.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r75 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo>;

        $r65 = $r75.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $z25 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r64, $r65);

        if $z25 != 0 goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("resDir=");

        $r67 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo>;

        $r69 = $r67.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r69);

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("dataDir=");

        $r66 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo>;

        $r68 = $r66.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r68);

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("stateNotNeeded=");

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean stateNotNeeded>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" componentSpecified=");

        $z2 = r0.<com.android.server.am.ActivityRecord: boolean componentSpecified>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mActivityType=");

        $i3 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("compat=");

        $r17 = r0.<com.android.server.am.ActivityRecord: android.content.res.CompatibilityInfo compat>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" labelRes=0x");

        $i4 = r0.<com.android.server.am.ActivityRecord: int labelRes>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" icon=0x");

        $i5 = r0.<com.android.server.am.ActivityRecord: int icon>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" theme=0x");

        $i6 = r0.<com.android.server.am.ActivityRecord: int theme>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("config=");

        $r23 = r0.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r23);

        $r20 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r20 != null goto label03;

        $r72 = r0.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        if $r72 == null goto label04;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("resultTo=");

        $r21 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" resultWho=");

        $r26 = r0.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" resultCode=");

        $i7 = r0.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i7);

     label04:
        $r24 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        if $r24 == null goto label07;

        $r52 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        r3 = virtualinvoke $r52.<android.app.ActivityManager$TaskDescription: java.lang.String getIconFilename()>();

        if r3 != null goto label05;

        $r57 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        $r71 = virtualinvoke $r57.<android.app.ActivityManager$TaskDescription: java.lang.String getLabel()>();

        if $r71 != null goto label05;

        $r70 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        $i35 = virtualinvoke $r70.<android.app.ActivityManager$TaskDescription: int getPrimaryColor()>();

        if $i35 == 0 goto label06;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("taskDescription:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" iconFilename=");

        $r51 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        $r50 = virtualinvoke $r51.<android.app.ActivityManager$TaskDescription: java.lang.String getIconFilename()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r50);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" label=\"");

        $r63 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        $r62 = virtualinvoke $r63.<android.app.ActivityManager$TaskDescription: java.lang.String getLabel()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r62);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("\"");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" color=");

        $r61 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        $i34 = virtualinvoke $r61.<android.app.ActivityManager$TaskDescription: int getPrimaryColor()>();

        $r60 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i34);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r60);

     label06:
        if r3 != null goto label07;

        $r59 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        $r58 = virtualinvoke $r59.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getIcon()>();

        if $r58 == null goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("taskDescription contains Bitmap");

     label07:
        $r25 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if $r25 == null goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("results=");

        $r53 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r53);

     label08:
        $r29 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        if $r29 == null goto label14;

        $r40 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $i33 = virtualinvoke $r40.<java.util.HashSet: int size()>();

        if $i33 <= 0 goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Pending Results:");

        $r49 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        r77 = virtualinvoke $r49.<java.util.HashSet: java.util.Iterator iterator()>();

     label09:
        $z24 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label14;

        $r47 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.ref.WeakReference) $r47;

        if r4 == null goto label10;

        $r55 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r54 = (com.android.server.am.PendingIntentRecord) $r55;

        goto label11;

     label10:
        $r54 = null;

     label11:
        r5 = $r54;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        if r5 != null goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("null");

        goto label13;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r56 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r56);

     label13:
        goto label09;

     label14:
        $r30 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        if $r30 == null goto label18;

        $r44 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $i32 = virtualinvoke $r44.<java.util.ArrayList: int size()>();

        if $i32 <= 0 goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Pending New Intents:");

        i36 = 0;

     label15:
        $r43 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $i31 = virtualinvoke $r43.<java.util.ArrayList: int size()>();

        if i36 >= $i31 goto label18;

        $r41 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $r42 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i36);

        r78 = (android.content.Intent) $r42;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        if r78 != null goto label16;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("null");

        goto label17;

     label16:
        $r39 = virtualinvoke r78.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(0, 1, 0, 1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r39);

     label17:
        i36 = i36 + 1;

        goto label15;

     label18:
        $r27 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r27 == null goto label19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pendingOptions=");

        $r36 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r36);

     label19:
        $r28 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        if $r28 == null goto label20;

        $r37 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        virtualinvoke $r37.<com.android.server.am.UriPermissionOwner: void dump(java.io.PrintWriter,java.lang.String)>(r1, r2);

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("launchFailed=");

        $z3 = r0.<com.android.server.am.ActivityRecord: boolean launchFailed>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" launchCount=");

        $i10 = r0.<com.android.server.am.ActivityRecord: int launchCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastLaunchTime=");

        $l8 = r0.<com.android.server.am.ActivityRecord: long lastLaunchTime>;

        $b9 = $l8 cmp 0L;

        if $b9 != 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

        goto label22;

     label21:
        $l11 = r0.<com.android.server.am.ActivityRecord: long lastLaunchTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l11, l0, r1);

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("haveState=");

        $z4 = r0.<com.android.server.am.ActivityRecord: boolean haveState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" icicle=");

        $r32 = r0.<com.android.server.am.ActivityRecord: android.os.Bundle icicle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("state=");

        $r31 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" stopped=");

        $z8 = r0.<com.android.server.am.ActivityRecord: boolean stopped>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" delayedResume=");

        $z7 = r0.<com.android.server.am.ActivityRecord: boolean delayedResume>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" finishing=");

        $z6 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("keysPaused=");

        $z5 = r0.<com.android.server.am.ActivityRecord: boolean keysPaused>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" inHistory=");

        $z12 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" visible=");

        $z11 = r0.<com.android.server.am.ActivityRecord: boolean visible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" sleeping=");

        $z10 = r0.<com.android.server.am.ActivityRecord: boolean sleeping>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" idle=");

        $z9 = r0.<com.android.server.am.ActivityRecord: boolean idle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("fullscreen=");

        $z15 = r0.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" noDisplay=");

        $z14 = r0.<com.android.server.am.ActivityRecord: boolean noDisplay>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" immersive=");

        $z13 = r0.<com.android.server.am.ActivityRecord: boolean immersive>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" launchMode=");

        $i12 = r0.<com.android.server.am.ActivityRecord: int launchMode>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("frozenBeforeDestroy=");

        $z16 = r0.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" forceNewConfig=");

        $z17 = r0.<com.android.server.am.ActivityRecord: boolean forceNewConfig>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mActivityType=");

        $i17 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        $r33 = staticinvoke <com.android.server.am.ActivityRecord: java.lang.String activityTypeToString(int)>($i17);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $l13 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b14 = $l13 cmp 0L;

        if $b14 != 0 goto label23;

        $l29 = r0.<com.android.server.am.ActivityRecord: long startTime>;

        $b28 = $l29 cmp 0L;

        if $b28 == 0 goto label28;

     label23:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("displayStartTime=");

        $l15 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

        goto label25;

     label24:
        $l20 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l20, l0, r1);

     label25:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" startTime=");

        $l21 = r0.<com.android.server.am.ActivityRecord: long startTime>;

        $b22 = $l21 cmp 0L;

        if $b22 != 0 goto label26;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

        goto label27;

     label26:
        $l23 = r0.<com.android.server.am.ActivityRecord: long startTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l23, l0, r1);

     label27:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label28:
        $l18 = r0.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $b19 = $l18 cmp 0L;

        if $b19 != 0 goto label29;

        $z23 = r0.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z23 != 0 goto label29;

        $z22 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z22 == 0 goto label32;

     label29:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("waitingVisible=");

        $z18 = r0.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" nowVisible=");

        $z19 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastVisibleTime=");

        $l26 = r0.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $b25 = $l26 cmp 0L;

        if $b25 != 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

        goto label31;

     label30:
        $l27 = r0.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l27, l0, r1);

     label31:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label32:
        $z21 = r0.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        if $z21 != 0 goto label33;

        $i30 = r0.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        if $i30 == 0 goto label34;

     label33:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("configDestroy=");

        $z20 = r0.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" configChangeFlags=");

        $i24 = r0.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i24);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

     label34:
        $r34 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r34 == null goto label35;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("connections=");

        $r38 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r38);

     label35:
        return;
    }

    static com.android.server.am.ActivityRecord forToken(android.os.IBinder)
    {
        android.os.IBinder r0;
        java.lang.ClassCastException r1, $r6;
        com.android.server.am.ActivityRecord$Token $r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityRecord $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: android.os.IBinder;

     label1:
        if r0 == null goto label2;

        $r2 = (com.android.server.am.ActivityRecord$Token) r0;

        $r3 = $r2.<com.android.server.am.ActivityRecord$Token: java.lang.ref.WeakReference weakActivity>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (com.android.server.am.ActivityRecord) $r4;

        goto label3;

     label2:
        $r5 = null;

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad activity token: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r10, r1);

        return null;

        catch java.lang.ClassCastException from label1 to label3 with label4;
    }

    boolean isNotResolverActivity()
    {
        com.android.server.am.ActivityRecord r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r4;
        android.content.ComponentName $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = class "com/android/internal/app/ResolverActivity";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void <init>(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, int, java.lang.String, android.content.Intent, java.lang.String, android.content.pm.ActivityInfo, android.content.res.Configuration, com.android.server.am.ActivityRecord, java.lang.String, int, boolean, com.android.server.am.ActivityStackSupervisor, com.android.server.am.ActivityStackSupervisor$ActivityContainer, android.os.Bundle)
    {
        com.android.server.am.ActivityRecord r0, r8;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessRecord r2;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        java.lang.String r3, r5, r9, $r19, $r21, $r22, $r27, $r28, $r32, $r33, $r34, $r36, $r37, $r49, $r53, $r56;
        android.content.Intent r4, $r29, $r38, $r45;
        android.content.pm.ActivityInfo r6;
        android.content.res.Configuration r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        com.android.server.am.ActivityStackSupervisor r10;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r11;
        android.os.Bundle r12;
        long $l2;
        android.content.pm.ApplicationInfo r13, $r16, $r23, $r26, $r46, $r47, $r48, $r50;
        com.android.server.am.ActivityRecord$Token $r14;
        java.util.ArrayList $r15;
        android.content.ComponentName $r17, $r20, $r35, $r55;
        com.android.server.am.ActivityStack$ActivityState $r18;
        java.lang.CharSequence $r24, $r25, $r51;
        int[] $r30;
        com.android.server.AttributeCache $r31;
        java.util.Set $r39;
        android.net.Uri $r40;
        android.content.res.TypedArray $r41, $r42, $r43;
        android.app.ActivityOptions $r52, $r54;
        com.android.server.AttributeCache$Entry r57;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.Intent;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: android.content.pm.ActivityInfo;

        r7 := @parameter7: android.content.res.Configuration;

        r8 := @parameter8: com.android.server.am.ActivityRecord;

        r9 := @parameter9: java.lang.String;

        i1 := @parameter10: int;

        z0 := @parameter11: boolean;

        r10 := @parameter12: com.android.server.am.ActivityStackSupervisor;

        r11 := @parameter13: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        r12 := @parameter14: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.am.ActivityRecord: long createTime> = $l2;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: java.util.ArrayList mChildContainers> = $r15;

        r0.<com.android.server.am.ActivityRecord: boolean mStartingWindowShown> = 0;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service> = r1;

        $r14 = new com.android.server.am.ActivityRecord$Token;

        specialinvoke $r14.<com.android.server.am.ActivityRecord$Token: void <init>(com.android.server.am.ActivityRecord)>(r0);

        r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken> = $r14;

        r0.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info> = r6;

        r0.<com.android.server.am.ActivityRecord: int launchedFromUid> = i0;

        r0.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage> = r3;

        $r16 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        r0.<com.android.server.am.ActivityRecord: int userId> = $i4;

        r0.<com.android.server.am.ActivityRecord: android.content.Intent intent> = r4;

        $r17 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r19 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName> = $r19;

        r0.<com.android.server.am.ActivityRecord: java.lang.String resolvedType> = r5;

        r0.<com.android.server.am.ActivityRecord: boolean componentSpecified> = z0;

        r0.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration> = r7;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = r8;

        r0.<com.android.server.am.ActivityRecord: java.lang.String resultWho> = r9;

        r0.<com.android.server.am.ActivityRecord: int requestCode> = i1;

        $r18 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r18;

        r0.<com.android.server.am.ActivityRecord: boolean frontOfTask> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean launchFailed> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean stopped> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean delayedResume> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean finishing> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean configDestroy> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean keysPaused> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean inHistory> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean visible> = 1;

        r0.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean nowVisible> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean idle> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean hasBeenLaunched> = 0;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor> = r10;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor$ActivityContainer mInitialActivityContainer> = r11;

        if r12 == null goto label01;

        $r54 = new android.app.ActivityOptions;

        specialinvoke $r54.<android.app.ActivityOptions: void <init>(android.os.Bundle)>(r12);

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = $r54;

        $r52 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $z12 = virtualinvoke $r52.<android.app.ActivityOptions: boolean getLaunchTaskBehind()>();

        r0.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind> = $z12;

     label01:
        r0.<com.android.server.am.ActivityRecord: boolean haveState> = 1;

        if r6 == null goto label26;

        $r21 = r6.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r21 == null goto label02;

        $i33 = r6.<android.content.pm.ActivityInfo: int launchMode>;

        if $i33 == 0 goto label02;

        $i34 = r6.<android.content.pm.ActivityInfo: int launchMode>;

        if $i34 != 1 goto label03;

     label02:
        $r20 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity> = $r20;

        goto label04;

     label03:
        $r55 = new android.content.ComponentName;

        $r53 = r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r56 = r6.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r55.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r53, $r56);

        r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity> = $r55;

     label04:
        $r22 = r6.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity> = $r22;

        $i5 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i6 = $i5 & 16;

        if $i6 == 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        r0.<com.android.server.am.ActivityRecord: boolean stateNotNeeded> = $z11;

        $r23 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo> = $r23;

        $r25 = r6.<android.content.pm.ActivityInfo: java.lang.CharSequence nonLocalizedLabel>;

        r0.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel> = $r25;

        $i8 = r6.<android.content.pm.ActivityInfo: int labelRes>;

        r0.<com.android.server.am.ActivityRecord: int labelRes> = $i8;

        $r24 = r0.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel>;

        if $r24 != null goto label07;

        $i36 = r0.<com.android.server.am.ActivityRecord: int labelRes>;

        if $i36 != 0 goto label07;

        r13 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r51 = r13.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel>;

        r0.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel> = $r51;

        $i35 = r13.<android.content.pm.ApplicationInfo: int labelRes>;

        r0.<com.android.server.am.ActivityRecord: int labelRes> = $i35;

     label07:
        $i7 = virtualinvoke r6.<android.content.pm.ActivityInfo: int getIconResource()>();

        r0.<com.android.server.am.ActivityRecord: int icon> = $i7;

        $i11 = virtualinvoke r6.<android.content.pm.ActivityInfo: int getLogoResource()>();

        r0.<com.android.server.am.ActivityRecord: int logo> = $i11;

        $i12 = virtualinvoke r6.<android.content.pm.ActivityInfo: int getThemeResource()>();

        r0.<com.android.server.am.ActivityRecord: int theme> = $i12;

        $i9 = r0.<com.android.server.am.ActivityRecord: int theme>;

        r0.<com.android.server.am.ActivityRecord: int realTheme> = $i9;

        $i10 = r0.<com.android.server.am.ActivityRecord: int realTheme>;

        if $i10 != 0 goto label10;

        $r47 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i37 = $r47.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i37 >= 11 goto label08;

        $i38 = 16973829;

        goto label09;

     label08:
        $i38 = 16973931;

     label09:
        r0.<com.android.server.am.ActivityRecord: int realTheme> = $i38;

     label10:
        $i15 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i16 = $i15 & 512;

        if $i16 == 0 goto label11;

        $i29 = r0.<com.android.server.am.ActivityRecord: int windowFlags>;

        $i31 = $i29 | 16777216;

        r0.<com.android.server.am.ActivityRecord: int windowFlags> = $i31;

     label11:
        $i13 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i14 = $i13 & 1;

        if $i14 == 0 goto label13;

        if r2 == null goto label13;

        $r46 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i26 = $r46.<android.content.pm.ApplicationInfo: int uid>;

        if $i26 == 1000 goto label12;

        $r48 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i30 = $r48.<android.content.pm.ApplicationInfo: int uid>;

        $r50 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i32 = $r50.<android.content.pm.ApplicationInfo: int uid>;

        if $i30 != $i32 goto label13;

     label12:
        $r49 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String processName> = $r49;

        goto label14;

     label13:
        $r28 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String processName> = $r28;

     label14:
        $r29 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        if $r29 == null goto label15;

        $i28 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i27 = $i28 & 32;

        if $i27 == 0 goto label15;

        $r45 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r45.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

     label15:
        $r26 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r27 = $r26.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String packageName> = $r27;

        $i18 = r6.<android.content.pm.ActivityInfo: int launchMode>;

        r0.<com.android.server.am.ActivityRecord: int launchMode> = $i18;

        $r31 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        $r33 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i19 = r0.<com.android.server.am.ActivityRecord: int realTheme>;

        $r30 = <com.android.internal.R$styleable: int[] Window>;

        $i17 = r0.<com.android.server.am.ActivityRecord: int userId>;

        r57 = virtualinvoke $r31.<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[],int)>($r33, $i19, $r30, $i17);

        if r57 == null goto label16;

        $r41 = r57.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z6 = virtualinvoke $r41.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z6 != 0 goto label16;

        $r42 = r57.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z10 = virtualinvoke $r42.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        if $z10 != 0 goto label16;

        $z9 = 1;

        goto label17;

     label16:
        $z9 = 0;

     label17:
        r0.<com.android.server.am.ActivityRecord: boolean fullscreen> = $z9;

        if r57 == null goto label18;

        $r43 = r57.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z8 = virtualinvoke $r43.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        if $z8 == 0 goto label18;

        $z5 = 1;

        goto label19;

     label18:
        $z5 = 0;

     label19:
        r0.<com.android.server.am.ActivityRecord: boolean noDisplay> = $z5;

        if z0 == 0 goto label20;

        $i25 = staticinvoke <android.os.Process: int myUid()>();

        if i0 == $i25 goto label20;

        if i0 != 0 goto label21;

     label20:
        $r32 = "android.intent.action.MAIN";

        $r36 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        $z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z1 == 0 goto label21;

        $z4 = virtualinvoke r4.<android.content.Intent: boolean hasCategory(java.lang.String)>("android.intent.category.HOME");

        if $z4 == 0 goto label21;

        $r39 = virtualinvoke r4.<android.content.Intent: java.util.Set getCategories()>();

        $i24 = interfaceinvoke $r39.<java.util.Set: int size()>();

        if $i24 != 1 goto label21;

        $r40 = virtualinvoke r4.<android.content.Intent: android.net.Uri getData()>();

        if $r40 != null goto label21;

        $r37 = virtualinvoke r4.<android.content.Intent: java.lang.String getType()>();

        if $r37 != null goto label21;

        $r38 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i22 = virtualinvoke $r38.<android.content.Intent: int getFlags()>();

        $i23 = $i22 & 268435456;

        if $i23 == 0 goto label21;

        $z7 = virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean isNotResolverActivity()>();

        if $z7 == 0 goto label21;

        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 1;

        goto label23;

     label21:
        $r35 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r34 = virtualinvoke $r35.<android.content.ComponentName: java.lang.String getClassName()>();

        $z3 = virtualinvoke $r34.<java.lang.String: boolean contains(java.lang.CharSequence)>("com.android.systemui.recent");

        if $z3 == 0 goto label22;

        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 2;

        goto label23;

     label22:
        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 0;

     label23:
        $i21 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i20 = $i21 & 2048;

        if $i20 == 0 goto label24;

        $z2 = 1;

        goto label25;

     label24:
        $z2 = 0;

     label25:
        r0.<com.android.server.am.ActivityRecord: boolean immersive> = $z2;

        goto label27;

     label26:
        r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity> = null;

        r0.<com.android.server.am.ActivityRecord: boolean stateNotNeeded> = 0;

        r0.<com.android.server.am.ActivityRecord: android.content.pm.ApplicationInfo appInfo> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String processName> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String packageName> = null;

        r0.<com.android.server.am.ActivityRecord: boolean fullscreen> = 1;

        r0.<com.android.server.am.ActivityRecord: boolean noDisplay> = 0;

        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean immersive> = 0;

     label27:
        return;
    }

    void setTask(com.android.server.am.TaskRecord, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1, r2, $r3, $r4, $r5, $r12, $r13;
        boolean $z0;
        java.lang.StringBuilder $r6, $r8, $r10;
        com.android.server.am.ActivityStack $r9, $r14;
        java.lang.String $r11;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r2 := @parameter1: com.android.server.am.TaskRecord;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r3 == null goto label4;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z0 = virtualinvoke $r4.<com.android.server.am.TaskRecord: boolean removeActivity(com.android.server.am.ActivityRecord)>(r0);

        if $z0 == 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r5 == r1 goto label1;

        $r12 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r14 = $r12.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r13 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r14.<com.android.server.am.ActivityStack: void removeTask(com.android.server.am.TaskRecord)>($r13);

        goto label4;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!!! REMOVE THIS LOG !!! setTask: nearly removed stack=");

        if r1 != null goto label2;

        $r9 = null;

        goto label3;

     label2:
        $r9 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

     label3:
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r11);

     label4:
        r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task> = r1;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void setTaskToAffiliateWith(com.android.server.am.TaskRecord)>(r2);

        return;
    }

    void setTaskToAffiliateWith(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        if r1 == null goto label1;

        $i0 = r0.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i0 == 3 goto label1;

        $i1 = r0.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i1 == 2 goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r2.<com.android.server.am.TaskRecord: void setTaskToAffiliateWith(com.android.server.am.TaskRecord)>(r1);

     label1:
        return;
    }

    boolean changeWindowTranslucency(boolean)
    {
        com.android.server.am.ActivityRecord r0;
        boolean z0, $z1;
        com.android.server.am.TaskRecord $r1;
        int $i0, $i1;
        byte $b2;

        r0 := @this: com.android.server.am.ActivityRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r1.<com.android.server.am.TaskRecord: int numFullscreen>;

        if z0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = -1;

     label3:
        $i1 = $i0 + $b2;

        $r1.<com.android.server.am.TaskRecord: int numFullscreen> = $i1;

        r0.<com.android.server.am.ActivityRecord: boolean fullscreen> = z0;

        return 1;
    }

    void putInHistory()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: boolean inHistory> = 1;

     label1:
        return;
    }

    void takeFromHistory()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0, $z1;
        com.android.server.am.TaskRecord $r1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.am.ActivityRecord: boolean inHistory> = 0;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r1 == null goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task> = null;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

     label2:
        return;
    }

    boolean isInHistory()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        return $z0;
    }

    boolean isHomeActivity()
    {
        com.android.server.am.ActivityRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $i0 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isRecentsActivity()
    {
        com.android.server.am.ActivityRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $i0 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isApplicationActivity()
    {
        com.android.server.am.ActivityRecord r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $i0 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isPersistable()
    {
        com.android.server.am.ActivityRecord r0;
        android.content.pm.ActivityInfo $r1, $r4;
        int $i0, $i1, $i2, $i3;
        android.content.Intent $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i0 = $r1.<android.content.pm.ActivityInfo: int persistableMode>;

        if $i0 == 0 goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i3 = $r4.<android.content.pm.ActivityInfo: int persistableMode>;

        if $i3 != 2 goto label3;

     label1:
        $r2 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i1 = virtualinvoke $r3.<android.content.Intent: int getFlags()>();

        $i2 = $i1 & 8388608;

        if $i2 != 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    void makeFinishing()
    {
        com.android.server.am.ActivityRecord r0, $r3;
        boolean $z0, $z1;
        com.android.server.am.TaskRecord $r1;
        com.android.server.am.ActivityStack $r2;
        com.android.server.am.ActivityStackSupervisor $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r2 = $r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>();

        if r0 != $r3 goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean requestVisibleBehindLocked(com.android.server.am.ActivityRecord,boolean)>(r0, 0);

     label1:
        r0.<com.android.server.am.ActivityRecord: boolean finishing> = 1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean stopped>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

     label2:
        return;
    }

    com.android.server.am.UriPermissionOwner getUriPermissionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.UriPermissionOwner $r1, $r2, $r3;
        com.android.server.am.ActivityManagerService $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        if $r1 != null goto label1;

        $r3 = new com.android.server.am.UriPermissionOwner;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        specialinvoke $r3.<com.android.server.am.UriPermissionOwner: void <init>(com.android.server.am.ActivityManagerService,java.lang.Object)>($r4, r0);

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions> = $r3;

     label1:
        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        return $r2;
    }

    void addResultLocked(com.android.server.am.ActivityRecord, java.lang.String, int, int, android.content.Intent)
    {
        com.android.server.am.ActivityRecord r0, r1;
        java.lang.String r2;
        int i0, i1;
        android.content.Intent r3;
        com.android.server.am.ActivityResult r4, $r5;
        java.util.ArrayList $r6, $r7, $r8;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.content.Intent;

        $r5 = new com.android.server.am.ActivityResult;

        specialinvoke $r5.<com.android.server.am.ActivityResult: void <init>(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(r1, r2, i0, i1, r3);

        r4 = $r5;

        $r6 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if $r6 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results> = $r8;

     label1:
        $r7 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        return;
    }

    void removeResultsLocked(com.android.server.am.ActivityRecord, java.lang.String, int)
    {
        com.android.server.am.ActivityRecord r0, r1, $r8;
        java.lang.String r2, $r9, $r10;
        int i0, i1, $i2, $i3;
        com.android.server.am.ActivityResult r3;
        java.util.ArrayList $r4, $r5, $r6, $r12;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if $r4 == null goto label7;

        $r5 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label7;

        $r6 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityResult) $r7;

        $r8 = r3.<com.android.server.am.ActivityResult: com.android.server.am.ActivityRecord mFrom>;

        if $r8 == r1 goto label2;

        goto label6;

     label2:
        $r9 = r3.<com.android.server.am.ActivityResult: java.lang.String mResultWho>;

        if $r9 != null goto label3;

        if r2 == null goto label4;

        goto label6;

     label3:
        $r10 = r3.<com.android.server.am.ActivityResult: java.lang.String mResultWho>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label4;

        goto label6;

     label4:
        $i3 = r3.<com.android.server.am.ActivityResult: int mRequestCode>;

        if $i3 == i0 goto label5;

        goto label6;

     label5:
        $r12 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label6:
        i1 = i1 + -1;

        goto label1;

     label7:
        return;
    }

    void addNewIntentLocked(android.content.Intent)
    {
        com.android.server.am.ActivityRecord r0;
        android.content.Intent r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents> = $r4;

     label1:
        $r3 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    final void deliverNewIntentLocked(int, android.content.Intent)
    {
        com.android.server.am.ActivityRecord r0, $r19;
        int i0, $i1;
        android.content.Intent r1, $r9, $r13;
        boolean z0, $z2;
        java.util.ArrayList r2, $r12;
        com.android.server.am.ActivityManagerService $r3, $r16;
        java.lang.String $r4, $r24, $r28;
        com.android.server.am.UriPermissionOwner $r5;
        com.android.server.am.ActivityStack$ActivityState $r6, $r7;
        com.android.server.am.ProcessRecord $r8, $r10, $r15;
        android.app.IApplicationThread $r11, $r17;
        android.view.IApplicationToken$Stub $r14;
        com.android.server.am.TaskRecord $r18;
        com.android.server.am.ActivityStack $r20;
        java.lang.StringBuilder $r21, $r23, $r25, $r26, $r29, $r30;
        java.lang.NullPointerException $r22, r32;
        android.os.RemoteException $r27, r31;

        r0 := @this: com.android.server.am.ActivityRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r4 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r5 = virtualinvoke r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        $i1 = r0.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner,int)>(i0, $r4, r1, $r5, $i1);

        z0 = 1;

        $r7 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r6 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r7 == $r6 goto label1;

        $r16 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $z2 = virtualinvoke $r16.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        if $z2 == 0 goto label6;

        $r18 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r20 = $r18.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r19 = virtualinvoke $r20.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if $r19 != r0 goto label6;

     label1:
        $r8 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r8 == null goto label6;

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label6;

     label2:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r2 = $r12;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r1 = $r13;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r15 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r17 = $r15.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r14 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r17.<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>(r2, $r14);

        z0 = 0;

     label3:
        goto label6;

     label4:
        $r27 := @caughtexception;

        r31 = $r27;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending new intent to ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r28, r31);

        goto label6;

     label5:
        $r22 := @caughtexception;

        r32 = $r22;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending new intent to ");

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r24, r32);

     label6:
        if z0 == 0 goto label7;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void addNewIntentLocked(android.content.Intent)>($r9);

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.NullPointerException from label2 to label3 with label5;
    }

    void updateOptionsLocked(android.os.Bundle)
    {
        com.android.server.am.ActivityRecord r0;
        android.os.Bundle r1;
        android.app.ActivityOptions $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label2;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke $r4.<android.app.ActivityOptions: void abort()>();

     label1:
        $r3 = new android.app.ActivityOptions;

        specialinvoke $r3.<android.app.ActivityOptions: void <init>(android.os.Bundle)>(r1);

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = $r3;

     label2:
        return;
    }

    void updateOptionsLocked(android.app.ActivityOptions)
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions r1, $r2, $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.app.ActivityOptions;

        if r1 == null goto label2;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke $r3.<android.app.ActivityOptions: void abort()>();

     label1:
        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = r1;

     label2:
        return;
    }

    void applyOptionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;
        boolean z0, $z1, $z2;
        android.app.ActivityOptions $r1, $r2, $r3, $r5, $r8, $r9, $r11, $r12, $r16, $r17, $r18, $r19, $r21, $r23, $r26, $r28, $r29, $r30, $r31, $r33, $r36, $r37, $r38, $r43, $r44, $r45, $r47, $r48, $r51, $r53, $r54, $r58, $r60, $r61, $r62, $r63, $r64, $r67, $r68;
        com.android.server.am.ActivityManagerService $r4, $r13, $r32, $r55;
        com.android.server.wm.WindowManagerService $r6, $r15, $r35, $r52;
        java.lang.String $r7, $r69;
        android.os.IRemoteCallback $r10, $r20, $r42;
        android.graphics.Bitmap $r14, $r34, $r49, $r50;
        android.graphics.Rect $r22, $r25, $r39, $r40, $r56, $r59;
        android.content.Intent $r24, $r27, $r41, $r46, $r57, $r65;
        java.lang.StringBuilder $r66, $r70, $r71;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r1 == null goto label11;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i1 = virtualinvoke $r2.<android.app.ActivityOptions: int getAnimationType()>();

        if $i1 == 5 goto label11;

        $r3 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        i0 = virtualinvoke $r3.<android.app.ActivityOptions: int getAnimationType()>();

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label09;
            case 8: goto label06;
            case 9: goto label06;
            default: goto label09;
        };

     label01:
        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r6 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r5 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r7 = virtualinvoke $r5.<android.app.ActivityOptions: java.lang.String getPackageName()>();

        $r8 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i2 = virtualinvoke $r8.<android.app.ActivityOptions: int getCustomEnterResId()>();

        $r9 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i3 = virtualinvoke $r9.<android.app.ActivityOptions: int getCustomExitResId()>();

        $r11 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r10 = virtualinvoke $r11.<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>();

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>($r7, $i2, $i3, $r10);

        goto label10;

     label02:
        $r55 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r52 = $r55.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r54 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i25 = virtualinvoke $r54.<android.app.ActivityOptions: int getStartX()>();

        $r53 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i26 = virtualinvoke $r53.<android.app.ActivityOptions: int getStartY()>();

        $r60 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i28 = virtualinvoke $r60.<android.app.ActivityOptions: int getWidth()>();

        $r61 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i29 = virtualinvoke $r61.<android.app.ActivityOptions: int getHeight()>();

        virtualinvoke $r52.<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionScaleUp(int,int,int,int)>($i25, $i26, $i28, $i29);

        $r57 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r56 = virtualinvoke $r57.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r56 != null goto label10;

        $r65 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r59 = new android.graphics.Rect;

        $r58 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i33 = virtualinvoke $r58.<android.app.ActivityOptions: int getStartX()>();

        $r64 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i32 = virtualinvoke $r64.<android.app.ActivityOptions: int getStartY()>();

        $r63 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i31 = virtualinvoke $r63.<android.app.ActivityOptions: int getStartX()>();

        $r62 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i30 = virtualinvoke $r62.<android.app.ActivityOptions: int getWidth()>();

        $i37 = $i31 + $i30;

        $r68 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i36 = virtualinvoke $r68.<android.app.ActivityOptions: int getStartY()>();

        $r67 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i34 = virtualinvoke $r67.<android.app.ActivityOptions: int getHeight()>();

        $i35 = $i36 + $i34;

        specialinvoke $r59.<android.graphics.Rect: void <init>(int,int,int,int)>($i33, $i32, $i37, $i35);

        virtualinvoke $r65.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>($r59);

        goto label10;

     label03:
        if i0 != 3 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        z0 = $z2;

        $r32 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r35 = $r32.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r36 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r34 = virtualinvoke $r36.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $r33 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i17 = virtualinvoke $r33.<android.app.ActivityOptions: int getStartX()>();

        $r38 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i16 = virtualinvoke $r38.<android.app.ActivityOptions: int getStartY()>();

        $r37 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r42 = virtualinvoke $r37.<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>();

        virtualinvoke $r35.<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>($r34, $i17, $i16, $r42, z0);

        $r41 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r40 = virtualinvoke $r41.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r40 != null goto label10;

        $r46 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r39 = new android.graphics.Rect;

        $r45 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i20 = virtualinvoke $r45.<android.app.ActivityOptions: int getStartX()>();

        $r47 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i18 = virtualinvoke $r47.<android.app.ActivityOptions: int getStartY()>();

        $r43 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i19 = virtualinvoke $r43.<android.app.ActivityOptions: int getStartX()>();

        $r44 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r50 = virtualinvoke $r44.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $i23 = virtualinvoke $r50.<android.graphics.Bitmap: int getWidth()>();

        $i24 = $i19 + $i23;

        $r51 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i21 = virtualinvoke $r51.<android.app.ActivityOptions: int getStartY()>();

        $r48 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r49 = virtualinvoke $r48.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $i22 = virtualinvoke $r49.<android.graphics.Bitmap: int getHeight()>();

        $i27 = $i21 + $i22;

        specialinvoke $r39.<android.graphics.Rect: void <init>(int,int,int,int)>($i20, $i18, $i24, $i27);

        virtualinvoke $r46.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>($r39);

        goto label10;

     label06:
        $r13 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r15 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r12 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r14 = virtualinvoke $r12.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $r16 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i4 = virtualinvoke $r16.<android.app.ActivityOptions: int getStartX()>();

        $r17 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i5 = virtualinvoke $r17.<android.app.ActivityOptions: int getStartY()>();

        $r18 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i6 = virtualinvoke $r18.<android.app.ActivityOptions: int getWidth()>();

        $r19 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i7 = virtualinvoke $r19.<android.app.ActivityOptions: int getHeight()>();

        $r21 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r20 = virtualinvoke $r21.<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>();

        if i0 != 8 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        virtualinvoke $r15.<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>($r14, $i4, $i5, $i6, $i7, $r20, $z1);

        $r24 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r25 = virtualinvoke $r24.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r25 != null goto label10;

        $r27 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r22 = new android.graphics.Rect;

        $r23 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i9 = virtualinvoke $r23.<android.app.ActivityOptions: int getStartX()>();

        $r26 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i8 = virtualinvoke $r26.<android.app.ActivityOptions: int getStartY()>();

        $r29 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i11 = virtualinvoke $r29.<android.app.ActivityOptions: int getStartX()>();

        $r28 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i10 = virtualinvoke $r28.<android.app.ActivityOptions: int getWidth()>();

        $i13 = $i11 + $i10;

        $r31 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i12 = virtualinvoke $r31.<android.app.ActivityOptions: int getStartY()>();

        $r30 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i15 = virtualinvoke $r30.<android.app.ActivityOptions: int getHeight()>();

        $i14 = $i12 + $i15;

        specialinvoke $r22.<android.graphics.Rect: void <init>(int,int,int,int)>($i9, $i8, $i13, $i14);

        virtualinvoke $r27.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>($r22);

        goto label10;

     label09:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyOptionsLocked: Unknown animationType=");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r69);

     label10:
        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

     label11:
        return;
    }

    android.app.ActivityOptions getOptionsForTargetActivityLocked()
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions $r1, $r2, $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r3 = virtualinvoke $r2.<android.app.ActivityOptions: android.app.ActivityOptions forTargetActivity()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    void clearOptionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions $r1, $r2;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke $r2.<android.app.ActivityOptions: void abort()>();

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

     label1:
        return;
    }

    android.app.ActivityOptions takeOptionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions r1;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

        return r1;
    }

    void removeUriPermissionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.UriPermissionOwner $r1, $r2;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        virtualinvoke $r2.<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked()>();

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions> = null;

     label1:
        return;
    }

    void pauseKeyDispatchingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        android.view.IApplicationToken$Stub $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean keysPaused>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: boolean keysPaused> = 1;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void pauseKeyDispatching(android.os.IBinder)>($r2);

     label1:
        return;
    }

    void resumeKeyDispatchingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        android.view.IApplicationToken$Stub $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean keysPaused>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: boolean keysPaused> = 0;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void resumeKeyDispatching(android.os.IBinder)>($r2);

     label1:
        return;
    }

    void updateThumbnail(android.graphics.Bitmap, java.lang.CharSequence)
    {
        com.android.server.am.ActivityRecord r0;
        android.graphics.Bitmap r1;
        java.lang.CharSequence r2;
        boolean z0, $z1;
        com.android.server.am.TaskRecord $r3, $r4, $r6;
        com.android.server.am.ActivityStackSupervisor $r5;
        com.android.server.am.ActivityManagerService $r7;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: java.lang.CharSequence;

        if r1 == null goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        z0 = virtualinvoke $r4.<com.android.server.am.TaskRecord: boolean setLastThumbnail(android.graphics.Bitmap)>(r1);

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean isPersistable()>();

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r7 = $r5.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>($r6, 0);

     label1:
        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3.<com.android.server.am.TaskRecord: java.lang.CharSequence lastDescription> = r2;

        return;
    }

    void startLaunchTickingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = <com.android.server.am.ActivityManagerService: boolean IS_USER_BUILD>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $l0 = r0.<com.android.server.am.ActivityRecord: long launchTickTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityRecord: long launchTickTime> = $l2;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean continueLaunchTickingLocked()>();

     label2:
        return;
    }

    boolean continueLaunchTickingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ActivityStack r1;
        android.os.Message r2;
        long $l0;
        byte $b1;
        com.android.server.am.TaskRecord $r3;
        android.os.Handler $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityRecord;

        $l0 = r0.<com.android.server.am.ActivityRecord: long launchTickTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r4 = r1.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(103, r0);

        $r5 = r1.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(103);

        $r6 = r1.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 500L);

        return 1;

     label1:
        return 0;
    }

    void finishLaunchTickingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord $r1;
        com.android.server.am.ActivityStack $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        r0.<com.android.server.am.ActivityRecord: long launchTickTime> = 0L;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r2 = $r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r3 = $r2.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(103);

        return;
    }

    public boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ProcessRecord r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 != 0 goto label1;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void startFreezingScreenLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ProcessRecord r1;
        int i0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r2;
        android.view.IApplicationToken$Stub $r3;
        com.android.server.wm.WindowManagerService $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r4 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r3 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void startAppFreezingScreen(android.os.IBinder,int)>($r3, i0);

     label1:
        return;
    }

    public void stopFreezingScreenLocked(boolean)
    {
        com.android.server.am.ActivityRecord r0;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService $r1;
        android.view.IApplicationToken$Stub $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy>;

        if $z1 == 0 goto label2;

     label1:
        r0.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy> = 0;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void stopAppFreezingScreen(android.os.IBinder,boolean)>($r2, z0);

     label2:
        return;
    }

    public void reportFullyDrawnLocked()
    {
        com.android.server.am.ActivityRecord r0;
        long l0, l1, l2, $l3, $l5, $l7, $l9, $l16, $l17;
        com.android.server.am.ActivityStack r1;
        java.lang.StringBuilder r2;
        byte $b4, $b6, $b8, $b13, $b15;
        com.android.server.am.TaskRecord $r3;
        int $i10, $i11;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        java.lang.String $r7, $r10, $r14;
        java.lang.Long $r8, $r9;
        com.android.server.am.ActivityManagerService $r12;

        r0 := @this: com.android.server.am.ActivityRecord;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label1;

        specialinvoke r0.<com.android.server.am.ActivityRecord: void reportLaunchTimeLocked(long)>(l0);

     label1:
        $l5 = r0.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label6;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $l7 = r0.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime>;

        l1 = l0 - $l7;

        $l9 = r1.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime>;

        $b8 = $l9 cmp 0L;

        if $b8 == 0 goto label2;

        $l16 = r1.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime>;

        $l17 = l0 - $l16;

        goto label3;

     label2:
        $l17 = l1;

     label3:
        l2 = $l17;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(64L, "drawing", 0);

        $r4 = newarray (java.lang.Object)[5];

        $i10 = r0.<com.android.server.am.ActivityRecord: int userId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r4[0] = $r5;

        $i11 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r4[1] = $r6;

        $r7 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r4[2] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r4[3] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r4[4] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30042, $r4);

        $r12 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r2 = $r12.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fully drawn ");

        $r10 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r2);

        $b13 = l1 cmp l2;

        if $b13 == 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (total ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label4:
        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        $b15 = l2 cmp 0L;

        if $b15 <= 0 goto label5;

     label5:
        r0.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime> = 0L;

        r1.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime> = 0L;

     label6:
        return;
    }

    private void reportLaunchTimeLocked(long)
    {
        com.android.server.am.ActivityRecord r0;
        long l0, l1, l2, $l3, $l4, $l12, $l13;
        com.android.server.am.ActivityStack r1;
        java.lang.StringBuilder r2;
        com.android.server.am.TaskRecord $r3;
        byte $b5, $b10, $b11;
        java.lang.Object[] $r4;
        int $i6, $i7;
        java.lang.Integer $r5, $r7;
        java.lang.String $r6, $r11, $r15;
        java.lang.Long $r8, $r9;
        com.android.server.am.ActivityManagerService $r10;
        com.android.server.am.ActivityStackSupervisor $r18;

        r0 := @this: com.android.server.am.ActivityRecord;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $l3 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        l1 = l0 - $l3;

        $l4 = r1.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label1;

        $l12 = r1.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        $l13 = l0 - $l12;

        goto label2;

     label1:
        $l13 = l1;

     label2:
        l2 = $l13;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(64L, "launching", 0);

        $r4 = newarray (java.lang.Object)[5];

        $i6 = r0.<com.android.server.am.ActivityRecord: int userId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r4[0] = $r5;

        $i7 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r4[1] = $r7;

        $r6 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r4[2] = $r6;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r4[3] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r4[4] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30009, $r4);

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r2 = $r10.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Displayed ");

        $r11 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r2);

        $b10 = l1 cmp l2;

        if $b10 == 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (total ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label3:
        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        $r18 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r18.<com.android.server.am.ActivityStackSupervisor: void reportActivityLaunchedLocked(boolean,com.android.server.am.ActivityRecord,long,long)>(0, r0, l1, l2);

        $b11 = l2 cmp 0L;

        if $b11 <= 0 goto label4;

     label4:
        r0.<com.android.server.am.ActivityRecord: long displayStartTime> = 0L;

        r1.<com.android.server.am.ActivityStack: long mLaunchStartTime> = 0L;

        return;
    }

    public void windowsDrawn()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable r2, $r7;
        long $l0, $l2;
        byte $b1;
        com.android.server.am.ActivityStackSupervisor $r4;
        com.android.server.am.TaskRecord $r5, $r6;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $l0 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.server.am.ActivityRecord: void reportLaunchTimeLocked(long)>($l2);

     label2:
        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: void sendWaitingVisibleReportLocked(com.android.server.am.ActivityRecord)>(r0);

        r0.<com.android.server.am.ActivityRecord: long startTime> = 0L;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>();

        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r5 == null goto label3;

        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r6.<com.android.server.am.TaskRecord: boolean hasBeenVisible> = 1;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void windowsVisible()
    {
        com.android.server.am.ActivityRecord r0, r2;
        com.android.server.am.ActivityManagerService r1, $r4, $r8;
        int i0, i1;
        java.lang.Throwable r3, $r17;
        com.android.server.am.ActivityStackSupervisor $r5, $r6, $r10, $r11, $r12, $r16;
        boolean $z0, $z1;
        long $l2;
        java.util.ArrayList $r7, $r9, $r14;
        java.lang.Object $r13;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: void reportActivityVisibleLocked(com.android.server.am.ActivityRecord)>(r0);

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z0 != 0 goto label06;

        r0.<com.android.server.am.ActivityRecord: boolean nowVisible> = 1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityRecord: long lastVisibleTime> = $l2;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean idle>;

        if $z1 != 0 goto label02;

        $r16 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r16.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList processStoppingActivitiesLocked(boolean)>(0);

        goto label05;

     label02:
        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r7 = $r6.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label05;

        i1 = 0;

     label03:
        if i1 >= i0 goto label04;

        $r11 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r14 = $r11.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r13;

        r2.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

        i1 = i1 + 1;

        goto label03;

     label04:
        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r10.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        $r12 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

     label05:
        $r8 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void windowsGone()
    {
        com.android.server.am.ActivityRecord r0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r0.<com.android.server.am.ActivityRecord: boolean nowVisible> = 0;

        return;
    }

    private com.android.server.am.ActivityRecord getWaitingHistoryRecordLocked()
    {
        com.android.server.am.ActivityRecord r0, r1;
        com.android.server.am.ActivityStack r2;
        boolean $z0;
        com.android.server.am.ActivityStackSupervisor $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0;

        $z0 = r1.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r1 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r1 != null goto label1;

        r1 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

     label1:
        if r1 != null goto label2;

        r1 = r0;

     label2:
        return r1;
    }

    public boolean keyDispatchingTimedOut(java.lang.String)
    {
        com.android.server.am.ActivityRecord r0, r2;
        java.lang.String r1;
        com.android.server.am.ProcessRecord r3, $r8;
        com.android.server.am.ActivityManagerService r4, $r6, $r7;
        java.lang.Throwable r5, $r9;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: java.lang.String;

        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        r2 = specialinvoke r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord getWaitingHistoryRecordLocked()>();

        if r2 == null goto label2;

        $r8 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        goto label3;

     label2:
        $r8 = null;

     label3:
        r3 = $r8;

        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        $r7 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $z0 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r3, r2, r0, 0, r1);

        return $z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getKeyDispatchingTimeout()
    {
        com.android.server.am.ActivityRecord r0, r2;
        com.android.server.am.ActivityManagerService r1, $r4;
        java.lang.Throwable r3, $r5;
        long $l0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r2 = specialinvoke r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord getWaitingHistoryRecordLocked()>();

        $l0 = staticinvoke <com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)>(r2);

        exitmonitor r1;

     label2:
        return $l0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r1;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isInterestingToUserLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityStack$ActivityState $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z1 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r1 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r3 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r4 != $r3 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setSleeping(boolean)
    {
        com.android.server.am.ActivityRecord r0;
        boolean z0, $z1, $z2;
        android.os.RemoteException r1, $r13;
        com.android.server.am.ProcessRecord $r2, $r3, $r5;
        android.app.IApplicationThread $r4, $r7;
        android.view.IApplicationToken$Stub $r6;
        com.android.server.am.ActivityStackSupervisor $r8, $r10;
        java.util.ArrayList $r9, $r11;
        java.lang.StringBuilder $r12, $r14, $r18;
        android.content.ComponentName $r15;
        android.content.Intent $r16;
        java.lang.String $r17;

        r0 := @this: com.android.server.am.ActivityRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean sleeping>;

        if $z1 != z0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label6;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 == null goto label6;

     label2:
        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r6 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r7.<android.app.IApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>($r6, z0);

        if z0 == 0 goto label3;

        $r8 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r8.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        $z2 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r11 = $r10.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label3:
        r0.<com.android.server.am.ActivityRecord: boolean sleeping> = z0;

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r1 = $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when sleeping: ");

        $r16 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r17, r1);

     label6:
        return;

        catch android.os.RemoteException from label2 to label4 with label5;
    }

    static void activityResumedLocked(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1;

        r0 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r0);

        r1.<com.android.server.am.ActivityRecord: android.os.Bundle icicle> = null;

        r1.<com.android.server.am.ActivityRecord: boolean haveState> = 0;

        return;
    }

    static int getTaskForActivityLocked(android.os.IBinder, boolean)
    {
        android.os.IBinder r0;
        boolean z0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord r2;
        int i0, $i1, $i2;
        java.util.ArrayList $r3;

        r0 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r0);

        if r1 != null goto label1;

        return -1;

     label1:
        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label2;

        if z0 == 0 goto label3;

        $i2 = virtualinvoke r2.<com.android.server.am.TaskRecord: int findEffectiveRootIndex()>();

        if i0 <= $i2 goto label3;

     label2:
        return -1;

     label3:
        $i1 = r2.<com.android.server.am.TaskRecord: int taskId>;

        return $i1;
    }

    static com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1, $r4;
        com.android.server.am.TaskRecord $r2;
        com.android.server.am.ActivityStack $r3;

        r0 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r0);

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = $r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r0);

        return $r4;

     label1:
        return null;
    }

    static com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord $r2;
        com.android.server.am.ActivityStack $r3;

        r0 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r0);

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = $r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        return $r3;

     label1:
        return null;
    }

    final boolean isDestroyable()
    {
        com.android.server.am.ActivityRecord r0, $r11, $r14;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.am.ProcessRecord $r1;
        com.android.server.am.ActivityStack$ActivityState $r2, $r3, $r4, $r5;
        com.android.server.am.TaskRecord $r6, $r7, $r9, $r12;
        com.android.server.am.ActivityStack $r8, $r10, $r13;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r2 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYING>;

        if $r3 == $r2 goto label1;

        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r4 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

        if $r5 != $r4 goto label2;

     label1:
        return 0;

     label2:
        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r6 == null goto label3;

        $r7 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r7.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r8 == null goto label3;

        $r9 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r10 = $r9.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r11 = $r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r0 == $r11 goto label3;

        $r12 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r13 = $r12.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r14 = $r13.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r0 == $r14 goto label3;

        $z2 = r0.<com.android.server.am.ActivityRecord: boolean haveState>;

        if $z2 == 0 goto label3;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean stopped>;

        if $z1 != 0 goto label4;

     label3:
        return 0;

     label4:
        $z3 = r0.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z3 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    private static java.lang.String createImageFilename(long, int)
    {
        long l0;
        int i1;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5;
        java.lang.String $r1, $r6;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_activity_icon_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    void setTaskDescription(android.app.ActivityManager$TaskDescription)
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityManager$TaskDescription r1;
        android.graphics.Bitmap r2, $r5;
        java.lang.String r3, $r4;
        com.android.server.am.TaskRecord $r6;
        int $i0;
        long $l1;
        com.android.server.am.ActivityStackSupervisor $r7;
        com.android.server.am.ActivityManagerService $r8;
        com.android.server.am.TaskPersister $r9;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.app.ActivityManager$TaskDescription;

        $r4 = virtualinvoke r1.<android.app.ActivityManager$TaskDescription: java.lang.String getIconFilename()>();

        if $r4 != null goto label1;

        $r5 = virtualinvoke r1.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getIcon()>();

        r2 = $r5;

        if $r5 == null goto label1;

        $l1 = r0.<com.android.server.am.ActivityRecord: long createTime>;

        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r6.<com.android.server.am.TaskRecord: int taskId>;

        r3 = staticinvoke <com.android.server.am.ActivityRecord: java.lang.String createImageFilename(long,int)>($l1, $i0);

        $r7 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r8 = $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke $r9.<com.android.server.am.TaskPersister: void saveImage(android.graphics.Bitmap,java.lang.String)>(r2, r3);

        virtualinvoke r1.<android.app.ActivityManager$TaskDescription: void setIconFilename(java.lang.String)>(r3);

     label1:
        r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription> = r1;

        return;
    }

    void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.am.ActivityRecord r0;
        org.xmlpull.v1.XmlSerializer r1;
        long $l0;
        java.lang.String $r2, $r4, $r6, $r7, $r8, $r11, $r19, $r23;
        int $i1, $i2;
        boolean $z0, $z1;
        android.app.ActivityManager$TaskDescription $r13, $r22;
        android.content.Intent $r15;
        android.os.PersistableBundle $r16, $r17;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $l0 = r0.<com.android.server.am.ActivityRecord: long createTime>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r2);

        $i1 = r0.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "launched_from_uid", $r4);

        $r6 = r0.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        if $r6 == null goto label1;

        $r23 = r0.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "launched_from_package", $r23);

     label1:
        $r7 = r0.<com.android.server.am.ActivityRecord: java.lang.String resolvedType>;

        if $r7 == null goto label2;

        $r19 = r0.<com.android.server.am.ActivityRecord: java.lang.String resolvedType>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resolved_type", $r19);

     label2:
        $z0 = r0.<com.android.server.am.ActivityRecord: boolean componentSpecified>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "component_specified", $r8);

        $i2 = r0.<com.android.server.am.ActivityRecord: int userId>;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "user_id", $r11);

        $r13 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        if $r13 == null goto label3;

        $r22 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription>;

        virtualinvoke $r22.<android.app.ActivityManager$TaskDescription: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r1);

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "intent");

        $r15 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r15.<android.content.Intent: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "intent");

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean isPersistable()>();

        if $z1 == 0 goto label4;

        $r16 = r0.<com.android.server.am.ActivityRecord: android.os.PersistableBundle persistentState>;

        if $r16 == null goto label4;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "persistable_bundle");

        $r17 = r0.<com.android.server.am.ActivityRecord: android.os.PersistableBundle persistentState>;

        virtualinvoke $r17.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "persistable_bundle");

     label4:
        return;
    }

    static com.android.server.am.ActivityRecord restoreFromXml(org.xmlpull.v1.XmlPullParser, int, com.android.server.am.ActivityStackSupervisor) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8, i11;
        com.android.server.am.ActivityStackSupervisor r1;
        android.content.Intent r2;
        android.os.PersistableBundle r3;
        java.lang.String r4, r5, r7, r9, $r21, $r23, $r25, $r27, $r29, $r31, $r32, $r33, $r34, $r35, $r38, $r39, r45;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long l3;
        android.app.ActivityManager$TaskDescription r6, $r10;
        com.android.server.am.ActivityRecord r8, $r11;
        android.content.res.Configuration $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r24, $r26, $r28, $r30, $r36, $r37, $r40;
        org.xmlpull.v1.XmlPullParserException $r14, $r22;
        java.lang.Integer $r41, $r43;
        java.lang.Long $r42;
        java.lang.Boolean $r44;
        com.android.server.am.ActivityManagerService r46;
        android.content.pm.ActivityInfo r47;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.am.ActivityStackSupervisor;

        r2 = null;

        r3 = null;

        i1 = 0;

        r4 = null;

        r5 = null;

        z0 = 0;

        i2 = 0;

        l3 = -1L;

        i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r10 = new android.app.ActivityManager$TaskDescription;

        specialinvoke $r10.<android.app.ActivityManager$TaskDescription: void <init>()>();

        r6 = $r10;

        $i7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        i5 = $i7 - 1;

     label01:
        if i5 < 0 goto label10;

        r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i5);

        r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i5);

        $r31 = "id";

        $z3 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label02;

        $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r9);

        l3 = virtualinvoke $r42.<java.lang.Long: long longValue()>();

        goto label09;

     label02:
        $r33 = "launched_from_uid";

        $z5 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z5 == 0 goto label03;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r9);

        i1 = virtualinvoke $r41.<java.lang.Integer: int intValue()>();

        goto label09;

     label03:
        $r32 = "launched_from_package";

        $z4 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z4 == 0 goto label04;

        r4 = r9;

        goto label09;

     label04:
        $r35 = "resolved_type";

        $z7 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z7 == 0 goto label05;

        r5 = r9;

        goto label09;

     label05:
        $r34 = "component_specified";

        $z6 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z6 == 0 goto label06;

        $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r9);

        z0 = virtualinvoke $r44.<java.lang.Boolean: boolean booleanValue()>();

        goto label09;

     label06:
        $r39 = "user_id";

        $z8 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z8 == 0 goto label07;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r9);

        i2 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        goto label09;

     label07:
        $z9 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("task_description_");

        if $z9 == 0 goto label08;

        virtualinvoke r6.<android.app.ActivityManager$TaskDescription: void restoreFromXml(java.lang.String,java.lang.String)>(r7, r9);

        goto label09;

     label08:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown ActivityRecord attribute=");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r38);

     label09:
        i5 = i5 + -1;

        goto label01;

     label10:
        $i6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i11 = $i6;

        if $i6 == 1 goto label15;

        if i11 != 3 goto label11;

        $i8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 >= i4 goto label15;

     label11:
        if i11 != 2 goto label10;

        r45 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r23 = "intent";

        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r45);

        if $z2 == 0 goto label12;

        r2 = staticinvoke <android.content.Intent: android.content.Intent restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r0);

        goto label14;

     label12:
        $r27 = "persistable_bundle";

        $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r45);

        if $z1 == 0 goto label13;

        r3 = staticinvoke <android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r0);

        goto label14;

     label13:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreActivity: unexpected name=");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r29);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r0);

     label14:
        goto label10;

     label15:
        if r2 != null goto label16;

        $r22 = new org.xmlpull.v1.XmlPullParserException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreActivity error intent=");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        throw $r22;

     label16:
        r46 = r1.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r47 = virtualinvoke r1.<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,android.app.ProfilerInfo,int)>(r2, r5, 0, null, i2);

        if r47 != null goto label17;

        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreActivity resolver error. Intent=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resolvedType=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label17:
        $r11 = new com.android.server.am.ActivityRecord;

        $r12 = virtualinvoke r46.<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r11.<com.android.server.am.ActivityRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,java.lang.String,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.am.ActivityRecord,java.lang.String,int,boolean,com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityStackSupervisor$ActivityContainer,android.os.Bundle)>(r46, null, i1, r4, r2, r5, r47, $r12, null, null, 0, z0, r1, null, null);

        r8 = $r11;

        r8.<com.android.server.am.ActivityRecord: android.os.PersistableBundle persistentState> = r3;

        r8.<com.android.server.am.ActivityRecord: android.app.ActivityManager$TaskDescription taskDescription> = r6;

        r8.<com.android.server.am.ActivityRecord: long createTime> = l3;

        return r8;
    }

    private static java.lang.String activityTypeToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "APPLICATION_ACTIVITY_TYPE";

     label2:
        return "HOME_ACTIVITY_TYPE";

     label3:
        return "RECENTS_ACTIVITY_TYPE";

     label4:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public java.lang.String toString()
    {
        com.android.server.am.ActivityRecord r0;
        java.lang.StringBuilder r1, $r3, $r17, $r18, $r19, $r22, $r23;
        java.lang.String $r2, $r5, $r12, $r14, $r15, $r16, $r24, $r25;
        int $i0, $i1, $i2;
        android.content.Intent $r10;
        android.content.ComponentName $r11;
        com.android.server.am.TaskRecord $r20, $r21;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityRecord: java.lang.String stringName>;

        if $r2 == null goto label5;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = r0.<com.android.server.am.ActivityRecord: java.lang.String stringName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t");

        $r21 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r21 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $r20 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r20.<com.android.server.am.TaskRecord: int taskId>;

     label2:
        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 == 0 goto label3;

        $r24 = " f}";

        goto label4;

     label3:
        $r24 = "}";

     label4:
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityRecord{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $i1 = r0.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r10 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r11 = virtualinvoke $r10.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.am.ActivityRecord: java.lang.String stringName> = $r15;

        $r14 = virtualinvoke r0.<com.android.server.am.ActivityRecord: java.lang.String toString()>();

        return $r14;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityRecord: int RECENTS_ACTIVITY_TYPE> = 2;

        <com.android.server.am.ActivityRecord: int HOME_ACTIVITY_TYPE> = 1;

        <com.android.server.am.ActivityRecord: int APPLICATION_ACTIVITY_TYPE> = 0;

        <com.android.server.am.ActivityRecord: java.lang.String ACTIVITY_ICON_SUFFIX> = "_activity_icon_";

        <com.android.server.am.ActivityRecord: java.lang.String ATTR_COMPONENTSPECIFIED> = "component_specified";

        <com.android.server.am.ActivityRecord: java.lang.String ATTR_RESOLVEDTYPE> = "resolved_type";

        <com.android.server.am.ActivityRecord: java.lang.String ATTR_LAUNCHEDFROMPACKAGE> = "launched_from_package";

        <com.android.server.am.ActivityRecord: java.lang.String ATTR_LAUNCHEDFROMUID> = "launched_from_uid";

        <com.android.server.am.ActivityRecord: java.lang.String TAG_PERSISTABLEBUNDLE> = "persistable_bundle";

        <com.android.server.am.ActivityRecord: java.lang.String ATTR_USERID> = "user_id";

        <com.android.server.am.ActivityRecord: java.lang.String TAG_INTENT> = "intent";

        <com.android.server.am.ActivityRecord: java.lang.String ATTR_ID> = "id";

        <com.android.server.am.ActivityRecord: java.lang.String TAG_ACTIVITY> = "activity";

        <com.android.server.am.ActivityRecord: java.lang.String RECENTS_PACKAGE_NAME> = "com.android.systemui.recent";

        <com.android.server.am.ActivityRecord: boolean DEBUG_SAVED_STATE> = 0;

        <com.android.server.am.ActivityRecord: java.lang.String TAG> = "ActivityManager";

        return;
    }
}
