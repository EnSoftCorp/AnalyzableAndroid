public class com.android.server.connectivity.NetworkMonitor extends com.android.internal.util.StateMachine
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static final java.lang.String DEFAULT_SERVER;
    private static final int SOCKET_TIMEOUT_MS;
    public static final java.lang.String ACTION_NETWORK_CONDITIONS_MEASURED;
    public static final java.lang.String EXTRA_CONNECTIVITY_TYPE;
    public static final java.lang.String EXTRA_NETWORK_TYPE;
    public static final java.lang.String EXTRA_RESPONSE_RECEIVED;
    public static final java.lang.String EXTRA_IS_CAPTIVE_PORTAL;
    public static final java.lang.String EXTRA_CELL_ID;
    public static final java.lang.String EXTRA_SSID;
    public static final java.lang.String EXTRA_BSSID;
    public static final java.lang.String EXTRA_REQUEST_TIMESTAMP_MS;
    public static final java.lang.String EXTRA_RESPONSE_TIMESTAMP_MS;
    private static final java.lang.String PERMISSION_ACCESS_NETWORK_CONDITIONS;
    private static final java.lang.String ACTION_CAPTIVE_PORTAL_LOGGED_IN;
    private static final java.lang.String LOGGED_IN_RESULT;
    public static final int NETWORK_TEST_RESULT_VALID;
    public static final int NETWORK_TEST_RESULT_INVALID;
    private static final int BASE;
    public static final int CMD_NETWORK_CONNECTED;
    public static final int EVENT_NETWORK_TESTED;
    public static final int CMD_NETWORK_LINGER;
    private static final int CMD_LINGER_EXPIRED;
    public static final int EVENT_NETWORK_LINGER_COMPLETE;
    private static final int CMD_REEVALUATE;
    public static final int CMD_NETWORK_DISCONNECTED;
    public static final int CMD_FORCE_REEVALUATION;
    private static final int CMD_CAPTIVE_PORTAL_LOGGED_IN;
    private static final int CMD_USER_WANTS_SIGN_IN;
    public static final int EVENT_PROVISIONING_NOTIFICATION;
    private static final int EVENT_APP_BYPASSED_CAPTIVE_PORTAL;
    private static final int EVENT_NO_APP_RESPONSE;
    private static final int EVENT_APP_INDICATES_SIGN_IN_IMPOSSIBLE;
    private static final java.lang.String LINGER_DELAY_PROPERTY;
    private static final int DEFAULT_LINGER_DELAY_MS;
    private final int mLingerDelayMs;
    private int mLingerToken;
    private static final java.lang.String REEVALUATE_DELAY_PROPERTY;
    private static final int DEFAULT_REEVALUATE_DELAY_MS;
    private static final int MAX_RETRIES;
    private final int mReevaluateDelayMs;
    private int mReevaluateToken;
    private static final int INVALID_UID;
    private int mUidResponsibleForReeval;
    private int mCaptivePortalLoggedInToken;
    private int mUserPromptedToken;
    private final android.content.Context mContext;
    private final android.os.Handler mConnectivityServiceHandler;
    private final com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo;
    private final android.telephony.TelephonyManager mTelephonyManager;
    private final android.net.wifi.WifiManager mWifiManager;
    private final android.app.AlarmManager mAlarmManager;
    private java.lang.String mServer;
    private boolean mIsCaptivePortalCheckEnabled;
    private boolean mUserDoesNotWant;
    public boolean systemReady;
    private com.android.internal.util.State mDefaultState;
    private com.android.internal.util.State mOfflineState;
    private com.android.internal.util.State mValidatedState;
    private com.android.internal.util.State mEvaluatingState;
    private com.android.internal.util.State mUserPromptedState;
    private com.android.internal.util.State mCaptivePortalState;
    private com.android.internal.util.State mLingeringState;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        android.content.Context r1, $r38, $r40;
        android.os.Handler r2;
        com.android.server.connectivity.NetworkAgentInfo r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, $r36, $r37;
        com.android.server.connectivity.NetworkMonitor$DefaultState $r9;
        com.android.server.connectivity.NetworkMonitor$OfflineState $r10;
        com.android.server.connectivity.NetworkMonitor$ValidatedState $r11;
        com.android.server.connectivity.NetworkMonitor$EvaluatingState $r12;
        com.android.server.connectivity.NetworkMonitor$UserPromptedState $r13;
        com.android.server.connectivity.NetworkMonitor$CaptivePortalState $r14;
        com.android.server.connectivity.NetworkMonitor$LingeringState $r15;
        android.telephony.TelephonyManager $r16;
        java.lang.Object $r17, $r19, $r21;
        android.net.wifi.WifiManager $r18;
        android.app.AlarmManager $r20;
        com.android.internal.util.State $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        android.content.ContentResolver $r39, $r41;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.connectivity.NetworkAgentInfo;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkMonitor");

        $r6 = virtualinvoke r3.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String)>($r8);

        r0.<com.android.server.connectivity.NetworkMonitor: int mLingerToken> = 0;

        r0.<com.android.server.connectivity.NetworkMonitor: int mReevaluateToken> = 0;

        r0.<com.android.server.connectivity.NetworkMonitor: int mUidResponsibleForReeval> = -1;

        r0.<com.android.server.connectivity.NetworkMonitor: int mCaptivePortalLoggedInToken> = 0;

        r0.<com.android.server.connectivity.NetworkMonitor: int mUserPromptedToken> = 0;

        r0.<com.android.server.connectivity.NetworkMonitor: boolean mIsCaptivePortalCheckEnabled> = 0;

        r0.<com.android.server.connectivity.NetworkMonitor: boolean mUserDoesNotWant> = 0;

        r0.<com.android.server.connectivity.NetworkMonitor: boolean systemReady> = 0;

        $r9 = new com.android.server.connectivity.NetworkMonitor$DefaultState;

        specialinvoke $r9.<com.android.server.connectivity.NetworkMonitor$DefaultState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState> = $r9;

        $r10 = new com.android.server.connectivity.NetworkMonitor$OfflineState;

        specialinvoke $r10.<com.android.server.connectivity.NetworkMonitor$OfflineState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mOfflineState> = $r10;

        $r11 = new com.android.server.connectivity.NetworkMonitor$ValidatedState;

        specialinvoke $r11.<com.android.server.connectivity.NetworkMonitor$ValidatedState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mValidatedState> = $r11;

        $r12 = new com.android.server.connectivity.NetworkMonitor$EvaluatingState;

        specialinvoke $r12.<com.android.server.connectivity.NetworkMonitor$EvaluatingState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mEvaluatingState> = $r12;

        $r13 = new com.android.server.connectivity.NetworkMonitor$UserPromptedState;

        specialinvoke $r13.<com.android.server.connectivity.NetworkMonitor$UserPromptedState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mUserPromptedState> = $r13;

        $r14 = new com.android.server.connectivity.NetworkMonitor$CaptivePortalState;

        specialinvoke $r14.<com.android.server.connectivity.NetworkMonitor$CaptivePortalState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mCaptivePortalState> = $r14;

        $r15 = new com.android.server.connectivity.NetworkMonitor$LingeringState;

        specialinvoke $r15.<com.android.server.connectivity.NetworkMonitor$LingeringState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>(r0, null);

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mLingeringState> = $r15;

        r0.<com.android.server.connectivity.NetworkMonitor: android.content.Context mContext> = r1;

        r0.<com.android.server.connectivity.NetworkMonitor: android.os.Handler mConnectivityServiceHandler> = r2;

        r0.<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo> = r3;

        $r17 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r16 = (android.telephony.TelephonyManager) $r17;

        r0.<com.android.server.connectivity.NetworkMonitor: android.telephony.TelephonyManager mTelephonyManager> = $r16;

        $r19 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r18 = (android.net.wifi.WifiManager) $r19;

        r0.<com.android.server.connectivity.NetworkMonitor: android.net.wifi.WifiManager mWifiManager> = $r18;

        $r21 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r20 = (android.app.AlarmManager) $r21;

        r0.<com.android.server.connectivity.NetworkMonitor: android.app.AlarmManager mAlarmManager> = $r20;

        $r23 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State)>($r23);

        $r25 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mOfflineState>;

        $r22 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r25, $r22);

        $r27 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mValidatedState>;

        $r24 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r27, $r24);

        $r29 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mEvaluatingState>;

        $r26 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r29, $r26);

        $r31 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mUserPromptedState>;

        $r28 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r31, $r28);

        $r34 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mCaptivePortalState>;

        $r30 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r34, $r30);

        $r32 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mLingeringState>;

        $r35 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r32, $r35);

        $r33 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void setInitialState(com.android.internal.util.State)>($r33);

        $r38 = r0.<com.android.server.connectivity.NetworkMonitor: android.content.Context mContext>;

        $r39 = virtualinvoke $r38.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r36 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r39, "captive_portal_server");

        r0.<com.android.server.connectivity.NetworkMonitor: java.lang.String mServer> = $r36;

        $r37 = r0.<com.android.server.connectivity.NetworkMonitor: java.lang.String mServer>;

        if $r37 != null goto label1;

        r0.<com.android.server.connectivity.NetworkMonitor: java.lang.String mServer> = "clients3.google.com";

     label1:
        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.netmon.linger", 30000);

        r0.<com.android.server.connectivity.NetworkMonitor: int mLingerDelayMs> = $i0;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.netmon.reeval_delay", 5000);

        r0.<com.android.server.connectivity.NetworkMonitor: int mReevaluateDelayMs> = $i1;

        $r40 = r0.<com.android.server.connectivity.NetworkMonitor: android.content.Context mContext>;

        $r41 = virtualinvoke $r40.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r41, "captive_portal_detection_enabled", 1);

        if $i2 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<com.android.server.connectivity.NetworkMonitor: boolean mIsCaptivePortalCheckEnabled> = $z0;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void start()>();

        return;
    }

    private int isCaptivePortal()
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.net.HttpURLConnection r1;
        int i0, $i3;
        java.net.URL r2, $r4;
        long l1, l2;
        java.lang.Throwable r3, $r30;
        boolean $z0, $z1;
        java.lang.String $r5, $r8, $r12, $r14, $r24, $r29;
        java.lang.StringBuilder $r6, $r7, $r9, $r11, $r15, $r20, $r21, $r22, $r23, $r25, $r28, $r31, $r32;
        com.android.server.connectivity.NetworkAgentInfo $r10, $r17;
        android.net.NetworkInfo $r13;
        android.net.Network $r16;
        java.net.URLConnection $r18;
        java.util.Map $r26;
        java.io.IOException $r27, r33;

        r0 := @this: com.android.server.connectivity.NetworkMonitor;

        $z0 = r0.<com.android.server.connectivity.NetworkMonitor: boolean mIsCaptivePortalCheckEnabled>;

        if $z0 != 0 goto label01;

        return 204;

     label01:
        r1 = null;

        i0 = 599;

     label02:
        $r4 = new java.net.URL;

        $r5 = r0.<com.android.server.connectivity.NetworkMonitor: java.lang.String mServer>;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http", $r5, "/generate_204");

        r2 = $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking ");

        $r8 = virtualinvoke r2.<java.net.URL: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r10 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo>;

        $r13 = $r10.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $r12 = virtualinvoke $r13.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>($r14);

        $r17 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo>;

        $r16 = $r17.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $r18 = virtualinvoke $r16.<android.net.Network: java.net.URLConnection openConnection(java.net.URL)>(r2);

        r1 = (java.net.HttpURLConnection) $r18;

        virtualinvoke r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        virtualinvoke r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r1.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isCaptivePortal: ret=");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" headers=");

        $r26 = virtualinvoke r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>($r24);

        if i0 != 200 goto label03;

        $i3 = virtualinvoke r1.<java.net.HttpURLConnection: int getContentLength()>();

        if $i3 != 0 goto label03;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>("Empty 200 response interpreted as 204 response.");

        i0 = 204;

     label03:
        if i0 != 204 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        specialinvoke r0.<com.android.server.connectivity.NetworkMonitor: void sendNetworkConditionsBroadcast(boolean,boolean,long,long)>(1, $z1, l1, l2);

     label06:
        if r1 == null goto label12;

        virtualinvoke r1.<java.net.HttpURLConnection: void disconnect()>();

        goto label12;

     label07:
        $r27 := @caughtexception;

        r33 = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Probably not a portal: exception ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>($r29);

        if i0 != 599 goto label08;

     label08:
        if r1 == null goto label12;

        virtualinvoke r1.<java.net.HttpURLConnection: void disconnect()>();

        goto label12;

     label09:
        $r30 := @caughtexception;

        r3 = $r30;

     label10:
        if r1 == null goto label11;

        virtualinvoke r1.<java.net.HttpURLConnection: void disconnect()>();

     label11:
        throw r3;

     label12:
        return i0;

        catch java.io.IOException from label02 to label06 with label07;
        catch java.lang.Throwable from label02 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void sendNetworkConditionsBroadcast(boolean, boolean, long, long)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long l0, l1;
        android.content.Intent r1, $r10;
        android.net.wifi.WifiInfo r2;
        java.util.List r3;
        int i2, $i3, $i4, $i5, $i6;
        java.util.Iterator r4;
        android.telephony.CellInfo r5;
        android.telephony.CellIdentityCdma r6;
        android.content.Context $r7, $r21;
        android.content.ContentResolver $r8;
        com.android.server.connectivity.NetworkAgentInfo $r9, $r18;
        android.net.NetworkInfo $r11, $r17;
        android.net.wifi.WifiManager $r12;
        java.lang.String $r13, $r16;
        android.os.UserHandle $r24;
        android.telephony.TelephonyManager $r26, $r28;
        java.lang.Object $r29;
        android.telephony.CellInfoWcdma $r30;
        android.telephony.CellInfoLte $r31;
        android.telephony.CellInfoGsm $r34;
        android.telephony.CellInfoCdma $r36;
        android.telephony.CellIdentityGsm r38;
        android.telephony.CellIdentityLte r39;
        android.telephony.CellIdentityWcdma r40;

        r0 := @this: com.android.server.connectivity.NetworkMonitor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r7 = r0.<com.android.server.connectivity.NetworkMonitor: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r8, "wifi_scan_always_enabled", 0);

        if $i3 != 0 goto label01;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>("Don\'t send network conditions - lacking user consent.");

        return;

     label01:
        $z2 = r0.<com.android.server.connectivity.NetworkMonitor: boolean systemReady>;

        if $z2 != 0 goto label02;

        return;

     label02:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.net.conn.NETWORK_CONDITIONS_MEASURED");

        r1 = $r10;

        $r9 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo>;

        $r11 = $r9.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i4 = virtualinvoke $r11.<android.net.NetworkInfo: int getType()>();

        lookupswitch($i4)
        {
            case 0: goto label05;
            case 1: goto label03;
            default: goto label15;
        };

     label03:
        $r12 = r0.<com.android.server.connectivity.NetworkMonitor: android.net.wifi.WifiManager mWifiManager>;

        r2 = virtualinvoke $r12.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        if r2 == null goto label04;

        $r13 = virtualinvoke r2.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("extra_ssid", $r13);

        $r16 = virtualinvoke r2.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("extra_bssid", $r16);

        goto label16;

     label04:
        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void logw(java.lang.String)>("network info is TYPE_WIFI but no ConnectionInfo found");

        return;

     label05:
        $r26 = r0.<com.android.server.connectivity.NetworkMonitor: android.telephony.TelephonyManager mTelephonyManager>;

        $i6 = virtualinvoke $r26.<android.telephony.TelephonyManager: int getNetworkType()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("extra_network_type", $i6);

        $r28 = r0.<com.android.server.connectivity.NetworkMonitor: android.telephony.TelephonyManager mTelephonyManager>;

        r3 = virtualinvoke $r28.<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>();

        if r3 != null goto label06;

        return;

     label06:
        i2 = 0;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label14;

        $r29 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.telephony.CellInfo) $r29;

        $z4 = virtualinvoke r5.<android.telephony.CellInfo: boolean isRegistered()>();

        if $z4 == 0 goto label13;

        i2 = i2 + 1;

        if i2 <= 1 goto label08;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>("more than one registered CellInfo.  Can\'t tell which is active.  Bailing.");

        return;

     label08:
        $z3 = r5 instanceof android.telephony.CellInfoCdma;

        if $z3 == 0 goto label09;

        $r36 = (android.telephony.CellInfoCdma) r5;

        r6 = virtualinvoke $r36.<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("extra_cellid", r6);

        goto label13;

     label09:
        $z8 = r5 instanceof android.telephony.CellInfoGsm;

        if $z8 == 0 goto label10;

        $r34 = (android.telephony.CellInfoGsm) r5;

        r38 = virtualinvoke $r34.<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("extra_cellid", r38);

        goto label13;

     label10:
        $z7 = r5 instanceof android.telephony.CellInfoLte;

        if $z7 == 0 goto label11;

        $r31 = (android.telephony.CellInfoLte) r5;

        r39 = virtualinvoke $r31.<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("extra_cellid", r39);

        goto label13;

     label11:
        $z6 = r5 instanceof android.telephony.CellInfoWcdma;

        if $z6 == 0 goto label12;

        $r30 = (android.telephony.CellInfoWcdma) r5;

        r40 = virtualinvoke $r30.<android.telephony.CellInfoWcdma: android.telephony.CellIdentityWcdma getCellIdentity()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("extra_cellid", r40);

        goto label13;

     label12:
        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void logw(java.lang.String)>("Registered cellinfo is unrecognized");

        return;

     label13:
        goto label07;

     label14:
        goto label16;

     label15:
        return;

     label16:
        $r18 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo>;

        $r17 = $r18.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i5 = virtualinvoke $r17.<android.net.NetworkInfo: int getType()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("extra_connectivity_type", $i5);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("extra_response_received", z0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("extra_request_timestamp_ms", l0);

        if z0 == 0 goto label17;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("extra_is_captive_portal", z1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("extra_response_timestamp_ms", l1);

     label17:
        $r21 = r0.<com.android.server.connectivity.NetworkMonitor: android.content.Context mContext>;

        $r24 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r21.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r1, $r24, "android.permission.ACCESS_NETWORK_CONDITIONS");

        return;
    }

    static void access$700(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static void access$800(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static com.android.internal.util.State access$900(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mLingeringState>;

        return $r1;
    }

    static void access$1000(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$1100(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static com.android.internal.util.State access$1200(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mEvaluatingState>;

        return $r1;
    }

    static void access$1300(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$1400(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static void access$1500(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void quit()>();

        return;
    }

    static void access$1600(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static int access$1702(com.android.server.connectivity.NetworkMonitor, int)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        i0 := @parameter1: int;

        r0.<com.android.server.connectivity.NetworkMonitor: int mUidResponsibleForReeval> = i0;

        return i0;
    }

    static void access$1800(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.server.connectivity.NetworkAgentInfo access$1900(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.server.connectivity.NetworkAgentInfo $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo mNetworkAgentInfo>;

        return $r1;
    }

    static android.os.Handler access$2000(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: android.os.Handler mConnectivityServiceHandler>;

        return $r1;
    }

    static void access$2100(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static boolean access$2200(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $z0 = r0.<com.android.server.connectivity.NetworkMonitor: boolean mUserDoesNotWant>;

        return $z0;
    }

    static void access$2300(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static void access$2400(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static com.android.internal.util.State access$2500(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mValidatedState>;

        return $r1;
    }

    static void access$2600(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$2704(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mReevaluateToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.connectivity.NetworkMonitor: int mReevaluateToken> = $i1;

        return $i1;
    }

    static int access$1700(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mUidResponsibleForReeval>;

        return $i0;
    }

    static void access$2800(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static int access$2700(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mReevaluateToken>;

        return $i0;
    }

    static void access$2900(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3000(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$3100(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = specialinvoke r0.<com.android.server.connectivity.NetworkMonitor: int isCaptivePortal()>();

        return $i0;
    }

    static void access$3200(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$3300(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mUserPromptedState>;

        return $r1;
    }

    static void access$3400(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$3500(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mOfflineState>;

        return $r1;
    }

    static void access$3600(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$3700(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mReevaluateDelayMs>;

        return $i0;
    }

    static android.content.Context access$3800(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: android.content.Context mContext>;

        return $r1;
    }

    static int access$3904(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mUserPromptedToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.connectivity.NetworkMonitor: int mUserPromptedToken> = $i1;

        return $i1;
    }

    static void access$4000(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static int access$3900(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mUserPromptedToken>;

        return $i0;
    }

    static com.android.internal.util.State access$4100(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State mCaptivePortalState>;

        return $r1;
    }

    static void access$4200(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$4304(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mCaptivePortalLoggedInToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.connectivity.NetworkMonitor: int mCaptivePortalLoggedInToken> = $i1;

        return $i1;
    }

    static void access$4400(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static int access$4300(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mCaptivePortalLoggedInToken>;

        return $i0;
    }

    static boolean access$2202(com.android.server.connectivity.NetworkMonitor, boolean)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        boolean z0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        z0 := @parameter1: boolean;

        r0.<com.android.server.connectivity.NetworkMonitor: boolean mUserDoesNotWant> = z0;

        return z0;
    }

    static void access$4500(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$4600(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$4704(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mLingerToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.connectivity.NetworkMonitor: int mLingerToken> = $i1;

        return $i1;
    }

    static int access$4800(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mLingerDelayMs>;

        return $i0;
    }

    static android.app.AlarmManager access$4900(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        android.app.AlarmManager $r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $r1 = r0.<com.android.server.connectivity.NetworkMonitor: android.app.AlarmManager mAlarmManager>;

        return $r1;
    }

    static void access$5000(com.android.server.connectivity.NetworkMonitor, java.lang.String)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>(r1);

        return;
    }

    static void access$5100(com.android.server.connectivity.NetworkMonitor, com.android.internal.util.IState)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.NetworkMonitor: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$4700(com.android.server.connectivity.NetworkMonitor)
    {
        com.android.server.connectivity.NetworkMonitor r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.NetworkMonitor;

        $i0 = r0.<com.android.server.connectivity.NetworkMonitor: int mLingerToken>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.NetworkMonitor: int INVALID_UID> = -1;

        <com.android.server.connectivity.NetworkMonitor: int MAX_RETRIES> = 10;

        <com.android.server.connectivity.NetworkMonitor: int DEFAULT_REEVALUATE_DELAY_MS> = 5000;

        <com.android.server.connectivity.NetworkMonitor: java.lang.String REEVALUATE_DELAY_PROPERTY> = "persist.netmon.reeval_delay";

        <com.android.server.connectivity.NetworkMonitor: int DEFAULT_LINGER_DELAY_MS> = 30000;

        <com.android.server.connectivity.NetworkMonitor: java.lang.String LINGER_DELAY_PROPERTY> = "persist.netmon.linger";

        <com.android.server.connectivity.NetworkMonitor: int EVENT_APP_INDICATES_SIGN_IN_IMPOSSIBLE> = 532494;

        <com.android.server.connectivity.NetworkMonitor: int EVENT_NO_APP_RESPONSE> = 532493;

        <com.android.server.connectivity.NetworkMonitor: int EVENT_APP_BYPASSED_CAPTIVE_PORTAL> = 532492;

        <com.android.server.connectivity.NetworkMonitor: int EVENT_PROVISIONING_NOTIFICATION> = 532491;

        <com.android.server.connectivity.NetworkMonitor: int CMD_USER_WANTS_SIGN_IN> = 532490;

        <com.android.server.connectivity.NetworkMonitor: int CMD_CAPTIVE_PORTAL_LOGGED_IN> = 532489;

        <com.android.server.connectivity.NetworkMonitor: int CMD_FORCE_REEVALUATION> = 532488;

        <com.android.server.connectivity.NetworkMonitor: int CMD_NETWORK_DISCONNECTED> = 532487;

        <com.android.server.connectivity.NetworkMonitor: int CMD_REEVALUATE> = 532486;

        <com.android.server.connectivity.NetworkMonitor: int EVENT_NETWORK_LINGER_COMPLETE> = 532485;

        <com.android.server.connectivity.NetworkMonitor: int CMD_LINGER_EXPIRED> = 532484;

        <com.android.server.connectivity.NetworkMonitor: int CMD_NETWORK_LINGER> = 532483;

        <com.android.server.connectivity.NetworkMonitor: int EVENT_NETWORK_TESTED> = 532482;

        <com.android.server.connectivity.NetworkMonitor: int CMD_NETWORK_CONNECTED> = 532481;

        <com.android.server.connectivity.NetworkMonitor: int BASE> = 532480;

        <com.android.server.connectivity.NetworkMonitor: int NETWORK_TEST_RESULT_INVALID> = 1;

        <com.android.server.connectivity.NetworkMonitor: int NETWORK_TEST_RESULT_VALID> = 0;

        <com.android.server.connectivity.NetworkMonitor: java.lang.String LOGGED_IN_RESULT> = "result";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String ACTION_CAPTIVE_PORTAL_LOGGED_IN> = "android.net.netmon.captive_portal_logged_in";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String PERMISSION_ACCESS_NETWORK_CONDITIONS> = "android.permission.ACCESS_NETWORK_CONDITIONS";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_RESPONSE_TIMESTAMP_MS> = "extra_response_timestamp_ms";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_REQUEST_TIMESTAMP_MS> = "extra_request_timestamp_ms";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_BSSID> = "extra_bssid";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_SSID> = "extra_ssid";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_CELL_ID> = "extra_cellid";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_IS_CAPTIVE_PORTAL> = "extra_is_captive_portal";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_RESPONSE_RECEIVED> = "extra_response_received";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_NETWORK_TYPE> = "extra_network_type";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String EXTRA_CONNECTIVITY_TYPE> = "extra_connectivity_type";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String ACTION_NETWORK_CONDITIONS_MEASURED> = "android.net.conn.NETWORK_CONDITIONS_MEASURED";

        <com.android.server.connectivity.NetworkMonitor: int SOCKET_TIMEOUT_MS> = 10000;

        <com.android.server.connectivity.NetworkMonitor: java.lang.String DEFAULT_SERVER> = "clients3.google.com";

        <com.android.server.connectivity.NetworkMonitor: java.lang.String TAG> = "NetworkMonitor";

        <com.android.server.connectivity.NetworkMonitor: boolean DBG> = 1;

        return;
    }
}
