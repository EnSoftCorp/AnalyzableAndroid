class com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor extends com.android.internal.content.PackageMonitor
{
    final com.android.server.wallpaper.WallpaperManagerService this$0;

    void <init>(com.android.server.wallpaper.WallpaperManagerService)
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        com.android.server.wallpaper.WallpaperManagerService r1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService;

        r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0> = r1;

        specialinvoke r0.<com.android.internal.content.PackageMonitor: void <init>()>();

        return;
    }

    public void onPackageUpdateFinished(java.lang.String, int)
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        java.lang.String r1, $r15;
        int i0, $i1, $i2, $i3, $i5;
        java.lang.Object r2, $r7, $r12;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r3;
        android.content.ComponentName r4, $r13, $r14;
        java.lang.Throwable r5, $r19;
        com.android.server.wallpaper.WallpaperManagerService $r6, $r8, $r9, $r10, $r16, $r17, $r18;
        android.util.SparseArray $r11;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r7 = $r6.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = $r8.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $i2 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int getChangingUserId()>();

        if $i1 == $i2 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r11 = $r9.<com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray mWallpaperMap>;

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i3 = $r10.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r3 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r12;

        if r3 == null goto label4;

        $r14 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        if $r14 == null goto label4;

        $r13 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r15 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating> = 0;

        r4 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r17 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        virtualinvoke $r17.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperComponentLocked(com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>(r3);

        $r16 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $z1 = virtualinvoke $r16.<com.android.server.wallpaper.WallpaperManagerService: boolean bindWallpaperComponentLocked(android.content.ComponentName,boolean,boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)>(r4, 0, 0, r3, null);

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", "Wallpaper no longer available; reverting to default");

        $r18 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i5 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r18.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,android.os.IRemoteCallback)>(0, $i5, null);

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onPackageModified(java.lang.String)
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, $r6, $r11;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r3;
        java.lang.Throwable r4, $r15;
        com.android.server.wallpaper.WallpaperManagerService $r5, $r7, $r8, $r9;
        int $i0, $i1, $i2;
        android.util.SparseArray $r10;
        android.content.ComponentName $r12, $r14;
        boolean $z1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i0 = $r7.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $i1 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int getChangingUserId()>();

        if $i0 == $i1 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r10 = $r8.<com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray mWallpaperMap>;

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i2 = $r9.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r3 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r11;

        if r3 == null goto label07;

        $r12 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        if $r12 == null goto label04;

        $r14 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r13 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label06;

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: boolean doPackagesChangedLocked(boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>(1, r3);

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onPackageUpdateStarted(java.lang.String, int)
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        java.lang.String r1, $r13;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, $r6, $r11;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r3;
        java.lang.Throwable r4, $r15;
        com.android.server.wallpaper.WallpaperManagerService $r5, $r7, $r8, $r9;
        android.util.SparseArray $r10;
        android.content.ComponentName $r12, $r14;
        boolean $z0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = $r7.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $i2 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int getChangingUserId()>();

        if $i1 == $i2 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r10 = $r8.<com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray mWallpaperMap>;

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i3 = $r9.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r3 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r11;

        if r3 == null goto label4;

        $r12 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        if $r12 == null goto label4;

        $r14 = r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r13 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating> = 1;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        android.content.Intent r1;
        java.lang.String[] r2;
        int i0, $i1, $i2, $i3;
        boolean z0, z1, z2;
        java.lang.Object r3, $r7, $r11;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r4;
        java.lang.Throwable r5, $r13;
        com.android.server.wallpaper.WallpaperManagerService $r6, $r8, $r9, $r10;
        android.util.SparseArray $r12;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r7 = $r6.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        z1 = 0;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = $r8.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $i2 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int getChangingUserId()>();

        if $i1 == $i2 goto label3;

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r12 = $r9.<com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray mWallpaperMap>;

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i3 = $r10.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r4 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r11;

        if r4 == null goto label4;

        z2 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: boolean doPackagesChangedLocked(boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>(z0, r4);

        z1 = z1 | z2;

     label4:
        exitmonitor r3;

     label5:
        return z1;

     label6:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r3;

     label7:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onSomePackagesChanged()
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        java.lang.Object r1, $r5, $r10;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r2;
        java.lang.Throwable r3, $r11;
        com.android.server.wallpaper.WallpaperManagerService $r4, $r6, $r7, $r8;
        int $i0, $i1, $i2;
        android.util.SparseArray $r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = $r4.<com.android.server.wallpaper.WallpaperManagerService: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i0 = $r6.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $i1 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int getChangingUserId()>();

        if $i0 == $i1 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r9 = $r7.<com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray mWallpaperMap>;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i2 = $r8.<com.android.server.wallpaper.WallpaperManagerService: int mCurrentUserId>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r2 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r10;

        if r2 == null goto label4;

        virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: boolean doPackagesChangedLocked(boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>(1, r2);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    boolean doPackagesChangedLocked(boolean, com.android.server.wallpaper.WallpaperManagerService$WallpaperData)
    {
        com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor r0;
        boolean z0, z1, $z2, $z3;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r1;
        int i0, $i1, $i4, i5;
        android.content.ComponentName $r2, $r3, $r4, $r5, $r6, $r11, $r12, $r17, $r19, $r23, $r25, $r34;
        java.lang.String $r7, $r14, $r21, $r22, $r29, $r33;
        com.android.server.wallpaper.WallpaperManagerService $r8, $r16, $r28, $r37;
        android.content.Context $r9, $r15;
        android.content.pm.PackageManager $r10, $r18;
        java.lang.StringBuilder $r24, $r26, $r27, $r30, $r32, $r35;
        android.content.pm.PackageManager$NameNotFoundException $r31, $r36;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        z1 = 0;

        $r2 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        if $r2 == null goto label02;

        $r23 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r22 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String getPackageName()>();

        i0 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int isPackageDisappearing(java.lang.String)>($r22);

        if i0 == 3 goto label01;

        if i0 != 2 goto label02;

     label01:
        z1 = 1;

        if z0 == 0 goto label02;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wallpaper uninstalled, removing: ");

        $r25 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", $r29);

        $r28 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r28.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,android.os.IRemoteCallback)>(0, $i1, null);

     label02:
        $r3 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent>;

        if $r3 == null goto label04;

        $r19 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent>;

        $r21 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        i5 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: int isPackageDisappearing(java.lang.String)>($r21);

        if i5 == 3 goto label03;

        if i5 != 2 goto label04;

     label03:
        r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent> = null;

     label04:
        $r4 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        if $r4 == null goto label08;

        $r12 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r14 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: boolean isPackageModified(java.lang.String)>($r14);

        if $z3 == 0 goto label08;

     label05:
        $r16 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r15 = $r16.<com.android.server.wallpaper.WallpaperManagerService: android.content.Context mContext>;

        $r18 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r17 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        virtualinvoke $r18.<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>($r17, 0);

     label06:
        goto label08;

     label07:
        $r31 := @caughtexception;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wallpaper component gone, removing: ");

        $r34 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", $r33);

        $r37 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i4 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r37.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,android.os.IRemoteCallback)>(0, $i4, null);

     label08:
        $r5 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent>;

        if $r5 == null goto label12;

        $r6 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent>;

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: boolean isPackageModified(java.lang.String)>($r7);

        if $z2 == 0 goto label12;

     label09:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r9 = $r8.<com.android.server.wallpaper.WallpaperManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r11 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent>;

        virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>($r11, 0);

     label10:
        goto label12;

     label11:
        $r36 := @caughtexception;

        r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName nextWallpaperComponent> = null;

     label12:
        return z1;

        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label11;
    }
}
