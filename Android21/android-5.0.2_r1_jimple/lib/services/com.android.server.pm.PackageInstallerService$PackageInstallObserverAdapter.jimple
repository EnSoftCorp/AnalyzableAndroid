class com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter extends android.app.PackageInstallObserver
{
    private final android.content.Context mContext;
    private final android.content.IntentSender mTarget;
    private final int mSessionId;

    public void <init>(android.content.Context, android.content.IntentSender, int)
    {
        com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter r0;
        android.content.Context r1;
        android.content.IntentSender r2;
        int i0;

        r0 := @this: com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        specialinvoke r0.<android.app.PackageInstallObserver: void <init>()>();

        r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: android.content.IntentSender mTarget> = r2;

        r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: int mSessionId> = i0;

        return;
    }

    public void onUserActionRequired(android.content.Intent)
    {
        com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter r0;
        android.content.Intent r1, r2, $r4;
        int $i0;
        android.content.Context $r8;
        android.content.IntentSender $r9;
        android.content.IntentSender$SendIntentException $r10;

        r0 := @this: com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter;

        r1 := @parameter0: android.content.Intent;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>()>();

        r2 = $r4;

        $i0 = r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: int mSessionId>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.SESSION_ID", $i0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", -1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", r1);

     label1:
        $r9 = r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: android.content.IntentSender mTarget>;

        $r8 = r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>($r8, 0, r2, null, null);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch android.content.IntentSender$SendIntentException from label1 to label2 with label3;
    }

    public void onPackageInstalled(java.lang.String, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter r0;
        java.lang.String r1, r2, r5, $r9;
        int i0, $i1, $i2;
        android.os.Bundle r3;
        android.content.Intent r4, $r6;
        android.content.Context $r11;
        android.content.IntentSender $r13;
        boolean $z0;
        android.content.IntentSender$SendIntentException $r15;

        r0 := @this: com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        r4 = $r6;

        $i1 = r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: int mSessionId>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.SESSION_ID", $i1);

        $i2 = staticinvoke <android.content.pm.PackageManager: int installStatusToPublicStatus(int)>(i0);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", $i2);

        $r9 = staticinvoke <android.content.pm.PackageManager: java.lang.String installStatusToString(int,java.lang.String)>(i0, r2);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.pm.extra.STATUS_MESSAGE", $r9);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.LEGACY_STATUS", i0);

        if r3 == null goto label1;

        r5 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.content.pm.extra.FAILURE_EXISTING_PACKAGE");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 != 0 goto label1;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.pm.extra.OTHER_PACKAGE_NAME", r5);

     label1:
        $r13 = r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: android.content.IntentSender mTarget>;

        $r11 = r0.<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: android.content.Context mContext>;

        virtualinvoke $r13.<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>($r11, 0, r4, null, null);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

     label4:
        return;

        catch android.content.IntentSender$SendIntentException from label1 to label2 with label3;
    }
}
