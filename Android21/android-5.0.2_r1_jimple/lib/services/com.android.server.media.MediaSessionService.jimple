public class com.android.server.media.MediaSessionService extends com.android.server.SystemService implements com.android.server.Watchdog$Monitor
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int WAKELOCK_TIMEOUT;
    private final com.android.server.media.MediaSessionService$SessionManagerImpl mSessionManagerImpl;
    private final com.android.server.media.MediaSessionStack mPriorityStack;
    private final java.util.ArrayList mAllSessions;
    private final android.util.SparseArray mUserRecords;
    private final java.util.ArrayList mSessionsListeners;
    private final java.lang.Object mLock;
    private final com.android.server.media.MediaSessionService$MessageHandler mHandler;
    private final android.os.PowerManager$WakeLock mMediaEventWakeLock;
    private android.app.KeyguardManager mKeyguardManager;
    private android.media.IAudioService mAudioService;
    private android.content.ContentResolver mContentResolver;
    private com.android.server.media.MediaSessionService$SettingsObserver mSettingsObserver;
    private int mCurrentUserId;
    private android.media.IRemoteVolumeController mRvc;

    public void <init>(android.content.Context)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.Context r1;
        android.os.PowerManager r2;
        java.util.ArrayList $r3, $r5;
        android.util.SparseArray $r4;
        java.lang.Object $r6, $r10;
        com.android.server.media.MediaSessionService$MessageHandler $r7;
        com.android.server.media.MediaSessionService$SessionManagerImpl $r8;
        com.android.server.media.MediaSessionStack $r9;
        android.os.PowerManager$WakeLock $r11;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock> = $r6;

        $r7 = new com.android.server.media.MediaSessionService$MessageHandler;

        specialinvoke $r7.<com.android.server.media.MediaSessionService$MessageHandler: void <init>(com.android.server.media.MediaSessionService)>(r0);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler> = $r7;

        r0.<com.android.server.media.MediaSessionService: int mCurrentUserId> = -1;

        $r8 = new com.android.server.media.MediaSessionService$SessionManagerImpl;

        specialinvoke $r8.<com.android.server.media.MediaSessionService$SessionManagerImpl: void <init>(com.android.server.media.MediaSessionService)>(r0);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SessionManagerImpl mSessionManagerImpl> = $r8;

        $r9 = new com.android.server.media.MediaSessionStack;

        specialinvoke $r9.<com.android.server.media.MediaSessionStack: void <init>()>();

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack> = $r9;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r2 = (android.os.PowerManager) $r10;

        $r11 = virtualinvoke r2.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "handleMediaEvent");

        r0.<com.android.server.media.MediaSessionService: android.os.PowerManager$WakeLock mMediaEventWakeLock> = $r11;

        return;
    }

    public void onStart()
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionService$SessionManagerImpl $r1;
        com.android.server.Watchdog $r2;
        android.content.Context $r3, $r7;
        java.lang.Object $r4;
        android.app.KeyguardManager $r5;
        android.media.IAudioService $r6;
        android.content.ContentResolver $r8;
        com.android.server.media.MediaSessionService$SettingsObserver $r9, $r10;

        r0 := @this: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SessionManagerImpl mSessionManagerImpl>;

        virtualinvoke r0.<com.android.server.media.MediaSessionService: void publishBinderService(java.lang.String,android.os.IBinder)>("media_session", $r1);

        $r2 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r2.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        $r3 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r5 = (android.app.KeyguardManager) $r4;

        r0.<com.android.server.media.MediaSessionService: android.app.KeyguardManager mKeyguardManager> = $r5;

        $r6 = specialinvoke r0.<com.android.server.media.MediaSessionService: android.media.IAudioService getAudioService()>();

        r0.<com.android.server.media.MediaSessionService: android.media.IAudioService mAudioService> = $r6;

        $r7 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.media.MediaSessionService: android.content.ContentResolver mContentResolver> = $r8;

        $r9 = new com.android.server.media.MediaSessionService$SettingsObserver;

        specialinvoke $r9.<com.android.server.media.MediaSessionService$SettingsObserver: void <init>(com.android.server.media.MediaSessionService,com.android.server.media.MediaSessionService$1)>(r0, null);

        r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SettingsObserver mSettingsObserver> = $r9;

        $r10 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$SettingsObserver mSettingsObserver>;

        staticinvoke <com.android.server.media.MediaSessionService$SettingsObserver: void access$100(com.android.server.media.MediaSessionService$SettingsObserver)>($r10);

        return;
    }

    private android.media.IAudioService getAudioService()
    {
        com.android.server.media.MediaSessionService r0;
        android.os.IBinder r1;
        android.media.IAudioService $r2;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("audio");

        $r2 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    public void updateSession(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        java.util.ArrayList $r5;
        boolean $z0;
        com.android.server.media.MediaSessionStack $r6;
        com.android.server.media.MediaSessionService$MessageHandler $r7;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r4 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session updated. Ignoring.");

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        virtualinvoke $r6.<com.android.server.media.MediaSessionStack: void onSessionStateChange(com.android.server.media.MediaSessionRecord)>(r1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r7 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        $i0 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        virtualinvoke $r7.<com.android.server.media.MediaSessionService$MessageHandler: void post(int,int,int)>(1, $i0, 0);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onSessionPlaystateChange(com.android.server.media.MediaSessionRecord, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        int i0, i1, $i2;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        java.util.ArrayList $r5;
        boolean $z1, z2;
        com.android.server.media.MediaSessionStack $r6;
        com.android.server.media.MediaSessionService$MessageHandler $r7;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session changed playback state. Ignoring.");

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        z2 = virtualinvoke $r6.<com.android.server.media.MediaSessionStack: boolean onPlaystateChange(com.android.server.media.MediaSessionRecord,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        if z2 == 0 goto label8;

        $r7 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        $i2 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        virtualinvoke $r7.<com.android.server.media.MediaSessionService$MessageHandler: void post(int,int,int)>(1, $i2, 0);

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onSessionPlaybackTypeChanged(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        java.util.ArrayList $r5;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r4 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", "Unknown session changed playback type. Ignoring.");

        exitmonitor r2;

     label2:
        return;

     label3:
        $i0 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        specialinvoke r0.<com.android.server.media.MediaSessionService: void pushRemoteVolumeUpdateLocked(int)>($i0);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onStartUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateUser()>();

        return;
    }

    public void onStopUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        java.lang.Object r1, $r4, $r6;
        com.android.server.media.MediaSessionService$UserRecord r2;
        java.lang.Throwable r3, $r7;
        android.util.SparseArray $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.media.MediaSessionService$UserRecord) $r6;

        if r2 == null goto label2;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void destroyUserLocked(com.android.server.media.MediaSessionService$UserRecord)>(r2);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void monitor()
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.media.MediaSessionService;

        $r3 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void enforcePhoneStatePermission(int, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $i2 = virtualinvoke $r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MODIFY_PHONE_STATE", i0, i1);

        if $i2 == 0 goto label1;

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Must hold the MODIFY_PHONE_STATE permission.");

        throw $r2;

     label1:
        return;
    }

    void sessionDied(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r4 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void destroySessionLocked(com.android.server.media.MediaSessionRecord)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void destroySession(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        $r4 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void destroySessionLocked(com.android.server.media.MediaSessionRecord)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void updateUser()
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r5, $r7;
        int i0, i1, $i2;
        com.android.server.media.MediaSessionService$UserRecord r2, r3;
        java.lang.Throwable r4, $r8;
        android.util.SparseArray $r6;

        r0 := @this: com.android.server.media.MediaSessionService;

        $r5 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $i2 = r0.<com.android.server.media.MediaSessionService: int mCurrentUserId>;

        if $i2 == i0 goto label3;

        i1 = r0.<com.android.server.media.MediaSessionService: int mCurrentUserId>;

        r0.<com.android.server.media.MediaSessionService: int mCurrentUserId> = i0;

        $r6 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.media.MediaSessionService$UserRecord) $r7;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.server.media.MediaSessionService$UserRecord: void stopLocked()>();

     label2:
        r3 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$UserRecord getOrCreateUser(int)>(i0);

        virtualinvoke r3.<com.android.server.media.MediaSessionService$UserRecord: void startLocked()>();

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r1;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void updateActiveSessionListeners()
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object r1, $r6, $r9;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.media.MediaSessionService$SessionsListenerRecord r2;
        java.lang.Throwable r5, $r12;
        java.util.ArrayList $r7, $r8, $r20, $r23;
        android.content.ComponentName $r10, $r17;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r13, $r15, $r16, $r19;
        java.lang.SecurityException $r14;
        java.lang.String $r18;
        android.media.session.IActiveSessionsListener $r21;

        r0 := @this: com.android.server.media.MediaSessionService;

        $r6 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label02:
        if i0 < 0 goto label10;

        $r8 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.media.MediaSessionService$SessionsListenerRecord) $r9;

     label03:
        $r10 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: android.content.ComponentName access$200(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r2);

        $i2 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: int access$300(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r2);

        $i3 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: int access$400(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r2);

        $i4 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: int access$500(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r2);

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforceMediaPermissions(android.content.ComponentName,int,int,int)>($r10, $i2, $i3, $i4);

     label04:
        goto label09;

     label05:
        $r14 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActiveSessionsListener ");

        $r17 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: android.content.ComponentName access$200(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is no longer authorized. Disconnecting.");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MediaSessionService", $r18);

        $r20 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label06:
        $r21 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: android.media.session.IActiveSessionsListener access$600(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r2);

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r21.<android.media.session.IActiveSessionsListener: void onActiveSessionsChanged(java.util.List)>($r23);

     label07:
        goto label09;

     label08:
        $r11 := @caughtexception;

     label09:
        i0 = i0 + -1;

        goto label02;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r1;

     label13:
        throw r5;

     label14:
        return;

        catch java.lang.SecurityException from label03 to label04 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void destroyUserLocked(com.android.server.media.MediaSessionService$UserRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionService$UserRecord r1;
        android.util.SparseArray $r2;
        int $i0;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionService$UserRecord;

        virtualinvoke r1.<com.android.server.media.MediaSessionService$UserRecord: void stopLocked()>();

        virtualinvoke r1.<com.android.server.media.MediaSessionService$UserRecord: void destroyLocked()>();

        $r2 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $i0 = staticinvoke <com.android.server.media.MediaSessionService$UserRecord: int access$700(com.android.server.media.MediaSessionService$UserRecord)>(r1);

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        return;
    }

    private void destroySessionLocked(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        int i0, $i1;
        com.android.server.media.MediaSessionService$UserRecord r2;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        com.android.server.media.MediaSessionStack $r6;
        java.util.ArrayList $r7;
        android.media.session.ISessionCallback $r8;
        android.os.IBinder $r9;
        com.android.server.media.MediaSessionService$MessageHandler $r10;
        java.lang.Exception $r11;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        i0 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        $r4 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.media.MediaSessionService$UserRecord) $r5;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.media.MediaSessionService$UserRecord: void removeSessionLocked(com.android.server.media.MediaSessionRecord)>(r1);

     label1:
        $r6 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        virtualinvoke $r6.<com.android.server.media.MediaSessionStack: void removeSession(com.android.server.media.MediaSessionRecord)>(r1);

        $r7 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label2:
        $r8 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: android.media.session.ISessionCallback getCallback()>();

        $r9 = interfaceinvoke $r8.<android.media.session.ISessionCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r1, 0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        virtualinvoke r1.<com.android.server.media.MediaSessionRecord: void onDestroy()>();

        $r10 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        $i1 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        virtualinvoke $r10.<com.android.server.media.MediaSessionService$MessageHandler: void post(int,int,int)>(1, $i1, 0);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void enforcePackageName(java.lang.String, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1, $r6;
        int i0, i1, i2;
        java.lang.String[] r2;
        boolean $z0, $z1;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.IllegalArgumentException $r5, $r7;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("packageName may not be empty");

        throw $r7;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        i1 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $r6 = r2[i2];

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        return;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("packageName is not owned by the calling process");

        throw $r5;
    }

    private void enforceMediaPermissions(android.content.ComponentName, int, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ComponentName r1;
        int i0, i1, i2, $i3, $i4;
        android.content.Context $r2;
        boolean $z0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $i3 = virtualinvoke $r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MEDIA_CONTENT_CONTROL", i0, i1);

        if $i3 == 0 goto label1;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $z0 = specialinvoke r0.<com.android.server.media.MediaSessionService: boolean isEnabledNotificationListener(android.content.ComponentName,int,int)>(r1, $i4, i2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Missing permission to control media.");

        throw $r3;

     label1:
        return;
    }

    private void enforceStatusBarPermission(java.lang.String, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1, $r7;
        int i0, i1, $i2;
        android.content.Context $r2;
        java.lang.SecurityException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        $i2 = virtualinvoke $r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.STATUS_BAR_SERVICE", i0, i1);

        if $i2 == 0 goto label1;

        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only system ui may ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return;
    }

    private boolean isEnabledNotificationListener(android.content.ComponentName, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ComponentName r1, r4;
        int i0, i1, i2, $i4;
        java.lang.String r2, $r11, $r12, $r16, $r21;
        java.lang.String[] r3;
        boolean $z0, $z1, $z2, $z3;
        android.content.ContentResolver $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r17, $r18, $r19, $r20;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == i1 goto label1;

        return 0;

     label1:
        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking if enabled notification listener ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r21);

     label2:
        if r1 == null goto label7;

        $r5 = r0.<com.android.server.media.MediaSessionService: android.content.ContentResolver mContentResolver>;

        r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r5, "enabled_notification_listeners", i0);

        if r2 == null goto label6;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i2 = 0;

     label3:
        $i4 = lengthof r3;

        if i2 >= $i4 goto label6;

        $r12 = r3[i2];

        r4 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r12);

        if r4 == null goto label5;

        $z3 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label5;

        $z2 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z2 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ok to get sessions: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is authorized notification listener");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r16);

     label4:
        return 1;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        $z1 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z1 == 0 goto label7;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not ok to get sessions, ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in list of ENABLED_NOTIFICATION_LISTENERS for user ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r11);

     label7:
        return 0;
    }

    private com.android.server.media.MediaSessionRecord createSessionInternal(int, int, int, java.lang.String, android.media.session.ISessionCallback, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2;
        java.lang.String r1, r3;
        android.media.session.ISessionCallback r2;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r8;
        com.android.server.media.MediaSessionRecord $r7;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.media.session.ISessionCallback;

        r3 := @parameter5: java.lang.String;

        $r6 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord createSessionLocked(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String)>(i0, i1, i2, r1, r2, r3);

        exitmonitor r4;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r4;

     label4:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private com.android.server.media.MediaSessionRecord createSessionLocked(int, int, int, java.lang.String, android.media.session.ISessionCallback, java.lang.String)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2;
        java.lang.String r1, r3, $r17;
        android.media.session.ISessionCallback r2;
        com.android.server.media.MediaSessionRecord r4, $r6;
        android.os.RemoteException r5, $r19;
        com.android.server.media.MediaSessionService$MessageHandler $r7, $r11;
        android.os.IBinder $r8;
        java.util.ArrayList $r9;
        com.android.server.media.MediaSessionStack $r10;
        boolean $z1;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        java.lang.RuntimeException $r18;
        com.android.server.media.MediaSessionService$UserRecord r20;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.media.session.ISessionCallback;

        r3 := @parameter5: java.lang.String;

        $r6 = new com.android.server.media.MediaSessionRecord;

        $r7 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        specialinvoke $r6.<com.android.server.media.MediaSessionRecord: void <init>(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String,com.android.server.media.MediaSessionService,android.os.Handler)>(i0, i1, i2, r1, r2, r3, r0, $r7);

        r4 = $r6;

     label1:
        $r8 = interfaceinvoke r2.<android.media.session.ISessionCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r4, 0);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        r5 = $r19;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Media Session owner died prematurely.", r5);

        throw $r18;

     label4:
        $r9 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r10 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        virtualinvoke $r10.<com.android.server.media.MediaSessionStack: void addSession(com.android.server.media.MediaSessionRecord)>(r4);

        r20 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$UserRecord getOrCreateUser(int)>(i2);

        virtualinvoke r20.<com.android.server.media.MediaSessionService$UserRecord: void addSessionLocked(com.android.server.media.MediaSessionRecord)>(r4);

        $r11 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        virtualinvoke $r11.<com.android.server.media.MediaSessionService$MessageHandler: void post(int,int,int)>(1, i2, 0);

        $z1 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        if $z1 == 0 goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created session for package ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with tag ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaSessionService", $r17);

     label5:
        return r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private com.android.server.media.MediaSessionService$UserRecord getOrCreateUser(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        com.android.server.media.MediaSessionService$UserRecord r1, $r4;
        android.util.SparseArray $r2, $r6;
        java.lang.Object $r3;
        android.content.Context $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.media.MediaSessionService$UserRecord) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.media.MediaSessionService$UserRecord;

        $r5 = virtualinvoke r0.<com.android.server.media.MediaSessionService: android.content.Context getContext()>();

        specialinvoke $r4.<com.android.server.media.MediaSessionService$UserRecord: void <init>(com.android.server.media.MediaSessionService,android.content.Context,int)>(r0, $r5, i0);

        r1 = $r4;

        $r6 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    private int findIndexOfSessionsListenerLocked(android.media.session.IActiveSessionsListener)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.IActiveSessionsListener r1, $r6;
        int i0, $i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.media.MediaSessionService$SessionsListenerRecord $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: android.media.session.IActiveSessionsListener;

        $r2 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r3 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.media.MediaSessionService$SessionsListenerRecord) $r4;

        $r6 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: android.media.session.IActiveSessionsListener access$600(com.android.server.media.MediaSessionService$SessionsListenerRecord)>($r5);

        if $r6 != r1 goto label2;

        return i0;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return -1;
    }

    private boolean isSessionDiscoverable(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        $z0 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: boolean isActive()>();

        return $z0;
    }

    private void pushSessionsChanged(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2, $i3, $i4, $i5, i7;
        java.lang.Object r1, $r7, $r11, $r16, $r19;
        java.util.ArrayList r2, r3, $r9, $r10, $r12, $r21;
        com.android.server.media.MediaSessionService$SessionsListenerRecord r4;
        android.os.RemoteException r5, $r23;
        java.lang.Throwable r6, $r20;
        com.android.server.media.MediaSessionStack $r8;
        android.media.session.IActiveSessionsListener $r13;
        android.media.session.MediaSession$Token $r14;
        com.android.server.media.MediaSessionRecord $r15, $r18;
        android.media.session.ISessionController $r17;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r7 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        r2 = virtualinvoke $r8.<com.android.server.media.MediaSessionStack: java.util.ArrayList getActiveSessions(int)>(i0);

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 <= 0 goto label02;

        $r19 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (com.android.server.media.MediaSessionRecord) $r19;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void rememberMediaButtonReceiverLocked(com.android.server.media.MediaSessionRecord)>($r18);

     label02:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        i2 = 0;

     label03:
        if i2 >= i1 goto label04;

        $r14 = new android.media.session.MediaSession$Token;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r15 = (com.android.server.media.MediaSessionRecord) $r16;

        $r17 = virtualinvoke $r15.<com.android.server.media.MediaSessionRecord: android.media.session.ISessionController getControllerBinder()>();

        specialinvoke $r14.<android.media.session.MediaSession$Token: void <init>(android.media.session.ISessionController)>($r17);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        i2 = i2 + 1;

        goto label03;

     label04:
        specialinvoke r0.<com.android.server.media.MediaSessionService: void pushRemoteVolumeUpdateLocked(int)>(i0);

        $r10 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $i3 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        i7 = $i3 - 1;

     label05:
        if i7 < 0 goto label10;

        $r12 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r4 = (com.android.server.media.MediaSessionService$SessionsListenerRecord) $r11;

        $i4 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: int access$500(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r4);

        if $i4 == -1 goto label06;

        $i5 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: int access$500(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r4);

        if $i5 != i0 goto label09;

     label06:
        $r13 = staticinvoke <com.android.server.media.MediaSessionService$SessionsListenerRecord: android.media.session.IActiveSessionsListener access$600(com.android.server.media.MediaSessionService$SessionsListenerRecord)>(r4);

        interfaceinvoke $r13.<android.media.session.IActiveSessionsListener: void onActiveSessionsChanged(java.util.List)>(r3);

     label07:
        goto label09;

     label08:
        $r23 := @caughtexception;

        r5 = $r23;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Dead ActiveSessionsListener in pushSessionsChanged, removing", r5);

        $r21 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        virtualinvoke $r21.<java.util.ArrayList: java.lang.Object remove(int)>(i7);

     label09:
        i7 = i7 + -1;

        goto label05;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r1;

     label13:
        throw r6;

     label14:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void pushRemoteVolumeUpdateLocked(int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;
        com.android.server.media.MediaSessionRecord r1;
        android.media.IRemoteVolumeController $r2, $r4;
        com.android.server.media.MediaSessionStack $r3;
        android.media.session.ISessionController $r5;
        android.os.RemoteException $r6, r7;

        r0 := @this: com.android.server.media.MediaSessionService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.media.MediaSessionService: android.media.IRemoteVolumeController mRvc>;

        if $r2 == null goto label6;

     label1:
        $r3 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        r1 = virtualinvoke $r3.<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecord getDefaultRemoteSession(int)>(i0);

        $r4 = r0.<com.android.server.media.MediaSessionService: android.media.IRemoteVolumeController mRvc>;

        if r1 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: android.media.session.ISessionController getControllerBinder()>();

     label3:
        interfaceinvoke $r4.<android.media.IRemoteVolumeController: void updateRemoteController(android.media.session.ISessionController)>($r5);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionService", "Error sending default remote volume to sys ui.", r7);

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    private void rememberMediaButtonReceiverLocked(com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;
        android.app.PendingIntent r2;
        com.android.server.media.MediaSessionService$UserRecord r3;
        android.util.SparseArray $r4;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: com.android.server.media.MediaSessionService;

        r1 := @parameter0: com.android.server.media.MediaSessionRecord;

        r2 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: android.app.PendingIntent getMediaButtonReceiver()>();

        $r4 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        $i0 = virtualinvoke r1.<com.android.server.media.MediaSessionRecord: int getUserId()>();

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r3 = (com.android.server.media.MediaSessionService$UserRecord) $r5;

        if r2 == null goto label1;

        if r3 == null goto label1;

        staticinvoke <com.android.server.media.MediaSessionService$UserRecord: android.app.PendingIntent access$802(com.android.server.media.MediaSessionService$UserRecord,android.app.PendingIntent)>(r3, r2);

     label1:
        return;
    }

    static void access$900(com.android.server.media.MediaSessionService, com.android.server.media.MediaSessionRecord)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionRecord r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: com.android.server.media.MediaSessionRecord;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void destroySessionLocked(com.android.server.media.MediaSessionRecord)>(r1);

        return;
    }

    static java.lang.Object access$1000(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.ArrayList access$1100(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mSessionsListeners>;

        return $r1;
    }

    static android.content.ContentResolver access$1200(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.content.ContentResolver mContentResolver>;

        return $r1;
    }

    static void access$1300(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void updateActiveSessionListeners()>();

        return;
    }

    static void access$1400(com.android.server.media.MediaSessionService, java.lang.String, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforcePackageName(java.lang.String,int)>(r1, i0);

        return;
    }

    static com.android.server.media.MediaSessionRecord access$1500(com.android.server.media.MediaSessionService, int, int, int, java.lang.String, android.media.session.ISessionCallback, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.media.MediaSessionService r0;
        int i0, i1, i2;
        java.lang.String r1, r3;
        android.media.session.ISessionCallback r2;
        com.android.server.media.MediaSessionRecord $r4;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: android.media.session.ISessionCallback;

        r3 := @parameter6: java.lang.String;

        $r4 = specialinvoke r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionRecord createSessionInternal(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String)>(i0, i1, i2, r1, r2, r3);

        return $r4;
    }

    static com.android.server.media.MediaSessionStack access$1600(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionStack $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionStack mPriorityStack>;

        return $r1;
    }

    static int access$1700(com.android.server.media.MediaSessionService, android.media.session.IActiveSessionsListener)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.session.IActiveSessionsListener r1;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.media.session.IActiveSessionsListener;

        $i0 = specialinvoke r0.<com.android.server.media.MediaSessionService: int findIndexOfSessionsListenerLocked(android.media.session.IActiveSessionsListener)>(r1);

        return $i0;
    }

    static int access$1800(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        int $i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $i0 = r0.<com.android.server.media.MediaSessionService: int mCurrentUserId>;

        return $i0;
    }

    static void access$1900(com.android.server.media.MediaSessionService, java.lang.String, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforceStatusBarPermission(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    static android.media.IRemoteVolumeController access$2002(com.android.server.media.MediaSessionService, android.media.IRemoteVolumeController)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.IRemoteVolumeController r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.media.IRemoteVolumeController;

        r0.<com.android.server.media.MediaSessionService: android.media.IRemoteVolumeController mRvc> = r1;

        return r1;
    }

    static java.util.ArrayList access$2100(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: java.util.ArrayList mAllSessions>;

        return $r1;
    }

    static android.util.SparseArray access$2200(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.util.SparseArray mUserRecords>;

        return $r1;
    }

    static void access$2300(com.android.server.media.MediaSessionService, android.content.ComponentName, int, int, int)
    {
        com.android.server.media.MediaSessionService r0;
        android.content.ComponentName r1;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void enforceMediaPermissions(android.content.ComponentName,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static boolean access$2400()
    {
        boolean $z0;

        $z0 = <com.android.server.media.MediaSessionService: boolean DEBUG>;

        return $z0;
    }

    static android.media.IAudioService access$2500(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.IAudioService $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.media.IAudioService mAudioService>;

        return $r1;
    }

    static android.media.IRemoteVolumeController access$2000(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.media.IRemoteVolumeController $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.media.IRemoteVolumeController mRvc>;

        return $r1;
    }

    static android.os.PowerManager$WakeLock access$2700(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.os.PowerManager$WakeLock mMediaEventWakeLock>;

        return $r1;
    }

    static com.android.server.media.MediaSessionService$MessageHandler access$2800(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        com.android.server.media.MediaSessionService$MessageHandler $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: com.android.server.media.MediaSessionService$MessageHandler mHandler>;

        return $r1;
    }

    static android.app.KeyguardManager access$2900(com.android.server.media.MediaSessionService)
    {
        com.android.server.media.MediaSessionService r0;
        android.app.KeyguardManager $r1;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        $r1 = r0.<com.android.server.media.MediaSessionService: android.app.KeyguardManager mKeyguardManager>;

        return $r1;
    }

    static void access$3000(com.android.server.media.MediaSessionService, int)
    {
        com.android.server.media.MediaSessionService r0;
        int i0;

        r0 := @parameter0: com.android.server.media.MediaSessionService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.media.MediaSessionService: void pushSessionsChanged(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.media.MediaSessionService: int WAKELOCK_TIMEOUT> = 5000;

        <com.android.server.media.MediaSessionService: java.lang.String TAG> = "MediaSessionService";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaSessionService", 3);

        <com.android.server.media.MediaSessionService: boolean DEBUG> = $z0;

        return;
    }
}
