public class com.android.server.usage.UsageStatsService extends com.android.server.SystemService implements com.android.server.usage.UserUsageStatsService$StatsUpdatedListener
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    private static final long TEN_SECONDS;
    private static final long TWENTY_MINUTES;
    private static final long FLUSH_INTERVAL;
    private static final long TIME_CHANGE_THRESHOLD_MILLIS;
    static final int MSG_REPORT_EVENT;
    static final int MSG_FLUSH_TO_DISK;
    static final int MSG_REMOVE_USER;
    private final java.lang.Object mLock;
    android.os.Handler mHandler;
    android.app.AppOpsManager mAppOps;
    android.os.UserManager mUserManager;
    private final android.util.SparseArray mUserState;
    private java.io.File mUsageStatsDir;
    long mRealTimeSnapshot;
    long mSystemTimeSnapshot;

    public void <init>(android.content.Context)
    {
        com.android.server.usage.UsageStatsService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.usage.UsageStatsService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState> = $r3;

        return;
    }

    public void onStart()
    {
        com.android.server.usage.UsageStatsService r0;
        java.io.File r1, $r13, $r14, $r15, $r16, $r17, $r26;
        java.lang.Object r2, $r5, $r8, $r22;
        java.lang.Throwable r3, $r30;
        android.content.Context $r4, $r7, $r19;
        android.app.AppOpsManager $r6;
        android.os.UserManager $r9;
        com.android.server.usage.UsageStatsService$H $r10;
        com.android.internal.os.BackgroundThread $r11;
        android.os.Looper $r12;
        boolean $z1;
        com.android.server.usage.UsageStatsService$UserRemovedReceiver $r18;
        android.content.IntentFilter $r21;
        long $l0, $l1;
        com.android.server.usage.UsageStatsService$LocalService $r23;
        com.android.server.usage.UsageStatsService$BinderService $r24;
        java.lang.StringBuilder $r25, $r28, $r32;
        java.lang.IllegalStateException $r27;
        java.lang.String $r29, $r31;

        r0 := @this: com.android.server.usage.UsageStatsService;

        $r4 = virtualinvoke r0.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r6 = (android.app.AppOpsManager) $r5;

        r0.<com.android.server.usage.UsageStatsService: android.app.AppOpsManager mAppOps> = $r6;

        $r7 = virtualinvoke r0.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r9 = (android.os.UserManager) $r8;

        r0.<com.android.server.usage.UsageStatsService: android.os.UserManager mUserManager> = $r9;

        $r10 = new com.android.server.usage.UsageStatsService$H;

        $r11 = staticinvoke <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>();

        $r12 = virtualinvoke $r11.<com.android.internal.os.BackgroundThread: android.os.Looper getLooper()>();

        specialinvoke $r10.<com.android.server.usage.UsageStatsService$H: void <init>(com.android.server.usage.UsageStatsService,android.os.Looper)>(r0, $r12);

        r0.<com.android.server.usage.UsageStatsService: android.os.Handler mHandler> = $r10;

        $r13 = new java.io.File;

        $r14 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "system");

        r1 = $r13;

        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "usagestats");

        r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir> = $r15;

        $r16 = r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir>;

        virtualinvoke $r16.<java.io.File: boolean mkdirs()>();

        $r17 = r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir>;

        $z1 = virtualinvoke $r17.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        $r27 = new java.lang.IllegalStateException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage stats directory does not exist: ");

        $r26 = r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir>;

        $r31 = virtualinvoke $r26.<java.io.File: java.lang.String getAbsolutePath()>();

        $r32 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r27;

     label1:
        $r19 = virtualinvoke r0.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        $r18 = new com.android.server.usage.UsageStatsService$UserRemovedReceiver;

        specialinvoke $r18.<com.android.server.usage.UsageStatsService$UserRemovedReceiver: void <init>(com.android.server.usage.UsageStatsService,com.android.server.usage.UsageStatsService$1)>(r0, null);

        $r21 = new android.content.IntentFilter;

        specialinvoke $r21.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke $r19.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r18, $r21);

        $r22 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r2 = $r22;

        entermonitor $r22;

     label2:
        specialinvoke r0.<com.android.server.usage.UsageStatsService: void cleanUpRemovedUsersLocked()>();

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r30 := @caughtexception;

        r3 = $r30;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.usage.UsageStatsService: long mRealTimeSnapshot> = $l1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.usage.UsageStatsService: long mSystemTimeSnapshot> = $l0;

        $r23 = new com.android.server.usage.UsageStatsService$LocalService;

        specialinvoke $r23.<com.android.server.usage.UsageStatsService$LocalService: void <init>(com.android.server.usage.UsageStatsService,com.android.server.usage.UsageStatsService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.usage.UsageStatsService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "android/app/usage/UsageStatsManagerInternal", $r23);

        $r24 = new com.android.server.usage.UsageStatsService$BinderService;

        specialinvoke $r24.<com.android.server.usage.UsageStatsService$BinderService: void <init>(com.android.server.usage.UsageStatsService,com.android.server.usage.UsageStatsService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.usage.UsageStatsService: void publishBinderService(java.lang.String,android.os.IBinder)>("usagestats", $r24);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onStatsUpdated()
    {
        com.android.server.usage.UsageStatsService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.usage.UsageStatsService;

        $r1 = r0.<com.android.server.usage.UsageStatsService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(1, 1200000L);

        return;
    }

    private void cleanUpRemovedUsersLocked()
    {
        com.android.server.usage.UsageStatsService r0;
        java.util.List r1, $r9;
        android.util.ArraySet r2, $r7;
        java.lang.String[] r3;
        int i0, i1, $i2, $i3, i4, i5;
        android.content.pm.UserInfo r4;
        android.os.UserManager $r5;
        java.lang.IllegalStateException $r6;
        java.io.File $r8, $r10, $r11;
        java.lang.String $r12, $r15;
        java.lang.Object $r13, $r14;

        r0 := @this: com.android.server.usage.UsageStatsService;

        $r5 = r0.<com.android.server.usage.UsageStatsService: android.os.UserManager mUserManager>;

        r1 = virtualinvoke $r5.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        if r1 == null goto label1;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 != 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("There can\'t be no users");

        throw $r6;

     label2:
        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r2 = $r7;

        $r8 = r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir>;

        r3 = virtualinvoke $r8.<java.io.File: java.lang.String[] list()>();

        if r3 != null goto label3;

        return;

     label3:
        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        virtualinvoke r2.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r9);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.content.pm.UserInfo) $r14;

        $i3 = r4.<android.content.pm.UserInfo: int id>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r2.<android.util.ArraySet: boolean remove(java.lang.Object)>($r15);

        i1 = i1 + 1;

        goto label4;

     label5:
        i4 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i5 = 0;

     label6:
        if i5 >= i4 goto label7;

        $r11 = new java.io.File;

        $r10 = r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir>;

        $r13 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        $r12 = (java.lang.String) $r13;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r12);

        staticinvoke <com.android.server.usage.UsageStatsService: void deleteRecursively(java.io.File)>($r11);

        i5 = i5 + 1;

        goto label6;

     label7:
        return;
    }

    private static void deleteRecursively(java.io.File)
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        int i0, i1;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label2;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        staticinvoke <com.android.server.usage.UsageStatsService: void deleteRecursively(java.io.File)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsService", $r7);

     label3:
        return;
    }

    private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked(int, long)
    {
        com.android.server.usage.UsageStatsService r0;
        int i0;
        long l1;
        com.android.server.usage.UserUsageStatsService r1, $r4;
        android.util.SparseArray $r2, $r8;
        java.lang.Object $r3;
        java.io.File $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.usage.UsageStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.usage.UserUsageStatsService) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.usage.UserUsageStatsService;

        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.usage.UsageStatsService: java.io.File mUsageStatsDir>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r7);

        specialinvoke $r4.<com.android.server.usage.UserUsageStatsService: void <init>(int,java.io.File,com.android.server.usage.UserUsageStatsService$StatsUpdatedListener)>(i0, $r5, r0);

        r1 = $r4;

        virtualinvoke r1.<com.android.server.usage.UserUsageStatsService: void init(long)>(l1);

        $r8 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    private long checkAndGetTimeLocked()
    {
        com.android.server.usage.UsageStatsService r0;
        long l0, l1, l2, $l5, $l6, $l7, $l8, $l10;
        int i3, i4;
        com.android.server.usage.UserUsageStatsService r1;
        byte $b9;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.usage.UsageStatsService;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = r0.<com.android.server.usage.UsageStatsService: long mRealTimeSnapshot>;

        $l7 = l1 - $l5;

        $l6 = r0.<com.android.server.usage.UsageStatsService: long mSystemTimeSnapshot>;

        l2 = $l7 + $l6;

        $l8 = l0 - l2;

        $l10 = staticinvoke <java.lang.Math: long abs(long)>($l8);

        $b9 = $l10 cmp 2000L;

        if $b9 <= 0 goto label3;

        $r2 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        i3 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r4 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        $r3 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r1 = (com.android.server.usage.UserUsageStatsService) $r3;

        virtualinvoke r1.<com.android.server.usage.UserUsageStatsService: void onTimeChanged(long,long)>(l2, l0);

        i4 = i4 + 1;

        goto label1;

     label2:
        r0.<com.android.server.usage.UsageStatsService: long mRealTimeSnapshot> = l1;

        r0.<com.android.server.usage.UsageStatsService: long mSystemTimeSnapshot> = l0;

     label3:
        return l0;
    }

    private void convertToSystemTimeLocked(android.app.usage.UsageEvents$Event)
    {
        com.android.server.usage.UsageStatsService r0;
        android.app.usage.UsageEvents$Event r1;
        long $l0, $l1, $l2, $l3, $l4, $l5;

        r0 := @this: com.android.server.usage.UsageStatsService;

        r1 := @parameter0: android.app.usage.UsageEvents$Event;

        $l1 = r1.<android.app.usage.UsageEvents$Event: long mTimeStamp>;

        $l0 = r0.<com.android.server.usage.UsageStatsService: long mRealTimeSnapshot>;

        $l2 = $l1 - $l0;

        $l3 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l2);

        $l4 = r0.<com.android.server.usage.UsageStatsService: long mSystemTimeSnapshot>;

        $l5 = $l3 + $l4;

        r1.<android.app.usage.UsageEvents$Event: long mTimeStamp> = $l5;

        return;
    }

    void shutdown()
    {
        com.android.server.usage.UsageStatsService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.os.Handler $r4;

        r0 := @this: com.android.server.usage.UsageStatsService;

        $r3 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.usage.UsageStatsService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(0);

        specialinvoke r0.<com.android.server.usage.UsageStatsService: void flushToDiskLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void reportEvent(android.app.usage.UsageEvents$Event, int)
    {
        com.android.server.usage.UsageStatsService r0;
        android.app.usage.UsageEvents$Event r1;
        int i0;
        java.lang.Object r2, $r5;
        long l1;
        com.android.server.usage.UserUsageStatsService r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.usage.UsageStatsService;

        r1 := @parameter0: android.app.usage.UsageEvents$Event;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        l1 = specialinvoke r0.<com.android.server.usage.UsageStatsService: long checkAndGetTimeLocked()>();

        specialinvoke r0.<com.android.server.usage.UsageStatsService: void convertToSystemTimeLocked(android.app.usage.UsageEvents$Event)>(r1);

        r3 = specialinvoke r0.<com.android.server.usage.UsageStatsService: com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked(int,long)>(i0, l1);

        virtualinvoke r3.<com.android.server.usage.UserUsageStatsService: void reportEvent(android.app.usage.UsageEvents$Event)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r2;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void flushToDisk()
    {
        com.android.server.usage.UsageStatsService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.usage.UsageStatsService;

        $r3 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<com.android.server.usage.UsageStatsService: void flushToDiskLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void removeUser(int)
    {
        com.android.server.usage.UsageStatsService r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        android.util.SparseArray $r9;

        r0 := @this: com.android.server.usage.UsageStatsService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing user ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and all data.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsService", $r8);

        $r9 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.usage.UsageStatsService: void cleanUpRemovedUsersLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    java.util.List queryUsageStats(int, int, long, long)
    {
        com.android.server.usage.UsageStatsService r0;
        int i0, i1;
        long l2, l3, l4;
        java.lang.Object r1, $r4;
        com.android.server.usage.UserUsageStatsService r2;
        java.lang.Throwable r3, $r6;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: com.android.server.usage.UsageStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $r4 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        l4 = specialinvoke r0.<com.android.server.usage.UsageStatsService: long checkAndGetTimeLocked()>();

        $z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean validRange(long,long,long)>(l4, l2, l3);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        r2 = specialinvoke r0.<com.android.server.usage.UsageStatsService: com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked(int,long)>(i0, l4);

        $r5 = virtualinvoke r2.<com.android.server.usage.UserUsageStatsService: java.util.List queryUsageStats(int,long,long)>(i1, l2, l3);

        exitmonitor r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    java.util.List queryConfigurationStats(int, int, long, long)
    {
        com.android.server.usage.UsageStatsService r0;
        int i0, i1;
        long l2, l3, l4;
        java.lang.Object r1, $r4;
        com.android.server.usage.UserUsageStatsService r2;
        java.lang.Throwable r3, $r6;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: com.android.server.usage.UsageStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $r4 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        l4 = specialinvoke r0.<com.android.server.usage.UsageStatsService: long checkAndGetTimeLocked()>();

        $z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean validRange(long,long,long)>(l4, l2, l3);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        r2 = specialinvoke r0.<com.android.server.usage.UsageStatsService: com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked(int,long)>(i0, l4);

        $r5 = virtualinvoke r2.<com.android.server.usage.UserUsageStatsService: java.util.List queryConfigurationStats(int,long,long)>(i1, l2, l3);

        exitmonitor r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    android.app.usage.UsageEvents queryEvents(int, long, long)
    {
        com.android.server.usage.UsageStatsService r0;
        int i0;
        long l1, l2, l3;
        java.lang.Object r1, $r4;
        com.android.server.usage.UserUsageStatsService r2;
        java.lang.Throwable r3, $r6;
        boolean $z0;
        android.app.usage.UsageEvents $r5;

        r0 := @this: com.android.server.usage.UsageStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r4 = r0.<com.android.server.usage.UsageStatsService: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        l3 = specialinvoke r0.<com.android.server.usage.UsageStatsService: long checkAndGetTimeLocked()>();

        $z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean validRange(long,long,long)>(l3, l1, l2);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        r2 = specialinvoke r0.<com.android.server.usage.UsageStatsService: com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked(int,long)>(i0, l3);

        $r5 = virtualinvoke r2.<com.android.server.usage.UserUsageStatsService: android.app.usage.UsageEvents queryEvents(long,long)>(l1, l2);

        exitmonitor r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static boolean validRange(long, long, long)
    {
        long l0, l1, l2;
        byte $b3, $b4;
        boolean $z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b3 = l1 cmp l0;

        if $b3 > 0 goto label1;

        $b4 = l1 cmp l2;

        if $b4 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void flushToDiskLocked()
    {
        com.android.server.usage.UsageStatsService r0;
        int i0, i1;
        com.android.server.usage.UserUsageStatsService r1;
        android.util.SparseArray $r2, $r4;
        android.os.Handler $r3;
        java.lang.Object $r5;

        r0 := @this: com.android.server.usage.UsageStatsService;

        $r2 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUserState>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.server.usage.UserUsageStatsService) $r5;

        virtualinvoke r1.<com.android.server.usage.UserUsageStatsService: void persistActiveStats()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.server.usage.UsageStatsService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usage.UsageStatsService: int MSG_REMOVE_USER> = 2;

        <com.android.server.usage.UsageStatsService: int MSG_FLUSH_TO_DISK> = 1;

        <com.android.server.usage.UsageStatsService: int MSG_REPORT_EVENT> = 0;

        <com.android.server.usage.UsageStatsService: long TIME_CHANGE_THRESHOLD_MILLIS> = 2000L;

        <com.android.server.usage.UsageStatsService: long FLUSH_INTERVAL> = 1200000L;

        <com.android.server.usage.UsageStatsService: long TWENTY_MINUTES> = 1200000L;

        <com.android.server.usage.UsageStatsService: long TEN_SECONDS> = 10000L;

        <com.android.server.usage.UsageStatsService: boolean DEBUG> = 0;

        <com.android.server.usage.UsageStatsService: java.lang.String TAG> = "UsageStatsService";

        return;
    }
}
