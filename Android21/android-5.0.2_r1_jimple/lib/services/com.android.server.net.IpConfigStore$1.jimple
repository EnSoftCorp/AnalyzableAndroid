class com.android.server.net.IpConfigStore$1 extends java.lang.Object implements com.android.server.net.DelayedDiskWrite$Writer
{
    final android.util.SparseArray val$networks;
    final com.android.server.net.IpConfigStore this$0;

    void <init>(com.android.server.net.IpConfigStore, android.util.SparseArray)
    {
        com.android.server.net.IpConfigStore$1 r0;
        com.android.server.net.IpConfigStore r1;
        android.util.SparseArray r2;

        r0 := @this: com.android.server.net.IpConfigStore$1;

        r1 := @parameter0: com.android.server.net.IpConfigStore;

        r2 := @parameter1: android.util.SparseArray;

        r0.<com.android.server.net.IpConfigStore$1: com.android.server.net.IpConfigStore this$0> = r1;

        r0.<com.android.server.net.IpConfigStore$1: android.util.SparseArray val$networks> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onWriteCalled(java.io.DataOutputStream) throws java.io.IOException
    {
        com.android.server.net.IpConfigStore$1 r0;
        java.io.DataOutputStream r1;
        int i0, $i1, $i2;
        android.util.SparseArray $r2, $r3, $r5;
        com.android.server.net.IpConfigStore $r4;
        java.lang.Object $r6;
        android.net.IpConfiguration $r7;

        r0 := @this: com.android.server.net.IpConfigStore$1;

        r1 := @parameter0: java.io.DataOutputStream;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(2);

        i0 = 0;

     label1:
        $r2 = r0.<com.android.server.net.IpConfigStore$1: android.util.SparseArray val$networks>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = r0.<com.android.server.net.IpConfigStore$1: com.android.server.net.IpConfigStore this$0>;

        $r3 = r0.<com.android.server.net.IpConfigStore$1: android.util.SparseArray val$networks>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>(i0);

        $r5 = r0.<com.android.server.net.IpConfigStore$1: android.util.SparseArray val$networks>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (android.net.IpConfiguration) $r6;

        staticinvoke <com.android.server.net.IpConfigStore: boolean access$000(com.android.server.net.IpConfigStore,java.io.DataOutputStream,int,android.net.IpConfiguration)>($r4, r1, $i2, $r7);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
