class com.android.server.wm.WindowAnimator$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.wm.WindowAnimator this$0;

    void <init>(com.android.server.wm.WindowAnimator)
    {
        com.android.server.wm.WindowAnimator$1 r0;
        com.android.server.wm.WindowAnimator r1;

        r0 := @this: com.android.server.wm.WindowAnimator$1;

        r1 := @parameter0: com.android.server.wm.WindowAnimator;

        r0.<com.android.server.wm.WindowAnimator$1: com.android.server.wm.WindowAnimator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.wm.WindowAnimator$1 r0;
        java.util.HashMap r1, $r5;
        java.lang.Throwable r2, $r9;
        com.android.server.wm.WindowAnimator $r3, $r6, $r8;
        com.android.server.wm.WindowManagerService $r4, $r7;

        r0 := @this: com.android.server.wm.WindowAnimator$1;

        $r3 = r0.<com.android.server.wm.WindowAnimator$1: com.android.server.wm.WindowAnimator this$0>;

        $r4 = $r3.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.wm.WindowAnimator$1: com.android.server.wm.WindowAnimator this$0>;

        $r7 = $r6.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowManagerService mService>;

        $r7.<com.android.server.wm.WindowManagerService: boolean mAnimationScheduled> = 0;

        $r8 = r0.<com.android.server.wm.WindowAnimator$1: com.android.server.wm.WindowAnimator this$0>;

        staticinvoke <com.android.server.wm.WindowAnimator: void access$000(com.android.server.wm.WindowAnimator)>($r8);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
