public class com.android.server.notification.NotificationManagerService extends com.android.server.SystemService
{
    static final java.lang.String TAG;
    static final boolean DBG;
    static final int MAX_PACKAGE_NOTIFICATIONS;
    static final int MESSAGE_TIMEOUT;
    static final int MESSAGE_SAVE_POLICY_FILE;
    static final int MESSAGE_RECONSIDER_RANKING;
    static final int MESSAGE_RANKING_CONFIG_CHANGE;
    static final int MESSAGE_SEND_RANKING_UPDATE;
    static final int MESSAGE_LISTENER_HINTS_CHANGED;
    static final int MESSAGE_LISTENER_NOTIFICATION_FILTER_CHANGED;
    static final int LONG_DELAY;
    static final int SHORT_DELAY;
    static final long[] DEFAULT_VIBRATE_PATTERN;
    static final int VIBRATE_PATTERN_MAXLEN;
    static final int DEFAULT_STREAM_TYPE;
    static final boolean SCORE_ONGOING_HIGHER;
    static final int JUNK_SCORE;
    static final int NOTIFICATION_PRIORITY_MULTIPLIER;
    static final int SCORE_DISPLAY_THRESHOLD;
    static final int SCORE_INTERRUPTION_THRESHOLD;
    static final boolean ENABLE_BLOCKED_NOTIFICATIONS;
    static final boolean ENABLE_BLOCKED_TOASTS;
    static final int MATCHES_CALL_FILTER_CONTACTS_TIMEOUT_MS;
    static final float MATCHES_CALL_FILTER_TIMEOUT_AFFINITY;
    private android.app.IActivityManager mAm;
    android.media.AudioManager mAudioManager;
    com.android.server.statusbar.StatusBarManagerInternal mStatusBar;
    android.os.Vibrator mVibrator;
    final android.os.IBinder mForegroundToken;
    private com.android.server.notification.NotificationManagerService$WorkerHandler mHandler;
    private final android.os.HandlerThread mRankingThread;
    private com.android.server.lights.Light mNotificationLight;
    com.android.server.lights.Light mAttentionLight;
    private int mDefaultNotificationColor;
    private int mDefaultNotificationLedOn;
    private int mDefaultNotificationLedOff;
    private long[] mDefaultVibrationPattern;
    private long[] mFallbackVibrationPattern;
    private boolean mUseAttentionLight;
    boolean mSystemReady;
    private boolean mDisableNotificationEffects;
    private int mCallState;
    com.android.server.notification.NotificationRecord mSoundNotification;
    com.android.server.notification.NotificationRecord mVibrateNotification;
    private final android.util.ArraySet mListenersDisablingEffects;
    private android.content.ComponentName mEffectsSuppressor;
    private int mListenerHints;
    private int mInterruptionFilter;
    private boolean mScreenOn;
    private boolean mInCall;
    private boolean mNotificationPulseEnabled;
    final java.util.ArrayList mNotificationList;
    final android.util.ArrayMap mNotificationsByKey;
    final java.util.ArrayList mToastQueue;
    java.util.ArrayList mLights;
    com.android.server.notification.NotificationRecord mLedNotification;
    private android.app.AppOpsManager mAppOps;
    private com.android.server.notification.NotificationManagerService$Archive mArchive;
    private android.util.AtomicFile mPolicyFile;
    private java.util.HashSet mBlockedPackages;
    private static final int DB_VERSION;
    private static final java.lang.String TAG_BODY;
    private static final java.lang.String ATTR_VERSION;
    private static final java.lang.String TAG_BLOCKED_PKGS;
    private static final java.lang.String TAG_PACKAGE;
    private static final java.lang.String ATTR_NAME;
    private com.android.server.notification.RankingHelper mRankingHelper;
    private final com.android.server.notification.ManagedServices$UserProfiles mUserProfiles;
    private com.android.server.notification.NotificationManagerService$NotificationListeners mListeners;
    private com.android.server.notification.ConditionProviders mConditionProviders;
    private com.android.server.notification.NotificationUsageStats mUsageStats;
    private static final int MY_UID;
    private static final int MY_PID;
    private static final int REASON_DELEGATE_CLICK;
    private static final int REASON_DELEGATE_CANCEL;
    private static final int REASON_DELEGATE_CANCEL_ALL;
    private static final int REASON_DELEGATE_ERROR;
    private static final int REASON_PACKAGE_CHANGED;
    private static final int REASON_USER_STOPPED;
    private static final int REASON_PACKAGE_BANNED;
    private static final int REASON_NOMAN_CANCEL;
    private static final int REASON_NOMAN_CANCEL_ALL;
    private static final int REASON_LISTENER_CANCEL;
    private static final int REASON_LISTENER_CANCEL_ALL;
    private static final int REASON_GROUP_SUMMARY_CANCELED;
    private final com.android.server.notification.NotificationDelegate mNotificationDelegate;
    private android.content.BroadcastReceiver mIntentReceiver;
    private com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver;
    private com.android.server.notification.ZenModeHelper mZenModeHelper;
    private final java.lang.Runnable mBuzzBeepBlinked;
    private final android.os.IBinder mService;
    private final com.android.server.notification.NotificationManagerInternal mInternalService;

    private void loadPolicyFile()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.util.AtomicFile r1, $r7, $r9;
        java.io.FileInputStream r2;
        org.xmlpull.v1.XmlPullParser r3;
        int i0, $i1, $i2, i7;
        java.lang.String r4, $r11, $r13, $r14, $r15, $r17, $r19, r25;
        java.lang.Throwable r5, r6, $r21, $r23;
        java.util.HashSet $r8, $r16;
        com.android.server.notification.ZenModeHelper $r10;
        com.android.server.notification.RankingHelper $r12;
        boolean $z1, $z2, $z3, $z4;
        java.io.IOException $r18, r27;
        java.lang.NumberFormatException $r20, r28;
        java.io.FileNotFoundException $r22;
        org.xmlpull.v1.XmlPullParserException $r24, r29;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.notification.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        virtualinvoke $r8.<java.util.HashSet: void clear()>();

        r2 = null;

     label02:
        $r9 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        r2 = virtualinvoke $r9.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

     label03:
        $i1 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 1 goto label08;

        r4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i0 != 2 goto label07;

        $r11 = "notification-policy";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label04;

        $r19 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        goto label07;

     label04:
        $r13 = "blocked-packages";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label07;

     label05:
        $i2 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i7 = $i2;

        if $i2 == 1 goto label07;

        r25 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = "package";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z3 == 0 goto label06;

        $r16 = r0.<com.android.server.notification.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        $r17 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        virtualinvoke $r16.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

        goto label05;

     label06:
        $r15 = "blocked-packages";

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z4 == 0 goto label05;

        if i7 != 3 goto label05;

        goto label07;

     label07:
        $r10 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r10.<com.android.server.notification.ZenModeHelper: void readXml(org.xmlpull.v1.XmlPullParser)>(r3);

        $r12 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r12.<com.android.server.notification.RankingHelper: void readXml(org.xmlpull.v1.XmlPullParser)>(r3);

        goto label03;

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label19;

     label09:
        $r22 := @caughtexception;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label19;

     label11:
        $r18 := @caughtexception;

        r27 = $r18;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to read notification policy", r27);

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label19;

     label13:
        $r20 := @caughtexception;

        r28 = $r20;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to parse notification policy", r28);

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label19;

     label15:
        $r24 := @caughtexception;

        r29 = $r24;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to parse notification policy", r29);

     label16:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label19;

     label17:
        $r23 := @caughtexception;

        r5 = $r23;

     label18:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r5;

     label19:
        exitmonitor r1;

     label20:
        goto label23;

     label21:
        $r21 := @caughtexception;

        r6 = $r21;

        exitmonitor r1;

     label22:
        throw r6;

     label23:
        return;

        catch java.io.FileNotFoundException from label02 to label08 with label09;
        catch java.io.IOException from label02 to label08 with label11;
        catch java.lang.NumberFormatException from label02 to label08 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label08 with label15;
        catch java.lang.Throwable from label02 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public void savePolicyFile()
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1, $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeMessages(int)>(3);

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean sendEmptyMessage(int)>(3);

        return;
    }

    private void handleSavePolicyFile()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.util.AtomicFile r1, $r5, $r6, $r15, $r19;
        java.io.FileOutputStream r2;
        java.io.IOException r3, $r16, $r18, r21;
        java.lang.Throwable r4, $r17;
        com.android.internal.util.FastXmlSerializer $r7, r20;
        java.lang.Boolean $r8;
        java.lang.String $r10;
        com.android.server.notification.ZenModeHelper $r11;
        com.android.server.notification.RankingHelper $r14;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NotificationService", "handleSavePolicyFile");

        $r5 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        r2 = virtualinvoke $r6.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        goto label05;

     label03:
        $r16 := @caughtexception;

        r3 = $r16;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Failed to save policy file", r3);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r7 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r7.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r20 = $r7;

        interfaceinvoke r20.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, "utf-8");

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r20.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

        interfaceinvoke r20.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "notification-policy");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        interfaceinvoke r20.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r10);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r11.<com.android.server.notification.ZenModeHelper: void writeXml(org.xmlpull.v1.XmlSerializer)>(r20);

        $r14 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r14.<com.android.server.notification.RankingHelper: void writeXml(org.xmlpull.v1.XmlSerializer)>(r20);

        interfaceinvoke r20.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "notification-policy");

        interfaceinvoke r20.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r15 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        virtualinvoke $r15.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label06:
        goto label08;

     label07:
        $r18 := @caughtexception;

        r21 = $r18;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Failed to save policy file, restoring backup", r21);

        $r19 = r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        virtualinvoke $r19.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r1;

     label11:
        throw r4;

     label12:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label04 with label10;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private boolean noteNotificationOp(java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        android.app.AppOpsManager $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        $i1 = virtualinvoke $r2.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(11, i0, r1);

        if $i1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifications are disabled by AppOps for ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r6);

        return 0;

     label1:
        return 1;
    }

    static long[] getLongArray(android.content.res.Resources, int, int, long[])
    {
        android.content.res.Resources r0;
        int i0, i1, i2, i3, $i4, $i5, $i7;
        long[] r1, r3;
        int[] r2;
        long $l6;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: long[];

        r2 = virtualinvoke r0.<android.content.res.Resources: int[] getIntArray(int)>(i0);

        if r2 != null goto label1;

        return r1;

     label1:
        $i4 = lengthof r2;

        if $i4 <= i1 goto label2;

        $i7 = i1;

        goto label3;

     label2:
        $i7 = lengthof r2;

     label3:
        i2 = $i7;

        r3 = newarray (long)[i2];

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        $i5 = r2[i3];

        $l6 = (long) $i5;

        r3[i3] = $l6;

        i3 = i3 + 1;

        goto label4;

     label5:
        return r3;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.Context r1;
        android.os.Binder $r2;
        android.os.HandlerThread $r3;
        android.util.ArraySet $r4;
        java.util.ArrayList $r5, $r7, $r8;
        android.util.ArrayMap $r6;
        java.util.HashSet $r9;
        com.android.server.notification.ManagedServices$UserProfiles $r10;
        com.android.server.notification.NotificationManagerService$1 $r11;
        com.android.server.notification.NotificationManagerService$2 $r12;
        com.android.server.notification.NotificationManagerService$3 $r13;
        com.android.server.notification.NotificationManagerService$5 $r14;
        com.android.server.notification.NotificationManagerService$6 $r15;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new android.os.Binder;

        specialinvoke $r2.<android.os.Binder: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mForegroundToken> = $r2;

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String,int)>("ranker", 10);

        r0.<com.android.server.notification.NotificationManagerService: android.os.HandlerThread mRankingThread> = $r3;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects> = $r4;

        r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn> = 1;

        r0.<com.android.server.notification.NotificationManagerService: boolean mInCall> = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: java.util.HashSet mBlockedPackages> = $r9;

        $r10 = new com.android.server.notification.ManagedServices$UserProfiles;

        specialinvoke $r10.<com.android.server.notification.ManagedServices$UserProfiles: void <init>()>();

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles> = $r10;

        $r11 = new com.android.server.notification.NotificationManagerService$1;

        specialinvoke $r11.<com.android.server.notification.NotificationManagerService$1: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationDelegate mNotificationDelegate> = $r11;

        $r12 = new com.android.server.notification.NotificationManagerService$2;

        specialinvoke $r12.<com.android.server.notification.NotificationManagerService$2: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver> = $r12;

        $r13 = new com.android.server.notification.NotificationManagerService$3;

        specialinvoke $r13.<com.android.server.notification.NotificationManagerService$3: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: java.lang.Runnable mBuzzBeepBlinked> = $r13;

        $r14 = new com.android.server.notification.NotificationManagerService$5;

        specialinvoke $r14.<com.android.server.notification.NotificationManagerService$5: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mService> = $r14;

        $r15 = new com.android.server.notification.NotificationManagerService$6;

        specialinvoke $r15.<com.android.server.notification.NotificationManagerService$6: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerInternal mInternalService> = $r15;

        return;
    }

    public void onStart()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.res.Resources r1;
        java.lang.String[] r2;
        com.android.server.lights.LightsManager r4;
        android.content.IntentFilter r5, r6, r7, $r56, $r60, $r67;
        android.content.Context $r8, $r10, $r13, $r18, $r25, $r31, $r34, $r52, $r53, $r57, $r61, $r68;
        android.app.IActivityManager $r9;
        java.lang.Object $r11, $r14, $r38, $r42;
        android.app.AppOpsManager $r12;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r15, $r24, $r41, $r65;
        android.os.Vibrator $r16;
        android.os.HandlerThread $r17, $r20;
        com.android.server.notification.RankingHelper $r19;
        com.android.server.notification.NotificationManagerService$RankingWorkerHandler $r21;
        com.android.server.notification.ZenModeHelper $r22, $r26, $r35, $r55;
        android.os.Looper $r23;
        com.android.server.notification.NotificationManagerService$4 $r27;
        java.io.File $r28, $r29, $r33, r74;
        com.android.server.notification.NotificationUsageStats $r30;
        android.util.AtomicFile $r32;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r36;
        com.android.server.notification.ConditionProviders $r37;
        com.android.server.statusbar.StatusBarManagerInternal $r39, $r45;
        com.android.server.notification.ManagedServices$UserProfiles $r40, $r54;
        com.android.server.lights.Light $r43, $r46;
        com.android.server.notification.NotificationDelegate $r44;
        int $i0, $i1, $i2, $i3, $i4;
        long[] $r47, $r48, $r49, $r50;
        android.content.ContentResolver $r51;
        boolean $z0;
        android.content.BroadcastReceiver $r58, $r62, $r69;
        com.android.server.notification.NotificationManagerService$SettingsObserver $r64;
        com.android.server.notification.NotificationManagerService$Archive $r66;
        com.android.server.notification.NotificationManagerInternal $r71;
        android.os.IBinder $r72;
        android.content.res.Resources$NotFoundException $r73;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r8 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r1 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r0.<com.android.server.notification.NotificationManagerService: android.app.IActivityManager mAm> = $r9;

        $r10 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r12 = (android.app.AppOpsManager) $r11;

        r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps> = $r12;

        $r13 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r16 = (android.os.Vibrator) $r14;

        r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator> = $r16;

        $r15 = new com.android.server.notification.NotificationManagerService$WorkerHandler;

        specialinvoke $r15.<com.android.server.notification.NotificationManagerService$WorkerHandler: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationManagerService$1)>(r0, null);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler> = $r15;

        $r17 = r0.<com.android.server.notification.NotificationManagerService: android.os.HandlerThread mRankingThread>;

        virtualinvoke $r17.<android.os.HandlerThread: void start()>();

     label1:
        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236017);

     label2:
        goto label4;

     label3:
        $r73 := @caughtexception;

        r2 = newarray (java.lang.String)[0];

     label4:
        $r19 = new com.android.server.notification.RankingHelper;

        $r18 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r21 = new com.android.server.notification.NotificationManagerService$RankingWorkerHandler;

        $r20 = r0.<com.android.server.notification.NotificationManagerService: android.os.HandlerThread mRankingThread>;

        $r23 = virtualinvoke $r20.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r21.<com.android.server.notification.NotificationManagerService$RankingWorkerHandler: void <init>(com.android.server.notification.NotificationManagerService,android.os.Looper)>(r0, $r23);

        specialinvoke $r19.<com.android.server.notification.RankingHelper: void <init>(android.content.Context,android.os.Handler,java.lang.String[])>($r18, $r21, r2);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper> = $r19;

        $r22 = new com.android.server.notification.ZenModeHelper;

        $r25 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r24 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        specialinvoke $r22.<com.android.server.notification.ZenModeHelper: void <init>(android.content.Context,android.os.Handler)>($r25, $r24);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper> = $r22;

        $r26 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r27 = new com.android.server.notification.NotificationManagerService$4;

        specialinvoke $r27.<com.android.server.notification.NotificationManagerService$4: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        virtualinvoke $r26.<com.android.server.notification.ZenModeHelper: void addCallback(com.android.server.notification.ZenModeHelper$Callback)>($r27);

        $r29 = new java.io.File;

        $r28 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r29.<java.io.File: void <init>(java.io.File,java.lang.String)>($r28, "system");

        r74 = $r29;

        $r32 = new android.util.AtomicFile;

        $r33 = new java.io.File;

        specialinvoke $r33.<java.io.File: void <init>(java.io.File,java.lang.String)>(r74, "notification_policy.xml");

        specialinvoke $r32.<android.util.AtomicFile: void <init>(java.io.File)>($r33);

        r0.<com.android.server.notification.NotificationManagerService: android.util.AtomicFile mPolicyFile> = $r32;

        $r30 = new com.android.server.notification.NotificationUsageStats;

        $r31 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        specialinvoke $r30.<com.android.server.notification.NotificationUsageStats: void <init>(android.content.Context)>($r31);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats> = $r30;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void importOldBlockDb()>();

        $r36 = new com.android.server.notification.NotificationManagerService$NotificationListeners;

        specialinvoke $r36.<com.android.server.notification.NotificationManagerService$NotificationListeners: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners> = $r36;

        $r37 = new com.android.server.notification.ConditionProviders;

        $r34 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r41 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r40 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $r35 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        specialinvoke $r37.<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,android.os.Handler,com.android.server.notification.ManagedServices$UserProfiles,com.android.server.notification.ZenModeHelper)>($r34, $r41, $r40, $r35);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders> = $r37;

        $r38 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.Object getLocalService(java.lang.Class)>(class "com/android/server/statusbar/StatusBarManagerInternal");

        $r39 = (com.android.server.statusbar.StatusBarManagerInternal) $r38;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.statusbar.StatusBarManagerInternal mStatusBar> = $r39;

        $r45 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.statusbar.StatusBarManagerInternal mStatusBar>;

        $r44 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationDelegate mNotificationDelegate>;

        interfaceinvoke $r45.<com.android.server.statusbar.StatusBarManagerInternal: void setNotificationDelegate(com.android.server.notification.NotificationDelegate)>($r44);

        $r42 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.Object getLocalService(java.lang.Class)>(class "com/android/server/lights/LightsManager");

        r4 = (com.android.server.lights.LightsManager) $r42;

        $r43 = virtualinvoke r4.<com.android.server.lights.LightsManager: com.android.server.lights.Light getLight(int)>(4);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.Light mNotificationLight> = $r43;

        $r46 = virtualinvoke r4.<com.android.server.lights.LightsManager: com.android.server.lights.Light getLight(int)>(5);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.Light mAttentionLight> = $r46;

        $i2 = virtualinvoke r1.<android.content.res.Resources: int getColor(int)>(17170687);

        r0.<com.android.server.notification.NotificationManagerService: int mDefaultNotificationColor> = $i2;

        $i1 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>(17694785);

        r0.<com.android.server.notification.NotificationManagerService: int mDefaultNotificationLedOn> = $i1;

        $i0 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>(17694786);

        r0.<com.android.server.notification.NotificationManagerService: int mDefaultNotificationLedOff> = $i0;

        $r50 = <com.android.server.notification.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN>;

        $r49 = staticinvoke <com.android.server.notification.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>(r1, 17236014, 17, $r50);

        r0.<com.android.server.notification.NotificationManagerService: long[] mDefaultVibrationPattern> = $r49;

        $r48 = <com.android.server.notification.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN>;

        $r47 = staticinvoke <com.android.server.notification.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>(r1, 17236015, 17, $r48);

        r0.<com.android.server.notification.NotificationManagerService: long[] mFallbackVibrationPattern> = $r47;

        $z0 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17956898);

        r0.<com.android.server.notification.NotificationManagerService: boolean mUseAttentionLight> = $z0;

        $r52 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r51 = virtualinvoke $r52.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r51, "device_provisioned", 0);

        if 0 != $i3 goto label5;

        r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects> = 1;

     label5:
        $r55 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r55.<com.android.server.notification.ZenModeHelper: void updateZenMode()>();

        $r54 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $r53 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke $r54.<com.android.server.notification.ManagedServices$UserProfiles: void updateCache(android.content.Context)>($r53);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void listenForCallState()>();

        $r60 = new android.content.IntentFilter;

        specialinvoke $r60.<android.content.IntentFilter: void <init>()>();

        r5 = $r60;

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PHONE_STATE");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_PRESENT");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STOPPED");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_ADDED");

        $r61 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r62 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r61.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r62, r5);

        $r56 = new android.content.IntentFilter;

        specialinvoke $r56.<android.content.IntentFilter: void <init>()>();

        r6 = $r56;

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.QUERY_PACKAGE_RESTART");

        virtualinvoke r6.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r57 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r58 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r57.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r58, r6);

        $r67 = new android.content.IntentFilter;

        specialinvoke $r67.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        r7 = $r67;

        $r68 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r69 = r0.<com.android.server.notification.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r68.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r69, r7);

        $r64 = new com.android.server.notification.NotificationManagerService$SettingsObserver;

        $r65 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        specialinvoke $r64.<com.android.server.notification.NotificationManagerService$SettingsObserver: void <init>(com.android.server.notification.NotificationManagerService,android.os.Handler)>(r0, $r65);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver> = $r64;

        $r66 = new com.android.server.notification.NotificationManagerService$Archive;

        $i4 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>(17694792);

        specialinvoke $r66.<com.android.server.notification.NotificationManagerService$Archive: void <init>(int)>($i4);

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive> = $r66;

        $r72 = r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mService>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("notification", $r72);

        $r71 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerInternal mInternalService>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "com/android/server/notification/NotificationManagerInternal", $r71);

        return;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private void importOldBlockDb()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.pm.PackageManager r1;
        java.util.Iterator r2;
        java.lang.String r3;
        android.content.Context $r4;
        java.util.HashSet $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.content.pm.ApplicationInfo $r8;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        android.content.pm.PackageInfo r10;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void loadPolicyFile()>();

        $r4 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r1 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = r0.<com.android.server.notification.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        r2 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

     label2:
        r10 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r3, 0);

        $r8 = r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void setNotificationsEnabledForPackageImpl(java.lang.String,int,boolean)>(r3, $i0, 0);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        goto label1;

     label6:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        virtualinvoke $r6.<java.util.HashSet: void clear()>();

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public void onBootPhase(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$SettingsObserver $r1;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r2;
        com.android.server.notification.ConditionProviders $r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.media.AudioManager $r6, $r7;
        com.android.server.notification.ZenModeHelper $r8;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        if i0 != 500 goto label1;

        r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady> = 1;

        $r4 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r6 = (android.media.AudioManager) $r5;

        r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager> = $r6;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        virtualinvoke $r8.<com.android.server.notification.ZenModeHelper: void setAudioManager(android.media.AudioManager)>($r7);

        goto label2;

     label1:
        if i0 != 600 goto label2;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$SettingsObserver: void observe()>();

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$NotificationListeners: void onBootPhaseAppsCanStart()>();

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r3.<com.android.server.notification.ConditionProviders: void onBootPhaseAppsCanStart()>();

     label2:
        return;
    }

    void setNotificationsEnabledForPackageImpl(java.lang.String, int, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r7, $r9;
        int i0, $i2, $i3, $i4;
        boolean z0;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        android.app.AppOpsManager $r8;
        byte $b5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label1;

        $r9 = "en";

        goto label2;

     label1:
        $r9 = "dis";

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("abling notifications for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r7);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        if z0 == 0 goto label3;

        $b5 = 0;

        goto label4;

     label3:
        $b5 = 1;

     label4:
        virtualinvoke $r8.<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)>(11, i0, r1, $b5);

        if z0 != 0 goto label5;

        $i2 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        $i3 = <com.android.server.notification.NotificationManagerService: int MY_PID>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: boolean cancelAllNotificationsInt(int,int,java.lang.String,int,int,boolean,int,int,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($i2, $i3, r1, 0, 0, 1, $i4, 7, null);

     label5:
        return;
    }

    private void updateListenerHintsLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        byte b0, $b2;
        android.util.ArraySet $r1;
        boolean $z0;
        int $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects>;

        $z0 = virtualinvoke $r1.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        b0 = $b2;

        $i1 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        if b0 != $i1 goto label3;

        return;

     label3:
        r0.<com.android.server.notification.NotificationManagerService: int mListenerHints> = b0;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleListenerHintsChanged(int)>(b0);

        return;
    }

    private void updateEffectsSuppressorLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.ComponentName r1, $r3, $r10;
        android.util.ArraySet $r2, $r7;
        boolean $z0, $z1;
        android.content.Context $r4;
        android.content.Intent $r5, $r6;
        java.lang.Object $r8;
        com.android.server.notification.ManagedServices$ManagedServiceInfo $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(0);

        $r9 = (com.android.server.notification.ManagedServices$ManagedServiceInfo) $r8;

        $r10 = $r9.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        goto label2;

     label1:
        $r10 = null;

     label2:
        r1 = $r10;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.content.ComponentName mEffectsSuppressor>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z1 == 0 goto label3;

        return;

     label3:
        r0.<com.android.server.notification.NotificationManagerService: android.content.ComponentName mEffectsSuppressor> = r1;

        $r4 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.os.action.ACTION_EFFECTS_SUPPRESSOR_CHANGED");

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke $r4.<android.content.Context: void sendBroadcast(android.content.Intent)>($r6);

        return;
    }

    private void updateInterruptionFilterLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1;
        com.android.server.notification.ZenModeHelper $r1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        i0 = virtualinvoke $r1.<com.android.server.notification.ZenModeHelper: int getZenModeListenerInterruptionFilter()>();

        $i1 = r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter> = i0;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleInterruptionFilterChanged(int)>(i0);

        return;
    }

    private java.lang.String[] getActiveNotificationKeys(android.service.notification.INotificationListener)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.INotificationListener r1;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        java.util.ArrayList r3, r4, $r8, $r11, $r13, $r14;
        int i0, i1, $i2, $i3;
        android.service.notification.StatusBarNotification r5;
        java.lang.Throwable r6, $r18;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r7;
        boolean $z0, $z1;
        java.lang.String[] $r9, $r12;
        java.lang.Object[] $r10;
        com.android.server.notification.NotificationRecord $r15;
        java.lang.Object $r16;
        java.lang.String $r17;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        r2 = virtualinvoke $r7.<com.android.server.notification.NotificationManagerService$NotificationListeners: com.android.server.notification.ManagedServices$ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>(r1);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        $z0 = virtualinvoke r2.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean isEnabledForCurrentProfiles()>();

        if $z0 == 0 goto label8;

        $r11 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r4 = $r11;

        entermonitor $r11;

     label1:
        $r13 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r14 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r15 = (com.android.server.notification.NotificationRecord) $r16;

        r5 = $r15.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i3 = virtualinvoke r5.<android.service.notification.StatusBarNotification: int getUserId()>();

        $z1 = virtualinvoke r2.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean enabledAndUserMatches(int)>($i3);

        if $z1 == 0 goto label3;

        $r17 = virtualinvoke r5.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        exitmonitor r4;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r4;

     label7:
        throw r6;

     label8:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r9 = newarray (java.lang.String)[$i2];

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r12 = (java.lang.String[]) $r10;

        return $r12;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.String disableNotificationEffects(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        com.android.server.notification.ZenModeHelper $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects>;

        if $z0 == 0 goto label1;

        return "booleanState";

     label1:
        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        return "listenerHints";

     label2:
        $i2 = r0.<com.android.server.notification.NotificationManagerService: int mCallState>;

        if $i2 == 0 goto label3;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z1 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: boolean isCall(com.android.server.notification.NotificationRecord)>(r1);

        if $z1 != 0 goto label3;

        return "callState";

     label3:
        return null;
    }

    void dumpImpl(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.ArrayList r3, $r7, $r16, $r31, $r66, $r67, $r71, $r72, $r78, r80;
        java.lang.Throwable r4, r6, $r75, $r76;
        android.service.notification.StatusBarNotification r5, $r74;
        com.android.server.notification.ZenModeHelper $r8;
        com.android.server.notification.ConditionProviders $r9;
        com.android.server.notification.RankingHelper $r10;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r11;
        android.util.ArraySet $r12, $r13;
        android.content.ComponentName $r14;
        java.lang.Object $r15, $r25, $r65, $r70, $r79;
        com.android.server.notification.NotificationUsageStats $r17;
        java.lang.StringBuilder $r18, $r20, $r21, $r26, $r28, $r29, $r30, $r32, $r34, $r35, $r36, $r37, $r39, $r40, $r42, $r43, $r45, $r46, $r48, $r50, $r51, $r53, $r54, $r56, $r58, $r59, $r61, $r62, $r64, $r68;
        com.android.server.notification.NotificationManagerService$Archive $r19, $r23;
        java.lang.String $r22, $r24, $r27, $r33, $r41, $r44, $r47, $r52, $r55, $r57, $r60, $r63, $r69;
        com.android.server.notification.NotificationRecord $r38, $r49, r81;
        android.content.Context $r73;
        com.android.server.notification.NotificationManagerService$ToastRecord $r77;
        java.util.Iterator r82;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r83;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Current Notification Manager state");

        if r2 == null goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (filtered to ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void println(char)>(58);

        if r2 == null goto label02;

        $z10 = r2.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean zen>;

        if $z10 == 0 goto label02;

        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z0 = $z9;

        if z0 != 0 goto label11;

        $r72 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        r3 = $r72;

        entermonitor $r72;

     label04:
        $r71 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke $r71.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Toast Queue:");

        i1 = 0;

     label05:
        if i1 >= i0 goto label06;

        $r78 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r79 = virtualinvoke $r78.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r77 = (com.android.server.notification.NotificationManagerService$ToastRecord) $r79;

        virtualinvoke $r77.<com.android.server.notification.NotificationManagerService$ToastRecord: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, "    ", r2);

        i1 = i1 + 1;

        goto label05;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r75 := @caughtexception;

        r4 = $r75;

        exitmonitor r3;

     label10:
        throw r4;

     label11:
        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r80 = $r7;

        entermonitor $r7;

     label12:
        if z0 != 0 goto label25;

        $r16 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i4 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if i4 <= 0 goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Notification List:");

        i5 = 0;

     label13:
        if i5 >= i4 goto label16;

        $r66 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r65 = virtualinvoke $r66.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r81 = (com.android.server.notification.NotificationRecord) $r65;

        if r2 == null goto label14;

        $r74 = r81.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $z8 = virtualinvoke r2.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>($r74);

        if $z8 != 0 goto label14;

        goto label15;

     label14:
        $r73 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        virtualinvoke r81.<com.android.server.notification.NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context)>(r1, "    ", $r73);

     label15:
        i5 = i5 + 1;

        goto label13;

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label17:
        if r2 != null goto label21;

        $r31 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        i6 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        if i6 <= 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Lights List:");

        i7 = 0;

     label18:
        if i7 >= i6 goto label19;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r67 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $r70 = virtualinvoke $r67.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r69 = (java.lang.String) $r70;

        $r64 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r63);

        i7 = i7 + 1;

        goto label18;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label20:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mUseAttentionLight=");

        $z4 = r0.<com.android.server.notification.NotificationManagerService: boolean mUseAttentionLight>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNotificationPulseEnabled=");

        $z5 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled>;

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSoundNotification=");

        $r38 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mSoundNotification>;

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mVibrateNotification=");

        $r49 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mVibrateNotification>;

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDisableNotificationEffects=");

        $z6 = r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects>;

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallState=");

        $i3 = r0.<com.android.server.notification.NotificationManagerService: int mCallState>;

        $r52 = staticinvoke <com.android.server.notification.NotificationManagerService: java.lang.String callStateToString(int)>($i3);

        $r59 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSystemReady=");

        $z7 = r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady>;

        $r56 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r57);

     label21:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mArchive=");

        $r19 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        $r22 = virtualinvoke $r19.<com.android.server.notification.NotificationManagerService$Archive: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r23 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        r82 = virtualinvoke $r23.<com.android.server.notification.NotificationManagerService$Archive: java.util.Iterator descendingIterator()>();

        i8 = 0;

     label22:
        $z1 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r25 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.service.notification.StatusBarNotification) $r25;

        if r2 == null goto label23;

        $z3 = virtualinvoke r2.<com.android.server.notification.NotificationManagerService$DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>(r5);

        if $z3 != 0 goto label23;

        goto label22;

     label23:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        i8 = i8 + 1;

        if i8 < 5 goto label24;

        $z2 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label25;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    ...");

        goto label25;

     label24:
        goto label22;

     label25:
        if z0 != 0 goto label26;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\n  Usage Stats:");

        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r17.<com.android.server.notification.NotificationUsageStats: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, "    ", r2);

     label26:
        if r2 == null goto label27;

        if z0 == 0 goto label28;

     label27:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\n  Zen Mode:");

        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        virtualinvoke $r8.<com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String)>(r1, "    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\n  Zen Log:");

        staticinvoke <com.android.server.notification.ZenLog: void dump(java.io.PrintWriter,java.lang.String)>(r1, "    ");

     label28:
        if z0 != 0 goto label32;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\n  Ranking Config:");

        $r10 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r10.<com.android.server.notification.RankingHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, "    ", r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\n  Notification listeners:");

        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r11.<com.android.server.notification.NotificationManagerService$NotificationListeners: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    mListenerHints: ");

        $i2 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    mListenersDisablingEffects: (");

        $r12 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects>;

        i9 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        i10 = 0;

     label29:
        if i10 >= i9 goto label31;

        $r13 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects>;

        $r15 = virtualinvoke $r13.<android.util.ArraySet: java.lang.Object valueAt(int)>(i10);

        r83 = (com.android.server.notification.ManagedServices$ManagedServiceInfo) $r15;

        if i10 <= 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

     label30:
        $r14 = r83.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r14);

        i10 = i10 + 1;

        goto label29;

     label31:
        virtualinvoke r1.<java.io.PrintWriter: void println(char)>(41);

     label32:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\n  Condition providers:");

        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        virtualinvoke $r9.<com.android.server.notification.ConditionProviders: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>(r1, r2);

        exitmonitor r80;

     label33:
        goto label36;

     label34:
        $r76 := @caughtexception;

        r6 = $r76;

        exitmonitor r80;

     label35:
        throw r6;

     label36:
        return;

        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label12 to label33 with label34;
        catch java.lang.Throwable from label34 to label35 with label34;
    }

    void enqueueNotificationInternal(java.lang.String, java.lang.String, int, int, java.lang.String, int, android.app.Notification, int[], int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, r3, $r13, $r19, $r32, $r36, $r41, $r42;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9;
        android.app.Notification r4;
        int[] r5;
        boolean z0, z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9;
        android.os.UserHandle r6, $r11;
        java.util.ArrayList r7, $r31, $r34, $r35;
        java.lang.Throwable r8, $r47;
        com.android.server.notification.NotificationRecord r9;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r10;
        java.lang.IllegalArgumentException $r12, $r26;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r24, $r25, $r27, $r28, $r29, $r30, $r33, $r39, $r43, $r44, $r45, $r46;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r22;
        com.android.server.notification.NotificationManagerService$7 $r23;
        android.service.notification.StatusBarNotification $r37, $r40;
        java.lang.Object $r38;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        r4 := @parameter6: android.app.Notification;

        r5 := @parameter7: int[];

        i3 := @parameter8: int;

        staticinvoke <com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r1);

        $z2 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean isUidSystem(int)>(i0);

        if $z2 != 0 goto label01;

        $r42 = "android";

        $z8 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z8 == 0 goto label02;

     label01:
        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z0 = $z9;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        z1 = staticinvoke <com.android.server.notification.NotificationManagerService$NotificationListeners: boolean access$3000(com.android.server.notification.NotificationManagerService$NotificationListeners,java.lang.String)>($r10, r1);

        i4 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i1, i0, i3, 1, 0, "enqueueNotification", r1);

        $r11 = new android.os.UserHandle;

        specialinvoke $r11.<android.os.UserHandle: void <init>(int)>(i4);

        r6 = $r11;

        if z0 != 0 goto label12;

        if z1 != 0 goto label12;

        $r31 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r7 = $r31;

        entermonitor $r31;

     label04:
        i5 = 0;

        $r35 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i7 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        i6 = 0;

     label05:
        if i6 >= i7 goto label08;

        $r34 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r38 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r9 = (com.android.server.notification.NotificationRecord) $r38;

        $r37 = r9.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r36 = virtualinvoke $r37.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z7 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label07;

        $r40 = r9.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i9 = virtualinvoke $r40.<android.service.notification.StatusBarNotification: int getUserId()>();

        if $i9 != i4 goto label07;

        i5 = i5 + 1;

        if i5 < 50 goto label07;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package has already posted ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notifications.  Not showing more.  package=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r41 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r41);

        exitmonitor r7;

     label06:
        return;

     label07:
        i6 = i6 + 1;

        goto label05;

     label08:
        exitmonitor r7;

     label09:
        goto label12;

     label10:
        $r47 := @caughtexception;

        r8 = $r47;

        exitmonitor r7;

     label11:
        throw r8;

     label12:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("com.android.providers.downloads");

        if $z3 == 0 goto label13;

        $z6 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DownloadManager", 2);

        if $z6 == 0 goto label14;

     label13:
        $r13 = virtualinvoke r4.<android.app.Notification: java.lang.String toString()>();

        staticinvoke <com.android.server.EventLogTags: void writeNotificationEnqueue(int,int,java.lang.String,int,java.lang.String,int,java.lang.String)>(i0, i1, r1, i2, r3, i4, $r13);

     label14:
        if r1 == null goto label15;

        if r4 != null goto label16;

     label15:
        $r12 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null not allowed: pkg=");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notification=");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r12;

     label16:
        $i8 = r4.<android.app.Notification: int icon>;

        if $i8 == 0 goto label17;

        $z5 = virtualinvoke r4.<android.app.Notification: boolean isValid()>();

        if $z5 != 0 goto label17;

        $r26 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid notification (): pkg=");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notification=");

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r26;

     label17:
        $r22 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r23 = new com.android.server.notification.NotificationManagerService$7;

        specialinvoke $r23.<com.android.server.notification.NotificationManagerService$7: void <init>(com.android.server.notification.NotificationManagerService,android.app.Notification,java.lang.String,java.lang.String,int,java.lang.String,int,int,android.os.UserHandle,boolean)>(r0, r4, r1, r2, i2, r3, i0, i1, r6, z0);

        virtualinvoke $r22.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r23);

        r5[0] = i2;

        return;

        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void buzzBeepBlinkLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, $r13, $r21;
        boolean z0, z1, z2, z3, $z4, $z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, z24, z25, z26, z27, z28;
        android.app.Notification r2;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        long l1, l2, l3;
        java.lang.Throwable r3, r7, r10, $r64, $r65, $r66;
        android.net.Uri r4, $r26, $r48, $r49;
        android.content.ContentResolver r5;
        android.media.AudioAttributes r6, $r32, $r41, $r44;
        android.media.IRingtonePlayer r8;
        android.service.notification.StatusBarNotification $r9, $r24, $r27, $r30, $r35, $r37, $r45, $r59;
        java.lang.String $r11, $r18, $r19, $r20, $r23, $r29, $r36, $r50, $r58, $r62, r67;
        java.util.ArrayList $r12, $r14;
        java.lang.Runnable $r15;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r16;
        com.android.server.lights.Light $r17;
        android.media.AudioManager $r22, $r28, $r39, $r42, $r43, $r47;
        long[] $r25, $r33, $r34, $r40;
        android.os.Vibrator $r31, $r38;
        byte $b16, $b22;
        android.os.UserHandle $r46;
        android.content.Context $r51;
        java.lang.StringBuilder $r52, $r54, $r55, $r56, $r57, $r60, $r63;
        com.android.server.notification.ManagedServices$UserProfiles $r53;
        android.os.RemoteException $r61;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 = 0;

        $r9 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r2 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i4 = r1.<com.android.server.notification.NotificationRecord: int score>;

        if $i4 < -10 goto label01;

        $z22 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if $z22 != 0 goto label01;

        $z23 = 1;

        goto label02;

     label01:
        $z23 = 0;

     label02:
        z1 = $z23;

        $z4 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if $z4 == 0 goto label03;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pkg=");

        $r59 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r58 = virtualinvoke $r59.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" canInterrupt=");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intercept=");

        $z21 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        $r63 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z21);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r62);

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label08;

     label06:
        $r64 := @caughtexception;

        r3 = $r64;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label08:
        r67 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String disableNotificationEffects(com.android.server.notification.NotificationRecord)>(r1);

        if r67 == null goto label09;

        staticinvoke <com.android.server.notification.ZenLog: void traceDisableEffects(com.android.server.notification.NotificationRecord,java.lang.String)>(r1, r67);

     label09:
        if r67 != null goto label52;

        $z10 = r1.<com.android.server.notification.NotificationRecord: boolean isUpdate>;

        if $z10 == 0 goto label10;

        $i28 = r2.<android.app.Notification: int flags>;

        $i27 = $i28 & 8;

        if $i27 != 0 goto label52;

     label10:
        $i7 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i7 == -1 goto label11;

        $i30 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i30 == i0 goto label11;

        $r53 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $i29 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $z20 = virtualinvoke $r53.<com.android.server.notification.ManagedServices$UserProfiles: boolean isCurrentProfile(int)>($i29);

        if $z20 == 0 goto label52;

     label11:
        if z1 == 0 goto label52;

        $z9 = r0.<com.android.server.notification.NotificationManagerService: boolean mSystemReady>;

        if $z9 == 0 goto label52;

        $r22 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        if $r22 == null goto label52;

        $r24 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r23 = virtualinvoke $r24.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void sendAccessibilityEvent(android.app.Notification,java.lang.CharSequence)>(r2, $r23);

        $i9 = r2.<android.app.Notification: int defaults>;

        $i8 = $i9 & 1;

        if $i8 != 0 goto label12;

        $r49 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        $r48 = r2.<android.app.Notification: android.net.Uri sound>;

        $z17 = virtualinvoke $r49.<android.net.Uri: boolean equals(java.lang.Object)>($r48);

        if $z17 == 0 goto label13;

     label12:
        $z18 = 1;

        goto label14;

     label13:
        $z18 = 0;

     label14:
        z2 = $z18;

        r4 = null;

        z3 = 0;

        if z2 == 0 goto label17;

        r4 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        $r51 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r5 = virtualinvoke $r51.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r50 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r5, "notification_sound");

        if $r50 == null goto label15;

        $z19 = 1;

        goto label16;

     label15:
        $z19 = 0;

     label16:
        z3 = $z19;

        goto label20;

     label17:
        $r26 = r2.<android.app.Notification: android.net.Uri sound>;

        if $r26 == null goto label20;

        r4 = r2.<android.app.Notification: android.net.Uri sound>;

        if r4 == null goto label18;

        $z15 = 1;

        goto label19;

     label18:
        $z15 = 0;

     label19:
        z3 = $z15;

     label20:
        if z3 == 0 goto label31;

        $i25 = r2.<android.app.Notification: int flags>;

        $i26 = $i25 & 4;

        if $i26 == 0 goto label21;

        $z14 = 1;

        goto label22;

     label21:
        $z14 = 0;

     label22:
        z24 = $z14;

        $r44 = r2.<android.app.Notification: android.media.AudioAttributes audioAttributes>;

        if $r44 == null goto label23;

        r6 = r2.<android.app.Notification: android.media.AudioAttributes audioAttributes>;

        goto label24;

     label23:
        r6 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

     label24:
        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mSoundNotification> = r1;

        $r42 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $i23 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>(r6);

        $i24 = virtualinvoke $r42.<android.media.AudioManager: int getStreamVolume(int)>($i23);

        if $i24 == 0 goto label31;

        $r43 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $z16 = virtualinvoke $r43.<android.media.AudioManager: boolean isAudioFocusExclusive()>();

        if $z16 != 0 goto label31;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label25:
        $r47 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        r8 = virtualinvoke $r47.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

        if r8 == null goto label26;

        $r45 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r46 = virtualinvoke $r45.<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>();

        interfaceinvoke r8.<android.media.IRingtonePlayer: void playAsync(android.net.Uri,android.os.UserHandle,boolean,android.media.AudioAttributes)>(r4, $r46, z24, r6);

        z0 = 1;

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label31;

     label27:
        $r61 := @caughtexception;

     label28:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label31;

     label29:
        $r66 := @caughtexception;

        r7 = $r66;

     label30:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r7;

     label31:
        $r25 = r2.<android.app.Notification: long[] vibrate>;

        if $r25 == null goto label32;

        $z13 = 1;

        goto label33;

     label32:
        $z13 = 0;

     label33:
        z25 = $z13;

        if z25 != 0 goto label34;

        if z3 == 0 goto label34;

        $r39 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $i21 = virtualinvoke $r39.<android.media.AudioManager: int getRingerMode()>();

        if $i21 != 1 goto label34;

        $z12 = 1;

        goto label35;

     label34:
        $z12 = 0;

     label35:
        z26 = $z12;

        $i11 = r2.<android.app.Notification: int defaults>;

        $i10 = $i11 & 2;

        if $i10 == 0 goto label36;

        $z11 = 1;

        goto label37;

     label36:
        $z11 = 0;

     label37:
        z27 = $z11;

        if z27 != 0 goto label38;

        if z26 != 0 goto label38;

        if z25 == 0 goto label52;

     label38:
        $r28 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        $i12 = virtualinvoke $r28.<android.media.AudioManager: int getRingerMode()>();

        if $i12 == 0 goto label52;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mVibrateNotification> = r1;

        if z27 != 0 goto label39;

        if z26 == 0 goto label49;

     label39:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label40:
        $r31 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        $r27 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i13 = virtualinvoke $r27.<android.service.notification.StatusBarNotification: int getUid()>();

        $r30 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r29 = virtualinvoke $r30.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        if z27 == 0 goto label41;

        $r34 = r0.<com.android.server.notification.NotificationManagerService: long[] mDefaultVibrationPattern>;

        goto label42;

     label41:
        $r34 = r0.<com.android.server.notification.NotificationManagerService: long[] mFallbackVibrationPattern>;

     label42:
        $i14 = r2.<android.app.Notification: int flags>;

        $i15 = $i14 & 4;

        if $i15 == 0 goto label43;

        $b16 = 0;

        goto label44;

     label43:
        $b16 = -1;

     label44:
        $r32 = staticinvoke <com.android.server.notification.NotificationManagerService: android.media.AudioAttributes audioAttributesForNotification(android.app.Notification)>(r2);

        virtualinvoke $r31.<android.os.Vibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>($i13, $r29, $r34, $b16, $r32);

        z0 = 1;

     label45:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label48;

     label46:
        $r65 := @caughtexception;

        r10 = $r65;

     label47:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r10;

     label48:
        goto label52;

     label49:
        $r33 = r2.<android.app.Notification: long[] vibrate>;

        $i19 = lengthof $r33;

        if $i19 <= 1 goto label52;

        $r38 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        $r37 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i20 = virtualinvoke $r37.<android.service.notification.StatusBarNotification: int getUid()>();

        $r35 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r36 = virtualinvoke $r35.<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>();

        $r40 = r2.<android.app.Notification: long[] vibrate>;

        $i17 = r2.<android.app.Notification: int flags>;

        $i18 = $i17 & 4;

        if $i18 == 0 goto label50;

        $b22 = 0;

        goto label51;

     label50:
        $b22 = -1;

     label51:
        $r41 = staticinvoke <com.android.server.notification.NotificationManagerService: android.media.AudioAttributes audioAttributesForNotification(android.app.Notification)>(r2);

        virtualinvoke $r38.<android.os.Vibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>($i20, $r36, $r40, $b22, $r41);

        z0 = 1;

     label52:
        $r12 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $r11 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        z28 = virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>($r11);

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification>;

        if $r13 == null goto label53;

        $r20 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $r21 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification>;

        $r19 = virtualinvoke $r21.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z8 == 0 goto label53;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification> = null;

     label53:
        $i6 = r2.<android.app.Notification: int flags>;

        $i5 = $i6 & 1;

        if $i5 == 0 goto label55;

        if z1 == 0 goto label55;

        $r14 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $r18 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

        $z6 = r0.<com.android.server.notification.NotificationManagerService: boolean mUseAttentionLight>;

        if $z6 == 0 goto label54;

        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.Light mAttentionLight>;

        virtualinvoke $r17.<com.android.server.lights.Light: void pulse()>();

     label54:
        z0 = 1;

        goto label56;

     label55:
        if z28 == 0 goto label56;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

     label56:
        if z0 == 0 goto label57;

        $r16 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r15 = r0.<com.android.server.notification.NotificationManagerService: java.lang.Runnable mBuzzBeepBlinked>;

        virtualinvoke $r16.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r15);

     label57:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
        catch java.lang.Throwable from label40 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
    }

    private static android.media.AudioAttributes audioAttributesForNotification(android.app.Notification)
    {
        android.app.Notification r0;
        android.media.AudioAttributes $r1, $r5, $r6, $r8, $r10;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;
        android.media.AudioAttributes$Builder $r7, $r9;

        r0 := @parameter0: android.app.Notification;

        $r1 = r0.<android.app.Notification: android.media.AudioAttributes audioAttributes>;

        if $r1 == null goto label1;

        $r10 = r0.<android.app.Notification: android.media.AudioAttributes audioAttributes>;

        return $r10;

     label1:
        $i0 = r0.<android.app.Notification: int audioStreamType>;

        if $i0 < 0 goto label2;

        $i4 = r0.<android.app.Notification: int audioStreamType>;

        $i5 = staticinvoke <android.media.AudioSystem: int getNumStreamTypes()>();

        if $i4 >= $i5 goto label2;

        $r7 = new android.media.AudioAttributes$Builder;

        specialinvoke $r7.<android.media.AudioAttributes$Builder: void <init>()>();

        $i6 = r0.<android.app.Notification: int audioStreamType>;

        $r9 = virtualinvoke $r7.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setInternalLegacyStreamType(int)>($i6);

        $r8 = virtualinvoke $r9.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        return $r8;

     label2:
        $i1 = r0.<android.app.Notification: int audioStreamType>;

        if $i1 != -1 goto label3;

        $r6 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        return $r6;

     label3:
        $r2 = newarray (java.lang.Object)[1];

        $i2 = r0.<android.app.Notification: int audioStreamType>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid stream type: %d", $r2);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotificationService", $r4);

        $r5 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        return $r5;
    }

    void showNextToastLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$ToastRecord r1;
        int i0, $i2, $i3;
        java.util.ArrayList $r3, $r15, $r16, $r17, $r18;
        java.lang.Object $r4, $r19;
        android.app.ITransientNotification $r5, $r9;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r12, $r14;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.notification.NotificationManagerService$ToastRecord) $r4;

     label1:
        if r1 == null goto label8;

     label2:
        $r5 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        interfaceinvoke $r5.<android.app.ITransientNotification: void show()>();

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleTimeoutLocked(com.android.server.notification.NotificationManagerService$ToastRecord)>(r1);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object died trying to show notification ");

        $r9 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r12 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r14);

        $r15 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke $r15.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label5;

        $r18 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r18.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label5:
        $i2 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: int pid>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void keepProcessAliveLocked(int)>($i2);

        $r16 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i3 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label6;

        $r17 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r19 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.notification.NotificationManagerService$ToastRecord) $r19;

        goto label7;

     label6:
        r1 = null;

     label7:
        goto label1;

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void cancelToastLocked(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, $i1, $i2;
        com.android.server.notification.NotificationManagerService$ToastRecord r1;
        java.util.ArrayList $r3, $r6, $r8;
        java.lang.Object $r4;
        android.app.ITransientNotification $r5, $r13;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r17;
        java.lang.String $r14, $r16;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.notification.NotificationManagerService$ToastRecord) $r4;

     label1:
        $r5 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        interfaceinvoke $r5.<android.app.ITransientNotification: void hide()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object died trying to hide notification ");

        $r13 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r14 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r16);

     label4:
        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $i1 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: int pid>;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void keepProcessAliveLocked(int)>($i1);

        $r8 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label5;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void showNextToastLocked()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void scheduleTimeoutLocked(com.android.server.notification.NotificationManagerService$ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$ToastRecord r1;
        android.os.Message r2;
        long l0, $l2;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r3, $r4, $r5;
        int $i1;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationManagerService$ToastRecord;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r3.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeCallbacksAndMessages(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r4, 2, r1);

        $i1 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: int duration>;

        if $i1 != 1 goto label1;

        $l2 = 3500L;

        goto label2;

     label1:
        $l2 = 2000L;

     label2:
        l0 = $l2;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l0);

        return;
    }

    private void handleTimeout(com.android.server.notification.NotificationManagerService$ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$ToastRecord r1;
        java.util.ArrayList r2, $r4;
        int i0;
        java.lang.Throwable r3, $r7;
        android.app.ITransientNotification $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationManagerService$ToastRecord;

        $r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r6 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $r5 = r1.<com.android.server.notification.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        i0 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.app.ITransientNotification)>($r6, $r5);

        if i0 < 0 goto label2;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelToastLocked(int)>(i0);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    int indexOfToastLocked(java.lang.String, android.app.ITransientNotification)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r7;
        android.app.ITransientNotification r2, $r8;
        android.os.IBinder r3, $r9;
        java.util.ArrayList r4;
        int i0, i1;
        com.android.server.notification.NotificationManagerService$ToastRecord r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.ITransientNotification;

        r3 = interfaceinvoke r2.<android.app.ITransientNotification: android.os.IBinder asBinder()>();

        r4 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.notification.NotificationManagerService$ToastRecord) $r6;

        $r7 = r5.<com.android.server.notification.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r8 = r5.<com.android.server.notification.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        $r9 = interfaceinvoke $r8.<android.app.ITransientNotification: android.os.IBinder asBinder()>();

        if $r9 != r3 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    void keepProcessAliveLocked(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r1;
        com.android.server.notification.NotificationManagerService$ToastRecord r2;
        android.os.IBinder $r3;
        android.app.IActivityManager $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 = 0;

        r1 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.notification.NotificationManagerService$ToastRecord) $r5;

        $i4 = r2.<com.android.server.notification.NotificationManagerService$ToastRecord: int pid>;

        if $i4 != i0 goto label2;

        i1 = i1 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: android.app.IActivityManager mAm>;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: android.os.IBinder mForegroundToken>;

        if i1 <= 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        interfaceinvoke $r4.<android.app.IActivityManager: void setProcessForeground(android.os.IBinder,int,boolean)>($r3, i0, $z0);

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

     label8:
        return;

        catch android.os.RemoteException from label3 to label6 with label7;
    }

    private void handleRankingReconsideration(android.os.Message)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Message r1;
        com.android.server.notification.RankingReconsideration r2;
        boolean z0, z1, z2, $z3, $z4;
        java.util.ArrayList r3, $r9, $r12;
        com.android.server.notification.NotificationRecord r4;
        int i0, i1, i2, i3;
        java.lang.Throwable r5, $r14;
        java.lang.Object $r6, $r7, $r10;
        android.util.ArrayMap $r8;
        java.lang.String $r11;
        com.android.server.notification.RankingHelper $r13;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.os.Message;

        $r6 = r1.<android.os.Message: java.lang.Object obj>;

        $z3 = $r6 instanceof com.android.server.notification.RankingReconsideration;

        if $z3 != 0 goto label01;

        return;

     label01:
        $r7 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.server.notification.RankingReconsideration) $r7;

        virtualinvoke r2.<com.android.server.notification.RankingReconsideration: void run()>();

        $r9 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r3 = $r9;

        entermonitor $r9;

     label02:
        $r8 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r11 = virtualinvoke r2.<com.android.server.notification.RankingReconsideration: java.lang.String getKey()>();

        $r10 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r4 = (com.android.server.notification.NotificationRecord) $r10;

        if r4 != null goto label04;

        exitmonitor r3;

     label03:
        return;

     label04:
        i0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int findNotificationRecordIndexLocked(com.android.server.notification.NotificationRecord)>(r4);

        z1 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        i1 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        virtualinvoke r2.<com.android.server.notification.RankingReconsideration: void applyChangesLocked(com.android.server.notification.NotificationRecord)>(r4);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void applyZenModeLocked(com.android.server.notification.NotificationRecord)>(r4);

        $r13 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r12 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r13.<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>($r12);

        i2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: int findNotificationRecordIndexLocked(com.android.server.notification.NotificationRecord)>(r4);

        z2 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        i3 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        if i0 != i2 goto label05;

        if z1 != z2 goto label05;

        if i1 == i3 goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        z0 = $z4;

        if z1 == 0 goto label08;

        if z2 != 0 goto label08;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void buzzBeepBlinkLocked(com.android.server.notification.NotificationRecord)>(r4);

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r3;

     label11:
        throw r5;

     label12:
        if z0 == 0 goto label13;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleSendRankingUpdate()>();

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void handleRankingConfigChange()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, r2, $r6, $r7, $r8, $r9, $r11, $r17;
        int i0, i1, $i2, $i3, $i4, i5;
        int[] r3;
        com.android.server.notification.NotificationRecord r4, r21;
        java.lang.Throwable r5, $r20;
        com.android.server.notification.RankingHelper $r10, $r19;
        java.lang.Object $r12, $r13, $r16;
        java.lang.String $r14, $r15, $r18;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r8;

        r3 = newarray (int)[i0];

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        $r17 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r16 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.notification.NotificationRecord) $r16;

        $r18 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $i4 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        r3[i1] = $i4;

        $r19 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        virtualinvoke $r19.<com.android.server.notification.RankingHelper: void extractSignals(com.android.server.notification.NotificationRecord)>(r4);

        i1 = i1 + 1;

        goto label02;

     label03:
        i5 = 0;

     label04:
        if i5 >= i0 goto label08;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r9 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r10.<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>($r9);

        $r11 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r21 = (com.android.server.notification.NotificationRecord) $r13;

        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r15 = (java.lang.String) $r12;

        $r14 = virtualinvoke r21.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label05;

        $i3 = r3[i5];

        $i2 = virtualinvoke r21.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        if $i3 == $i2 goto label07;

     label05:
        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void scheduleSendRankingUpdate()>();

        exitmonitor r1;

     label06:
        return;

     label07:
        i5 = i5 + 1;

        goto label04;

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        return;

        catch java.lang.Throwable from label01 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void applyZenModeLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        com.android.server.notification.ZenModeHelper $r2;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        $z0 = virtualinvoke $r2.<com.android.server.notification.ZenModeHelper: boolean shouldIntercept(com.android.server.notification.NotificationRecord)>(r1);

        virtualinvoke r1.<com.android.server.notification.NotificationRecord: boolean setIntercepted(boolean)>($z0);

        return;
    }

    private int findNotificationRecordIndexLocked(com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.util.ArrayList $r2;
        com.android.server.notification.RankingHelper $r3;
        int $i0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i0 = virtualinvoke $r3.<com.android.server.notification.RankingHelper: int indexOf(java.util.ArrayList,com.android.server.notification.NotificationRecord)>($r2, r1);

        return $i0;
    }

    private void scheduleSendRankingUpdate()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Message r1;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r2, $r3, $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeMessages(int)>(6);

        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r3, 6);

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    private void handleSendRankingUpdate()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyRankingUpdateLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void scheduleListenerHintsChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeMessages(int)>(7);

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: android.os.Message obtainMessage(int,int,int)>(7, i0, 0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void scheduleInterruptionFilterChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r1.<com.android.server.notification.NotificationManagerService$WorkerHandler: void removeMessages(int)>(8);

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.notification.NotificationManagerService$WorkerHandler: android.os.Message obtainMessage(int,int,int)>(8, i0, 0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void handleListenerHintsChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.util.ArrayList r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyListenerHintsChangedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void handleListenerInterruptionFilterChanged(int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;
        java.util.ArrayList r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        virtualinvoke $r4.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyInterruptionFilterChanged(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static int clamp(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        $i3 = i1;

        goto label3;

     label1:
        if i0 <= i2 goto label2;

        $i3 = i2;

        goto label3;

     label2:
        $i3 = i0;

     label3:
        return $i3;
    }

    void sendAccessibilityEvent(android.app.Notification, java.lang.CharSequence)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.Notification r1;
        java.lang.CharSequence r2, r5;
        android.view.accessibility.AccessibilityManager r3;
        android.view.accessibility.AccessibilityEvent r4;
        android.content.Context $r6;
        boolean $z0, $z1;
        java.lang.Class $r7;
        java.lang.String $r8;
        java.util.List $r9;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.app.Notification;

        r2 := @parameter1: java.lang.CharSequence;

        $r6 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        r3 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r6);

        $z0 = virtualinvoke r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(64);

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>(r2);

        $r7 = class "android/app/Notification";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r8);

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)>(r1);

        r5 = r1.<android.app.Notification: java.lang.CharSequence tickerText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 != 0 goto label2;

        $r9 = virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        virtualinvoke r3.<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r4);

        return;
    }

    private void cancelNotificationLocked(com.android.server.notification.NotificationRecord, boolean, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, $r7, $r8, $r12;
        boolean z0;
        int i0, $i1;
        android.app.PendingIntent$CanceledException r2, $r33;
        android.media.IRingtonePlayer r3;
        java.lang.Throwable r4, r5, $r29, $r39;
        android.app.Notification $r6, $r24, $r30;
        java.util.ArrayList $r9;
        java.lang.String $r10, $r16, $r36, $r38;
        com.android.server.notification.NotificationUsageStats $r11, $r19, $r20, $r21;
        android.util.ArrayMap $r13;
        android.service.notification.StatusBarNotification $r14, $r18, $r26, $r37;
        com.android.server.notification.NotificationManagerService$Archive $r17;
        android.os.Vibrator $r22;
        android.media.AudioManager $r23;
        android.app.PendingIntent $r25, $r31;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r27;
        android.os.RemoteException $r28;
        java.lang.StringBuilder $r32, $r34, $r35;
        long l3, l4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        if z0 == 0 goto label04;

        $r24 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $r25 = $r24.<android.app.Notification: android.app.PendingIntent deleteIntent>;

        if $r25 == null goto label04;

     label01:
        $r30 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $r31 = $r30.<android.app.Notification: android.app.PendingIntent deleteIntent>;

        virtualinvoke $r31.<android.app.PendingIntent: void send()>();

     label02:
        goto label04;

     label03:
        $r33 := @caughtexception;

        r2 = $r33;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canceled PendingIntent for ");

        $r37 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r38 = virtualinvoke $r37.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r36, r2);

     label04:
        $r6 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $i1 = $r6.<android.app.Notification: int icon>;

        if $i1 == 0 goto label05;

        r1.<com.android.server.notification.NotificationRecord: boolean isCanceled> = 1;

        $r27 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        $r26 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        virtualinvoke $r27.<com.android.server.notification.NotificationManagerService$NotificationListeners: void notifyRemovedLocked(android.service.notification.StatusBarNotification)>($r26);

     label05:
        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mSoundNotification>;

        if $r7 != r1 goto label12;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mSoundNotification> = null;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r23 = r0.<com.android.server.notification.NotificationManagerService: android.media.AudioManager mAudioManager>;

        r3 = virtualinvoke $r23.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

        if r3 == null goto label07;

        interfaceinvoke r3.<android.media.IRingtonePlayer: void stopAsync()>();

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label12;

     label08:
        $r28 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label12;

     label10:
        $r29 := @caughtexception;

        r4 = $r29;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r4;

     label12:
        $r8 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mVibrateNotification>;

        if $r8 != r1 goto label17;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mVibrateNotification> = null;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label13:
        $r22 = r0.<com.android.server.notification.NotificationManagerService: android.os.Vibrator mVibrator>;

        virtualinvoke $r22.<android.os.Vibrator: void cancel()>();

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        goto label17;

     label15:
        $r39 := @caughtexception;

        r5 = $r39;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r5;

     label17:
        $r9 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $r10 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>($r10);

        $r12 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification>;

        if $r12 != r1 goto label18;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification> = null;

     label18:
        tableswitch(i0)
        {
            case 1: goto label21;
            case 2: goto label19;
            case 3: goto label19;
            case 4: goto label22;
            case 5: goto label22;
            case 6: goto label22;
            case 7: goto label22;
            case 8: goto label20;
            case 9: goto label20;
            case 10: goto label19;
            case 11: goto label19;
            default: goto label22;
        };

     label19:
        $r11 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r11.<com.android.server.notification.NotificationUsageStats: void registerDismissedByUser(com.android.server.notification.NotificationRecord)>(r1);

        goto label23;

     label20:
        $r20 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r20.<com.android.server.notification.NotificationUsageStats: void registerRemovedByApp(com.android.server.notification.NotificationRecord)>(r1);

        goto label23;

     label21:
        $r19 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r19.<com.android.server.notification.NotificationUsageStats: void registerCancelDueToClick(com.android.server.notification.NotificationRecord)>(r1);

        goto label23;

     label22:
        $r21 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        virtualinvoke $r21.<com.android.server.notification.NotificationUsageStats: void registerCancelUnknown(com.android.server.notification.NotificationRecord)>(r1);

     label23:
        $r13 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r14 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r16 = virtualinvoke $r14.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r16);

        $r17 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        $r18 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        virtualinvoke $r17.<com.android.server.notification.NotificationManagerService$Archive: void record(android.service.notification.StatusBarNotification)>($r18);

        return;

        catch android.app.PendingIntent$CanceledException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    void cancelNotification(int, int, java.lang.String, java.lang.String, int, int, int, boolean, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, r2;
        boolean z0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r3;
        com.android.server.notification.NotificationManagerService$8 $r4;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r5;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        z0 := @parameter7: boolean;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        r3 := @parameter10: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        $r4 = new com.android.server.notification.NotificationManagerService$8;

        specialinvoke $r4.<com.android.server.notification.NotificationManagerService$8: void <init>(com.android.server.notification.NotificationManagerService,com.android.server.notification.ManagedServices$ManagedServiceInfo,int,int,java.lang.String,int,java.lang.String,int,int,int,int,boolean)>(r0, r3, i0, i1, r1, i2, r2, i5, i3, i4, i6, z0);

        virtualinvoke $r5.<com.android.server.notification.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    private boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        if i0 == -1 goto label1;

        $i1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i1 == -1 goto label1;

        $i2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i2 != i0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean notificationMatchesCurrentProfiles(com.android.server.notification.NotificationRecord, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        com.android.server.notification.ManagedServices$UserProfiles $r2;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r1, i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        $i1 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        $z1 = virtualinvoke $r2.<com.android.server.notification.ManagedServices$UserProfiles: boolean isCurrentProfile(int)>($i1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean cancelAllNotificationsInt(int, int, java.lang.String, int, int, boolean, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        java.lang.String r1, r3, $r10, $r21;
        boolean z0, $z1, $z2, $z4;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        java.util.ArrayList r4, r5, $r9, $r11, $r13, $r16, $r17;
        com.android.server.notification.NotificationRecord r6, $r14;
        android.content.ComponentName $r7;
        java.lang.Throwable r8, $r19;
        java.lang.Object $r12, $r15;
        android.service.notification.StatusBarNotification $r20;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        r2 := @parameter8: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        if r2 != null goto label01;

        $r10 = null;

        goto label02;

     label01:
        $r7 = r2.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        $r10 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String toShortString()>();

     label02:
        r3 = $r10;

        staticinvoke <com.android.server.EventLogTags: void writeNotificationCancelAll(int,int,java.lang.String,int,int,int,int,java.lang.String)>(i0, i1, r1, i4, i2, i3, i5, r3);

        $r9 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r4 = $r9;

        entermonitor $r9;

     label03:
        $r11 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i6 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        r5 = null;

        i7 = i6 - 1;

     label04:
        if i7 < 0 goto label14;

        $r13 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r6 = (com.android.server.notification.NotificationRecord) $r15;

        $z2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r6, i4);

        if $z2 != 0 goto label05;

        goto label13;

     label05:
        $i9 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if $i9 != -1 goto label06;

        if r1 != null goto label06;

        goto label13;

     label06:
        $i8 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $i11 = $i8 & i2;

        if $i11 == i2 goto label07;

        goto label13;

     label07:
        $i12 = virtualinvoke r6.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $i10 = $i12 & i3;

        if $i10 == 0 goto label08;

        goto label13;

     label08:
        if r1 == null goto label09;

        $r20 = r6.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r21 = virtualinvoke $r20.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label09;

        goto label13;

     label09:
        if r5 != null goto label10;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r5 = $r16;

     label10:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        if z0 != 0 goto label12;

        exitmonitor r4;

     label11:
        return 1;

     label12:
        $r17 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object remove(int)>(i7);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int)>(r6, 0, i5);

     label13:
        i7 = i7 + -1;

        goto label04;

     label14:
        if z0 == 0 goto label16;

        if r5 == null goto label16;

        i13 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i14 = 0;

     label15:
        if i14 >= i13 goto label16;

        $r12 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r14 = (com.android.server.notification.NotificationRecord) $r12;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord,int,int,java.lang.String)>($r14, i0, i1, r3);

        i14 = i14 + 1;

        goto label15;

     label16:
        if r5 == null goto label17;

        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

     label17:
        if r5 == null goto label18;

        $z1 = 1;

        goto label19;

     label18:
        $z1 = 0;

     label19:
        exitmonitor r4;

     label20:
        return $z1;

     label21:
        $r19 := @caughtexception;

        r8 = $r19;

        exitmonitor r4;

     label22:
        throw r8;

        catch java.lang.Throwable from label03 to label11 with label21;
        catch java.lang.Throwable from label12 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    void cancelAllLocked(int, int, int, int, com.android.server.notification.ManagedServices$ManagedServiceInfo, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, i9, i10;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        boolean z0, $z1, $z3;
        java.lang.String r2, $r6;
        java.util.ArrayList r3, $r7, $r10, $r13, $r14;
        com.android.server.notification.NotificationRecord r4, $r8;
        android.content.ComponentName $r5;
        java.lang.Object $r9, $r11;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        z0 := @parameter5: boolean;

        if r1 != null goto label01;

        $r6 = null;

        goto label02;

     label01:
        $r5 = r1.<com.android.server.notification.ManagedServices$ManagedServiceInfo: android.content.ComponentName component>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String toShortString()>();

     label02:
        r2 = $r6;

        staticinvoke <com.android.server.EventLogTags: void writeNotificationCancelAll(int,int,java.lang.String,int,int,int,int,java.lang.String)>(i0, i1, null, i2, 0, 0, i3, r2);

        r3 = null;

        $r7 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i5 = i4 - 1;

     label03:
        if i5 < 0 goto label08;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (com.android.server.notification.NotificationRecord) $r11;

        if z0 == 0 goto label04;

        $z3 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesCurrentProfiles(com.android.server.notification.NotificationRecord,int)>(r4, i2);

        if $z3 != 0 goto label05;

        goto label07;

     label04:
        $z1 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r4, i2);

        if $z1 != 0 goto label05;

        goto label07;

     label05:
        $i8 = virtualinvoke r4.<com.android.server.notification.NotificationRecord: int getFlags()>();

        $i7 = $i8 & 34;

        if $i7 != 0 goto label07;

        $r13 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int)>(r4, 1, i3);

        if r3 != null goto label06;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r3 = $r14;

     label06:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label07:
        i5 = i5 + -1;

        goto label03;

     label08:
        if r3 == null goto label09;

        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        goto label10;

     label09:
        $i6 = 0;

     label10:
        i9 = $i6;

        i10 = 0;

     label11:
        if i10 >= i9 goto label12;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r8 = (com.android.server.notification.NotificationRecord) $r9;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord,int,int,java.lang.String)>($r8, i0, i1, r2);

        i10 = i10 + 1;

        goto label11;

     label12:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

        return;
    }

    private void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord, int, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1, r5;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r2, r4, $r12, $r13, $r14;
        android.app.Notification r3, $r10;
        android.service.notification.StatusBarNotification r6, $r7;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r8, $r9, $r16;
        java.lang.Object $r11;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.NotificationRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z0 = virtualinvoke r3.<android.app.Notification: boolean isGroupSummary()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r1.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r4 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        i2 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: int getUserId()>();

        if r4 != null goto label2;

        return;

     label2:
        $r8 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i4 = i3 - 1;

     label3:
        if i4 < 0 goto label5;

        $r9 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (com.android.server.notification.NotificationRecord) $r11;

        r6 = r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r10 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>();

        $z1 = virtualinvoke $r10.<android.app.Notification: boolean isGroupChild()>();

        if $z1 == 0 goto label4;

        $r12 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $r13 = virtualinvoke r1.<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label4;

        $i5 = virtualinvoke r6.<android.service.notification.StatusBarNotification: int getId()>();

        $r14 = virtualinvoke r6.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        staticinvoke <com.android.server.EventLogTags: void writeNotificationCancel(int,int,java.lang.String,int,java.lang.String,int,int,int,int,java.lang.String)>(i0, i1, r4, $i5, $r14, i2, 0, 0, 12, r2);

        $r16 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r16.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int)>(r5, 0, 12);

     label4:
        i4 = i4 + -1;

        goto label3;

     label5:
        return;
    }

    void updateLightsLocked()
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        com.android.server.notification.NotificationRecord $r1, $r2, $r5, $r14;
        com.android.server.lights.Light $r3, $r9;
        com.android.server.statusbar.StatusBarManagerInternal $r4, $r7;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r6;
        java.util.ArrayList $r8, $r11;
        android.util.ArrayMap $r10;
        java.lang.Object $r12, $r13;
        android.app.Notification r15;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification>;

        if $r1 != null goto label1;

        $r8 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label1;

        $r10 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArrayMap mNotificationsByKey>;

        $r11 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mLights>;

        $i6 = i0 - 1;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r13);

        $r14 = (com.android.server.notification.NotificationRecord) $r12;

        r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification> = $r14;

     label1:
        $r2 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification>;

        if $r2 == null goto label2;

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mInCall>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn>;

        if $z1 == 0 goto label3;

     label2:
        $r3 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.Light mNotificationLight>;

        virtualinvoke $r3.<com.android.server.lights.Light: void turnOff()>();

        $r4 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.statusbar.StatusBarManagerInternal mStatusBar>;

        interfaceinvoke $r4.<com.android.server.statusbar.StatusBarManagerInternal: void notificationLightOff()>();

        goto label6;

     label3:
        $r5 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationRecord mLedNotification>;

        $r6 = $r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r15 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        i1 = r15.<android.app.Notification: int ledARGB>;

        i2 = r15.<android.app.Notification: int ledOnMS>;

        i3 = r15.<android.app.Notification: int ledOffMS>;

        $i4 = r15.<android.app.Notification: int defaults>;

        $i5 = $i4 & 4;

        if $i5 == 0 goto label4;

        i1 = r0.<com.android.server.notification.NotificationManagerService: int mDefaultNotificationColor>;

        i2 = r0.<com.android.server.notification.NotificationManagerService: int mDefaultNotificationLedOn>;

        i3 = r0.<com.android.server.notification.NotificationManagerService: int mDefaultNotificationLedOff>;

     label4:
        $z2 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled>;

        if $z2 == 0 goto label5;

        $r9 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.Light mNotificationLight>;

        virtualinvoke $r9.<com.android.server.lights.Light: void setFlashing(int,int,int,int)>(i1, 1, i2, i3);

     label5:
        $r7 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.statusbar.StatusBarManagerInternal mStatusBar>;

        interfaceinvoke $r7.<com.android.server.statusbar.StatusBarManagerInternal: void notificationLightPulse(int,int,int)>(i1, i2, i3);

     label6:
        return;
    }

    int indexOfNotificationLocked(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, r2, $r8, $r10, $r11;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r3;
        com.android.server.notification.NotificationRecord r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r6, $r7, $r9, $r12;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label6;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.notification.NotificationRecord) $r5;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.notification.NotificationRecord,int)>(r4, i1);

        if $z0 == 0 goto label5;

        $r6 = r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i4 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: int getId()>();

        if $i4 == i0 goto label2;

        goto label5;

     label2:
        if r2 != null goto label3;

        $r12 = r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r11 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        if $r11 == null goto label4;

        goto label5;

     label3:
        $r7 = r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r9 = r4.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

        return i3;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        return -1;
    }

    int indexOfNotificationLocked(java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1, $r6;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.notification.NotificationRecord $r5;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.notification.NotificationRecord) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.notification.NotificationRecord: java.lang.String getKey()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void updateNotificationPulse()
    {
        com.android.server.notification.NotificationManagerService r0;
        java.util.ArrayList r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r3 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        virtualinvoke r0.<com.android.server.notification.NotificationManagerService: void updateLightsLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static boolean isUidSystem(int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i1 == 1000 goto label1;

        if i1 == 1001 goto label1;

        if i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isCallerSystem()
    {
        int $i0;
        boolean $z0;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean isUidSystem(int)>($i0);

        return $z0;
    }

    private static void checkCallerIsSystem()
    {
        boolean $z0;
        java.lang.SecurityException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.SecurityException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call for uid ");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private static void checkCallerIsSystemOrSameApp(java.lang.String)
    {
        java.lang.String r0, $r12, $r15, $r24;
        int i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo r1;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r2;
        java.lang.SecurityException $r3, $r11, $r17;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r16, $r19, $r20, $r21, $r22, $r23;
        android.os.RemoteException $r18, r25;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label2:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r0, 0, $i1);

        if r1 != null goto label3;

        $r11 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label3:
        $i2 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, i0);

        if $z1 != 0 goto label4;

        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gave package");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is owned by uid ");

        $i3 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw $r3;

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r25 = $r18;

        $r17 = new java.lang.SecurityException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r17;

     label6:
        return;

        catch android.os.RemoteException from label2 to label4 with label5;
    }

    private static java.lang.String callStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "CALL_STATE_IDLE";

     label2:
        return "CALL_STATE_RINGING";

     label3:
        return "CALL_STATE_OFFHOOK";

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CALL_STATE_UNKNOWN_");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private void listenForCallState()
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.Context $r1;
        android.telephony.TelephonyManager $r2;
        com.android.server.notification.NotificationManagerService$9 $r3;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        $r1 = virtualinvoke r0.<com.android.server.notification.NotificationManagerService: android.content.Context getContext()>();

        $r2 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager 'from'(android.content.Context)>($r1);

        $r3 = new com.android.server.notification.NotificationManagerService$9;

        specialinvoke $r3.<com.android.server.notification.NotificationManagerService$9: void <init>(com.android.server.notification.NotificationManagerService)>(r0);

        virtualinvoke $r2.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r3, 32);

        return;
    }

    private android.service.notification.NotificationRankingUpdate makeRankingUpdateLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ArrayList r2, r3, $r6, $r7, $r8, $r14;
        android.os.Bundle r4, $r9;
        com.android.server.notification.NotificationRecord r5;
        java.lang.String[] $r10, $r13, r26, r27;
        java.lang.Object[] $r11, $r12;
        android.service.notification.NotificationRankingUpdate $r15;
        android.service.notification.StatusBarNotification $r16, $r18, $r20, $r22, $r23;
        java.lang.Object $r17;
        boolean $z0, $z2, $z3;
        java.lang.String $r19, $r24, $r25;
        android.app.Notification $r21;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        i0 = -1;

        $r6 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i1);

        r3 = $r8;

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        r4 = $r9;

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        $r14 = r0.<com.android.server.notification.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r17 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.notification.NotificationRecord) $r17;

        $r16 = r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isVisibleToListener(android.service.notification.StatusBarNotification,com.android.server.notification.ManagedServices$ManagedServiceInfo)>($r16, r1);

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        $r18 = r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r19 = virtualinvoke $r18.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        $z2 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: boolean isIntercepted()>();

        if $z2 == 0 goto label3;

        $r22 = r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r25 = virtualinvoke $r22.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

     label3:
        $i5 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        if $i5 == -1000 goto label4;

        $r23 = r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r24 = virtualinvoke $r23.<android.service.notification.StatusBarNotification: java.lang.String getKey()>();

        $i9 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>();

        virtualinvoke r4.<android.os.Bundle: void putInt(java.lang.String,int)>($r24, $i9);

     label4:
        if i0 != -1 goto label5;

        $z3 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: boolean isRecentlyIntrusive()>();

        if $z3 != 0 goto label5;

        $i6 = virtualinvoke r5.<com.android.server.notification.NotificationRecord: int getPackagePriority()>();

        if $i6 > 0 goto label5;

        $r20 = r5.<com.android.server.notification.NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r21 = virtualinvoke $r20.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $i7 = $r21.<android.app.Notification: int priority>;

        if $i7 != -2 goto label5;

        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i0 = $i8 - 1;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r10 = newarray (java.lang.String)[$i3];

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        r26 = (java.lang.String[]) $r11;

        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r13 = newarray (java.lang.String)[$i4];

        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        r27 = (java.lang.String[]) $r12;

        $r15 = new android.service.notification.NotificationRankingUpdate;

        specialinvoke $r15.<android.service.notification.NotificationRankingUpdate: void <init>(java.lang.String[],java.lang.String[],android.os.Bundle,int)>(r26, r27, r4, i0);

        return $r15;
    }

    private boolean isVisibleToListener(android.service.notification.StatusBarNotification, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.StatusBarNotification r1;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.notification.NotificationManagerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        r2 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $i0 = virtualinvoke r1.<android.service.notification.StatusBarNotification: int getUserId()>();

        $z0 = virtualinvoke r2.<com.android.server.notification.ManagedServices$ManagedServiceInfo: boolean enabledAndUserMatches(int)>($i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    static boolean access$002(com.android.server.notification.NotificationManagerService, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mDisableNotificationEffects> = z0;

        return z0;
    }

    static java.lang.String access$100(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        $r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: java.lang.String disableNotificationEffects(com.android.server.notification.NotificationRecord)>(r1);

        return $r2;
    }

    static int access$200()
    {
        int $i0;

        $i0 = <com.android.server.notification.NotificationManagerService: int MY_UID>;

        return $i0;
    }

    static int access$300()
    {
        int $i0;

        $i0 = <com.android.server.notification.NotificationManagerService: int MY_PID>;

        return $i0;
    }

    static com.android.server.notification.NotificationManagerService$NotificationListeners access$400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$NotificationListeners $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$NotificationListeners mListeners>;

        return $r1;
    }

    static com.android.server.notification.ConditionProviders access$500(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ConditionProviders $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ConditionProviders mConditionProviders>;

        return $r1;
    }

    static boolean access$602(com.android.server.notification.NotificationManagerService, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mScreenOn> = z0;

        return z0;
    }

    static boolean access$702(com.android.server.notification.NotificationManagerService, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mInCall> = z0;

        return z0;
    }

    static void access$800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateNotificationPulse()>();

        return;
    }

    static com.android.server.lights.Light access$900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.lights.Light $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.lights.Light mNotificationLight>;

        return $r1;
    }

    static com.android.server.notification.NotificationManagerService$SettingsObserver access$1000(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$SettingsObserver $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$SettingsObserver mSettingsObserver>;

        return $r1;
    }

    static com.android.server.notification.ManagedServices$UserProfiles access$1100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$UserProfiles $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ManagedServices$UserProfiles mUserProfiles>;

        return $r1;
    }

    static boolean access$1200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $z0 = r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled>;

        return $z0;
    }

    static boolean access$1202(com.android.server.notification.NotificationManagerService, boolean)
    {
        com.android.server.notification.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.notification.NotificationManagerService: boolean mNotificationPulseEnabled> = z0;

        return z0;
    }

    static void access$1400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateInterruptionFilterLocked()>();

        return;
    }

    static boolean access$1500()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.notification.NotificationManagerService: boolean isCallerSystem()>();

        return $z0;
    }

    static boolean access$1600(com.android.server.notification.NotificationManagerService, java.lang.String, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean noteNotificationOp(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static void access$1700(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.notification.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r0);

        return;
    }

    static void access$1800()
    {
        staticinvoke <com.android.server.notification.NotificationManagerService: void checkCallerIsSystem()>();

        return;
    }

    static android.app.AppOpsManager access$1900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.app.AppOpsManager $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        return $r1;
    }

    static com.android.server.notification.RankingHelper access$2000(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.RankingHelper $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.RankingHelper mRankingHelper>;

        return $r1;
    }

    static com.android.server.notification.NotificationManagerService$Archive access$2100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$Archive $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$Archive mArchive>;

        return $r1;
    }

    static boolean access$2200(com.android.server.notification.NotificationManagerService, android.service.notification.StatusBarNotification, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.service.notification.StatusBarNotification r1;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.service.notification.StatusBarNotification;

        r2 := @parameter2: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $z0 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: boolean isVisibleToListener(android.service.notification.StatusBarNotification,com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1, r2);

        return $z0;
    }

    static android.util.ArraySet access$2300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.util.ArraySet $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.util.ArraySet mListenersDisablingEffects>;

        return $r1;
    }

    static void access$2400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateListenerHintsLocked()>();

        return;
    }

    static void access$2500(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void updateEffectsSuppressorLocked()>();

        return;
    }

    static int access$2600(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mListenerHints>;

        return $i0;
    }

    static com.android.server.notification.ZenModeHelper access$2700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ZenModeHelper $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.ZenModeHelper mZenModeHelper>;

        return $r1;
    }

    static int access$2800(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mInterruptionFilter>;

        return $i0;
    }

    static android.content.ComponentName access$2900(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: android.content.ComponentName mEffectsSuppressor>;

        return $r1;
    }

    static void access$3100(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, int, int, java.lang.String)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelGroupChildrenLocked(com.android.server.notification.NotificationRecord,int,int,java.lang.String)>(r1, i0, i1, r2);

        return;
    }

    static com.android.server.notification.NotificationUsageStats access$3200(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationUsageStats $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationUsageStats mUsageStats>;

        return $r1;
    }

    static void access$3300(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void applyZenModeLocked(com.android.server.notification.NotificationRecord)>(r1);

        return;
    }

    static void access$3400(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void buzzBeepBlinkLocked(com.android.server.notification.NotificationRecord)>(r1);

        return;
    }

    static void access$3500(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationManagerService$ToastRecord)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$ToastRecord r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationManagerService$ToastRecord;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleTimeout(com.android.server.notification.NotificationManagerService$ToastRecord)>(r1);

        return;
    }

    static void access$3600(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>();

        return;
    }

    static void access$3700(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleSendRankingUpdate()>();

        return;
    }

    static void access$3800(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleListenerHintsChanged(int)>(i0);

        return;
    }

    static void access$3900(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleListenerInterruptionFilterChanged(int)>(i0);

        return;
    }

    static void access$4000(com.android.server.notification.NotificationManagerService, android.os.Message)
    {
        com.android.server.notification.NotificationManagerService r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleRankingReconsideration(android.os.Message)>(r1);

        return;
    }

    static void access$4100(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void handleRankingConfigChange()>();

        return;
    }

    static void access$4200(com.android.server.notification.NotificationManagerService, com.android.server.notification.NotificationRecord, boolean, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationRecord r1;
        boolean z0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.NotificationRecord;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.notification.NotificationManagerService: void cancelNotificationLocked(com.android.server.notification.NotificationRecord,boolean,int)>(r1, z0, i0);

        return;
    }

    static int access$4300(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $i0 = r0.<com.android.server.notification.NotificationManagerService: int mCallState>;

        return $i0;
    }

    static int access$4302(com.android.server.notification.NotificationManagerService, int)
    {
        com.android.server.notification.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.notification.NotificationManagerService: int mCallState> = i0;

        return i0;
    }

    static com.android.server.notification.NotificationManagerService$WorkerHandler access$4400(com.android.server.notification.NotificationManagerService)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.NotificationManagerService$WorkerHandler $r1;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        $r1 = r0.<com.android.server.notification.NotificationManagerService: com.android.server.notification.NotificationManagerService$WorkerHandler mHandler>;

        return $r1;
    }

    static android.service.notification.NotificationRankingUpdate access$4500(com.android.server.notification.NotificationManagerService, com.android.server.notification.ManagedServices$ManagedServiceInfo)
    {
        com.android.server.notification.NotificationManagerService r0;
        com.android.server.notification.ManagedServices$ManagedServiceInfo r1;
        android.service.notification.NotificationRankingUpdate $r2;

        r0 := @parameter0: com.android.server.notification.NotificationManagerService;

        r1 := @parameter1: com.android.server.notification.ManagedServices$ManagedServiceInfo;

        $r2 = specialinvoke r0.<com.android.server.notification.NotificationManagerService: android.service.notification.NotificationRankingUpdate makeRankingUpdateLocked(com.android.server.notification.ManagedServices$ManagedServiceInfo)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        long[] $r0;
        int $i0, $i1;

        <com.android.server.notification.NotificationManagerService: int REASON_GROUP_SUMMARY_CANCELED> = 12;

        <com.android.server.notification.NotificationManagerService: int REASON_LISTENER_CANCEL_ALL> = 11;

        <com.android.server.notification.NotificationManagerService: int REASON_LISTENER_CANCEL> = 10;

        <com.android.server.notification.NotificationManagerService: int REASON_NOMAN_CANCEL_ALL> = 9;

        <com.android.server.notification.NotificationManagerService: int REASON_NOMAN_CANCEL> = 8;

        <com.android.server.notification.NotificationManagerService: int REASON_PACKAGE_BANNED> = 7;

        <com.android.server.notification.NotificationManagerService: int REASON_USER_STOPPED> = 6;

        <com.android.server.notification.NotificationManagerService: int REASON_PACKAGE_CHANGED> = 5;

        <com.android.server.notification.NotificationManagerService: int REASON_DELEGATE_ERROR> = 4;

        <com.android.server.notification.NotificationManagerService: int REASON_DELEGATE_CANCEL_ALL> = 3;

        <com.android.server.notification.NotificationManagerService: int REASON_DELEGATE_CANCEL> = 2;

        <com.android.server.notification.NotificationManagerService: int REASON_DELEGATE_CLICK> = 1;

        <com.android.server.notification.NotificationManagerService: java.lang.String ATTR_NAME> = "name";

        <com.android.server.notification.NotificationManagerService: java.lang.String TAG_PACKAGE> = "package";

        <com.android.server.notification.NotificationManagerService: java.lang.String TAG_BLOCKED_PKGS> = "blocked-packages";

        <com.android.server.notification.NotificationManagerService: java.lang.String ATTR_VERSION> = "version";

        <com.android.server.notification.NotificationManagerService: java.lang.String TAG_BODY> = "notification-policy";

        <com.android.server.notification.NotificationManagerService: int DB_VERSION> = 1;

        <com.android.server.notification.NotificationManagerService: float MATCHES_CALL_FILTER_TIMEOUT_AFFINITY> = 1.0F;

        <com.android.server.notification.NotificationManagerService: int MATCHES_CALL_FILTER_CONTACTS_TIMEOUT_MS> = 3000;

        <com.android.server.notification.NotificationManagerService: boolean ENABLE_BLOCKED_TOASTS> = 1;

        <com.android.server.notification.NotificationManagerService: boolean ENABLE_BLOCKED_NOTIFICATIONS> = 1;

        <com.android.server.notification.NotificationManagerService: int SCORE_INTERRUPTION_THRESHOLD> = -10;

        <com.android.server.notification.NotificationManagerService: int SCORE_DISPLAY_THRESHOLD> = -20;

        <com.android.server.notification.NotificationManagerService: int NOTIFICATION_PRIORITY_MULTIPLIER> = 10;

        <com.android.server.notification.NotificationManagerService: int JUNK_SCORE> = -1000;

        <com.android.server.notification.NotificationManagerService: boolean SCORE_ONGOING_HIGHER> = 0;

        <com.android.server.notification.NotificationManagerService: int DEFAULT_STREAM_TYPE> = 5;

        <com.android.server.notification.NotificationManagerService: int VIBRATE_PATTERN_MAXLEN> = 17;

        <com.android.server.notification.NotificationManagerService: int SHORT_DELAY> = 2000;

        <com.android.server.notification.NotificationManagerService: int LONG_DELAY> = 3500;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_LISTENER_NOTIFICATION_FILTER_CHANGED> = 8;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_LISTENER_HINTS_CHANGED> = 7;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_SEND_RANKING_UPDATE> = 6;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_RANKING_CONFIG_CHANGE> = 5;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_RECONSIDER_RANKING> = 4;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_SAVE_POLICY_FILE> = 3;

        <com.android.server.notification.NotificationManagerService: int MESSAGE_TIMEOUT> = 2;

        <com.android.server.notification.NotificationManagerService: int MAX_PACKAGE_NOTIFICATIONS> = 50;

        <com.android.server.notification.NotificationManagerService: boolean DBG> = 0;

        <com.android.server.notification.NotificationManagerService: java.lang.String TAG> = "NotificationService";

        $r0 = newarray (long)[4];

        $r0[0] = 0L;

        $r0[1] = 250L;

        $r0[2] = 250L;

        $r0[3] = 250L;

        <com.android.server.notification.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN> = $r0;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        <com.android.server.notification.NotificationManagerService: int MY_UID> = $i0;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        <com.android.server.notification.NotificationManagerService: int MY_PID> = $i1;

        return;
    }
}
