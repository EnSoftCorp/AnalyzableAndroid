public class com.android.server.backup.PackageManagerBackupAgent extends android.app.backup.BackupAgent
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final java.lang.String GLOBAL_METADATA_KEY;
    private static final java.lang.String DEFAULT_HOME_KEY;
    private static final java.lang.String STATE_FILE_HEADER;
    private static final int STATE_FILE_VERSION;
    private static final int ANCESTRAL_RECORD_VERSION;
    private java.util.List mAllPackages;
    private android.content.pm.PackageManager mPackageManager;
    private java.util.HashMap mRestoredSignatures;
    private java.util.HashMap mStateVersions;
    private final java.util.HashSet mExisting;
    private int mStoredSdkVersion;
    private java.lang.String mStoredIncrementalVersion;
    private android.content.ComponentName mStoredHomeComponent;
    private long mStoredHomeVersion;
    private java.util.ArrayList mStoredHomeSigHashes;
    private boolean mHasMetadata;
    private android.content.ComponentName mRestoredHome;
    private long mRestoredHomeVersion;
    private java.lang.String mRestoredHomeInstaller;
    private java.util.ArrayList mRestoredHomeSigHashes;

    void <init>(android.content.pm.PackageManager, java.util.List)
    {
        java.util.HashSet $r0;
        com.android.server.backup.PackageManagerBackupAgent r1;
        android.content.pm.PackageManager r2;
        java.util.List r3;
        java.util.HashMap $r4;

        r1 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r2 := @parameter0: android.content.pm.PackageManager;

        r3 := @parameter1: java.util.List;

        specialinvoke r1.<android.app.backup.BackupAgent: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r1.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mStateVersions> = $r4;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        r1.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting> = $r0;

        specialinvoke r1.<com.android.server.backup.PackageManagerBackupAgent: void init(android.content.pm.PackageManager,java.util.List)>(r2, r3);

        return;
    }

    void <init>(android.content.pm.PackageManager)
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        android.content.pm.PackageManager r1;
        java.util.HashMap $r2;
        java.util.HashSet $r3;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: android.content.pm.PackageManager;

        specialinvoke r0.<android.app.backup.BackupAgent: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mStateVersions> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting> = $r3;

        specialinvoke r0.<com.android.server.backup.PackageManagerBackupAgent: void init(android.content.pm.PackageManager,java.util.List)>(r1, null);

        virtualinvoke r0.<com.android.server.backup.PackageManagerBackupAgent: void evaluateStorablePackages()>();

        return;
    }

    private void init(android.content.pm.PackageManager, java.util.List)
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        android.content.pm.PackageManager r1;
        java.util.List r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: android.content.pm.PackageManager;

        r2 := @parameter1: java.util.List;

        r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.pm.PackageManager mPackageManager> = r1;

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.List mAllPackages> = r2;

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mRestoredSignatures> = null;

        r0.<com.android.server.backup.PackageManagerBackupAgent: boolean mHasMetadata> = 0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        r0.<com.android.server.backup.PackageManagerBackupAgent: int mStoredSdkVersion> = $i0;

        $r3 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion> = $r3;

        return;
    }

    public void evaluateStorablePackages()
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        android.content.pm.PackageManager $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        $r1 = r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.pm.PackageManager mPackageManager>;

        $r2 = staticinvoke <com.android.server.backup.PackageManagerBackupAgent: java.util.List getStorableApplications(android.content.pm.PackageManager)>($r1);

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.List mAllPackages> = $r2;

        return;
    }

    public static java.util.List getStorableApplications(android.content.pm.PackageManager)
    {
        android.content.pm.PackageManager r0;
        java.util.List r1;
        int i0, i1;
        android.content.pm.PackageInfo r2;
        java.lang.Object $r3;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(64);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.content.pm.PackageInfo) $r3;

        $r4 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <com.android.server.backup.BackupManagerService: boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo)>($r4);

        if $z0 != 0 goto label2;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return r1;
    }

    public boolean hasMetadata()
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        boolean $z0;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        $z0 = r0.<com.android.server.backup.PackageManagerBackupAgent: boolean mHasMetadata>;

        return $z0;
    }

    public com.android.server.backup.PackageManagerBackupAgent$Metadata getRestoredMetadata(java.lang.String)
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;
        java.lang.Object $r4;
        com.android.server.backup.PackageManagerBackupAgent$Metadata $r5;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mRestoredSignatures>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", "getRestoredMetadata() before metadata read!");

        return null;

     label1:
        $r3 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mRestoredSignatures>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.android.server.backup.PackageManagerBackupAgent$Metadata) $r4;

        return $r5;
    }

    public java.util.Set getRestoredPackages()
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        java.util.HashMap $r1, $r2;
        java.util.Set $r3;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        $r1 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mRestoredSignatures>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", "getRestoredPackages() before metadata read!");

        return null;

     label1:
        $r2 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mRestoredSignatures>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        return $r3;
    }

    public void onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        android.os.ParcelFileDescriptor r1, r3;
        android.app.backup.BackupDataOutput r2;
        java.io.ByteArrayOutputStream r4, $r14;
        java.io.DataOutputStream r5, $r13;
        long l0, $l1;
        java.util.ArrayList r6, $r46, $r57;
        android.content.pm.PackageInfo r7, r11, r68;
        java.lang.String r8, r12, $r16, $r19, $r20, $r24, $r40, $r47, $r52, $r53, $r56, $r58, $r61, $r62, r70;
        android.content.ComponentName r9, $r51;
        java.util.Iterator r10, r69;
        java.lang.StringBuilder $r15, $r17, $r18, $r21, $r22, $r23, $r36, $r37, $r38, $r41;
        byte $b2;
        java.util.HashSet $r25, $r26, $r27, $r28, $r35, $r43, $r66;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        java.util.List $r29, $r30;
        java.lang.Object $r31, $r33, $r49;
        android.content.pm.PackageManager $r32, $r55, $r59;
        android.content.pm.Signature[] $r34, $r39, $r45, $r63;
        byte[] $r42, $r48, $r54;
        java.util.HashMap $r44;
        int $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.server.backup.PackageManagerBackupAgent$Metadata $r50;
        java.io.IOException $r60, $r64;
        android.content.pm.PackageManager$NameNotFoundException $r65, $r67;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        $r14 = new java.io.ByteArrayOutputStream;

        specialinvoke $r14.<java.io.ByteArrayOutputStream: void <init>()>();

        r4 = $r14;

        $r13 = new java.io.DataOutputStream;

        specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r4);

        r5 = $r13;

        specialinvoke r0.<com.android.server.backup.PackageManagerBackupAgent: void parseStateFile(android.os.ParcelFileDescriptor)>(r1);

        $r16 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion>;

        if $r16 == null goto label01;

        $r61 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion>;

        $r62 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $z8 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r62);

        if $z8 != 0 goto label02;

     label01:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Previous metadata ");

        $r19 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mismatch vs ");

        $r20 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - rewriting");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PMBA", $r24);

        $r25 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r25.<java.util.HashSet: void clear()>();

     label02:
        l0 = 0L;

        r6 = null;

        r7 = null;

        r8 = null;

        r9 = specialinvoke r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.ComponentName getPreferredHomeComponent()>();

        if r9 == null goto label06;

     label03:
        $r59 = r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.pm.PackageManager mPackageManager>;

        $r58 = virtualinvoke r9.<android.content.ComponentName: java.lang.String getPackageName()>();

        r7 = virtualinvoke $r59.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r58, 64);

        $r55 = r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.pm.PackageManager mPackageManager>;

        $r56 = virtualinvoke r9.<android.content.ComponentName: java.lang.String getPackageName()>();

        r8 = virtualinvoke $r55.<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r56);

        $i8 = r7.<android.content.pm.PackageInfo: int versionCode>;

        l0 = (long) $i8;

        $r63 = r7.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        r6 = staticinvoke <com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList hashSignatureArray(android.content.pm.Signature[])>($r63);

     label04:
        goto label06;

     label05:
        $r67 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", "Can\'t access preferred home info");

        r9 = null;

     label06:
        $l1 = r0.<com.android.server.backup.PackageManagerBackupAgent: long mStoredHomeVersion>;

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label07;

        $r51 = r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.ComponentName mStoredHomeComponent>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r9, $r51);

        if $z6 != 0 goto label07;

        if r9 == null goto label08;

        $r57 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList mStoredHomeSigHashes>;

        $z7 = staticinvoke <com.android.server.backup.BackupManagerService: boolean signaturesMatch(java.util.ArrayList,android.content.pm.PackageInfo)>($r57, r7);

        if $z7 != 0 goto label08;

     label07:
        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        z9 = $z5;

        if z9 == 0 goto label13;

        if r9 == null goto label12;

        $r53 = virtualinvoke r9.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r53);

        virtualinvoke r5.<java.io.DataOutputStream: void writeLong(long)>(l0);

        if r8 == null goto label10;

        $r52 = r8;

        goto label11;

     label10:
        $r52 = "";

     label11:
        virtualinvoke r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r52);

        staticinvoke <com.android.server.backup.PackageManagerBackupAgent: void writeSignatureHashArray(java.io.DataOutputStream,java.util.ArrayList)>(r5, r6);

        $r54 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <com.android.server.backup.PackageManagerBackupAgent: void writeEntity(android.app.backup.BackupDataOutput,java.lang.String,byte[])>(r2, "@home@", $r54);

        goto label13;

     label12:
        virtualinvoke r2.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>("@home@", -1);

     label13:
        virtualinvoke r4.<java.io.ByteArrayOutputStream: void reset()>();

        $r27 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        $z0 = virtualinvoke $r27.<java.util.HashSet: boolean contains(java.lang.Object)>("@meta@");

        if $z0 != 0 goto label14;

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        virtualinvoke r5.<java.io.DataOutputStream: void writeInt(int)>($i5);

        $r47 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        virtualinvoke r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r47);

        $r48 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <com.android.server.backup.PackageManagerBackupAgent: void writeEntity(android.app.backup.BackupDataOutput,java.lang.String,byte[])>(r2, "@meta@", $r48);

        goto label15;

     label14:
        $r26 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r26.<java.util.HashSet: boolean remove(java.lang.Object)>("@meta@");

     label15:
        $r29 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.List mAllPackages>;

        r10 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r33 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.content.pm.PackageInfo) $r33;

        r12 = r11.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z3 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("@meta@");

        if $z3 == 0 goto label17;

        goto label16;

     label17:
        $r32 = r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.pm.PackageManager mPackageManager>;

        r68 = virtualinvoke $r32.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r12, 64);

     label18:
        goto label20;

     label19:
        $r65 := @caughtexception;

        $r66 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r66.<java.util.HashSet: boolean add(java.lang.Object)>(r12);

        goto label16;

     label20:
        $r35 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        $z4 = virtualinvoke $r35.<java.util.HashSet: boolean contains(java.lang.Object)>(r12);

        if $z4 == 0 goto label21;

        $r43 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r43.<java.util.HashSet: boolean remove(java.lang.Object)>(r12);

        $i6 = r68.<android.content.pm.PackageInfo: int versionCode>;

        $r44 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mStateVersions>;

        $r49 = virtualinvoke $r44.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r12);

        $r50 = (com.android.server.backup.PackageManagerBackupAgent$Metadata) $r49;

        $i7 = $r50.<com.android.server.backup.PackageManagerBackupAgent$Metadata: int versionCode>;

        if $i6 != $i7 goto label21;

        goto label16;

     label21:
        $r34 = r68.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        if $r34 == null goto label22;

        $r39 = r68.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $i3 = lengthof $r39;

        if $i3 != 0 goto label23;

     label22:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not backing up package ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it appears to have no signatures.");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", $r40);

        goto label16;

     label23:
        virtualinvoke r4.<java.io.ByteArrayOutputStream: void reset()>();

        $i4 = r68.<android.content.pm.PackageInfo: int versionCode>;

        virtualinvoke r5.<java.io.DataOutputStream: void writeInt(int)>($i4);

        $r45 = r68.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r46 = staticinvoke <com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList hashSignatureArray(android.content.pm.Signature[])>($r45);

        staticinvoke <com.android.server.backup.PackageManagerBackupAgent: void writeSignatureHashArray(java.io.DataOutputStream,java.util.ArrayList)>(r5, $r46);

        $r42 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <com.android.server.backup.PackageManagerBackupAgent: void writeEntity(android.app.backup.BackupDataOutput,java.lang.String,byte[])>(r2, r12, $r42);

        goto label16;

     label24:
        $r28 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        r69 = virtualinvoke $r28.<java.util.HashSet: java.util.Iterator iterator()>();

     label25:
        $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label31;

        $r31 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r70 = (java.lang.String) $r31;

     label26:
        virtualinvoke r2.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>(r70, -1);

     label27:
        goto label30;

     label28:
        $r60 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", "Unable to write package deletions!");

     label29:
        return;

     label30:
        goto label25;

     label31:
        goto label33;

     label32:
        $r64 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", "Unable to write package backup data file!");

        return;

     label33:
        $r30 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.List mAllPackages>;

        specialinvoke r0.<com.android.server.backup.PackageManagerBackupAgent: void writeStateFile(java.util.List,android.content.ComponentName,long,java.util.ArrayList,android.os.ParcelFileDescriptor)>($r30, r9, l0, r6, r3);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label05;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label19;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label06 to label29 with label32;
        catch java.io.IOException from label30 to label31 with label32;
    }

    private static void writeEntity(android.app.backup.BackupDataOutput, java.lang.String, byte[]) throws java.io.IOException
    {
        android.app.backup.BackupDataOutput r0;
        java.lang.String r1;
        byte[] r2;
        int $i0, $i2;

        r0 := @parameter0: android.app.backup.BackupDataOutput;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        $i0 = lengthof r2;

        virtualinvoke r0.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>(r1, $i0);

        $i2 = lengthof r2;

        virtualinvoke r0.<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>(r2, $i2);

        return;
    }

    public void onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        android.app.backup.BackupDataInput r1;
        int i0, i2, i3, $i5, $i9, i10;
        android.os.ParcelFileDescriptor r2;
        java.util.ArrayList r3, r9, $r11, $r24;
        java.util.HashMap r4, $r12;
        byte b1;
        java.lang.String r5, $r20, $r23, $r26, r27;
        byte[] r6;
        java.io.ByteArrayInputStream r7, $r13;
        java.io.DataInputStream r8, $r14;
        android.content.pm.ApplicationInfo r10, $r19;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r15, $r16, $r17, $r18;
        com.android.server.backup.PackageManagerBackupAgent$Metadata $r22;
        android.content.ComponentName $r25;
        long $l7;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: android.app.backup.BackupDataInput;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r4 = $r12;

        b1 = -1;

     label1:
        $z0 = virtualinvoke r1.<android.app.backup.BackupDataInput: boolean readNextHeader()>();

        if $z0 == 0 goto label8;

        r5 = virtualinvoke r1.<android.app.backup.BackupDataInput: java.lang.String getKey()>();

        i2 = virtualinvoke r1.<android.app.backup.BackupDataInput: int getDataSize()>();

        r6 = newarray (byte)[i2];

        virtualinvoke r1.<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>(r6, 0, i2);

        $r13 = new java.io.ByteArrayInputStream;

        specialinvoke $r13.<java.io.ByteArrayInputStream: void <init>(byte[])>(r6);

        r7 = $r13;

        $r14 = new java.io.DataInputStream;

        specialinvoke $r14.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r7);

        r8 = $r14;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("@meta@");

        if $z1 == 0 goto label3;

        i3 = virtualinvoke r8.<java.io.DataInputStream: int readInt()>();

        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if b1 <= $i9 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", "Restore set was from a later version of Android; not restoring");

        return;

     label2:
        r0.<com.android.server.backup.PackageManagerBackupAgent: int mStoredSdkVersion> = i3;

        $r26 = virtualinvoke r8.<java.io.DataInputStream: java.lang.String readUTF()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion> = $r26;

        r0.<com.android.server.backup.PackageManagerBackupAgent: boolean mHasMetadata> = 1;

        goto label7;

     label3:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("@home@");

        if $z2 == 0 goto label4;

        r27 = virtualinvoke r8.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r25 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r27);

        r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.ComponentName mRestoredHome> = $r25;

        $l7 = virtualinvoke r8.<java.io.DataInputStream: long readLong()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: long mRestoredHomeVersion> = $l7;

        $r23 = virtualinvoke r8.<java.io.DataInputStream: java.lang.String readUTF()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mRestoredHomeInstaller> = $r23;

        $r24 = staticinvoke <com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList readSignatureHashArray(java.io.DataInputStream)>(r8);

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList mRestoredHomeSigHashes> = $r24;

        goto label7;

     label4:
        i10 = virtualinvoke r8.<java.io.DataInputStream: int readInt()>();

        r9 = staticinvoke <com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList readSignatureHashArray(java.io.DataInputStream)>(r8);

        if r9 == null goto label5;

        $i5 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if $i5 != 0 goto label6;

     label5:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not restoring package ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it appears to have no signatures.");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", $r20);

        goto label1;

     label6:
        $r19 = new android.content.pm.ApplicationInfo;

        specialinvoke $r19.<android.content.pm.ApplicationInfo: void <init>()>();

        r10 = $r19;

        r10.<android.content.pm.ApplicationInfo: java.lang.String packageName> = r5;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r10);

        $r22 = new com.android.server.backup.PackageManagerBackupAgent$Metadata;

        specialinvoke $r22.<com.android.server.backup.PackageManagerBackupAgent$Metadata: void <init>(com.android.server.backup.PackageManagerBackupAgent,int,java.util.ArrayList)>(r0, i10, r9);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r22);

     label7:
        goto label1;

     label8:
        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mRestoredSignatures> = r4;

        return;
    }

    private static java.util.ArrayList hashSignatureArray(android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0, r2;
        java.util.ArrayList r1, $r4;
        int i0, i1, $i2;
        android.content.pm.Signature r3;
        byte[] $r5;

        r0 := @parameter0: android.content.pm.Signature[];

        if r0 != null goto label1;

        return null;

     label1:
        $r4 = new java.util.ArrayList;

        $i2 = lengthof r0;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r5 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] hashSignature(android.content.pm.Signature)>(r3);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    private static void writeSignatureHashArray(java.io.DataOutputStream, java.util.ArrayList) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        java.util.ArrayList r1;
        java.util.Iterator r2;
        byte[] r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: java.util.ArrayList;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i0);

        r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (byte[]) $r4;

        $i1 = lengthof r3;

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i1);

        virtualinvoke r0.<java.io.DataOutputStream: void write(byte[])>(r3);

        goto label1;

     label2:
        return;
    }

    private static java.util.ArrayList readSignatureHashArray(java.io.DataInputStream)
    {
        java.io.DataInputStream r0;
        int i0, i1, i2, $i3, $i4, i9;
        java.util.ArrayList r2, $r4, $r5, r13;
        byte[] r3, $r8, $r9;
        android.content.pm.Signature $r6, r14;
        java.lang.Object $r7;
        java.lang.IllegalStateException $r10;
        java.io.IOException $r11;
        java.io.EOFException $r12;
        boolean z2;

        r0 := @parameter0: java.io.DataInputStream;

     label01:
        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

     label02:
        goto label05;

     label03:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", "Read empty signature block");

     label04:
        return null;

     label05:
        if i0 <= 20 goto label06;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", "Suspiciously large sig count in restore data; aborting");

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bad restore state");

        throw $r10;

     label06:
        z2 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r4;

        i1 = 0;

     label07:
        if i1 >= i0 goto label09;

        i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        r3 = newarray (byte)[i2];

        virtualinvoke r0.<java.io.DataInputStream: int read(byte[])>(r3);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        if i2 == 32 goto label08;

        z2 = 1;

     label08:
        i1 = i1 + 1;

        goto label07;

     label09:
        if z2 == 0 goto label12;

        $r5 = new java.util.ArrayList;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i3);

        r13 = $r5;

        i9 = 0;

     label10:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i9 >= $i4 goto label11;

        $r6 = new android.content.pm.Signature;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r8 = (byte[]) $r7;

        specialinvoke $r6.<android.content.pm.Signature: void <init>(byte[])>($r8);

        r14 = $r6;

        $r9 = staticinvoke <com.android.server.backup.BackupManagerService: byte[] hashSignature(android.content.pm.Signature)>(r14);

        virtualinvoke r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i9 = i9 + 1;

        goto label10;

     label11:
        r2 = r13;

     label12:
        return r2;

     label13:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", "Unable to read signatures");

        return null;

        catch java.io.EOFException from label01 to label02 with label03;
        catch java.io.IOException from label01 to label04 with label13;
        catch java.io.IOException from label05 to label12 with label13;
    }

    private void parseStateFile(android.os.ParcelFileDescriptor)
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        android.os.ParcelFileDescriptor r1;
        java.io.FileInputStream r2, $r8;
        java.io.BufferedInputStream r3, $r10;
        java.io.DataInputStream r4, $r11;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r5, $r12, $r18, $r23, $r29, r32;
        int i0, $i3, i7;
        java.util.HashSet $r6, $r15, $r17;
        java.util.HashMap $r7, $r13;
        java.io.FileDescriptor $r9;
        com.android.server.backup.PackageManagerBackupAgent$Metadata $r14;
        java.util.ArrayList $r19;
        android.content.ComponentName $r20;
        long $l4;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r26, $r30, $r31;
        java.io.EOFException $r27;
        java.io.IOException $r28, r34;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r6 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r6.<java.util.HashSet: void clear()>();

        $r7 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mStateVersions>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: int mStoredSdkVersion> = 0;

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion> = null;

        r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.ComponentName mStoredHomeComponent> = null;

        r0.<com.android.server.backup.PackageManagerBackupAgent: long mStoredHomeVersion> = 0L;

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList mStoredHomeSigHashes> = null;

        $r8 = new java.io.FileInputStream;

        $r9 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r9);

        r2 = $r8;

        $r10 = new java.io.BufferedInputStream;

        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        r3 = $r10;

        $r11 = new java.io.DataInputStream;

        specialinvoke $r11.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r3);

        r4 = $r11;

     label01:
        z0 = 0;

        r5 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("=state=");

        if $z1 == 0 goto label04;

        i0 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        if i0 <= 2 goto label03;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported state file version ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", redoing from start");

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PMBA", $r23);

     label02:
        return;

     label03:
        goto label05;

     label04:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PMBA", "Older version of saved state - rewriting");

        z0 = 1;

     label05:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("@home@");

        if $z2 == 0 goto label06;

        $r18 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r20 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r18);

        r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.ComponentName mStoredHomeComponent> = $r20;

        $l4 = virtualinvoke r4.<java.io.DataInputStream: long readLong()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: long mStoredHomeVersion> = $l4;

        $r19 = staticinvoke <com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList readSignatureHashArray(java.io.DataInputStream)>(r4);

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.ArrayList mStoredHomeSigHashes> = $r19;

        r5 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

     label06:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("@meta@");

        if $z3 == 0 goto label07;

        $i3 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: int mStoredSdkVersion> = $i3;

        $r12 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        r0.<com.android.server.backup.PackageManagerBackupAgent: java.lang.String mStoredIncrementalVersion> = $r12;

        if z0 != 0 goto label09;

        $r17 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>("@meta@");

        goto label09;

     label07:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", "No global metadata in state file!");

     label08:
        return;

     label09:
        r32 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        i7 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        if z0 != 0 goto label10;

        $r15 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashSet mExisting>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>(r32);

     label10:
        $r13 = r0.<com.android.server.backup.PackageManagerBackupAgent: java.util.HashMap mStateVersions>;

        $r14 = new com.android.server.backup.PackageManagerBackupAgent$Metadata;

        specialinvoke $r14.<com.android.server.backup.PackageManagerBackupAgent$Metadata: void <init>(com.android.server.backup.PackageManagerBackupAgent,int,java.util.ArrayList)>(r0, i7, null);

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, $r14);

        goto label09;

     label11:
        $r27 := @caughtexception;

        goto label13;

     label12:
        $r28 := @caughtexception;

        r34 = $r28;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read Package Manager state file: ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", $r29);

     label13:
        return;

        catch java.io.EOFException from label01 to label02 with label11;
        catch java.io.EOFException from label03 to label08 with label11;
        catch java.io.EOFException from label09 to label11 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label08 with label12;
        catch java.io.IOException from label09 to label11 with label12;
    }

    private android.content.ComponentName getPreferredHomeComponent()
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        java.util.ArrayList $r1;
        android.content.pm.PackageManager $r2;
        android.content.ComponentName $r3;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        $r2 = r0.<com.android.server.backup.PackageManagerBackupAgent: android.content.pm.PackageManager mPackageManager>;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.ComponentName getHomeActivities(java.util.List)>($r1);

        return $r3;
    }

    private void writeStateFile(java.util.List, android.content.ComponentName, long, java.util.ArrayList, android.os.ParcelFileDescriptor)
    {
        com.android.server.backup.PackageManagerBackupAgent r0;
        java.util.List r1;
        android.content.ComponentName r2;
        long l0;
        java.util.ArrayList r3;
        android.os.ParcelFileDescriptor r4;
        java.io.FileOutputStream r5, $r10;
        java.io.BufferedOutputStream r6, $r12;
        java.io.DataOutputStream r7, $r13;
        java.util.Iterator r8;
        android.content.pm.PackageInfo r9;
        java.io.FileDescriptor $r11;
        java.lang.String $r14, $r15, $r17;
        int $i1, $i2;
        boolean $z0;
        java.lang.Object $r16;
        java.io.IOException $r18;

        r0 := @this: com.android.server.backup.PackageManagerBackupAgent;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.content.ComponentName;

        l0 := @parameter2: long;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: android.os.ParcelFileDescriptor;

        $r10 = new java.io.FileOutputStream;

        $r11 = virtualinvoke r4.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r11);

        r5 = $r10;

        $r12 = new java.io.BufferedOutputStream;

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r5);

        r6 = $r12;

        $r13 = new java.io.DataOutputStream;

        specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r6);

        r7 = $r13;

     label1:
        virtualinvoke r7.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("=state=");

        virtualinvoke r7.<java.io.DataOutputStream: void writeInt(int)>(2);

        if r2 == null goto label2;

        virtualinvoke r7.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("@home@");

        $r17 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke r7.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r17);

        virtualinvoke r7.<java.io.DataOutputStream: void writeLong(long)>(l0);

        staticinvoke <com.android.server.backup.PackageManagerBackupAgent: void writeSignatureHashArray(java.io.DataOutputStream,java.util.ArrayList)>(r7, r3);

     label2:
        virtualinvoke r7.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("@meta@");

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        virtualinvoke r7.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $r14 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        virtualinvoke r7.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r14);

        r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.content.pm.PackageInfo) $r16;

        $r15 = r9.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r7.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r15);

        $i2 = r9.<android.content.pm.PackageInfo: int versionCode>;

        virtualinvoke r7.<java.io.DataOutputStream: void writeInt(int)>($i2);

        goto label3;

     label4:
        virtualinvoke r7.<java.io.DataOutputStream: void flush()>();

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PMBA", "Unable to write package manager state file!");

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.PackageManagerBackupAgent: int ANCESTRAL_RECORD_VERSION> = 1;

        <com.android.server.backup.PackageManagerBackupAgent: int STATE_FILE_VERSION> = 2;

        <com.android.server.backup.PackageManagerBackupAgent: java.lang.String STATE_FILE_HEADER> = "=state=";

        <com.android.server.backup.PackageManagerBackupAgent: java.lang.String DEFAULT_HOME_KEY> = "@home@";

        <com.android.server.backup.PackageManagerBackupAgent: java.lang.String GLOBAL_METADATA_KEY> = "@meta@";

        <com.android.server.backup.PackageManagerBackupAgent: boolean DEBUG> = 0;

        <com.android.server.backup.PackageManagerBackupAgent: java.lang.String TAG> = "PMBA";

        return;
    }
}
