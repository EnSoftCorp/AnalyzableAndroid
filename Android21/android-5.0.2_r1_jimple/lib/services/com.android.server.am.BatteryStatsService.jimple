public final class com.android.server.am.BatteryStatsService extends com.android.internal.app.IBatteryStats$Stub implements android.os.PowerManagerInternal$LowPowerModeListener
{
    static final java.lang.String TAG;
    static com.android.internal.app.IBatteryStats sService;
    final com.android.internal.os.BatteryStatsImpl mStats;
    android.content.Context mContext;
    private boolean mBluetoothPendingStats;
    private android.bluetooth.BluetoothHeadset mBluetoothHeadset;
    android.os.PowerManagerInternal mPowerManagerInternal;
    private android.bluetooth.BluetoothProfile$ServiceListener mBluetoothProfileServiceListener;

    void <init>(java.io.File, android.os.Handler)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        com.android.server.am.BatteryStatsService r1;
        java.io.File r2;
        android.os.Handler r3;
        com.android.server.am.BatteryStatsService$1 $r4;

        r1 := @this: com.android.server.am.BatteryStatsService;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: android.os.Handler;

        specialinvoke r1.<com.android.internal.app.IBatteryStats$Stub: void <init>()>();

        $r4 = new com.android.server.am.BatteryStatsService$1;

        specialinvoke $r4.<com.android.server.am.BatteryStatsService$1: void <init>(com.android.server.am.BatteryStatsService)>(r1);

        r1.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothProfile$ServiceListener mBluetoothProfileServiceListener> = $r4;

        $r0 = new com.android.internal.os.BatteryStatsImpl;

        specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void <init>(java.io.File,android.os.Handler)>(r2, r3);

        r1.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats> = $r0;

        return;
    }

    public void publish(android.content.Context)
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context r1, $r4, $r6;
        android.os.IBinder $r2;
        com.android.internal.os.PowerProfile $r3;
        com.android.internal.os.BatteryStatsImpl $r5, $r7;
        int $i0, $i1;
        android.content.res.Resources $r8;
        long $l2, $l3;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r0.<com.android.server.am.BatteryStatsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("batterystats", $r2);

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r3 = new com.android.internal.os.PowerProfile;

        $r4 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        specialinvoke $r3.<com.android.internal.os.PowerProfile: void <init>(android.content.Context)>($r4);

        $i0 = virtualinvoke $r3.<com.android.internal.os.PowerProfile: int getNumSpeedSteps()>();

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)>($i0);

        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r6 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r8 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r8.<android.content.res.Resources: int getInteger(int)>(17694732);

        $l2 = (long) $i1;

        $l3 = $l2 * 1000L;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeout(long)>($l3);

        return;
    }

    public void initPowerManagement()
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.Object $r1;
        android.os.PowerManagerInternal $r2, $r3, $r4;
        com.android.internal.os.BatteryStatsImpl $r5;
        boolean $z0;
        com.android.server.am.BatteryStatsService$WakeupReasonThread $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "android/os/PowerManagerInternal");

        $r2 = (android.os.PowerManagerInternal) $r1;

        r0.<com.android.server.am.BatteryStatsService: android.os.PowerManagerInternal mPowerManagerInternal> = $r2;

        $r3 = r0.<com.android.server.am.BatteryStatsService: android.os.PowerManagerInternal mPowerManagerInternal>;

        virtualinvoke $r3.<android.os.PowerManagerInternal: void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener)>(r0);

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r4 = r0.<com.android.server.am.BatteryStatsService: android.os.PowerManagerInternal mPowerManagerInternal>;

        $z0 = virtualinvoke $r4.<android.os.PowerManagerInternal: boolean getLowPowerModeEnabled()>();

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteLowPowerMode(boolean)>($z0);

        $r6 = new com.android.server.am.BatteryStatsService$WakeupReasonThread;

        specialinvoke $r6.<com.android.server.am.BatteryStatsService$WakeupReasonThread: void <init>(com.android.server.am.BatteryStatsService)>(r0);

        virtualinvoke $r6.<com.android.server.am.BatteryStatsService$WakeupReasonThread: void start()>();

        return;
    }

    public void shutdown()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "Writing battery stats before shutdown...");

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void shutdownLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static com.android.internal.app.IBatteryStats getService()
    {
        android.os.IBinder r0;
        com.android.internal.app.IBatteryStats $r1, $r2, $r3, $r4;

        $r1 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        if $r1 == null goto label1;

        $r4 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        return $r4;

     label1:
        r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r2 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>(r0);

        <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService> = $r2;

        $r3 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        return $r3;
    }

    public void onLowPowerModeChanged(boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteLowPowerMode(boolean)>(z0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.android.internal.os.BatteryStatsImpl getActiveStatistics()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        return $r1;
    }

    void addIsolatedUid(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void addIsolatedUidLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void removeIsolatedUid(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void removeIsolatedUidLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void noteProcessStart(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteProcessStartLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void noteProcessState(java.lang.String, int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteProcessStateLocked(java.lang.String,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void noteProcessFinish(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteProcessFinishLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public byte[] getStatistics()
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.Parcel r1;
        byte[] r2;
        android.content.Context $r3;
        com.android.internal.os.BatteryStatsImpl $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r3 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        r2 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r2;
    }

    public android.os.ParcelFileDescriptor getStatisticsStream()
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.Parcel r1;
        byte[] r2;
        java.io.IOException r3, $r7;
        android.content.Context $r4;
        com.android.internal.os.BatteryStatsImpl $r5;
        android.os.ParcelFileDescriptor $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r4 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        r2 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

     label1:
        $r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)>(r2, "battery-stats");

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsService", "Unable to create shared memory", r3);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long computeBatteryTimeRemaining()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        long l0, $l1, $l3;
        java.lang.Throwable r2, $r5;
        byte $b2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: long computeBatteryTimeRemaining(long)>($l1);

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label2;

        $l3 = l0 / 1000L;

        goto label3;

     label2:
        $l3 = l0;

     label3:
        exitmonitor r1;

     label4:
        return $l3;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long computeChargeTimeRemaining()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        long l0, $l1, $l3;
        java.lang.Throwable r2, $r5;
        byte $b2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: long computeChargeTimeRemaining(long)>($l1);

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label2;

        $l3 = l0 / 1000L;

        goto label3;

     label2:
        $l3 = l0;

     label3:
        exitmonitor r1;

     label4:
        return $l3;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteEvent(int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteEventLocked(int,java.lang.String,int)>(i0, r1, i1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteSyncStart(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteSyncStartLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteSyncFinish(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteSyncFinishLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteJobStart(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteJobStartLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteJobFinish(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteJobFinishLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartWakelock(int, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2;
        java.lang.String r1, r2;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r3, $r5, $r6;
        java.lang.Throwable r4, $r7;
        long $l3, $l4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,java.lang.String,int,boolean,long,long)>(i0, i1, r1, r2, i2, z0, $l3, $l4);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopWakelock(int, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2;
        java.lang.String r1, r2;
        com.android.internal.os.BatteryStatsImpl r3, $r5, $r6;
        java.lang.Throwable r4, $r7;
        long $l3, $l4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,java.lang.String,int,long,long)>(i0, i1, r1, r2, i2, $l3, $l4);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0, i1;
        java.lang.String r2, r3;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r4, $r6, $r7;
        java.lang.Throwable r5, $r8;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r1, i0, r2, r3, i1, z0);

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteChangeWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int, android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1, r4;
        int i0, i1, i2, i3;
        java.lang.String r2, r3, r5, r6;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r7, $r9, $r10;
        java.lang.Throwable r8, $r11;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.WorkSource;

        i2 := @parameter6: int;

        r5 := @parameter7: java.lang.String;

        r6 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

        z0 := @parameter10: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r9 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r7 = $r9;

        entermonitor $r9;

     label1:
        $r10 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl: void noteChangeWakelockFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r1, i0, r2, r3, i1, r4, i2, r5, r6, i3, z0);

        exitmonitor r7;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r8 = $r11;

        exitmonitor r7;

     label4:
        throw r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0, i1;
        java.lang.String r2, r3;
        com.android.internal.os.BatteryStatsImpl r4, $r6, $r7;
        java.lang.Throwable r5, $r8;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>(r1, i0, r2, r3, i1);

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartSensor(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStartSensorLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopSensor(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStopSensorLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteVibratorOn(int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        long l1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteVibratorOnLocked(int,long)>(i0, l1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteVibratorOff(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteVibratorOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartGps(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStartGpsLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopGps(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStopGpsLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenState(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteScreenStateLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenBrightness(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteScreenBrightnessLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteUserActivity(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteUserActivityLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteInteractive(boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteInteractiveLocked(boolean)>(z0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteMobileRadioPowerState(int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        long l1;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteMobileRadioPowerState(int,long)>(i0, l1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void notePhoneOnLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void notePhoneOffLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneSignalStrength(android.telephony.SignalStrength)
    {
        com.android.server.am.BatteryStatsService r0;
        android.telephony.SignalStrength r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.telephony.SignalStrength;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneDataConnectionState(int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean)>(i0, z0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneState(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r4, $r5;
        java.lang.Throwable r2, $r6;
        android.telephony.TelephonyManager $r3;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        i1 = virtualinvoke $r3.<android.telephony.TelephonyManager: int getSimState()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void notePhoneStateLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiOnLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiOffLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartAudio(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteAudioOnLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopAudio(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteAudioOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartVideo(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteVideoOnLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopVideo(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteVideoOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteResetAudio()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteResetAudioLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteResetVideo()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteResetVideoLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFlashlightOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteFlashlightOnLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFlashlightOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteFlashlightOffLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiRunning(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiRunningChanged(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1, r2;
        com.android.internal.os.BatteryStatsImpl r3, $r5, $r6;
        java.lang.Throwable r4, $r7;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningChangedLocked(android.os.WorkSource,android.os.WorkSource)>(r1, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiStopped(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiStoppedLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiState(int, java.lang.String)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiStateLocked(int,java.lang.String)>(i0, r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiSupplicantStateChanged(int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiSupplicantStateChangedLocked(int,boolean)>(i0, z0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiRssiChanged(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiRssiChangedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteBluetoothOn()
    {
        com.android.server.am.BatteryStatsService r0;
        android.bluetooth.BluetoothAdapter r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r6, $r8;
        java.lang.Throwable r3, $r11;
        android.bluetooth.BluetoothHeadset $r5, $r7;
        android.bluetooth.BluetoothProfile$ServiceListener $r9;
        android.content.Context $r10;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        if r1 == null goto label1;

        $r10 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r9 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothProfile$ServiceListener mBluetoothProfileServiceListener>;

        virtualinvoke r1.<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>($r10, $r9, 1);

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset>;

        if $r5 == null goto label3;

        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOnLocked()>();

        $r8 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r7 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl: void setBtHeadset(android.bluetooth.BluetoothHeadset)>($r7);

        goto label4;

     label3:
        r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats> = 1;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void noteBluetoothOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats> = 0;

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOffLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteBluetoothState(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothStateLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockAcquired(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockReleased(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiScanStarted(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiScanStopped(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiMulticastEnabled(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiMulticastDisabled(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockReleasedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiScanStartedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiScanStoppedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiBatchedScanStartedFromSource(android.os.WorkSource, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiMulticastEnabledFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiMulticastDisabledFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteNetworkInterfaceType(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteNetworkInterfaceTypeLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteNetworkStatsEnabled()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteNetworkStatsEnabledLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isOnBattery()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        return $z0;
    }

    public void setBatteryState(int, int, int, int, int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2, i3, i4, i5;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: void setBatteryState(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        return;
    }

    public long getAwakeTimeBattery()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        long $l0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        return $l0;
    }

    public long getAwakeTimePlugged()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        long $l0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>();

        return $l0;
    }

    public void enforceCallingPermission()
    {
        com.android.server.am.BatteryStatsService r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", $i2, $i3, null);

        return;
    }

    private static native int nativeWaitWakeup(int[], java.lang.String[]);

    private void dumpHelp(java.io.PrintWriter)
    {
        com.android.server.am.BatteryStatsService r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats (batterystats) dump options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  [--checkin] [--history] [--history-start] [--unplugged] [--charged] [-c]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  [--reset] [--write] [-h] [<package.name>]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --checkin: format output for a checkin report.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --history: show only history data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --history-start <num>: show only history data starting at given time offset.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --unplugged: only output data since last unplugged.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --charged: only output data since last charged.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --reset: reset the stats, clearing all current data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --write: force write current collected stats to disk.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  <package.name>: optional name of package to filter output by.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  -h: print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats (batterystats) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable|disable <option>");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Enable or disable a running option.  Option state is not saved across boots.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      full-history: include additional detailed events in battery history:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          wake_lock_in and proc events");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      no-auto-reset: don\'t automatically reset stats when unplugged");

        return;
    }

    private int doEnableOrDisable(java.io.PrintWriter, int, java.lang.String[], boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        java.io.PrintWriter r1;
        int i0, $i1, i2;
        java.lang.String[] r2;
        boolean z0, $z1, $z2, $z3;
        com.android.internal.os.BatteryStatsImpl r3, $r8, $r9, $r19, $r20, r28;
        java.lang.Throwable r4, r5, $r24, $r27;
        java.lang.String $r6, $r7, $r10, $r11, $r12, $r13, $r15, $r17, $r25, $r26;
        java.lang.StringBuilder $r14, $r16, $r18, $r21, $r22, $r23;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        i2 = i0 + 1;

        $i1 = lengthof r2;

        if i2 < $i1 goto label03;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing option argument for ");

        if z0 == 0 goto label01;

        $r26 = "--enable";

        goto label02;

     label01:
        $r26 = "--disable";

     label02:
        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r1);

        return -1;

     label03:
        $r7 = "full-wake-history";

        $r6 = r2[i2];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label04;

        $r11 = "full-history";

        $r10 = r2[i2];

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label10;

     label04:
        $r8 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r3 = $r8;

        entermonitor $r8;

     label05:
        $r9 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl: void setRecordAllHistoryLocked(boolean)>(z0);

        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r24 := @caughtexception;

        r4 = $r24;

        exitmonitor r3;

     label08:
        throw r4;

     label09:
        goto label17;

     label10:
        $r12 = "no-auto-reset";

        $r13 = r2[i2];

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label16;

        $r20 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r28 = $r20;

        entermonitor $r20;

     label11:
        $r19 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl: void setNoAutoReset(boolean)>(z0);

        exitmonitor r28;

     label12:
        goto label15;

     label13:
        $r27 := @caughtexception;

        r5 = $r27;

        exitmonitor r28;

     label14:
        throw r5;

     label15:
        goto label17;

     label16:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown enable/disable option: ");

        $r15 = r2[i2];

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r1);

        return -1;

     label17:
        return i2;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.BatteryStatsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        byte b0, $b6, b17;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        long l1;
        int i2, i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, i15, i16;
        java.lang.String r4, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r45, $r47, $r50, $r51, $r52, $r53, $r54, $r56, $r57, $r58, $r65, $r72, $r74, $r89, $r94;
        com.android.internal.os.BatteryStatsImpl r5, $r14, $r15, $r17, $r19, $r20, $r23, $r24, $r25, $r26, $r31, $r32, $r34, $r62, $r63, $r64, $r66, $r82, r96, r102, r104, r105;
        java.lang.Throwable r6, r7, r8, r9, r10, $r73, $r79, $r88, $r90, $r95;
        android.content.Context $r11, $r12, $r13, $r16, $r21, $r29, $r60;
        android.content.pm.PackageManager $r18, $r61;
        com.android.internal.os.AtomicFile $r22, $r27, $r28, $r33, $r91, r99;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r30;
        java.lang.StringBuilder $r43, $r44, $r46, $r48, $r49, $r55, $r59, $r67, $r68, $r69, $r70, $r71, $r75, $r76, $r77, $r78, $r81, $r83, $r84, $r86, $r87, $r93;
        char $c8;
        java.io.IOException $r80, r103;
        android.content.pm.PackageManager$NameNotFoundException $r85;
        java.io.File $r92;
        java.util.List r98;
        byte[] r100;
        android.os.Parcel r101;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r11 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $i4 = virtualinvoke $r11.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i4 == 0 goto label01;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump BatteryStats from from pid=");

        $i11 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r78 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r74);

        return;

     label01:
        b0 = 0;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        l1 = -1L;

        i2 = -1;

        if r3 == null goto label34;

        i3 = 0;

     label02:
        $i7 = lengthof r3;

        if i3 >= $i7 goto label34;

        r4 = r3[i3];

        $r36 = "--checkin";

        $z6 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label03;

        z0 = 1;

        z1 = 1;

        goto label33;

     label03:
        $r35 = "--history";

        $z8 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 == 0 goto label04;

        b0 = b0 | 4;

        goto label33;

     label04:
        $r38 = "--history-start";

        $z7 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label06;

        b0 = b0 | 4;

        i3 = i3 + 1;

        $i12 = lengthof r3;

        if i3 < $i12 goto label05;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Missing time argument for --history-since");

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label05:
        $r72 = r3[i3];

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r72);

        z3 = 1;

        goto label33;

     label06:
        $r37 = "-c";

        $z11 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 == 0 goto label07;

        z0 = 1;

        b0 = b0 | 8;

        goto label33;

     label07:
        $r41 = "--unplugged";

        $z12 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z12 == 0 goto label08;

        b0 = b0 | 1;

        goto label33;

     label08:
        $r42 = "--charged";

        $z9 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label09;

        b0 = b0 | 2;

        goto label33;

     label09:
        $r39 = "--reset";

        $z10 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 == 0 goto label15;

        $r62 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r5 = $r62;

        entermonitor $r62;

     label10:
        $r63 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r63.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsCmdLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats reset.");

        z2 = 1;

        exitmonitor r5;

     label11:
        goto label14;

     label12:
        $r88 := @caughtexception;

        r6 = $r88;

        exitmonitor r5;

     label13:
        throw r6;

     label14:
        goto label33;

     label15:
        $r40 = "--write";

        $z13 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z13 == 0 goto label21;

        $r66 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r96 = $r66;

        entermonitor $r66;

     label16:
        $r64 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r64.<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats written.");

        z2 = 1;

        exitmonitor r96;

     label17:
        goto label20;

     label18:
        $r90 := @caughtexception;

        r8 = $r90;

        exitmonitor r96;

     label19:
        throw r8;

     label20:
        goto label33;

     label21:
        $r47 = "--enable";

        $z14 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z14 != 0 goto label22;

        $r50 = "enable";

        $z16 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z16 == 0 goto label24;

     label22:
        i15 = specialinvoke r0.<com.android.server.am.BatteryStatsService: int doEnableOrDisable(java.io.PrintWriter,int,java.lang.String[],boolean)>(r2, i3, r3, 1);

        if i15 >= 0 goto label23;

        return;

     label23:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enabled: ");

        $r45 = r3[i15];

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r51 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        return;

     label24:
        $r52 = "--disable";

        $z15 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z15 != 0 goto label25;

        $r57 = "disable";

        $z17 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z17 == 0 goto label27;

     label25:
        i16 = specialinvoke r0.<com.android.server.am.BatteryStatsService: int doEnableOrDisable(java.io.PrintWriter,int,java.lang.String[],boolean)>(r2, i3, r3, 0);

        if i16 >= 0 goto label26;

        return;

     label26:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabled: ");

        $r56 = r3[i16];

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        return;

     label27:
        $r53 = "-h";

        $z18 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z18 == 0 goto label28;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label28:
        $r54 = "-a";

        $z19 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z19 == 0 goto label29;

        b0 = b0 | 16;

        goto label33;

     label29:
        $i10 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i10 <= 0 goto label30;

        $c8 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if $c8 != 45 goto label30;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r65 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r65);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label30:
        $r60 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r61 = virtualinvoke $r60.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i9 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i2 = virtualinvoke $r61.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r4, $i9);

     label31:
        goto label33;

     label32:
        $r85 := @caughtexception;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r89 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r89);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label33:
        i3 = i3 + 1;

        goto label02;

     label34:
        if z2 == 0 goto label35;

        return;

     label35:
        $r12 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $z4 = staticinvoke <com.android.internal.os.BatteryStatsHelper: boolean checkWifiOnly(android.content.Context)>($r12);

        if $z4 == 0 goto label36;

        b0 = b0 | 32;

     label36:
        if i2 < 0 goto label37;

        $b6 = b0 & 7;

        if $b6 != 0 goto label37;

        b17 = b0 | 2;

        b0 = b17 & -9;

     label37:
        if z0 == 0 goto label55;

        $r16 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r18 = virtualinvoke $r16.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r98 = virtualinvoke $r18.<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>(0);

        if z1 == 0 goto label48;

        $r25 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r22 = $r25.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile>;

        r99 = $r22;

        entermonitor $r22;

     label38:
        $r23 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r27 = $r23.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile>;

        $z5 = virtualinvoke $r27.<com.android.internal.os.AtomicFile: boolean exists()>();

        if $z5 == 0 goto label44;

     label39:
        $r26 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r28 = $r26.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile>;

        r100 = virtualinvoke $r28.<com.android.internal.os.AtomicFile: byte[] readFully()>();

        if r100 == null goto label42;

        r101 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i5 = lengthof r100;

        virtualinvoke r101.<android.os.Parcel: void unmarshall(byte[],int,int)>(r100, 0, $i5);

        virtualinvoke r101.<android.os.Parcel: void setDataPosition(int)>(0);

        $r32 = new com.android.internal.os.BatteryStatsImpl;

        $r31 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r30 = $r31.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        specialinvoke $r32.<com.android.internal.os.BatteryStatsImpl: void <init>(java.io.File,android.os.Handler)>(null, $r30);

        r102 = $r32;

        virtualinvoke r102.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>(r101);

        virtualinvoke r101.<android.os.Parcel: void recycle()>();

        $r29 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke r102.<com.android.internal.os.BatteryStatsImpl: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,java.util.List,int,long)>($r29, r2, r98, b0, l1);

        $r34 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r33 = $r34.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile>;

        virtualinvoke $r33.<com.android.internal.os.AtomicFile: void delete()>();

     label40:
        exitmonitor r99;

     label41:
        return;

     label42:
        goto label44;

     label43:
        $r80 := @caughtexception;

        r103 = $r80;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reading checkin file ");

        $r82 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r91 = $r82.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile>;

        $r92 = virtualinvoke $r91.<com.android.internal.os.AtomicFile: java.io.File getBaseFile()>();

        $r93 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsService", $r94, r103);

     label44:
        exitmonitor r99;

     label45:
        goto label48;

     label46:
        $r95 := @caughtexception;

        r7 = $r95;

        exitmonitor r99;

     label47:
        throw r7;

     label48:
        $r20 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r104 = $r20;

        entermonitor $r20;

     label49:
        $r19 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r21 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,java.util.List,int,long)>($r21, r2, r98, b0, l1);

        if z3 == 0 goto label50;

        $r24 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label50:
        exitmonitor r104;

     label51:
        goto label54;

     label52:
        $r73 := @caughtexception;

        r10 = $r73;

        exitmonitor r104;

     label53:
        throw r10;

     label54:
        goto label61;

     label55:
        $r14 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r105 = $r14;

        entermonitor $r14;

     label56:
        $r15 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r13 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>($r13, r2, b0, i2, l1);

        if z3 == 0 goto label57;

        $r17 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label57:
        exitmonitor r105;

     label58:
        goto label61;

     label59:
        $r79 := @caughtexception;

        r9 = $r79;

        exitmonitor r105;

     label60:
        throw r9;

     label61:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch android.content.pm.PackageManager$NameNotFoundException from label30 to label31 with label32;
        catch java.io.IOException from label39 to label40 with label43;
        catch java.lang.Throwable from label38 to label41 with label46;
        catch java.lang.Throwable from label42 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label49 to label51 with label52;
        catch java.lang.Throwable from label52 to label53 with label52;
        catch java.lang.Throwable from label56 to label58 with label59;
        catch java.lang.Throwable from label59 to label60 with label59;
    }

    static android.bluetooth.BluetoothHeadset access$002(com.android.server.am.BatteryStatsService, android.bluetooth.BluetoothHeadset)
    {
        com.android.server.am.BatteryStatsService r0;
        android.bluetooth.BluetoothHeadset r1;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        r1 := @parameter1: android.bluetooth.BluetoothHeadset;

        r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset> = r1;

        return r1;
    }

    static boolean access$100(com.android.server.am.BatteryStatsService)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        $z0 = r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats>;

        return $z0;
    }

    static android.bluetooth.BluetoothHeadset access$000(com.android.server.am.BatteryStatsService)
    {
        com.android.server.am.BatteryStatsService r0;
        android.bluetooth.BluetoothHeadset $r1;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset>;

        return $r1;
    }

    static boolean access$102(com.android.server.am.BatteryStatsService, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats> = z0;

        return z0;
    }

    static int access$200(int[], java.lang.String[])
    {
        int[] r0;
        java.lang.String[] r1;
        int $i0;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.String[];

        $i0 = staticinvoke <com.android.server.am.BatteryStatsService: int nativeWaitWakeup(int[],java.lang.String[])>(r0, r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.server.am.BatteryStatsService: java.lang.String TAG> = "BatteryStatsService";

        return;
    }
}
