public final class com.android.server.twilight.TwilightService extends com.android.server.SystemService
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final java.lang.String ACTION_UPDATE_TWILIGHT_STATE;
    final java.lang.Object mLock;
    android.app.AlarmManager mAlarmManager;
    android.location.LocationManager mLocationManager;
    com.android.server.twilight.TwilightService$LocationHandler mLocationHandler;
    final java.util.ArrayList mListeners;
    com.android.server.twilight.TwilightState mTwilightState;
    private final com.android.server.twilight.TwilightManager mService;
    private final android.content.BroadcastReceiver mUpdateLocationReceiver;
    private final android.location.LocationListener mEmptyLocationListener;
    private final android.location.LocationListener mLocationListener;

    public void <init>(android.content.Context)
    {
        com.android.server.twilight.TwilightService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3;
        com.android.server.twilight.TwilightService$1 $r4;
        com.android.server.twilight.TwilightService$2 $r5;
        com.android.server.twilight.TwilightService$3 $r6;
        com.android.server.twilight.TwilightService$4 $r7;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.twilight.TwilightService: java.lang.Object mLock> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.twilight.TwilightService: java.util.ArrayList mListeners> = $r3;

        $r4 = new com.android.server.twilight.TwilightService$1;

        specialinvoke $r4.<com.android.server.twilight.TwilightService$1: void <init>(com.android.server.twilight.TwilightService)>(r0);

        r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightManager mService> = $r4;

        $r5 = new com.android.server.twilight.TwilightService$2;

        specialinvoke $r5.<com.android.server.twilight.TwilightService$2: void <init>(com.android.server.twilight.TwilightService)>(r0);

        r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mUpdateLocationReceiver> = $r5;

        $r6 = new com.android.server.twilight.TwilightService$3;

        specialinvoke $r6.<com.android.server.twilight.TwilightService$3: void <init>(com.android.server.twilight.TwilightService)>(r0);

        r0.<com.android.server.twilight.TwilightService: android.location.LocationListener mEmptyLocationListener> = $r6;

        $r7 = new com.android.server.twilight.TwilightService$4;

        specialinvoke $r7.<com.android.server.twilight.TwilightService$4: void <init>(com.android.server.twilight.TwilightService)>(r0);

        r0.<com.android.server.twilight.TwilightService: android.location.LocationListener mLocationListener> = $r7;

        return;
    }

    public void onStart()
    {
        com.android.server.twilight.TwilightService r0;
        android.content.IntentFilter r1, $r9;
        android.content.Context $r2, $r5, $r10;
        java.lang.Object $r3, $r6;
        android.app.AlarmManager $r4;
        android.location.LocationManager $r7;
        com.android.server.twilight.TwilightService$LocationHandler $r8;
        android.content.BroadcastReceiver $r11;
        com.android.server.twilight.TwilightManager $r13;

        r0 := @this: com.android.server.twilight.TwilightService;

        $r2 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r4 = (android.app.AlarmManager) $r3;

        r0.<com.android.server.twilight.TwilightService: android.app.AlarmManager mAlarmManager> = $r4;

        $r5 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r7 = (android.location.LocationManager) $r6;

        r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager> = $r7;

        $r8 = new com.android.server.twilight.TwilightService$LocationHandler;

        specialinvoke $r8.<com.android.server.twilight.TwilightService$LocationHandler: void <init>(com.android.server.twilight.TwilightService,com.android.server.twilight.TwilightService$1)>(r0, null);

        r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightService$LocationHandler mLocationHandler> = $r8;

        $r9 = new android.content.IntentFilter;

        specialinvoke $r9.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.AIRPLANE_MODE");

        r1 = $r9;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.action.UPDATE_TWILIGHT_STATE");

        $r10 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r11 = r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mUpdateLocationReceiver>;

        virtualinvoke $r10.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r11, r1);

        $r13 = r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightManager mService>;

        virtualinvoke r0.<com.android.server.twilight.TwilightService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "com/android/server/twilight/TwilightManager", $r13);

        return;
    }

    private void setTwilightState(com.android.server.twilight.TwilightState)
    {
        com.android.server.twilight.TwilightService r0;
        com.android.server.twilight.TwilightState r1, $r5;
        java.lang.Object r2, $r4, $r8;
        int i0, i1;
        java.lang.Throwable r3, $r10;
        boolean $z0;
        java.util.ArrayList $r6, $r7;
        com.android.server.twilight.TwilightService$TwilightListenerRecord $r9;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: com.android.server.twilight.TwilightState;

        $r4 = r0.<com.android.server.twilight.TwilightService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightState mTwilightState>;

        $z0 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z0 != 0 goto label3;

        r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightState mTwilightState> = r1;

        $r6 = r0.<com.android.server.twilight.TwilightService: java.util.ArrayList mListeners>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r7 = r0.<com.android.server.twilight.TwilightService: java.util.ArrayList mListeners>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.twilight.TwilightService$TwilightListenerRecord) $r8;

        virtualinvoke $r9.<com.android.server.twilight.TwilightService$TwilightListenerRecord: void postUpdate()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static boolean hasMoved(android.location.Location, android.location.Location)
    {
        android.location.Location r0, r1;
        float f0, f1, $f2, $f3;
        long $l0, $l1;
        byte $b2, $b3;
        boolean $z0;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.location.Location;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != null goto label2;

        return 1;

     label2:
        $l0 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l1 = virtualinvoke r0.<android.location.Location: long getElapsedRealtimeNanos()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label3;

        return 0;

     label3:
        f0 = virtualinvoke r0.<android.location.Location: float distanceTo(android.location.Location)>(r1);

        $f2 = virtualinvoke r0.<android.location.Location: float getAccuracy()>();

        $f3 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();

        f1 = $f2 + $f3;

        $b3 = f0 cmpl f1;

        if $b3 < 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    static boolean access$100(android.location.Location, android.location.Location)
    {
        android.location.Location r0, r1;
        boolean $z0;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.location.Location;

        $z0 = staticinvoke <com.android.server.twilight.TwilightService: boolean hasMoved(android.location.Location,android.location.Location)>(r0, r1);

        return $z0;
    }

    static android.location.LocationListener access$200(com.android.server.twilight.TwilightService)
    {
        com.android.server.twilight.TwilightService r0;
        android.location.LocationListener $r1;

        r0 := @parameter0: com.android.server.twilight.TwilightService;

        $r1 = r0.<com.android.server.twilight.TwilightService: android.location.LocationListener mEmptyLocationListener>;

        return $r1;
    }

    static android.location.LocationListener access$300(com.android.server.twilight.TwilightService)
    {
        com.android.server.twilight.TwilightService r0;
        android.location.LocationListener $r1;

        r0 := @parameter0: com.android.server.twilight.TwilightService;

        $r1 = r0.<com.android.server.twilight.TwilightService: android.location.LocationListener mLocationListener>;

        return $r1;
    }

    static void access$400(com.android.server.twilight.TwilightService, com.android.server.twilight.TwilightState)
    {
        com.android.server.twilight.TwilightService r0;
        com.android.server.twilight.TwilightState r1;

        r0 := @parameter0: com.android.server.twilight.TwilightService;

        r1 := @parameter1: com.android.server.twilight.TwilightState;

        specialinvoke r0.<com.android.server.twilight.TwilightService: void setTwilightState(com.android.server.twilight.TwilightState)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.twilight.TwilightService: java.lang.String ACTION_UPDATE_TWILIGHT_STATE> = "com.android.server.action.UPDATE_TWILIGHT_STATE";

        <com.android.server.twilight.TwilightService: boolean DEBUG> = 0;

        <com.android.server.twilight.TwilightService: java.lang.String TAG> = "TwilightService";

        return;
    }
}
