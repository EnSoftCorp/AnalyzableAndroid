public class com.android.server.SamplingProfilerService extends android.os.Binder
{
    private static final java.lang.String TAG;
    private static final boolean LOCAL_LOGV;
    public static final java.lang.String SNAPSHOT_DIR;
    private final android.content.Context mContext;
    private android.os.FileObserver snapshotObserver;

    public void <init>(android.content.Context)
    {
        com.android.server.SamplingProfilerService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.SamplingProfilerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        r0.<com.android.server.SamplingProfilerService: android.content.Context mContext> = r1;

        specialinvoke r0.<com.android.server.SamplingProfilerService: void registerSettingObserver(android.content.Context)>(r1);

        specialinvoke r0.<com.android.server.SamplingProfilerService: void startWorking(android.content.Context)>(r1);

        return;
    }

    private void startWorking(android.content.Context)
    {
        com.android.server.SamplingProfilerService r0;
        android.content.Context r1;
        android.os.DropBoxManager r2;
        java.io.File[] r3;
        int i0, $i1;
        java.lang.Object $r4;
        java.io.File $r5, $r8;
        com.android.server.SamplingProfilerService$1 $r6;
        android.os.FileObserver $r7;

        r0 := @this: com.android.server.SamplingProfilerService;

        r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r2 = (android.os.DropBoxManager) $r4;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>("/data/snapshots");

        r3 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        i0 = 0;

     label1:
        if r3 == null goto label2;

        $i1 = lengthof r3;

        if i0 >= $i1 goto label2;

        $r8 = r3[i0];

        specialinvoke r0.<com.android.server.SamplingProfilerService: void handleSnapshotFile(java.io.File,android.os.DropBoxManager)>($r8, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = new com.android.server.SamplingProfilerService$1;

        specialinvoke $r6.<com.android.server.SamplingProfilerService$1: void <init>(com.android.server.SamplingProfilerService,java.lang.String,int,android.os.DropBoxManager)>(r0, "/data/snapshots", 4, r2);

        r0.<com.android.server.SamplingProfilerService: android.os.FileObserver snapshotObserver> = $r6;

        $r7 = r0.<com.android.server.SamplingProfilerService: android.os.FileObserver snapshotObserver>;

        virtualinvoke $r7.<android.os.FileObserver: void startWatching()>();

        return;
    }

    private void handleSnapshotFile(java.io.File, android.os.DropBoxManager)
    {
        com.android.server.SamplingProfilerService r0;
        java.io.File r1;
        android.os.DropBoxManager r2;
        java.io.IOException r3, $r5;
        java.lang.Throwable r4, $r12;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: com.android.server.SamplingProfilerService;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.os.DropBoxManager;

     label1:
        virtualinvoke r2.<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>("SamplingProfilerService", r1, 0);

     label2:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        goto label7;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t add ");

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to dropbox");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SamplingProfilerService", $r11, r3);

     label4:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        goto label7;

     label5:
        $r12 := @caughtexception;

        r4 = $r12;

     label6:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        throw r4;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void registerSettingObserver(android.content.Context)
    {
        com.android.server.SamplingProfilerService r0;
        android.content.Context r1;
        android.content.ContentResolver r2;
        android.net.Uri $r3;
        com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver $r4;

        r0 := @this: com.android.server.SamplingProfilerService;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("sampling_profiler_ms");

        $r4 = new com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver;

        specialinvoke $r4.<com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver: void <init>(com.android.server.SamplingProfilerService,android.content.ContentResolver)>(r0, r2);

        virtualinvoke r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r3, 0, $r4);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.SamplingProfilerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.SamplingProfilerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.SamplingProfilerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "SamplingProfilerService");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("SamplingProfilerService:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Watching directory: /data/snapshots");

        return;
    }

    static void access$000(com.android.server.SamplingProfilerService, java.io.File, android.os.DropBoxManager)
    {
        com.android.server.SamplingProfilerService r0;
        java.io.File r1;
        android.os.DropBoxManager r2;

        r0 := @parameter0: com.android.server.SamplingProfilerService;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: android.os.DropBoxManager;

        specialinvoke r0.<com.android.server.SamplingProfilerService: void handleSnapshotFile(java.io.File,android.os.DropBoxManager)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.SamplingProfilerService: java.lang.String SNAPSHOT_DIR> = "/data/snapshots";

        <com.android.server.SamplingProfilerService: boolean LOCAL_LOGV> = 0;

        <com.android.server.SamplingProfilerService: java.lang.String TAG> = "SamplingProfilerService";

        return;
    }
}
