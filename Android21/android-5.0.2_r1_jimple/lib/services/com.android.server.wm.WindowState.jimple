final class com.android.server.wm.WindowState extends java.lang.Object implements android.view.WindowManagerPolicy$WindowState
{
    static final java.lang.String TAG;
    final com.android.server.wm.WindowManagerService mService;
    final android.view.WindowManagerPolicy mPolicy;
    final android.content.Context mContext;
    final com.android.server.wm.Session mSession;
    final android.view.IWindow mClient;
    final int mAppOp;
    final int mOwnerUid;
    final android.view.IWindowId mWindowId;
    com.android.server.wm.WindowToken mToken;
    com.android.server.wm.WindowToken mRootToken;
    com.android.server.wm.AppWindowToken mAppToken;
    com.android.server.wm.AppWindowToken mTargetAppToken;
    final android.view.WindowManager$LayoutParams mAttrs;
    final com.android.server.wm.WindowState$DeathRecipient mDeathRecipient;
    final com.android.server.wm.WindowState mAttachedWindow;
    final com.android.server.wm.WindowList mChildWindows;
    final int mBaseLayer;
    final int mSubLayer;
    final boolean mLayoutAttached;
    final boolean mIsImWindow;
    final boolean mIsWallpaper;
    final boolean mIsFloatingLayer;
    int mSeq;
    boolean mEnforceSizeCompat;
    int mViewVisibility;
    int mSystemUiVisibility;
    boolean mPolicyVisibility;
    boolean mPolicyVisibilityAfterAnim;
    boolean mAppOpVisibility;
    boolean mAppFreezing;
    boolean mAttachedHidden;
    boolean mWallpaperVisible;
    android.os.RemoteCallbackList mFocusCallbacks;
    int mRequestedWidth;
    int mRequestedHeight;
    int mLastRequestedWidth;
    int mLastRequestedHeight;
    int mLayer;
    boolean mHaveFrame;
    boolean mObscured;
    boolean mTurnOnScreen;
    int mLayoutSeq;
    android.content.res.Configuration mConfiguration;
    private boolean mConfigHasChanged;
    final android.graphics.RectF mShownFrame;
    final android.graphics.Rect mVisibleInsets;
    final android.graphics.Rect mLastVisibleInsets;
    boolean mVisibleInsetsChanged;
    final android.graphics.Rect mContentInsets;
    final android.graphics.Rect mLastContentInsets;
    boolean mContentInsetsChanged;
    final android.graphics.Rect mOverscanInsets;
    final android.graphics.Rect mLastOverscanInsets;
    boolean mOverscanInsetsChanged;
    final android.graphics.Rect mStableInsets;
    final android.graphics.Rect mLastStableInsets;
    boolean mStableInsetsChanged;
    boolean mGivenInsetsPending;
    final android.graphics.Rect mGivenContentInsets;
    final android.graphics.Rect mGivenVisibleInsets;
    final android.graphics.Region mGivenTouchableRegion;
    int mTouchableInsets;
    final android.graphics.Rect mSystemDecorRect;
    final android.graphics.Rect mLastSystemDecorRect;
    float mGlobalScale;
    float mInvGlobalScale;
    float mHScale;
    float mVScale;
    float mLastHScale;
    float mLastVScale;
    final android.graphics.Matrix mTmpMatrix;
    final android.graphics.Rect mFrame;
    final android.graphics.Rect mLastFrame;
    final android.graphics.Rect mCompatFrame;
    final android.graphics.Rect mContainingFrame;
    final android.graphics.Rect mDisplayFrame;
    final android.graphics.Rect mOverscanFrame;
    final android.graphics.Rect mContentFrame;
    final android.graphics.Rect mParentFrame;
    final android.graphics.Rect mVisibleFrame;
    final android.graphics.Rect mDecorFrame;
    final android.graphics.Rect mStableFrame;
    boolean mContentChanged;
    float mWallpaperX;
    float mWallpaperY;
    float mWallpaperXStep;
    float mWallpaperYStep;
    int mWallpaperDisplayOffsetX;
    int mWallpaperDisplayOffsetY;
    int mXOffset;
    int mYOffset;
    boolean mRelayoutCalled;
    boolean mLayoutNeeded;
    boolean mExiting;
    boolean mDestroying;
    boolean mRemoveOnExit;
    boolean mOrientationChanging;
    int mLastFreezeDuration;
    boolean mRemoved;
    boolean mRebuilding;
    final com.android.server.input.InputWindowHandle mInputWindowHandle;
    android.view.InputChannel mInputChannel;
    java.lang.String mStringNameCache;
    java.lang.CharSequence mLastTitle;
    boolean mWasExiting;
    final com.android.server.wm.WindowStateAnimator mWinAnimator;
    boolean mHasSurface;
    boolean mNotOnAppsDisplay;
    com.android.server.wm.DisplayContent mDisplayContent;
    private boolean mShowToOwnerOnly;
    boolean mUnderStatusBar;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.Session, android.view.IWindow, com.android.server.wm.WindowToken, com.android.server.wm.WindowState, int, int, android.view.WindowManager$LayoutParams, int, com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.WindowState r0, r5, r10, $r51, $r73, $r74, $r78, $r80, $r83, $r85, $r87, r91;
        com.android.server.wm.WindowManagerService r1, $r39, $r44, $r65;
        com.android.server.wm.Session r2;
        android.view.IWindow r3;
        com.android.server.wm.WindowToken r4, r92, r93;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35;
        android.view.WindowManager$LayoutParams r6, $r11, $r41, $r47, $r49, $r50, $r55, $r66, $r67, $r68, $r71, $r76, $r77, $r81;
        com.android.server.wm.DisplayContent r7, r94;
        com.android.server.wm.WindowState$DeathRecipient r8, $r42;
        android.graphics.RectF $r12;
        com.android.server.wm.WindowList $r13, $r72, $r75, $r79, $r82, $r84, $r86, $r89;
        android.graphics.Rect $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        android.graphics.Region $r25;
        android.graphics.Matrix $r26;
        com.android.server.wm.WindowState$1 $r40;
        android.content.Context $r43;
        android.view.WindowManagerPolicy $r45, $r48, $r69, $r70;
        android.os.IBinder $r46, $r63;
        com.android.server.wm.AppWindowToken $r52, $r53, $r54, $r56, $r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13;
        com.android.server.input.InputApplicationHandle $r57;
        com.android.server.wm.WindowStateAnimator $r59, $r60;
        float $f0;
        com.android.server.input.InputWindowHandle $r61;
        java.util.HashMap $r62;
        java.lang.Object $r64, $r88;
        android.os.RemoteException $r90;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.Session;

        r3 := @parameter2: android.view.IWindow;

        r4 := @parameter3: com.android.server.wm.WindowToken;

        r5 := @parameter4: com.android.server.wm.WindowState;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        r6 := @parameter7: android.view.WindowManager$LayoutParams;

        i2 := @parameter8: int;

        r7 := @parameter9: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r11 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r11.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs> = $r11;

        $r13 = new com.android.server.wm.WindowList;

        specialinvoke $r13.<com.android.server.wm.WindowList: void <init>()>();

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows> = $r13;

        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility> = 1;

        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim> = 1;

        r0.<com.android.server.wm.WindowState: boolean mAppOpVisibility> = 1;

        r0.<com.android.server.wm.WindowState: int mLayoutSeq> = -1;

        r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration> = null;

        $r12 = new android.graphics.RectF;

        specialinvoke $r12.<android.graphics.RectF: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame> = $r12;

        $r15 = new android.graphics.Rect;

        specialinvoke $r15.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleInsets> = $r15;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastVisibleInsets> = $r14;

        $r17 = new android.graphics.Rect;

        specialinvoke $r17.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentInsets> = $r17;

        $r16 = new android.graphics.Rect;

        specialinvoke $r16.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastContentInsets> = $r16;

        $r19 = new android.graphics.Rect;

        specialinvoke $r19.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanInsets> = $r19;

        $r18 = new android.graphics.Rect;

        specialinvoke $r18.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastOverscanInsets> = $r18;

        $r21 = new android.graphics.Rect;

        specialinvoke $r21.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableInsets> = $r21;

        $r20 = new android.graphics.Rect;

        specialinvoke $r20.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastStableInsets> = $r20;

        $r23 = new android.graphics.Rect;

        specialinvoke $r23.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenContentInsets> = $r23;

        $r22 = new android.graphics.Rect;

        specialinvoke $r22.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenVisibleInsets> = $r22;

        $r25 = new android.graphics.Region;

        specialinvoke $r25.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Region mGivenTouchableRegion> = $r25;

        r0.<com.android.server.wm.WindowState: int mTouchableInsets> = 0;

        $r24 = new android.graphics.Rect;

        specialinvoke $r24.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect> = $r24;

        $r27 = new android.graphics.Rect;

        specialinvoke $r27.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastSystemDecorRect> = $r27;

        r0.<com.android.server.wm.WindowState: float mGlobalScale> = 1.0F;

        r0.<com.android.server.wm.WindowState: float mInvGlobalScale> = 1.0F;

        r0.<com.android.server.wm.WindowState: float mHScale> = 1.0F;

        r0.<com.android.server.wm.WindowState: float mVScale> = 1.0F;

        r0.<com.android.server.wm.WindowState: float mLastHScale> = 1.0F;

        r0.<com.android.server.wm.WindowState: float mLastVScale> = 1.0F;

        $r26 = new android.graphics.Matrix;

        specialinvoke $r26.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Matrix mTmpMatrix> = $r26;

        $r30 = new android.graphics.Rect;

        specialinvoke $r30.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame> = $r30;

        $r31 = new android.graphics.Rect;

        specialinvoke $r31.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastFrame> = $r31;

        $r28 = new android.graphics.Rect;

        specialinvoke $r28.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame> = $r28;

        $r29 = new android.graphics.Rect;

        specialinvoke $r29.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame> = $r29;

        $r34 = new android.graphics.Rect;

        specialinvoke $r34.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mDisplayFrame> = $r34;

        $r35 = new android.graphics.Rect;

        specialinvoke $r35.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame> = $r35;

        $r32 = new android.graphics.Rect;

        specialinvoke $r32.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame> = $r32;

        $r33 = new android.graphics.Rect;

        specialinvoke $r33.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mParentFrame> = $r33;

        $r37 = new android.graphics.Rect;

        specialinvoke $r37.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame> = $r37;

        $r38 = new android.graphics.Rect;

        specialinvoke $r38.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mDecorFrame> = $r38;

        $r36 = new android.graphics.Rect;

        specialinvoke $r36.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame> = $r36;

        r0.<com.android.server.wm.WindowState: float mWallpaperX> = -1.0F;

        r0.<com.android.server.wm.WindowState: float mWallpaperY> = -1.0F;

        r0.<com.android.server.wm.WindowState: float mWallpaperXStep> = -1.0F;

        r0.<com.android.server.wm.WindowState: float mWallpaperYStep> = -1.0F;

        r0.<com.android.server.wm.WindowState: int mWallpaperDisplayOffsetX> = -2147483648;

        r0.<com.android.server.wm.WindowState: int mWallpaperDisplayOffsetY> = -2147483648;

        r0.<com.android.server.wm.WindowState: boolean mHasSurface> = 0;

        r0.<com.android.server.wm.WindowState: boolean mNotOnAppsDisplay> = 0;

        r0.<com.android.server.wm.WindowState: boolean mUnderStatusBar> = 1;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession> = r2;

        r0.<com.android.server.wm.WindowState: android.view.IWindow mClient> = r3;

        r0.<com.android.server.wm.WindowState: int mAppOp> = i0;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken> = r4;

        $i4 = r2.<com.android.server.wm.Session: int mUid>;

        r0.<com.android.server.wm.WindowState: int mOwnerUid> = $i4;

        $r40 = new com.android.server.wm.WindowState$1;

        specialinvoke $r40.<com.android.server.wm.WindowState$1: void <init>(com.android.server.wm.WindowState)>(r0);

        r0.<com.android.server.wm.WindowState: android.view.IWindowId mWindowId> = $r40;

        $r41 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        virtualinvoke $r41.<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>(r6);

        r0.<com.android.server.wm.WindowState: int mViewVisibility> = i2;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent> = r7;

        $r39 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r45 = $r39.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        r0.<com.android.server.wm.WindowState: android.view.WindowManagerPolicy mPolicy> = $r45;

        $r44 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r43 = $r44.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        r0.<com.android.server.wm.WindowState: android.content.Context mContext> = $r43;

        $r42 = new com.android.server.wm.WindowState$DeathRecipient;

        specialinvoke $r42.<com.android.server.wm.WindowState$DeathRecipient: void <init>(com.android.server.wm.WindowState,com.android.server.wm.WindowState$1)>(r0, null);

        r8 = $r42;

        r0.<com.android.server.wm.WindowState: int mSeq> = i1;

        $r47 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i7 = $r47.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i6 = $i7 & 128;

        if $i6 == 0 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat> = $z13;

     label03:
        $r46 = interfaceinvoke r3.<android.view.IWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r46.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r8, 0);

     label04:
        goto label06;

     label05:
        $r90 := @caughtexception;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState$DeathRecipient mDeathRecipient> = null;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow> = null;

        r0.<com.android.server.wm.WindowState: boolean mLayoutAttached> = 0;

        r0.<com.android.server.wm.WindowState: boolean mIsImWindow> = 0;

        r0.<com.android.server.wm.WindowState: boolean mIsWallpaper> = 0;

        r0.<com.android.server.wm.WindowState: boolean mIsFloatingLayer> = 0;

        r0.<com.android.server.wm.WindowState: int mBaseLayer> = 0;

        r0.<com.android.server.wm.WindowState: int mSubLayer> = 0;

        r0.<com.android.server.wm.WindowState: com.android.server.input.InputWindowHandle mInputWindowHandle> = null;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator> = null;

        return;

     label06:
        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState$DeathRecipient mDeathRecipient> = r8;

        $r49 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i9 = $r49.<android.view.WindowManager$LayoutParams: int type>;

        if $i9 < 1000 goto label24;

        $r66 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i16 = $r66.<android.view.WindowManager$LayoutParams: int type>;

        if $i16 > 1999 goto label24;

        $r70 = r0.<com.android.server.wm.WindowState: android.view.WindowManagerPolicy mPolicy>;

        $r67 = r5.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i23 = $r67.<android.view.WindowManager$LayoutParams: int type>;

        $i21 = interfaceinvoke $r70.<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>($i23);

        $i22 = $i21 * 10000;

        $i19 = $i22 + 1000;

        r0.<com.android.server.wm.WindowState: int mBaseLayer> = $i19;

        $r69 = r0.<com.android.server.wm.WindowState: android.view.WindowManagerPolicy mPolicy>;

        $i20 = r6.<android.view.WindowManager$LayoutParams: int type>;

        $i18 = interfaceinvoke $r69.<android.view.WindowManagerPolicy: int subWindowTypeToLayerLw(int)>($i20);

        r0.<com.android.server.wm.WindowState: int mSubLayer> = $i18;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow> = r5;

        $r74 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r75 = $r74.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        i35 = virtualinvoke $r75.<com.android.server.wm.WindowList: int size()>();

        if i35 != 0 goto label07;

        $r87 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r86 = $r87.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        virtualinvoke $r86.<com.android.server.wm.WindowList: boolean add(java.lang.Object)>(r0);

        goto label13;

     label07:
        i3 = 0;

     label08:
        if i3 >= i35 goto label12;

        $r78 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r89 = $r78.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        $r88 = virtualinvoke $r89.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        r10 = (com.android.server.wm.WindowState) $r88;

        $i29 = r0.<com.android.server.wm.WindowState: int mSubLayer>;

        $i30 = r10.<com.android.server.wm.WindowState: int mSubLayer>;

        if $i29 >= $i30 goto label09;

        $r85 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r84 = $r85.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        virtualinvoke $r84.<com.android.server.wm.WindowList: void add(int,java.lang.Object)>(i3, r0);

        goto label12;

     label09:
        $i31 = r0.<com.android.server.wm.WindowState: int mSubLayer>;

        $i32 = r10.<com.android.server.wm.WindowState: int mSubLayer>;

        if $i31 <= $i32 goto label10;

        goto label11;

     label10:
        $i33 = r0.<com.android.server.wm.WindowState: int mBaseLayer>;

        $i34 = r10.<com.android.server.wm.WindowState: int mBaseLayer>;

        if $i33 > $i34 goto label11;

        $r83 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r82 = $r83.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        virtualinvoke $r82.<com.android.server.wm.WindowList: void add(int,java.lang.Object)>(i3, r0);

        goto label12;

     label11:
        i3 = i3 + 1;

        goto label08;

     label12:
        $r73 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r72 = $r73.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        $i25 = virtualinvoke $r72.<com.android.server.wm.WindowList: int size()>();

        if i35 != $i25 goto label13;

        $r80 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r79 = $r80.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        virtualinvoke $r79.<com.android.server.wm.WindowList: boolean add(java.lang.Object)>(r0);

     label13:
        $r71 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i24 = $r71.<android.view.WindowManager$LayoutParams: int type>;

        if $i24 == 1003 goto label14;

        $z11 = 1;

        goto label15;

     label14:
        $z11 = 0;

     label15:
        r0.<com.android.server.wm.WindowState: boolean mLayoutAttached> = $z11;

        $r77 = r5.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i27 = $r77.<android.view.WindowManager$LayoutParams: int type>;

        if $i27 == 2011 goto label16;

        $r81 = r5.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i28 = $r81.<android.view.WindowManager$LayoutParams: int type>;

        if $i28 != 2012 goto label17;

     label16:
        $z12 = 1;

        goto label18;

     label17:
        $z12 = 0;

     label18:
        r0.<com.android.server.wm.WindowState: boolean mIsImWindow> = $z12;

        $r76 = r5.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i26 = $r76.<android.view.WindowManager$LayoutParams: int type>;

        if $i26 != 2013 goto label19;

        $z6 = 1;

        goto label20;

     label19:
        $z6 = 0;

     label20:
        r0.<com.android.server.wm.WindowState: boolean mIsWallpaper> = $z6;

        $z9 = r0.<com.android.server.wm.WindowState: boolean mIsImWindow>;

        if $z9 != 0 goto label21;

        $z8 = r0.<com.android.server.wm.WindowState: boolean mIsWallpaper>;

        if $z8 == 0 goto label22;

     label21:
        $z7 = 1;

        goto label23;

     label22:
        $z7 = 0;

     label23:
        r0.<com.android.server.wm.WindowState: boolean mIsFloatingLayer> = $z7;

        goto label33;

     label24:
        $r48 = r0.<com.android.server.wm.WindowState: android.view.WindowManagerPolicy mPolicy>;

        $i8 = r6.<android.view.WindowManager$LayoutParams: int type>;

        $i12 = interfaceinvoke $r48.<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>($i8);

        $i11 = $i12 * 10000;

        $i10 = $i11 + 1000;

        r0.<com.android.server.wm.WindowState: int mBaseLayer> = $i10;

        r0.<com.android.server.wm.WindowState: int mSubLayer> = 0;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow> = null;

        r0.<com.android.server.wm.WindowState: boolean mLayoutAttached> = 0;

        $r50 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i13 = $r50.<android.view.WindowManager$LayoutParams: int type>;

        if $i13 == 2011 goto label25;

        $r68 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i17 = $r68.<android.view.WindowManager$LayoutParams: int type>;

        if $i17 != 2012 goto label26;

     label25:
        $z3 = 1;

        goto label27;

     label26:
        $z3 = 0;

     label27:
        r0.<com.android.server.wm.WindowState: boolean mIsImWindow> = $z3;

        $r55 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i14 = $r55.<android.view.WindowManager$LayoutParams: int type>;

        if $i14 != 2013 goto label28;

        $z4 = 1;

        goto label29;

     label28:
        $z4 = 0;

     label29:
        r0.<com.android.server.wm.WindowState: boolean mIsWallpaper> = $z4;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mIsImWindow>;

        if $z0 != 0 goto label30;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mIsWallpaper>;

        if $z1 == 0 goto label31;

     label30:
        $z5 = 1;

        goto label32;

     label31:
        $z5 = 0;

     label32:
        r0.<com.android.server.wm.WindowState: boolean mIsFloatingLayer> = $z5;

     label33:
        r91 = r0;

     label34:
        $r51 = r91.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        if $r51 == null goto label35;

        r91 = r91.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        goto label34;

     label35:
        r92 = r91.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken>;

     label36:
        $r52 = r92.<com.android.server.wm.WindowToken: com.android.server.wm.AppWindowToken appWindowToken>;

        if $r52 != null goto label38;

        $r65 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r62 = $r65.<com.android.server.wm.WindowManagerService: java.util.HashMap mTokenMap>;

        $r63 = r92.<com.android.server.wm.WindowToken: android.os.IBinder token>;

        $r64 = virtualinvoke $r62.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r63);

        r93 = (com.android.server.wm.WindowToken) $r64;

        if r93 == null goto label38;

        if r92 != r93 goto label37;

        goto label38;

     label37:
        r92 = r93;

        goto label36;

     label38:
        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken> = r92;

        $r53 = r92.<com.android.server.wm.WindowToken: com.android.server.wm.AppWindowToken appWindowToken>;

        r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken> = $r53;

        $r54 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r54 == null goto label41;

        r94 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r7 == r94 goto label39;

        $z2 = 1;

        goto label40;

     label39:
        $z2 = 0;

     label40:
        r0.<com.android.server.wm.WindowState: boolean mNotOnAppsDisplay> = $z2;

     label41:
        $r59 = new com.android.server.wm.WindowStateAnimator;

        specialinvoke $r59.<com.android.server.wm.WindowStateAnimator: void <init>(com.android.server.wm.WindowState)>(r0);

        r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator> = $r59;

        $r60 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $f0 = r6.<android.view.WindowManager$LayoutParams: float alpha>;

        $r60.<com.android.server.wm.WindowStateAnimator: float mAlpha> = $f0;

        r0.<com.android.server.wm.WindowState: int mRequestedWidth> = 0;

        r0.<com.android.server.wm.WindowState: int mRequestedHeight> = 0;

        r0.<com.android.server.wm.WindowState: int mLastRequestedWidth> = 0;

        r0.<com.android.server.wm.WindowState: int mLastRequestedHeight> = 0;

        r0.<com.android.server.wm.WindowState: int mXOffset> = 0;

        r0.<com.android.server.wm.WindowState: int mYOffset> = 0;

        r0.<com.android.server.wm.WindowState: int mLayer> = 0;

        $r61 = new com.android.server.input.InputWindowHandle;

        $r56 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r56 == null goto label42;

        $r58 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r57 = $r58.<com.android.server.wm.AppWindowToken: com.android.server.input.InputApplicationHandle mInputApplicationHandle>;

        goto label43;

     label42:
        $r57 = null;

     label43:
        $i15 = virtualinvoke r7.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        specialinvoke $r61.<com.android.server.input.InputWindowHandle: void <init>(com.android.server.input.InputApplicationHandle,java.lang.Object,int)>($r57, r0, $i15);

        r0.<com.android.server.wm.WindowState: com.android.server.input.InputWindowHandle mInputWindowHandle> = $r61;

        return;

        catch android.os.RemoteException from label03 to label04 with label05;
    }

    void attach()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.Session $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        virtualinvoke $r1.<com.android.server.wm.Session: void windowAddedLocked()>();

        return;
    }

    public int getOwningUid()
    {
        com.android.server.wm.WindowState r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowState;

        $i0 = r0.<com.android.server.wm.WindowState: int mOwnerUid>;

        return $i0;
    }

    public java.lang.String getOwningPackage()
    {
        com.android.server.wm.WindowState r0;
        android.view.WindowManager$LayoutParams $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r2 = $r1.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

        return $r2;
    }

    public void computeFrameLw(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect r1, r2, r3, r4, r5, r6, r7, $r12, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r32, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r99, $r100, $r101, $r102, $r103, $r105, $r106, $r107, $r108, $r109, $r116, $r118, $r119;
        com.android.server.wm.TaskStack r8, $r120;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34;
        com.android.server.wm.DisplayContent r9;
        com.android.server.wm.AppWindowToken $r10;
        android.view.DisplayInfo r11;
        android.view.WindowManager$LayoutParams $r16, $r17, $r19, $r26, $r28, $r29, $r30, $r31, $r33, $r104, $r110, $r111, $r112, $r113, $r114, $r115, $r117;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10;
        com.android.server.wm.WindowManagerService $r98;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: android.graphics.Rect;

        r6 := @parameter5: android.graphics.Rect;

        r7 := @parameter6: android.graphics.Rect;

        r0.<com.android.server.wm.WindowState: boolean mHaveFrame> = 1;

        $r10 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r10 == null goto label01;

        $r120 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.TaskStack getStack()>();

        goto label02;

     label01:
        $r120 = null;

     label02:
        r8 = $r120;

        if r8 == null goto label03;

        $z9 = virtualinvoke r8.<com.android.server.wm.TaskStack: boolean isFullscreen()>();

        if $z9 != 0 goto label03;

        $r118 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        specialinvoke r0.<com.android.server.wm.WindowState: void getStackBounds(com.android.server.wm.TaskStack,android.graphics.Rect)>(r8, $r118);

        $z10 = r0.<com.android.server.wm.WindowState: boolean mUnderStatusBar>;

        if $z10 == 0 goto label04;

        $r119 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        $i126 = r1.<android.graphics.Rect: int top>;

        $r119.<android.graphics.Rect: int top> = $i126;

        goto label04;

     label03:
        $r13 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        virtualinvoke $r13.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

     label04:
        $r12 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mDisplayFrame>;

        virtualinvoke $r12.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r14 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        i0 = virtualinvoke $r14.<android.graphics.Rect: int width()>();

        $r15 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        i1 = virtualinvoke $r15.<android.graphics.Rect: int height()>();

        $r16 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i6 = $r16.<android.view.WindowManager$LayoutParams: int flags>;

        $i7 = $i6 & 16384;

        if $i7 == 0 goto label10;

        $r110 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i117 = $r110.<android.view.WindowManager$LayoutParams: int width>;

        if $i117 >= 0 goto label05;

        i2 = i0;

        goto label07;

     label05:
        $z7 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z7 == 0 goto label06;

        $r117 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i125 = $r117.<android.view.WindowManager$LayoutParams: int width>;

        $f32 = (float) $i125;

        $f31 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        $f33 = $f32 * $f31;

        $f34 = $f33 + 0.5F;

        i2 = (int) $f34;

        goto label07;

     label06:
        $r112 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i2 = $r112.<android.view.WindowManager$LayoutParams: int width>;

     label07:
        $r111 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i118 = $r111.<android.view.WindowManager$LayoutParams: int height>;

        if $i118 >= 0 goto label08;

        i3 = i1;

        goto label16;

     label08:
        $z8 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z8 == 0 goto label09;

        $r113 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i119 = $r113.<android.view.WindowManager$LayoutParams: int height>;

        $f20 = (float) $i119;

        $f21 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        $f19 = $f20 * $f21;

        $f18 = $f19 + 0.5F;

        i3 = (int) $f18;

        goto label16;

     label09:
        $r114 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i3 = $r114.<android.view.WindowManager$LayoutParams: int height>;

        goto label16;

     label10:
        $r17 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i8 = $r17.<android.view.WindowManager$LayoutParams: int width>;

        if $i8 != -1 goto label11;

        i2 = i0;

        goto label13;

     label11:
        $z0 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z0 == 0 goto label12;

        $i124 = r0.<com.android.server.wm.WindowState: int mRequestedWidth>;

        $f29 = (float) $i124;

        $f28 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        $f17 = $f29 * $f28;

        $f16 = $f17 + 0.5F;

        i2 = (int) $f16;

        goto label13;

     label12:
        i2 = r0.<com.android.server.wm.WindowState: int mRequestedWidth>;

     label13:
        $r19 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i9 = $r19.<android.view.WindowManager$LayoutParams: int height>;

        if $i9 != -1 goto label14;

        i3 = i1;

        goto label16;

     label14:
        $z1 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z1 == 0 goto label15;

        $i123 = r0.<com.android.server.wm.WindowState: int mRequestedHeight>;

        $f25 = (float) $i123;

        $f27 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        $f26 = $f25 * $f27;

        $f30 = $f26 + 0.5F;

        i3 = (int) $f30;

        goto label16;

     label15:
        i3 = r0.<com.android.server.wm.WindowState: int mRequestedHeight>;

     label16:
        $r18 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mParentFrame>;

        $z2 = virtualinvoke $r18.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label17;

        $r116 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mParentFrame>;

        virtualinvoke $r116.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        r0.<com.android.server.wm.WindowState: boolean mContentChanged> = 1;

     label17:
        $i10 = r0.<com.android.server.wm.WindowState: int mRequestedWidth>;

        $i12 = r0.<com.android.server.wm.WindowState: int mLastRequestedWidth>;

        if $i10 != $i12 goto label18;

        $i121 = r0.<com.android.server.wm.WindowState: int mRequestedHeight>;

        $i122 = r0.<com.android.server.wm.WindowState: int mLastRequestedHeight>;

        if $i121 == $i122 goto label19;

     label18:
        $i11 = r0.<com.android.server.wm.WindowState: int mRequestedWidth>;

        r0.<com.android.server.wm.WindowState: int mLastRequestedWidth> = $i11;

        $i13 = r0.<com.android.server.wm.WindowState: int mRequestedHeight>;

        r0.<com.android.server.wm.WindowState: int mLastRequestedHeight> = $i13;

        r0.<com.android.server.wm.WindowState: boolean mContentChanged> = 1;

     label19:
        $r22 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        virtualinvoke $r22.<android.graphics.Rect: void set(android.graphics.Rect)>(r3);

        $r20 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        virtualinvoke $r20.<android.graphics.Rect: void set(android.graphics.Rect)>(r4);

        $r21 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        virtualinvoke $r21.<android.graphics.Rect: void set(android.graphics.Rect)>(r5);

        $r24 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mDecorFrame>;

        virtualinvoke $r24.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        $r25 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        virtualinvoke $r25.<android.graphics.Rect: void set(android.graphics.Rect)>(r7);

        $r23 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        i4 = virtualinvoke $r23.<android.graphics.Rect: int width()>();

        $r27 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        i5 = virtualinvoke $r27.<android.graphics.Rect: int height()>();

        $z3 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z3 == 0 goto label20;

        $r104 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i115 = $r104.<android.view.WindowManager$LayoutParams: int x>;

        $f23 = (float) $i115;

        $f10 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        f0 = $f23 * $f10;

        $r115 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i120 = $r115.<android.view.WindowManager$LayoutParams: int y>;

        $f24 = (float) $i120;

        $f22 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        f1 = $f24 * $f22;

        goto label21;

     label20:
        $r26 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i15 = $r26.<android.view.WindowManager$LayoutParams: int x>;

        f0 = (float) $i15;

        $r29 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i14 = $r29.<android.view.WindowManager$LayoutParams: int y>;

        f1 = (float) $i14;

     label21:
        $r28 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i17 = $r28.<android.view.WindowManager$LayoutParams: int gravity>;

        $r32 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        $r30 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $f3 = $r30.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        $f4 = (float) i0;

        $f2 = $f3 * $f4;

        $f7 = f0 + $f2;

        $i16 = (int) $f7;

        $r31 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $f5 = $r31.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        $f6 = (float) i1;

        $f8 = $f5 * $f6;

        $f9 = f1 + $f8;

        $i18 = (int) $f9;

        $r34 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>($i17, i2, i3, $r32, $i16, $i18, $r34);

        $r33 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i22 = $r33.<android.view.WindowManager$LayoutParams: int gravity>;

        $r36 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        staticinvoke <android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>($i22, r2, $r36);

        $r35 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $r37 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i20 = $r37.<android.graphics.Rect: int left>;

        $r38 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i19 = $r38.<android.graphics.Rect: int left>;

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i19);

        $r42 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i25 = $r42.<android.graphics.Rect: int top>;

        $r41 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i26 = $r41.<android.graphics.Rect: int top>;

        $i23 = staticinvoke <java.lang.Math: int max(int,int)>($i25, $i26);

        $r39 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i31 = $r39.<android.graphics.Rect: int right>;

        $r40 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i24 = $r40.<android.graphics.Rect: int right>;

        $i30 = staticinvoke <java.lang.Math: int min(int,int)>($i31, $i24);

        $r45 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i27 = $r45.<android.graphics.Rect: int bottom>;

        $r44 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i28 = $r44.<android.graphics.Rect: int bottom>;

        $i29 = staticinvoke <java.lang.Math: int min(int,int)>($i27, $i28);

        virtualinvoke $r35.<android.graphics.Rect: void set(int,int,int,int)>($i21, $i23, $i30, $i29);

        $r48 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $r43 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i34 = $r43.<android.graphics.Rect: int left>;

        $r49 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i35 = $r49.<android.graphics.Rect: int left>;

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>($i34, $i35);

        $r47 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i39 = $r47.<android.graphics.Rect: int top>;

        $r46 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i32 = $r46.<android.graphics.Rect: int top>;

        $i40 = staticinvoke <java.lang.Math: int max(int,int)>($i39, $i32);

        $r51 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i38 = $r51.<android.graphics.Rect: int right>;

        $r52 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i37 = $r52.<android.graphics.Rect: int right>;

        $i36 = staticinvoke <java.lang.Math: int min(int,int)>($i38, $i37);

        $r50 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i44 = $r50.<android.graphics.Rect: int bottom>;

        $r55 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i45 = $r55.<android.graphics.Rect: int bottom>;

        $i43 = staticinvoke <java.lang.Math: int min(int,int)>($i44, $i45);

        virtualinvoke $r48.<android.graphics.Rect: void set(int,int,int,int)>($i33, $i40, $i36, $i43);

        $r59 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $r54 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i41 = $r54.<android.graphics.Rect: int left>;

        $r53 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i42 = $r53.<android.graphics.Rect: int left>;

        $i49 = staticinvoke <java.lang.Math: int max(int,int)>($i41, $i42);

        $r58 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i47 = $r58.<android.graphics.Rect: int top>;

        $r57 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i48 = $r57.<android.graphics.Rect: int top>;

        $i46 = staticinvoke <java.lang.Math: int max(int,int)>($i47, $i48);

        $r56 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i57 = $r56.<android.graphics.Rect: int right>;

        $r63 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i55 = $r63.<android.graphics.Rect: int right>;

        $i56 = staticinvoke <java.lang.Math: int min(int,int)>($i57, $i55);

        $r65 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i58 = $r65.<android.graphics.Rect: int bottom>;

        $r64 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i59 = $r64.<android.graphics.Rect: int bottom>;

        $i50 = staticinvoke <java.lang.Math: int min(int,int)>($i58, $i59);

        virtualinvoke $r59.<android.graphics.Rect: void set(int,int,int,int)>($i49, $i46, $i56, $i50);

        $r62 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanInsets>;

        $r60 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        $i53 = $r60.<android.graphics.Rect: int left>;

        $r61 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i51 = $r61.<android.graphics.Rect: int left>;

        $i52 = $i53 - $i51;

        $i54 = staticinvoke <java.lang.Math: int max(int,int)>($i52, 0);

        $r68 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        $i67 = $r68.<android.graphics.Rect: int top>;

        $r69 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i66 = $r69.<android.graphics.Rect: int top>;

        $i68 = $i67 - $i66;

        $i69 = staticinvoke <java.lang.Math: int max(int,int)>($i68, 0);

        $r70 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i61 = $r70.<android.graphics.Rect: int right>;

        $r71 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        $i60 = $r71.<android.graphics.Rect: int right>;

        $i62 = $i61 - $i60;

        $i63 = staticinvoke <java.lang.Math: int max(int,int)>($i62, 0);

        $r66 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i65 = $r66.<android.graphics.Rect: int bottom>;

        $r67 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        $i64 = $r67.<android.graphics.Rect: int bottom>;

        $i75 = $i65 - $i64;

        $i74 = staticinvoke <java.lang.Math: int max(int,int)>($i75, 0);

        virtualinvoke $r62.<android.graphics.Rect: void set(int,int,int,int)>($i54, $i69, $i63, $i74);

        $r84 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentInsets>;

        $r77 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i76 = $r77.<android.graphics.Rect: int left>;

        $r76 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i77 = $r76.<android.graphics.Rect: int left>;

        $i87 = $i76 - $i77;

        $r79 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i70 = $r79.<android.graphics.Rect: int top>;

        $r78 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i71 = $r78.<android.graphics.Rect: int top>;

        $i86 = $i70 - $i71;

        $r73 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i72 = $r73.<android.graphics.Rect: int right>;

        $r72 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i73 = $r72.<android.graphics.Rect: int right>;

        $i83 = $i72 - $i73;

        $r75 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i85 = $r75.<android.graphics.Rect: int bottom>;

        $r74 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        $i84 = $r74.<android.graphics.Rect: int bottom>;

        $i82 = $i85 - $i84;

        virtualinvoke $r84.<android.graphics.Rect: void set(int,int,int,int)>($i87, $i86, $i83, $i82);

        $r88 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleInsets>;

        $r85 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i78 = $r85.<android.graphics.Rect: int left>;

        $r81 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i79 = $r81.<android.graphics.Rect: int left>;

        $i92 = $i78 - $i79;

        $r80 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i80 = $r80.<android.graphics.Rect: int top>;

        $r83 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i81 = $r83.<android.graphics.Rect: int top>;

        $i90 = $i80 - $i81;

        $r82 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i97 = $r82.<android.graphics.Rect: int right>;

        $r90 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i96 = $r90.<android.graphics.Rect: int right>;

        $i91 = $i97 - $i96;

        $r91 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i95 = $r91.<android.graphics.Rect: int bottom>;

        $r89 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        $i93 = $r89.<android.graphics.Rect: int bottom>;

        $i94 = $i95 - $i93;

        virtualinvoke $r88.<android.graphics.Rect: void set(int,int,int,int)>($i92, $i90, $i91, $i94);

        $r96 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableInsets>;

        $r87 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i88 = $r87.<android.graphics.Rect: int left>;

        $r86 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i89 = $r86.<android.graphics.Rect: int left>;

        $i106 = $i88 - $i89;

        $i107 = staticinvoke <java.lang.Math: int max(int,int)>($i106, 0);

        $r97 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i104 = $r97.<android.graphics.Rect: int top>;

        $r95 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i103 = $r95.<android.graphics.Rect: int top>;

        $i105 = $i104 - $i103;

        $i101 = staticinvoke <java.lang.Math: int max(int,int)>($i105, 0);

        $r93 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i98 = $r93.<android.graphics.Rect: int right>;

        $r94 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i102 = $r94.<android.graphics.Rect: int right>;

        $i99 = $i98 - $i102;

        $i100 = staticinvoke <java.lang.Math: int max(int,int)>($i99, 0);

        $r92 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i113 = $r92.<android.graphics.Rect: int bottom>;

        $r102 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableFrame>;

        $i114 = $r102.<android.graphics.Rect: int bottom>;

        $i112 = $i113 - $i114;

        $i111 = staticinvoke <java.lang.Math: int max(int,int)>($i112, 0);

        virtualinvoke $r96.<android.graphics.Rect: void set(int,int,int,int)>($i107, $i101, $i100, $i111);

        $r100 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $r101 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        virtualinvoke $r100.<android.graphics.Rect: void set(android.graphics.Rect)>($r101);

        $z5 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z5 == 0 goto label22;

        $r108 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanInsets>;

        $f15 = r0.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        virtualinvoke $r108.<android.graphics.Rect: void scale(float)>($f15);

        $r107 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentInsets>;

        $f14 = r0.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        virtualinvoke $r107.<android.graphics.Rect: void scale(float)>($f14);

        $r106 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleInsets>;

        $f13 = r0.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        virtualinvoke $r106.<android.graphics.Rect: void scale(float)>($f13);

        $r105 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableInsets>;

        $f12 = r0.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        virtualinvoke $r105.<android.graphics.Rect: void scale(float)>($f12);

        $r103 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $f11 = r0.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        virtualinvoke $r103.<android.graphics.Rect: void scale(float)>($f11);

     label22:
        $z4 = r0.<com.android.server.wm.WindowState: boolean mIsWallpaper>;

        if $z4 == 0 goto label24;

        $r99 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i110 = virtualinvoke $r99.<android.graphics.Rect: int width()>();

        if i4 != $i110 goto label23;

        $r109 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i116 = virtualinvoke $r109.<android.graphics.Rect: int height()>();

        if i5 == $i116 goto label24;

     label23:
        r9 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r9 == null goto label24;

        r11 = virtualinvoke r9.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $r98 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $i108 = r11.<android.view.DisplayInfo: int logicalWidth>;

        $i109 = r11.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke $r98.<com.android.server.wm.WindowManagerService: boolean updateWallpaperOffsetLocked(com.android.server.wm.WindowState,int,int,boolean)>(r0, $i108, $i109, 0);

     label24:
        return;
    }

    public android.graphics.Rect getFrameLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        return $r1;
    }

    public android.graphics.RectF getShownFrameLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.RectF $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        return $r1;
    }

    public android.graphics.Rect getDisplayFrameLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mDisplayFrame>;

        return $r1;
    }

    public android.graphics.Rect getOverscanFrameLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        return $r1;
    }

    public android.graphics.Rect getContentFrameLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        return $r1;
    }

    public android.graphics.Rect getVisibleFrameLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        return $r1;
    }

    public boolean getGivenInsetsPendingLw()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mGivenInsetsPending>;

        return $z0;
    }

    public android.graphics.Rect getGivenContentInsetsLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenContentInsets>;

        return $r1;
    }

    public android.graphics.Rect getGivenVisibleInsetsLw()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenVisibleInsets>;

        return $r1;
    }

    public android.view.WindowManager$LayoutParams getAttrs()
    {
        com.android.server.wm.WindowState r0;
        android.view.WindowManager$LayoutParams $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        return $r1;
    }

    public boolean getNeedsMenuLw(android.view.WindowManagerPolicy$WindowState)
    {
        com.android.server.wm.WindowState r0, r2;
        android.view.WindowManagerPolicy$WindowState r1;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.wm.WindowList r3;
        android.view.WindowManager$LayoutParams $r4, $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.view.WindowManagerPolicy$WindowState;

        i0 = -1;

        r2 = r0;

        r3 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowList getWindowList()>();

     label1:
        $r4 = r2.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r4.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label4;

        $r6 = r2.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r6.<android.view.WindowManager$LayoutParams: int flags>;

        $i4 = $i3 & 1073741824;

        if $i4 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        if r2 != r1 goto label5;

        return 0;

     label5:
        if i0 >= 0 goto label6;

        i0 = virtualinvoke r3.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r2);

     label6:
        i0 = i0 + -1;

        if i0 >= 0 goto label7;

        return 0;

     label7:
        $r5 = virtualinvoke r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.wm.WindowState) $r5;

        goto label1;
    }

    public int getSystemUiVisibility()
    {
        com.android.server.wm.WindowState r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowState;

        $i0 = r0.<com.android.server.wm.WindowState: int mSystemUiVisibility>;

        return $i0;
    }

    public int getSurfaceLayer()
    {
        com.android.server.wm.WindowState r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowState;

        $i0 = r0.<com.android.server.wm.WindowState: int mLayer>;

        return $i0;
    }

    public android.view.IApplicationToken getAppToken()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken $r1, $r2;
        android.view.IApplicationToken $r3;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r3 = $r2.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean isVoiceInteraction()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = $r2.<com.android.server.wm.AppWindowToken: boolean voiceInteraction>;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean setInsetsChanged()
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mOverscanInsetsChanged>;

        $r2 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastOverscanInsets>;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanInsets>;

        $z1 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label01;

        $z19 = 1;

        goto label02;

     label01:
        $z19 = 0;

     label02:
        $z2 = $z0 | $z19;

        r0.<com.android.server.wm.WindowState: boolean mOverscanInsetsChanged> = $z2;

        $z3 = r0.<com.android.server.wm.WindowState: boolean mContentInsetsChanged>;

        $r4 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastContentInsets>;

        $r3 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentInsets>;

        $z4 = virtualinvoke $r4.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z4 != 0 goto label03;

        $z17 = 1;

        goto label04;

     label03:
        $z17 = 0;

     label04:
        $z5 = $z3 | $z17;

        r0.<com.android.server.wm.WindowState: boolean mContentInsetsChanged> = $z5;

        $z6 = r0.<com.android.server.wm.WindowState: boolean mVisibleInsetsChanged>;

        $r6 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastVisibleInsets>;

        $r5 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleInsets>;

        $z7 = virtualinvoke $r6.<android.graphics.Rect: boolean equals(java.lang.Object)>($r5);

        if $z7 != 0 goto label05;

        $z18 = 1;

        goto label06;

     label05:
        $z18 = 0;

     label06:
        $z8 = $z6 | $z18;

        r0.<com.android.server.wm.WindowState: boolean mVisibleInsetsChanged> = $z8;

        $z10 = r0.<com.android.server.wm.WindowState: boolean mStableInsetsChanged>;

        $r7 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastStableInsets>;

        $r8 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableInsets>;

        $z9 = virtualinvoke $r7.<android.graphics.Rect: boolean equals(java.lang.Object)>($r8);

        if $z9 != 0 goto label07;

        $z15 = 1;

        goto label08;

     label07:
        $z15 = 0;

     label08:
        $z12 = $z10 | $z15;

        r0.<com.android.server.wm.WindowState: boolean mStableInsetsChanged> = $z12;

        $z11 = r0.<com.android.server.wm.WindowState: boolean mOverscanInsetsChanged>;

        if $z11 != 0 goto label09;

        $z14 = r0.<com.android.server.wm.WindowState: boolean mContentInsetsChanged>;

        if $z14 != 0 goto label09;

        $z13 = r0.<com.android.server.wm.WindowState: boolean mVisibleInsetsChanged>;

        if $z13 == 0 goto label10;

     label09:
        $z16 = 1;

        goto label11;

     label10:
        $z16 = 0;

     label11:
        return $z16;
    }

    public com.android.server.wm.DisplayContent getDisplayContent()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.TaskStack r1;
        com.android.server.wm.AppWindowToken $r2;
        com.android.server.wm.DisplayContent $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r2 == null goto label1;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mNotOnAppsDisplay>;

        if $z0 == 0 goto label2;

     label1:
        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r3;

     label2:
        r1 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.TaskStack getStack()>();

        if r1 != null goto label3;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        goto label4;

     label3:
        $r4 = virtualinvoke r1.<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent getDisplayContent()>();

     label4:
        return $r4;
    }

    public int getDisplayId()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.DisplayContent r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        return $i0;
    }

    com.android.server.wm.TaskStack getStack()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1, $r3, $r24;
        com.android.server.wm.Task r2;
        com.android.server.wm.DisplayContent $r4;
        com.android.server.wm.TaskStack $r5, $r19, $r23;
        com.android.server.wm.WindowManagerService $r6, $r25;
        int $i0, $i1;
        android.util.SparseArray $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r20, $r22;
        java.lang.String $r16, $r17, $r21;

        r0 := @this: com.android.server.wm.WindowState;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r3 != null goto label1;

        $r25 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r24 = $r25.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppWindowToken mFocusedApp>;

        goto label2;

     label1:
        $r24 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

     label2:
        r1 = $r24;

        if r1 == null goto label5;

        $r6 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r7 = $r6.<com.android.server.wm.WindowManagerService: android.util.SparseArray mTaskIdToTask>;

        $i0 = r1.<com.android.server.wm.AppWindowToken: int groupId>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r2 = (com.android.server.wm.Task) $r8;

        if r2 == null goto label4;

        $r19 = r2.<com.android.server.wm.Task: com.android.server.wm.TaskStack mStack>;

        if $r19 == null goto label3;

        $r23 = r2.<com.android.server.wm.Task: com.android.server.wm.TaskStack mStack>;

        return $r23;

     label3:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getStack: mStack null for task=");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowState", $r21);

        goto label5;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getStack: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" couldn\'t find taskId=");

        $i1 = r1.<com.android.server.wm.AppWindowToken: int groupId>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Callers=");

        $r16 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowState", $r17);

     label5:
        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack getHomeStack()>();

        return $r5;
    }

    void getStackBounds(android.graphics.Rect)
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Rect r1;
        com.android.server.wm.TaskStack $r2;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.TaskStack getStack()>();

        specialinvoke r0.<com.android.server.wm.WindowState: void getStackBounds(com.android.server.wm.TaskStack,android.graphics.Rect)>($r2, r1);

        return;
    }

    private void getStackBounds(com.android.server.wm.TaskStack, android.graphics.Rect)
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.TaskStack r1;
        android.graphics.Rect r2, $r3;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: com.android.server.wm.TaskStack;

        r2 := @parameter1: android.graphics.Rect;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.TaskStack: void getBounds(android.graphics.Rect)>(r2);

        return;

     label1:
        $r3 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return;
    }

    public long getInputDispatchingTimeoutNanos()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken $r1, $r2;
        long $l0;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $l0 = $r2.<com.android.server.wm.AppWindowToken: long inputDispatchingTimeoutNanos>;

        goto label2;

     label1:
        $l0 = 5000000000L;

     label2:
        return $l0;
    }

    public boolean hasAppShownWindows()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = $r2.<com.android.server.wm.AppWindowToken: boolean firstWindowDrawn>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z2 = $r3.<com.android.server.wm.AppWindowToken: boolean startingDisplayed>;

        if $z2 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    boolean isIdentityMatrix(float, float, float, float)
    {
        com.android.server.wm.WindowState r0;
        float f0, f1, f2, f3;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: com.android.server.wm.WindowState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $b0 = f0 cmpg 0.99999F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 1.00001F;

        if $b1 <= 0 goto label2;

     label1:
        return 0;

     label2:
        $b2 = f3 cmpg 0.99999F;

        if $b2 < 0 goto label3;

        $b3 = f3 cmpl 1.00001F;

        if $b3 <= 0 goto label4;

     label3:
        return 0;

     label4:
        $b4 = f1 cmpg -1.0E-6F;

        if $b4 < 0 goto label5;

        $b5 = f1 cmpl 1.0E-6F;

        if $b5 <= 0 goto label6;

     label5:
        return 0;

     label6:
        $b6 = f2 cmpg -1.0E-6F;

        if $b6 < 0 goto label7;

        $b7 = f2 cmpl 1.0E-6F;

        if $b7 <= 0 goto label8;

     label7:
        return 0;

     label8:
        return 1;
    }

    void prelayout()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r1;
        float $f1, $f2, $f3;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $f1 = $r1.<com.android.server.wm.WindowManagerService: float mCompatibleScreenScale>;

        r0.<com.android.server.wm.WindowState: float mGlobalScale> = $f1;

        $f2 = r0.<com.android.server.wm.WindowState: float mGlobalScale>;

        $f3 = 1.0F / $f2;

        r0.<com.android.server.wm.WindowState: float mInvGlobalScale> = $f3;

        goto label2;

     label1:
        r0.<com.android.server.wm.WindowState: float mInvGlobalScale> = 1.0F;

        r0.<com.android.server.wm.WindowState: float mGlobalScale> = 1.0F;

     label2:
        return;
    }

    public boolean isVisibleLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z2 != 0 goto label2;

        if r1 == null goto label1;

        $z6 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z6 != 0 goto label2;

     label1:
        $z3 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z3 != 0 goto label2;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z4 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    public boolean isVisibleOrBehindKeyguardLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.android.server.wm.WindowToken $r2, $r5;
        com.android.server.wm.WindowStateAnimator $r3;
        android.view.animation.Animation $r4, $r7;
        int $i0;
        com.android.server.wm.AppWindowAnimator $r6;
        com.android.server.wm.AppTransition $r8;
        com.android.server.wm.WindowManagerService $r9;

        r0 := @this: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z1 = $r2.<com.android.server.wm.WindowToken: boolean waitingToShow>;

        if $z1 == 0 goto label01;

        $r9 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        $z11 = virtualinvoke $r8.<com.android.server.wm.AppTransition: boolean isTransitionSet()>();

        if $z11 == 0 goto label01;

        return 0;

     label01:
        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if r1 == null goto label03;

        $r6 = r1.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r7 = $r6.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r7 == null goto label02;

        $z10 = 1;

        goto label04;

     label02:
        goto label04;

     label03:
        $z10 = 0;

     label04:
        z0 = $z10;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z2 == 0 goto label09;

        $z3 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z3 != 0 goto label09;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z4 != 0 goto label09;

        if r1 != null goto label05;

        $z9 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z9 == 0 goto label09;

        goto label06;

     label05:
        $z5 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z5 != 0 goto label09;

     label06:
        $z6 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z6 != 0 goto label07;

        $i0 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        if $i0 != 0 goto label07;

        $r5 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z8 = $r5.<com.android.server.wm.WindowToken: boolean hidden>;

        if $z8 == 0 goto label08;

     label07:
        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r4 = $r3.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r4 != null goto label08;

        if z0 == 0 goto label09;

     label08:
        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        return $z7;
    }

    public boolean isWinVisibleLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.wm.AppWindowAnimator $r2;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z2 != 0 goto label2;

        if r1 == null goto label1;

        $z6 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z6 == 0 goto label1;

        $r2 = r1.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $z7 = $r2.<com.android.server.wm.AppWindowAnimator: boolean animating>;

        if $z7 == 0 goto label2;

     label1:
        $z3 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z3 != 0 goto label2;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z4 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    boolean isVisibleNow()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.wm.WindowToken $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label1;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z2 != 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z3 = $r1.<com.android.server.wm.WindowToken: boolean hidden>;

        if $z3 != 0 goto label1;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z4 != 0 goto label1;

        $z5 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z5 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        return $z6;
    }

    boolean isPotentialDragTarget()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0, $z1, $z2;
        android.view.InputChannel $r1;
        com.android.server.input.InputWindowHandle $r2;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isVisibleNow()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mRemoved>;

        if $z1 != 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.input.InputWindowHandle mInputWindowHandle>;

        if $r2 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean isVisibleOrAdding()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 != 0 goto label1;

        $z7 = r0.<com.android.server.wm.WindowState: boolean mRelayoutCalled>;

        if $z7 != 0 goto label3;

        $i0 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        if $i0 != 0 goto label3;

     label1:
        $z1 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label3;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z2 != 0 goto label3;

        if r1 == null goto label2;

        $z6 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z6 != 0 goto label3;

     label2:
        $z3 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z3 != 0 goto label3;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z4 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    boolean isOnScreen()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.wm.WindowStateAnimator $r2, $r4;
        android.view.animation.Animation $r3, $r5, $r7;
        com.android.server.wm.AppWindowAnimator $r6;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label01;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label01;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z2 == 0 goto label02;

     label01:
        return 0;

     label02:
        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if r1 == null goto label07;

        $z5 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z5 != 0 goto label03;

        $z7 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z7 == 0 goto label04;

     label03:
        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r5 = $r4.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r5 != null goto label04;

        $r6 = r1.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r7 = $r6.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r7 == null goto label05;

     label04:
        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        return $z6;

     label07:
        $z3 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z3 == 0 goto label08;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r3 = $r2.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r3 == null goto label09;

     label08:
        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        return $z4;
    }

    boolean isReadyForDisplay()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.WindowToken $r1, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.wm.WindowStateAnimator $r2;
        android.view.animation.Animation $r3, $r7;
        com.android.server.wm.AppWindowToken $r4, $r5;
        com.android.server.wm.AppWindowAnimator $r6;
        int $i0;
        com.android.server.wm.WindowManagerService $r9;
        com.android.server.wm.AppTransition $r10;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z0 = $r1.<com.android.server.wm.WindowToken: boolean waitingToShow>;

        if $z0 == 0 goto label1;

        $r9 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        $z7 = virtualinvoke $r10.<com.android.server.wm.AppTransition: boolean isTransitionSet()>();

        if $z7 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z1 == 0 goto label4;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z2 == 0 goto label4;

        $z3 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z3 != 0 goto label4;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z4 != 0 goto label2;

        $i0 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        if $i0 != 0 goto label2;

        $r8 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z6 = $r8.<com.android.server.wm.WindowToken: boolean hidden>;

        if $z6 == 0 goto label3;

     label2:
        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r3 = $r2.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r3 != null goto label3;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r4 == null goto label4;

        $r5 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r6 = $r5.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r7 = $r6.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r7 == null goto label4;

     label3:
        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    boolean isReadyForDisplayIgnoringKeyguard()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        com.android.server.wm.WindowToken $r2, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.server.wm.WindowStateAnimator $r3, $r7;
        android.view.animation.Animation $r4, $r6;
        com.android.server.wm.AppWindowAnimator $r5;
        int $i0;
        com.android.server.wm.AppTransition $r9;
        com.android.server.wm.WindowManagerService $r10;

        r0 := @this: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z0 = $r2.<com.android.server.wm.WindowToken: boolean waitingToShow>;

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r10.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        $z8 = virtualinvoke $r9.<com.android.server.wm.AppTransition: boolean isTransitionSet()>();

        if $z8 == 0 goto label1;

        return 0;

     label1:
        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if r1 != null goto label2;

        $z6 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z6 != 0 goto label2;

        return 0;

     label2:
        $z1 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z1 == 0 goto label5;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z2 != 0 goto label5;

        $z3 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z3 != 0 goto label3;

        $i0 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        if $i0 != 0 goto label3;

        $r8 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z7 = $r8.<com.android.server.wm.WindowToken: boolean hidden>;

        if $z7 == 0 goto label4;

     label3:
        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r4 = $r3.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r4 != null goto label4;

        if r1 == null goto label5;

        $r5 = r1.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r6 = $r5.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r6 == null goto label5;

        $r7 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $z5 = virtualinvoke $r7.<com.android.server.wm.WindowStateAnimator: boolean isDummyAnimation()>();

        if $z5 != 0 goto label5;

     label4:
        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public boolean isDisplayedLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.wm.WindowStateAnimator $r2;
        com.android.server.wm.AppWindowAnimator $r3;
        android.view.animation.Animation $r4;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isDrawnLw()>();

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label3;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z2 != 0 goto label1;

        if r1 == null goto label2;

        $z5 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z5 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $z3 = $r2.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        if $z3 != 0 goto label2;

        if r1 == null goto label3;

        $r3 = r1.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r4 = $r3.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r4 == null goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public boolean isAnimatingLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.WindowStateAnimator $r1;
        android.view.animation.Animation $r2, $r6;
        com.android.server.wm.AppWindowToken $r3, $r4;
        boolean $z0;
        com.android.server.wm.AppWindowAnimator $r5;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r2 = $r1.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r2 != null goto label1;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r5 = $r4.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r6 = $r5.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r6 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isGoneForLayoutLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.AppWindowToken r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.server.wm.WindowToken $r2;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $i0 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        if $i0 == 8 goto label4;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mRelayoutCalled>;

        if $z0 == 0 goto label4;

        if r1 != null goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        $z8 = $r2.<com.android.server.wm.WindowToken: boolean hidden>;

        if $z8 != 0 goto label4;

     label1:
        if r1 == null goto label2;

        $z6 = r1.<com.android.server.wm.AppWindowToken: boolean hiddenRequested>;

        if $z6 != 0 goto label4;

        $z7 = r1.<com.android.server.wm.AppWindowToken: boolean hidden>;

        if $z7 != 0 goto label4;

     label2:
        $z1 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z1 != 0 goto label4;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z2 == 0 goto label3;

        $z5 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z5 == 0 goto label4;

     label3:
        $z3 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z3 == 0 goto label5;

     label4:
        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public boolean isDrawFinishedLw()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowStateAnimator $r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z1 != 0 goto label2;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i0 = $r1.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i0 == 2 goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i1 = $r2.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i1 == 3 goto label1;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i2 = $r3.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i2 != 4 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isDrawnLw()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowStateAnimator $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z1 != 0 goto label2;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i0 = $r1.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i0 == 3 goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i1 = $r2.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i1 != 4 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isOpaqueDrawn()
    {
        com.android.server.wm.WindowState r0;
        android.view.WindowManager$LayoutParams $r1, $r8;
        int $i0, $i1;
        boolean $z0, $z1;
        com.android.server.wm.WindowStateAnimator $r2;
        android.view.animation.Animation $r3, $r7;
        com.android.server.wm.AppWindowToken $r4, $r5;
        com.android.server.wm.AppWindowAnimator $r6;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r1.<android.view.WindowManager$LayoutParams: int format>;

        if $i0 == -1 goto label1;

        $r8 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r8.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 != 2013 goto label3;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isDrawnLw()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r3 = $r2.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r3 != null goto label3;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r6 = $r5.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r7 = $r6.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r7 != null goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    boolean shouldAnimateMove()
    {
        com.android.server.wm.WindowState r0, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.wm.WindowStateAnimator $r1;
        com.android.server.wm.WindowManagerService $r2;
        android.graphics.Rect $r3, $r4, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.WindowManager$LayoutParams $r5;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mContentChanged>;

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z1 != 0 goto label3;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $z2 = $r1.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden>;

        if $z2 != 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $z3 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: boolean okToDisplay()>();

        if $z3 == 0 goto label3;

        $r3 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastFrame>;

        $i0 = $r4.<android.graphics.Rect: int top>;

        if $i1 != $i0 goto label1;

        $r9 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i4 = $r9.<android.graphics.Rect: int left>;

        $r8 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastFrame>;

        $i5 = $r8.<android.graphics.Rect: int left>;

        if $i4 == $i5 goto label3;

     label1:
        $r5 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r5.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i3 = $i2 & 64;

        if $i3 != 0 goto label3;

        $r6 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        if $r6 == null goto label2;

        $r7 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $z5 = virtualinvoke $r7.<com.android.server.wm.WindowState: boolean shouldAnimateMove()>();

        if $z5 != 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    boolean isFullscreen(int, int)
    {
        com.android.server.wm.WindowState r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        if $i2 > 0 goto label1;

        $r2 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        if $i3 > 0 goto label1;

        $r3 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i4 = $r3.<android.graphics.Rect: int right>;

        if $i4 < i0 goto label1;

        $r4 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i5 = $r4.<android.graphics.Rect: int bottom>;

        if $i5 < i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isConfigChanged()
    {
        com.android.server.wm.WindowState r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.wm.WindowManagerService $r1, $r6;
        android.content.res.Configuration $r2, $r3, $r5, $r7, $r8;
        android.view.WindowManager$LayoutParams $r4;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.wm.WindowState;

        $r3 = r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration>;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: android.content.res.Configuration mCurConfiguration>;

        if $r3 == $r2 goto label2;

        $r5 = r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration>;

        if $r5 == null goto label1;

        $r8 = r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration>;

        $r6 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r7 = $r6.<com.android.server.wm.WindowManagerService: android.content.res.Configuration mCurConfiguration>;

        $i2 = virtualinvoke $r8.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r7);

        if $i2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        $r4 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r4.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label4;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mConfigHasChanged>;

        $z2 = $z1 | z0;

        r0.<com.android.server.wm.WindowState: boolean mConfigHasChanged> = $z2;

        z0 = r0.<com.android.server.wm.WindowState: boolean mConfigHasChanged>;

     label4:
        return z0;
    }

    void removeLocked()
    {
        com.android.server.wm.WindowState r0, $r2, $r9;
        com.android.server.wm.WindowStateAnimator $r3, $r4;
        com.android.server.wm.Session $r5;
        android.view.IWindow $r6;
        android.os.IBinder $r7;
        com.android.server.wm.WindowState$DeathRecipient $r8;
        com.android.server.wm.WindowList $r10;
        java.lang.RuntimeException $r11;

        r0 := @this: com.android.server.wm.WindowState;

        virtualinvoke r0.<com.android.server.wm.WindowState: void disposeInputChannel()>();

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        if $r2 == null goto label1;

        $r9 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        $r10 = $r9.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        virtualinvoke $r10.<com.android.server.wm.WindowList: boolean remove(java.lang.Object)>(r0);

     label1:
        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke $r3.<com.android.server.wm.WindowStateAnimator: void destroyDeferredSurfaceLocked()>();

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke $r4.<com.android.server.wm.WindowStateAnimator: void destroySurfaceLocked()>();

        $r5 = r0.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        virtualinvoke $r5.<com.android.server.wm.Session: void windowRemovedLocked()>();

     label2:
        $r6 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        $r7 = interfaceinvoke $r6.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r8 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r8, 0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    void setConfiguration(android.content.res.Configuration)
    {
        com.android.server.wm.WindowState r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.content.res.Configuration;

        r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration> = r1;

        r0.<com.android.server.wm.WindowState: boolean mConfigHasChanged> = 0;

        return;
    }

    void setInputChannel(android.view.InputChannel)
    {
        com.android.server.wm.WindowState r0;
        android.view.InputChannel r1, $r2;
        com.android.server.input.InputWindowHandle $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.view.InputChannel;

        $r2 = r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        if $r2 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Window already has an input channel.");

        throw $r4;

     label1:
        r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel> = r1;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.input.InputWindowHandle mInputWindowHandle>;

        $r3.<com.android.server.input.InputWindowHandle: android.view.InputChannel inputChannel> = r1;

        return;
    }

    void disposeInputChannel()
    {
        com.android.server.wm.WindowState r0;
        android.view.InputChannel $r1, $r4, $r6;
        com.android.server.input.InputWindowHandle $r2;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.input.InputManagerService $r5;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r4 = r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        virtualinvoke $r5.<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>($r4);

        $r6 = r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        virtualinvoke $r6.<android.view.InputChannel: void dispose()>();

        r0.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel> = null;

     label1:
        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.input.InputWindowHandle mInputWindowHandle>;

        $r2.<com.android.server.input.InputWindowHandle: android.view.InputChannel inputChannel> = null;

        return;
    }

    public final boolean canReceiveKeys()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        android.view.WindowManager$LayoutParams $r1;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isVisibleOrAdding()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        if $i0 != 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 & 8;

        if $i2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean hasDrawnLw()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.WindowStateAnimator $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i0 = $r1.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean showLw(boolean)
    {
        com.android.server.wm.WindowState r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean showLw(boolean,boolean)>(z0, 1);

        return $z1;
    }

    boolean showLw(boolean, boolean)
    {
        com.android.server.wm.WindowState r0;
        boolean z0, z1, $z2, $z3, $z4, $z6, $z7, $z8;
        com.android.server.wm.WindowManagerService $r1, $r3;
        com.android.server.wm.WindowStateAnimator $r2, $r4;
        android.view.animation.Animation $r5;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isHiddenFromUserLocked()>();

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $z3 = r0.<com.android.server.wm.WindowState: boolean mAppOpVisibility>;

        if $z3 != 0 goto label2;

        return 0;

     label2:
        $z4 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z4 == 0 goto label3;

        $z8 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim>;

        if $z8 == 0 goto label3;

        return 0;

     label3:
        if z0 == 0 goto label5;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $z6 = virtualinvoke $r3.<com.android.server.wm.WindowManagerService: boolean okToDisplay()>();

        if $z6 != 0 goto label4;

        z0 = 0;

        goto label5;

     label4:
        $z7 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z7 == 0 goto label5;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r5 = $r4.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r5 != null goto label5;

        z0 = 0;

     label5:
        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility> = 1;

        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim> = 1;

        if z0 == 0 goto label6;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke $r2.<com.android.server.wm.WindowStateAnimator: boolean applyAnimationLocked(int,boolean)>(1, 1);

     label6:
        if z1 == 0 goto label7;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

     label7:
        return 1;
    }

    public boolean hideLw(boolean)
    {
        com.android.server.wm.WindowState r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean hideLw(boolean,boolean)>(z0, 1);

        return $z1;
    }

    boolean hideLw(boolean, boolean)
    {
        com.android.server.wm.WindowState r0, $r3;
        boolean z0, z1, z2, $z4, $z5;
        com.android.server.wm.WindowManagerService $r1, $r2, $r4, $r5, $r9;
        com.android.server.wm.WindowStateAnimator $r6, $r7;
        android.view.animation.Animation $r8;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r9 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $z5 = virtualinvoke $r9.<com.android.server.wm.WindowManagerService: boolean okToDisplay()>();

        if $z5 != 0 goto label1;

        z0 = 0;

     label1:
        if z0 == 0 goto label2;

        $z4 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim>;

        goto label3;

     label2:
        $z4 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

     label3:
        z2 = $z4;

        if z2 != 0 goto label4;

        return 0;

     label4:
        if z0 == 0 goto label5;

        $r6 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke $r6.<com.android.server.wm.WindowStateAnimator: boolean applyAnimationLocked(int,boolean)>(2, 0);

        $r7 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r8 = $r7.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r8 != null goto label5;

        z0 = 0;

     label5:
        if z0 == 0 goto label6;

        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim> = 0;

        goto label7;

     label6:
        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim> = 0;

        r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility> = 0;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void enableScreenIfNeededLocked()>();

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mCurrentFocus>;

        if $r3 != r0 goto label7;

        $r5 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r5.<com.android.server.wm.WindowManagerService: boolean mFocusMayChange> = 1;

     label7:
        if z1 == 0 goto label8;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

     label8:
        return 1;
    }

    public void setAppOpVisibilityLw(boolean)
    {
        com.android.server.wm.WindowState r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.WindowState: boolean mAppOpVisibility>;

        if $z1 == z0 goto label2;

        r0.<com.android.server.wm.WindowState: boolean mAppOpVisibility> = z0;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wm.WindowState: boolean showLw(boolean,boolean)>(1, 1);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowState: boolean hideLw(boolean,boolean)>(1, 1);

     label2:
        return;
    }

    public boolean isAlive()
    {
        com.android.server.wm.WindowState r0;
        android.view.IWindow $r1;
        android.os.IBinder $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        $r2 = interfaceinvoke $r1.<android.view.IWindow: android.os.IBinder asBinder()>();

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean isBinderAlive()>();

        return $z0;
    }

    boolean isClosing()
    {
        com.android.server.wm.WindowState r0;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowManagerService $r1;
        com.android.server.wm.AppWindowToken $r2;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r1.<com.android.server.wm.WindowManagerService: android.util.ArraySet mClosingApps>;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z1 = virtualinvoke $r3.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isDefaultDisplay()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.DisplayContent r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = r1.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        return $z0;
    }

    public void setShowToOwnerOnlyLocked(boolean)
    {
        com.android.server.wm.WindowState r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowState: boolean mShowToOwnerOnly> = z0;

        return;
    }

    boolean isHiddenFromUserLocked()
    {
        com.android.server.wm.WindowState r0, r1, $r4;
        com.android.server.wm.DisplayContent r2;
        android.view.DisplayInfo r3;
        android.view.WindowManager$LayoutParams $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.wm.WindowManagerService $r6;
        com.android.server.wm.AppWindowToken $r7, $r8;
        android.graphics.Rect $r9, $r10, $r11, $r12;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = r0;

     label1:
        $r4 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        if $r4 == null goto label2;

        r1 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        goto label1;

     label2:
        $r5 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r5.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 >= 2000 goto label4;

        $r7 = r1.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r7 == null goto label4;

        $r8 = r1.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z3 = $r8.<com.android.server.wm.AppWindowToken: boolean showWhenLocked>;

        if $z3 == 0 goto label4;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r2 != null goto label3;

        return 1;

     label3:
        r3 = virtualinvoke r2.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $r9 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i3 = $r9.<android.graphics.Rect: int left>;

        if $i3 > 0 goto label4;

        $r10 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i4 = $r10.<android.graphics.Rect: int top>;

        if $i4 > 0 goto label4;

        $r11 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i6 = $r11.<android.graphics.Rect: int right>;

        $i5 = r3.<android.view.DisplayInfo: int appWidth>;

        if $i6 < $i5 goto label4;

        $r12 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i7 = $r12.<android.graphics.Rect: int bottom>;

        $i8 = r3.<android.view.DisplayInfo: int appHeight>;

        if $i7 < $i8 goto label4;

        return 0;

     label4:
        $z0 = r1.<com.android.server.wm.WindowState: boolean mShowToOwnerOnly>;

        if $z0 == 0 goto label5;

        $r6 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $i1 = r1.<com.android.server.wm.WindowState: int mOwnerUid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $z1 = virtualinvoke $r6.<com.android.server.wm.WindowManagerService: boolean isCurrentProfileLocked(int)>($i2);

        if $z1 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    private static void applyInsets(android.graphics.Region, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Region r0;
        android.graphics.Rect r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: android.graphics.Region;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        $i1 = r1.<android.graphics.Rect: int left>;

        $i0 = r2.<android.graphics.Rect: int left>;

        $i11 = $i1 + $i0;

        $i3 = r1.<android.graphics.Rect: int top>;

        $i2 = r2.<android.graphics.Rect: int top>;

        $i10 = $i3 + $i2;

        $i5 = r1.<android.graphics.Rect: int right>;

        $i4 = r2.<android.graphics.Rect: int right>;

        $i9 = $i5 - $i4;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i6 = r2.<android.graphics.Rect: int bottom>;

        $i8 = $i7 - $i6;

        virtualinvoke r0.<android.graphics.Region: boolean set(int,int,int,int)>($i11, $i10, $i9, $i8);

        return;
    }

    public void getTouchableRegion(android.graphics.Region)
    {
        com.android.server.wm.WindowState r0;
        android.graphics.Region r1, r3;
        android.graphics.Rect r2, $r4, $r5;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.graphics.Region;

        r2 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i0 = r0.<com.android.server.wm.WindowState: int mTouchableInsets>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        virtualinvoke r1.<android.graphics.Region: boolean set(android.graphics.Rect)>(r2);

        goto label5;

     label2:
        $r5 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenContentInsets>;

        staticinvoke <com.android.server.wm.WindowState: void applyInsets(android.graphics.Region,android.graphics.Rect,android.graphics.Rect)>(r1, r2, $r5);

        goto label5;

     label3:
        $r4 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenVisibleInsets>;

        staticinvoke <com.android.server.wm.WindowState: void applyInsets(android.graphics.Region,android.graphics.Rect,android.graphics.Rect)>(r1, r2, $r4);

        goto label5;

     label4:
        r3 = r0.<com.android.server.wm.WindowState: android.graphics.Region mGivenTouchableRegion>;

        virtualinvoke r1.<android.graphics.Region: boolean set(android.graphics.Region)>(r3);

        $i2 = r2.<android.graphics.Rect: int left>;

        $i1 = r2.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.graphics.Region: void translate(int,int)>($i2, $i1);

        goto label5;

     label5:
        return;
    }

    com.android.server.wm.WindowList getWindowList()
    {
        com.android.server.wm.WindowState r0;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm.WindowList $r2;

        r0 := @this: com.android.server.wm.WindowState;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowList getWindowList()>();

     label2:
        return $r2;
    }

    public void reportFocusChangedSerialized(boolean, boolean)
    {
        com.android.server.wm.WindowState r0;
        boolean z0, z1;
        int i0, i1;
        android.view.IWindowFocusObserver r2;
        android.view.IWindow $r4;
        android.os.RemoteCallbackList $r5, $r6, $r7, $r8;
        android.os.IInterface $r9;
        android.view.IWindowId $r10, $r13;
        android.os.IBinder $r11, $r12;
        android.os.RemoteException $r14, $r15;

        r0 := @this: com.android.server.wm.WindowState;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

     label01:
        $r4 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r4.<android.view.IWindow: void windowFocusChanged(boolean,boolean)>(z0, z1);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

     label04:
        $r5 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        if $r5 == null goto label12;

        $r6 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        i1 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i0 = 0;

     label05:
        if i0 >= i1 goto label11;

        $r8 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i0);

        r2 = (android.view.IWindowFocusObserver) $r9;

     label06:
        if z0 == 0 goto label07;

        $r13 = r0.<com.android.server.wm.WindowState: android.view.IWindowId mWindowId>;

        $r12 = interfaceinvoke $r13.<android.view.IWindowId: android.os.IBinder asBinder()>();

        interfaceinvoke r2.<android.view.IWindowFocusObserver: void focusGained(android.os.IBinder)>($r12);

        goto label08;

     label07:
        $r10 = r0.<com.android.server.wm.WindowState: android.view.IWindowId mWindowId>;

        $r11 = interfaceinvoke $r10.<android.view.IWindowId: android.os.IBinder asBinder()>();

        interfaceinvoke r2.<android.view.IWindowFocusObserver: void focusLost(android.os.IBinder)>($r11);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        i0 = i0 + 1;

        goto label05;

     label11:
        $r7 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: void finishBroadcast()>();

     label12:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label08 with label09;
    }

    void reportResized()
    {
        com.android.server.wm.WindowState r0;
        boolean z0, z1, $z2, $z4;
        android.graphics.Rect r1, r2, r3, r4, r5;
        android.content.res.Configuration r6, $r8, $r21;
        com.android.server.wm.WindowManagerService $r7, $r11, $r15, $r18, $r23;
        com.android.server.wm.WindowStateAnimator $r9, $r13;
        int $i0, $i1, $i2, $i6;
        android.view.WindowManager$LayoutParams $r10;
        android.view.IWindow $r12, $r16;
        com.android.server.wm.AccessibilityController $r14, $r17;
        com.android.server.wm.WindowManagerService$H $r19;
        com.android.server.wm.WindowState$2 $r20;
        android.os.RemoteException $r22;
        long $l3, $l4, $l5;

        r0 := @this: com.android.server.wm.WindowState;

     label01:
        z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isConfigChanged()>();

        $r7 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: android.content.res.Configuration mCurConfiguration>;

        virtualinvoke r0.<com.android.server.wm.WindowState: void setConfiguration(android.content.res.Configuration)>($r8);

        r1 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        r2 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastOverscanInsets>;

        r3 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastContentInsets>;

        r4 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastVisibleInsets>;

        r5 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastStableInsets>;

        $r9 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i0 = $r9.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i0 != 1 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z1 = $z4;

        if z0 == 0 goto label04;

        $r21 = r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration>;

        goto label05;

     label04:
        $r21 = null;

     label05:
        r6 = $r21;

        $r10 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r10.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 == 3 goto label06;

        $r16 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        $z2 = $r16 instanceof android.view.IWindow$Stub;

        if $z2 == 0 goto label06;

        $r18 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r19 = $r18.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r20 = new com.android.server.wm.WindowState$2;

        specialinvoke $r20.<com.android.server.wm.WindowState$2: void <init>(com.android.server.wm.WindowState,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>(r0, r1, r2, r3, r4, r5, z1, r6);

        virtualinvoke $r19.<com.android.server.wm.WindowManagerService$H: boolean post(java.lang.Runnable)>($r20);

        goto label07;

     label06:
        $r12 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        interfaceinvoke $r12.<android.view.IWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>(r1, r2, r3, r4, r5, z1, r6);

     label07:
        $r11 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r14 = $r11.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        if $r14 == null goto label08;

        $i2 = virtualinvoke r0.<com.android.server.wm.WindowState: int getDisplayId()>();

        if $i2 != 0 goto label08;

        $r15 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r17 = $r15.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        virtualinvoke $r17.<com.android.server.wm.AccessibilityController: void onSomeWindowResizedOrMovedLocked()>();

     label08:
        r0.<com.android.server.wm.WindowState: boolean mOverscanInsetsChanged> = 0;

        r0.<com.android.server.wm.WindowState: boolean mContentInsetsChanged> = 0;

        r0.<com.android.server.wm.WindowState: boolean mVisibleInsetsChanged> = 0;

        r0.<com.android.server.wm.WindowState: boolean mStableInsetsChanged> = 0;

        $r13 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r13.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceResized> = 0;

     label09:
        goto label11;

     label10:
        $r22 := @caughtexception;

        r0.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r23 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $l3 = $r23.<com.android.server.wm.WindowManagerService: long mDisplayFreezeTime>;

        $l4 = $l5 - $l3;

        $i6 = (int) $l4;

        r0.<com.android.server.wm.WindowState: int mLastFreezeDuration> = $i6;

     label11:
        return;

        catch android.os.RemoteException from label01 to label09 with label10;
    }

    public void registerFocusObserver(android.view.IWindowFocusObserver)
    {
        com.android.server.wm.WindowState r0;
        android.view.IWindowFocusObserver r1;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r9;
        com.android.server.wm.WindowManagerService $r4;
        android.os.RemoteCallbackList $r6, $r7, $r8;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.view.IWindowFocusObserver;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        if $r6 != null goto label2;

        $r8 = new android.os.RemoteCallbackList;

        specialinvoke $r8.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks> = $r8;

     label2:
        $r7 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unregisterFocusObserver(android.view.IWindowFocusObserver)
    {
        com.android.server.wm.WindowState r0;
        android.view.IWindowFocusObserver r1;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.wm.WindowManagerService $r4;
        android.os.RemoteCallbackList $r6, $r7;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: android.view.IWindowFocusObserver;

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        if $r6 == null goto label2;

        $r7 = r0.<com.android.server.wm.WindowState: android.os.RemoteCallbackList mFocusCallbacks>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isFocused()
    {
        com.android.server.wm.WindowState r0, $r6;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r7;
        com.android.server.wm.WindowManagerService $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowState;

        $r3 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mCurrentFocus>;

        if $r6 != r0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $z0;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        com.android.server.wm.WindowState r0, $r11, $r12;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8, $r9, $r16, $r52, $r54;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43;
        android.graphics.Region r3, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i17, $i18, $i20, $i21, $i23, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39;
        com.android.server.wm.Session $r4;
        android.view.IWindow $r5;
        android.os.IBinder $r6;
        android.view.WindowManager$LayoutParams $r7, $r10;
        android.graphics.RectF $r13;
        com.android.server.wm.WindowStateAnimator $r14, $r19, $r51, $r55;
        java.lang.StringBuilder $r15, $r17, $r18;
        byte $b13, $b15, $b16, $b19, $b24, $b25;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        long $l22;
        android.graphics.Rect $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r43;
        android.content.res.Configuration $r41;
        com.android.server.wm.AppWindowToken $r44, $r45, $r48, $r49, $r50, $r53, $r56, $r58;
        com.android.server.wm.WindowToken $r46, $r47;
        com.android.server.wm.AppWindowAnimator $r57, $r59;

        r0 := @this: com.android.server.wm.WindowState;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mDisplayId=");

        $i0 = virtualinvoke r0.<com.android.server.wm.WindowState: int getDisplayId()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mSession=");

        $r4 = r0.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mClient=");

        $r5 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        $r6 = interfaceinvoke $r5.<android.view.IWindow: android.os.IBinder asBinder()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mOwnerUid=");

        $i1 = r0.<com.android.server.wm.WindowState: int mOwnerUid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mShowToOwnerOnly=");

        $z1 = r0.<com.android.server.wm.WindowState: boolean mShowToOwnerOnly>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" package=");

        $r7 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r8 = $r7.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" appop=");

        $i2 = r0.<com.android.server.wm.WindowState: int mAppOp>;

        $r9 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mAttrs=");

        $r10 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Requested w=");

        $i4 = r0.<com.android.server.wm.WindowState: int mRequestedWidth>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" h=");

        $i3 = r0.<com.android.server.wm.WindowState: int mRequestedHeight>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLayoutSeq=");

        $i6 = r0.<com.android.server.wm.WindowState: int mLayoutSeq>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i6);

        $i8 = r0.<com.android.server.wm.WindowState: int mRequestedWidth>;

        $i5 = r0.<com.android.server.wm.WindowState: int mLastRequestedWidth>;

        if $i8 != $i5 goto label01;

        $i37 = r0.<com.android.server.wm.WindowState: int mRequestedHeight>;

        $i36 = r0.<com.android.server.wm.WindowState: int mLastRequestedHeight>;

        if $i37 == $i36 goto label02;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("LastRequested w=");

        $i7 = r0.<com.android.server.wm.WindowState: int mLastRequestedWidth>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" h=");

        $i9 = r0.<com.android.server.wm.WindowState: int mLastRequestedHeight>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i9);

     label02:
        $r11 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        if $r11 != null goto label03;

        $z42 = r0.<com.android.server.wm.WindowState: boolean mLayoutAttached>;

        if $z42 == 0 goto label04;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mAttachedWindow=");

        $r12 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLayoutAttached=");

        $z2 = r0.<com.android.server.wm.WindowState: boolean mLayoutAttached>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z2);

     label04:
        $z4 = r0.<com.android.server.wm.WindowState: boolean mIsImWindow>;

        if $z4 != 0 goto label05;

        $z43 = r0.<com.android.server.wm.WindowState: boolean mIsWallpaper>;

        if $z43 != 0 goto label05;

        $z41 = r0.<com.android.server.wm.WindowState: boolean mIsFloatingLayer>;

        if $z41 == 0 goto label06;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mIsImWindow=");

        $z3 = r0.<com.android.server.wm.WindowState: boolean mIsImWindow>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mIsWallpaper=");

        $z6 = r0.<com.android.server.wm.WindowState: boolean mIsWallpaper>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mIsFloatingLayer=");

        $z5 = r0.<com.android.server.wm.WindowState: boolean mIsFloatingLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mWallpaperVisible=");

        $z8 = r0.<com.android.server.wm.WindowState: boolean mWallpaperVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z8);

     label06:
        if z0 == 0 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mBaseLayer=");

        $i29 = r0.<com.android.server.wm.WindowState: int mBaseLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mSubLayer=");

        $i31 = r0.<com.android.server.wm.WindowState: int mSubLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAnimLayer=");

        $i30 = r0.<com.android.server.wm.WindowState: int mLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i30);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("+");

        $r50 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mTargetAppToken>;

        if $r50 == null goto label07;

        $r58 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mTargetAppToken>;

        $r59 = $r58.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $i39 = $r59.<com.android.server.wm.AppWindowAnimator: int animLayerAdjustment>;

        goto label09;

     label07:
        $r49 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r49 == null goto label08;

        $r56 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r57 = $r56.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $i39 = $r57.<com.android.server.wm.AppWindowAnimator: int animLayerAdjustment>;

        goto label09;

     label08:
        $i39 = 0;

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $r51 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i32 = $r51.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLastLayer=");

        $r55 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $i38 = $r55.<com.android.server.wm.WindowStateAnimator: int mLastLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i38);

     label10:
        if z0 == 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mToken=");

        $r47 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r47);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mRootToken=");

        $r46 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mRootToken>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r46);

        $r45 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r45 == null goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mAppToken=");

        $r48 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r48);

     label11:
        $r44 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mTargetAppToken>;

        if $r44 == null goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mTargetAppToken=");

        $r53 = r0.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mTargetAppToken>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r53);

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mViewVisibility=0x");

        $i33 = r0.<com.android.server.wm.WindowState: int mViewVisibility>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mHaveFrame=");

        $z40 = r0.<com.android.server.wm.WindowState: boolean mHaveFrame>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mObscured=");

        $z39 = r0.<com.android.server.wm.WindowState: boolean mObscured>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mSeq=");

        $i35 = r0.<com.android.server.wm.WindowState: int mSeq>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mSystemUiVisibility=0x");

        $i34 = r0.<com.android.server.wm.WindowState: int mSystemUiVisibility>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i34);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r54);

     label13:
        $z7 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z7 == 0 goto label14;

        $z37 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim>;

        if $z37 == 0 goto label14;

        $z36 = r0.<com.android.server.wm.WindowState: boolean mAppOpVisibility>;

        if $z36 == 0 goto label14;

        $z35 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z35 == 0 goto label15;

     label14:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mPolicyVisibility=");

        $z11 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mPolicyVisibilityAfterAnim=");

        $z12 = r0.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAppOpVisibility=");

        $z9 = r0.<com.android.server.wm.WindowState: boolean mAppOpVisibility>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAttachedHidden=");

        $z10 = r0.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z10);

     label15:
        $z14 = r0.<com.android.server.wm.WindowState: boolean mRelayoutCalled>;

        if $z14 == 0 goto label16;

        $z38 = r0.<com.android.server.wm.WindowState: boolean mLayoutNeeded>;

        if $z38 == 0 goto label17;

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mRelayoutCalled=");

        $z15 = r0.<com.android.server.wm.WindowState: boolean mRelayoutCalled>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLayoutNeeded=");

        $z13 = r0.<com.android.server.wm.WindowState: boolean mLayoutNeeded>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z13);

     label17:
        $i10 = r0.<com.android.server.wm.WindowState: int mXOffset>;

        if $i10 != 0 goto label18;

        $i26 = r0.<com.android.server.wm.WindowState: int mYOffset>;

        if $i26 == 0 goto label19;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Offsets x=");

        $i11 = r0.<com.android.server.wm.WindowState: int mXOffset>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" y=");

        $i12 = r0.<com.android.server.wm.WindowState: int mYOffset>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i12);

     label19:
        if z0 == 0 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mGivenContentInsets=");

        $r34 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenContentInsets>;

        virtualinvoke $r34.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mGivenVisibleInsets=");

        $r43 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mGivenVisibleInsets>;

        virtualinvoke $r43.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $i28 = r0.<com.android.server.wm.WindowState: int mTouchableInsets>;

        if $i28 != 0 goto label20;

        $z33 = r0.<com.android.server.wm.WindowState: boolean mGivenInsetsPending>;

        if $z33 == 0 goto label21;

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mTouchableInsets=");

        $i27 = r0.<com.android.server.wm.WindowState: int mTouchableInsets>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mGivenInsetsPending=");

        $z34 = r0.<com.android.server.wm.WindowState: boolean mGivenInsetsPending>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z34);

        $r42 = new android.graphics.Region;

        specialinvoke $r42.<android.graphics.Region: void <init>()>();

        r3 = $r42;

        virtualinvoke r0.<com.android.server.wm.WindowState: void getTouchableRegion(android.graphics.Region)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("touchable region=");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r3);

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mConfiguration=");

        $r41 = r0.<com.android.server.wm.WindowState: android.content.res.Configuration mConfiguration>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r41);

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mHasSurface=");

        $z16 = r0.<com.android.server.wm.WindowState: boolean mHasSurface>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mShownFrame=");

        $r13 = r0.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        virtualinvoke $r13.<android.graphics.RectF: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" isReadyForDisplay()=");

        $z17 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isReadyForDisplay()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z17);

        if z0 == 0 goto label23;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mFrame=");

        $r38 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        virtualinvoke $r38.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" last=");

        $r35 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastFrame>;

        virtualinvoke $r35.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mSystemDecorRect=");

        $r36 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        virtualinvoke $r36.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" last=");

        $r33 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastSystemDecorRect>;

        virtualinvoke $r33.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label23:
        $z18 = r0.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z18 == 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mCompatFrame=");

        $r37 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        virtualinvoke $r37.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label24:
        if z0 == 0 goto label25;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Frames: containing=");

        $r24 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContainingFrame>;

        virtualinvoke $r24.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" parent=");

        $r21 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mParentFrame>;

        virtualinvoke $r21.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    display=");

        $r20 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mDisplayFrame>;

        virtualinvoke $r20.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" overscan=");

        $r23 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanFrame>;

        virtualinvoke $r23.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    content=");

        $r22 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentFrame>;

        virtualinvoke $r22.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" visible=");

        $r31 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleFrame>;

        virtualinvoke $r31.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    decor=");

        $r32 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mDecorFrame>;

        virtualinvoke $r32.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Cur insets: overscan=");

        $r29 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mOverscanInsets>;

        virtualinvoke $r29.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" content=");

        $r30 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mContentInsets>;

        virtualinvoke $r30.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" visible=");

        $r27 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mVisibleInsets>;

        virtualinvoke $r27.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" stable=");

        $r28 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mStableInsets>;

        virtualinvoke $r28.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Lst insets: overscan=");

        $r25 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastOverscanInsets>;

        virtualinvoke $r25.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" content=");

        $r26 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastContentInsets>;

        virtualinvoke $r26.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" visible=");

        $r39 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastVisibleInsets>;

        virtualinvoke $r39.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" stable=");

        $r40 = r0.<com.android.server.wm.WindowState: android.graphics.Rect mLastStableInsets>;

        virtualinvoke $r40.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label25:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r14 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r19 = r0.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<com.android.server.wm.WindowStateAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, $r16, z0);

        $z22 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z22 != 0 goto label26;

        $z31 = r0.<com.android.server.wm.WindowState: boolean mRemoveOnExit>;

        if $z31 != 0 goto label26;

        $z30 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        if $z30 != 0 goto label26;

        $z32 = r0.<com.android.server.wm.WindowState: boolean mRemoved>;

        if $z32 == 0 goto label27;

     label26:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mExiting=");

        $z21 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mRemoveOnExit=");

        $z20 = r0.<com.android.server.wm.WindowState: boolean mRemoveOnExit>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroying=");

        $z19 = r0.<com.android.server.wm.WindowState: boolean mDestroying>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mRemoved=");

        $z26 = r0.<com.android.server.wm.WindowState: boolean mRemoved>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z26);

     label27:
        $z25 = r0.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        if $z25 != 0 goto label28;

        $z29 = r0.<com.android.server.wm.WindowState: boolean mAppFreezing>;

        if $z29 != 0 goto label28;

        $z28 = r0.<com.android.server.wm.WindowState: boolean mTurnOnScreen>;

        if $z28 == 0 goto label29;

     label28:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mOrientationChanging=");

        $z24 = r0.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAppFreezing=");

        $z23 = r0.<com.android.server.wm.WindowState: boolean mAppFreezing>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mTurnOnScreen=");

        $z27 = r0.<com.android.server.wm.WindowState: boolean mTurnOnScreen>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z27);

     label29:
        $i14 = r0.<com.android.server.wm.WindowState: int mLastFreezeDuration>;

        if $i14 == 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLastFreezeDuration=");

        $i23 = r0.<com.android.server.wm.WindowState: int mLastFreezeDuration>;

        $l22 = (long) $i23;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l22, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label30:
        $f0 = r0.<com.android.server.wm.WindowState: float mHScale>;

        $b13 = $f0 cmpl 1.0F;

        if $b13 != 0 goto label31;

        $f11 = r0.<com.android.server.wm.WindowState: float mVScale>;

        $b25 = $f11 cmpl 1.0F;

        if $b25 == 0 goto label32;

     label31:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mHScale=");

        $f4 = r0.<com.android.server.wm.WindowState: float mHScale>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mVScale=");

        $f5 = r0.<com.android.server.wm.WindowState: float mVScale>;

        virtualinvoke r1.<java.io.PrintWriter: void println(float)>($f5);

     label32:
        $f6 = r0.<com.android.server.wm.WindowState: float mWallpaperX>;

        $b16 = $f6 cmpl -1.0F;

        if $b16 != 0 goto label33;

        $f10 = r0.<com.android.server.wm.WindowState: float mWallpaperY>;

        $b24 = $f10 cmpl -1.0F;

        if $b24 == 0 goto label34;

     label33:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mWallpaperX=");

        $f1 = r0.<com.android.server.wm.WindowState: float mWallpaperX>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mWallpaperY=");

        $f2 = r0.<com.android.server.wm.WindowState: float mWallpaperY>;

        virtualinvoke r1.<java.io.PrintWriter: void println(float)>($f2);

     label34:
        $f3 = r0.<com.android.server.wm.WindowState: float mWallpaperXStep>;

        $b15 = $f3 cmpl -1.0F;

        if $b15 != 0 goto label35;

        $f7 = r0.<com.android.server.wm.WindowState: float mWallpaperYStep>;

        $b19 = $f7 cmpl -1.0F;

        if $b19 == 0 goto label36;

     label35:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mWallpaperXStep=");

        $f8 = r0.<com.android.server.wm.WindowState: float mWallpaperXStep>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mWallpaperYStep=");

        $f9 = r0.<com.android.server.wm.WindowState: float mWallpaperYStep>;

        virtualinvoke r1.<java.io.PrintWriter: void println(float)>($f9);

     label36:
        $i20 = r0.<com.android.server.wm.WindowState: int mWallpaperDisplayOffsetX>;

        if $i20 != -2147483648 goto label37;

        $i18 = r0.<com.android.server.wm.WindowState: int mWallpaperDisplayOffsetY>;

        if $i18 == -2147483648 goto label38;

     label37:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mWallpaperDisplayOffsetX=");

        $i21 = r0.<com.android.server.wm.WindowState: int mWallpaperDisplayOffsetX>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mWallpaperDisplayOffsetY=");

        $i17 = r0.<com.android.server.wm.WindowState: int mWallpaperDisplayOffsetY>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i17);

     label38:
        return;
    }

    java.lang.String makeInputChannelName()
    {
        com.android.server.wm.WindowState r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        int $i0;
        java.lang.String $r2, $r8;
        android.view.WindowManager$LayoutParams $r5;
        java.lang.CharSequence $r6;

        r0 := @this: com.android.server.wm.WindowState;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r6 = virtualinvoke $r5.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.WindowState r0;
        java.lang.CharSequence r1, $r14, $r18;
        android.view.WindowManager$LayoutParams $r2, $r3;
        java.lang.String $r4, $r7, $r16, $r17, $r19;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r15;
        int $i0, $i1, $i2, $i3;
        com.android.server.wm.Session $r10;

        r0 := @this: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        r1 = virtualinvoke $r2.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        if r1 == null goto label1;

        $i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i3 > 0 goto label2;

     label1:
        $r3 = r0.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        r1 = $r3.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

     label2:
        $r4 = r0.<com.android.server.wm.WindowState: java.lang.String mStringNameCache>;

        if $r4 == null goto label3;

        $r18 = r0.<com.android.server.wm.WindowState: java.lang.CharSequence mLastTitle>;

        if $r18 != r1 goto label3;

        $z2 = r0.<com.android.server.wm.WindowState: boolean mWasExiting>;

        $z3 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z2 == $z3 goto label6;

     label3:
        r0.<com.android.server.wm.WindowState: java.lang.CharSequence mLastTitle> = r1;

        $z0 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        r0.<com.android.server.wm.WindowState: boolean mWasExiting> = $z0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $r10 = r0.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i1 = $r10.<com.android.server.wm.Session: int mUid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = r0.<com.android.server.wm.WindowState: java.lang.CharSequence mLastTitle>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $z1 = r0.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z1 == 0 goto label4;

        $r19 = " EXITING}";

        goto label5;

     label4:
        $r19 = "}";

     label5:
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wm.WindowState: java.lang.String mStringNameCache> = $r17;

     label6:
        $r16 = r0.<com.android.server.wm.WindowState: java.lang.String mStringNameCache>;

        return $r16;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowState: java.lang.String TAG> = "WindowState";

        return;
    }
}
