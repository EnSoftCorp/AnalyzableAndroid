public class com.android.server.TextServicesManagerService extends com.android.internal.textservice.ITextServicesManager$Stub
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private final android.content.Context mContext;
    private boolean mSystemReady;
    private final com.android.server.TextServicesManagerService$TextServicesMonitor mMonitor;
    private final java.util.HashMap mSpellCheckerMap;
    private final java.util.ArrayList mSpellCheckerList;
    private final java.util.HashMap mSpellCheckerBindGroups;
    private final com.android.server.TextServicesManagerService$TextServicesSettings mSettings;

    public void systemRunning()
    {
        com.android.server.TextServicesManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.TextServicesManagerService;

        $z0 = r0.<com.android.server.TextServicesManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.TextServicesManagerService: boolean mSystemReady> = 1;

     label1:
        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.TextServicesManagerService r0;
        android.content.Context r1;
        int i0;
        android.os.RemoteException r2, $r14;
        java.util.HashMap $r3, $r5;
        java.util.ArrayList $r4;
        android.app.IActivityManager $r6, $r8;
        com.android.server.TextServicesManagerService$1 $r7;
        android.content.pm.UserInfo $r9;
        com.android.server.TextServicesManagerService$TextServicesMonitor $r10, $r11;
        com.android.server.TextServicesManagerService$TextServicesSettings $r12;
        android.content.ContentResolver $r13;
        java.lang.String $r15;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.textservice.ITextServicesManager$Stub: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups> = $r5;

        r0.<com.android.server.TextServicesManagerService: boolean mSystemReady> = 0;

        r0.<com.android.server.TextServicesManagerService: android.content.Context mContext> = r1;

        i0 = 0;

     label1:
        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = new com.android.server.TextServicesManagerService$1;

        specialinvoke $r7.<com.android.server.TextServicesManagerService$1: void <init>(com.android.server.TextServicesManagerService)>(r0);

        interfaceinvoke $r6.<android.app.IActivityManager: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>($r7);

        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r9 = interfaceinvoke $r8.<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>();

        i0 = $r9.<android.content.pm.UserInfo: int id>;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

        $r15 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r15, "Couldn\'t get current user ID; guessing it\'s 0", r2);

     label4:
        $r10 = new com.android.server.TextServicesManagerService$TextServicesMonitor;

        specialinvoke $r10.<com.android.server.TextServicesManagerService$TextServicesMonitor: void <init>(com.android.server.TextServicesManagerService,com.android.server.TextServicesManagerService$1)>(r0, null);

        r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesMonitor mMonitor> = $r10;

        $r11 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesMonitor mMonitor>;

        virtualinvoke $r11.<com.android.server.TextServicesManagerService$TextServicesMonitor: void register(android.content.Context,android.os.Looper,boolean)>(r1, null, 1);

        $r12 = new com.android.server.TextServicesManagerService$TextServicesSettings;

        $r13 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r12.<com.android.server.TextServicesManagerService$TextServicesSettings: void <init>(android.content.ContentResolver,int)>($r13, i0);

        r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings> = $r12;

        specialinvoke r0.<com.android.server.TextServicesManagerService: void switchUserLocked(int)>(i0);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void switchUserLocked(int)
    {
        com.android.server.TextServicesManagerService r0;
        int i0;
        android.view.textservice.SpellCheckerInfo r1, r8;
        com.android.server.TextServicesManagerService$TextServicesSettings $r2, $r3;
        java.util.HashMap $r4;
        java.util.ArrayList $r5;
        android.content.Context $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.TextServicesManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        virtualinvoke $r2.<com.android.server.TextServicesManagerService$TextServicesSettings: void setCurrentUserId(int)>(i0);

        specialinvoke r0.<com.android.server.TextServicesManagerService: void unbindServiceLocked()>();

        $r6 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $r5 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        $r4 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        $r3 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        staticinvoke <com.android.server.TextServicesManagerService: void buildSpellCheckerMapLocked(android.content.Context,java.util.ArrayList,java.util.HashMap,com.android.server.TextServicesManagerService$TextServicesSettings)>($r6, $r5, $r4, $r3);

        r1 = virtualinvoke r0.<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>(null);

        if r1 != null goto label1;

        r8 = specialinvoke r0.<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo findAvailSpellCheckerLocked(java.lang.String,java.lang.String)>(null, null);

        if r8 == null goto label1;

        $r7 = virtualinvoke r8.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        specialinvoke r0.<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerLocked(java.lang.String)>($r7);

     label1:
        return;
    }

    private static void buildSpellCheckerMapLocked(android.content.Context, java.util.ArrayList, java.util.HashMap, com.android.server.TextServicesManagerService$TextServicesSettings)
    {
        android.content.Context r0;
        java.util.ArrayList r1;
        java.util.HashMap r2;
        com.android.server.TextServicesManagerService$TextServicesSettings r3;
        android.content.pm.PackageManager r4;
        java.util.List r5;
        int i0, i1, $i2, $i3;
        android.content.pm.ResolveInfo r6;
        android.content.pm.ServiceInfo r7;
        android.content.ComponentName r8, $r11;
        android.view.textservice.SpellCheckerInfo r9, $r17;
        android.content.Intent $r10;
        java.lang.Object $r12;
        java.lang.String $r13, $r14, $r15, $r16, $r19, $r20, $r23, $r26, $r30, $r34, $r36, $r40, $r43;
        boolean $z0;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r27, $r28, $r29, $r31, $r32, $r33, $r37, $r38, $r39, $r41, $r44;
        org.xmlpull.v1.XmlPullParserException $r35, r45;
        java.io.IOException $r42, r46;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.util.HashMap;

        r3 := @parameter3: com.android.server.TextServicesManagerService$TextServicesSettings;

        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r2.<java.util.HashMap: void clear()>();

        r4 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.service.textservice.SpellCheckerService");

        $i2 = virtualinvoke r3.<com.android.server.TextServicesManagerService$TextServicesSettings: int getCurrentUserId()>();

        r5 = virtualinvoke r4.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r10, 128, $i2);

        i0 = interfaceinvoke r5.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (android.content.pm.ResolveInfo) $r12;

        r7 = r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r11 = new android.content.ComponentName;

        $r13 = r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r14 = r7.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r14);

        r8 = $r11;

        $r15 = "android.permission.BIND_TEXT_SERVICE";

        $r16 = r7.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label2;

        $r26 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping text service ");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not require the permission ");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_TEXT_SERVICE");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r26, $r30);

        goto label8;

     label2:
        $r17 = new android.view.textservice.SpellCheckerInfo;

        specialinvoke $r17.<android.view.textservice.SpellCheckerInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>(r0, r6);

        r9 = $r17;

        $i3 = virtualinvoke r9.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if $i3 > 0 goto label4;

        $r20 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping text service ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not contain subtypes.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r20, $r23);

     label3:
        goto label8;

     label4:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        $r19 = virtualinvoke r9.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r9);

     label5:
        goto label8;

     label6:
        $r35 := @caughtexception;

        r45 = $r35;

        $r34 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load the spell checker ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r34, $r36, r45);

        goto label8;

     label7:
        $r42 := @caughtexception;

        r46 = $r42;

        $r40 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load the spell checker ");

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r40, $r43, r46);

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label6;
        catch org.xmlpull.v1.XmlPullParserException from label4 to label5 with label6;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label4 to label5 with label7;
    }

    private boolean calledFromValidUser()
    {
        com.android.server.TextServicesManagerService r0;
        int i0, i1, $i2;
        com.android.server.TextServicesManagerService$TextServicesSettings $r1;
        java.lang.StringBuilder $r2, $r4, $r6;
        java.lang.String $r3, $r5, $r7;

        r0 := @this: com.android.server.TextServicesManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if i0 == 1000 goto label1;

        $r1 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        $i2 = virtualinvoke $r1.<com.android.server.TextServicesManagerService$TextServicesSettings: int getCurrentUserId()>();

        if i1 != $i2 goto label2;

     label1:
        return 1;

     label2:
        $r3 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- IPC called from background users. Ignore. \n");

        $r5 = staticinvoke <com.android.server.TextServicesManagerService: java.lang.String getStackTrace()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, $r7);

        return 0;
    }

    private boolean bindCurrentSpellCheckerService(android.content.Intent, android.content.ServiceConnection, int)
    {
        com.android.server.TextServicesManagerService r0;
        android.content.Intent r1;
        android.content.ServiceConnection r2;
        int i0, $i2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;
        java.lang.String $r4, $r9;
        android.os.UserHandle $r10;
        com.android.server.TextServicesManagerService$TextServicesSettings $r11;
        android.content.Context $r12;
        boolean $z0;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.ServiceConnection;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r4 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- bind failed: service = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", conn = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r4, $r9);

        return 0;

     label2:
        $r12 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $r10 = new android.os.UserHandle;

        $r11 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        $i2 = virtualinvoke $r11.<com.android.server.TextServicesManagerService$TextServicesSettings: int getCurrentUserId()>();

        specialinvoke $r10.<android.os.UserHandle: void <init>(int)>($i2);

        $z0 = virtualinvoke $r12.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, r2, i0, $r10);

        return $z0;
    }

    private void unbindServiceLocked()
    {
        com.android.server.TextServicesManagerService r0;
        java.util.Iterator r1;
        com.android.server.TextServicesManagerService$SpellCheckerBindGroup r2;
        java.util.HashMap $r3, $r5;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.server.TextServicesManagerService;

        $r3 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TextServicesManagerService$SpellCheckerBindGroup) $r6;

        virtualinvoke r2.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: void removeAll()>();

        goto label1;

     label2:
        $r5 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

        return;
    }

    private android.view.textservice.SpellCheckerInfo findAvailSpellCheckerLocked(java.lang.String, java.lang.String)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, r2, $r8, $r11, $r12;
        int i0, i1;
        android.view.textservice.SpellCheckerInfo r3, $r7;
        java.util.ArrayList $r4, $r5, $r9;
        java.lang.Object $r6, $r10;
        boolean $z0;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label1;

        $r12 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r12, "no available spell checker services found");

        return null;

     label1:
        if r2 == null goto label4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r9 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.view.textservice.SpellCheckerInfo) $r10;

        $r11 = virtualinvoke r3.<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label3;

        return r3;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if i0 <= 1 goto label5;

        $r8 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r8, "more than one spell checker service found, picking first");

     label5:
        $r5 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r7 = (android.view.textservice.SpellCheckerInfo) $r6;

        return $r7;
    }

    public android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, r3;
        java.util.HashMap r2, $r5, $r7;
        java.lang.Throwable r4, $r10;
        boolean $z0, $z1;
        com.android.server.TextServicesManagerService$TextServicesSettings $r6;
        java.lang.Object $r8;
        android.view.textservice.SpellCheckerInfo $r9;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        r3 = virtualinvoke $r6.<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellChecker()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label4;

        exitmonitor r2;

     label3:
        return null;

     label4:
        $r7 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r9 = (android.view.textservice.SpellCheckerInfo) $r8;

        exitmonitor r2;

     label5:
        return $r9;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label7:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String, boolean)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, r3, r5, r8, r9;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap r2, $r11;
        android.view.textservice.SpellCheckerInfo r4;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.view.inputmethod.InputMethodManager r6;
        android.view.inputmethod.InputMethodSubtype r7;
        java.lang.Throwable r10, $r20;
        com.android.server.TextServicesManagerService$TextServicesSettings $r12;
        android.content.Context $r13, $r15;
        android.content.res.Resources $r14;
        java.lang.Object $r16;
        android.content.res.Configuration $r17;
        java.util.Locale $r18;
        java.lang.Integer $r19;
        android.view.textservice.SpellCheckerSubtype r21, r22;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label01;

        return null;

     label01:
        $r11 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r2 = $r11;

        entermonitor $r11;

     label02:
        $r12 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        r3 = virtualinvoke $r12.<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellCheckerSubtype()>();

        r4 = virtualinvoke r0.<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>(null);

        if r4 == null goto label03;

        $i1 = virtualinvoke r4.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if $i1 != 0 goto label05;

     label03:
        exitmonitor r2;

     label04:
        return null;

     label05:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 != 0 goto label06;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r3);

        i0 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        goto label07;

     label06:
        i0 = 0;

     label07:
        if i0 != 0 goto label09;

        if z0 != 0 goto label09;

        exitmonitor r2;

     label08:
        return null;

     label09:
        r5 = null;

        if i0 != 0 goto label11;

        $r15 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r6 = (android.view.inputmethod.InputMethodManager) $r16;

        if r6 == null goto label10;

        r7 = virtualinvoke r6.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>();

        if r7 == null goto label10;

        r8 = virtualinvoke r7.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z5 != 0 goto label10;

        r5 = r8;

     label10:
        if r5 != null goto label11;

        $r13 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r14.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r18 = $r17.<android.content.res.Configuration: java.util.Locale locale>;

        r5 = virtualinvoke $r18.<java.util.Locale: java.lang.String toString()>();

     label11:
        r21 = null;

        i6 = 0;

     label12:
        $i2 = virtualinvoke r4.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if i6 >= $i2 goto label19;

        r22 = virtualinvoke r4.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i6);

        if i0 != 0 goto label16;

        r9 = virtualinvoke r22.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label14;

        exitmonitor r2;

     label13:
        return r22;

     label14:
        if r21 != null goto label15;

        $i5 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i5 < 2 goto label15;

        $i4 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i4 < 2 goto label15;

        $z4 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(r9);

        if $z4 == 0 goto label15;

        r21 = r22;

     label15:
        goto label18;

     label16:
        $i3 = virtualinvoke r22.<android.view.textservice.SpellCheckerSubtype: int hashCode()>();

        if $i3 != i0 goto label18;

        exitmonitor r2;

     label17:
        return r22;

     label18:
        i6 = i6 + 1;

        goto label12;

     label19:
        exitmonitor r2;

     label20:
        return r21;

     label21:
        $r20 := @caughtexception;

        r10 = $r20;

        exitmonitor r2;

     label22:
        throw r10;

        catch java.lang.Throwable from label02 to label04 with label21;
        catch java.lang.Throwable from label05 to label08 with label21;
        catch java.lang.Throwable from label09 to label13 with label21;
        catch java.lang.Throwable from label14 to label17 with label21;
        catch java.lang.Throwable from label18 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public void getSpellCheckerService(java.lang.String, java.lang.String, com.android.internal.textservice.ITextServicesSessionListener, com.android.internal.textservice.ISpellCheckerSessionListener, android.os.Bundle)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, r2, $r13, $r27, $r29, $r30, $r33;
        com.android.internal.textservice.ITextServicesSessionListener r3;
        com.android.internal.textservice.ISpellCheckerSessionListener r4, $r26;
        android.os.Bundle r5;
        java.util.HashMap r6, $r14, $r15, $r17, $r18, $r19, $r20;
        android.view.textservice.SpellCheckerInfo r7;
        int i0;
        com.android.server.TextServicesManagerService$SpellCheckerBindGroup r8, $r24;
        com.android.server.TextServicesManagerService$InternalDeathRecipient r9;
        com.android.internal.textservice.ISpellCheckerSession r10;
        java.lang.Throwable r11, r12, $r36, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r16, $r21, $r23;
        com.android.internal.textservice.ISpellCheckerService $r22, $r25, $r28;
        java.lang.StringBuilder $r31, $r34, $r35;
        android.os.RemoteException $r32, r38;
        long l4;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.textservice.ITextServicesSessionListener;

        r4 := @parameter3: com.android.internal.textservice.ISpellCheckerSessionListener;

        r5 := @parameter4: android.os.Bundle;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = r0.<com.android.server.TextServicesManagerService: boolean mSystemReady>;

        if $z1 != 0 goto label02;

        return;

     label02:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label03;

        if r3 == null goto label03;

        if r4 != null goto label04;

     label03:
        $r13 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r13, "getSpellCheckerService: Invalid input.");

        return;

     label04:
        $r14 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r6 = $r14;

        entermonitor $r14;

     label05:
        $r15 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        $z3 = virtualinvoke $r15.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z3 != 0 goto label07;

        exitmonitor r6;

     label06:
        return;

     label07:
        $r17 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        $r16 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (android.view.textservice.SpellCheckerInfo) $r16;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r18 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        $z4 = virtualinvoke $r18.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z4 == 0 goto label19;

        $r19 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        $r21 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (com.android.server.TextServicesManagerService$SpellCheckerBindGroup) $r21;

        if r8 == null goto label19;

        $r20 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        $r23 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r24 = (com.android.server.TextServicesManagerService$SpellCheckerBindGroup) $r23;

        r9 = virtualinvoke $r24.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: com.android.server.TextServicesManagerService$InternalDeathRecipient addListener(com.android.internal.textservice.ITextServicesSessionListener,java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,int,android.os.Bundle)>(r3, r2, r4, i0, r5);

        if r9 != null goto label09;

        exitmonitor r6;

     label08:
        return;

     label09:
        $r22 = r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: com.android.internal.textservice.ISpellCheckerService mSpellChecker>;

        if $r22 != null goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $z5 = r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: boolean mConnected>;

        $z6 = $z7 & $z5;

        if $z6 == 0 goto label12;

        $r29 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r29, "The state of the spell checker bind group is illegal.");

        virtualinvoke r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: void removeAll()>();

        goto label19;

     label12:
        $r25 = r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: com.android.internal.textservice.ISpellCheckerService mSpellChecker>;

        if $r25 == null goto label19;

     label13:
        $r28 = r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: com.android.internal.textservice.ISpellCheckerService mSpellChecker>;

        $r27 = r9.<com.android.server.TextServicesManagerService$InternalDeathRecipient: java.lang.String mScLocale>;

        $r26 = r9.<com.android.server.TextServicesManagerService$InternalDeathRecipient: com.android.internal.textservice.ISpellCheckerSessionListener mScListener>;

        r10 = interfaceinvoke $r28.<com.android.internal.textservice.ISpellCheckerService: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>($r27, $r26, r5);

        if r10 == null goto label16;

        interfaceinvoke r3.<com.android.internal.textservice.ITextServicesSessionListener: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>(r10);

     label14:
        exitmonitor r6;

     label15:
        return;

     label16:
        virtualinvoke r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: void removeAll()>();

     label17:
        goto label19;

     label18:
        $r32 := @caughtexception;

        r38 = $r32;

        $r30 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in getting spell checker session: ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r30, $r33);

        virtualinvoke r8.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: void removeAll()>();

     label19:
        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label20:
        specialinvoke r0.<com.android.server.TextServicesManagerService: void startSpellCheckerServiceInnerLocked(android.view.textservice.SpellCheckerInfo,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,int,android.os.Bundle)>(r7, r2, r3, r4, i0, r5);

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        goto label24;

     label22:
        $r36 := @caughtexception;

        r11 = $r36;

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r11;

     label24:
        exitmonitor r6;

     label25:
        goto label28;

     label26:
        $r37 := @caughtexception;

        r12 = $r37;

        exitmonitor r6;

     label27:
        throw r12;

     label28:
        return;

        catch android.os.RemoteException from label13 to label14 with label18;
        catch android.os.RemoteException from label16 to label17 with label18;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label09 to label15 with label26;
        catch java.lang.Throwable from label16 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public boolean isSpellCheckerEnabled()
    {
        com.android.server.TextServicesManagerService r0;
        java.util.HashMap r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.TextServicesManagerService;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $z1 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean isSpellCheckerEnabledLocked()>();

        exitmonitor r1;

     label3:
        return $z1;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void startSpellCheckerServiceInnerLocked(android.view.textservice.SpellCheckerInfo, java.lang.String, com.android.internal.textservice.ITextServicesSessionListener, com.android.internal.textservice.ISpellCheckerSessionListener, int, android.os.Bundle)
    {
        com.android.server.TextServicesManagerService r0;
        android.view.textservice.SpellCheckerInfo r1;
        java.lang.String r2, r6, $r17;
        com.android.internal.textservice.ITextServicesSessionListener r3;
        com.android.internal.textservice.ISpellCheckerSessionListener r4;
        int i0;
        android.os.Bundle r5;
        com.android.server.TextServicesManagerService$InternalServiceConnection r7, $r10;
        android.content.Intent r8, $r11;
        com.android.server.TextServicesManagerService$SpellCheckerBindGroup r9, $r14;
        android.content.ComponentName $r12;
        boolean $z0;
        java.util.HashMap $r16;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: android.view.textservice.SpellCheckerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.textservice.ITextServicesSessionListener;

        r4 := @parameter3: com.android.internal.textservice.ISpellCheckerSessionListener;

        i0 := @parameter4: int;

        r5 := @parameter5: android.os.Bundle;

        r6 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        $r10 = new com.android.server.TextServicesManagerService$InternalServiceConnection;

        specialinvoke $r10.<com.android.server.TextServicesManagerService$InternalServiceConnection: void <init>(com.android.server.TextServicesManagerService,java.lang.String,java.lang.String,android.os.Bundle)>(r0, r6, r2, r5);

        r7 = $r10;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.service.textservice.SpellCheckerService");

        r8 = $r11;

        $r12 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r12);

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean bindCurrentSpellCheckerService(android.content.Intent,android.content.ServiceConnection,int)>(r8, r7, 1);

        if $z0 != 0 goto label1;

        $r17 = <com.android.server.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r17, "Failed to get a spell checker service.");

        return;

     label1:
        $r14 = new com.android.server.TextServicesManagerService$SpellCheckerBindGroup;

        specialinvoke $r14.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: void <init>(com.android.server.TextServicesManagerService,com.android.server.TextServicesManagerService$InternalServiceConnection,com.android.internal.textservice.ITextServicesSessionListener,java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,int,android.os.Bundle)>(r0, r7, r3, r2, r4, i0, r5);

        r9 = $r14;

        $r16 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r9);

        return;
    }

    public android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()
    {
        com.android.server.TextServicesManagerService r0;
        boolean $z0;
        java.util.ArrayList $r1, $r2;
        int $i0;
        android.view.textservice.SpellCheckerInfo[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.TextServicesManagerService;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        $r1 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (android.view.textservice.SpellCheckerInfo)[$i0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (android.view.textservice.SpellCheckerInfo[]) $r4;

        return $r5;
    }

    public void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)
    {
        com.android.server.TextServicesManagerService r0;
        com.android.internal.textservice.ISpellCheckerSessionListener r1;
        java.util.HashMap r2, $r7, $r9;
        java.util.ArrayList r3, $r8;
        java.util.Iterator r4;
        com.android.server.TextServicesManagerService$SpellCheckerBindGroup r5, $r11;
        java.lang.Throwable r6, $r14;
        boolean $z0, $z1;
        java.util.Collection $r10;
        java.lang.Object $r12, $r13;
        int i0, i1;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: com.android.internal.textservice.ISpellCheckerSessionListener;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        $r9 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TextServicesManagerService$SpellCheckerBindGroup) $r13;

        if r5 != null goto label04;

        goto label03;

     label04:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label03;

     label05:
        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label06:
        if i1 >= i0 goto label07;

        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r11 = (com.android.server.TextServicesManagerService$SpellCheckerBindGroup) $r12;

        virtualinvoke $r11.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: void removeListener(com.android.internal.textservice.ISpellCheckerSessionListener)>(r1);

        i1 = i1 + 1;

        goto label06;

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r2;

     label10:
        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void setCurrentSpellChecker(java.lang.String, java.lang.String)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, r2;
        java.util.HashMap r3, $r5;
        java.lang.Throwable r4, $r8;
        boolean $z0;
        android.content.Context $r6;
        int $i0;
        java.lang.SecurityException $r7;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r3 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i0 == 0 goto label3;

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.WRITE_SECURE_SETTINGS");

        throw $r7;

     label3:
        specialinvoke r0.<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerLocked(java.lang.String)>(r2);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setCurrentSpellCheckerSubtype(java.lang.String, int)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        android.content.Context $r5;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i1 == 0 goto label3;

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.WRITE_SECURE_SETTINGS");

        throw $r6;

     label3:
        specialinvoke r0.<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtypeLocked(int)>(i0);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setSpellCheckerEnabled(boolean)
    {
        com.android.server.TextServicesManagerService r0;
        boolean z0, $z1;
        java.util.HashMap r1, $r3;
        java.lang.Throwable r2, $r6;
        android.content.Context $r4;
        int $i0;
        java.lang.SecurityException $r5;

        r0 := @this: com.android.server.TextServicesManagerService;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i0 == 0 goto label3;

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.WRITE_SECURE_SETTINGS");

        throw $r5;

     label3:
        specialinvoke r0.<com.android.server.TextServicesManagerService: void setSpellCheckerEnabledLocked(boolean)>(z0);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void setCurrentSpellCheckerLocked(java.lang.String)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, $r6;
        android.view.textservice.SpellCheckerInfo r2;
        long l0;
        java.lang.Throwable r3, $r7;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r4;
        com.android.server.TextServicesManagerService$TextServicesSettings $r5;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r2 = virtualinvoke r0.<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>(null);

        if r2 == null goto label3;

        $r6 = virtualinvoke r2.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        return;

     label3:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label4:
        $r5 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        virtualinvoke $r5.<com.android.server.TextServicesManagerService$TextServicesSettings: void putSelectedSpellChecker(java.lang.String)>(r1);

        specialinvoke r0.<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtypeLocked(int)>(0);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void setCurrentSpellCheckerSubtypeLocked(int)
    {
        com.android.server.TextServicesManagerService r0;
        int i0, i1, i2, $i3, $i4;
        android.view.textservice.SpellCheckerInfo r1;
        java.lang.Throwable r2, $r5;
        com.android.server.TextServicesManagerService$TextServicesSettings $r3;
        android.view.textservice.SpellCheckerSubtype $r4;
        long l5;

        r0 := @this: com.android.server.TextServicesManagerService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>(null);

        i1 = 0;

        i2 = 0;

     label1:
        if r1 == null goto label3;

        $i3 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if i2 >= $i3 goto label3;

        $r4 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i2);

        $i4 = virtualinvoke $r4.<android.view.textservice.SpellCheckerSubtype: int hashCode()>();

        if $i4 != i0 goto label2;

        i1 = i0;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label4:
        $r3 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        virtualinvoke $r3.<com.android.server.TextServicesManagerService$TextServicesSettings: void putSelectedSpellCheckerSubtype(int)>(i1);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        goto label8;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void setSpellCheckerEnabledLocked(boolean)
    {
        com.android.server.TextServicesManagerService r0;
        boolean z0;
        long l0;
        java.lang.Throwable r1, $r3;
        com.android.server.TextServicesManagerService$TextServicesSettings $r2;

        r0 := @this: com.android.server.TextServicesManagerService;

        z0 := @parameter0: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        virtualinvoke $r2.<com.android.server.TextServicesManagerService$TextServicesSettings: void setSpellCheckerEnabled(boolean)>(z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean isSpellCheckerEnabledLocked()
    {
        com.android.server.TextServicesManagerService r0;
        long l0;
        boolean z0, z1;
        java.lang.Throwable r1, $r3;
        com.android.server.TextServicesManagerService$TextServicesSettings $r2;

        r0 := @this: com.android.server.TextServicesManagerService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        z0 = virtualinvoke $r2.<com.android.server.TextServicesManagerService$TextServicesSettings: boolean isSpellCheckerEnabled()>();

        z1 = z0;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.TextServicesManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.HashMap r4, $r11, $r12, $r14;
        java.util.Iterator r5, r45;
        java.util.Map$Entry r6, r46;
        android.view.textservice.SpellCheckerInfo r7;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        android.view.textservice.SpellCheckerSubtype r8;
        java.lang.Throwable r9, $r44;
        android.content.Context $r10;
        java.util.Set $r13, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r16, $r17, $r19, $r23, $r29, $r31, $r34;
        java.lang.String $r18, $r26, $r30, $r33, $r35, $r36, $r37, $r41;
        com.android.internal.textservice.ISpellCheckerService $r20;
        com.android.server.TextServicesManagerService$InternalServiceConnection $r21;
        java.util.concurrent.CopyOnWriteArrayList $r22, $r24;
        com.android.server.TextServicesManagerService$SpellCheckerBindGroup $r25, r47;
        com.android.internal.textservice.ITextServicesSessionListener $r27;
        com.android.internal.textservice.ISpellCheckerSessionListener $r28;
        android.content.ComponentName $r32;
        java.lang.StringBuilder $r38, $r39, $r40, $r42, $r43;
        com.android.server.TextServicesManagerService$InternalDeathRecipient r48;

        r0 := @this: com.android.server.TextServicesManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r10 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r10.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump TextServicesManagerService from from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        return;

     label01:
        $r11 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        r4 = $r11;

        entermonitor $r11;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Current Text Services Manager state:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Spell Checker Map:");

        $r12 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r31 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r31;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r29 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (java.lang.String) $r29;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r30);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r34 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (android.view.textservice.SpellCheckerInfo) $r34;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("id=");

        $r35 = virtualinvoke r7.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("comp=");

        $r32 = virtualinvoke r7.<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>();

        $r33 = virtualinvoke $r32.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        i0 = virtualinvoke r7.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        i1 = 0;

     label04:
        if i1 >= i0 goto label05;

        r8 = virtualinvoke r7.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Subtype #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("locale=");

        $r37 = virtualinvoke r8.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("extraValue=");

        $r36 = virtualinvoke r8.<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        i1 = i1 + 1;

        goto label04;

     label05:
        goto label03;

     label06:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Spell Checker Bind Groups:");

        $r14 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Set entrySet()>();

        r45 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r17 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.util.Map$Entry) $r17;

        $r16 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        r47 = (com.android.server.TextServicesManagerService$SpellCheckerBindGroup) $r16;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r19 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r19;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r18);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>(r47);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mInternalConnection=");

        $r21 = staticinvoke <com.android.server.TextServicesManagerService$SpellCheckerBindGroup: com.android.server.TextServicesManagerService$InternalServiceConnection access$900(com.android.server.TextServicesManagerService$SpellCheckerBindGroup)>(r47);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r21);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mSpellChecker=");

        $r20 = r47.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: com.android.internal.textservice.ISpellCheckerService mSpellChecker>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r20);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mBound=");

        $z3 = r47.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: boolean mBound>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mConnected=");

        $z2 = r47.<com.android.server.TextServicesManagerService$SpellCheckerBindGroup: boolean mConnected>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z2);

        $r24 = staticinvoke <com.android.server.TextServicesManagerService$SpellCheckerBindGroup: java.util.concurrent.CopyOnWriteArrayList access$1000(com.android.server.TextServicesManagerService$SpellCheckerBindGroup)>(r47);

        i6 = virtualinvoke $r24.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        i7 = 0;

     label08:
        if i7 >= i6 goto label09;

        $r22 = staticinvoke <com.android.server.TextServicesManagerService$SpellCheckerBindGroup: java.util.concurrent.CopyOnWriteArrayList access$1000(com.android.server.TextServicesManagerService$SpellCheckerBindGroup)>(r47);

        $r23 = virtualinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>(i7);

        r48 = (com.android.server.TextServicesManagerService$InternalDeathRecipient) $r23;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Listener #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i7);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mTsListener=");

        $r27 = r48.<com.android.server.TextServicesManagerService$InternalDeathRecipient: com.android.internal.textservice.ITextServicesSessionListener mTsListener>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r27);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mScListener=");

        $r28 = r48.<com.android.server.TextServicesManagerService$InternalDeathRecipient: com.android.internal.textservice.ISpellCheckerSessionListener mScListener>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r28);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mGroup=");

        $r25 = staticinvoke <com.android.server.TextServicesManagerService$InternalDeathRecipient: com.android.server.TextServicesManagerService$SpellCheckerBindGroup access$1100(com.android.server.TextServicesManagerService$InternalDeathRecipient)>(r48);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r25);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mScLocale=");

        $r26 = r48.<com.android.server.TextServicesManagerService$InternalDeathRecipient: java.lang.String mScLocale>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mUid=");

        $i3 = r48.<com.android.server.TextServicesManagerService$InternalDeathRecipient: int mUid>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i3);

        i7 = i7 + 1;

        goto label08;

     label09:
        goto label07;

     label10:
        exitmonitor r4;

     label11:
        goto label14;

     label12:
        $r44 := @caughtexception;

        r9 = $r44;

        exitmonitor r4;

     label13:
        throw r9;

     label14:
        return;

        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private static java.lang.String getStackTrace()
    {
        java.lang.StringBuilder r0, $r3, $r7, $r10, $r11;
        java.lang.RuntimeException r1, $r4, $r5;
        java.lang.StackTraceElement[] r2;
        int i0, $i1;
        java.lang.String $r6, $r9, $r12;
        java.lang.StackTraceElement $r8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0 = $r3;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r1 = $r5;

        r2 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = 1;

     label3:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r2[i0];

        $r9 = virtualinvoke $r8.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r6 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.lang.RuntimeException from label1 to label2 with label2;
    }

    static java.util.HashMap access$000(com.android.server.TextServicesManagerService)
    {
        com.android.server.TextServicesManagerService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        $r1 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerMap>;

        return $r1;
    }

    static void access$100(com.android.server.TextServicesManagerService, int)
    {
        com.android.server.TextServicesManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.TextServicesManagerService: void switchUserLocked(int)>(i0);

        return;
    }

    static com.android.server.TextServicesManagerService$TextServicesSettings access$300(com.android.server.TextServicesManagerService)
    {
        com.android.server.TextServicesManagerService r0;
        com.android.server.TextServicesManagerService$TextServicesSettings $r1;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        $r1 = r0.<com.android.server.TextServicesManagerService: com.android.server.TextServicesManagerService$TextServicesSettings mSettings>;

        return $r1;
    }

    static android.content.Context access$400(com.android.server.TextServicesManagerService)
    {
        com.android.server.TextServicesManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        $r1 = r0.<com.android.server.TextServicesManagerService: android.content.Context mContext>;

        return $r1;
    }

    static java.util.ArrayList access$500(com.android.server.TextServicesManagerService)
    {
        com.android.server.TextServicesManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        $r1 = r0.<com.android.server.TextServicesManagerService: java.util.ArrayList mSpellCheckerList>;

        return $r1;
    }

    static void access$600(android.content.Context, java.util.ArrayList, java.util.HashMap, com.android.server.TextServicesManagerService$TextServicesSettings)
    {
        android.content.Context r0;
        java.util.ArrayList r1;
        java.util.HashMap r2;
        com.android.server.TextServicesManagerService$TextServicesSettings r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.util.HashMap;

        r3 := @parameter3: com.android.server.TextServicesManagerService$TextServicesSettings;

        staticinvoke <com.android.server.TextServicesManagerService: void buildSpellCheckerMapLocked(android.content.Context,java.util.ArrayList,java.util.HashMap,com.android.server.TextServicesManagerService$TextServicesSettings)>(r0, r1, r2, r3);

        return;
    }

    static android.view.textservice.SpellCheckerInfo access$700(com.android.server.TextServicesManagerService, java.lang.String, java.lang.String)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1, r2;
        android.view.textservice.SpellCheckerInfo $r3;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo findAvailSpellCheckerLocked(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    static void access$800(com.android.server.TextServicesManagerService, java.lang.String)
    {
        com.android.server.TextServicesManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerLocked(java.lang.String)>(r1);

        return;
    }

    static java.util.HashMap access$1300(com.android.server.TextServicesManagerService)
    {
        com.android.server.TextServicesManagerService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.TextServicesManagerService;

        $r1 = r0.<com.android.server.TextServicesManagerService: java.util.HashMap mSpellCheckerBindGroups>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.TextServicesManagerService: boolean DBG> = 0;

        $r0 = class "com/android/server/TextServicesManagerService";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.TextServicesManagerService: java.lang.String TAG> = $r1;

        return;
    }
}
