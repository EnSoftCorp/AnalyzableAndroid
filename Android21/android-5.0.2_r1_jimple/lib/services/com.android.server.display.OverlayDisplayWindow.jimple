final class com.android.server.display.OverlayDisplayWindow extends java.lang.Object implements com.android.internal.util.DumpUtils$Dump
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private final float INITIAL_SCALE;
    private final float MIN_SCALE;
    private final float MAX_SCALE;
    private final float WINDOW_ALPHA;
    private final boolean DISABLE_MOVE_AND_RESIZE;
    private final android.content.Context mContext;
    private final java.lang.String mName;
    private final int mWidth;
    private final int mHeight;
    private final int mDensityDpi;
    private final int mGravity;
    private final boolean mSecure;
    private final com.android.server.display.OverlayDisplayWindow$Listener mListener;
    private java.lang.String mTitle;
    private final android.hardware.display.DisplayManager mDisplayManager;
    private final android.view.WindowManager mWindowManager;
    private final android.view.Display mDefaultDisplay;
    private final android.view.DisplayInfo mDefaultDisplayInfo;
    private android.view.View mWindowContent;
    private android.view.WindowManager$LayoutParams mWindowParams;
    private android.view.TextureView mTextureView;
    private android.widget.TextView mTitleTextView;
    private android.view.GestureDetector mGestureDetector;
    private android.view.ScaleGestureDetector mScaleGestureDetector;
    private boolean mWindowVisible;
    private int mWindowX;
    private int mWindowY;
    private float mWindowScale;
    private float mLiveTranslationX;
    private float mLiveTranslationY;
    private float mLiveScale;
    private final android.hardware.display.DisplayManager$DisplayListener mDisplayListener;
    private final android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener;
    private final android.view.View$OnTouchListener mOnTouchListener;
    private final android.view.GestureDetector$OnGestureListener mOnGestureListener;
    private final android.view.ScaleGestureDetector$OnScaleGestureListener mOnScaleGestureListener;

    public void <init>(android.content.Context, java.lang.String, int, int, int, int, boolean, com.android.server.display.OverlayDisplayWindow$Listener)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.content.Context r1;
        java.lang.String r2, $r11, $r17, $r26, $r27, $r28;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean z0;
        com.android.server.display.OverlayDisplayWindow$Listener r3;
        android.view.DisplayInfo $r4;
        com.android.server.display.OverlayDisplayWindow$1 $r5;
        com.android.server.display.OverlayDisplayWindow$2 $r6;
        com.android.server.display.OverlayDisplayWindow$3 $r7;
        com.android.server.display.OverlayDisplayWindow$4 $r8;
        com.android.server.display.OverlayDisplayWindow$5 $r9;
        android.content.res.Resources $r10, $r24;
        java.lang.Object[] $r12;
        java.lang.Integer $r13, $r14, $r15;
        java.lang.Object $r16, $r18;
        android.hardware.display.DisplayManager $r19;
        android.view.Display $r20;
        android.view.WindowManager $r21, $r22;
        java.lang.StringBuilder $r23, $r25, $r29;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        r3 := @parameter7: com.android.server.display.OverlayDisplayWindow$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.display.OverlayDisplayWindow: float INITIAL_SCALE> = 0.5F;

        r0.<com.android.server.display.OverlayDisplayWindow: float MIN_SCALE> = 0.3F;

        r0.<com.android.server.display.OverlayDisplayWindow: float MAX_SCALE> = 1.0F;

        r0.<com.android.server.display.OverlayDisplayWindow: float WINDOW_ALPHA> = 0.8F;

        r0.<com.android.server.display.OverlayDisplayWindow: boolean DISABLE_MOVE_AND_RESIZE> = 0;

        $r4 = new android.view.DisplayInfo;

        specialinvoke $r4.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo> = $r4;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale> = 1.0F;

        $r5 = new com.android.server.display.OverlayDisplayWindow$1;

        specialinvoke $r5.<com.android.server.display.OverlayDisplayWindow$1: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener> = $r5;

        $r6 = new com.android.server.display.OverlayDisplayWindow$2;

        specialinvoke $r6.<com.android.server.display.OverlayDisplayWindow$2: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener> = $r6;

        $r7 = new com.android.server.display.OverlayDisplayWindow$3;

        specialinvoke $r7.<com.android.server.display.OverlayDisplayWindow$3: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.View$OnTouchListener mOnTouchListener> = $r7;

        $r8 = new com.android.server.display.OverlayDisplayWindow$4;

        specialinvoke $r8.<com.android.server.display.OverlayDisplayWindow$4: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector$OnGestureListener mOnGestureListener> = $r8;

        $r9 = new com.android.server.display.OverlayDisplayWindow$5;

        specialinvoke $r9.<com.android.server.display.OverlayDisplayWindow$5: void <init>(com.android.server.display.OverlayDisplayWindow)>(r0);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector$OnScaleGestureListener mOnScaleGestureListener> = $r9;

        r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext> = r1;

        r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mName> = r2;

        r0.<com.android.server.display.OverlayDisplayWindow: int mWidth> = i0;

        r0.<com.android.server.display.OverlayDisplayWindow: int mHeight> = i1;

        r0.<com.android.server.display.OverlayDisplayWindow: int mDensityDpi> = i2;

        r0.<com.android.server.display.OverlayDisplayWindow: int mGravity> = i3;

        r0.<com.android.server.display.OverlayDisplayWindow: boolean mSecure> = z0;

        r0.<com.android.server.display.OverlayDisplayWindow: com.android.server.display.OverlayDisplayWindow$Listener mListener> = r3;

        $r10 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = newarray (java.lang.Object)[4];

        $r11 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mName>;

        $r12[0] = $r11;

        $i4 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r12[1] = $r13;

        $i5 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r12[2] = $r14;

        $i6 = r0.<com.android.server.display.OverlayDisplayWindow: int mDensityDpi>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r12[3] = $r15;

        $r17 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040846, $r12);

        r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle> = $r17;

        if z0 == 0 goto label1;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle>;

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r28 = virtualinvoke $r24.<android.content.res.Resources: java.lang.String getString(int)>(17040847);

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle> = $r27;

     label1:
        $r16 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r19 = (android.hardware.display.DisplayManager) $r16;

        r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager> = $r19;

        $r18 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r21 = (android.view.WindowManager) $r18;

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager> = $r21;

        $r22 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r20 = interfaceinvoke $r22.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.Display mDefaultDisplay> = $r20;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: boolean updateDefaultDisplayInfo()>();

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void createWindow()>();

        return;
    }

    public void show()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0, $z1;
        android.hardware.display.DisplayManager$DisplayListener $r1, $r6;
        android.hardware.display.DisplayManager $r2, $r7;
        android.view.WindowManager$LayoutParams $r3;
        android.view.View $r4;
        android.view.WindowManager $r5;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r2.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r1, null);

        $z1 = specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: boolean updateDefaultDisplayInfo()>();

        if $z1 != 0 goto label1;

        $r7 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager>;

        $r6 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r7.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r6);

        return;

     label1:
        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void clearLiveState()>();

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void updateWindowParams()>();

        $r5 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r5.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r4, $r3);

        r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible> = 1;

     label2:
        return;
    }

    public void dismiss()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0;
        android.hardware.display.DisplayManager$DisplayListener $r1;
        android.hardware.display.DisplayManager $r2;
        android.view.View $r3;
        android.view.WindowManager $r4;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager mDisplayManager>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r2.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r1);

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        interfaceinvoke $r4.<android.view.WindowManager: void removeView(android.view.View)>($r3);

        r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible> = 0;

     label1:
        return;
    }

    public void relayout()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0;
        android.view.WindowManager$LayoutParams $r1;
        android.view.View $r2;
        android.view.WindowManager $r3;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void updateWindowParams()>();

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager mWindowManager>;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r3.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r2, $r1);

     label1:
        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38, $r41, $r42, $r45;
        boolean $z0;
        java.lang.String $r5, $r9, $r14, $r16, $r23, $r28, $r33, $r34, $r43, $r44;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.view.WindowManager$LayoutParams $r21;
        android.view.TextureView $r22, $r39, $r40;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowVisible=");

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mWindowVisible>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowX=");

        $i0 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowY=");

        $i1 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowScale=");

        $f0 = r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWindowParams=");

        $r21 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r22 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        if $r22 == null goto label1;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTextureView.getScaleX()=");

        $r39 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $f4 = virtualinvoke $r39.<android.view.TextureView: float getScaleX()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTextureView.getScaleY()=");

        $r40 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $f5 = virtualinvoke $r40.<android.view.TextureView: float getScaleY()>();

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

     label1:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLiveTranslationX=");

        $f1 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLiveTranslationY=");

        $f2 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY>;

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLiveScale=");

        $f3 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale>;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        return;
    }

    private boolean updateDefaultDisplayInfo()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.DisplayInfo $r1;
        android.view.Display $r2;
        boolean $z0;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.Display mDefaultDisplay>;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $z0 = virtualinvoke $r2.<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)>($r1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayDisplayWindow", "Cannot show overlay display because there is no default display upon which to show it.");

        return 0;

     label1:
        return 1;
    }

    private void createWindow()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.LayoutInflater r1;
        android.content.Context $r2, $r33, $r34;
        android.view.View $r3, $r5, $r6, $r7, $r17, $r20;
        android.view.View$OnTouchListener $r4;
        android.view.TextureView $r8, $r9, $r10, $r11, $r13, $r16, $r18;
        android.view.ViewGroup$LayoutParams $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.TextureView$SurfaceTextureListener $r15;
        android.widget.TextView $r19, $r21;
        java.lang.String $r22, $r30;
        android.view.WindowManager$LayoutParams $r23, $r24, $r25, $r26, $r27, $r31, $r38;
        boolean $z0;
        android.view.GestureDetector $r28;
        android.view.GestureDetector$OnGestureListener $r29;
        android.view.ScaleGestureDetector$OnScaleGestureListener $r32;
        android.view.ScaleGestureDetector $r35;
        android.view.DisplayInfo $r36, $r37;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        r1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $r3 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367177, null);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent> = $r3;

        $r5 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View$OnTouchListener mOnTouchListener>;

        virtualinvoke $r5.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r4);

        $r6 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>(16909130);

        $r8 = (android.view.TextureView) $r7;

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView> = $r8;

        $r9 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r9.<android.view.TextureView: void setPivotX(float)>(0.0F);

        $r10 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r10.<android.view.TextureView: void setPivotY(float)>(0.0F);

        $r11 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $r12 = virtualinvoke $r11.<android.view.TextureView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $r12.<android.view.ViewGroup$LayoutParams: int width> = $i0;

        $r13 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $r14 = virtualinvoke $r13.<android.view.TextureView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $r14.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        $r16 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r16.<android.view.TextureView: void setOpaque(boolean)>(0);

        $r18 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $r15 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        virtualinvoke $r18.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>($r15);

        $r17 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.View mWindowContent>;

        $r20 = virtualinvoke $r17.<android.view.View: android.view.View findViewById(int)>(16909131);

        $r19 = (android.widget.TextView) $r20;

        r0.<com.android.server.display.OverlayDisplayWindow: android.widget.TextView mTitleTextView> = $r19;

        $r21 = r0.<com.android.server.display.OverlayDisplayWindow: android.widget.TextView mTitleTextView>;

        $r22 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle>;

        virtualinvoke $r21.<android.widget.TextView: void setText(java.lang.CharSequence)>($r22);

        $r24 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r24.<android.view.WindowManager$LayoutParams: void <init>(int)>(2026);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams> = $r24;

        $r23 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i3 = $r23.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i3 | 16778024;

        $r23.<android.view.WindowManager$LayoutParams: int flags> = $i2;

        $z0 = r0.<com.android.server.display.OverlayDisplayWindow: boolean mSecure>;

        if $z0 == 0 goto label1;

        $r38 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i13 = $r38.<android.view.WindowManager$LayoutParams: int flags>;

        $i12 = $i13 | 8192;

        $r38.<android.view.WindowManager$LayoutParams: int flags> = $i12;

     label1:
        $r25 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i4 = $r25.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i5 = $i4 | 2;

        $r25.<android.view.WindowManager$LayoutParams: int privateFlags> = $i5;

        $r26 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r26.<android.view.WindowManager$LayoutParams: float alpha> = 0.8F;

        $r27 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r27.<android.view.WindowManager$LayoutParams: int gravity> = 51;

        $r31 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r30 = r0.<com.android.server.display.OverlayDisplayWindow: java.lang.String mTitle>;

        virtualinvoke $r31.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r30);

        $r28 = new android.view.GestureDetector;

        $r34 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r29 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector$OnGestureListener mOnGestureListener>;

        specialinvoke $r28.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r34, $r29);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector mGestureDetector> = $r28;

        $r35 = new android.view.ScaleGestureDetector;

        $r33 = r0.<com.android.server.display.OverlayDisplayWindow: android.content.Context mContext>;

        $r32 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector$OnScaleGestureListener mOnScaleGestureListener>;

        specialinvoke $r35.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>($r33, $r32);

        r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector mScaleGestureDetector> = $r35;

        $i7 = r0.<com.android.server.display.OverlayDisplayWindow: int mGravity>;

        $i8 = $i7 & 3;

        if $i8 != 3 goto label2;

        $i6 = 0;

        goto label3;

     label2:
        $r36 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i6 = $r36.<android.view.DisplayInfo: int logicalWidth>;

     label3:
        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX> = $i6;

        $i11 = r0.<com.android.server.display.OverlayDisplayWindow: int mGravity>;

        $i10 = $i11 & 48;

        if $i10 != 48 goto label4;

        $i9 = 0;

        goto label5;

     label4:
        $r37 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i9 = $r37.<android.view.DisplayInfo: int logicalHeight>;

     label5:
        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY> = $i9;

        r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale> = 0.5F;

        return;
    }

    private void updateWindowParams()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, f30, f31, f32;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        android.view.DisplayInfo $r1, $r2, $r3, $r4;
        android.view.WindowManager$LayoutParams $r5, $r8, $r9, $r10;
        android.view.TextureView $r6, $r7;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $f3 = r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale>;

        $f2 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale>;

        f0 = $f3 * $f2;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i4 = $r1.<android.view.DisplayInfo: int logicalWidth>;

        $f5 = (float) $i4;

        $i5 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $f4 = (float) $i5;

        $f6 = $f5 / $f4;

        f30 = staticinvoke <java.lang.Math: float min(float,float)>(f0, $f6);

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i6 = $r2.<android.view.DisplayInfo: int logicalHeight>;

        $f9 = (float) $i6;

        $i7 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $f7 = (float) $i7;

        $f8 = $f9 / $f7;

        f31 = staticinvoke <java.lang.Math: float min(float,float)>(f30, $f8);

        $f10 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, f31);

        f32 = staticinvoke <java.lang.Math: float max(float,float)>(0.3F, $f10);

        $f12 = r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale>;

        $f11 = f32 / $f12;

        $f13 = $f11 - 1.0F;

        f1 = $f13 * 0.5F;

        $i8 = r0.<com.android.server.display.OverlayDisplayWindow: int mWidth>;

        $f15 = (float) $i8;

        $f14 = $f15 * f32;

        i0 = (int) $f14;

        $i10 = r0.<com.android.server.display.OverlayDisplayWindow: int mHeight>;

        $f17 = (float) $i10;

        $f16 = $f17 * f32;

        i1 = (int) $f16;

        $i9 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX>;

        $f21 = (float) $i9;

        $f20 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX>;

        $f23 = $f21 + $f20;

        $f18 = (float) i0;

        $f19 = $f18 * f1;

        $f24 = $f23 - $f19;

        i2 = (int) $f24;

        $i11 = r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY>;

        $f27 = (float) $i11;

        $f22 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY>;

        $f26 = $f27 + $f22;

        $f28 = (float) i1;

        $f25 = $f28 * f1;

        $f29 = $f26 - $f25;

        i3 = (int) $f29;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i13 = $r3.<android.view.DisplayInfo: int logicalWidth>;

        $i12 = $i13 - i0;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i12);

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i14);

        $r4 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        $i17 = $r4.<android.view.DisplayInfo: int logicalHeight>;

        $i16 = $i17 - i1;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i16);

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        $r7 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r7.<android.view.TextureView: void setScaleX(float)>(f32);

        $r6 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        virtualinvoke $r6.<android.view.TextureView: void setScaleY(float)>(f32);

        $r5 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r5.<android.view.WindowManager$LayoutParams: int x> = i18;

        $r8 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r8.<android.view.WindowManager$LayoutParams: int y> = i19;

        $r9 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r9.<android.view.WindowManager$LayoutParams: int width> = i0;

        $r10 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $r10.<android.view.WindowManager$LayoutParams: int height> = i1;

        return;
    }

    private void saveWindowParams()
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.WindowManager$LayoutParams $r1, $r2;
        int $i0, $i1;
        android.view.TextureView $r3;
        float $f0;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i0 = $r1.<android.view.WindowManager$LayoutParams: int x>;

        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowX> = $i0;

        $r2 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.WindowManager$LayoutParams mWindowParams>;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int y>;

        r0.<com.android.server.display.OverlayDisplayWindow: int mWindowY> = $i1;

        $r3 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.TextureView mTextureView>;

        $f0 = virtualinvoke $r3.<android.view.TextureView: float getScaleX()>();

        r0.<com.android.server.display.OverlayDisplayWindow: float mWindowScale> = $f0;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void clearLiveState()>();

        return;
    }

    private void clearLiveState()
    {
        com.android.server.display.OverlayDisplayWindow r0;

        r0 := @this: com.android.server.display.OverlayDisplayWindow;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX> = 0.0F;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY> = 0.0F;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale> = 1.0F;

        return;
    }

    static android.view.Display access$000(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.Display $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.Display mDefaultDisplay>;

        return $r1;
    }

    static boolean access$100(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $z0 = specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: boolean updateDefaultDisplayInfo()>();

        return $z0;
    }

    static android.view.DisplayInfo access$200(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.DisplayInfo $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.DisplayInfo mDefaultDisplayInfo>;

        return $r1;
    }

    static com.android.server.display.OverlayDisplayWindow$Listener access$300(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        com.android.server.display.OverlayDisplayWindow$Listener $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: com.android.server.display.OverlayDisplayWindow$Listener mListener>;

        return $r1;
    }

    static android.view.GestureDetector access$400(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.GestureDetector $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.GestureDetector mGestureDetector>;

        return $r1;
    }

    static android.view.ScaleGestureDetector access$500(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        android.view.ScaleGestureDetector $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        $r1 = r0.<com.android.server.display.OverlayDisplayWindow: android.view.ScaleGestureDetector mScaleGestureDetector>;

        return $r1;
    }

    static void access$600(com.android.server.display.OverlayDisplayWindow)
    {
        com.android.server.display.OverlayDisplayWindow r0;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        specialinvoke r0.<com.android.server.display.OverlayDisplayWindow: void saveWindowParams()>();

        return;
    }

    static float access$724(com.android.server.display.OverlayDisplayWindow, float)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float f0, $f1, $f2;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        f0 := @parameter1: float;

        $f1 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX>;

        $f2 = $f1 - f0;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationX> = $f2;

        return $f2;
    }

    static float access$824(com.android.server.display.OverlayDisplayWindow, float)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float f0, $f1, $f2;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        f0 := @parameter1: float;

        $f1 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY>;

        $f2 = $f1 - f0;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveTranslationY> = $f2;

        return $f2;
    }

    static float access$932(com.android.server.display.OverlayDisplayWindow, float)
    {
        com.android.server.display.OverlayDisplayWindow r0;
        float f0, $f1, $f2;

        r0 := @parameter0: com.android.server.display.OverlayDisplayWindow;

        f0 := @parameter1: float;

        $f1 = r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale>;

        $f2 = $f1 * f0;

        r0.<com.android.server.display.OverlayDisplayWindow: float mLiveScale> = $f2;

        return $f2;
    }

    public static void <clinit>()
    {
        <com.android.server.display.OverlayDisplayWindow: boolean DEBUG> = 0;

        <com.android.server.display.OverlayDisplayWindow: java.lang.String TAG> = "OverlayDisplayWindow";

        return;
    }
}
