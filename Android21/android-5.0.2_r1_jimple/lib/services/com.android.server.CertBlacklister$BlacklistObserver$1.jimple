class com.android.server.CertBlacklister$BlacklistObserver$1 extends java.lang.Thread
{
    final com.android.server.CertBlacklister$BlacklistObserver this$0;

    void <init>(com.android.server.CertBlacklister$BlacklistObserver, java.lang.String)
    {
        com.android.server.CertBlacklister$BlacklistObserver$1 r0;
        com.android.server.CertBlacklister$BlacklistObserver r1;
        java.lang.String r2;

        r0 := @this: com.android.server.CertBlacklister$BlacklistObserver$1;

        r1 := @parameter0: com.android.server.CertBlacklister$BlacklistObserver;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.CertBlacklister$BlacklistObserver$1: com.android.server.CertBlacklister$BlacklistObserver this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.server.CertBlacklister$BlacklistObserver$1 r0;
        java.io.File r1, r4, $r8, $r11, $r15;
        java.lang.String r2, $r16;
        java.io.FileOutputStream r3, $r12;
        java.lang.Throwable r5, r6, $r17, $r19;
        com.android.server.CertBlacklister$BlacklistObserver $r7, $r9, $r10, $r14;
        byte[] $r13;
        java.io.IOException $r18, r20;

        r0 := @this: com.android.server.CertBlacklister$BlacklistObserver$1;

        $r7 = r0.<com.android.server.CertBlacklister$BlacklistObserver$1: com.android.server.CertBlacklister$BlacklistObserver this$0>;

        $r8 = staticinvoke <com.android.server.CertBlacklister$BlacklistObserver: java.io.File access$000(com.android.server.CertBlacklister$BlacklistObserver)>($r7);

        r1 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<com.android.server.CertBlacklister$BlacklistObserver$1: com.android.server.CertBlacklister$BlacklistObserver this$0>;

        r2 = virtualinvoke $r9.<com.android.server.CertBlacklister$BlacklistObserver: java.lang.String getValue()>();

        if r2 == null goto label08;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("CertBlacklister", "Certificate blacklist changed, updating...");

        r3 = null;

     label02:
        $r10 = r0.<com.android.server.CertBlacklister$BlacklistObserver$1: com.android.server.CertBlacklister$BlacklistObserver this$0>;

        $r11 = staticinvoke <com.android.server.CertBlacklister$BlacklistObserver: java.io.File access$000(com.android.server.CertBlacklister$BlacklistObserver)>($r10);

        r4 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("journal", "", $r11);

        virtualinvoke r4.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        r3 = $r12;

        $r13 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>($r13);

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r3);

        $r15 = new java.io.File;

        $r14 = r0.<com.android.server.CertBlacklister$BlacklistObserver$1: com.android.server.CertBlacklister$BlacklistObserver this$0>;

        $r16 = staticinvoke <com.android.server.CertBlacklister$BlacklistObserver: java.lang.String access$100(com.android.server.CertBlacklister$BlacklistObserver)>($r14);

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r16);

        virtualinvoke r4.<java.io.File: boolean renameTo(java.io.File)>($r15);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("CertBlacklister", "Certificate blacklist updated");

     label03:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        goto label08;

     label04:
        $r18 := @caughtexception;

        r20 = $r18;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CertBlacklister", "Failed to write blacklist", r20);

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        goto label08;

     label06:
        $r19 := @caughtexception;

        r5 = $r19;

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r5;

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r1;

     label11:
        throw r6;

     label12:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }
}
