public final class com.android.server.media.MediaRouterService extends android.media.IMediaRouterService$Stub implements com.android.server.Watchdog$Monitor
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    static final long CONNECTING_TIMEOUT;
    static final long CONNECTED_TIMEOUT;
    private final android.content.Context mContext;
    private final java.lang.Object mLock;
    private final android.util.SparseArray mUserRecords;
    private final android.util.ArrayMap mAllClientRecords;
    private int mCurrentUserId;

    public void <init>(android.content.Context)
    {
        com.android.server.media.MediaRouterService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;
        android.util.ArrayMap $r4;
        com.android.server.Watchdog $r5;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.media.IMediaRouterService$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords> = $r4;

        r0.<com.android.server.media.MediaRouterService: int mCurrentUserId> = -1;

        r0.<com.android.server.media.MediaRouterService: android.content.Context mContext> = r1;

        $r5 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r5.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        return;
    }

    public void systemRunning()
    {
        com.android.server.media.MediaRouterService r0;
        android.content.IntentFilter r1, $r2;
        com.android.server.media.MediaRouterService$1 $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_SWITCHED");

        r1 = $r2;

        $r4 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $r3 = new com.android.server.media.MediaRouterService$1;

        specialinvoke $r3.<com.android.server.media.MediaRouterService$1: void <init>(com.android.server.media.MediaRouterService)>(r0);

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        virtualinvoke r0.<com.android.server.media.MediaRouterService: void switchUser()>();

        return;
    }

    public void monitor()
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.media.MediaRouterService;

        $r3 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerClientAsUser(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0, i1, i2, i3, $i5;
        boolean z0, $z1, $z2;
        long l4;
        java.lang.Object r3, $r7;
        java.lang.Throwable r4, r5, $r9, $r11;
        android.content.Context $r6;
        java.lang.SecurityException $r8;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label01;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r10;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z1 = specialinvoke r0.<com.android.server.media.MediaRouterService: boolean validatePackageName(int,java.lang.String)>(i1, r2);

        if $z1 != 0 goto label02;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("packageName must match the calling uid");

        throw $r8;

     label02:
        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i2, i1, i0, 0, 1, "registerClientAsUser", r2);

        $r6 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $i5 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CONFIGURE_WIFI_DISPLAY");

        if $i5 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $r7 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label06:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void registerClientLocked(android.media.IMediaRouterClient,int,java.lang.String,int,boolean)>(r1, i2, r2, i3, z0);

        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label09:
        throw r4;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        goto label13;

     label11:
        $r11 := @caughtexception;

        r5 = $r11;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r5;

     label13:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void unregisterClient(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        long l0;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, r4, $r7, $r8;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        if r1 != null goto label01;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r6;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label03:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void unregisterClientLocked(android.media.IMediaRouterClient,boolean)>(r1, 0);

        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label10;

     label08:
        $r8 := @caughtexception;

        r4 = $r8;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        long l0;
        java.lang.Object r2, $r6;
        android.media.MediaRouterClientState r3;
        java.lang.Throwable r4, r5, $r8, $r9;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r7;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r6 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label3:
        r3 = specialinvoke r0.<com.android.server.media.MediaRouterService: android.media.MediaRouterClientState getStateLocked(android.media.IMediaRouterClient)>(r1);

        exitmonitor r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r3;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public void setDiscoveryRequest(android.media.IMediaRouterClient, int, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        int i0;
        boolean z0;
        long l1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, r4, $r7, $r8;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r1 != null goto label01;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r6;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label03:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void setDiscoveryRequestLocked(android.media.IMediaRouterClient,int,boolean)>(r1, i0, z0);

        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label10;

     label08:
        $r7 := @caughtexception;

        r4 = $r7;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void setSelectedRoute(android.media.IMediaRouterClient, java.lang.String, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        boolean z0;
        long l0;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, r5, $r8, $r9;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r1 != null goto label01;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r7;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r6 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label03:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void setSelectedRouteLocked(android.media.IMediaRouterClient,java.lang.String,boolean)>(r1, r2, z0);

        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label06:
        throw r4;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label10;

     label08:
        $r9 := @caughtexception;

        r5 = $r9;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void requestSetVolume(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        long l1;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, r5, $r9, $r10;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r8;

     label01:
        if r2 != null goto label02;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be null");

        throw $r7;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r6 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label04:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void requestSetVolumeLocked(android.media.IMediaRouterClient,java.lang.String,int)>(r1, r2, i0);

        exitmonitor r3;

     label05:
        goto label08;

     label06:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label07:
        throw r4;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label11;

     label09:
        $r10 := @caughtexception;

        r5 = $r10;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void requestUpdateVolume(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        long l1;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, r5, $r9, $r10;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("client must not be null");

        throw $r8;

     label01:
        if r2 != null goto label02;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be null");

        throw $r7;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r6 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label04:
        specialinvoke r0.<com.android.server.media.MediaRouterService: void requestUpdateVolumeLocked(android.media.IMediaRouterClient,java.lang.String,int)>(r1, r2, i0);

        exitmonitor r3;

     label05:
        goto label08;

     label06:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label07:
        throw r4;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label11;

     label09:
        $r10 := @caughtexception;

        r5 = $r10;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.media.MediaRouterService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Object r4, $r13, $r14;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.server.media.MediaRouterService$UserRecord r5;
        java.lang.Throwable r6, $r22;
        android.content.Context $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r21;
        java.lang.String $r11, $r20;
        android.util.SparseArray $r12, $r15;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r7 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $i2 = virtualinvoke $r7.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump MediaRouterService from from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        return;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("MEDIA ROUTER SERVICE (dumpsys media_router)");

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Global state");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurrentUserId=");

        $i3 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r13 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r4 = $r13;

        entermonitor $r13;

     label2:
        $r12 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        i0 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r15 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r14 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r5 = (com.android.server.media.MediaRouterService$UserRecord) $r14;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r5.<com.android.server.media.MediaRouterService$UserRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "");

        i1 = i1 + 1;

        goto label3;

     label4:
        exitmonitor r4;

     label5:
        goto label8;

     label6:
        $r22 := @caughtexception;

        r6 = $r22;

        exitmonitor r4;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void switchUser()
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object r1, $r5, $r7, $r9;
        int i0, i1, $i2;
        com.android.server.media.MediaRouterService$UserRecord r2, r3;
        java.lang.Throwable r4, $r12;
        android.util.SparseArray $r6, $r8;
        com.android.server.media.MediaRouterService$UserHandler $r10, $r11;

        r0 := @this: com.android.server.media.MediaRouterService;

        $r5 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $i2 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        if $i2 == i0 goto label3;

        i1 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        r0.<com.android.server.media.MediaRouterService: int mCurrentUserId> = i0;

        $r6 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.media.MediaRouterService$UserRecord) $r7;

        if r2 == null goto label2;

        $r11 = r2.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r11.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(2);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void disposeUserIfNeededLocked(com.android.server.media.MediaRouterService$UserRecord)>(r2);

     label2:
        $r8 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.media.MediaRouterService$UserRecord) $r9;

        if r3 == null goto label3;

        $r10 = r3.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r10.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(1);

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r1;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void clientDied(com.android.server.media.MediaRouterService$ClientRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$ClientRecord r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.media.IMediaRouterClient $r5;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$ClientRecord;

        $r4 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r1.<com.android.server.media.MediaRouterService$ClientRecord: android.media.IMediaRouterClient mClient>;

        specialinvoke r0.<com.android.server.media.MediaRouterService: void unregisterClientLocked(android.media.IMediaRouterClient,boolean)>($r5, 1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void registerClientLocked(android.media.IMediaRouterClient, int, java.lang.String, int, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        int i0, i1;
        java.lang.String r2;
        boolean z0, z1;
        android.os.IBinder r3;
        com.android.server.media.MediaRouterService$ClientRecord r4, $r12, r19;
        com.android.server.media.MediaRouterService$UserRecord r5, $r17;
        android.os.RemoteException r6, $r16;
        android.util.ArrayMap $r7, $r13;
        java.lang.Object $r8, $r10;
        android.util.SparseArray $r9, $r14;
        java.util.ArrayList $r11;
        java.lang.RuntimeException $r18;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r7 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.media.MediaRouterService$ClientRecord) $r8;

        if r4 != null goto label7;

        z1 = 0;

        $r9 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.media.MediaRouterService$UserRecord) $r10;

        if r5 != null goto label1;

        $r17 = new com.android.server.media.MediaRouterService$UserRecord;

        specialinvoke $r17.<com.android.server.media.MediaRouterService$UserRecord: void <init>(com.android.server.media.MediaRouterService,int)>(r0, i1);

        r5 = $r17;

        z1 = 1;

     label1:
        $r12 = new com.android.server.media.MediaRouterService$ClientRecord;

        specialinvoke $r12.<com.android.server.media.MediaRouterService$ClientRecord: void <init>(com.android.server.media.MediaRouterService,com.android.server.media.MediaRouterService$UserRecord,android.media.IMediaRouterClient,int,java.lang.String,boolean)>(r0, r5, r1, i0, r2, z0);

        r19 = $r12;

     label2:
        interfaceinvoke r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r19, 0);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        r6 = $r16;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Media router client died prematurely.", r6);

        throw $r18;

     label5:
        if z1 == 0 goto label6;

        $r14 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r5);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void initializeUserLocked(com.android.server.media.MediaRouterService$UserRecord)>(r5);

     label6:
        $r11 = r5.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r19);

        $r13 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r19);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void initializeClientLocked(com.android.server.media.MediaRouterService$ClientRecord)>(r19);

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void unregisterClientLocked(android.media.IMediaRouterClient, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        boolean z0;
        com.android.server.media.MediaRouterService$ClientRecord r2;
        com.android.server.media.MediaRouterService$UserRecord r3;
        android.util.ArrayMap $r4;
        android.os.IBinder $r5;
        java.lang.Object $r6;
        java.util.ArrayList $r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        z0 := @parameter1: boolean;

        $r4 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r5 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r6 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r5);

        r2 = (com.android.server.media.MediaRouterService$ClientRecord) $r6;

        if r2 == null goto label1;

        r3 = r2.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r7 = r3.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void disposeClientLocked(com.android.server.media.MediaRouterService$ClientRecord,boolean)>(r2, z0);

        specialinvoke r0.<com.android.server.media.MediaRouterService: void disposeUserIfNeededLocked(com.android.server.media.MediaRouterService$UserRecord)>(r3);

     label1:
        return;
    }

    private android.media.MediaRouterClientState getStateLocked(android.media.IMediaRouterClient)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        com.android.server.media.MediaRouterService$ClientRecord r2;
        android.util.ArrayMap $r3;
        android.os.IBinder $r4;
        java.lang.Object $r5;
        android.media.MediaRouterClientState $r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        $r3 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r4 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (com.android.server.media.MediaRouterService$ClientRecord) $r5;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<com.android.server.media.MediaRouterService$ClientRecord: android.media.MediaRouterClientState getState()>();

        return $r6;

     label1:
        return null;
    }

    private void setDiscoveryRequestLocked(android.media.IMediaRouterClient, int, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        int i0, $i1;
        boolean z0, $z1, $z2, $z4;
        android.os.IBinder r2;
        com.android.server.media.MediaRouterService$ClientRecord r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        com.android.server.media.MediaRouterService$UserRecord $r6;
        com.android.server.media.MediaRouterService$UserHandler $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r15;
        java.lang.String $r10, $r14;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.server.media.MediaRouterService$ClientRecord) $r5;

        if r3 == null goto label4;

        $z1 = r3.<com.android.server.media.MediaRouterService$ClientRecord: boolean mTrusted>;

        if $z1 != 0 goto label1;

        i0 = i0 & -5;

     label1:
        $i1 = r3.<com.android.server.media.MediaRouterService$ClientRecord: int mRouteTypes>;

        if $i1 != i0 goto label2;

        $z4 = r3.<com.android.server.media.MediaRouterService$ClientRecord: boolean mActiveScan>;

        if $z4 == z0 goto label4;

     label2:
        $z2 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z2 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Set discovery request, routeTypes=0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", activeScan=");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r14);

     label3:
        r3.<com.android.server.media.MediaRouterService$ClientRecord: int mRouteTypes> = i0;

        r3.<com.android.server.media.MediaRouterService$ClientRecord: boolean mActiveScan> = z0;

        $r6 = r3.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r7 = $r6.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r7.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(3);

     label4:
        return;
    }

    private void setSelectedRouteLocked(android.media.IMediaRouterClient, java.lang.String, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2, r4, $r21;
        boolean z0, $z1, $z2, $z3;
        com.android.server.media.MediaRouterService$ClientRecord r3;
        android.util.ArrayMap $r5;
        android.os.IBinder $r6;
        java.lang.Object $r7;
        com.android.server.media.MediaRouterService$UserRecord $r8, $r11;
        com.android.server.media.MediaRouterService$UserHandler $r9, $r13;
        android.os.Message $r10, $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r5 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r6 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (com.android.server.media.MediaRouterService$ClientRecord) $r7;

        if r3 == null goto label3;

        r4 = r3.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mSelectedRouteId>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, r4);

        if $z1 != 0 goto label3;

        $z2 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Set selected route, routeId=");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oldRouteId=");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", explicit=");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r21);

     label1:
        r3.<com.android.server.media.MediaRouterService$ClientRecord: java.lang.String mSelectedRouteId> = r2;

        if z0 == 0 goto label3;

        if r4 == null goto label2;

        $r11 = r3.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r13 = $r11.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r12 = virtualinvoke $r13.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,java.lang.Object)>(5, r4);

        virtualinvoke $r12.<android.os.Message: void sendToTarget()>();

     label2:
        if r2 == null goto label3;

        $z3 = r3.<com.android.server.media.MediaRouterService$ClientRecord: boolean mTrusted>;

        if $z3 == 0 goto label3;

        $r8 = r3.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r9 = $r8.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r10 = virtualinvoke $r9.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,java.lang.Object)>(4, r2);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

     label3:
        return;
    }

    private void requestSetVolumeLocked(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        android.os.IBinder r3;
        com.android.server.media.MediaRouterService$ClientRecord r4;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        com.android.server.media.MediaRouterService$UserRecord $r7;
        com.android.server.media.MediaRouterService$UserHandler $r8;
        android.os.Message $r9;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r5 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.media.MediaRouterService$ClientRecord) $r6;

        if r4 == null goto label1;

        $r7 = r4.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r8 = $r7.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r9 = virtualinvoke $r8.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(6, i0, 0, r2);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void requestUpdateVolumeLocked(android.media.IMediaRouterClient, java.lang.String, int)
    {
        com.android.server.media.MediaRouterService r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        android.os.IBinder r3;
        com.android.server.media.MediaRouterService$ClientRecord r4;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        com.android.server.media.MediaRouterService$UserRecord $r7;
        com.android.server.media.MediaRouterService$UserHandler $r8;
        android.os.Message $r9;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        $r5 = r0.<com.android.server.media.MediaRouterService: android.util.ArrayMap mAllClientRecords>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.media.MediaRouterService$ClientRecord) $r6;

        if r4 == null goto label1;

        $r7 = r4.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r8 = $r7.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        $r9 = virtualinvoke $r8.<com.android.server.media.MediaRouterService$UserHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(7, i0, 0, r2);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void initializeUserLocked(com.android.server.media.MediaRouterService$UserRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$UserRecord r1;
        boolean $z0;
        int $i0, $i1;
        com.android.server.media.MediaRouterService$UserHandler $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$UserRecord;

        $z0 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Initialized");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r6);

     label1:
        $i1 = r1.<com.android.server.media.MediaRouterService$UserRecord: int mUserId>;

        $i0 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        if $i1 != $i0 goto label2;

        $r2 = r1.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r2.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(1);

     label2:
        return;
    }

    private void disposeUserIfNeededLocked(com.android.server.media.MediaRouterService$UserRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$UserRecord r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.util.SparseArray $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$UserRecord;

        $i1 = r1.<com.android.server.media.MediaRouterService$UserRecord: int mUserId>;

        $i0 = r0.<com.android.server.media.MediaRouterService: int mCurrentUserId>;

        if $i1 == $i0 goto label2;

        $r2 = r1.<com.android.server.media.MediaRouterService$UserRecord: java.util.ArrayList mClientRecords>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $z1 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Disposed");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r7);

     label1:
        $r3 = r0.<com.android.server.media.MediaRouterService: android.util.SparseArray mUserRecords>;

        $i2 = r1.<com.android.server.media.MediaRouterService$UserRecord: int mUserId>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>($i2);

     label2:
        return;
    }

    private void initializeClientLocked(com.android.server.media.MediaRouterService$ClientRecord)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$ClientRecord r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$ClientRecord;

        $z0 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Registered");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r5);

     label1:
        return;
    }

    private void disposeClientLocked(com.android.server.media.MediaRouterService$ClientRecord, boolean)
    {
        com.android.server.media.MediaRouterService r0;
        com.android.server.media.MediaRouterService$ClientRecord r1;
        boolean z0, $z1, $z3;
        int $i0;
        com.android.server.media.MediaRouterService$UserRecord $r2;
        com.android.server.media.MediaRouterService$UserHandler $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r11;
        java.lang.String $r7, $r10;

        r0 := @this: com.android.server.media.MediaRouterService;

        r1 := @parameter0: com.android.server.media.MediaRouterService$ClientRecord;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.media.MediaRouterService: boolean DEBUG>;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Died!");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r10);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unregistered");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MediaRouterService", $r7);

     label2:
        $i0 = r1.<com.android.server.media.MediaRouterService$ClientRecord: int mRouteTypes>;

        if $i0 != 0 goto label3;

        $z3 = r1.<com.android.server.media.MediaRouterService$ClientRecord: boolean mActiveScan>;

        if $z3 == 0 goto label4;

     label3:
        $r2 = r1.<com.android.server.media.MediaRouterService$ClientRecord: com.android.server.media.MediaRouterService$UserRecord mUserRecord>;

        $r3 = $r2.<com.android.server.media.MediaRouterService$UserRecord: com.android.server.media.MediaRouterService$UserHandler mHandler>;

        virtualinvoke $r3.<com.android.server.media.MediaRouterService$UserHandler: boolean sendEmptyMessage(int)>(3);

     label4:
        virtualinvoke r1.<com.android.server.media.MediaRouterService$ClientRecord: void dispose()>();

        return;
    }

    private boolean validatePackageName(int, java.lang.String)
    {
        com.android.server.media.MediaRouterService r0;
        int i0, i1, i2;
        java.lang.String r1, r4;
        java.lang.String[] r2, r3;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        boolean $z0;

        r0 := @this: com.android.server.media.MediaRouterService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label3;

        $r5 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r2 == null goto label3;

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r4 = r3[i2];

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    static android.content.Context access$000(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.media.MediaRouterService)
    {
        com.android.server.media.MediaRouterService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.media.MediaRouterService;

        $r1 = r0.<com.android.server.media.MediaRouterService: java.lang.Object mLock>;

        return $r1;
    }

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.media.MediaRouterService: long CONNECTED_TIMEOUT> = 60000L;

        <com.android.server.media.MediaRouterService: long CONNECTING_TIMEOUT> = 5000L;

        <com.android.server.media.MediaRouterService: java.lang.String TAG> = "MediaRouterService";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaRouterService", 3);

        <com.android.server.media.MediaRouterService: boolean DEBUG> = $z0;

        return;
    }
}
