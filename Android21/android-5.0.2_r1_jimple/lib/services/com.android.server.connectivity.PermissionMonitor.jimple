public class com.android.server.connectivity.PermissionMonitor extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean SYSTEM;
    private static final boolean NETWORK;
    private final android.content.Context mContext;
    private final android.content.pm.PackageManager mPackageManager;
    private final android.os.UserManager mUserManager;
    private final android.os.INetworkManagementService mNetd;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private final java.util.Set mUsers;
    private final java.util.Map mApps;

    public void <init>(android.content.Context, android.os.INetworkManagementService)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.Context r1;
        android.os.INetworkManagementService r2;
        java.util.HashSet $r3;
        java.util.HashMap $r4;
        android.content.pm.PackageManager $r5;
        android.os.UserManager $r6;
        com.android.server.connectivity.PermissionMonitor$1 $r7;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.INetworkManagementService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps> = $r4;

        r0.<com.android.server.connectivity.PermissionMonitor: android.content.Context mContext> = r1;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager> = $r5;

        $r6 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>(r1);

        r0.<com.android.server.connectivity.PermissionMonitor: android.os.UserManager mUserManager> = $r6;

        r0.<com.android.server.connectivity.PermissionMonitor: android.os.INetworkManagementService mNetd> = r2;

        $r7 = new com.android.server.connectivity.PermissionMonitor$1;

        specialinvoke $r7.<com.android.server.connectivity.PermissionMonitor$1: void <init>(com.android.server.connectivity.PermissionMonitor)>(r0);

        r0.<com.android.server.connectivity.PermissionMonitor: android.content.BroadcastReceiver mIntentReceiver> = $r7;

        return;
    }

    public synchronized void startMonitoring()
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.IntentFilter r1, $r6, $r11, r41;
        java.util.List r2, r42;
        java.util.Iterator r3, r43;
        android.content.pm.PackageInfo r4;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, z1, $z2, $z3, $z5;
        java.lang.Boolean r5, $r38;
        android.os.UserHandle $r7, $r12;
        android.content.BroadcastReceiver $r8, $r14;
        android.content.Context $r9, $r13;
        android.content.pm.PackageManager $r15;
        android.os.UserManager $r17;
        java.lang.StringBuilder $r18, $r20, $r21, $r23, $r26;
        java.util.Set $r19, $r28, $r30;
        java.util.Map $r22, $r25, $r33, $r36;
        java.lang.String $r24;
        java.lang.Object $r27, $r31, $r34;
        java.lang.Integer $r29, $r35, $r39;
        android.content.pm.ApplicationInfo $r32, $r40;
        android.content.pm.UserInfo r44;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void log(java.lang.String)>("Monitoring");

        $r6 = new android.content.IntentFilter;

        specialinvoke $r6.<android.content.IntentFilter: void <init>()>();

        r1 = $r6;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_ADDED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r9 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.Context mContext>;

        $r8 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.BroadcastReceiver mIntentReceiver>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r8, $r7, r1, null, null);

        $r11 = new android.content.IntentFilter;

        specialinvoke $r11.<android.content.IntentFilter: void <init>()>();

        r41 = $r11;

        virtualinvoke r41.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r41.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r41.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r13 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.Context mContext>;

        $r14 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.BroadcastReceiver mIntentReceiver>;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r13.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r14, $r12, r41, null, null);

        $r15 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        r2 = virtualinvoke $r15.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(4096);

        if r2 != null goto label01;

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>("No apps");

        return;

     label01:
        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r31 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageInfo) $r31;

        $r32 = r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r32 == null goto label03;

        $r40 = r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r40.<android.content.pm.ApplicationInfo: int uid>;

        goto label04;

     label03:
        $i4 = -1;

     label04:
        i0 = $i4;

        if i0 >= 0 goto label05;

        goto label02;

     label05:
        z0 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasNetworkPermission(android.content.pm.PackageInfo)>(r4);

        z1 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasSystemPermission(android.content.pm.PackageInfo)>(r4);

        if z0 != 0 goto label06;

        if z1 == 0 goto label08;

     label06:
        $r36 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r34 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35);

        r5 = (java.lang.Boolean) $r34;

        if r5 == null goto label07;

        $z5 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 != 0 goto label08;

     label07:
        $r33 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r38);

     label08:
        goto label02;

     label09:
        $r17 = r0.<com.android.server.connectivity.PermissionMonitor: android.os.UserManager mUserManager>;

        r42 = virtualinvoke $r17.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        if r42 == null goto label11;

        r43 = interfaceinvoke r42.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r27 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (android.content.pm.UserInfo) $r27;

        $r30 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $i3 = r44.<android.content.pm.UserInfo: int id>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r29);

        goto label10;

     label11:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Users: ");

        $r19 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $i1 = interfaceinvoke $r19.<java.util.Set: int size()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Apps: ");

        $r22 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $i2 = interfaceinvoke $r22.<java.util.Map: int size()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void log(java.lang.String)>($r24);

        $r28 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $r25 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r28, $r25, 1);

        return;
    }

    private boolean hasPermission(android.content.pm.PackageInfo, java.lang.String)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        java.lang.String r2, r4;
        java.lang.String[] r3, $r5;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: java.lang.String;

        $r5 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        if $r5 == null goto label3;

        r3 = r1.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean hasNetworkPermission(android.content.pm.PackageInfo)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.pm.PackageInfo;

        $z0 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasPermission(android.content.pm.PackageInfo,java.lang.String)>(r1, "android.permission.CHANGE_NETWORK_STATE");

        return $z0;
    }

    private boolean hasSystemPermission(android.content.pm.PackageInfo)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        android.content.pm.PackageInfo r1;
        int i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: android.content.pm.PackageInfo;

        $r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r2 == null goto label1;

        $r3 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r3.<android.content.pm.ApplicationInfo: int flags>;

        goto label2;

     label1:
        $i3 = 0;

     label2:
        i0 = $i3;

        $i1 = i0 & 1;

        if $i1 != 0 goto label3;

        $i2 = i0 & 128;

        if $i2 == 0 goto label4;

     label3:
        return 1;

     label4:
        $z0 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasPermission(android.content.pm.PackageInfo,java.lang.String)>(r1, "android.permission.CONNECTIVITY_INTERNAL");

        return $z0;
    }

    private int[] toIntArray(java.util.List)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.util.List r1;
        int[] r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: java.util.List;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (int)[$i1];

        i0 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i2 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r2[i0] = $i3;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    private void update(java.util.Set, java.util.Map, boolean)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.util.Set r1, $r11;
        java.util.Map r2;
        boolean z0, $z1, $z2, $z3;
        java.util.ArrayList r3, r4, r7, $r9, $r10, $r30;
        java.util.Iterator r5, r8;
        java.util.Map$Entry r6;
        int i0, $i1, $i2;
        int[] $r12, $r14, $r18, $r19;
        android.os.INetworkManagementService $r13, $r15, $r16, $r17;
        java.lang.Object $r20, $r21, $r23, $r24;
        java.lang.Boolean $r22;
        java.lang.Integer $r25, $r26, $r27;
        android.os.RemoteException $r28, r34;
        java.lang.StringBuilder $r29, $r32, $r33;
        java.lang.String $r31;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Map;

        z0 := @parameter2: boolean;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r4 = $r10;

        $r11 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r21 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r21;

        $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (java.lang.Boolean) $r20;

        $z2 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label02;

        $r30 = r4;

        goto label03;

     label02:
        $r30 = r3;

     label03:
        r7 = $r30;

        r8 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r24 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (java.lang.Integer) $r24;

        i0 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.Integer) $r23;

        $i2 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i2);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label04;

     label05:
        goto label01;

     label06:
        if z0 == 0 goto label07;

        $r16 = r0.<com.android.server.connectivity.PermissionMonitor: android.os.INetworkManagementService mNetd>;

        $r18 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.List)>(r3);

        interfaceinvoke $r16.<android.os.INetworkManagementService: void setPermission(java.lang.String,int[])>("android.permission.CHANGE_NETWORK_STATE", $r18);

        $r17 = r0.<com.android.server.connectivity.PermissionMonitor: android.os.INetworkManagementService mNetd>;

        $r19 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.List)>(r4);

        interfaceinvoke $r17.<android.os.INetworkManagementService: void setPermission(java.lang.String,int[])>("android.permission.CONNECTIVITY_INTERNAL", $r19);

        goto label08;

     label07:
        $r13 = r0.<com.android.server.connectivity.PermissionMonitor: android.os.INetworkManagementService mNetd>;

        $r12 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.List)>(r3);

        interfaceinvoke $r13.<android.os.INetworkManagementService: void clearPermission(int[])>($r12);

        $r15 = r0.<com.android.server.connectivity.PermissionMonitor: android.os.INetworkManagementService mNetd>;

        $r14 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: int[] toIntArray(java.util.List)>(r4);

        interfaceinvoke $r15.<android.os.INetworkManagementService: void clearPermission(int[])>($r14);

     label08:
        goto label10;

     label09:
        $r28 := @caughtexception;

        r34 = $r28;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when updating permissions: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r31);

     label10:
        return;

        catch android.os.RemoteException from label06 to label08 with label09;
    }

    private synchronized void onUserAdded(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;
        java.util.HashSet r1, $r4;
        java.util.Set $r2;
        java.lang.Integer $r3, $r5;
        java.util.Map $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid user in onUserAdded: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r10);

        return;

     label1:
        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>(r1, $r6, 1);

        return;
    }

    private synchronized void onUserRemoved(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;
        java.util.HashSet r1, $r4;
        java.util.Set $r2;
        java.lang.Integer $r3, $r5;
        java.util.Map $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid user in onUserRemoved: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r10);

        return;

     label1:
        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>(r1, $r6, 0);

        return;
    }

    private synchronized void onAppAdded(java.lang.String, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.lang.String r1, $r10, $r28;
        int i0;
        android.content.pm.PackageInfo r2;
        boolean z0, z1, $z2, $z3;
        java.lang.Boolean r3, $r18, $r22;
        java.util.HashMap r4, $r20;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r24, $r25, $r27;
        android.content.pm.PackageManager $r11;
        java.util.Map $r12, $r16;
        java.lang.Object $r13;
        java.lang.Integer $r14, $r15, $r19;
        java.util.Set $r23;
        android.content.pm.PackageManager$NameNotFoundException $r26, r29;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label1;

        if i0 >= 0 goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid app in onAppAdded: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r10);

        return;

     label2:
        $r11 = r0.<com.android.server.connectivity.PermissionMonitor: android.content.pm.PackageManager mPackageManager>;

        r2 = virtualinvoke $r11.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 4096);

        z0 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasNetworkPermission(android.content.pm.PackageInfo)>(r2);

        z1 = specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: boolean hasSystemPermission(android.content.pm.PackageInfo)>(r2);

        if z0 != 0 goto label3;

        if z1 == 0 goto label5;

     label3:
        $r12 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        r3 = (java.lang.Boolean) $r13;

        if r3 == null goto label4;

        $z3 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != 0 goto label5;

     label4:
        $r16 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r4 = $r20;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r22);

        $r23 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r23, r4, 1);

     label5:
        goto label7;

     label6:
        $r26 := @caughtexception;

        r29 = $r26;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNotFoundException in onAppAdded: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r28);

     label7:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label5 with label6;
    }

    private synchronized void onAppRemoved(int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;
        java.util.HashMap r1, $r5;
        java.util.Map $r2;
        java.lang.Integer $r3, $r6;
        java.lang.Boolean $r7;
        java.util.Set $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid app in onAppRemoved: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.connectivity.PermissionMonitor: void loge(java.lang.String)>($r13);

        return;

     label1:
        $r2 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Map mApps>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r1 = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r9 = r0.<com.android.server.connectivity.PermissionMonitor: java.util.Set mUsers>;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void update(java.util.Set,java.util.Map,boolean)>($r9, r1, 0);

        return;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PermissionMonitor", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PermissionMonitor", r0);

        return;
    }

    static void access$000(com.android.server.connectivity.PermissionMonitor, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;

        r0 := @parameter0: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void onUserAdded(int)>(i0);

        return;
    }

    static void access$100(com.android.server.connectivity.PermissionMonitor, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;

        r0 := @parameter0: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void onUserRemoved(int)>(i0);

        return;
    }

    static void access$200(com.android.server.connectivity.PermissionMonitor, java.lang.String, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.connectivity.PermissionMonitor;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void onAppAdded(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$300(com.android.server.connectivity.PermissionMonitor, int)
    {
        com.android.server.connectivity.PermissionMonitor r0;
        int i0;

        r0 := @parameter0: com.android.server.connectivity.PermissionMonitor;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.connectivity.PermissionMonitor: void onAppRemoved(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.PermissionMonitor: boolean NETWORK> = 0;

        <com.android.server.connectivity.PermissionMonitor: boolean SYSTEM> = 1;

        <com.android.server.connectivity.PermissionMonitor: boolean DBG> = 1;

        <com.android.server.connectivity.PermissionMonitor: java.lang.String TAG> = "PermissionMonitor";

        return;
    }
}
