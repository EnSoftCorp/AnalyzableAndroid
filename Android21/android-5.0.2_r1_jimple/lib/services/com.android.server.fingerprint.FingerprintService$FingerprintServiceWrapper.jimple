final class com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper extends android.service.fingerprint.IFingerprintService$Stub
{
    final com.android.server.fingerprint.FingerprintService this$0;

    private void <init>(com.android.server.fingerprint.FingerprintService)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        com.android.server.fingerprint.FingerprintService r1;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: com.android.server.fingerprint.FingerprintService;

        r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0> = r1;

        specialinvoke r0.<android.service.fingerprint.IFingerprintService$Stub: void <init>()>();

        return;
    }

    public void enroll(android.os.IBinder, long, int)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        android.os.IBinder r1;
        long l0;
        int i1;
        com.android.server.fingerprint.FingerprintService $r2, $r3;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: android.os.IBinder;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r2.<com.android.server.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.ENROLL_FINGERPRINT");

        $r3 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r3.<com.android.server.fingerprint.FingerprintService: void startEnroll(android.os.IBinder,long,int)>(r1, l0, i1);

        return;
    }

    public void enrollCancel(android.os.IBinder, int)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        android.os.IBinder r1;
        int i0;
        com.android.server.fingerprint.FingerprintService $r2, $r3;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r2.<com.android.server.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.ENROLL_FINGERPRINT");

        $r3 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r3.<com.android.server.fingerprint.FingerprintService: void startEnrollCancel(android.os.IBinder,int)>(r1, i0);

        return;
    }

    public void remove(android.os.IBinder, int, int)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        android.os.IBinder r1;
        int i0, i1;
        com.android.server.fingerprint.FingerprintService $r2, $r3;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r2.<com.android.server.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.ENROLL_FINGERPRINT");

        $r3 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r3.<com.android.server.fingerprint.FingerprintService: void startRemove(android.os.IBinder,int,int)>(r1, i0, i1);

        return;
    }

    public void startListening(android.os.IBinder, android.service.fingerprint.IFingerprintServiceReceiver, int)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        android.os.IBinder r1;
        android.service.fingerprint.IFingerprintServiceReceiver r2;
        int i0;
        com.android.server.fingerprint.FingerprintService $r3, $r4;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.service.fingerprint.IFingerprintServiceReceiver;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r3.<com.android.server.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.USE_FINGERPRINT");

        $r4 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r4.<com.android.server.fingerprint.FingerprintService: void addListener(android.os.IBinder,android.service.fingerprint.IFingerprintServiceReceiver,int)>(r1, r2, i0);

        return;
    }

    public void stopListening(android.os.IBinder, int)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        android.os.IBinder r1;
        int i0;
        com.android.server.fingerprint.FingerprintService $r2, $r3;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r2.<com.android.server.fingerprint.FingerprintService: void checkPermission(java.lang.String)>("android.permission.USE_FINGERPRINT");

        $r3 = r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: com.android.server.fingerprint.FingerprintService this$0>;

        virtualinvoke $r3.<com.android.server.fingerprint.FingerprintService: void removeListener(android.os.IBinder,int)>(r1, i0);

        return;
    }

    void <init>(com.android.server.fingerprint.FingerprintService, com.android.server.fingerprint.FingerprintService$1)
    {
        com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper r0;
        com.android.server.fingerprint.FingerprintService r1;
        com.android.server.fingerprint.FingerprintService$1 r2;

        r0 := @this: com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper;

        r1 := @parameter0: com.android.server.fingerprint.FingerprintService;

        r2 := @parameter1: com.android.server.fingerprint.FingerprintService$1;

        specialinvoke r0.<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper: void <init>(com.android.server.fingerprint.FingerprintService)>(r1);

        return;
    }
}
