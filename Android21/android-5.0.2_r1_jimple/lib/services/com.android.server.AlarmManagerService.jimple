class com.android.server.AlarmManagerService extends com.android.server.SystemService
{
    private static final long LATE_ALARM_THRESHOLD;
    private static final int RTC_WAKEUP_MASK;
    private static final int RTC_MASK;
    private static final int ELAPSED_REALTIME_WAKEUP_MASK;
    private static final int ELAPSED_REALTIME_MASK;
    static final int TIME_CHANGED_MASK;
    static final int IS_WAKEUP_MASK;
    static final int TYPE_NONWAKEUP_MASK;
    static final java.lang.String TAG;
    static final java.lang.String ClockReceiver_TAG;
    static final boolean localLOGV;
    static final boolean DEBUG_BATCH;
    static final boolean DEBUG_VALIDATE;
    static final boolean DEBUG_ALARM_CLOCK;
    static final int ALARM_EVENT;
    static final java.lang.String TIMEZONE_PROPERTY;
    static final android.content.Intent mBackgroundIntent;
    static final com.android.server.AlarmManagerService$IncreasingTimeOrder sIncreasingTimeOrder;
    static final boolean WAKEUP_STATS;
    private static final android.content.Intent NEXT_ALARM_CLOCK_CHANGED_INTENT;
    final com.android.internal.util.LocalLog mLog;
    final java.lang.Object mLock;
    long mNativeData;
    private long mNextWakeup;
    private long mNextNonWakeup;
    int mBroadcastRefCount;
    android.os.PowerManager$WakeLock mWakeLock;
    boolean mLastWakeLockUnimportantForLogging;
    java.util.ArrayList mPendingNonWakeupAlarms;
    java.util.ArrayList mInFlight;
    final com.android.server.AlarmManagerService$AlarmHandler mHandler;
    com.android.server.AlarmManagerService$ClockReceiver mClockReceiver;
    com.android.server.AlarmManagerService$InteractiveStateReceiver mInteractiveStateReceiver;
    private com.android.server.AlarmManagerService$UninstallReceiver mUninstallReceiver;
    final com.android.server.AlarmManagerService$ResultReceiver mResultReceiver;
    android.app.PendingIntent mTimeTickSender;
    android.app.PendingIntent mDateChangeSender;
    boolean mInteractive;
    long mNonInteractiveStartTime;
    long mNonInteractiveTime;
    long mLastAlarmDeliveryTime;
    long mStartCurrentDelayTime;
    long mNextNonWakeupDeliveryTime;
    int mNumTimeChanged;
    private final android.util.SparseArray mNextAlarmClockForUser;
    private final android.util.SparseArray mTmpSparseAlarmClockArray;
    private final android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser;
    private boolean mNextAlarmClockMayChange;
    private final android.util.SparseArray mHandlerSparseAlarmClockArray;
    static final int PRIO_TICK;
    static final int PRIO_WAKEUP;
    static final int PRIO_NORMAL;
    final java.util.HashMap mPriorities;
    int mCurrentSeq;
    final java.util.LinkedList mRecentWakeups;
    final long RECENT_WAKEUP_PERIOD;
    final java.util.Comparator mAlarmDispatchComparator;
    static final long MIN_FUZZABLE_INTERVAL;
    static final com.android.server.AlarmManagerService$BatchTimeOrder sBatchOrder;
    final java.util.ArrayList mAlarmBatches;
    final android.util.SparseArray mBroadcastStats;
    int mNumDelayedAlarms;
    long mTotalDelayTime;
    long mMaxDelayTime;
    private final android.os.IBinder mService;

    void calculateDeliveryPriorities(java.util.ArrayList)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1;
        int i0, i1, $i3, $i4, $i5, $i6;
        com.android.server.AlarmManagerService$Alarm r2;
        byte b2;
        com.android.server.AlarmManagerService$PriorityClass r3, $r9;
        java.lang.Object $r4, $r16;
        android.app.PendingIntent $r5, $r11, $r15;
        java.lang.String $r6, $r8, $r13, $r17;
        android.content.Intent $r7;
        boolean $z0, $z1;
        java.util.HashMap $r10, $r14;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.AlarmManagerService$Alarm) $r4;

        $r6 = "android.intent.action.TIME_TICK";

        $r5 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r7 = virtualinvoke $r5.<android.app.PendingIntent: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r7.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        b2 = 0;

        goto label4;

     label2:
        $z1 = r2.<com.android.server.AlarmManagerService$Alarm: boolean wakeup>;

        if $z1 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 2;

     label4:
        r3 = r2.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$PriorityClass priorityClass>;

        if r3 != null goto label5;

        $r14 = r0.<com.android.server.AlarmManagerService: java.util.HashMap mPriorities>;

        $r15 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r17 = virtualinvoke $r15.<android.app.PendingIntent: java.lang.String getCreatorPackage()>();

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17);

        r3 = (com.android.server.AlarmManagerService$PriorityClass) $r16;

     label5:
        if r3 != null goto label6;

        $r9 = new com.android.server.AlarmManagerService$PriorityClass;

        specialinvoke $r9.<com.android.server.AlarmManagerService$PriorityClass: void <init>(com.android.server.AlarmManagerService)>(r0);

        r2.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$PriorityClass priorityClass> = $r9;

        r3 = $r9;

        $r10 = r0.<com.android.server.AlarmManagerService: java.util.HashMap mPriorities>;

        $r11 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r13 = virtualinvoke $r11.<android.app.PendingIntent: java.lang.String getCreatorPackage()>();

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r3);

     label6:
        r2.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$PriorityClass priorityClass> = r3;

        $i5 = r3.<com.android.server.AlarmManagerService$PriorityClass: int seq>;

        $i3 = r0.<com.android.server.AlarmManagerService: int mCurrentSeq>;

        if $i5 == $i3 goto label7;

        r3.<com.android.server.AlarmManagerService$PriorityClass: int priority> = b2;

        $i6 = r0.<com.android.server.AlarmManagerService: int mCurrentSeq>;

        r3.<com.android.server.AlarmManagerService$PriorityClass: int seq> = $i6;

        goto label8;

     label7:
        $i4 = r3.<com.android.server.AlarmManagerService$PriorityClass: int priority>;

        if b2 >= $i4 goto label8;

        r3.<com.android.server.AlarmManagerService$PriorityClass: int priority> = b2;

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.AlarmManagerService r0;
        android.content.Context r1;
        com.android.internal.util.LocalLog $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4, $r5, $r15;
        com.android.server.AlarmManagerService$AlarmHandler $r6;
        com.android.server.AlarmManagerService$ResultReceiver $r7;
        android.util.SparseArray $r8, $r9, $r11, $r17;
        android.util.SparseBooleanArray $r10;
        java.util.HashMap $r12;
        java.util.LinkedList $r13;
        com.android.server.AlarmManagerService$1 $r14;
        com.android.server.AlarmManagerService$2 $r16;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.internal.util.LocalLog;

        specialinvoke $r2.<com.android.internal.util.LocalLog: void <init>(java.lang.String)>("AlarmManager");

        r0.<com.android.server.AlarmManagerService: com.android.internal.util.LocalLog mLog> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.lang.Object mLock> = $r3;

        r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount> = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight> = $r5;

        $r6 = new com.android.server.AlarmManagerService$AlarmHandler;

        specialinvoke $r6.<com.android.server.AlarmManagerService$AlarmHandler: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler> = $r6;

        $r7 = new com.android.server.AlarmManagerService$ResultReceiver;

        specialinvoke $r7.<com.android.server.AlarmManagerService$ResultReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ResultReceiver mResultReceiver> = $r7;

        r0.<com.android.server.AlarmManagerService: boolean mInteractive> = 1;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mTmpSparseAlarmClockArray> = $r9;

        $r10 = new android.util.SparseBooleanArray;

        specialinvoke $r10.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mHandlerSparseAlarmClockArray> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.HashMap mPriorities> = $r12;

        r0.<com.android.server.AlarmManagerService: int mCurrentSeq> = 0;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.LinkedList mRecentWakeups> = $r13;

        r0.<com.android.server.AlarmManagerService: long RECENT_WAKEUP_PERIOD> = 86400000L;

        $r14 = new com.android.server.AlarmManagerService$1;

        specialinvoke $r14.<com.android.server.AlarmManagerService$1: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: java.util.Comparator mAlarmDispatchComparator> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches> = $r15;

        $r17 = new android.util.SparseArray;

        specialinvoke $r17.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats> = $r17;

        r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms> = 0;

        r0.<com.android.server.AlarmManagerService: long mTotalDelayTime> = 0L;

        r0.<com.android.server.AlarmManagerService: long mMaxDelayTime> = 0L;

        $r16 = new com.android.server.AlarmManagerService$2;

        specialinvoke $r16.<com.android.server.AlarmManagerService$2: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: android.os.IBinder mService> = $r16;

        return;
    }

    static long convertToElapsed(long, int)
    {
        long l0, $l2, $l3, $l4;
        int i1;
        boolean z0, $z1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        if i1 == 1 goto label1;

        if i1 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = $l2 - $l3;

        l0 = l0 - $l4;

     label4:
        return l0;
    }

    static long maxTriggerTime(long, long, long)
    {
        long l0, l1, l2, l3, $l6, $l7, $l8;
        byte $b4, $b5;
        double $d0, $d1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b4 = l2 cmp 0L;

        if $b4 != 0 goto label1;

        $l8 = l1 - l0;

        goto label2;

     label1:
        $l8 = l2;

     label2:
        l3 = $l8;

        $b5 = l3 cmp 10000L;

        if $b5 >= 0 goto label3;

        l3 = 0L;

     label3:
        $d0 = (double) l3;

        $d1 = 0.75 * $d0;

        $l6 = (long) $d1;

        $l7 = l1 + $l6;

        return $l7;
    }

    static boolean addBatchLocked(java.util.ArrayList, com.android.server.AlarmManagerService$Batch)
    {
        java.util.ArrayList r0;
        com.android.server.AlarmManagerService$Batch r1;
        int i0, $i1;
        com.android.server.AlarmManagerService$BatchTimeOrder $r2;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.server.AlarmManagerService$Batch;

        $r2 = <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BatchTimeOrder sBatchOrder>;

        i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r0, r1, $r2);

        if i0 >= 0 goto label1;

        $i1 = 0 - i0;

        i0 = $i1 - 1;

     label1:
        virtualinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

        if i0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    int attemptCoalesceLocked(long, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l1;
        int i2, i3;
        com.android.server.AlarmManagerService$Batch r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (com.android.server.AlarmManagerService$Batch) $r4;

        $z0 = r1.<com.android.server.AlarmManagerService$Batch: boolean standalone>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean canHold(long,long)>(l0, l1);

        if $z1 == 0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    void rebatchAllAlarms()
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.AlarmManagerService;

        $r3 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void rebatchAllAlarmsLocked(boolean)
    {
        com.android.server.AlarmManagerService r0;
        boolean z0, $z1;
        java.util.ArrayList r1, $r4, $r5;
        long l0, l5, l6, $l8, $l9, $l10, $l11, $l13, $l15, $l17, $l18, $l19, $l20;
        int i1, i2, i3, i4, $i7, $i16, $i21;
        com.android.server.AlarmManagerService$Batch r2;
        com.android.server.AlarmManagerService$Alarm r3;
        java.lang.Object $r6, $r7;
        byte $b12, $b14;
        android.app.AlarmManager$AlarmClockInfo $r8;
        android.os.WorkSource $r9;
        android.app.PendingIntent $r10;

        r0 := @this: com.android.server.AlarmManagerService;

        z0 := @parameter0: boolean;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r1 = (java.util.ArrayList) $r6;

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label8;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.AlarmManagerService$Batch) $r7;

        i3 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: int size()>();

        i4 = 0;

     label2:
        if i4 >= i3 goto label7;

        r3 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>(i4);

        $l8 = r3.<com.android.server.AlarmManagerService$Alarm: long when>;

        $i7 = r3.<com.android.server.AlarmManagerService$Alarm: int type>;

        l5 = staticinvoke <com.android.server.AlarmManagerService: long convertToElapsed(long,int)>($l8, $i7);

        $l9 = r3.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l10 = r3.<com.android.server.AlarmManagerService$Alarm: long maxWhen>;

        $b12 = $l9 cmp $l10;

        if $b12 != 0 goto label3;

        l6 = l5;

        goto label6;

     label3:
        $l11 = r3.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $b14 = $l11 cmp 0L;

        if $b14 <= 0 goto label4;

        $l19 = r3.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $l15 = l5 + $l19;

        goto label5;

     label4:
        $l13 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $l15 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l0, l5, $l13);

     label5:
        l6 = $l15;

     label6:
        $i21 = r3.<com.android.server.AlarmManagerService$Alarm: int type>;

        $l20 = r3.<com.android.server.AlarmManagerService$Alarm: long when>;

        $l18 = r3.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $l17 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $r10 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $z1 = r2.<com.android.server.AlarmManagerService$Batch: boolean standalone>;

        $r9 = r3.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $r8 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        $i16 = r3.<com.android.server.AlarmManagerService$Alarm: int userId>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(int,long,long,long,long,long,android.app.PendingIntent,boolean,boolean,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int)>($i21, $l20, l5, $l18, l6, $l17, $r10, $z1, z0, $r9, $r8, $i16);

        i4 = i4 + 1;

        goto label2;

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return;
    }

    public void onStart()
    {
        com.android.server.AlarmManagerService r0;
        android.os.PowerManager r1;
        android.content.Intent r2, $r9, $r10, $r14;
        com.android.server.AlarmManagerService$AlarmThread r3, $r24;
        long $l0, $l3;
        java.lang.String $r4;
        android.content.Context $r5, $r8, $r16;
        java.lang.Object $r6;
        android.os.PowerManager$WakeLock $r7;
        android.os.UserHandle $r11, $r15;
        android.app.PendingIntent $r12, $r18;
        com.android.server.AlarmManagerService$ClockReceiver $r17, $r19, $r20;
        com.android.server.AlarmManagerService$UninstallReceiver $r21;
        com.android.server.AlarmManagerService$InteractiveStateReceiver $r22;
        byte $b2;
        android.os.IBinder $r23;

        r0 := @this: com.android.server.AlarmManagerService;

        $l0 = specialinvoke r0.<com.android.server.AlarmManagerService: long init()>();

        r0.<com.android.server.AlarmManagerService: long mNativeData> = $l0;

        r0.<com.android.server.AlarmManagerService: long mNextNonWakeup> = 0L;

        r0.<com.android.server.AlarmManagerService: long mNextWakeup> = 0L;

        $r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        virtualinvoke r0.<com.android.server.AlarmManagerService: void setTimeZoneImpl(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r1 = (android.os.PowerManager) $r6;

        $r7 = virtualinvoke r1.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "*alarm*");

        r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock> = $r7;

        $r8 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TIME_TICK");

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r12 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>($r8, 0, $r10, 0, $r11);

        r0.<com.android.server.AlarmManagerService: android.app.PendingIntent mTimeTickSender> = $r12;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DATE_CHANGED");

        r2 = $r14;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r16 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r15 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r18 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>($r16, 0, r2, 67108864, $r15);

        r0.<com.android.server.AlarmManagerService: android.app.PendingIntent mDateChangeSender> = $r18;

        $r17 = new com.android.server.AlarmManagerService$ClockReceiver;

        specialinvoke $r17.<com.android.server.AlarmManagerService$ClockReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver> = $r17;

        $r20 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver>;

        virtualinvoke $r20.<com.android.server.AlarmManagerService$ClockReceiver: void scheduleTimeTickEvent()>();

        $r19 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver>;

        virtualinvoke $r19.<com.android.server.AlarmManagerService$ClockReceiver: void scheduleDateChangedEvent()>();

        $r22 = new com.android.server.AlarmManagerService$InteractiveStateReceiver;

        specialinvoke $r22.<com.android.server.AlarmManagerService$InteractiveStateReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$InteractiveStateReceiver mInteractiveStateReceiver> = $r22;

        $r21 = new com.android.server.AlarmManagerService$UninstallReceiver;

        specialinvoke $r21.<com.android.server.AlarmManagerService$UninstallReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$UninstallReceiver mUninstallReceiver> = $r21;

        $l3 = r0.<com.android.server.AlarmManagerService: long mNativeData>;

        $b2 = $l3 cmp 0L;

        if $b2 == 0 goto label1;

        $r24 = new com.android.server.AlarmManagerService$AlarmThread;

        specialinvoke $r24.<com.android.server.AlarmManagerService$AlarmThread: void <init>(com.android.server.AlarmManagerService)>(r0);

        r3 = $r24;

        virtualinvoke r3.<com.android.server.AlarmManagerService$AlarmThread: void start()>();

        goto label2;

     label1:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", "Failed to open alarm driver. Falling back to a handler.");

     label2:
        $r23 = r0.<com.android.server.AlarmManagerService: android.os.IBinder mService>;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("alarm", $r23);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: com.android.server.AlarmManagerService;

     label1:
        $l0 = r0.<com.android.server.AlarmManagerService: long mNativeData>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void close(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void setTimeZoneImpl(java.lang.String)
    {
        com.android.server.AlarmManagerService r0, r3;
        java.lang.String r1, r4, $r7, $r11, $r14;
        java.util.TimeZone r2;
        boolean z0, $z1, $z2;
        int i0, $i2, $i3;
        java.lang.Throwable r5, $r15;
        long $l1, $l5;
        android.content.Intent $r8, r16;
        android.os.UserHandle $r12;
        android.content.Context $r13;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.lang.String;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r1);

        z0 = 0;

        r3 = r0;

        entermonitor r0;

     label2:
        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        if r4 == null goto label3;

        $r14 = virtualinvoke r2.<java.util.TimeZone: java.lang.String getID()>();

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label4;

     label3:
        z0 = 1;

        $r7 = virtualinvoke r2.<java.util.TimeZone: java.lang.String getID()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.timezone", $r7);

     label4:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i0 = virtualinvoke r2.<java.util.TimeZone: int getOffset(long)>($l1);

        $l5 = r0.<com.android.server.AlarmManagerService: long mNativeData>;

        $i3 = i0 / 60000;

        $i2 = neg $i3;

        specialinvoke r0.<com.android.server.AlarmManagerService: int setKernelTimezone(long,int)>($l5, $i2);

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        if z0 == 0 goto label9;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        r16 = $r8;

        virtualinvoke r16.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r11 = virtualinvoke r2.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("time-zone", $r11);

        $r13 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r13.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r16, $r12);

     label9:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void removeImpl(android.app.PendingIntent)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        specialinvoke r0.<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void setImpl(int, long, long, long, android.app.PendingIntent, boolean, android.os.WorkSource, android.app.AlarmManager$AlarmClockInfo)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i7, $i12, $i13;
        long l1, l2, l3, l4, l5, l6, l17, l18;
        android.app.PendingIntent r1;
        boolean z0;
        android.os.WorkSource r2;
        android.app.AlarmManager$AlarmClockInfo r3;
        java.lang.Object r4, $r11;
        byte $b8, $b9, $b10, $b11;
        java.lang.Throwable r5, $r25;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r24;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r10, $r17, $r23;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        r1 := @parameter4: android.app.PendingIntent;

        z0 := @parameter5: boolean;

        r2 := @parameter6: android.os.WorkSource;

        r3 := @parameter7: android.app.AlarmManager$AlarmClockInfo;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", "set/setRepeating ignored because there is no intent");

        return;

     label01:
        $b8 = l2 cmp 43200000L;

        if $b8 <= 0 goto label02;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window length ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms suspiciously long; limiting to 1 hour");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r23);

        l2 = 3600000L;

     label02:
        if i0 < 0 goto label03;

        if i0 <= 3 goto label04;

     label03:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid alarm type ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label04:
        $b9 = l1 cmp 0L;

        if $b9 >= 0 goto label05;

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l4 = (long) $i12;

        $i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l5 = (long) $i13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid alarm trigger time! ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from uid=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r17);

        l1 = 0L;

     label05:
        l17 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l18 = staticinvoke <com.android.server.AlarmManagerService: long convertToElapsed(long,int)>(l1, i0);

        $b11 = l2 cmp 0L;

        if $b11 != 0 goto label06;

        l6 = l18;

        goto label08;

     label06:
        $b10 = l2 cmp 0L;

        if $b10 >= 0 goto label07;

        l6 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l17, l18, l3);

        goto label08;

     label07:
        l6 = l18 + l2;

     label08:
        i7 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r11 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        r4 = $r11;

        entermonitor $r11;

     label09:
        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(int,long,long,long,long,long,android.app.PendingIntent,boolean,boolean,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int)>(i0, l1, l18, l2, l6, l3, r1, z0, 1, r2, r3, i7);

        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r25 := @caughtexception;

        r5 = $r25;

        exitmonitor r4;

     label12:
        throw r5;

     label13:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void setImplLocked(int, long, long, long, long, long, android.app.PendingIntent, boolean, boolean, android.os.WorkSource, android.app.AlarmManager$AlarmClockInfo, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i6, i7, $i8;
        long l1, l2, l3, l4, l5;
        android.app.PendingIntent r1;
        boolean z0, z1, $z2;
        android.os.WorkSource r2;
        android.app.AlarmManager$AlarmClockInfo r3;
        com.android.server.AlarmManagerService$Alarm r4, $r5;
        com.android.server.AlarmManagerService$Batch r6, $r13, r14;
        java.util.ArrayList $r7, $r10, $r11, $r12;
        java.lang.Object $r8;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        r1 := @parameter6: android.app.PendingIntent;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        r2 := @parameter9: android.os.WorkSource;

        r3 := @parameter10: android.app.AlarmManager$AlarmClockInfo;

        i6 := @parameter11: int;

        $r5 = new com.android.server.AlarmManagerService$Alarm;

        specialinvoke $r5.<com.android.server.AlarmManagerService$Alarm: void <init>(int,long,long,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int)>(i0, l1, l2, l3, l4, l5, r1, r2, r3, i6);

        r4 = $r5;

        specialinvoke r0.<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent)>(r1);

        if z0 == 0 goto label1;

        $i8 = -1;

        goto label2;

     label1:
        $i8 = virtualinvoke r0.<com.android.server.AlarmManagerService: int attemptCoalesceLocked(long,long)>(l2, l4);

     label2:
        i7 = $i8;

        if i7 >= 0 goto label3;

        $r13 = new com.android.server.AlarmManagerService$Batch;

        specialinvoke $r13.<com.android.server.AlarmManagerService$Batch: void <init>(com.android.server.AlarmManagerService,com.android.server.AlarmManagerService$Alarm)>(r0, r4);

        r6 = $r13;

        r6.<com.android.server.AlarmManagerService$Batch: boolean standalone> = z0;

        $r12 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        staticinvoke <com.android.server.AlarmManagerService: boolean addBatchLocked(java.util.ArrayList,com.android.server.AlarmManagerService$Batch)>($r12, r6);

        goto label4;

     label3:
        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r14 = (com.android.server.AlarmManagerService$Batch) $r8;

        $z2 = virtualinvoke r14.<com.android.server.AlarmManagerService$Batch: boolean add(com.android.server.AlarmManagerService$Alarm)>(r4);

        if $z2 == 0 goto label4;

        $r10 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>(i7);

        $r11 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        staticinvoke <com.android.server.AlarmManagerService: boolean addBatchLocked(java.util.ArrayList,com.android.server.AlarmManagerService$Batch)>($r11, r14);

     label4:
        if r3 == null goto label5;

        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = 1;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label5:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        return;
    }

    void dumpImpl(java.io.PrintWriter)
    {
        com.android.server.AlarmManagerService r0;
        java.io.PrintWriter r1;
        java.lang.Object r2, $r10, $r25, $r26, $r32, $r33, $r36, $r40, $r43, $r49;
        long l0, l1, l2, l3, $l10, $l11, $l12, $l13, $l14, $l15, $l19, $l22, $l23, $l32, $l35, $l41, $l53, $l54, $l55, $l56, $l57, $l58, $l59;
        java.text.SimpleDateFormat r3, $r11;
        java.util.Iterator r4;
        com.android.server.AlarmManagerService$Batch r5;
        int i4, i5, i6, i7, i8, i9, $i16, $i17, $i18, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i60, i61, i62, i63, i64;
        android.util.ArrayMap r6, $r28, $r31, $r37, $r42, r55;
        com.android.server.AlarmManagerService$BroadcastStats r7, $r34, $r35, r56;
        com.android.server.AlarmManagerService$FilterStats r8, r53, r57;
        java.lang.Throwable r9, $r50;
        java.lang.String $r12, $r16, $r18, $r29, $r30, $r38, $r39;
        java.util.Date $r13, $r14, $r15;
        boolean $z0, $z1, $z3;
        java.util.ArrayList $r17, $r19, $r24, $r44, $r45, $r46, $r47, $r48, r54;
        com.android.internal.util.LocalLog $r20;
        android.util.SparseArray $r21, $r23, $r27, $r41;
        com.android.server.AlarmManagerService$3 $r22, r52;
        com.android.server.AlarmManagerService$FilterStats[] r51;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        $r10 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        r2 = $r10;

        entermonitor $r10;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Current Alarm Manager state:");

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r11 = new java.text.SimpleDateFormat;

        specialinvoke $r11.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        r3 = $r11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("nowRTC=");

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $r13 = new java.util.Date;

        specialinvoke $r13.<java.util.Date: void <init>(long)>(l0);

        $r12 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" nowELAPSED=");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l1, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $z0 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        if $z0 != 0 goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Time since non-interactive: ");

        $l57 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        $l56 = l1 - $l57;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l56, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Max wakeup delay: ");

        $l55 = virtualinvoke r0.<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>(l1);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l55, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Time since last dispatch: ");

        $l54 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        $l53 = l1 - $l54;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l53, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Next non-wakeup delivery time: ");

        $l59 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        $l58 = l1 - $l59;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l58, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label02:
        $l13 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        $l10 = l0 - l1;

        l2 = $l13 + $l10;

        $l11 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        $l14 = l0 - l1;

        l3 = $l11 + $l14;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Next non-wakeup alarm: ");

        $l12 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l12, l1, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $r15 = new java.util.Date;

        specialinvoke $r15.<java.util.Date: void <init>(long)>(l3);

        $r16 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Next wakeup: ");

        $l15 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l15, l1, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $r14 = new java.util.Date;

        specialinvoke $r14.<java.util.Date: void <init>(long)>(l2);

        $r18 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Num time change events: ");

        $i17 = r0.<com.android.server.AlarmManagerService: int mNumTimeChanged>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i17);

        $r17 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i16 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i16 <= 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Pending alarm batches: ");

        $r45 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i50 = virtualinvoke $r45.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i50);

        $r44 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        r4 = virtualinvoke $r44.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r49 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.AlarmManagerService$Batch) $r49;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void println(char)>(58);

        $r48 = r5.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r1, $r48, "  ", l1, l0, r3);

        goto label03;

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Past-due non-wakeup alarms: ");

        $r19 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i20 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if $i20 <= 0 goto label05;

        $r47 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i51 = virtualinvoke $r47.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i51);

        $r46 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r1, $r46, "  ", l1, l0, r3);

        goto label06;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("(none)");

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Number of delayed alarms: ");

        $i18 = r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", total delay time: ");

        $l19 = r0.<com.android.server.AlarmManagerService: long mTotalDelayTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l19, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Max delay time: ");

        $l23 = r0.<com.android.server.AlarmManagerService: long mMaxDelayTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l23, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", max non-interactive time: ");

        $l22 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l22, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Broadcast ref count: ");

        $i21 = r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i21);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r20 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.LocalLog mLog>;

        $z1 = virtualinvoke $r20.<com.android.internal.util.LocalLog: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String)>(r1, "  Recent problems", "    ");

        if $z1 == 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label07:
        r51 = newarray (com.android.server.AlarmManagerService$FilterStats)[10];

        $r22 = new com.android.server.AlarmManagerService$3;

        specialinvoke $r22.<com.android.server.AlarmManagerService$3: void <init>(com.android.server.AlarmManagerService)>(r0);

        r52 = $r22;

        i4 = 0;

        i5 = 0;

     label08:
        $r21 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $i24 = virtualinvoke $r21.<android.util.SparseArray: int size()>();

        if i5 >= $i24 goto label18;

        $r41 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r40 = virtualinvoke $r41.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r6 = (android.util.ArrayMap) $r40;

        i6 = 0;

     label09:
        $i42 = virtualinvoke r6.<android.util.ArrayMap: int size()>();

        if i6 >= $i42 goto label17;

        $r36 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r7 = (com.android.server.AlarmManagerService$BroadcastStats) $r36;

        i7 = 0;

     label10:
        $r37 = r7.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $i43 = virtualinvoke $r37.<android.util.ArrayMap: int size()>();

        if i7 >= $i43 goto label16;

        $r42 = r7.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $r43 = virtualinvoke $r42.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r8 = (com.android.server.AlarmManagerService$FilterStats) $r43;

        if i4 <= 0 goto label11;

        $i52 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator)>(r51, 0, i4, r8, r52);

        goto label12;

     label11:
        $i52 = 0;

     label12:
        i8 = $i52;

        if i8 >= 0 goto label13;

        $i45 = neg i8;

        i8 = $i45 - 1;

     label13:
        $i48 = lengthof r51;

        if i8 >= $i48 goto label15;

        $i49 = lengthof r51;

        $i46 = $i49 - i8;

        i9 = $i46 - 1;

        if i9 <= 0 goto label14;

        $i44 = i8 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r51, i8, r51, $i44, i9);

     label14:
        r51[i8] = r8;

        $i47 = lengthof r51;

        if i4 >= $i47 goto label15;

        i4 = i4 + 1;

     label15:
        i7 = i7 + 1;

        goto label10;

     label16:
        i6 = i6 + 1;

        goto label09;

     label17:
        i5 = i5 + 1;

        goto label08;

     label18:
        if i4 <= 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Top Alarms:");

        i60 = 0;

     label19:
        if i60 >= i4 goto label21;

        r53 = r51[i60];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i39 = r53.<com.android.server.AlarmManagerService$FilterStats: int nesting>;

        if $i39 <= 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("*ACTIVE* ");

     label20:
        $l41 = r53.<com.android.server.AlarmManagerService$FilterStats: long aggregateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l41, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" running, ");

        $i40 = r53.<com.android.server.AlarmManagerService$FilterStats: int numWakeup>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" wakeups, ");

        $i37 = r53.<com.android.server.AlarmManagerService$FilterStats: int count>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i37);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" alarms: ");

        $r34 = r53.<com.android.server.AlarmManagerService$FilterStats: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $i38 = $r34.<com.android.server.AlarmManagerService$BroadcastStats: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i38);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r35 = r53.<com.android.server.AlarmManagerService$FilterStats: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $r39 = $r35.<com.android.server.AlarmManagerService$BroadcastStats: java.lang.String mPackageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r39);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r38 = r53.<com.android.server.AlarmManagerService$FilterStats: java.lang.String mTag>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r38);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        i60 = i60 + 1;

        goto label19;

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Alarm Stats:");

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r54 = $r24;

        i61 = 0;

     label22:
        $r23 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $i25 = virtualinvoke $r23.<android.util.SparseArray: int size()>();

        if i61 >= $i25 goto label31;

        $r27 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r26 = virtualinvoke $r27.<android.util.SparseArray: java.lang.Object valueAt(int)>(i61);

        r55 = (android.util.ArrayMap) $r26;

        i62 = 0;

     label23:
        $i26 = virtualinvoke r55.<android.util.ArrayMap: int size()>();

        if i62 >= $i26 goto label30;

        $r25 = virtualinvoke r55.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i62);

        r56 = (com.android.server.AlarmManagerService$BroadcastStats) $r25;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $i30 = r56.<com.android.server.AlarmManagerService$BroadcastStats: int nesting>;

        if $i30 <= 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("*ACTIVE* ");

     label24:
        $i31 = r56.<com.android.server.AlarmManagerService$BroadcastStats: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r29 = r56.<com.android.server.AlarmManagerService$BroadcastStats: java.lang.String mPackageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l32 = r56.<com.android.server.AlarmManagerService$BroadcastStats: long aggregateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l32, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" running, ");

        $i27 = r56.<com.android.server.AlarmManagerService$BroadcastStats: int numWakeup>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i27);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" wakeups:");

        virtualinvoke r54.<java.util.ArrayList: void clear()>();

        i63 = 0;

     label25:
        $r28 = r56.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $i28 = virtualinvoke $r28.<android.util.ArrayMap: int size()>();

        if i63 >= $i28 goto label26;

        $r31 = r56.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $r32 = virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i63);

        virtualinvoke r54.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        i63 = i63 + 1;

        goto label25;

     label26:
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r54, r52);

        i64 = 0;

     label27:
        $i29 = virtualinvoke r54.<java.util.ArrayList: int size()>();

        if i64 >= $i29 goto label29;

        $r33 = virtualinvoke r54.<java.util.ArrayList: java.lang.Object get(int)>(i64);

        r57 = (com.android.server.AlarmManagerService$FilterStats) $r33;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i34 = r57.<com.android.server.AlarmManagerService$FilterStats: int nesting>;

        if $i34 <= 0 goto label28;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("*ACTIVE* ");

     label28:
        $l35 = r57.<com.android.server.AlarmManagerService$FilterStats: long aggregateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l35, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i36 = r57.<com.android.server.AlarmManagerService$FilterStats: int numWakeup>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" wakes ");

        $i33 = r57.<com.android.server.AlarmManagerService$FilterStats: int count>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" alarms: ");

        $r30 = r57.<com.android.server.AlarmManagerService$FilterStats: java.lang.String mTag>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r30);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        i64 = i64 + 1;

        goto label27;

     label29:
        i62 = i62 + 1;

        goto label23;

     label30:
        i61 = i61 + 1;

        goto label22;

     label31:
        exitmonitor r2;

     label32:
        goto label35;

     label33:
        $r50 := @caughtexception;

        r9 = $r50;

        exitmonitor r2;

     label34:
        throw r9;

     label35:
        return;

        catch java.lang.Throwable from label01 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    private void logBatchesLocked(java.text.SimpleDateFormat)
    {
        com.android.server.AlarmManagerService r0;
        java.text.SimpleDateFormat r1;
        java.io.ByteArrayOutputStream r2, $r5;
        java.io.PrintWriter r3, $r6;
        long l0, l1;
        int i2, i3;
        com.android.server.AlarmManagerService$Batch r4;
        java.util.ArrayList $r7, $r8, $r11;
        java.lang.Object $r10;
        java.lang.String $r13;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.text.SimpleDateFormat;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>(int)>(2048);

        r2 = $r5;

        $r6 = new java.io.PrintWriter;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r2);

        r3 = $r6;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r8 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.AlarmManagerService$Batch) $r10;

        virtualinvoke r3.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Batch ");

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r3.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(": ");

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

        $r11 = r4.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r3, $r11, "  ", l1, l0, r1);

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

        $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("AlarmManager", $r13);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void reset()>();

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean validateConsistencyLocked()
    {
        com.android.server.AlarmManagerService r0;

        r0 := @this: com.android.server.AlarmManagerService;

        return 1;
    }

    private com.android.server.AlarmManagerService$Batch findFirstWakeupBatchLocked()
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1;
        com.android.server.AlarmManagerService$Batch r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.AlarmManagerService;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.AlarmManagerService$Batch) $r4;

        $z0 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean hasWakeups()>();

        if $z0 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private android.app.AlarmManager$AlarmClockInfo getNextAlarmClockImpl(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r7;
        android.util.SparseArray $r4;
        android.app.AlarmManager$AlarmClockInfo $r6;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (android.app.AlarmManager$AlarmClockInfo) $r5;

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void updateNextAlarmClockLocked()
    {
        com.android.server.AlarmManagerService r0;
        android.util.SparseArray r1, $r5, $r6, $r10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
        java.util.ArrayList r2, $r4, $r11;
        com.android.server.AlarmManagerService$Alarm r3;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r9, $r13, $r14, $r15;
        com.android.server.AlarmManagerService$Batch $r12;
        android.app.AlarmManager$AlarmClockInfo $r16, $r17, r18, r19;

        r0 := @this: com.android.server.AlarmManagerService;

        $z0 = r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange>;

        if $z0 != 0 goto label01;

        return;

     label01:
        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = 0;

        r1 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mTmpSparseAlarmClockArray>;

        virtualinvoke r1.<android.util.SparseArray: void clear()>();

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label06;

        $r11 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r12 = (com.android.server.AlarmManagerService$Batch) $r13;

        r2 = $r12.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label03:
        if i3 >= i2 goto label05;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.AlarmManagerService$Alarm) $r14;

        $r16 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r16 == null goto label04;

        i4 = r3.<com.android.server.AlarmManagerService$Alarm: int userId>;

        $r15 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        if $r15 != null goto label04;

        $r17 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, $r17);

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        i5 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        i6 = 0;

     label07:
        if i6 >= i5 goto label09;

        $r8 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r18 = (android.app.AlarmManager$AlarmClockInfo) $r8;

        i7 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i6);

        $r10 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r9 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r19 = (android.app.AlarmManager$AlarmClockInfo) $r9;

        $z1 = virtualinvoke r18.<java.lang.Object: boolean equals(java.lang.Object)>(r19);

        if $z1 != 0 goto label08;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmInfoForUserLocked(int,android.app.AlarmManager$AlarmClockInfo)>(i7, r18);

     label08:
        i6 = i6 + 1;

        goto label07;

     label09:
        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        i8 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i9 = i8 - 1;

     label10:
        if i9 < 0 goto label12;

        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        i10 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i9);

        $r7 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i10);

        if $r7 != null goto label11;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmInfoForUserLocked(int,android.app.AlarmManager$AlarmClockInfo)>(i10, null);

     label11:
        i9 = i9 + -1;

        goto label10;

     label12:
        return;
    }

    private void updateNextAlarmInfoForUserLocked(int, android.app.AlarmManager$AlarmClockInfo)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        android.app.AlarmManager$AlarmClockInfo r1;
        android.util.SparseArray $r2, $r6;
        android.util.SparseBooleanArray $r3;
        com.android.server.AlarmManagerService$AlarmHandler $r4, $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.AlarmManager$AlarmClockInfo;

        if r1 == null goto label1;

        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        goto label2;

     label1:
        $r2 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        $r3 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r4.<com.android.server.AlarmManagerService$AlarmHandler: void removeMessages(int)>(4);

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r5.<com.android.server.AlarmManagerService$AlarmHandler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    private void sendNextAlarmClockChanged()
    {
        com.android.server.AlarmManagerService r0;
        android.util.SparseArray r1, $r17;
        java.lang.Object r2, $r4, $r7, $r16;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Throwable r3, $r18;
        android.util.SparseBooleanArray $r5, $r6, $r15;
        android.content.Context $r8, $r11, $r12;
        android.content.ContentResolver $r9;
        java.lang.String $r10;
        android.content.Intent $r13;
        android.os.UserHandle $r14;
        android.app.AlarmManager$AlarmClockInfo r19;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mHandlerSparseAlarmClockArray>;

        virtualinvoke r1.<android.util.SparseArray: void clear()>();

        $r4 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        i0 = virtualinvoke $r5.<android.util.SparseBooleanArray: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r15 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        i2 = virtualinvoke $r15.<android.util.SparseBooleanArray: int keyAt(int)>(i1);

        $r17 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r16 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>(i2, $r16);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        virtualinvoke $r6.<android.util.SparseBooleanArray: void clear()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        r3 = $r18;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        i3 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        i4 = 0;

     label8:
        if i4 >= i3 goto label9;

        i5 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i4);

        $r7 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r19 = (android.app.AlarmManager$AlarmClockInfo) $r7;

        $r8 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r10 = staticinvoke <com.android.server.AlarmManagerService: java.lang.String formatNextAlarm(android.content.Context,android.app.AlarmManager$AlarmClockInfo)>($r11, r19);

        staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r9, "next_alarm_formatted", $r10, i5);

        $r12 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r13 = <com.android.server.AlarmManagerService: android.content.Intent NEXT_ALARM_CLOCK_CHANGED_INTENT>;

        $r14 = new android.os.UserHandle;

        specialinvoke $r14.<android.os.UserHandle: void <init>(int)>(i5);

        virtualinvoke $r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r13, $r14);

        i4 = i4 + 1;

        goto label8;

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static java.lang.String formatNextAlarm(android.content.Context, android.app.AlarmManager$AlarmClockInfo)
    {
        android.content.Context r0;
        android.app.AlarmManager$AlarmClockInfo r1;
        java.lang.String r2, r3, $r6, $r7;
        boolean $z0;
        java.util.Locale $r4;
        long $l0;
        java.lang.CharSequence $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.AlarmManager$AlarmClockInfo;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r0);

        if $z0 == 0 goto label1;

        $r7 = "EHm";

        goto label2;

     label1:
        $r7 = "Ehma";

     label2:
        r2 = $r7;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r4, r2);

        if r1 != null goto label3;

        $r6 = "";

        goto label4;

     label3:
        $l0 = virtualinvoke r1.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>(r3, $l0);

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

     label4:
        return $r6;
    }

    void rescheduleKernelAlarmsLocked()
    {
        com.android.server.AlarmManagerService r0;
        long l0, $l4, $l7, $l9, $l10, $l11, $l13;
        com.android.server.AlarmManagerService$Batch r1, r2;
        java.util.ArrayList $r3, $r4, $r6;
        int $i1, $i2;
        byte $b3, $b5, $b6, $b8, $b12;
        java.lang.Object $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 = 0L;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label2;

        r1 = specialinvoke r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Batch findFirstWakeupBatchLocked()>();

        $r6 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r5 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (com.android.server.AlarmManagerService$Batch) $r5;

        if r1 == null goto label1;

        $l9 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        $l10 = r1.<com.android.server.AlarmManagerService$Batch: long start>;

        $b12 = $l9 cmp $l10;

        if $b12 == 0 goto label1;

        $l11 = r1.<com.android.server.AlarmManagerService$Batch: long start>;

        r0.<com.android.server.AlarmManagerService: long mNextWakeup> = $l11;

        $l13 = r1.<com.android.server.AlarmManagerService$Batch: long start>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setLocked(int,long)>(2, $l13);

     label1:
        if r2 == r1 goto label2;

        l0 = r2.<com.android.server.AlarmManagerService$Batch: long start>;

     label2:
        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label4;

        $b6 = l0 cmp 0L;

        if $b6 == 0 goto label3;

        $l7 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        $b8 = $l7 cmp l0;

        if $b8 >= 0 goto label4;

     label3:
        l0 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

     label4:
        $b3 = l0 cmp 0L;

        if $b3 == 0 goto label5;

        $l4 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        $b5 = $l4 cmp l0;

        if $b5 == 0 goto label5;

        r0.<com.android.server.AlarmManagerService: long mNextNonWakeup> = l0;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setLocked(int,long)>(3, l0);

     label5:
        return;
    }

    private void removeLocked(android.app.PendingIntent)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        boolean z0, $z1;
        int i0, $i1, $i2;
        com.android.server.AlarmManagerService$Batch r2;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        z0 = 0;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.AlarmManagerService$Batch) $r5;

        $z1 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: boolean remove(android.app.PendingIntent)>(r1);

        z0 = z0 | $z1;

        $i2 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i2 != 0 goto label2;

        $r6 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label4:
        return;
    }

    void removeLocked(java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.String r1;
        boolean z0, $z1;
        int i0, $i1, $i2;
        com.android.server.AlarmManagerService$Batch r2;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.AlarmManagerService$Batch) $r5;

        $z1 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: boolean remove(java.lang.String)>(r1);

        z0 = z0 | $z1;

        $i2 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i2 != 0 goto label2;

        $r6 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label4:
        return;
    }

    void removeUserLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1, $i2, $i3;
        boolean z0, $z1;
        com.android.server.AlarmManagerService$Batch r1;
        java.util.ArrayList $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        z0 = 0;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.AlarmManagerService$Batch) $r4;

        $z1 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean remove(int)>(i0);

        z0 = z0 | $z1;

        $i3 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i3 != 0 goto label2;

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label4:
        return;
    }

    void interactiveStateChangedLocked(boolean)
    {
        com.android.server.AlarmManagerService r0;
        boolean z0, $z1;
        long l0, l1, $l3, $l5, $l6, $l8, $l9, $l10, $l12, l13;
        java.util.ArrayList $r1, $r2, $r3;
        int $i2;
        byte $b4, $b7, $b11;

        r0 := @this: com.android.server.AlarmManagerService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        if $z1 == z0 goto label5;

        r0.<com.android.server.AlarmManagerService: boolean mInteractive> = z0;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if z0 == 0 goto label4;

        $r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label2;

        $l8 = r0.<com.android.server.AlarmManagerService: long mStartCurrentDelayTime>;

        l1 = l0 - $l8;

        $l10 = r0.<com.android.server.AlarmManagerService: long mTotalDelayTime>;

        $l9 = $l10 + l1;

        r0.<com.android.server.AlarmManagerService: long mTotalDelayTime> = $l9;

        $l12 = r0.<com.android.server.AlarmManagerService: long mMaxDelayTime>;

        $b11 = $l12 cmp l1;

        if $b11 >= 0 goto label1;

        r0.<com.android.server.AlarmManagerService: long mMaxDelayTime> = l1;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void deliverAlarmsLocked(java.util.ArrayList,long)>($r3, l0);

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label2:
        $l3 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label5;

        $l5 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        l13 = l0 - $l5;

        $l6 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime>;

        $b7 = l13 cmp $l6;

        if $b7 <= 0 goto label3;

        r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime> = l13;

     label3:
        goto label5;

     label4:
        r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime> = l0;

     label5:
        return;
    }

    boolean lookForPackageLocked(java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        com.android.server.AlarmManagerService$Batch r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.AlarmManagerService$Batch) $r5;

        $z0 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: boolean hasPackage(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void setLocked(int, long)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        long l1, l2, l3, $l4, $l7, $l8, $l9;
        byte $b5, $b6;
        com.android.server.AlarmManagerService$AlarmHandler $r1, $r2;
        android.os.Message r3;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $l4 = r0.<com.android.server.AlarmManagerService: long mNativeData>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label3;

        $b6 = l1 cmp 0L;

        if $b6 >= 0 goto label1;

        l2 = 0L;

        l3 = 0L;

        goto label2;

     label1:
        l2 = l1 / 1000L;

        $l7 = l1 % 1000L;

        $l9 = $l7 * 1000L;

        l3 = $l9 * 1000L;

     label2:
        $l8 = r0.<com.android.server.AlarmManagerService: long mNativeData>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void set(long,int,long,long)>($l8, i0, l2, l3);

        goto label4;

     label3:
        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = 1;

        $r1 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r1.<com.android.server.AlarmManagerService$AlarmHandler: void removeMessages(int)>(1);

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r2.<com.android.server.AlarmManagerService$AlarmHandler: boolean sendMessageAtTime(android.os.Message,long)>(r3, l1);

     label4:
        return;
    }

    private static final void dumpAlarmList(java.io.PrintWriter, java.util.ArrayList, java.lang.String, java.lang.String, long, long, java.text.SimpleDateFormat)
    {
        java.io.PrintWriter r0;
        java.lang.String $r1, r3, r4;
        java.util.ArrayList r2;
        long l0, l1;
        java.text.SimpleDateFormat r5;
        int i2, $i3;
        com.android.server.AlarmManagerService$Alarm r6;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        r5 := @parameter6: java.text.SimpleDateFormat;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label2;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.AlarmManagerService$Alarm) $r7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r0, $r1, l0, l1, r5);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    private static final java.lang.String labelForType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        return "RTC";

     label2:
        return "RTC_WAKEUP";

     label3:
        return "ELAPSED";

     label4:
        return "ELAPSED_WAKEUP";

     label5:
        return "--unknown--";
    }

    private static final void dumpAlarmList(java.io.PrintWriter, java.util.ArrayList, java.lang.String, long, long, java.text.SimpleDateFormat)
    {
        java.io.PrintWriter r0;
        java.util.ArrayList r1;
        java.lang.String r2, r5, $r10;
        long l0, l1;
        java.text.SimpleDateFormat r3;
        int i2, $i3, $i4;
        com.android.server.AlarmManagerService$Alarm r4;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r3 := @parameter5: java.text.SimpleDateFormat;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label2;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.AlarmManagerService$Alarm) $r6;

        $i4 = r4.<com.android.server.AlarmManagerService$Alarm: int type>;

        r5 = staticinvoke <com.android.server.AlarmManagerService: java.lang.String labelForType(int)>($i4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r0, $r10, l1, l0, r3);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    private native long init();

    private native void close(long);

    private native void set(long, int, long, long);

    private native int waitForAlarm(long);

    private native int setKernelTime(long, long);

    private native int setKernelTimezone(long, int);

    boolean triggerAlarmsLocked(java.util.ArrayList, long, long)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r4, $r7, $r9;
        long l0, l1, l4, l5, $l10, $l11, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21, $l24, $l26, $l27, $l29, $l30, $l31, $l32;
        boolean z0, $z2, $z3;
        com.android.server.AlarmManagerService$Batch r2;
        int i2, i3, $i6, $i7, $i8, $i15, $i22, $i23, $i25, $i28;
        com.android.server.AlarmManagerService$Alarm r3;
        java.util.Comparator $r5;
        java.lang.Object $r6;
        byte $b9, $b12;
        android.app.AlarmManager$AlarmClockInfo $r10, $r13;
        android.app.PendingIntent $r11;
        android.os.WorkSource $r12;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 = 0;

     label1:
        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i7 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label8;

        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r6 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (com.android.server.AlarmManagerService$Batch) $r6;

        $l10 = r2.<com.android.server.AlarmManagerService$Batch: long start>;

        $b9 = $l10 cmp l0;

        if $b9 <= 0 goto label2;

        goto label8;

     label2:
        $r9 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        i2 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label7;

        r3 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>(i3);

        r3.<com.android.server.AlarmManagerService$Alarm: int count> = 1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $l11 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $b12 = $l11 cmp 0L;

        if $b12 <= 0 goto label4;

        $i15 = r3.<com.android.server.AlarmManagerService$Alarm: int count>;

        $l16 = (long) $i15;

        $l13 = r3.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l18 = l0 - $l13;

        $l14 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $l19 = $l18 / $l14;

        $l17 = $l16 + $l19;

        $i22 = (int) $l17;

        r3.<com.android.server.AlarmManagerService$Alarm: int count> = $i22;

        $i23 = r3.<com.android.server.AlarmManagerService$Alarm: int count>;

        $l21 = (long) $i23;

        $l20 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        l4 = $l21 * $l20;

        $l26 = r3.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        l5 = $l26 + l4;

        $i25 = r3.<com.android.server.AlarmManagerService$Alarm: int type>;

        $l27 = r3.<com.android.server.AlarmManagerService$Alarm: long when>;

        $l31 = $l27 + l4;

        $l30 = r3.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $l24 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $l29 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l0, l5, $l24);

        $l32 = r3.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $r11 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $z3 = r2.<com.android.server.AlarmManagerService$Batch: boolean standalone>;

        $r12 = r3.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $r13 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        $i28 = r3.<com.android.server.AlarmManagerService$Alarm: int userId>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(int,long,long,long,long,long,android.app.PendingIntent,boolean,boolean,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int)>($i25, $l31, l5, $l30, $l29, $l32, $r11, $z3, 1, $r12, $r13, $i28);

     label4:
        $z2 = r3.<com.android.server.AlarmManagerService$Alarm: boolean wakeup>;

        if $z2 == 0 goto label5;

        z0 = 1;

     label5:
        $r10 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r10 == null goto label6;

        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = 1;

     label6:
        i3 = i3 + 1;

        goto label3;

     label7:
        goto label1;

     label8:
        $i6 = r0.<com.android.server.AlarmManagerService: int mCurrentSeq>;

        $i8 = $i6 + 1;

        r0.<com.android.server.AlarmManagerService: int mCurrentSeq> = $i8;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void calculateDeliveryPriorities(java.util.ArrayList)>(r1);

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.Comparator mAlarmDispatchComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r5);

        return z0;
    }

    void recordWakeupAlarms(java.util.ArrayList, long, long)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r6, $r7;
        long l0, l1, $l6;
        int i2, i3, i4, i5, $i8;
        com.android.server.AlarmManagerService$Batch r2;
        com.android.server.AlarmManagerService$Alarm r3;
        com.android.server.AlarmManagerService$WakeupEvent r4, $r8;
        java.lang.Object $r5, $r9;
        byte $b7;
        android.app.PendingIntent $r10, $r12;
        android.content.Intent $r11;
        java.util.LinkedList $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label5;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.AlarmManagerService$Batch) $r5;

        $l6 = r2.<com.android.server.AlarmManagerService$Batch: long start>;

        $b7 = $l6 cmp l0;

        if $b7 <= 0 goto label2;

        goto label5;

     label2:
        $r6 = r2.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i5 = 0;

     label3:
        if i5 >= i4 goto label4;

        $r7 = r2.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (com.android.server.AlarmManagerService$Alarm) $r9;

        $r8 = new com.android.server.AlarmManagerService$WakeupEvent;

        $r10 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $i8 = virtualinvoke $r10.<android.app.PendingIntent: int getCreatorUid()>();

        $r12 = r3.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r11 = virtualinvoke $r12.<android.app.PendingIntent: android.content.Intent getIntent()>();

        $r14 = virtualinvoke $r11.<android.content.Intent: java.lang.String getAction()>();

        specialinvoke $r8.<com.android.server.AlarmManagerService$WakeupEvent: void <init>(com.android.server.AlarmManagerService,long,int,java.lang.String)>(r0, l1, $i8, $r14);

        r4 = $r8;

        $r13 = r0.<com.android.server.AlarmManagerService: java.util.LinkedList mRecentWakeups>;

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>(r4);

        i5 = i5 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    long currentNonWakeupFuzzLocked(long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l1, $l2;
        byte $b3, $b4;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        $l2 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        l1 = l0 - $l2;

        $b3 = l1 cmp 300000L;

        if $b3 >= 0 goto label1;

        return 120000L;

     label1:
        $b4 = l1 cmp 1800000L;

        if $b4 >= 0 goto label2;

        return 900000L;

     label2:
        return 3600000L;
    }

    boolean checkAllowNonWakeupDelayLocked(long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l1, $l2, $l5, $l6, $l8;
        boolean $z0, $z1;
        byte $b3, $b7, $b9;
        java.util.ArrayList $r1;
        int $i4;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $l2 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        $b3 = $l2 cmp 0L;

        if $b3 > 0 goto label2;

        return 0;

     label2:
        $r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i4 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label3;

        $l8 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        $b9 = $l8 cmp l0;

        if $b9 <= 0 goto label3;

        return 0;

     label3:
        $l5 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        l1 = l0 - $l5;

        $l6 = virtualinvoke r0.<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>(l0);

        $b7 = l1 cmp $l6;

        if $b7 > 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    void deliverAlarmsLocked(java.util.ArrayList, long)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r17;
        long l0, $l30;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        com.android.server.AlarmManagerService$Alarm r2;
        com.android.server.AlarmManagerService$InFlight r3, $r13;
        com.android.server.AlarmManagerService$BroadcastStats r4;
        com.android.server.AlarmManagerService$FilterStats r5;
        java.lang.Object $r6;
        android.app.PendingIntent $r7, $r15, $r18, $r25, $r30, $r32;
        android.content.Context $r8;
        android.content.Intent $r9, $r10;
        com.android.server.AlarmManagerService$ResultReceiver $r11;
        com.android.server.AlarmManagerService$AlarmHandler $r12;
        java.lang.String $r14, $r23, $r27;
        android.os.WorkSource $r16, $r19, $r20, $r21, $r22, $r24, $r26;
        java.lang.RuntimeException $r28, r34;
        android.os.PowerManager$WakeLock $r29;
        android.app.PendingIntent$CanceledException $r31;
        byte $b31;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime> = l0;

        i1 = 0;

     label01:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label17;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.AlarmManagerService$Alarm) $r6;

     label02:
        $r7 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r8 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r9 = <com.android.server.AlarmManagerService: android.content.Intent mBackgroundIntent>;

        $i4 = r2.<com.android.server.AlarmManagerService$Alarm: int count>;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.ALARM_COUNT", $i4);

        $r11 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ResultReceiver mResultReceiver>;

        $r12 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r7.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>($r8, 0, $r10, $r11, $r12);

        $i5 = r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount>;

        if $i5 != 0 goto label03;

        $r30 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r26 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i27 = r2.<com.android.server.AlarmManagerService$Alarm: int type>;

        $r27 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String tag>;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void setWakelockWorkSource(android.app.PendingIntent,android.os.WorkSource,int,java.lang.String,boolean)>($r30, $r26, $i27, $r27, 1);

        $r29 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r29.<android.os.PowerManager$WakeLock: void acquire()>();

     label03:
        $r13 = new com.android.server.AlarmManagerService$InFlight;

        $r15 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r16 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i6 = r2.<com.android.server.AlarmManagerService$Alarm: int type>;

        $r14 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String tag>;

        specialinvoke $r13.<com.android.server.AlarmManagerService$InFlight: void <init>(com.android.server.AlarmManagerService,android.app.PendingIntent,android.os.WorkSource,int,java.lang.String)>(r0, $r15, $r16, $i6, $r14);

        r3 = $r13;

        $r17 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $i8 = r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount>;

        $i7 = $i8 + 1;

        r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount> = $i7;

        r4 = r3.<com.android.server.AlarmManagerService$InFlight: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $i10 = r4.<com.android.server.AlarmManagerService$BroadcastStats: int count>;

        $i9 = $i10 + 1;

        r4.<com.android.server.AlarmManagerService$BroadcastStats: int count> = $i9;

        $i13 = r4.<com.android.server.AlarmManagerService$BroadcastStats: int nesting>;

        if $i13 != 0 goto label04;

        r4.<com.android.server.AlarmManagerService$BroadcastStats: int nesting> = 1;

        r4.<com.android.server.AlarmManagerService$BroadcastStats: long startTime> = l0;

        goto label05;

     label04:
        $i14 = r4.<com.android.server.AlarmManagerService$BroadcastStats: int nesting>;

        $i11 = $i14 + 1;

        r4.<com.android.server.AlarmManagerService$BroadcastStats: int nesting> = $i11;

     label05:
        r5 = r3.<com.android.server.AlarmManagerService$InFlight: com.android.server.AlarmManagerService$FilterStats mFilterStats>;

        $i12 = r5.<com.android.server.AlarmManagerService$FilterStats: int count>;

        $i17 = $i12 + 1;

        r5.<com.android.server.AlarmManagerService$FilterStats: int count> = $i17;

        $i18 = r5.<com.android.server.AlarmManagerService$FilterStats: int nesting>;

        if $i18 != 0 goto label06;

        r5.<com.android.server.AlarmManagerService$FilterStats: int nesting> = 1;

        r5.<com.android.server.AlarmManagerService$FilterStats: long startTime> = l0;

        goto label07;

     label06:
        $i15 = r5.<com.android.server.AlarmManagerService$FilterStats: int nesting>;

        $i16 = $i15 + 1;

        r5.<com.android.server.AlarmManagerService$FilterStats: int nesting> = $i16;

     label07:
        $i21 = r2.<com.android.server.AlarmManagerService$Alarm: int type>;

        if $i21 == 2 goto label08;

        $i28 = r2.<com.android.server.AlarmManagerService$Alarm: int type>;

        if $i28 != 0 goto label12;

     label08:
        $i22 = r4.<com.android.server.AlarmManagerService$BroadcastStats: int numWakeup>;

        $i19 = $i22 + 1;

        r4.<com.android.server.AlarmManagerService$BroadcastStats: int numWakeup> = $i19;

        $i20 = r5.<com.android.server.AlarmManagerService$FilterStats: int numWakeup>;

        $i23 = $i20 + 1;

        r5.<com.android.server.AlarmManagerService$FilterStats: int numWakeup> = $i23;

        $r20 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        if $r20 == null goto label11;

        $r19 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i25 = virtualinvoke $r19.<android.os.WorkSource: int size()>();

        if $i25 <= 0 goto label11;

        i2 = 0;

     label09:
        $r22 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i24 = virtualinvoke $r22.<android.os.WorkSource: int size()>();

        if i2 >= $i24 goto label10;

        $r25 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r21 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i26 = virtualinvoke $r21.<android.os.WorkSource: int get(int)>(i2);

        $r24 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $r23 = virtualinvoke $r24.<android.os.WorkSource: java.lang.String getName(int)>(i2);

        staticinvoke <android.app.ActivityManagerNative: void noteWakeupAlarm(android.app.PendingIntent,int,java.lang.String)>($r25, $i26, $r23);

        i2 = i2 + 1;

        goto label09;

     label10:
        goto label12;

     label11:
        $r18 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        staticinvoke <android.app.ActivityManagerNative: void noteWakeupAlarm(android.app.PendingIntent,int,java.lang.String)>($r18, -1, null);

     label12:
        goto label16;

     label13:
        $r31 := @caughtexception;

        $l30 = r2.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $b31 = $l30 cmp 0L;

        if $b31 <= 0 goto label14;

        $r32 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void removeImpl(android.app.PendingIntent)>($r32);

     label14:
        goto label16;

     label15:
        $r28 := @caughtexception;

        r34 = $r28;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AlarmManager", "Failure sending alarm.", r34);

     label16:
        i1 = i1 + 1;

        goto label01;

     label17:
        return;

        catch android.app.PendingIntent$CanceledException from label02 to label12 with label13;
        catch java.lang.RuntimeException from label02 to label12 with label15;
    }

    void setWakelockWorkSource(android.app.PendingIntent, android.os.WorkSource, int, java.lang.String, boolean)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1, $r4;
        android.os.WorkSource r2, $r10;
        int i0, i1;
        java.lang.String r3;
        boolean z0, z1, $z2, $z3;
        android.os.PowerManager$WakeLock $r5, $r6, $r9, $r11, $r12, $r13;
        android.app.IActivityManager $r7;
        android.content.IIntentSender $r8;
        java.lang.Exception $r14;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.os.WorkSource;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

     label01:
        $r4 = r0.<com.android.server.AlarmManagerService: android.app.PendingIntent mTimeTickSender>;

        if r1 != $r4 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z1 = $z3;

        $r5 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void setUnimportantForLogging(boolean)>(z1);

        if z0 != 0 goto label04;

        $z2 = r0.<com.android.server.AlarmManagerService: boolean mLastWakeLockUnimportantForLogging>;

        if $z2 == 0 goto label05;

     label04:
        $r6 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void setHistoryTag(java.lang.String)>(r3);

        goto label06;

     label05:
        $r13 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r13.<android.os.PowerManager$WakeLock: void setHistoryTag(java.lang.String)>(null);

     label06:
        r0.<com.android.server.AlarmManagerService: boolean mLastWakeLockUnimportantForLogging> = z1;

        if r2 == null goto label08;

        $r11 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(r2);

     label07:
        return;

     label08:
        $r7 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r8 = virtualinvoke r1.<android.app.PendingIntent: android.content.IIntentSender getTarget()>();

        i1 = interfaceinvoke $r7.<android.app.IActivityManager: int getUidForIntentSender(android.content.IIntentSender)>($r8);

        if i1 < 0 goto label10;

        $r12 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        $r10 = new android.os.WorkSource;

        specialinvoke $r10.<android.os.WorkSource: void <init>(int)>(i1);

        virtualinvoke $r12.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>($r10);

     label09:
        return;

     label10:
        goto label12;

     label11:
        $r14 := @caughtexception;

     label12:
        $r9 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r9.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        return;

        catch java.lang.Exception from label01 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
    }

    private final com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(android.app.PendingIntent)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        java.lang.String r2;
        int i0;
        android.util.ArrayMap r3, $r10;
        com.android.server.AlarmManagerService$BroadcastStats r4, $r8;
        android.util.SparseArray $r5, $r11;
        java.lang.Object $r6, $r7;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        r2 = virtualinvoke r1.<android.app.PendingIntent: java.lang.String getCreatorPackage()>();

        i0 = virtualinvoke r1.<android.app.PendingIntent: int getCreatorUid()>();

        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.util.ArrayMap) $r6;

        if r3 != null goto label1;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r3 = $r10;

        $r11 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

     label1:
        $r7 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.android.server.AlarmManagerService$BroadcastStats) $r7;

        if r4 != null goto label2;

        $r8 = new com.android.server.AlarmManagerService$BroadcastStats;

        specialinvoke $r8.<com.android.server.AlarmManagerService$BroadcastStats: void <init>(int,java.lang.String)>(i0, r2);

        r4 = $r8;

        virtualinvoke r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

     label2:
        return r4;
    }

    static boolean access$002(com.android.server.AlarmManagerService, boolean)
    {
        com.android.server.AlarmManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = z0;

        return z0;
    }

    static com.android.server.AlarmManagerService$BroadcastStats access$100(com.android.server.AlarmManagerService, android.app.PendingIntent)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        com.android.server.AlarmManagerService$BroadcastStats $r2;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = specialinvoke r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(android.app.PendingIntent)>(r1);

        return $r2;
    }

    static int access$200(com.android.server.AlarmManagerService, long, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l1;
        int $i2;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $i2 = specialinvoke r0.<com.android.server.AlarmManagerService: int setKernelTime(long,long)>(l0, l1);

        return $i2;
    }

    static android.app.AlarmManager$AlarmClockInfo access$300(com.android.server.AlarmManagerService, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        android.app.AlarmManager$AlarmClockInfo $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.AlarmManagerService: android.app.AlarmManager$AlarmClockInfo getNextAlarmClockImpl(int)>(i0);

        return $r1;
    }

    static int access$400(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;
        int $i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        $i1 = specialinvoke r0.<com.android.server.AlarmManagerService: int waitForAlarm(long)>(l0);

        return $i1;
    }

    static void access$500(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

        return;
    }

    static void access$600(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        specialinvoke r0.<com.android.server.AlarmManagerService: void sendNextAlarmClockChanged()>();

        return;
    }

    static int access$700(com.android.server.AlarmManagerService, long, int)
    {
        com.android.server.AlarmManagerService r0;
        long l0;
        int i1, $i2;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<com.android.server.AlarmManagerService: int setKernelTimezone(long,int)>(l0, i1);

        return $i2;
    }

    static void <clinit>()
    {
        android.content.Intent $r0, $r1, $r3;
        com.android.server.AlarmManagerService$IncreasingTimeOrder $r2;
        com.android.server.AlarmManagerService$BatchTimeOrder $r4;

        <com.android.server.AlarmManagerService: long MIN_FUZZABLE_INTERVAL> = 10000L;

        <com.android.server.AlarmManagerService: int PRIO_NORMAL> = 2;

        <com.android.server.AlarmManagerService: int PRIO_WAKEUP> = 1;

        <com.android.server.AlarmManagerService: int PRIO_TICK> = 0;

        <com.android.server.AlarmManagerService: boolean WAKEUP_STATS> = 0;

        <com.android.server.AlarmManagerService: java.lang.String TIMEZONE_PROPERTY> = "persist.sys.timezone";

        <com.android.server.AlarmManagerService: int ALARM_EVENT> = 1;

        <com.android.server.AlarmManagerService: boolean DEBUG_ALARM_CLOCK> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_VALIDATE> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_BATCH> = 0;

        <com.android.server.AlarmManagerService: boolean localLOGV> = 0;

        <com.android.server.AlarmManagerService: java.lang.String ClockReceiver_TAG> = "ClockReceiver";

        <com.android.server.AlarmManagerService: java.lang.String TAG> = "AlarmManager";

        <com.android.server.AlarmManagerService: int TYPE_NONWAKEUP_MASK> = 1;

        <com.android.server.AlarmManagerService: int IS_WAKEUP_MASK> = 5;

        <com.android.server.AlarmManagerService: int TIME_CHANGED_MASK> = 65536;

        <com.android.server.AlarmManagerService: int ELAPSED_REALTIME_MASK> = 8;

        <com.android.server.AlarmManagerService: int ELAPSED_REALTIME_WAKEUP_MASK> = 4;

        <com.android.server.AlarmManagerService: int RTC_MASK> = 2;

        <com.android.server.AlarmManagerService: int RTC_WAKEUP_MASK> = 1;

        <com.android.server.AlarmManagerService: long LATE_ALARM_THRESHOLD> = 10000L;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>()>();

        $r1 = virtualinvoke $r0.<android.content.Intent: android.content.Intent addFlags(int)>(4);

        <com.android.server.AlarmManagerService: android.content.Intent mBackgroundIntent> = $r1;

        $r2 = new com.android.server.AlarmManagerService$IncreasingTimeOrder;

        specialinvoke $r2.<com.android.server.AlarmManagerService$IncreasingTimeOrder: void <init>()>();

        <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$IncreasingTimeOrder sIncreasingTimeOrder> = $r2;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NEXT_ALARM_CLOCK_CHANGED");

        <com.android.server.AlarmManagerService: android.content.Intent NEXT_ALARM_CLOCK_CHANGED_INTENT> = $r3;

        $r4 = new com.android.server.AlarmManagerService$BatchTimeOrder;

        specialinvoke $r4.<com.android.server.AlarmManagerService$BatchTimeOrder: void <init>()>();

        <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BatchTimeOrder sBatchOrder> = $r4;

        return;
    }
}
