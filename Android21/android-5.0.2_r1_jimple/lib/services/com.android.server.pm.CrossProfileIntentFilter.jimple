class com.android.server.pm.CrossProfileIntentFilter extends android.content.IntentFilter
{
    private static final java.lang.String ATTR_TARGET_USER_ID;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_OWNER_USER_ID;
    private static final java.lang.String ATTR_OWNER_PACKAGE;
    private static final java.lang.String ATTR_FILTER;
    private static final java.lang.String TAG;
    final int mTargetUserId;
    final int mOwnerUserId;
    final java.lang.String mOwnerPackage;
    final int mFlags;

    void <init>(android.content.IntentFilter, java.lang.String, int, int, int)
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        android.content.IntentFilter r1;
        java.lang.String r2;
        int i0, i1, i2;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        r1 := @parameter0: android.content.IntentFilter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.content.IntentFilter: void <init>(android.content.IntentFilter)>(r1);

        r0.<com.android.server.pm.CrossProfileIntentFilter: int mTargetUserId> = i1;

        r0.<com.android.server.pm.CrossProfileIntentFilter: int mOwnerUserId> = i0;

        r0.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String mOwnerPackage> = r2;

        r0.<com.android.server.pm.CrossProfileIntentFilter: int mFlags> = i2;

        return;
    }

    public int getTargetUserId()
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        int $i0;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        $i0 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mTargetUserId>;

        return $i0;
    }

    public int getFlags()
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        int $i0;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        $i0 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mFlags>;

        return $i0;
    }

    public int getOwnerUserId()
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        int $i0;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        $i0 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mOwnerUserId>;

        return $i0;
    }

    public java.lang.String getOwnerPackage()
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        $r1 = r0.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String mOwnerPackage>;

        return $r1;
    }

    void <init>(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r2, r3, $r4, $r8, $r12, r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<android.content.IntentFilter: void <init>()>();

        $i2 = virtualinvoke r0.<com.android.server.pm.CrossProfileIntentFilter: int getIntFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "targetUserId", -10000);

        r0.<com.android.server.pm.CrossProfileIntentFilter: int mTargetUserId> = $i2;

        $i3 = virtualinvoke r0.<com.android.server.pm.CrossProfileIntentFilter: int getIntFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "ownerUserId", -10000);

        r0.<com.android.server.pm.CrossProfileIntentFilter: int mOwnerUserId> = $i3;

        $r4 = virtualinvoke r0.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String getStringFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "ownerPackage", "");

        r0.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String mOwnerPackage> = $r4;

        $i4 = virtualinvoke r0.<com.android.server.pm.CrossProfileIntentFilter: int getIntFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "flags", 0);

        r0.<com.android.server.pm.CrossProfileIntentFilter: int mFlags> = $i4;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label1:
        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i5;

        if $i5 == 1 goto label5;

        if i1 != 3 goto label2;

        $i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i6 <= i0 goto label5;

     label2:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        if i1 != 2 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("filter");

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under crossProfile-intent-filters: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r3);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label5:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("filter");

        if $z0 == 0 goto label6;

        virtualinvoke r0.<com.android.server.pm.CrossProfileIntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing element under CrossProfileIntentFilter: filter at ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r15);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label7:
        return;
    }

    java.lang.String getStringFromXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String)
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, $r10;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r4 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing element under CrossProfileIntentFilter: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r5);

        return r3;

     label1:
        return r4;
    }

    int getIntFromXml(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        int i0, $i1;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String getStringFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r2, null);

        if r3 == null goto label1;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        return $i1;

     label1:
        return i0;
    }

    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        org.xmlpull.v1.XmlSerializer r1;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r4, $r6, $r7;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $i0 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mTargetUserId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "targetUserId", $r2);

        $i1 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mFlags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r4);

        $i2 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mOwnerUserId>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ownerUserId", $r6);

        $r7 = r0.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String mOwnerPackage>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ownerPackage", $r7);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "filter");

        specialinvoke r0.<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "filter");

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.pm.CrossProfileIntentFilter r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        int $i0, $i1;
        java.lang.String $r3, $r6, $r9;

        r0 := @this: com.android.server.pm.CrossProfileIntentFilter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CrossProfileIntentFilter{0x");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = r0.<com.android.server.pm.CrossProfileIntentFilter: int mTargetUserId>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.CrossProfileIntentFilter: java.lang.String TAG> = "CrossProfileIntentFilter";

        <com.android.server.pm.CrossProfileIntentFilter: java.lang.String ATTR_FILTER> = "filter";

        <com.android.server.pm.CrossProfileIntentFilter: java.lang.String ATTR_OWNER_PACKAGE> = "ownerPackage";

        <com.android.server.pm.CrossProfileIntentFilter: java.lang.String ATTR_OWNER_USER_ID> = "ownerUserId";

        <com.android.server.pm.CrossProfileIntentFilter: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.CrossProfileIntentFilter: java.lang.String ATTR_TARGET_USER_ID> = "targetUserId";

        return;
    }
}
