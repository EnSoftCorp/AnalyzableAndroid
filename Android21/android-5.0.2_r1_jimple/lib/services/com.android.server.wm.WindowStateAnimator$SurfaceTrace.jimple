class com.android.server.wm.WindowStateAnimator$SurfaceTrace extends android.view.SurfaceControl
{
    private static final java.lang.String SURFACE_TAG;
    private static final boolean logSurfaceTrace;
    static final java.util.ArrayList sSurfaces;
    private float mSurfaceTraceAlpha;
    private int mLayer;
    private final android.graphics.PointF mPosition;
    private final android.graphics.Point mSize;
    private final android.graphics.Rect mWindowCrop;
    private boolean mShown;
    private int mLayerStack;
    private boolean mIsOpaque;
    private float mDsdx;
    private float mDtdx;
    private float mDsdy;
    private float mDtdy;
    private final java.lang.String mName;

    public void <init>(android.view.SurfaceSession, java.lang.String, int, int, int, int) throws android.view.Surface$OutOfResourcesException
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        android.view.SurfaceSession r1;
        java.lang.String r2, $r12;
        int i0, i1, i2, i3;
        java.util.ArrayList r3, $r9, $r10;
        java.lang.Throwable r4, $r11;
        android.graphics.PointF $r5;
        android.graphics.Point $r6, $r8;
        android.graphics.Rect $r7;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        r1 := @parameter0: android.view.SurfaceSession;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        specialinvoke r0.<android.view.SurfaceControl: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>(r1, r2, i0, i1, i2, i3);

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mSurfaceTraceAlpha> = 0.0F;

        $r5 = new android.graphics.PointF;

        specialinvoke $r5.<android.graphics.PointF: void <init>()>();

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition> = $r5;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Rect mWindowCrop> = $r7;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown> = 0;

        if r2 == null goto label1;

        $r12 = r2;

        goto label2;

     label1:
        $r12 = "Not named";

     label2:
        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.lang.String mName> = $r12;

        $r8 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        virtualinvoke $r8.<android.graphics.Point: void set(int,int)>(i0, i1);

        $r9 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        r3 = $r9;

        entermonitor $r9;

     label3:
        $r10 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r0);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setAlpha(float)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        float f0, $f1;
        byte $b0;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        f0 := @parameter0: float;

        $f1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mSurfaceTraceAlpha>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mSurfaceTraceAlpha> = f0;

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void setAlpha(float)>(f0);

        return;
    }

    public void setLayer(int)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0, r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList r1, $r4, $r5, $r6, $r7, $r8;
        java.lang.Throwable r3, $r10;
        java.lang.Object $r9;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayer>;

        if i0 == $i2 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayer> = i0;

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void setLayer(int)>(i0);

        $r4 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        r1 = $r4;

        entermonitor $r4;

     label2:
        $r5 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        $r6 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label3:
        if i1 < 0 goto label5;

        $r8 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.wm.WindowStateAnimator$SurfaceTrace) $r9;

        $i5 = r2.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayer>;

        if $i5 >= i0 goto label4;

        goto label5;

     label4:
        i1 = i1 + -1;

        goto label3;

     label5:
        $r7 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        $i4 = i1 + 1;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>($i4, r0);

        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setPosition(float, float)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        float f0, f1, $f2, $f3;
        android.graphics.PointF $r1, $r2, $r3;
        byte $b0, $b1;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        $f2 = $r1.<android.graphics.PointF: float x>;

        $b0 = f0 cmpl $f2;

        if $b0 != 0 goto label1;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        $f3 = $r3.<android.graphics.PointF: float y>;

        $b1 = f1 cmpl $f3;

        if $b1 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        virtualinvoke $r2.<android.graphics.PointF: void set(float,float)>(f0, f1);

     label2:
        specialinvoke r0.<android.view.SurfaceControl: void setPosition(float,float)>(f0, f1);

        return;
    }

    public void setSize(int, int)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        int i0, i1, $i2, $i3;
        android.graphics.Point $r1, $r2, $r3;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        $i2 = $r1.<android.graphics.Point: int x>;

        if i0 != $i2 goto label1;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        $i3 = $r3.<android.graphics.Point: int y>;

        if i1 == $i3 goto label2;

     label1:
        $r2 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        virtualinvoke $r2.<android.graphics.Point: void set(int,int)>(i0, i1);

     label2:
        specialinvoke r0.<android.view.SurfaceControl: void setSize(int,int)>(i0, i1);

        return;
    }

    public void setWindowCrop(android.graphics.Rect)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        android.graphics.Rect r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        r1 := @parameter0: android.graphics.Rect;

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Rect mWindowCrop>;

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Rect mWindowCrop>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)>(r1);

        return;
    }

    public void setLayerStack(int)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        int i0, $i1;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayerStack>;

        if i0 == $i1 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayerStack> = i0;

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void setLayerStack(int)>(i0);

        return;
    }

    public void setOpaque(boolean)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mIsOpaque>;

        if z0 == $z1 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mIsOpaque> = z0;

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void setOpaque(boolean)>(z0);

        return;
    }

    public void setMatrix(float, float, float, float)
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $f4 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdx>;

        $b0 = f0 cmpl $f4;

        if $b0 != 0 goto label1;

        $f5 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdx>;

        $b1 = f1 cmpl $f5;

        if $b1 != 0 goto label1;

        $f6 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdy>;

        $b2 = f2 cmpl $f6;

        if $b2 != 0 goto label1;

        $f7 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdy>;

        $b3 = f3 cmpl $f7;

        if $b3 == 0 goto label2;

     label1:
        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdx> = f0;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdx> = f1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdy> = f2;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdy> = f3;

     label2:
        specialinvoke r0.<android.view.SurfaceControl: void setMatrix(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

    public void hide()
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown> = 0;

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void hide()>();

        return;
    }

    public void show()
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown> = 1;

     label1:
        specialinvoke r0.<android.view.SurfaceControl: void show()>();

        return;
    }

    public void destroy()
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        java.util.ArrayList r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        specialinvoke r0.<android.view.SurfaceControl: void destroy()>();

        $r3 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void release()
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        java.util.ArrayList r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        specialinvoke r0.<android.view.SurfaceControl: void release()>();

        $r3 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void dumpAllSurfaces(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r9, $r10;
        java.util.ArrayList r2, $r5, $r6, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r3;
        java.lang.Throwable r4, $r16;
        java.lang.Object $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0, $z1;
        android.graphics.PointF $r11, $r12;
        android.graphics.Point $r13, $r14;
        android.graphics.Rect $r15;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        $r5 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i0 > 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        if r1 == null goto label04;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r1);

     label04:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("WINDOW MANAGER SURFACES (dumpsys window surfaces)");

        i1 = 0;

     label05:
        if i1 >= i0 goto label06;

        $r7 = <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.wm.WindowStateAnimator$SurfaceTrace) $r8;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("  Surface #");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": #");

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r3);

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r10 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    mLayerStack=");

        $i4 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayerStack>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" mLayer=");

        $i3 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayer>;

        virtualinvoke r0.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    mShown=");

        $z0 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" mAlpha=");

        $f0 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mSurfaceTraceAlpha>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" mIsOpaque=");

        $z1 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mIsOpaque>;

        virtualinvoke r0.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    mPosition=");

        $r11 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        $f1 = $r11.<android.graphics.PointF: float x>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r12 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        $f2 = $r12.<android.graphics.PointF: float y>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" mSize=");

        $r13 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        $i5 = $r13.<android.graphics.Point: int x>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("x");

        $r14 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        $i6 = $r14.<android.graphics.Point: int y>;

        virtualinvoke r0.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    mCrop=");

        $r15 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Rect mWindowCrop>;

        virtualinvoke $r15.<android.graphics.Rect: void printShortString(java.io.PrintWriter)>(r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    Transform: (");

        $f4 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdx>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f3 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdx>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f5 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdy>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f5);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f6 = r3.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdy>;

        virtualinvoke r0.<java.io.PrintWriter: void print(float)>($f6);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(")");

        i1 = i1 + 1;

        goto label05;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.WindowStateAnimator$SurfaceTrace r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r43;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r6, $r28, $r42;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.PointF $r17, $r20;
        android.graphics.Point $r23, $r24;
        android.graphics.Rect $r27;

        r0 := @this: com.android.server.wm.WindowStateAnimator$SurfaceTrace;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Surface ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.lang.String mName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayerStack>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): shown=");

        $z0 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mShown>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" layer=");

        $i2 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: int mLayer>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alpha=");

        $f0 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mSurfaceTraceAlpha>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        $f1 = $r17.<android.graphics.PointF: float x>;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r20 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.PointF mPosition>;

        $f2 = $r20.<android.graphics.PointF: float y>;

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        $i3 = $r23.<android.graphics.Point: int x>;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r24 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Point mSize>;

        $i4 = $r24.<android.graphics.Point: int y>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crop=");

        $r27 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: android.graphics.Rect mWindowCrop>;

        $r28 = virtualinvoke $r27.<android.graphics.Rect: java.lang.String toShortString()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" opaque=");

        $z1 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean mIsOpaque>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $f3 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdx>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f5 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdx>;

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f4 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDsdy>;

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f6 = r0.<com.android.server.wm.WindowStateAnimator$SurfaceTrace: float mDtdy>;

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r42;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <com.android.server.wm.WindowStateAnimator$SurfaceTrace: boolean logSurfaceTrace> = 0;

        <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.lang.String SURFACE_TAG> = "SurfaceTrace";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.util.ArrayList sSurfaces> = $r0;

        return;
    }
}
