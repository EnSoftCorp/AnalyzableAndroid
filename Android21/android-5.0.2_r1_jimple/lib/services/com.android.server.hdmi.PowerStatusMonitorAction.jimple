public class com.android.server.hdmi.PowerStatusMonitorAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    private static final int STATE_WAIT_FOR_REPORT_POWER_STATUS;
    private static final int STATE_WAIT_FOR_NEXT_MONITORING;
    private static final int INVALID_POWER_STATUS;
    private static final int MONITIROING_INTERNAL_MS;
    private static final int REPORT_POWER_STATUS_TIMEOUT_MS;
    private final android.util.SparseIntArray mPowerStatus;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        android.util.SparseIntArray $r2;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus> = $r2;

        return;
    }

    boolean start()
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void queryPowerStatus()>();

        return 1;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: int mState>;

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: boolean handleReportPowerStatus(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return $z0;
    }

    private boolean handleReportPowerStatus(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int i0, i1;
        short s2;
        android.util.SparseIntArray $r2;
        byte[] $r3;
        byte $b3;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        $r2 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -2);

        if i1 != -2 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b3 = $r3[0];

        s2 = $b3 & 255;

        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void updatePowerStatus(int,int,boolean)>(i0, s2, 1);

        return 1;
    }

    void handleTimerEvent(int)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        int i0, $i1;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: int mState>;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void queryPowerStatus()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void handleTimeout()>();

     label3:
        return;
    }

    private void handleTimeout()
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        int i0, i1, $i2;
        android.util.SparseIntArray $r1, $r2, $r3;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        i0 = 0;

     label1:
        $r1 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        $i2 = virtualinvoke $r1.<android.util.SparseIntArray: int size()>();

        if i0 >= $i2 goto label2;

        $r3 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int keyAt(int)>(i0);

        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void updatePowerStatus(int,int,boolean)>(i1, -1, 0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        virtualinvoke $r2.<android.util.SparseIntArray: void clear()>();

        r0.<com.android.server.hdmi.PowerStatusMonitorAction: int mState> = 2;

        return;
    }

    private void resetPowerStatus(java.util.List)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.hardware.hdmi.HdmiDeviceInfo r3;
        android.util.SparseIntArray $r4, $r6;
        boolean $z0;
        java.lang.Object $r5;
        int $i0, $i1;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        virtualinvoke $r4.<android.util.SparseIntArray: void clear()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.hardware.hdmi.HdmiDeviceInfo) $r5;

        $r6 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        $i0 = virtualinvoke r3.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        $i1 = virtualinvoke r3.<android.hardware.hdmi.HdmiDeviceInfo: int getDevicePowerStatus()>();

        virtualinvoke $r6.<android.util.SparseIntArray: void append(int,int)>($i0, $i1);

        goto label1;

     label2:
        return;
    }

    private void queryPowerStatus()
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.hardware.hdmi.HdmiDeviceInfo r3;
        int i0, $i1;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.server.hdmi.HdmiCecMessage $r6;
        com.android.server.hdmi.PowerStatusMonitorAction$1 $r7;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        $r4 = virtualinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        r1 = virtualinvoke $r4.<com.android.server.hdmi.HdmiCecLocalDeviceTv: java.util.List getDeviceInfoList(boolean)>(0);

        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void resetPowerStatus(java.util.List)>(r1);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.hardware.hdmi.HdmiDeviceInfo) $r5;

        i0 = virtualinvoke r3.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        $i1 = virtualinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: int getSourceAddress()>();

        $r6 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDevicePowerStatus(int,int)>($i1, i0);

        $r7 = new com.android.server.hdmi.PowerStatusMonitorAction$1;

        specialinvoke $r7.<com.android.server.hdmi.PowerStatusMonitorAction$1: void <init>(com.android.server.hdmi.PowerStatusMonitorAction,int)>(r0, i0);

        virtualinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage,com.android.server.hdmi.HdmiControlService$SendMessageCallback)>($r6, $r7);

        goto label1;

     label2:
        r0.<com.android.server.hdmi.PowerStatusMonitorAction: int mState> = 1;

        virtualinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void addTimer(int,int)>(2, 60000);

        virtualinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void addTimer(int,int)>(1, 5000);

        return;
    }

    private void updatePowerStatus(int, int, boolean)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        int i0, i1;
        boolean z0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;
        android.util.SparseIntArray $r2;

        r0 := @this: com.android.server.hdmi.PowerStatusMonitorAction;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateDevicePowerStatus(int,int)>(i0, i1);

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.server.hdmi.PowerStatusMonitorAction: android.util.SparseIntArray mPowerStatus>;

        virtualinvoke $r2.<android.util.SparseIntArray: void delete(int)>(i0);

     label1:
        return;
    }

    static void access$000(com.android.server.hdmi.PowerStatusMonitorAction, int, int, boolean)
    {
        com.android.server.hdmi.PowerStatusMonitorAction r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: com.android.server.hdmi.PowerStatusMonitorAction;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.hdmi.PowerStatusMonitorAction: void updatePowerStatus(int,int,boolean)>(i0, i1, z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.PowerStatusMonitorAction: int REPORT_POWER_STATUS_TIMEOUT_MS> = 5000;

        <com.android.server.hdmi.PowerStatusMonitorAction: int MONITIROING_INTERNAL_MS> = 60000;

        <com.android.server.hdmi.PowerStatusMonitorAction: int INVALID_POWER_STATUS> = -2;

        <com.android.server.hdmi.PowerStatusMonitorAction: int STATE_WAIT_FOR_NEXT_MONITORING> = 2;

        <com.android.server.hdmi.PowerStatusMonitorAction: int STATE_WAIT_FOR_REPORT_POWER_STATUS> = 1;

        <com.android.server.hdmi.PowerStatusMonitorAction: java.lang.String TAG> = "PowerStatusMonitorAction";

        return;
    }
}
