class com.android.server.wm.ViewServer$ViewServerWorker extends java.lang.Object implements java.lang.Runnable, com.android.server.wm.WindowManagerService$WindowChangeListener
{
    private java.net.Socket mClient;
    private boolean mNeedWindowListUpdate;
    private boolean mNeedFocusedWindowUpdate;
    final com.android.server.wm.ViewServer this$0;

    public void <init>(com.android.server.wm.ViewServer, java.net.Socket)
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        com.android.server.wm.ViewServer r1;
        java.net.Socket r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 := @parameter0: com.android.server.wm.ViewServer;

        r2 := @parameter1: java.net.Socket;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient> = r2;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 0;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 0;

        return;
    }

    public void run()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.io.BufferedReader r1, $r7;
        java.lang.String r2, r3, r4, $r11, $r12, $r13, $r14, $r15, $r22;
        int i0, $i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Throwable r5, $r44;
        java.io.IOException r6, $r34, $r35, $r36, $r37, $r39, $r42, $r43, r45, r46, r47, r48, r49, r50;
        java.io.InputStreamReader $r8;
        java.net.Socket $r9, $r18, $r20, $r21, $r26, $r29, $r31, $r32, $r33, $r38, $r40, $r41;
        java.io.InputStream $r10;
        com.android.server.wm.WindowManagerService $r16, $r25, $r28;
        com.android.server.wm.ViewServer $r17, $r27, $r30;
        java.lang.StringBuilder $r19, $r23, $r24;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 = null;

     label01:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

        $r9 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        $r10 = virtualinvoke $r9.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r8, 1024);

        r1 = $r7;

        r2 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(32);

        if i0 != -1 goto label02;

        r3 = r2;

        r4 = "";

        goto label03;

     label02:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

     label03:
        $r11 = "PROTOCOL";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z1 == 0 goto label04;

        $r31 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z0 = staticinvoke <com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>($r31, "4");

        goto label09;

     label04:
        $r12 = "SERVER";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z2 == 0 goto label05;

        $r32 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z0 = staticinvoke <com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>($r32, "4");

        goto label09;

     label05:
        $r13 = "LIST";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z3 == 0 goto label06;

        $r30 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r28 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r30);

        $r29 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z0 = virtualinvoke $r28.<com.android.server.wm.WindowManagerService: boolean viewServerListWindows(java.net.Socket)>($r29);

        goto label09;

     label06:
        $r14 = "GET_FOCUS";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z4 == 0 goto label07;

        $r27 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r25 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r27);

        $r26 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z0 = virtualinvoke $r25.<com.android.server.wm.WindowManagerService: boolean viewServerGetFocusedWindow(java.net.Socket)>($r26);

        goto label09;

     label07:
        $r15 = "AUTOLIST";

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z5 == 0 goto label08;

        z0 = specialinvoke r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean windowManagerAutolistLoop()>();

        goto label09;

     label08:
        $r17 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r16 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r17);

        $r18 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z0 = virtualinvoke $r16.<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)>($r18, r3, r4);

     label09:
        if z0 != 0 goto label10;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occurred with the command: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ViewServer", $r22);

     label10:
        if r1 == null goto label14;

     label11:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label12:
        goto label14;

     label13:
        $r43 := @caughtexception;

        r45 = $r43;

        virtualinvoke r45.<java.io.IOException: void printStackTrace()>();

     label14:
        $r20 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if $r20 == null goto label37;

     label15:
        $r21 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        virtualinvoke $r21.<java.net.Socket: void close()>();

     label16:
        goto label37;

     label17:
        $r39 := @caughtexception;

        r46 = $r39;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label37;

     label18:
        $r34 := @caughtexception;

        r47 = $r34;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewServer", "Connection error: ", r47);

     label19:
        if r1 == null goto label23;

     label20:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label21:
        goto label23;

     label22:
        $r36 := @caughtexception;

        r48 = $r36;

        virtualinvoke r48.<java.io.IOException: void printStackTrace()>();

     label23:
        $r33 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if $r33 == null goto label37;

     label24:
        $r38 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        virtualinvoke $r38.<java.net.Socket: void close()>();

     label25:
        goto label37;

     label26:
        $r37 := @caughtexception;

        r49 = $r37;

        virtualinvoke r49.<java.io.IOException: void printStackTrace()>();

        goto label37;

     label27:
        $r44 := @caughtexception;

        r5 = $r44;

     label28:
        if r1 == null goto label32;

     label29:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label30:
        goto label32;

     label31:
        $r42 := @caughtexception;

        r6 = $r42;

        virtualinvoke r6.<java.io.IOException: void printStackTrace()>();

     label32:
        $r41 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if $r41 == null goto label36;

     label33:
        $r40 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        virtualinvoke $r40.<java.net.Socket: void close()>();

     label34:
        goto label36;

     label35:
        $r35 := @caughtexception;

        r50 = $r35;

        virtualinvoke r50.<java.io.IOException: void printStackTrace()>();

     label36:
        throw r5;

     label37:
        return;

        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label01 to label10 with label18;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label01 to label10 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public void windowsChanged()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void focusChanged()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean windowManagerAutolistLoop()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0, r2;
        java.io.BufferedWriter r1, $r8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Throwable r3, r4, $r19, $r20;
        com.android.server.wm.ViewServer $r6, $r12, $r17, $r18;
        com.android.server.wm.WindowManagerService $r7, $r14, $r16, $r21;
        java.io.OutputStreamWriter $r9;
        java.net.Socket $r10;
        java.io.OutputStream $r11;
        java.lang.Exception $r15;
        java.io.IOException $r22, $r23, $r24;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        $r6 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r7 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r6);

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void addWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        r1 = null;

     label01:
        $r8 = new java.io.BufferedWriter;

        $r9 = new java.io.OutputStreamWriter;

        $r10 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        $r11 = virtualinvoke $r10.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r11);

        specialinvoke $r8.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r9);

        r1 = $r8;

     label02:
        $z2 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z2 != 0 goto label13;

        z0 = 0;

        z1 = 0;

        r2 = r0;

        entermonitor r0;

     label03:
        $z4 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate>;

        if $z4 != 0 goto label04;

        $z6 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate>;

        if $z6 != 0 goto label04;

        virtualinvoke r0.<java.lang.Object: void wait()>();

        goto label03;

     label04:
        $z3 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate>;

        if $z3 == 0 goto label05;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 0;

        z0 = 1;

     label05:
        $z5 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate>;

        if $z5 == 0 goto label06;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 0;

        z1 = 1;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r20 := @caughtexception;

        r3 = $r20;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        if z0 == 0 goto label11;

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>("LIST UPDATE\n");

        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();

     label11:
        if z1 == 0 goto label12;

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>("ACTION_FOCUS UPDATE\n");

        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();

     label12:
        goto label02;

     label13:
        if r1 == null goto label17;

     label14:
        virtualinvoke r1.<java.io.BufferedWriter: void close()>();

     label15:
        goto label17;

     label16:
        $r24 := @caughtexception;

     label17:
        $r12 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r14 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r12);

        virtualinvoke $r14.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        goto label30;

     label18:
        $r15 := @caughtexception;

     label19:
        if r1 == null goto label23;

     label20:
        virtualinvoke r1.<java.io.BufferedWriter: void close()>();

     label21:
        goto label23;

     label22:
        $r23 := @caughtexception;

     label23:
        $r17 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r16 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r17);

        virtualinvoke $r16.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        goto label30;

     label24:
        $r19 := @caughtexception;

        r4 = $r19;

     label25:
        if r1 == null goto label29;

     label26:
        virtualinvoke r1.<java.io.BufferedWriter: void close()>();

     label27:
        goto label29;

     label28:
        $r22 := @caughtexception;

     label29:
        $r18 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r21 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r18);

        virtualinvoke $r21.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        throw r4;

     label30:
        return 1;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Exception from label01 to label13 with label18;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label01 to label13 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label24;
    }
}
