class com.android.server.pm.PackageManagerService$InstallParams extends com.android.server.pm.PackageManagerService$HandlerParams
{
    final com.android.server.pm.PackageManagerService$OriginInfo origin;
    final android.content.pm.IPackageInstallObserver2 observer;
    int installFlags;
    final java.lang.String installerPackageName;
    final android.content.pm.VerificationParams verificationParams;
    private com.android.server.pm.PackageManagerService$InstallArgs mArgs;
    private int mRet;
    final java.lang.String packageAbiOverride;
    final com.android.server.pm.PackageManagerService this$0;

    void <init>(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$OriginInfo, android.content.pm.IPackageInstallObserver2, int, java.lang.String, android.content.pm.VerificationParams, android.os.UserHandle, java.lang.String)
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        com.android.server.pm.PackageManagerService r1;
        com.android.server.pm.PackageManagerService$OriginInfo r2;
        android.content.pm.IPackageInstallObserver2 r3;
        int i0;
        java.lang.String r4, r7;
        android.content.pm.VerificationParams r5;
        android.os.UserHandle r6;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$OriginInfo;

        r3 := @parameter2: android.content.pm.IPackageInstallObserver2;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.content.pm.VerificationParams;

        r6 := @parameter6: android.os.UserHandle;

        r7 := @parameter7: java.lang.String;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$HandlerParams: void <init>(com.android.server.pm.PackageManagerService,android.os.UserHandle)>(r1, r6);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin> = r2;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.IPackageInstallObserver2 observer> = r3;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = i0;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String installerPackageName> = r4;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams> = r5;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String packageAbiOverride> = r7;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9, $r12, $r13;
        int $i0;
        java.lang.String $r3, $r11, $r14;
        com.android.server.pm.PackageManagerService$OriginInfo $r6, $r10;
        java.io.File $r7;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstallParams{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r6 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService$OriginInfo: java.io.File file>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cid=");

        $r10 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r11 = $r10.<com.android.server.pm.PackageManagerService$OriginInfo: java.lang.String cid>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public android.content.pm.ManifestDigest getManifestDigest()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        android.content.pm.VerificationParams $r1, $r2;
        android.content.pm.ManifestDigest $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r3 = virtualinvoke $r2.<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()>();

        return $r3;
    }

    private int installLocationPolicy(android.content.pm.PackageInfoLite)
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        android.content.pm.PackageInfoLite r1;
        java.lang.String r2, $r19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14;
        boolean z0, $z1, $z2;
        java.util.HashMap r3, $r7, $r9;
        android.content.pm.PackageParser$Package r4;
        java.lang.Throwable r5, $r20;
        com.android.server.pm.PackageManagerService $r6, $r8;
        java.lang.Object $r10;
        android.content.pm.ApplicationInfo $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        r1 := @parameter0: android.content.pm.PackageInfoLite;

        r2 = r1.<android.content.pm.PackageInfoLite: java.lang.String packageName>;

        i0 = r1.<android.content.pm.PackageInfoLite: int installLocation>;

        $i1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $r6 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r7 = $r6.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r7;

        entermonitor $r7;

     label03:
        $r8 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r9 = $r8.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (android.content.pm.PackageParser$Package) $r10;

        if r4 == null goto label20;

        $i3 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i5 = $i3 & 2;

        if $i5 == 0 goto label18;

        $i7 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i6 = $i7 & 128;

        if $i6 != 0 goto label05;

        $i11 = r1.<android.content.pm.PackageInfoLite: int versionCode>;

        $i12 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        if $i11 >= $i12 goto label05;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t install update of ");

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" update version ");

        $i14 = r1.<android.content.pm.PackageInfoLite: int versionCode>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is older than installed version ");

        $i13 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r19);

        exitmonitor r3;

     label04:
        return -7;

     label05:
        $r11 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label09;

        if z0 == 0 goto label07;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot install update to system app on sdcard");

        exitmonitor r3;

     label06:
        return -3;

     label07:
        exitmonitor r3;

     label08:
        return 1;

     label09:
        if z0 == 0 goto label11;

        exitmonitor r3;

     label10:
        return 2;

     label11:
        if i0 != 1 goto label13;

        exitmonitor r3;

     label12:
        return 1;

     label13:
        if i0 != 2 goto label14;

        goto label20;

     label14:
        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$900(android.content.pm.PackageParser$Package)>(r4);

        if $z1 == 0 goto label16;

        exitmonitor r3;

     label15:
        return 2;

     label16:
        exitmonitor r3;

     label17:
        return 1;

     label18:
        exitmonitor r3;

     label19:
        return -4;

     label20:
        exitmonitor r3;

     label21:
        goto label24;

     label22:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r3;

     label23:
        throw r5;

     label24:
        if z0 == 0 goto label25;

        return 2;

     label25:
        $i4 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        return $i4;

        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label15 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public void handleStartCopy() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        int i0, i2, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i44, i45, i46, i47;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.pm.PackageInfoLite r1;
        android.os.storage.StorageManager r2;
        long l1, l3, $l35;
        java.util.List r3, r5;
        com.android.server.pm.PackageVerificationState r4, $r40;
        android.content.ComponentName r6, r106;
        com.android.server.pm.PackageManagerService$OriginInfo $r7, $r10, $r14, $r21, $r31, $r91, $r94, $r101, $r103;
        android.content.Intent r8, $r26, $r62, r105;
        com.android.server.pm.PackageManagerService $r9, $r16, $r17, $r18, $r19, $r23, $r27, $r32, $r33, $r44, $r45, $r47, $r49, $r54, $r55, $r58, $r85, $r87, $r89, $r97;
        com.android.internal.app.IMediaContainerService $r11, $r24, $r90, $r93;
        java.lang.String $r12, $r13, $r20, $r22, $r30, $r36, $r42, $r46, $r53, $r92, $r95, $r96, $r99, $r100;
        android.os.UserHandle $r15, $r50, $r59;
        java.io.File $r25, $r86, $r102;
        android.net.Uri $r29, $r65, $r67, $r69, $r76, $r80, $r83;
        android.content.pm.VerificationParams $r39, $r63, $r64, $r66, $r68, $r70, $r72, $r73, $r74, $r77, $r81;
        android.util.SparseArray $r48;
        android.content.Context $r51, $r57, $r84;
        com.android.server.pm.PackageManagerService$InstallParams$1 $r52;
        java.lang.Object $r60;
        com.android.server.pm.Installer $r88;
        java.lang.IllegalStateException $r98;
        com.android.server.pm.PackageManagerService$InstallArgs r104;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        i0 = 1;

        $r7 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $z2 = $r7.<com.android.server.pm.PackageManagerService$OriginInfo: boolean staged>;

        if $z2 == 0 goto label03;

        $r103 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r102 = $r103.<com.android.server.pm.PackageManagerService$OriginInfo: java.io.File file>;

        if $r102 == null goto label01;

        $i39 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i38 = $i39 | 16;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i38;

        $i43 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i44 = $i43 & -9;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i44;

        goto label03;

     label01:
        $r101 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r99 = $r101.<com.android.server.pm.PackageManagerService$OriginInfo: java.lang.String cid>;

        if $r99 == null goto label02;

        $i37 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i36 = $i37 | 8;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i36;

        $i41 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i40 = $i41 & -17;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i40;

        goto label03;

     label02:
        $r98 = new java.lang.IllegalStateException;

        specialinvoke $r98.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid stage location");

        throw $r98;

     label03:
        $i7 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i9 = $i7 & 8;

        if $i9 == 0 goto label04;

        $z8 = 1;

        goto label05;

     label04:
        $z8 = 0;

     label05:
        z0 = $z8;

        $i8 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i10 = $i8 & 16;

        if $i10 == 0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        z1 = $z7;

        r1 = null;

        if z1 == 0 goto label08;

        if z0 == 0 goto label08;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Conflicting flags specified for installing on both internal and external");

        i0 = -19;

        goto label10;

     label08:
        $r9 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r11 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$600(com.android.server.pm.PackageManagerService)>($r9);

        $r10 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r13 = $r10.<com.android.server.pm.PackageManagerService$OriginInfo: java.lang.String resolvedPath>;

        $i11 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $r12 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String packageAbiOverride>;

        r1 = interfaceinvoke $r11.<com.android.internal.app.IMediaContainerService: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,java.lang.String)>($r13, $i11, $r12);

        $r14 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $z3 = $r14.<com.android.server.pm.PackageManagerService$OriginInfo: boolean staged>;

        if $z3 != 0 goto label10;

        $i23 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        if $i23 != -1 goto label10;

        $r85 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r84 = $r85.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        r2 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageManager 'from'(android.content.Context)>($r84);

        $r86 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        l1 = virtualinvoke r2.<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>($r86);

        $r87 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r93 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$600(com.android.server.pm.PackageManagerService)>($r87);

        $r94 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r95 = $r94.<com.android.server.pm.PackageManagerService$OriginInfo: java.lang.String resolvedPath>;

        $z6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: boolean isForwardLocked()>();

        $r96 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String packageAbiOverride>;

        l3 = interfaceinvoke $r93.<com.android.internal.app.IMediaContainerService: long calculateInstalledSize(java.lang.String,boolean,java.lang.String)>($r95, $z6, $r96);

        $r97 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r88 = $r97.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $l35 = l3 + l1;

        $i32 = virtualinvoke $r88.<com.android.server.pm.Installer: int freeCache(long)>($l35);

        if $i32 < 0 goto label09;

        $r89 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r90 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$600(com.android.server.pm.PackageManagerService)>($r89);

        $r91 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r100 = $r91.<com.android.server.pm.PackageManagerService$OriginInfo: java.lang.String resolvedPath>;

        $i34 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $r92 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String packageAbiOverride>;

        r1 = interfaceinvoke $r90.<com.android.internal.app.IMediaContainerService: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,java.lang.String)>($r100, $i34, $r92);

     label09:
        $i33 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        if $i33 != -6 goto label10;

        r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation> = -1;

     label10:
        if i0 != 1 goto label19;

        i45 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        if i45 != -3 goto label11;

        i0 = -19;

        goto label19;

     label11:
        if i45 != -4 goto label12;

        i0 = -1;

        goto label19;

     label12:
        if i45 != -1 goto label13;

        i0 = -4;

        goto label19;

     label13:
        if i45 != -2 goto label14;

        i0 = -2;

        goto label19;

     label14:
        if i45 != -6 goto label15;

        i0 = -3;

        goto label19;

     label15:
        if i45 != -5 goto label16;

        i0 = -20;

        goto label19;

     label16:
        i46 = specialinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: int installLocationPolicy(android.content.pm.PackageInfoLite)>(r1);

        if i46 != -7 goto label17;

        i0 = -25;

        goto label19;

     label17:
        if z0 != 0 goto label19;

        if z1 != 0 goto label19;

        if i46 != 2 goto label18;

        $i28 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i31 = $i28 | 8;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i31;

        $i30 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i24 = $i30 & -17;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i24;

        goto label19;

     label18:
        $i25 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i27 = $i25 | 16;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i27;

        $i26 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i29 = $i26 & -9;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags> = $i29;

     label19:
        $r16 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r104 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>($r16, r0);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs> = r104;

        if i0 != 1 goto label33;

        $r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.os.UserHandle getUser()>();

        i47 = virtualinvoke $r15.<android.os.UserHandle: int getIdentifier()>();

        if i47 != -1 goto label20;

        $i22 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i21 = $i22 & 32;

        if $i21 == 0 goto label20;

        i47 = 0;

     label20:
        $r19 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r20 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2700(com.android.server.pm.PackageManagerService)>($r19);

        if $r20 != null goto label21;

        $i12 = -1;

        goto label22;

     label21:
        $r18 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r17 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r22 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2700(com.android.server.pm.PackageManagerService)>($r17);

        $i12 = virtualinvoke $r18.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>($r22, i47);

     label22:
        i2 = $i12;

        $r21 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $z4 = $r21.<com.android.server.pm.PackageManagerService$OriginInfo: boolean existing>;

        if $z4 != 0 goto label32;

        if i2 == -1 goto label32;

        $r27 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $i13 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$2800(com.android.server.pm.PackageManagerService,int,int)>($r27, i47, $i13);

        if $z5 == 0 goto label32;

        $r26 = new android.content.Intent;

        specialinvoke $r26.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_NEEDS_VERIFICATION");

        r105 = $r26;

        $r25 = new java.io.File;

        $r31 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$OriginInfo origin>;

        $r30 = $r31.<com.android.server.pm.PackageManagerService$OriginInfo: java.lang.String resolvedPath>;

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>($r30);

        $r29 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r25);

        virtualinvoke r105.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r29, "application/vnd.android.package-archive");

        virtualinvoke r105.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        $r33 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r3 = virtualinvoke $r33.<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r105, "application/vnd.android.package-archive", 512, 0);

        $r32 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        i4 = staticinvoke <com.android.server.pm.PackageManagerService: int access$2908(com.android.server.pm.PackageManagerService)>($r32);

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_ID", i4);

        $r36 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String installerPackageName>;

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.pm.extra.VERIFICATION_INSTALLER_PACKAGE", $r36);

        $i15 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_INSTALL_FLAGS", $i15);

        $r42 = r1.<android.content.pm.PackageInfoLite: java.lang.String packageName>;

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.pm.extra.VERIFICATION_PACKAGE_NAME", $r42);

        $i14 = r1.<android.content.pm.PackageInfoLite: int versionCode>;

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_VERSION_CODE", $i14);

        $r39 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        if $r39 == null goto label27;

        $r68 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r69 = virtualinvoke $r68.<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>();

        if $r69 == null goto label23;

        $r81 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r80 = virtualinvoke $r81.<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>();

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.content.pm.extra.VERIFICATION_URI", $r80);

     label23:
        $r66 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r67 = virtualinvoke $r66.<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>();

        if $r67 == null goto label24;

        $r74 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r83 = virtualinvoke $r74.<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>();

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.ORIGINATING_URI", $r83);

     label24:
        $r64 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r65 = virtualinvoke $r64.<android.content.pm.VerificationParams: android.net.Uri getReferrer()>();

        if $r65 == null goto label25;

        $r77 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r76 = virtualinvoke $r77.<android.content.pm.VerificationParams: android.net.Uri getReferrer()>();

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REFERRER", $r76);

     label25:
        $r63 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i17 = virtualinvoke $r63.<android.content.pm.VerificationParams: int getOriginatingUid()>();

        if $i17 < 0 goto label26;

        $r70 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i20 = virtualinvoke $r70.<android.content.pm.VerificationParams: int getOriginatingUid()>();

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.ORIGINATING_UID", $i20);

     label26:
        $r73 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i19 = virtualinvoke $r73.<android.content.pm.VerificationParams: int getInstallerUid()>();

        if $i19 < 0 goto label27;

        $r72 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i18 = virtualinvoke $r72.<android.content.pm.VerificationParams: int getInstallerUid()>();

        virtualinvoke r105.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_INSTALLER_UID", $i18);

     label27:
        $r40 = new com.android.server.pm.PackageVerificationState;

        specialinvoke $r40.<com.android.server.pm.PackageVerificationState: void <init>(int,com.android.server.pm.PackageManagerService$InstallArgs)>(i2, r104);

        r4 = $r40;

        $r47 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r48 = $r47.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        virtualinvoke $r48.<android.util.SparseArray: void append(int,java.lang.Object)>(i4, r4);

        $r49 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r5 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$3000(com.android.server.pm.PackageManagerService,android.content.pm.PackageInfoLite,java.util.List,com.android.server.pm.PackageVerificationState)>($r49, r1, r3, r4);

        if r5 == null goto label30;

        i5 = interfaceinvoke r5.<java.util.List: int size()>();

        if i5 != 0 goto label28;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Additional verifiers required, but none installed.");

        i0 = -22;

        goto label30;

     label28:
        i6 = 0;

     label29:
        if i6 >= i5 goto label30;

        $r60 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i6);

        r6 = (android.content.ComponentName) $r60;

        $r62 = new android.content.Intent;

        specialinvoke $r62.<android.content.Intent: void <init>(android.content.Intent)>(r105);

        r8 = $r62;

        virtualinvoke r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r6);

        $r58 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r57 = $r58.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r59 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.os.UserHandle getUser()>();

        virtualinvoke $r57.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r8, $r59);

        i6 = i6 + 1;

        goto label29;

     label30:
        $r45 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r44 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r46 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2700(com.android.server.pm.PackageManagerService)>($r44);

        r106 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.ComponentName access$3100(com.android.server.pm.PackageManagerService,java.lang.String,java.util.List)>($r45, $r46, r3);

        if i0 != 1 goto label31;

        $r54 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r53 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2700(com.android.server.pm.PackageManagerService)>($r54);

        if $r53 == null goto label31;

        virtualinvoke r105.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r106);

        $r55 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r51 = $r55.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r50 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.os.UserHandle getUser()>();

        $r52 = new com.android.server.pm.PackageManagerService$InstallParams$1;

        specialinvoke $r52.<com.android.server.pm.PackageManagerService$InstallParams$1: void <init>(com.android.server.pm.PackageManagerService$InstallParams,int)>(r0, i4);

        virtualinvoke $r51.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r105, $r50, "android.permission.PACKAGE_VERIFICATION_AGENT", $r52, null, 0, null, null);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs> = null;

     label31:
        goto label33;

     label32:
        $r23 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r24 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$600(com.android.server.pm.PackageManagerService)>($r23);

        i0 = virtualinvoke r104.<com.android.server.pm.PackageManagerService$InstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>($r24, 1);

     label33:
        r0.<com.android.server.pm.PackageManagerService$InstallParams: int mRet> = i0;

        return;
    }

    void handleReturnCode()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        com.android.server.pm.PackageManagerService$InstallArgs $r1, $r2;
        int $i0;
        com.android.server.pm.PackageManagerService $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r2 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs>;

        $i0 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int mRet>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,int)>($r3, $r2, $i0);

     label1:
        return;
    }

    void handleServiceError()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$InstallArgs $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>($r1, r0);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs> = $r2;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int mRet> = -110;

        return;
    }

    public boolean isForwardLocked()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $i0 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
