class com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl extends android.content.IRestrictionsManager$Stub
{
    final android.content.Context mContext;
    private final android.os.IUserManager mUm;
    private final android.app.admin.IDevicePolicyManager mDpm;
    final com.android.server.restrictions.RestrictionsManagerService this$0;

    public void <init>(com.android.server.restrictions.RestrictionsManagerService, android.content.Context)
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        com.android.server.restrictions.RestrictionsManagerService r1;
        android.content.Context r2;
        android.os.IBinder $r3, $r5;
        android.os.IUserManager $r4;
        android.app.admin.IDevicePolicyManager $r6;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r1 := @parameter0: com.android.server.restrictions.RestrictionsManagerService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: com.android.server.restrictions.RestrictionsManagerService this$0> = r1;

        specialinvoke r0.<android.content.IRestrictionsManager$Stub: void <init>()>();

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.content.Context mContext> = r2;

        $r3 = staticinvoke <com.android.server.restrictions.RestrictionsManagerService: android.os.IBinder access$000(com.android.server.restrictions.RestrictionsManagerService,java.lang.String)>(r1, "user");

        $r4 = (android.os.IUserManager) $r3;

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.os.IUserManager mUm> = $r4;

        $r5 = staticinvoke <com.android.server.restrictions.RestrictionsManagerService: android.os.IBinder access$100(com.android.server.restrictions.RestrictionsManagerService,java.lang.String)>(r1, "device_policy");

        $r6 = (android.app.admin.IDevicePolicyManager) $r5;

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm> = $r6;

        return;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        java.lang.String r1;
        android.os.IUserManager $r2;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.os.IUserManager mUm>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>(r1);

        return $r3;
    }

    public boolean hasRestrictionsProvider() throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0;
        long l1;
        boolean z0, $z1;
        java.lang.Throwable r1, $r5;
        android.app.admin.IDevicePolicyManager $r2, $r3;
        android.content.ComponentName $r4;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r2 == null goto label7;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        $r4 = interfaceinvoke $r3.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i0);

        if $r4 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

     label7:
        return 0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void requestPermission(java.lang.String, java.lang.String, java.lang.String, android.os.PersistableBundle) throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        java.lang.String r1, r2, r3;
        android.os.PersistableBundle r4;
        int i0, i1;
        long l2;
        android.content.ComponentName r5;
        android.content.Intent r6, $r11;
        java.lang.Throwable r7, $r18;
        android.app.admin.IDevicePolicyManager $r8, $r9;
        android.content.Context $r16;
        android.os.UserHandle $r17;
        java.lang.IllegalStateException $r19;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.PersistableBundle;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r8 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r8 == null goto label6;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r9 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r5 = interfaceinvoke $r9.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i1);

        if r5 != null goto label2;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot request permission without a restrictions provider registered");

        throw $r19;

     label2:
        specialinvoke r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: void enforceCallerMatchesPackage(int,java.lang.String,java.lang.String)>(i0, r1, "Package name does not match caller ");

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.REQUEST_PERMISSION");

        r6 = $r11;

        virtualinvoke r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r5);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.PACKAGE_NAME", r1);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.REQUEST_TYPE", r2);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.REQUEST_ID", r3);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.content.extra.REQUEST_BUNDLE", r4);

        $r16 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.content.Context mContext>;

        $r17 = new android.os.UserHandle;

        specialinvoke $r17.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke $r16.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r6, $r17);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label6;

     label4:
        $r18 := @caughtexception;

        r7 = $r18;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.Intent createLocalApprovalIntent() throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0;
        long l1;
        android.content.ComponentName r1, $r14;
        java.lang.String r2, $r17, $r18;
        android.content.Intent r3, r5, $r10;
        android.content.pm.ResolveInfo r4;
        java.lang.Throwable r6, $r21;
        android.app.admin.IDevicePolicyManager $r7, $r8;
        android.content.pm.IPackageManager $r11;
        android.content.pm.ActivityInfo $r12, $r13, $r15, $r16;
        boolean $z0;
        java.lang.IllegalStateException $r19;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r7 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r7 == null goto label7;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r8 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r1 = interfaceinvoke $r8.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i0);

        if r1 != null goto label2;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot request permission without a restrictions provider registered");

        throw $r19;

     label2:
        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.REQUEST_LOCAL_APPROVAL");

        r3 = $r10;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r2);

        $r11 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r11.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r3, null, 0, i0);

        if r4 == null goto label4;

        $r13 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r13 == null goto label4;

        $r12 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z0 = $r12.<android.content.pm.ActivityInfo: boolean exported>;

        if $z0 == 0 goto label4;

        $r14 = new android.content.ComponentName;

        $r16 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r16.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r18 = $r15.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r17, $r18);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r14);

        r5 = r3;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r21 := @caughtexception;

        r6 = $r21;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r6;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void notifyPermissionResponse(java.lang.String, android.os.PersistableBundle) throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        java.lang.String r1, $r9;
        android.os.PersistableBundle r2;
        int i0, i1;
        long l2;
        android.content.ComponentName r3;
        android.content.Intent r4, $r8;
        java.lang.Throwable r5, $r14;
        android.app.admin.IDevicePolicyManager $r6, $r7;
        android.content.Context $r12;
        android.os.UserHandle $r13;
        java.lang.SecurityException $r15;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.PersistableBundle;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r6 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r6 == null goto label6;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r3 = interfaceinvoke $r7.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i1);

        if r3 != null goto label2;

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>("No restrictions provider registered for user");

        throw $r15;

     label2:
        $r9 = virtualinvoke r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        specialinvoke r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: void enforceCallerMatchesPackage(int,java.lang.String,java.lang.String)>(i0, $r9, "Restrictions provider does not match caller ");

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.PERMISSION_RESPONSE_RECEIVED");

        r4 = $r8;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.content.extra.RESPONSE_BUNDLE", r2);

        $r12 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.content.Context mContext>;

        $r13 = new android.os.UserHandle;

        specialinvoke $r13.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke $r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r4, $r13);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label6;

     label4:
        $r14 := @caughtexception;

        r5 = $r14;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void enforceCallerMatchesPackage(int, java.lang.String, java.lang.String)
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0;
        java.lang.String r1, r2, $r9;
        java.lang.String[] r3;
        android.content.pm.IPackageManager $r4;
        boolean $z0;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        $r4 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r3 == null goto label2;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r3, r1);

        if $z0 != 0 goto label2;

        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
