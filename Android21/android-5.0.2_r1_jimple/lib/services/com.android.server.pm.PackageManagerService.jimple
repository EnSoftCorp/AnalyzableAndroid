public class com.android.server.pm.PackageManagerService extends android.content.pm.IPackageManager$Stub
{
    static final java.lang.String TAG;
    static final boolean DEBUG_SETTINGS;
    static final boolean DEBUG_PREFERRED;
    static final boolean DEBUG_UPGRADE;
    private static final boolean DEBUG_INSTALL;
    private static final boolean DEBUG_REMOVE;
    private static final boolean DEBUG_BROADCASTS;
    private static final boolean DEBUG_SHOW_INFO;
    private static final boolean DEBUG_PACKAGE_INFO;
    private static final boolean DEBUG_INTENT_MATCHING;
    private static final boolean DEBUG_PACKAGE_SCANNING;
    private static final boolean DEBUG_VERIFY;
    private static final boolean DEBUG_DEXOPT;
    private static final boolean DEBUG_ABI_SELECTION;
    private static final int RADIO_UID;
    private static final int LOG_UID;
    private static final int NFC_UID;
    private static final int BLUETOOTH_UID;
    private static final int SHELL_UID;
    private static final int MAX_PERMISSION_TREE_FOOTPRINT;
    private static final java.lang.String INSTALL_PACKAGE_SUFFIX;
    static final int SCAN_NO_DEX;
    static final int SCAN_FORCE_DEX;
    static final int SCAN_UPDATE_SIGNATURE;
    static final int SCAN_NEW_INSTALL;
    static final int SCAN_NO_PATHS;
    static final int SCAN_UPDATE_TIME;
    static final int SCAN_DEFER_DEX;
    static final int SCAN_BOOTING;
    static final int SCAN_TRUSTED_OVERLAY;
    static final int SCAN_DELETE_DATA_ON_FAILURES;
    static final int SCAN_REPLACING;
    static final int REMOVE_CHATTY;
    private static final long WATCHDOG_TIMEOUT;
    private static final long DEFAULT_MANDATORY_FSTRIM_INTERVAL;
    private static final boolean DEFAULT_VERIFY_ENABLE;
    private static final long DEFAULT_VERIFICATION_TIMEOUT;
    private static final int DEFAULT_VERIFICATION_RESPONSE;
    static final java.lang.String DEFAULT_CONTAINER_PACKAGE;
    static final android.content.ComponentName DEFAULT_CONTAINER_COMPONENT;
    private static final java.lang.String PACKAGE_MIME_TYPE;
    private static final java.lang.String VENDOR_OVERLAY_DIR;
    private static java.lang.String sPreferredInstructionSet;
    final com.android.server.ServiceThread mHandlerThread;
    private static final java.lang.String IDMAP_PREFIX;
    private static final java.lang.String IDMAP_SUFFIX;
    final com.android.server.pm.PackageManagerService$PackageHandler mHandler;
    private java.util.ArrayList mPostSystemReadyMessages;
    final int mSdkVersion;
    final android.content.Context mContext;
    final boolean mFactoryTest;
    final boolean mOnlyCore;
    final boolean mLazyDexOpt;
    final android.util.DisplayMetrics mMetrics;
    final int mDefParseFlags;
    final java.lang.String[] mSeparateProcesses;
    final java.io.File mAppDataDir;
    final java.io.File mUserAppDataDir;
    final java.lang.String mAsecInternalPath;
    final com.android.server.pm.Installer mInstaller;
    final java.io.File mAppInstallDir;
    private java.io.File mAppLib32InstallDir;
    final java.io.File mDrmAppPrivateInstallDir;
    final java.lang.Object mInstallLock;
    final java.util.HashMap mPackages;
    final java.util.HashMap mOverlays;
    final com.android.server.pm.Settings mSettings;
    boolean mRestoredSettings;
    final int[] mGlobalGids;
    final android.util.SparseArray mSystemPermissions;
    final java.util.HashMap mAvailableFeatures;
    boolean mFoundPolicyFile;
    private boolean mShouldRestoreconData;
    final java.util.HashMap mSharedLibraries;
    final com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities;
    final com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers;
    final com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices;
    final com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders;
    final java.util.HashMap mProvidersByAuthority;
    final java.util.HashMap mInstrumentation;
    final java.util.HashMap mPermissionGroups;
    final java.util.HashSet mTransferedPackages;
    final java.util.HashSet mProtectedBroadcasts;
    final android.util.SparseArray mPendingVerification;
    final android.util.ArrayMap mAppOpPermissionPackages;
    final com.android.server.pm.PackageInstallerService mInstallerService;
    java.util.HashSet mDeferredDexOpt;
    android.util.SparseBooleanArray mUserNeedsBadging;
    private int mPendingVerificationToken;
    volatile boolean mSystemReady;
    volatile boolean mSafeMode;
    volatile boolean mHasSystemUidErrors;
    android.content.pm.ApplicationInfo mAndroidApplication;
    final android.content.pm.ActivityInfo mResolveActivity;
    final android.content.pm.ResolveInfo mResolveInfo;
    android.content.ComponentName mResolveComponentName;
    android.content.pm.PackageParser$Package mPlatformPackage;
    android.content.ComponentName mCustomResolverComponentName;
    boolean mResolverReplaced;
    final com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts;
    private com.android.internal.app.IMediaContainerService mContainerService;
    static final int SEND_PENDING_BROADCAST;
    static final int MCS_BOUND;
    static final int END_COPY;
    static final int INIT_COPY;
    static final int MCS_UNBIND;
    static final int START_CLEANING_PACKAGE;
    static final int FIND_INSTALL_LOC;
    static final int POST_INSTALL;
    static final int MCS_RECONNECT;
    static final int MCS_GIVE_UP;
    static final int UPDATED_MEDIA_STATUS;
    static final int WRITE_SETTINGS;
    static final int WRITE_PACKAGE_RESTRICTIONS;
    static final int PACKAGE_VERIFIED;
    static final int CHECK_PENDING_VERIFICATION;
    static final int WRITE_SETTINGS_DELAY;
    static final int BROADCAST_DELAY;
    static com.android.server.pm.UserManagerService sUserManager;
    private java.util.HashSet mDirtyUsers;
    private final com.android.server.pm.PackageManagerService$DefaultContainerConnection mDefContainerConn;
    final android.util.SparseArray mRunningInstalls;
    int mNextInstallToken;
    private final java.lang.String mRequiredVerifierPackage;
    private final com.android.server.pm.PackageManagerService$PackageUsage mPackageUsage;
    static final int DEX_OPT_SKIPPED;
    static final int DEX_OPT_PERFORMED;
    static final int DEX_OPT_DEFERRED;
    static final int DEX_OPT_FAILED;
    static final int UPDATE_PERMISSIONS_ALL;
    static final int UPDATE_PERMISSIONS_REPLACE_PKG;
    static final int UPDATE_PERMISSIONS_REPLACE_ALL;
    private static final java.util.Comparator mResolvePrioritySorter;
    private static final java.util.Comparator mProviderInitOrderSorter;
    static final boolean DEBUG_SD_INSTALL;
    private static final java.lang.String SD_ENCRYPTION_KEYSTORE_NAME;
    private static final java.lang.String SD_ENCRYPTION_ALGORITHM;
    private boolean mMediaMounted;

    android.os.Bundle extrasForInstallResult(com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r1;
        android.os.Bundle r2, $r3;
        int $i0;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r2 = null;

        $i0 = r1.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        lookupswitch($i0)
        {
            case -112: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        $r4 = r1.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String origPermission>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.content.pm.extra.FAILURE_EXISTING_PERMISSION", $r4);

        $r5 = r1.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String origPackage>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.content.pm.extra.FAILURE_EXISTING_PACKAGE", $r5);

     label2:
        return r2;
    }

    void scheduleWriteSettingsLocked()
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$PackageHandler $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.PackageManagerService$PackageHandler: boolean hasMessages(int)>(13);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(13, 10000L);

     label1:
        return;
    }

    void scheduleWritePackageRestrictionsLocked(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService $r1;
        boolean $z0, $z2;
        java.util.HashSet $r2;
        java.lang.Integer $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4, $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $z2 = virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: boolean hasMessages(int)>(14);

        if $z2 != 0 goto label2;

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(14, 10000L);

     label2:
        return;
    }

    public static final com.android.server.pm.PackageManagerService main(android.content.Context, com.android.server.pm.Installer, boolean, boolean)
    {
        android.content.Context r0;
        com.android.server.pm.Installer r1;
        boolean z0, z1;
        com.android.server.pm.PackageManagerService r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.pm.Installer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = new com.android.server.pm.PackageManagerService;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>(r0, r1, z0, z1);

        r2 = $r3;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("package", r2);

        return r2;
    }

    static java.lang.String[] splitString(java.lang.String, char)
    {
        java.lang.String r0, $r2, $r3;
        char c0;
        int i1, i2, i3, $i4, $i5, $i6, i7, i8, i9, i10;
        java.lang.String[] r1;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        i1 = 1;

        i2 = 0;

     label1:
        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c0, i2);

        i7 = $i4;

        if $i4 < 0 goto label2;

        i1 = i1 + 1;

        i2 = i7 + 1;

        goto label1;

     label2:
        r1 = newarray (java.lang.String)[i1];

        i8 = 0;

        i9 = 0;

        i3 = 0;

     label3:
        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c0, i8);

        i10 = $i5;

        if $i5 < 0 goto label4;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i3, i10);

        r1[i9] = $r3;

        i9 = i9 + 1;

        i8 = i10 + 1;

        i3 = i8;

        goto label3;

     label4:
        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i3, $i6);

        r1[i9] = $r2;

        return r1;
    }

    private static void getDefaultDisplayMetrics(android.content.Context, android.util.DisplayMetrics)
    {
        android.content.Context r0;
        android.util.DisplayMetrics r1;
        android.hardware.display.DisplayManager r2;
        java.lang.Object $r3;
        android.view.Display $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.DisplayMetrics;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        r2 = (android.hardware.display.DisplayManager) $r3;

        $r4 = virtualinvoke r2.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        return;
    }

    public void <init>(android.content.Context, com.android.server.pm.Installer, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context r1;
        com.android.server.pm.Installer r2, $r119, $r227, $r232, $r237, $r239;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, z30;
        java.lang.String r3, r11, r14, r16, r17, r20, r21, r23, $r52, $r53, $r84, $r99, $r104, $r107, $r109, $r130, $r131, $r133, $r135, $r143, $r144, $r176, $r181, $r184, $r185, $r189, $r191, $r205, $r208, $r210, $r219, $r224, $r225, $r226, $r234, $r236, $r241, $r244, $r248, $r254, $r257, $r261, $r268, $r274, $r279, $r282, $r284, $r287, $r289, r296, r299, r307, r320, r322, r328;
        com.android.server.SystemConfig r4;
        java.lang.Object r5, $r30, $r69, $r78, $r153, $r154, $r157, $r161, $r163, $r167, $r182, $r186, $r193, $r198, $r229, $r230, $r252, $r258, $r263;
        java.util.HashMap r6, $r29, $r31, $r34, $r36, $r37, $r38, $r64, $r70, $r80, $r92, $r138, $r156, $r162, $r183, $r192, $r201, $r231, $r238, $r245, $r260;
        java.io.File r7, $r71, $r72, $r73, $r81, $r82, $r83, $r93, $r95, $r100, $r101, $r102, $r103, $r115, $r116, $r117, $r120, $r141, $r158, $r159, $r190, $r221, $r233, $r235, r304, r308, r310, r311, r312, r313, r314, r323;
        android.util.ArrayMap r8, $r40, $r112, r295, r316;
        int i0, i1, i2, i3, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i21, $i23, $i24, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i41, i42, i43, i44, i45, i46, i47, i48;
        com.android.server.SystemConfig$PermissionEntry r9;
        com.android.server.pm.BasePermission r10, $r255;
        java.util.HashSet r12, $r42, $r43, $r51, $r96, $r160;
        java.lang.String[] r13, r15, $r90, $r97, $r246, r297, r298, r301, r302, r305, r306;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r18, $r259;
        java.util.Iterator r19, r317, r319, r325, r327;
        byte b4, b5, $b20, $b25;
        com.android.server.pm.PackageSetting r22, r24, r27, $r199;
        android.content.pm.PackageParser$Package r25, r321;
        java.lang.Throwable r26, r28, $r269, $r286;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r32, $r35;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r33;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r39;
        android.util.SparseArray $r41, $r49, $r67;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r44;
        android.content.pm.ResolveInfo $r45;
        android.content.pm.ActivityInfo $r46;
        android.util.SparseBooleanArray $r47;
        com.android.server.pm.PackageManagerService$PackageUsage $r48, $r124;
        com.android.server.pm.PackageManagerService$DefaultContainerConnection $r50;
        android.util.DisplayMetrics $r54, $r60;
        long $l7, $l15, $l16, $l17, $l22, $l27, l40;
        com.android.server.pm.Settings $r55, $r56, $r57, $r58, $r59, $r61, $r62, $r86, $r111, $r113, $r114, $r127, $r128, $r129, $r132, $r134, $r136, $r137, $r149, $r152, $r166, $r171, $r179, $r187, $r188, $r200, $r223, $r253, $r262;
        com.android.server.ServiceThread $r63, $r66, $r76;
        com.android.server.pm.PackageManagerService$PackageHandler $r65, $r75;
        int[] $r68, $r249, $r250, $r251, $r256;
        com.android.server.Watchdog $r74;
        android.os.Looper $r77;
        com.android.server.pm.UserManagerService $r79, $r87;
        java.util.List $r85, r300;
        android.content.ComponentName $r88;
        android.content.res.Resources $r89;
        java.lang.Object[] $r91;
        java.lang.StringBuilder $r94, $r98, $r105, $r106, $r108, $r110, $r121, $r122, $r123, $r126, $r145, $r146, $r147, $r148, $r150, $r151, $r155, $r164, $r165, $r168, $r169, $r170, $r173, $r174, $r175, $r177, $r178, $r180, $r194, $r195, $r196, $r197, $r203, $r204, $r206, $r207, $r209, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r220, $r222, $r240, $r242, $r247, $r265, $r266, $r267, $r271, $r272, $r273, $r276, $r278, $r280, $r281, $r283, $r285, $r288, $r290, $r291, $r292, $r293;
        java.util.ArrayList $r118, r315, r318;
        float $f0, $f1;
        java.util.Collection $r125, $r202, $r228;
        java.util.Set $r139;
        com.android.server.pm.PackageInstallerService $r140;
        java.lang.Runtime $r142;
        android.content.pm.ApplicationInfo $r172;
        com.android.server.pm.PackageManagerException $r243, r324;
        java.io.FileNotFoundException $r264, $r270;
        java.io.IOException $r275, $r277, $r294, r303, r309;
        short s49;
        com.android.server.pm.SharedUserSetting r326;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.Installer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.content.pm.IPackageManager$Stub: void <init>()>();

        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        r0.<com.android.server.pm.PackageManagerService: int mSdkVersion> = $i6;

        $r30 = new java.lang.Object;

        specialinvoke $r30.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock> = $r30;

        $r31 = new java.util.HashMap;

        specialinvoke $r31.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages> = $r31;

        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays> = $r29;

        $z2 = staticinvoke <com.android.server.pm.SELinuxMMAC: boolean shouldRestorecon()>();

        r0.<com.android.server.pm.PackageManagerService: boolean mShouldRestoreconData> = $z2;

        $r34 = new java.util.HashMap;

        specialinvoke $r34.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries> = $r34;

        $r35 = new com.android.server.pm.PackageManagerService$ActivityIntentResolver;

        specialinvoke $r35.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities> = $r35;

        $r32 = new com.android.server.pm.PackageManagerService$ActivityIntentResolver;

        specialinvoke $r32.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers> = $r32;

        $r33 = new com.android.server.pm.PackageManagerService$ServiceIntentResolver;

        specialinvoke $r33.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices> = $r33;

        $r39 = new com.android.server.pm.PackageManagerService$ProviderIntentResolver;

        specialinvoke $r39.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders> = $r39;

        $r38 = new java.util.HashMap;

        specialinvoke $r38.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority> = $r38;

        $r37 = new java.util.HashMap;

        specialinvoke $r37.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation> = $r37;

        $r36 = new java.util.HashMap;

        specialinvoke $r36.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups> = $r36;

        $r43 = new java.util.HashSet;

        specialinvoke $r43.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages> = $r43;

        $r42 = new java.util.HashSet;

        specialinvoke $r42.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mProtectedBroadcasts> = $r42;

        $r41 = new android.util.SparseArray;

        specialinvoke $r41.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification> = $r41;

        $r40 = new android.util.ArrayMap;

        specialinvoke $r40.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages> = $r40;

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt> = null;

        $r47 = new android.util.SparseBooleanArray;

        specialinvoke $r47.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseBooleanArray mUserNeedsBadging> = $r47;

        r0.<com.android.server.pm.PackageManagerService: int mPendingVerificationToken> = 0;

        $r46 = new android.content.pm.ActivityInfo;

        specialinvoke $r46.<android.content.pm.ActivityInfo: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity> = $r46;

        $r45 = new android.content.pm.ResolveInfo;

        specialinvoke $r45.<android.content.pm.ResolveInfo: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo> = $r45;

        r0.<com.android.server.pm.PackageManagerService: boolean mResolverReplaced> = 0;

        $r44 = new com.android.server.pm.PackageManagerService$PendingPackageBroadcasts;

        specialinvoke $r44.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts> = $r44;

        r0.<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService mContainerService> = null;

        $r51 = new java.util.HashSet;

        specialinvoke $r51.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers> = $r51;

        $r50 = new com.android.server.pm.PackageManagerService$DefaultContainerConnection;

        specialinvoke $r50.<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection mDefContainerConn> = $r50;

        $r49 = new android.util.SparseArray;

        specialinvoke $r49.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mRunningInstalls> = $r49;

        r0.<com.android.server.pm.PackageManagerService: int mNextInstallToken> = 1;

        $r48 = new com.android.server.pm.PackageManagerService$PackageUsage;

        specialinvoke $r48.<com.android.server.pm.PackageManagerService$PackageUsage: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageUsage mPackageUsage> = $r48;

        r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted> = 0;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3060, $l7);

        $i8 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        if $i8 > 0 goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "**** ro.build.version.sdk not set!");

     label01:
        r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.PackageManagerService: boolean mFactoryTest> = z0;

        r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore> = z1;

        $r52 = "eng";

        $r53 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.build.type");

        $z3 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        r0.<com.android.server.pm.PackageManagerService: boolean mLazyDexOpt> = $z3;

        $r54 = new android.util.DisplayMetrics;

        specialinvoke $r54.<android.util.DisplayMetrics: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics> = $r54;

        $r57 = new com.android.server.pm.Settings;

        specialinvoke $r57.<com.android.server.pm.Settings: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings> = $r57;

        $r58 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r58.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.system", 1000, 1073741825);

        $r59 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r59.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.phone", 1001, 1073741825);

        $r55 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r55.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.log", 1007, 1073741825);

        $r56 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r56.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.nfc", 1027, 1073741825);

        $r61 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r61.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.bluetooth", 1002, 1073741825);

        $r62 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r62.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.shell", 2000, 1073741825);

        r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.separate_processes");

        if r3 == null goto label03;

        $i38 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i38 <= 0 goto label03;

        $r248 = "*";

        $z29 = virtualinvoke $r248.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z29 == 0 goto label02;

        r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags> = 8;

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses> = null;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Running with debug.separate_processes: * (ALL)");

        goto label04;

     label02:
        r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags> = 0;

        $r246 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses> = $r246;

        $r247 = new java.lang.StringBuilder;

        specialinvoke $r247.<java.lang.StringBuilder: void <init>()>();

        $r242 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running with debug.separate_processes: ");

        $r240 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r241);

        goto label04;

     label03:
        r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags> = 0;

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses> = null;

     label04:
        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller> = r2;

        $r60 = r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        staticinvoke <com.android.server.pm.PackageManagerService: void getDefaultDisplayMetrics(android.content.Context,android.util.DisplayMetrics)>(r1, $r60);

        r4 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r68 = virtualinvoke r4.<com.android.server.SystemConfig: int[] getGlobalGids()>();

        r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids> = $r68;

        $r67 = virtualinvoke r4.<com.android.server.SystemConfig: android.util.SparseArray getSystemPermissions()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mSystemPermissions> = $r67;

        $r70 = virtualinvoke r4.<com.android.server.SystemConfig: java.util.HashMap getAvailableFeatures()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures> = $r70;

        $r69 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r5 = $r69;

        entermonitor $r69;

     label05:
        $r64 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r6 = $r64;

        entermonitor $r64;

     label06:
        $r63 = new com.android.server.ServiceThread;

        specialinvoke $r63.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("PackageManager", 10, 1);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.ServiceThread mHandlerThread> = $r63;

        $r66 = r0.<com.android.server.pm.PackageManagerService: com.android.server.ServiceThread mHandlerThread>;

        virtualinvoke $r66.<com.android.server.ServiceThread: void start()>();

        $r65 = new com.android.server.pm.PackageManagerService$PackageHandler;

        $r76 = r0.<com.android.server.pm.PackageManagerService: com.android.server.ServiceThread mHandlerThread>;

        $r77 = virtualinvoke $r76.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r65.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(com.android.server.pm.PackageManagerService,android.os.Looper)>(r0, $r77);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler> = $r65;

        $r74 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r75 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r74.<com.android.server.Watchdog: void addThread(android.os.Handler,long)>($r75, 600000L);

        r7 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r73 = new java.io.File;

        specialinvoke $r73.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "data");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mAppDataDir> = $r73;

        $r71 = new java.io.File;

        specialinvoke $r71.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "app");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir> = $r71;

        $r72 = new java.io.File;

        specialinvoke $r72.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "app-lib");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mAppLib32InstallDir> = $r72;

        $r83 = new java.io.File;

        specialinvoke $r83.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "app-asec");

        $r84 = virtualinvoke $r83.<java.io.File: java.lang.String getPath()>();

        r0.<com.android.server.pm.PackageManagerService: java.lang.String mAsecInternalPath> = $r84;

        $r81 = new java.io.File;

        specialinvoke $r81.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "user");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mUserAppDataDir> = $r81;

        $r82 = new java.io.File;

        specialinvoke $r82.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "app-private");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir> = $r82;

        $r79 = new com.android.server.pm.UserManagerService;

        $r78 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        $r80 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        specialinvoke $r79.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object)>(r1, r0, $r78, $r80);

        <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager> = $r79;

        r8 = virtualinvoke r4.<com.android.server.SystemConfig: android.util.ArrayMap getPermissions()>();

        i0 = 0;

     label07:
        $i10 = virtualinvoke r8.<android.util.ArrayMap: int size()>();

        if i0 >= $i10 goto label10;

        $r263 = virtualinvoke r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r9 = (com.android.server.SystemConfig$PermissionEntry) $r263;

        $r262 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r260 = $r262.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r261 = r9.<com.android.server.SystemConfig$PermissionEntry: java.lang.String name>;

        $r252 = virtualinvoke $r260.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r261);

        r10 = (com.android.server.pm.BasePermission) $r252;

        if r10 != null goto label08;

        $r255 = new com.android.server.pm.BasePermission;

        $r254 = r9.<com.android.server.SystemConfig$PermissionEntry: java.lang.String name>;

        specialinvoke $r255.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r254, "android", 1);

        r10 = $r255;

        $r253 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r245 = $r253.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r244 = r9.<com.android.server.SystemConfig$PermissionEntry: java.lang.String name>;

        virtualinvoke $r245.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r244, r10);

     label08:
        $r251 = r9.<com.android.server.SystemConfig$PermissionEntry: int[] gids>;

        if $r251 == null goto label09;

        $r249 = r10.<com.android.server.pm.BasePermission: int[] gids>;

        $r250 = r9.<com.android.server.SystemConfig$PermissionEntry: int[] gids>;

        $r256 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r249, $r250);

        r10.<com.android.server.pm.BasePermission: int[] gids> = $r256;

     label09:
        i0 = i0 + 1;

        goto label07;

     label10:
        r295 = virtualinvoke r4.<com.android.server.SystemConfig: android.util.ArrayMap getSharedLibraries()>();

        i39 = 0;

     label11:
        $i9 = virtualinvoke r295.<android.util.ArrayMap: int size()>();

        if i39 >= $i9 goto label12;

        $r231 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r230 = virtualinvoke r295.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i39);

        $r259 = new com.android.server.pm.PackageManagerService$SharedLibraryEntry;

        $r258 = virtualinvoke r295.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i39);

        $r257 = (java.lang.String) $r258;

        specialinvoke $r259.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: void <init>(java.lang.String,java.lang.String)>($r257, null);

        virtualinvoke $r231.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r230, $r259);

        i39 = i39 + 1;

        goto label11;

     label12:
        $z5 = staticinvoke <com.android.server.pm.SELinuxMMAC: boolean readInstallPolicy()>();

        r0.<com.android.server.pm.PackageManagerService: boolean mFoundPolicyFile> = $z5;

        $r86 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r87 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r85 = virtualinvoke $r87.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(0);

        $i11 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $z4 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        $z7 = virtualinvoke $r86.<com.android.server.pm.Settings: boolean readLPw(com.android.server.pm.PackageManagerService,java.util.List,int,boolean)>(r0, $r85, $i11, $z4);

        r0.<com.android.server.pm.PackageManagerService: boolean mRestoredSettings> = $z7;

        $r89 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r296 = virtualinvoke $r89.<android.content.res.Resources: java.lang.String getString(int)>(17039424);

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r296);

        if $z6 == 0 goto label13;

        goto label14;

     label13:
        $r88 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r296);

        r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName> = $r88;

     label14:
        l40 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3070, l40);

        $r96 = new java.util.HashSet;

        specialinvoke $r96.<java.util.HashSet: void <init>()>();

        r12 = $r96;

        r11 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("BOOTCLASSPATH");

        r14 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("SYSTEMSERVERCLASSPATH");

        if r11 == null goto label17;

        r13 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] splitString(java.lang.String,char)>(r11, 58);

        r15 = r13;

        i1 = lengthof r15;

        i2 = 0;

     label15:
        if i2 >= i1 goto label16;

        r16 = r15[i2];

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r16);

        i2 = i2 + 1;

        goto label15;

     label16:
        goto label18;

     label17:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "No BOOTCLASSPATH found!");

     label18:
        if r14 == null goto label21;

        r297 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] splitString(java.lang.String,char)>(r14, 58);

        r298 = r297;

        i41 = lengthof r298;

        i42 = 0;

     label19:
        if i42 >= i41 goto label20;

        r299 = r298[i42];

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r299);

        i42 = i42 + 1;

        goto label19;

     label20:
        goto label22;

     label21:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "No SYSTEMSERVERCLASSPATH found!");

     label22:
        r300 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List getAllInstructionSets()>();

        $i13 = interfaceinvoke r300.<java.util.List: int size()>();

        $r97 = newarray (java.lang.String)[$i13];

        $r91 = interfaceinvoke r300.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r97);

        $r90 = (java.lang.String[]) $r91;

        r301 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>($r90);

        $r92 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $i12 = virtualinvoke $r92.<java.util.HashMap: int size()>();

        if $i12 <= 0 goto label32;

        r302 = r301;

        i43 = lengthof r302;

        i3 = 0;

     label23:
        if i3 >= i43 goto label32;

        r17 = r302[i3];

        $r238 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r228 = virtualinvoke $r238.<java.util.HashMap: java.util.Collection values()>();

        r19 = interfaceinvoke $r228.<java.util.Collection: java.util.Iterator iterator()>();

     label24:
        $z25 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label31;

        $r229 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r229;

        r20 = r18.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        if r20 != null goto label25;

        goto label24;

     label25:
        b4 = staticinvoke <dalvik.system.DexFile: byte isDexOptNeededInternal(java.lang.String,java.lang.String,java.lang.String,boolean)>(r20, null, r17, 0);

        if b4 == 0 goto label27;

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r20);

        if b4 != 2 goto label26;

        $r232 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r232.<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String)>(r20, 1000, 1, r17);

        goto label27;

     label26:
        $r227 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r227.<com.android.server.pm.Installer: int patchoat(java.lang.String,int,boolean,java.lang.String)>(r20, 1000, 1, r17);

     label27:
        goto label30;

     label28:
        $r270 := @caughtexception;

        $r271 = new java.lang.StringBuilder;

        specialinvoke $r271.<java.lang.StringBuilder: void <init>()>();

        $r272 = virtualinvoke $r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Library not found: ");

        $r273 = virtualinvoke $r272.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r274 = virtualinvoke $r273.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r274);

        goto label30;

     label29:
        $r294 := @caughtexception;

        r303 = $r294;

        $r293 = new java.lang.StringBuilder;

        specialinvoke $r293.<java.lang.StringBuilder: void <init>()>();

        $r292 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot dexopt ");

        $r291 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r290 = virtualinvoke $r291.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; is it an APK or JAR? ");

        $r289 = virtualinvoke r303.<java.io.IOException: java.lang.String getMessage()>();

        $r288 = virtualinvoke $r290.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r289);

        $r287 = virtualinvoke $r288.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r287);

     label30:
        goto label24;

     label31:
        i3 = i3 + 1;

        goto label23;

     label32:
        $r93 = new java.io.File;

        $r95 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r93.<java.io.File: void <init>(java.io.File,java.lang.String)>($r95, "framework");

        r304 = $r93;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke r304.<java.io.File: java.lang.String getPath()>();

        $r105 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/framework-res.apk");

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>($r107);

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke r304.<java.io.File: java.lang.String getPath()>();

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r98 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/core-libart.jar");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>($r99);

        r305 = virtualinvoke r304.<java.io.File: java.lang.String[] list()>();

        if r305 == null goto label43;

        r306 = r301;

        i44 = lengthof r306;

        i45 = 0;

     label33:
        if i45 >= i44 goto label43;

        r307 = r306[i45];

        i46 = 0;

     label34:
        $i37 = lengthof r305;

        if i46 >= $i37 goto label42;

        $r233 = new java.io.File;

        $r234 = r305[i46];

        specialinvoke $r233.<java.io.File: void <init>(java.io.File,java.lang.String)>(r304, $r234);

        r308 = $r233;

        r21 = virtualinvoke r308.<java.io.File: java.lang.String getPath()>();

        $z26 = virtualinvoke r12.<java.util.HashSet: boolean contains(java.lang.Object)>(r21);

        if $z26 == 0 goto label35;

        goto label41;

     label35:
        $z28 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z28 != 0 goto label36;

        $z27 = virtualinvoke r21.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");

        if $z27 != 0 goto label36;

        goto label41;

     label36:
        b5 = staticinvoke <dalvik.system.DexFile: byte isDexOptNeededInternal(java.lang.String,java.lang.String,java.lang.String,boolean)>(r21, null, r307, 0);

        if b5 != 2 goto label37;

        $r237 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r237.<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String)>(r21, 1000, 1, r307);

        goto label38;

     label37:
        if b5 != 1 goto label38;

        $r239 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r239.<com.android.server.pm.Installer: int patchoat(java.lang.String,int,boolean,java.lang.String)>(r21, 1000, 1, r307);

     label38:
        goto label41;

     label39:
        $r264 := @caughtexception;

        $r265 = new java.lang.StringBuilder;

        specialinvoke $r265.<java.lang.StringBuilder: void <init>()>();

        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jar not found: ");

        $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r268 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r268);

        goto label41;

     label40:
        $r277 := @caughtexception;

        r309 = $r277;

        $r276 = new java.lang.StringBuilder;

        specialinvoke $r276.<java.lang.StringBuilder: void <init>()>();

        $r278 = virtualinvoke $r276.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading jar: ");

        $r280 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r279 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r279, r309);

     label41:
        i46 = i46 + 1;

        goto label34;

     label42:
        i45 = i45 + 1;

        goto label33;

     label43:
        $r100 = new java.io.File;

        specialinvoke $r100.<java.io.File: void <init>(java.lang.String)>("/vendor/overlay");

        r310 = $r100;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r310, 65, 928, 0L);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r304, 193, 418, 0L);

        $r101 = new java.io.File;

        $r102 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r101.<java.io.File: void <init>(java.io.File,java.lang.String)>($r102, "priv-app");

        r311 = $r101;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r311, 193, 416, 0L);

        $r103 = new java.io.File;

        $r117 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r103.<java.io.File: void <init>(java.io.File,java.lang.String)>($r117, "app");

        r312 = $r103;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r312, 65, 416, 0L);

        $r116 = new java.io.File;

        specialinvoke $r116.<java.io.File: void <init>(java.lang.String)>("/vendor/app");

        r313 = $r116;

     label44:
        r313 = virtualinvoke r313.<java.io.File: java.io.File getCanonicalFile()>();

     label45:
        goto label47;

     label46:
        $r275 := @caughtexception;

     label47:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r313, 65, 416, 0L);

        $r115 = new java.io.File;

        $r120 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        specialinvoke $r115.<java.io.File: void <init>(java.io.File,java.lang.String)>($r120, "app");

        r314 = $r115;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r314, 65, 416, 0L);

        $r119 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r119.<com.android.server.pm.Installer: int moveFiles()>();

        $r118 = new java.util.ArrayList;

        specialinvoke $r118.<java.util.ArrayList: void <init>()>();

        r315 = $r118;

        $r112 = new android.util.ArrayMap;

        specialinvoke $r112.<android.util.ArrayMap: void <init>()>();

        r316 = $r112;

        $z8 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        if $z8 != 0 goto label54;

        $r200 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r201 = $r200.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r202 = virtualinvoke $r201.<java.util.HashMap: java.util.Collection values()>();

        r317 = interfaceinvoke $r202.<java.util.Collection: java.util.Iterator iterator()>();

     label48:
        $z21 = interfaceinvoke r317.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label54;

        $r182 = interfaceinvoke r317.<java.util.Iterator: java.lang.Object next()>();

        r24 = (com.android.server.pm.PackageSetting) $r182;

        $i31 = r24.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i30 = $i31 & 1;

        if $i30 != 0 goto label49;

        goto label48;

     label49:
        $r183 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r184 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r186 = virtualinvoke $r183.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r184);

        r25 = (android.content.pm.PackageParser$Package) $r186;

        if r25 == null goto label50;

        $r223 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r224 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z24 = virtualinvoke $r223.<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>($r224);

        if $z24 == 0 goto label48;

        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        $r209 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting better updated system app for ");

        $r208 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r207 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r208);

        $r206 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; removing system app.  Last known codePath=");

        $r205 = r24.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r204 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r205);

        $r203 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", installStatus=");

        $i34 = r24.<com.android.server.pm.PackageSetting: int installStatus>;

        $r215 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r214 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", versionCode=");

        $i36 = r24.<com.android.server.pm.PackageSetting: int versionCode>;

        $r213 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r212 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanned versionCode=");

        $i35 = r25.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r211 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        $r210 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r210);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>(r24, 1);

        $r236 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r235 = r24.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        virtualinvoke r316.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r236, $r235);

        goto label48;

     label50:
        $r187 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r185 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z22 = virtualinvoke $r187.<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>($r185);

        if $z22 != 0 goto label51;

        interfaceinvoke r317.<java.util.Iterator: void remove()>();

        $r220 = new java.lang.StringBuilder;

        specialinvoke $r220.<java.lang.StringBuilder: void <init>()>();

        $r218 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r219 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r216 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r219);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer exists; wiping its data");

        $r225 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r225);

        $r226 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r226);

        goto label53;

     label51:
        $r188 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r189 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r22 = virtualinvoke $r188.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r189);

        $r190 = r22.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        if $r190 == null goto label52;

        $r221 = r22.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z23 = virtualinvoke $r221.<java.io.File: boolean exists()>();

        if $z23 != 0 goto label53;

     label52:
        $r191 = r24.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r315.<java.util.List: boolean add(java.lang.Object)>($r191);

     label53:
        goto label48;

     label54:
        $r111 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r318 = virtualinvoke $r111.<com.android.server.pm.Settings: java.util.ArrayList getListOfIncompleteInstallPackagesLPr()>();

        i47 = 0;

     label55:
        $i14 = virtualinvoke r318.<java.util.ArrayList: int size()>();

        if i47 >= $i14 goto label56;

        $r198 = virtualinvoke r318.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        $r199 = (com.android.server.pm.PackageSetting) $r198;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void cleanupInstallFailedPackage(com.android.server.pm.PackageSetting)>($r199);

        i47 = i47 + 1;

        goto label55;

     label56:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void deleteTempPackageFiles()>();

        $r114 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r114.<com.android.server.pm.Settings: void pruneSharedUsersLPw()>();

        $z9 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        if $z9 != 0 goto label71;

        $l27 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3080, $l27);

        $r158 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>($r158, 0, 416, 0L);

        $r159 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>($r159, 16, 416, 0L);

        r319 = interfaceinvoke r315.<java.util.List: java.util.Iterator iterator()>();

     label57:
        $z15 = interfaceinvoke r319.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label60;

        $r163 = interfaceinvoke r319.<java.util.Iterator: java.lang.Object next()>();

        r320 = (java.lang.String) $r163;

        $r162 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r167 = virtualinvoke $r162.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r320);

        r321 = (android.content.pm.PackageParser$Package) $r167;

        $r166 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r166.<com.android.server.pm.Settings: void removeDisabledSystemPackageLPw(java.lang.String)>(r320);

        if r321 != null goto label58;

        $r194 = new java.lang.StringBuilder;

        specialinvoke $r194.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated system package ");

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r320);

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer exists; wiping its data");

        r23 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>(r320);

        goto label59;

     label58:
        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r164 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated system app + ");

        $r170 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r320);

        $r169 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer present; removing system privileges for ");

        $r168 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r320);

        r23 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>();

        $r172 = r321.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i29 = $r172.<android.content.pm.ApplicationInfo: int flags>;

        $i28 = $i29 & -2;

        $r172.<android.content.pm.ApplicationInfo: int flags> = $i28;

        $r171 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r192 = $r171.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r193 = virtualinvoke $r192.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r320);

        r27 = (com.android.server.pm.PackageSetting) $r193;

        $i32 = r27.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i33 = $i32 & -2;

        r27.<com.android.server.pm.PackageSetting: int pkgFlags> = $i33;

     label59:
        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, r23);

        goto label57;

     label60:
        i48 = 0;

     label61:
        $i26 = virtualinvoke r316.<android.util.ArrayMap: int size()>();

        if i48 >= $i26 goto label71;

        $r157 = virtualinvoke r316.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i48);

        r322 = (java.lang.String) $r157;

        $r156 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $z14 = virtualinvoke $r156.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r322);

        if $z14 != 0 goto label70;

        $r154 = virtualinvoke r316.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i48);

        r323 = (java.io.File) $r154;

        $r155 = new java.lang.StringBuilder;

        specialinvoke $r155.<java.lang.StringBuilder: void <init>()>();

        $r175 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected better ");

        $r173 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r322);

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but never showed up; reverting to system");

        $r176 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r176);

        $z19 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>(r311, r323);

        if $z19 == 0 goto label62;

        s49 = 193;

        goto label66;

     label62:
        $z17 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>(r312, r323);

        if $z17 == 0 goto label63;

        s49 = 65;

        goto label66;

     label63:
        $z18 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>(r313, r323);

        if $z18 == 0 goto label64;

        s49 = 65;

        goto label66;

     label64:
        $z20 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>(r314, r323);

        if $z20 == 0 goto label65;

        s49 = 65;

        goto label66;

     label65:
        $r178 = new java.lang.StringBuilder;

        specialinvoke $r178.<java.lang.StringBuilder: void <init>()>();

        $r177 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unexpected fallback path ");

        $r180 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r323);

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r181);

        goto label70;

     label66:
        $r179 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r179.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>(r322);

     label67:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>(r323, s49, 416, 0L, null);

     label68:
        goto label70;

     label69:
        $r243 := @caughtexception;

        r324 = $r243;

        $r281 = new java.lang.StringBuilder;

        specialinvoke $r281.<java.lang.StringBuilder: void <init>()>();

        $r283 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse original system package: ");

        $r282 = virtualinvoke r324.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r285 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r282);

        $r284 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r284);

     label70:
        i48 = i48 + 1;

        goto label61;

     label71:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateAllSharedLibrariesLPw()>();

        $r113 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r125 = virtualinvoke $r113.<com.android.server.pm.Settings: java.util.Collection getAllSharedUsersLPw()>();

        r325 = interfaceinvoke $r125.<java.util.Collection: java.util.Iterator iterator()>();

     label72:
        $z10 = interfaceinvoke r325.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label73;

        $r161 = interfaceinvoke r325.<java.util.Iterator: java.lang.Object next()>();

        r326 = (com.android.server.pm.SharedUserSetting) $r161;

        $r160 = r326.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void adjustCpuAbisForSharedUserLPw(java.util.Set,android.content.pm.PackageParser$Package,boolean,boolean)>($r160, null, 0, 0);

        goto label72;

     label73:
        $r124 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageUsage mPackageUsage>;

        virtualinvoke $r124.<com.android.server.pm.PackageManagerService$PackageUsage: void readLP()>();

        $l17 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3090, $l17);

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r121 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time to scan packages: ");

        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l16 = $l15 - l40;

        $f0 = (float) $l16;

        $f1 = $f0 / 1000.0F;

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r133 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r133);

        $r134 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i19 = $r134.<com.android.server.pm.Settings: int mInternalSdkPlatform>;

        $i21 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        if $i19 == $i21 goto label74;

        $z16 = 1;

        goto label75;

     label74:
        $z16 = 0;

     label75:
        z30 = $z16;

        if z30 == 0 goto label76;

        $r151 = new java.lang.StringBuilder;

        specialinvoke $r151.<java.lang.StringBuilder: void <init>()>();

        $r150 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Platform changed from ");

        $r149 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i24 = $r149.<com.android.server.pm.Settings: int mInternalSdkPlatform>;

        $r148 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i23 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r146 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; regranting permissions for internal storage");

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r144);

     label76:
        $r132 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i18 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r132.<com.android.server.pm.Settings: int mInternalSdkPlatform> = $i18;

        if z30 == 0 goto label77;

        $b25 = 6;

        goto label78;

     label77:
        $b25 = 0;

     label78:
        $b20 = 1 | $b25;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>(null, null, $b20);

        $z12 = r0.<com.android.server.pm.PackageManagerService: boolean mRestoredSettings>;

        if $z12 != 0 goto label79;

        if z1 != 0 goto label79;

        $r152 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r152.<com.android.server.pm.Settings: void readDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>(r0, 0);

     label79:
        $r130 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r129 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r131 = $r129.<com.android.server.pm.Settings: java.lang.String mFingerprint>;

        $z11 = virtualinvoke $r130.<java.lang.String: boolean equals(java.lang.Object)>($r131);

        if $z11 != 0 goto label82;

        if z1 != 0 goto label82;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Build fingerprint changed; clearing code caches");

        $r137 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r138 = $r137.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r139 = virtualinvoke $r138.<java.util.HashMap: java.util.Set keySet()>();

        r327 = interfaceinvoke $r139.<java.util.Set: java.util.Iterator iterator()>();

     label80:
        $z13 = interfaceinvoke r327.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label81;

        $r153 = interfaceinvoke r327.<java.util.Iterator: java.lang.Object next()>();

        r328 = (java.lang.String) $r153;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int deleteCodeCacheDirsLI(java.lang.String)>(r328);

        goto label80;

     label81:
        $r136 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r135 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r136.<com.android.server.pm.Settings: java.lang.String mFingerprint> = $r135;

     label82:
        $r127 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r127.<com.android.server.pm.Settings: void updateInternalDatabaseVersion()>();

        $r128 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r128.<com.android.server.pm.Settings: void writeLPr()>();

        $l22 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3100, $l22);

        $r143 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.lang.String getRequiredVerifierLPr()>();

        r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage> = $r143;

        exitmonitor r6;

     label83:
        goto label86;

     label84:
        $r286 := @caughtexception;

        r28 = $r286;

        exitmonitor r6;

     label85:
        throw r28;

     label86:
        exitmonitor r5;

     label87:
        goto label90;

     label88:
        $r269 := @caughtexception;

        r26 = $r269;

        exitmonitor r5;

     label89:
        throw r26;

     label90:
        $r140 = new com.android.server.pm.PackageInstallerService;

        $r141 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir>;

        specialinvoke $r140.<com.android.server.pm.PackageInstallerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.io.File)>(r1, r0, $r141);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageInstallerService mInstallerService> = $r140;

        $r142 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r142.<java.lang.Runtime: void gc()>();

        return;

        catch java.io.FileNotFoundException from label25 to label27 with label28;
        catch java.io.IOException from label25 to label27 with label29;
        catch java.io.FileNotFoundException from label36 to label38 with label39;
        catch java.io.IOException from label36 to label38 with label40;
        catch java.io.IOException from label44 to label45 with label46;
        catch com.android.server.pm.PackageManagerException from label67 to label68 with label69;
        catch java.lang.Throwable from label06 to label83 with label84;
        catch java.lang.Throwable from label84 to label85 with label84;
        catch java.lang.Throwable from label05 to label87 with label88;
        catch java.lang.Throwable from label88 to label89 with label88;
    }

    public boolean isFirstBoot()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mRestoredSettings>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isOnlyCoreApps()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        return $z0;
    }

    private java.lang.String getRequiredVerifierLPr()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r8;
        java.util.List r2;
        java.lang.String r3, r5;
        int i0, i1;
        android.content.pm.ResolveInfo r4;
        com.android.server.pm.PackageSetting r6;
        com.android.server.pm.GrantedPermissions r7, $r17;
        java.lang.Object $r9, $r15;
        android.content.pm.ActivityInfo $r10, $r11;
        java.util.HashMap $r12;
        com.android.server.pm.Settings $r13;
        com.android.server.pm.SharedUserSetting $r14;
        boolean $z0;
        java.util.HashSet $r16;
        java.lang.RuntimeException $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_NEEDS_VERIFICATION");

        r1 = $r8;

        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, "application/vnd.android.package-archive", 512, 0);

        r3 = null;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.content.pm.ResolveInfo) $r9;

        $r10 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r10 != null goto label2;

        goto label8;

     label2:
        $r11 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r5 = $r11.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.PackageSetting) $r15;

        if r6 != null goto label3;

        goto label8;

     label3:
        $r14 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r14 == null goto label4;

        $r17 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label5;

     label4:
        $r17 = r6;

     label5:
        r7 = $r17;

        $r16 = r7.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r16.<java.util.HashSet: boolean contains(java.lang.Object)>("android.permission.PACKAGE_VERIFICATION_AGENT");

        if $z0 != 0 goto label6;

        goto label8;

     label6:
        if r3 == null goto label7;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>("There can be only one required verifier");

        throw $r18;

     label7:
        r3 = r5;

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return r3;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke r0.<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        $z2 = r3 instanceof java.lang.IllegalArgumentException;

        if $z2 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Package Manager Crash", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    void cleanupInstallFailedPackage(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6, $r7, $r10;
        java.io.File $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        com.android.server.pm.Settings $r11;
        boolean $z0, $z1, $z4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up incompletely installed app: ");

        $r4 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r6);

        $r7 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r7);

        $r8 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        if $r8 == null goto label2;

        $r17 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z4 = virtualinvoke $r17.<java.io.File: boolean isDirectory()>();

        if $z4 == 0 goto label1;

        $r19 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>($r19);

     label1:
        $r18 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        virtualinvoke $r18.<java.io.File: boolean delete()>();

     label2:
        $r9 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        if $r9 == null goto label4;

        $r13 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $r12 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z0 = virtualinvoke $r13.<java.io.File: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label4;

        $r14 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $z1 = virtualinvoke $r14.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label3;

        $r16 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>($r16);

     label3:
        $r15 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        virtualinvoke $r15.<java.io.File: boolean delete()>();

     label4:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r11.<com.android.server.pm.Settings: int removePackageLPw(java.lang.String)>($r10);

        return;
    }

    static int[] appendInts(int[], int[])
    {
        int[] r0, r1;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r1 != null goto label1;

        return r0;

     label1:
        if r0 != null goto label2;

        return r1;

     label2:
        i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $i2 = r1[i1];

        r0 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>(r0, $i2);

        i1 = i1 + 1;

        goto label3;

     label4:
        return r0;
    }

    static int[] removeInts(int[], int[])
    {
        int[] r0, r1;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r1 != null goto label1;

        return r0;

     label1:
        if r0 != null goto label2;

        return r0;

     label2:
        i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $i2 = r1[i1];

        r0 = staticinvoke <com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>(r0, $i2);

        i1 = i1 + 1;

        goto label3;

     label4:
        return r0;
    }

    android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        int i0, i1;
        com.android.server.pm.PackageSetting r2;
        com.android.server.pm.GrantedPermissions r3, $r10;
        android.content.pm.PackageUserState r4;
        com.android.server.pm.UserManagerService $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.server.pm.SharedUserSetting $r7;
        java.util.HashSet $r8;
        long $l2, $l3;
        int[] $r9;
        android.content.pm.PackageInfo $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r2 = (com.android.server.pm.PackageSetting) $r6;

        if r2 != null goto label2;

        return null;

     label2:
        $r7 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r7 == null goto label3;

        $r10 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label4;

     label3:
        $r10 = r2;

     label4:
        r3 = $r10;

        r4 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r9 = r3.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $l3 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $l2 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r8 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet,android.content.pm.PackageUserState,int)>(r1, $r9, i0, $l3, $l2, $r8, r4, i1);

        return $r11;
    }

    public boolean isPackageAvailable(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        java.util.HashMap r2, $r8, $r9;
        android.content.pm.PackageParser$Package r3;
        com.android.server.pm.PackageSetting r4;
        android.content.pm.PackageUserState r5;
        java.lang.Throwable r6, $r12;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0, $z1;
        java.lang.Object $r10, $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i1, i0, 0, 0, "is package available");

        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r8;

        entermonitor $r8;

     label2:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r10;

        if r3 == null goto label4;

        $r11 = r3.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r4 = (com.android.server.pm.PackageSetting) $r11;

        if r4 == null goto label4;

        r5 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

        if r5 == null goto label4;

        $z1 = staticinvoke <android.content.pm.PackageParser: boolean isAvailable(android.content.pm.PackageUserState)>(r5);

        exitmonitor r2;

     label3:
        return $z1;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r6 = $r12;

        exitmonitor r2;

     label7:
        throw r6;

     label8:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        java.util.HashMap r2, $r6, $r7;
        android.content.pm.PackageParser$Package r3;
        java.lang.Throwable r4, $r11;
        com.android.server.pm.UserManagerService $r5;
        boolean $z0;
        java.lang.Object $r8;
        android.content.pm.PackageInfo $r9, $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "get package info");

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r8;

        if r3 == null goto label04;

        $r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>(r3, i0, i1);

        exitmonitor r2;

     label03:
        return $r10;

     label04:
        $i3 = i0 & 8192;

        if $i3 == 0 goto label06;

        $r9 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label05:
        return $r9;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String[] r1, r2;
        java.util.HashMap r3, $r6, $r9;
        int i0, $i1, $i2;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r12;
        com.android.server.pm.Settings $r7;
        java.lang.String $r8, $r11, $r13;
        java.lang.Object $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String[];

        $i1 = lengthof r1;

        r2 = newarray (java.lang.String)[$i1];

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $i2 = lengthof r1;

        i0 = $i2 - 1;

     label2:
        if i0 < 0 goto label5;

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r9 = $r7.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = r1[i0];

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (com.android.server.pm.PackageSetting) $r10;

        if r4 == null goto label3;

        $r13 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r13 == null goto label3;

        $r11 = r4.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label4;

     label3:
        $r11 = r1[i0];

     label4:
        r2[i0] = $r11;

        i0 = i0 + -1;

        goto label2;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label8:
        throw r5;

     label9:
        return r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String[] r1, r2;
        java.util.HashMap r3, $r6, $r9;
        int i0, $i1, $i2;
        java.lang.String r4, $r8, $r11;
        java.lang.Throwable r5, $r12;
        com.android.server.pm.Settings $r7;
        java.lang.Object $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String[];

        $i1 = lengthof r1;

        r2 = newarray (java.lang.String)[$i1];

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $i2 = lengthof r1;

        i0 = $i2 - 1;

     label2:
        if i0 < 0 goto label5;

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r9 = $r7.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r8 = r1[i0];

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (java.lang.String) $r10;

        if r4 == null goto label3;

        $r11 = r4;

        goto label4;

     label3:
        $r11 = r1[i0];

     label4:
        r2[i0] = $r11;

        i0 = i0 + -1;

        goto label2;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label8:
        throw r5;

     label9:
        return r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getPackageUid(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.HashMap r2, $r7, $r8, $r11;
        android.content.pm.PackageParser$Package r3, $r13, $r15, r19;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r18;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0;
        java.lang.Object $r9, $r12;
        com.android.server.pm.Settings $r10;
        android.content.pm.ApplicationInfo $r14, $r16, $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label01;

        return -1;

     label01:
        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i1, i0, 0, 0, "get package uid");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r9;

        if r3 == null goto label04;

        $r17 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        $i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i4);

        exitmonitor r2;

     label03:
        return $i5;

     label04:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = $r10.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.PackageSetting) $r12;

        if r4 == null goto label05;

        $r13 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r13 == null goto label05;

        $r15 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r14 = $r15.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r14 != null goto label07;

     label05:
        exitmonitor r2;

     label06:
        return -1;

     label07:
        r19 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if r19 == null goto label08;

        $r16 = r19.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i3);

        goto label09;

     label08:
        $i2 = -1;

     label09:
        exitmonitor r2;

     label10:
        return $i2;

     label11:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r2;

     label12:
        throw r5;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public int[] getPackageGids(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r6, $r7;
        android.content.pm.PackageParser$Package r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r12;
        java.lang.Object $r8, $r10;
        int[] $r9, $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r8;

        if r3 == null goto label3;

        $r10 = r3.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r4 = (com.android.server.pm.PackageSetting) $r10;

        $r11 = virtualinvoke r4.<com.android.server.pm.PackageSetting: int[] getGids()>();

        exitmonitor r2;

     label2:
        return $r11;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label6:
        throw r5;

     label7:
        $r9 = newarray (int)[0];

        return $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static final android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission, int)
    {
        com.android.server.pm.BasePermission r0;
        int i0, $i1;
        android.content.pm.PermissionInfo r1, $r3, $r8;
        android.content.pm.PackageParser$Permission $r2, $r7;
        java.lang.String $r4, $r5, $r6;

        r0 := @parameter0: com.android.server.pm.BasePermission;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r2 == null goto label1;

        $r7 = r0.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r7, i0);

        return $r8;

     label1:
        $r3 = new android.content.pm.PermissionInfo;

        specialinvoke $r3.<android.content.pm.PermissionInfo: void <init>()>();

        r1 = $r3;

        $r4 = r0.<com.android.server.pm.BasePermission: java.lang.String name>;

        r1.<android.content.pm.PermissionInfo: java.lang.String name> = $r4;

        $r5 = r0.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        r1.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r5;

        $r6 = r0.<com.android.server.pm.BasePermission: java.lang.String name>;

        r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel> = $r6;

        $i1 = r0.<com.android.server.pm.BasePermission: int protectionLevel>;

        r1.<android.content.pm.PermissionInfo: int protectionLevel> = $i1;

        return r1;
    }

    public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        java.util.HashMap r2, $r5, $r7;
        com.android.server.pm.BasePermission r3;
        java.lang.Throwable r4, $r10;
        com.android.server.pm.Settings $r6;
        java.lang.Object $r8;
        android.content.pm.PermissionInfo $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.BasePermission) $r8;

        if r3 == null goto label3;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission,int)>(r3, i0);

        exitmonitor r2;

     label2:
        return $r9;

     label3:
        exitmonitor r2;

     label4:
        return null;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List queryPermissionsByGroup(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r17, $r24;
        int i0, $i1;
        java.util.HashMap r2, $r7, $r10, $r12;
        java.util.ArrayList r3, $r8, $r13;
        java.util.Iterator r4;
        com.android.server.pm.BasePermission r5;
        java.lang.Throwable r6, $r26;
        com.android.server.pm.Settings $r9;
        java.util.Collection $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r14;
        android.content.pm.PackageParser$Permission $r15, $r16, $r19, $r22, $r25;
        android.content.pm.PermissionInfo $r18, $r20, $r21, $r23;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(10);

        r3 = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r9.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.BasePermission) $r14;

        if r1 != null goto label04;

        $r22 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r22 == null goto label03;

        $r25 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r23 = $r25.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r24 = $r23.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r24 != null goto label05;

     label03:
        $r21 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission,int)>(r5, i0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label05;

     label04:
        $r16 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r16 == null goto label05;

        $r15 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r18 = $r15.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r17 = $r18.<android.content.pm.PermissionInfo: java.lang.String group>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label05;

        $r19 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r20 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r19, i0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label05:
        goto label02;

     label06:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label08;

        exitmonitor r2;

     label07:
        return r3;

     label08:
        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $z1 = virtualinvoke $r12.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label09;

        $r13 = r3;

        goto label10;

     label09:
        $r13 = null;

     label10:
        exitmonitor r2;

     label11:
        return $r13;

     label12:
        $r26 := @caughtexception;

        r6 = $r26;

        exitmonitor r2;

     label13:
        throw r6;

        catch java.lang.Throwable from label01 to label07 with label12;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        java.util.HashMap r2, $r4, $r5;
        java.lang.Throwable r3, $r9;
        java.lang.Object $r6;
        android.content.pm.PackageParser$PermissionGroup $r7;
        android.content.pm.PermissionGroupInfo $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (android.content.pm.PackageParser$PermissionGroup) $r6;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>($r7, i0);

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getAllPermissionGroups(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        java.util.HashMap r1, $r6, $r7, $r9;
        java.util.ArrayList r2, $r8;
        java.util.Iterator r3;
        android.content.pm.PackageParser$PermissionGroup r4;
        java.lang.Throwable r5, $r13;
        java.util.Collection $r10;
        boolean $z0;
        java.lang.Object $r11;
        android.content.pm.PermissionGroupInfo $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        i1 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageParser$PermissionGroup) $r11;

        $r12 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>(r4, i0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        return r2;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r1;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLPw(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.PackageInfo r3;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        android.content.pm.PackageParser$Package $r8, $r9;
        android.content.pm.PackageUserState $r10;
        android.content.pm.ApplicationInfo $r11, $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r7;

        if r2 == null goto label4;

        $r8 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r8 != null goto label3;

        r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>(r1, i0, i1);

        if r3 == null goto label2;

        $r12 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        return $r12;

     label2:
        return null;

     label3:
        $r9 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r10 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r9, i0, $r10, i1);

        return $r11;

     label4:
        return null;
    }

    private android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r14, $r15, $r16;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.PackageParser$Package r3, $r9;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        android.content.pm.PackageInfo $r8;
        android.content.pm.ApplicationInfo $r10, $r11, $r13, $r17, $r18;
        java.io.File $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r7;

        if r2 == null goto label4;

        r3 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if r3 != null goto label3;

        $i2 = i0 & 8192;

        if $i2 != 0 goto label2;

        return null;

     label2:
        $r9 = new android.content.pm.PackageParser$Package;

        specialinvoke $r9.<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>(r1);

        r3 = $r9;

        $r10 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r10.<android.content.pm.ApplicationInfo: java.lang.String packageName> = r1;

        $r11 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i4 = $i3 | 16777216;

        $r11.<android.content.pm.ApplicationInfo: int flags> = $i4;

        $r13 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getDataPathForPackage(java.lang.String,int)>(r1, 0);

        $r15 = virtualinvoke $r12.<java.io.File: java.lang.String getPath()>();

        $r13.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r15;

        $r17 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $r17.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r14;

        $r18 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r16 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $r18.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = $r16;

     label3:
        $r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>(r3, i0, i1);

        return $r8;

     label4:
        return null;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r10, $r12;
        int i0, i1, $i2, $i3;
        java.util.HashMap r2, $r7, $r8, $r14;
        android.content.pm.PackageParser$Package r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r19;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r17;
        android.content.pm.ApplicationInfo $r11, $r13, $r18;
        com.android.server.pm.Settings $r15;
        android.content.pm.PackageUserState $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "get application info");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r9;

        if r3 == null goto label06;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.PackageSetting) $r17;

        if r4 != null goto label04;

        exitmonitor r2;

     label03:
        return null;

     label04:
        $r16 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r18 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r3, i0, $r16, i1);

        exitmonitor r2;

     label05:
        return $r18;

     label06:
        $r10 = "android";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label07;

        $r12 = "system";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label09;

     label07:
        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        exitmonitor r2;

     label08:
        return $r11;

     label09:
        $i3 = i0 & 8192;

        if $i3 == 0 goto label11;

        $r13 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLPw(java.lang.String,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label10:
        return $r13;

     label11:
        exitmonitor r2;

     label12:
        goto label15;

     label13:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label14:
        throw r5;

     label15:
        return null;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        android.content.pm.IPackageDataObserver r1;
        android.content.Context $r2;
        com.android.server.pm.PackageManagerService$1 $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.IPackageDataObserver;

        $r2 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_CACHE", null);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r3 = new com.android.server.pm.PackageManagerService$1;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService$1: void <init>(com.android.server.pm.PackageManagerService,long,android.content.pm.IPackageDataObserver)>(r0, l0, r1);

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void freeStorage(long, android.content.IntentSender)
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        android.content.IntentSender r1;
        android.content.Context $r2;
        com.android.server.pm.PackageManagerService$2 $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.IntentSender;

        $r2 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_CACHE", null);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r3 = new com.android.server.pm.PackageManagerService$2;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService$2: void <init>(com.android.server.pm.PackageManagerService,long,android.content.IntentSender)>(r0, l0, r1);

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    void freeStorage(long) throws java.io.IOException
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        com.android.server.pm.Installer $r4;
        int $i1;
        java.io.IOException $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $i1 = virtualinvoke $r4.<com.android.server.pm.Installer: int freeCache(long)>(l0);

        if $i1 >= 0 goto label2;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Failed to free enough space");

        throw $r5;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1, $r11;
        int i0, i1, $i2;
        java.util.HashMap r2, $r7, $r9, $r19;
        android.content.pm.PackageParser$Activity r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r23;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0, $z1, $z2;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r8;
        java.lang.Object $r10, $r21;
        android.content.pm.ActivityInfo $r12, $r14, $r16, $r22;
        android.content.pm.PackageUserState $r13, $r20;
        com.android.server.pm.Settings $r15, $r17;
        java.lang.String $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "get activity info");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1700(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Activity) $r10;

        if r3 == null goto label06;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z2 = virtualinvoke $r15.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r16, i0, i1);

        if $z2 == 0 goto label06;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r18 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r21 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        r4 = (com.android.server.pm.PackageSetting) $r21;

        if r4 != null goto label04;

        exitmonitor r2;

     label03:
        return null;

     label04:
        $r20 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r22 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,android.content.pm.PackageUserState,int)>(r3, i0, $r20, i1);

        exitmonitor r2;

     label05:
        return $r22;

     label06:
        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName>;

        $z1 = virtualinvoke $r11.<android.content.ComponentName: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label08;

        $r12 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r13 = new android.content.pm.PackageUserState;

        specialinvoke $r13.<android.content.pm.PackageUserState: void <init>()>();

        $r14 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.ActivityInfo,int,android.content.pm.PackageUserState,int)>($r12, i0, $r13, i1);

        exitmonitor r2;

     label07:
        return $r14;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r2;

     label11:
        throw r5;

     label12:
        return null;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean activitySupportsIntent(android.content.ComponentName, android.content.Intent, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        android.content.Intent r2;
        java.lang.String r3, $r15, $r16;
        java.util.HashMap r4, $r7, $r9;
        android.content.pm.PackageParser$Activity r5;
        int i0, $i1, $i2;
        java.lang.Throwable r6, $r19;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r8;
        java.lang.Object $r10, $r14;
        java.util.ArrayList $r11, $r12;
        android.content.pm.PackageParser$ActivityIntentInfo $r13;
        java.util.Set $r17;
        android.net.Uri $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1700(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.content.pm.PackageParser$Activity) $r10;

        if r5 != null goto label03;

        exitmonitor r4;

     label02:
        return 0;

     label03:
        i0 = 0;

     label04:
        $r11 = r5.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label07;

        $r12 = r5.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        $r14 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r13 = (android.content.pm.PackageParser$ActivityIntentInfo) $r14;

        $r16 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r15 = virtualinvoke r2.<android.content.Intent: java.lang.String getScheme()>();

        $r18 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        $r17 = virtualinvoke r2.<android.content.Intent: java.util.Set getCategories()>();

        $i2 = virtualinvoke $r13.<android.content.pm.PackageParser$ActivityIntentInfo: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>($r16, r3, $r15, $r18, $r17, "PackageManager");

        if $i2 < 0 goto label06;

        exitmonitor r4;

     label05:
        return 1;

     label06:
        i0 = i0 + 1;

        goto label04;

     label07:
        exitmonitor r4;

     label08:
        return 0;

     label09:
        $r19 := @caughtexception;

        r6 = $r19;

        exitmonitor r4;

     label10:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r7, $r9, $r15;
        android.content.pm.PackageParser$Activity r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r19;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r8;
        java.lang.Object $r10, $r17;
        com.android.server.pm.Settings $r11, $r13;
        android.content.pm.ActivityInfo $r12, $r18;
        java.lang.String $r14;
        android.content.pm.PackageUserState $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "get receiver info");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1700(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Activity) $r10;

        if r3 == null goto label06;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z1 = virtualinvoke $r11.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r12, i0, i1);

        if $z1 == 0 goto label06;

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        r4 = (com.android.server.pm.PackageSetting) $r17;

        if r4 != null goto label04;

        exitmonitor r2;

     label03:
        return null;

     label04:
        $r16 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r18 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,android.content.pm.PackageUserState,int)>(r3, i0, $r16, i1);

        exitmonitor r2;

     label05:
        return $r18;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r7, $r9, $r15;
        android.content.pm.PackageParser$Service r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r19;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r8;
        java.lang.Object $r10, $r17;
        com.android.server.pm.Settings $r11, $r13;
        android.content.pm.ServiceInfo $r12, $r18;
        java.lang.String $r14;
        android.content.pm.PackageUserState $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "get service info");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.HashMap access$1800(com.android.server.pm.PackageManagerService$ServiceIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Service) $r10;

        if r3 == null goto label06;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = r3.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z1 = virtualinvoke $r11.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r12, i0, i1);

        if $z1 == 0 goto label06;

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        r4 = (com.android.server.pm.PackageSetting) $r17;

        if r4 != null goto label04;

        exitmonitor r2;

     label03:
        return null;

     label04:
        $r16 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r18 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser$Service,int,android.content.pm.PackageUserState,int)>(r3, i0, $r16, i1);

        exitmonitor r2;

     label05:
        return $r18;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r7, $r9, $r15;
        android.content.pm.PackageParser$Provider r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r19;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r8;
        java.lang.Object $r10, $r17;
        com.android.server.pm.Settings $r11, $r13;
        android.content.pm.ProviderInfo $r12, $r18;
        java.lang.String $r14;
        android.content.pm.PackageUserState $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "get provider info");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.HashMap access$1900(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Provider) $r10;

        if r3 == null goto label06;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = virtualinvoke $r11.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r12, i0, i1);

        if $z1 == 0 goto label06;

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        r4 = (com.android.server.pm.PackageSetting) $r17;

        if r4 != null goto label04;

        exitmonitor r2;

     label03:
        return null;

     label04:
        $r16 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r18 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r3, i0, $r16, i1);

        exitmonitor r2;

     label05:
        return $r18;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.String[] getSystemSharedLibraryNames()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Set r1;
        java.util.HashMap r2, $r5, $r6;
        int i0;
        java.lang.String[] r3;
        java.lang.Throwable r4, $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        r1 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        if i0 <= 0 goto label3;

        r3 = newarray (java.lang.String)[i0];

        interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        exitmonitor r2;

     label2:
        return r3;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.pm.FeatureInfo[] getSystemAvailableFeatures()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Collection r1;
        java.util.HashMap r2, $r6, $r7;
        int i0, $i1, $i2;
        android.content.pm.FeatureInfo[] r3;
        android.content.pm.FeatureInfo r4, $r9;
        java.lang.Throwable r5, $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        r1 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i0 <= 0 goto label3;

        $i1 = i0 + 1;

        r3 = newarray (android.content.pm.FeatureInfo)[$i1];

        interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        $r9 = new android.content.pm.FeatureInfo;

        specialinvoke $r9.<android.content.pm.FeatureInfo: void <init>()>();

        r4 = $r9;

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.opengles.version", 0);

        r4.<android.content.pm.FeatureInfo: int reqGlEsVersion> = $i2;

        r3[i0] = r4;

        exitmonitor r2;

     label2:
        return r3;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r2;

     label6:
        throw r5;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean hasSystemFeature(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void checkValidCaller(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2;
        java.lang.SecurityException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if $i2 == i1 goto label1;

        if i0 == 1000 goto label1;

        if i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = new java.lang.SecurityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller uid=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not privileged to communicate with user=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public int checkPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        java.util.HashMap r3, $r7, $r8;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.PackageSetting r5;
        java.lang.Throwable r6, $r16;
        java.lang.Object $r9, $r10, $r11;
        com.android.server.pm.SharedUserSetting $r12, $r14;
        java.util.HashSet $r13, $r15;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (android.content.pm.PackageParser$Package) $r9;

        if r4 == null goto label5;

        $r10 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r10 == null goto label5;

        $r11 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r5 = (com.android.server.pm.PackageSetting) $r11;

        $r12 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r12 == null goto label3;

        $r14 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r15 = $r14.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        $z1 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label5;

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r13 = r5.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r13.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        exitmonitor r3;

     label4:
        return 0;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r3;

     label8:
        throw r6;

     label9:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int checkUidPermission(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        java.util.HashMap r2, $r6;
        java.lang.Object r3, $r9;
        com.android.server.pm.GrantedPermissions r4;
        java.lang.Throwable r5, $r11;
        com.android.server.pm.Settings $r7;
        android.util.SparseArray $r8;
        boolean $z0, $z1;
        java.util.HashSet $r10, r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r3 = virtualinvoke $r7.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i1);

        if r3 == null goto label04;

        r4 = (com.android.server.pm.GrantedPermissions) r3;

        $r10 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z1 = virtualinvoke $r10.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        goto label06;

     label04:
        $r8 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (java.util.HashSet) $r9;

        if r12 == null goto label06;

        $z0 = virtualinvoke r12.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label06;

        exitmonitor r2;

     label05:
        return 0;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void enforceCrossUserPermission(int, int, boolean, boolean, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2;
        boolean z0, z1;
        java.lang.String r1, $r9;
        android.content.Context $r3, $r4, $r11;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r1 := @parameter4: java.lang.String;

        if i1 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid userId ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        if z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceShellRestriction(java.lang.String,int,int)>("no_debugging_features", i0, i1);

     label2:
        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if i1 != $i2 goto label3;

        return;

     label3:
        if i0 == 1000 goto label7;

        if i0 == 0 goto label7;

        if z0 == 0 goto label4;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", r1);

        goto label7;

     label4:
        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", r1);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS", r1);

     label7:
        return;

        catch java.lang.SecurityException from label4 to label5 with label6;
    }

    void enforceShellRestriction(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r6, $r8, $r13;
        int i0, i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r11, $r12, $r14;
        com.android.server.pm.UserManagerService $r9;
        boolean $z0;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != 2000 goto label2;

        if i1 < 0 goto label1;

        $r9 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r9.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>(r1, i1);

        if $z0 == 0 goto label1;

        $r10 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shell does not have permission to access user ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label1:
        if i1 >= 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to check shell permission for user ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t");

        $r6 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r8);

     label2:
        return;
    }

    private com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r8, $r9, $r10;
        java.util.Iterator r2;
        com.android.server.pm.BasePermission r3;
        com.android.server.pm.Settings $r4;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        int $i0, $i1, $i3;
        char $c2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.BasePermission) $r7;

        $r8 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r9 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label2;

        $r10 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if $c2 != 46 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.server.pm.BasePermission checkPermissionTreeLP(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r7, $r14, $r16;
        com.android.server.pm.BasePermission r2;
        java.lang.SecurityException $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r15, $r17;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)>(r1);

        if r2 == null goto label2;

        $i0 = r2.<com.android.server.pm.BasePermission: int uid>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        if $i0 != $i2 goto label1;

        return r2;

     label1:
        $r8 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to add to permission tree ");

        $r14 = r2.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by uid ");

        $i4 = r2.<com.android.server.pm.BasePermission: int uid>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label2:
        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission tree found for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    static boolean compareStrings(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        if r1 != null goto label4;

        return 0;

     label4:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label5;

        return 0;

     label5:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static boolean comparePermissionInfos(android.content.pm.PermissionInfo, android.content.pm.PermissionInfo)
    {
        android.content.pm.PermissionInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r4, $r5;

        r0 := @parameter0: android.content.pm.PermissionInfo;

        r1 := @parameter1: android.content.pm.PermissionInfo;

        $i1 = r0.<android.content.pm.PermissionInfo: int icon>;

        $i0 = r1.<android.content.pm.PermissionInfo: int icon>;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        $i3 = r0.<android.content.pm.PermissionInfo: int logo>;

        $i2 = r1.<android.content.pm.PermissionInfo: int logo>;

        if $i3 == $i2 goto label2;

        return 0;

     label2:
        $i5 = r0.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i4 = r1.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i5 == $i4 goto label3;

        return 0;

     label3:
        $r3 = r0.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r2 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r2);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r5 = r0.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r4 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r4);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r7 = r0.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r6 = r1.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r6);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    int permissionInfoFootprint(android.content.pm.PermissionInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1;
        int i0, $i1, $i2;
        java.lang.String $r2;
        java.lang.CharSequence $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        $r2 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r3 == null goto label1;

        $r6 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $i2 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        i0 = i0 + $i2;

     label1:
        $r4 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedDescription>;

        if $r4 == null goto label2;

        $r5 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedDescription>;

        $i1 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        i0 = i0 + $i1;

     label2:
        return i0;
    }

    int calculateCurrentPermissionFootprintLocked(com.android.server.pm.BasePermission)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.BasePermission r1, r3;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Iterator r2;
        com.android.server.pm.Settings $r4;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.String $r8;
        android.content.pm.PackageParser$Permission $r9;
        android.content.pm.PermissionInfo $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.BasePermission;

        i0 = 0;

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.BasePermission) $r7;

        $i2 = r3.<com.android.server.pm.BasePermission: int uid>;

        $i1 = r1.<com.android.server.pm.BasePermission: int uid>;

        if $i2 != $i1 goto label2;

        $r8 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r10 = $r9.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int permissionInfoFootprint(android.content.pm.PermissionInfo)>($r10);

        $i5 = $i3 + $i4;

        i0 = i0 + $i5;

     label2:
        goto label1;

     label3:
        return i0;
    }

    void enforcePermissionCapLocked(android.content.pm.PermissionInfo, com.android.server.pm.BasePermission)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1;
        com.android.server.pm.BasePermission r2;
        int i0, $i1, $i2, $i3;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        r2 := @parameter1: com.android.server.pm.BasePermission;

        $i1 = r2.<com.android.server.pm.BasePermission: int uid>;

        if $i1 == 1000 goto label1;

        i0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int calculateCurrentPermissionFootprintLocked(com.android.server.pm.BasePermission)>(r2);

        $i2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int permissionInfoFootprint(android.content.pm.PermissionInfo)>(r1);

        $i3 = i0 + $i2;

        if $i3 <= 32768 goto label1;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Permission tree size cap exceeded");

        throw $r3;

     label1:
        return;
    }

    boolean addPermissionLocked(android.content.pm.PermissionInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1, $r9, $r14, $r16, $r27, r40;
        boolean z0, z1, z2, $z3, $z4, $z5;
        com.android.server.pm.BasePermission r2, r3, $r34;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r4, $r6, $r17, $r19, $r30, $r33, $r35, $r39;
        com.android.server.pm.Settings $r5, $r18, $r20;
        java.util.HashMap $r7, $r23;
        java.lang.Object $r8;
        android.content.pm.PackageParser$Permission $r10, $r11, $r12, $r15, $r21, $r22, $r28;
        android.content.pm.PackageParser$Package $r13, $r25, $r26;
        java.lang.StringBuilder $r29, $r32, $r36;
        java.lang.SecurityException $r31, $r37;
        java.lang.CharSequence $r38;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        z0 := @parameter1: boolean;

        $i1 = r1.<android.content.pm.PermissionInfo: int labelRes>;

        if $i1 != 0 goto label1;

        $r38 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r38 != null goto label1;

        $r37 = new java.lang.SecurityException;

        specialinvoke $r37.<java.lang.SecurityException: void <init>(java.lang.String)>("Label must be specified in permission");

        throw $r37;

     label1:
        $r4 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission checkPermissionTreeLP(java.lang.String)>($r4);

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r5.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r6 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (com.android.server.pm.BasePermission) $r8;

        if r3 != null goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z1 = $z5;

        z2 = 1;

        $i2 = r1.<android.content.pm.PermissionInfo: int protectionLevel>;

        i0 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>($i2);

        if z1 == 0 goto label4;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforcePermissionCapLocked(android.content.pm.PermissionInfo,com.android.server.pm.BasePermission)>(r1, r2);

        $r34 = new com.android.server.pm.BasePermission;

        $r39 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r33 = r2.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        specialinvoke $r34.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r39, $r33, 2);

        r3 = $r34;

        goto label6;

     label4:
        $i3 = r3.<com.android.server.pm.BasePermission: int type>;

        if $i3 == 2 goto label5;

        $r31 = new java.lang.SecurityException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to modify non-dynamic permission ");

        $r30 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.SecurityException: void <init>(java.lang.String)>($r35);

        throw $r31;

     label5:
        $i4 = r3.<com.android.server.pm.BasePermission: int protectionLevel>;

        if $i4 != i0 goto label6;

        $r21 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r26 = $r21.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $r22 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r25 = $r22.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $z3 = virtualinvoke $r26.<java.lang.Object: boolean equals(java.lang.Object)>($r25);

        if $z3 == 0 goto label6;

        $i7 = r3.<com.android.server.pm.BasePermission: int uid>;

        $i6 = r2.<com.android.server.pm.BasePermission: int uid>;

        if $i7 != $i6 goto label6;

        $r28 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r27 = $r28.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean comparePermissionInfos(android.content.pm.PermissionInfo,android.content.pm.PermissionInfo)>($r27, r1);

        if $z4 == 0 goto label6;

        z2 = 0;

     label6:
        r3.<com.android.server.pm.BasePermission: int protectionLevel> = i0;

        $r9 = new android.content.pm.PermissionInfo;

        specialinvoke $r9.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>(r1);

        r40 = $r9;

        r40.<android.content.pm.PermissionInfo: int protectionLevel> = i0;

        $r11 = new android.content.pm.PackageParser$Permission;

        $r10 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r13 = $r10.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        specialinvoke $r11.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>($r13, r40);

        r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = $r11;

        $r12 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r16 = $r12.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r15 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r14 = $r15.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r17 = $r14.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r16.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r17;

        $i5 = r2.<com.android.server.pm.BasePermission: int uid>;

        r3.<com.android.server.pm.BasePermission: int uid> = $i5;

        if z1 == 0 goto label7;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r23 = $r20.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r19 = r40.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r3);

     label7:
        if z2 == 0 goto label9;

        if z0 != 0 goto label8;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r18.<com.android.server.pm.Settings: void writeLPr()>();

        goto label9;

     label8:
        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

     label9:
        return z1;
    }

    public boolean addPermission(android.content.pm.PermissionInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>(r1, 0);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean addPermissionAsync(android.content.pm.PermissionInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>(r1, 1);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removePermission(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r19;
        java.util.HashMap r2, $r5, $r8, $r11;
        com.android.server.pm.BasePermission r3;
        java.lang.Throwable r4, $r18;
        com.android.server.pm.Settings $r7, $r10, $r13;
        java.lang.Object $r9;
        int $i0;
        java.lang.StringBuilder $r14, $r16, $r17;
        java.lang.SecurityException $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission checkPermissionTreeLP(java.lang.String)>(r1);

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r7.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.BasePermission) $r9;

        if r3 == null goto label3;

        $i0 = r3.<com.android.server.pm.BasePermission: int type>;

        if $i0 == 2 goto label2;

        $r15 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to modify non-dynamic permission ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label2:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = $r10.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r13.<com.android.server.pm.Settings: void writeLPr()>();

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void checkGrantRevokePermissions(android.content.pm.PackageParser$Package, com.android.server.pm.BasePermission)
    {
        android.content.pm.PackageParser$Package r0;
        com.android.server.pm.BasePermission r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        java.lang.String $r2, $r11, $r12, $r16, $r20, $r22, $r25, $r29;
        java.util.ArrayList $r3, $r4;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.lang.SecurityException $r7, $r15, $r23;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r17, $r18, $r19, $r21, $r24, $r26, $r27, $r28;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: com.android.server.pm.BasePermission;

        $r3 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r2 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>($r2);

        if i0 != -1 goto label01;

        $r23 = new java.lang.SecurityException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r22 = r0.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not requested permission ");

        $r25 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r29);

        throw $r23;

     label01:
        $i1 = r1.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i2 = $i1 & 15;

        if $i2 != 0 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z0 = $z5;

        $i3 = r1.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i4 = $i3 & 15;

        if $i4 != 1 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        z1 = $z4;

        $i5 = r1.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i6 = $i5 & 32;

        if $i6 == 0 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z2 = $z6;

        if z0 != 0 goto label08;

        if z1 != 0 goto label08;

        if z2 != 0 goto label08;

        $r15 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r16 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a changeable permission type");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label08:
        if z0 != 0 goto label09;

        if z1 == 0 goto label10;

     label09:
        $r4 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissionsRequired>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.Boolean) $r6;

        $z3 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label10;

        $r7 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t change ");

        $r11 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". It is required by the application");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label10:
        return;
    }

    public void grantPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r30, $r34;
        java.util.HashMap r3, $r10, $r11, $r14;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.BasePermission r5;
        com.android.server.pm.PackageSetting r6;
        com.android.server.pm.GrantedPermissions r7, $r23;
        java.lang.Throwable r8, $r32;
        android.content.Context $r9;
        java.lang.Object $r12, $r15, $r17;
        com.android.server.pm.Settings $r13, $r20;
        com.android.server.pm.SharedUserSetting $r16;
        boolean $z0, $z1;
        java.util.HashSet $r18;
        int[] $r19, $r21, $r22;
        java.lang.StringBuilder $r24, $r26, $r27, $r28, $r29, $r33;
        java.lang.IllegalArgumentException $r25, $r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GRANT_REVOKE_PERMISSIONS", null);

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r10;

        entermonitor $r10;

     label01:
        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r12;

        if r4 != null goto label02;

        $r31 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r31;

     label02:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.android.server.pm.BasePermission) $r15;

        if r5 != null goto label03;

        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission: ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r25;

     label03:
        staticinvoke <com.android.server.pm.PackageManagerService: void checkGrantRevokePermissions(android.content.pm.PackageParser$Package,com.android.server.pm.BasePermission)>(r4, r5);

        $r17 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r6 = (com.android.server.pm.PackageSetting) $r17;

        if r6 != null goto label05;

        exitmonitor r3;

     label04:
        return;

     label05:
        $r16 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r16 == null goto label06;

        $r23 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label07;

     label06:
        $r23 = r6;

     label07:
        r7 = $r23;

        $r18 = r7.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        if $z0 == 0 goto label09;

        $z1 = r6.<com.android.server.pm.PackageSetting: boolean haveGids>;

        if $z1 == 0 goto label08;

        $r22 = r7.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r19 = r5.<com.android.server.pm.BasePermission: int[] gids>;

        $r21 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r22, $r19);

        r7.<com.android.server.pm.GrantedPermissions: int[] gids> = $r21;

     label08:
        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void writeLPr()>();

     label09:
        exitmonitor r3;

     label10:
        goto label13;

     label11:
        $r32 := @caughtexception;

        r8 = $r32;

        exitmonitor r3;

     label12:
        throw r8;

     label13:
        return;

        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void revokePermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r25, $r32, $r42;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.util.HashMap r3, $r10, $r11, $r14;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.BasePermission r5;
        com.android.server.pm.PackageSetting r6;
        com.android.server.pm.GrantedPermissions r7, $r31;
        java.lang.Throwable r8, r9, $r40, $r44;
        android.content.pm.ApplicationInfo $r12;
        java.lang.Object $r13, $r16, $r17;
        com.android.server.pm.Settings $r15, $r28;
        java.util.HashSet $r18, $r23;
        com.android.server.pm.SharedUserSetting $r19;
        boolean $z0, $z2;
        com.android.server.pm.UserManagerService $r20;
        java.lang.StringBuilder $r21, $r22, $r24, $r33, $r34, $r35, $r36, $r37, $r43;
        int[] $r26, $r27, $r30, r46, r47;
        java.lang.IllegalArgumentException $r29, $r38;
        android.content.Context $r39;
        android.os.RemoteException $r41;
        android.app.IActivityManager r45;
        long l8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = -1;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r10;

        entermonitor $r10;

     label01:
        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r13;

        if r4 != null goto label02;

        $r38 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r43 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r38;

     label02:
        $r12 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i5 == $i4 goto label03;

        $r39 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r39.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GRANT_REVOKE_PERMISSIONS", null);

     label03:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r17 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.android.server.pm.BasePermission) $r17;

        if r5 != null goto label04;

        $r29 = new java.lang.IllegalArgumentException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission: ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r29;

     label04:
        staticinvoke <com.android.server.pm.PackageManagerService: void checkGrantRevokePermissions(android.content.pm.PackageParser$Package,com.android.server.pm.BasePermission)>(r4, r5);

        $r16 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r6 = (com.android.server.pm.PackageSetting) $r16;

        if r6 != null goto label06;

        exitmonitor r3;

     label05:
        return;

     label06:
        $r19 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r19 == null goto label07;

        $r31 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label08;

     label07:
        $r31 = r6;

     label08:
        r7 = $r31;

        $r18 = r7.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r18.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        if $z0 == 0 goto label10;

        $r23 = r7.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r23.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        $z2 = r6.<com.android.server.pm.PackageSetting: boolean haveGids>;

        if $z2 == 0 goto label09;

        $r27 = r7.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r26 = r5.<com.android.server.pm.BasePermission: int[] gids>;

        $r30 = staticinvoke <com.android.server.pm.PackageManagerService: int[] removeInts(int[],int[])>($r27, $r26);

        r7.<com.android.server.pm.GrantedPermissions: int[] gids> = $r30;

     label09:
        $r28 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r28.<com.android.server.pm.Settings: void writeLPr()>();

        i0 = r6.<com.android.server.pm.PackageSetting: int appId>;

     label10:
        exitmonitor r3;

     label11:
        goto label14;

     label12:
        $r44 := @caughtexception;

        r8 = $r44;

        exitmonitor r3;

     label13:
        throw r8;

     label14:
        if i0 < 0 goto label22;

        r45 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r45 == null goto label22;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l8 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label15:
        $r20 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r46 = virtualinvoke $r20.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        r47 = r46;

        i1 = lengthof r47;

        i2 = 0;

     label16:
        if i2 >= i1 goto label17;

        i3 = r47[i2];

        $i6 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i3, i0);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revoke ");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r45.<android.app.IActivityManager: void killUid(int,java.lang.String)>($i6, $r25);

        i2 = i2 + 1;

        goto label16;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        goto label22;

     label18:
        $r41 := @caughtexception;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        goto label22;

     label20:
        $r40 := @caughtexception;

        r9 = $r40;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        throw r9;

     label22:
        return;

        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label15 to label17 with label18;
        catch java.lang.Throwable from label15 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public boolean isProtectedBroadcast(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r6;
        java.util.HashSet $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mProtectedBroadcasts>;

        $z0 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int checkSignatures(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        java.util.HashMap r3, $r7, $r8, $r10;
        android.content.pm.PackageParser$Package r4, r5;
        java.lang.Throwable r6, $r16;
        java.lang.Object $r9, $r11, $r12, $r13;
        android.content.pm.Signature[] $r14, $r15;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r9;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (android.content.pm.PackageParser$Package) $r11;

        if r4 == null goto label2;

        $r12 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r12 == null goto label2;

        if r5 == null goto label2;

        $r13 = r5.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r13 != null goto label4;

     label2:
        exitmonitor r3;

     label3:
        return -4;

     label4:
        $r15 = r4.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r14 = r5.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i0 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r15, $r14);

        exitmonitor r3;

     label5:
        return $i0;

     label6:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r3;

     label7:
        throw r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int checkUidSignatures(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, i3, i4;
        java.util.HashMap r1, $r6;
        android.content.pm.Signature[] r2, r3;
        java.lang.Object r4, r18;
        java.lang.Throwable r5, $r17;
        com.android.server.pm.Settings $r7, $r9;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.pm.PackageSetting $r8, $r11;
        com.android.server.pm.PackageSignatures $r10, $r12, $r15, $r16;
        com.android.server.pm.SharedUserSetting $r13, $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r4 = virtualinvoke $r7.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i3);

        if r4 == null goto label05;

        $z0 = r4 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label02;

        $r14 = (com.android.server.pm.SharedUserSetting) r4;

        $r16 = $r14.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r2 = $r16.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        goto label07;

     label02:
        $z1 = r4 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label03;

        $r8 = (com.android.server.pm.PackageSetting) r4;

        $r10 = $r8.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r2 = $r10.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        goto label07;

     label03:
        exitmonitor r1;

     label04:
        return -4;

     label05:
        exitmonitor r1;

     label06:
        return -4;

     label07:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r18 = virtualinvoke $r9.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i4);

        if r18 == null goto label11;

        $z3 = r18 instanceof com.android.server.pm.SharedUserSetting;

        if $z3 == 0 goto label08;

        $r13 = (com.android.server.pm.SharedUserSetting) r18;

        $r15 = $r13.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r3 = $r15.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        goto label13;

     label08:
        $z2 = r18 instanceof com.android.server.pm.PackageSetting;

        if $z2 == 0 goto label09;

        $r11 = (com.android.server.pm.PackageSetting) r18;

        $r12 = $r11.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r3 = $r12.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        goto label13;

     label09:
        exitmonitor r1;

     label10:
        return -4;

     label11:
        exitmonitor r1;

     label12:
        return -4;

     label13:
        $i2 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>(r2, r3);

        exitmonitor r1;

     label14:
        return $i2;

     label15:
        $r17 := @caughtexception;

        r5 = $r17;

        exitmonitor r1;

     label16:
        throw r5;

        catch java.lang.Throwable from label01 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    static int compareSignatures(android.content.pm.Signature[], android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0, r1, r3, r11;
        java.util.HashSet r2, $r6, $r7, r10;
        int i0, i1, $i2, $i3, $i4, i7, i8;
        android.content.pm.Signature r4, r5, $r8, $r9;
        boolean $z0, $z3;
        byte $b5, $b6;

        r0 := @parameter0: android.content.pm.Signature[];

        r1 := @parameter1: android.content.pm.Signature[];

        if r0 != null goto label03;

        if r1 != null goto label01;

        $b6 = 1;

        goto label02;

     label01:
        $b6 = -1;

     label02:
        return $b6;

     label03:
        if r1 != null goto label04;

        return -2;

     label04:
        $i3 = lengthof r0;

        $i2 = lengthof r1;

        if $i3 == $i2 goto label05;

        return -3;

     label05:
        $i4 = lengthof r0;

        if $i4 != 1 goto label08;

        $r8 = r0[0];

        $r9 = r1[0];

        $z3 = virtualinvoke $r8.<android.content.pm.Signature: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label06;

        $b5 = 0;

        goto label07;

     label06:
        $b5 = -3;

     label07:
        return $b5;

     label08:
        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r2 = $r6;

        r3 = r0;

        i0 = lengthof r3;

        i1 = 0;

     label09:
        if i1 >= i0 goto label10;

        r4 = r3[i1];

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label09;

     label10:
        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r10 = $r7;

        r11 = r1;

        i7 = lengthof r11;

        i8 = 0;

     label11:
        if i8 >= i7 goto label12;

        r5 = r11[i8];

        virtualinvoke r10.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

        i8 = i8 + 1;

        goto label11;

     label12:
        $z0 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label13;

        return 0;

     label13:
        return -3;
    }

    private boolean isCompatSignatureUpdateNeeded(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.pm.Settings $r2, $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z4 = virtualinvoke $r3.<com.android.server.pm.Settings: boolean isExternalDatabaseVersionOlderThan(int)>(2);

        if $z4 != 0 goto label2;

     label1:
        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z1 != 0 goto label3;

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z2 = virtualinvoke $r2.<com.android.server.pm.Settings: boolean isInternalDatabaseVersionOlderThan(int)>(2);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    private int compareSignaturesCompat(com.android.server.pm.PackageSignatures, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSignatures r1;
        android.content.pm.PackageParser$Package r2;
        java.util.HashSet r3, $r11, $r12, r20;
        android.content.pm.Signature[] r4, r7, r8, $r13, r21;
        int i0, i1, i2, i3, i4, i5;
        android.content.pm.Signature r5, r6, r9;
        java.lang.Throwable r10, $r18;
        boolean $z0, $z1;
        com.android.server.pm.Settings $r14;
        java.util.HashMap $r15, r23;
        com.android.server.pm.KeySetManagerService $r16;
        java.lang.String $r17;
        java.security.cert.CertificateEncodingException $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSignatures;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isCompatSignatureUpdateNeeded(android.content.pm.PackageParser$Package)>(r2);

        if $z0 != 0 goto label01;

        return -3;

     label01:
        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r3 = $r12;

        r4 = r1.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        i0 = lengthof r4;

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        r5 = r4[i1];

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label02;

     label03:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r20 = $r11;

        r21 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        i4 = lengthof r21;

        i5 = 0;

     label04:
        if i5 >= i4 goto label10;

        r6 = r21[i5];

     label05:
        r7 = virtualinvoke r6.<android.content.pm.Signature: android.content.pm.Signature[] getChainSignatures()>();

        r8 = r7;

        i2 = lengthof r8;

        i3 = 0;

     label06:
        if i3 >= i2 goto label07;

        r9 = r8[i3];

        virtualinvoke r20.<java.util.HashSet: boolean add(java.lang.Object)>(r9);

        i3 = i3 + 1;

        goto label06;

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        virtualinvoke r20.<java.util.HashSet: boolean add(java.lang.Object)>(r6);

     label09:
        i5 = i5 + 1;

        goto label04;

     label10:
        $z1 = virtualinvoke r20.<java.util.HashSet: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label16;

        $r13 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        virtualinvoke r1.<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>($r13);

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r23 = $r15;

        entermonitor $r15;

     label11:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r14.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r17 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r16.<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>($r17);

        exitmonitor r23;

     label12:
        goto label15;

     label13:
        $r18 := @caughtexception;

        r10 = $r18;

        exitmonitor r23;

     label14:
        throw r10;

     label15:
        return 0;

     label16:
        return -3;

        catch java.security.cert.CertificateEncodingException from label05 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private boolean isRecoverSignatureUpdateNeeded(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean $z0, $z1, $z2;
        com.android.server.pm.Settings $r2, $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z2 = virtualinvoke $r3.<com.android.server.pm.Settings: boolean isExternalDatabaseVersionOlderThan(int)>(3);

        return $z2;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z1 = virtualinvoke $r2.<com.android.server.pm.Settings: boolean isInternalDatabaseVersionOlderThan(int)>(3);

        return $z1;
    }

    private int compareSignaturesRecover(com.android.server.pm.PackageSignatures, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSignatures r1;
        android.content.pm.PackageParser$Package r2;
        java.lang.String r3, $r9, $r14, $r17, $r19;
        java.security.cert.CertificateException r4, $r18;
        boolean $z0, $z1;
        android.content.pm.Signature[] $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSignatures;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isRecoverSignatureUpdateNeeded(android.content.pm.PackageParser$Package)>(r2);

        if $z0 != 0 goto label1;

        return -3;

     label1:
        r3 = null;

     label2:
        $r6 = r1.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r5 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $z1 = staticinvoke <android.content.pm.Signature: boolean areEffectiveMatch(android.content.pm.Signature[],android.content.pm.Signature[])>($r6, $r5);

        if $z1 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovered effectively matching certificates for ");

        $r17 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(4, $r19);

     label3:
        return 0;

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r4 = $r18;

        r3 = virtualinvoke r4.<java.security.cert.CertificateException: java.lang.String getMessage()>();

     label6:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to recover certificates for ");

        $r9 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(4, $r14);

        return -3;

        catch java.security.cert.CertificateException from label2 to label3 with label5;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2, $i3, i4;
        java.util.HashMap r1, $r7;
        java.lang.Object r2, $r13;
        com.android.server.pm.SharedUserSetting r3;
        java.lang.String[] r4, $r9;
        java.util.Iterator r5;
        java.lang.Throwable r6, $r16;
        com.android.server.pm.Settings $r8;
        boolean $z0, $z1, $z2;
        java.lang.String $r10, $r14;
        java.util.HashSet $r11, $r12;
        com.android.server.pm.PackageSetting $r15, r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r2 = virtualinvoke $r8.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i4);

        $z0 = r2 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label05;

        r3 = (com.android.server.pm.SharedUserSetting) r2;

        $r11 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        i1 = virtualinvoke $r11.<java.util.HashSet: int size()>();

        r4 = newarray (java.lang.String)[i1];

        $r12 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        r5 = virtualinvoke $r12.<java.util.HashSet: java.util.Iterator iterator()>();

        i2 = 0;

     label02:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $i3 = i2;

        i2 = i2 + 1;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.android.server.pm.PackageSetting) $r13;

        $r14 = $r15.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r4[$i3] = $r14;

        goto label02;

     label03:
        exitmonitor r1;

     label04:
        return r4;

     label05:
        $z1 = r2 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label07;

        r17 = (com.android.server.pm.PackageSetting) r2;

        $r9 = newarray (java.lang.String)[1];

        $r10 = r17.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r9[0] = $r10;

        exitmonitor r1;

     label06:
        return $r9;

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r1;

     label10:
        throw r6;

     label11:
        return null;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.String getNameForUid(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1, $i2;
        java.util.HashMap r1, $r5;
        java.lang.Object r2;
        com.android.server.pm.SharedUserSetting r3;
        java.lang.Throwable r4, $r14;
        com.android.server.pm.Settings $r6;
        boolean $z0, $z1;
        java.lang.String $r7, $r10, $r12;
        java.lang.StringBuilder $r8, $r9, $r11, $r13;
        com.android.server.pm.PackageSetting r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r2 = virtualinvoke $r6.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i1);

        $z0 = r2 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label3;

        r3 = (com.android.server.pm.SharedUserSetting) r2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = r3.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = r3.<com.android.server.pm.SharedUserSetting: int userId>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label2:
        return $r12;

     label3:
        $z1 = r2 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label5;

        r15 = (com.android.server.pm.PackageSetting) r2;

        $r7 = r15.<com.android.server.pm.PackageSetting: java.lang.String name>;

        exitmonitor r1;

     label4:
        return $r7;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getUidForSharedUser(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r5;
        com.android.server.pm.SharedUserSetting r3;
        java.lang.Throwable r4, $r7;
        com.android.server.pm.Settings $r6;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return -1;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r3 = virtualinvoke $r6.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)>(r1, 0, 0);

        if r3 != null goto label4;

        exitmonitor r2;

     label3:
        return -1;

     label4:
        $i0 = r3.<com.android.server.pm.SharedUserSetting: int userId>;

        exitmonitor r2;

     label5:
        return $i0;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label7:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int getFlagsForUid(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1, $i2, $i3;
        java.util.HashMap r1, $r5;
        java.lang.Object r2;
        com.android.server.pm.SharedUserSetting r3;
        java.lang.Throwable r4, $r7;
        com.android.server.pm.Settings $r6;
        boolean $z0, $z1;
        com.android.server.pm.PackageSetting r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r2 = virtualinvoke $r6.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i1);

        $z0 = r2 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label3;

        r3 = (com.android.server.pm.SharedUserSetting) r2;

        $i3 = r3.<com.android.server.pm.SharedUserSetting: int pkgFlags>;

        exitmonitor r1;

     label2:
        return $i3;

     label3:
        $z1 = r2 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label5;

        r8 = (com.android.server.pm.PackageSetting) r2;

        $i2 = r8.<com.android.server.pm.PackageSetting: int pkgFlags>;

        exitmonitor r1;

     label4:
        return $i2;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean isUidPrivileged(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        java.util.HashMap r1, $r6;
        java.lang.Object r2, $r9;
        com.android.server.pm.SharedUserSetting r3;
        java.util.Iterator r4;
        java.lang.Throwable r5, $r11;
        com.android.server.pm.Settings $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashSet $r8;
        com.android.server.pm.PackageSetting $r10, r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r2 = virtualinvoke $r7.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i1);

        $z0 = r2 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label05;

        r3 = (com.android.server.pm.SharedUserSetting) r2;

        $r8 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        r4 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.pm.PackageSetting) $r9;

        $z4 = virtualinvoke $r10.<com.android.server.pm.PackageSetting: boolean isPrivileged()>();

        if $z4 == 0 goto label02;

        exitmonitor r1;

     label03:
        return 1;

     label04:
        goto label07;

     label05:
        $z1 = r2 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label07;

        r12 = (com.android.server.pm.PackageSetting) r2;

        $z2 = virtualinvoke r12.<com.android.server.pm.PackageSetting: boolean isPrivileged()>();

        exitmonitor r1;

     label06:
        return $z2;

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r1;

     label10:
        throw r5;

     label11:
        return 0;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.String[] getAppOpPermissionPackages(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r5;
        android.util.ArraySet r3;
        java.lang.Throwable r4, $r11;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        int $i0;
        java.lang.String[] $r8, $r10;
        java.lang.Object[] $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.util.ArraySet) $r7;

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return null;

     label3:
        $i0 = virtualinvoke r3.<android.util.ArraySet: int size()>();

        $r8 = newarray (java.lang.String)[$i0];

        $r9 = virtualinvoke r3.<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (java.lang.String[]) $r9;

        exitmonitor r2;

     label4:
        return $r10;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.pm.ResolveInfo resolveIntent(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, $i2;
        java.util.List r3;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        android.content.pm.ResolveInfo $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "resolve intent");

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        $r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo chooseBestActivity(android.content.Intent,java.lang.String,int,java.util.List,int)>(r1, r2, i0, r3, i1);

        return $r5;
    }

    public void setLastChosenActivity(android.content.Intent, java.lang.String, int, android.content.IntentFilter, int, android.content.ComponentName)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, i2;
        android.content.IntentFilter r3;
        android.content.ComponentName r4;
        java.util.List r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.IntentFilter;

        i1 := @parameter4: int;

        r4 := @parameter5: android.content.ComponentName;

        i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r1, r2, i0, r5, 0, 0, 1, 0, i2);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPreferredActivityInternal(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean,int,java.lang.String)>(r3, i1, null, r4, 0, i2, "Setting last chosen");

        return;
    }

    public android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1;
        java.util.List r3;
        android.content.pm.ResolveInfo $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r1, r2, i0, r3, 0, 0, 0, 0, i1);

        return $r4;
    }

    private android.content.pm.ResolveInfo chooseBestActivity(android.content.Intent, java.lang.String, int, java.util.List, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2, $r28, $r34, $r35;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.List r3;
        boolean z0, $z1, $z2, $z3;
        android.content.pm.ResolveInfo r4, r5, r6, $r9, $r11, $r12, $r14, $r37, r39;
        java.lang.Object $r7, $r8, $r10, $r38;
        android.content.pm.ActivityInfo $r13, $r16, $r17, $r18, $r19, $r22, $r27, $r29;
        android.content.pm.ApplicationInfo $r15, $r20, $r21, $r23;
        java.lang.StringBuilder $r24, $r25, $r26, $r30, $r31, $r32, $r33, $r36;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        if r3 == null goto label9;

        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if i2 != 1 goto label1;

        $r38 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r37 = (android.content.pm.ResolveInfo) $r38;

        return $r37;

     label1:
        if i2 <= 1 goto label9;

        $i3 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i4 = $i3 & 8;

        if $i4 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (android.content.pm.ResolveInfo) $r7;

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        r5 = (android.content.pm.ResolveInfo) $r8;

        if z0 == 0 goto label4;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r28 = $r27.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i13 = r4.<android.content.pm.ResolveInfo: int priority>;

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r29 = r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r34 = $r29.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i14 = r5.<android.content.pm.ResolveInfo: int priority>;

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r35);

     label4:
        $i5 = r4.<android.content.pm.ResolveInfo: int priority>;

        $i6 = r5.<android.content.pm.ResolveInfo: int priority>;

        if $i5 != $i6 goto label5;

        $i7 = r4.<android.content.pm.ResolveInfo: int preferredOrder>;

        $i8 = r5.<android.content.pm.ResolveInfo: int preferredOrder>;

        if $i7 != $i8 goto label5;

        $z1 = r4.<android.content.pm.ResolveInfo: boolean isDefault>;

        $z2 = r5.<android.content.pm.ResolveInfo: boolean isDefault>;

        if $z1 == $z2 goto label6;

     label5:
        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.content.pm.ResolveInfo) $r10;

        return $r9;

     label6:
        $i9 = r4.<android.content.pm.ResolveInfo: int priority>;

        r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r1, r2, i0, r3, $i9, 1, 0, z0, i1);

        if r6 == null goto label7;

        return r6;

     label7:
        if i1 == 0 goto label8;

        $r11 = new android.content.pm.ResolveInfo;

        $r14 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        specialinvoke $r11.<android.content.pm.ResolveInfo: void <init>(android.content.pm.ResolveInfo)>($r14);

        r39 = $r11;

        $r13 = new android.content.pm.ActivityInfo;

        $r16 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        specialinvoke $r13.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>($r16);

        r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r13;

        $r17 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = new android.content.pm.ApplicationInfo;

        $r19 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r20 = $r19.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke $r15.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>($r20);

        $r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r15;

        $r18 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r21 = $r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r22 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r23 = $r22.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        $i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i10);

        $i12 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, $i11);

        $r21.<android.content.pm.ApplicationInfo: int uid> = $i12;

        return r39;

     label8:
        $r12 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        return $r12;

     label9:
        return null;
    }

    private android.content.pm.ResolveInfo findPersistentPreferredActivityLP(android.content.Intent, java.lang.String, int, java.util.List, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2, $r18, $r19, $r20, $r21, $r28, $r30, $r32, $r41, $r43;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i11, $i13;
        java.util.List r3, r5, $r44;
        boolean z0, $z1, $z2, $z3;
        com.android.server.pm.PersistentPreferredIntentResolver r4;
        com.android.server.pm.PersistentPreferredActivity r6;
        android.content.pm.ActivityInfo r7, $r14, $r22, $r27, $r31;
        android.content.pm.ResolveInfo r8;
        com.android.server.pm.Settings $r9;
        java.lang.Object $r10, $r12, $r15;
        android.util.SparseArray $r11;
        android.content.ComponentName $r13, $r38;
        android.content.pm.ApplicationInfo $r16, $r17;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r29, $r34, $r36, $r37, $r39, $r40;
        android.util.LogPrinter $r33, $r42;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        i1 := @parameter5: int;

        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = $r9.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.pm.PersistentPreferredIntentResolver) $r10;

        if z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Looking for presistent preferred activities...");

     label01:
        if r4 == null goto label04;

        $i13 = i0 & 65536;

        if $i13 == 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        $r44 = virtualinvoke r4.<com.android.server.pm.PersistentPreferredIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r1, r2, $z3, i1);

        goto label05;

     label04:
        $r44 = null;

     label05:
        r5 = $r44;

        if r5 == null goto label19;

        $i6 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i6 <= 0 goto label19;

        i3 = interfaceinvoke r5.<java.util.List: int size()>();

        i4 = 0;

     label06:
        if i4 >= i3 goto label19;

        $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i4);

        r6 = (com.android.server.pm.PersistentPreferredActivity) $r12;

        if z0 == 0 goto label09;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking PersistentPreferredActivity ds=");

        $i11 = virtualinvoke r6.<com.android.server.pm.PersistentPreferredActivity: int countDataSchemes()>();

        if $i11 <= 0 goto label07;

        $r41 = virtualinvoke r6.<com.android.server.pm.PersistentPreferredActivity: java.lang.String getDataScheme(int)>(0);

        goto label08;

     label07:
        $r41 = "<none>";

     label08:
        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  component=");

        $r38 = r6.<com.android.server.pm.PersistentPreferredActivity: android.content.ComponentName mComponent>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r43);

        $r42 = new android.util.LogPrinter;

        specialinvoke $r42.<android.util.LogPrinter: void <init>(int,java.lang.String,int)>(2, "PackageManager", 3);

        virtualinvoke r6.<com.android.server.pm.PersistentPreferredActivity: void dump(android.util.Printer,java.lang.String)>($r42, "  ");

     label09:
        $r13 = r6.<com.android.server.pm.PersistentPreferredActivity: android.content.ComponentName mComponent>;

        $i7 = i0 | 512;

        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r13, $i7, i1);

        if z0 == 0 goto label11;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Found persistent preferred activity:");

        if r7 == null goto label10;

        $r33 = new android.util.LogPrinter;

        specialinvoke $r33.<android.util.LogPrinter: void <init>(int,java.lang.String,int)>(2, "PackageManager", 3);

        virtualinvoke r7.<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>($r33, "  ");

        goto label11;

     label10:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "  null");

     label11:
        if r7 != null goto label12;

        goto label18;

     label12:
        i5 = 0;

     label13:
        if i5 >= i2 goto label18;

        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i5);

        r8 = (android.content.pm.ResolveInfo) $r15;

        $r14 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r18 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = $r16.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z1 != 0 goto label14;

        goto label17;

     label14:
        $r22 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r21 = $r22.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r20 = r7.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 != 0 goto label15;

        goto label17;

     label15:
        if z0 == 0 goto label16;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning persistent preferred activity: ");

        $r27 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r28 = $r27.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r31 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r32 = $r31.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r30);

     label16:
        return r8;

     label17:
        i5 = i5 + 1;

        goto label13;

     label18:
        i4 = i4 + 1;

        goto label06;

     label19:
        return null;
    }

    android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent, java.lang.String, int, java.util.List, int, boolean, boolean, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r17;
        java.lang.String r2, $r31, $r32, $r33, $r34, $r39, $r41, $r43, $r54, $r65, $r67, $r68, $r78, $r80, $r86, $r88, $r90, $r92;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        java.util.List r3, r7, $r99;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.HashMap r4, $r16;
        android.content.pm.ResolveInfo r5, r9, r12, r100;
        com.android.server.pm.PreferredIntentResolver r6;
        com.android.server.pm.PreferredActivity r8, r11, $r56;
        android.content.pm.ActivityInfo r10, $r28, $r30, $r38, $r42, $r85;
        java.lang.Throwable r13, r15, $r96, $r97;
        com.android.server.pm.UserManagerService $r14;
        java.lang.Object $r18, $r23, $r29, $r94;
        com.android.server.pm.Settings $r19, $r22, $r37, $r61, $r98;
        android.util.SparseArray $r20;
        com.android.server.pm.PreferredComponent $r21, $r25, $r49, $r51, $r52, $r57, $r64, $r70, $r72;
        android.content.ComponentName $r24, $r53, $r60, $r82;
        android.content.pm.ApplicationInfo $r26, $r27;
        java.lang.StringBuilder $r35, $r36, $r40, $r44, $r45, $r46, $r47, $r48, $r50, $r55, $r58, $r59, $r62, $r66, $r69, $r71, $r73, $r74, $r75, $r76, $r77, $r81, $r83, $r84, $r87, $r89, $r91, $r93, $r95;
        android.util.LogPrinter $r63, $r79;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        i2 := @parameter8: int;

        $r14 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z4 = virtualinvoke $r14.<com.android.server.pm.UserManagerService: boolean exists(int)>(i2);

        if $z4 != 0 goto label01;

        return null;

     label01:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r16;

        entermonitor $r16;

     label02:
        $r17 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r17 == null goto label03;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

     label03:
        r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPersistentPreferredActivityLP(android.content.Intent,java.lang.String,int,java.util.List,boolean,int)>(r1, r2, i0, r3, z2, i2);

        if r5 == null goto label05;

        exitmonitor r4;

     label04:
        return r5;

     label05:
        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r20 = $r19.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r18 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.pm.PreferredIntentResolver) $r18;

        if z2 == 0 goto label06;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Looking for preferred activities...");

     label06:
        if r6 == null goto label09;

        $i14 = i0 & 65536;

        if $i14 == 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        $r99 = virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r1, r2, $z9, i2);

        goto label10;

     label09:
        $r99 = null;

     label10:
        r7 = $r99;

        if r7 == null goto label44;

        $i7 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i7 <= 0 goto label44;

        z3 = 0;

     label11:
        i3 = 0;

        if z2 == 0 goto label12;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Figuring out best match...");

     label12:
        i5 = interfaceinvoke r3.<java.util.List: int size()>();

        i4 = 0;

     label13:
        if i4 >= i5 goto label16;

        $r94 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i4);

        r9 = (android.content.pm.ResolveInfo) $r94;

        if z2 == 0 goto label14;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Match for ");

        $r85 = r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r85);

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": 0x");

        $r86 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r88);

     label14:
        $i13 = r9.<android.content.pm.ResolveInfo: int match>;

        if $i13 <= i3 goto label15;

        i3 = r9.<android.content.pm.ResolveInfo: int match>;

     label15:
        i4 = i4 + 1;

        goto label13;

     label16:
        if z2 == 0 goto label17;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Best match: 0x");

        $r90 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r92);

     label17:
        i15 = i3 & 268369920;

        i16 = interfaceinvoke r7.<java.util.List: int size()>();

        i17 = 0;

     label18:
        if i17 >= i16 goto label40;

        $r23 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i17);

        r8 = (com.android.server.pm.PreferredActivity) $r23;

        if z2 == 0 goto label21;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking PreferredActivity ds=");

        $i12 = virtualinvoke r8.<com.android.server.pm.PreferredActivity: int countDataSchemes()>();

        if $i12 <= 0 goto label19;

        $r78 = virtualinvoke r8.<com.android.server.pm.PreferredActivity: java.lang.String getDataScheme(int)>(0);

        goto label20;

     label19:
        $r78 = "<none>";

     label20:
        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  component=");

        $r72 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r82 = $r72.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $r81 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r82);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r80);

        $r79 = new android.util.LogPrinter;

        specialinvoke $r79.<android.util.LogPrinter: void <init>(int,java.lang.String,int)>(2, "PackageManager", 3);

        virtualinvoke r8.<com.android.server.pm.PreferredActivity: void dump(android.util.Printer,java.lang.String)>($r79, "  ");

     label21:
        $r21 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $i8 = $r21.<com.android.server.pm.PreferredComponent: int mMatch>;

        if $i8 == i15 goto label22;

        if z2 == 0 goto label39;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping bad match ");

        $r70 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $i11 = $r70.<com.android.server.pm.PreferredComponent: int mMatch>;

        $r68 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r66 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r67);

        goto label39;

     label22:
        if z0 == 0 goto label23;

        $r64 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z8 = $r64.<com.android.server.pm.PreferredComponent: boolean mAlways>;

        if $z8 != 0 goto label23;

        if z2 == 0 goto label39;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Skipping mAlways=false entry");

        goto label39;

     label23:
        $r25 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r24 = $r25.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $i9 = i0 | 512;

        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r24, $i9, i2);

        if z2 == 0 goto label25;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Found preferred activity:");

        if r10 == null goto label24;

        $r63 = new android.util.LogPrinter;

        specialinvoke $r63.<android.util.LogPrinter: void <init>(int,java.lang.String,int)>(2, "PackageManager", 3);

        virtualinvoke r10.<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>($r63, "  ");

        goto label25;

     label24:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "  null");

     label25:
        if r10 != null goto label26;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling preferred activity: ");

        $r57 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r60 = $r57.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r65 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r65);

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r8);

        z3 = 1;

        goto label39;

     label26:
        i6 = 0;

     label27:
        if i6 >= i5 goto label39;

        $r29 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6);

        r12 = (android.content.pm.ResolveInfo) $r29;

        $r28 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r27 = $r28.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = $r27.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r26 = r10.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r32 = $r26.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z5 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z5 != 0 goto label28;

        goto label38;

     label28:
        $r30 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r33 = $r30.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r34 = r10.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z6 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z6 != 0 goto label29;

        goto label38;

     label29:
        if z1 == 0 goto label30;

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r8);

        z3 = 1;

        goto label39;

     label30:
        if z0 == 0 goto label33;

        $r49 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z7 = virtualinvoke $r49.<com.android.server.pm.PreferredComponent: boolean sameSet(java.util.List,int)>(r3, i1);

        if $z7 != 0 goto label33;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Result set changed, dropping preferred activity for ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type ");

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r54);

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r8);

        $r56 = new com.android.server.pm.PreferredActivity;

        $r52 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $i10 = $r52.<com.android.server.pm.PreferredComponent: int mMatch>;

        $r51 = r8.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r53 = $r51.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        specialinvoke $r56.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>(r8, $i10, null, $r53, 0);

        r11 = $r56;

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>(r11);

     label31:
        $r61 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r61.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        exitmonitor r4;

     label32:
        return null;

     label33:
        if z2 == 0 goto label34;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning preferred activity: ");

        $r42 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r43 = $r42.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r44 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r38 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r39 = $r38.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r40 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r41);

     label34:
        r100 = r12;

     label35:
        if z3 == 0 goto label36;

        $r37 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r37.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

     label36:
        exitmonitor r4;

     label37:
        return r100;

     label38:
        i6 = i6 + 1;

        goto label27;

     label39:
        i17 = i17 + 1;

        goto label18;

     label40:
        if z3 == 0 goto label44;

        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r22.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        goto label44;

     label41:
        $r97 := @caughtexception;

        r13 = $r97;

     label42:
        if z3 == 0 goto label43;

        $r98 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r98.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

     label43:
        throw r13;

     label44:
        exitmonitor r4;

     label45:
        goto label48;

     label46:
        $r96 := @caughtexception;

        r15 = $r96;

        exitmonitor r4;

     label47:
        throw r15;

     label48:
        if z2 == 0 goto label49;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "No preferred activity to return");

     label49:
        return null;

        catch java.lang.Throwable from label11 to label31 with label41;
        catch java.lang.Throwable from label33 to label35 with label41;
        catch java.lang.Throwable from label38 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
        catch java.lang.Throwable from label02 to label04 with label46;
        catch java.lang.Throwable from label05 to label32 with label46;
        catch java.lang.Throwable from label33 to label37 with label46;
        catch java.lang.Throwable from label38 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
    }

    public boolean canForwardTo(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, i2, i3, $i4;
        java.util.List r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        com.android.server.pm.CrossProfileIntentFilter $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

        r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List getMatchingCrossProfileIntentFilters(android.content.Intent,java.lang.String,int)>(r1, r2, i0);

        if r3 == null goto label3;

        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (com.android.server.pm.CrossProfileIntentFilter) $r5;

        $i4 = virtualinvoke $r6.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        if $i4 != i1 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private java.util.List getMatchingCrossProfileIntentFilters(android.content.Intent, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0;
        com.android.server.pm.CrossProfileIntentResolver r3;
        com.android.server.pm.Settings $r4;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        java.util.List $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.pm.CrossProfileIntentResolver) $r6;

        if r3 == null goto label1;

        $r7 = virtualinvoke r3.<com.android.server.pm.CrossProfileIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r1, r2, 0, i0);

        return $r7;

     label1:
        return null;
    }

    public java.util.List queryIntentActivities(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r23;
        java.lang.String r2, r27;
        int i0, i1, $i2;
        android.content.ComponentName r3;
        java.util.ArrayList r4, r8, $r14, $r16, $r19, $r22;
        android.content.pm.ActivityInfo r5;
        android.content.pm.ResolveInfo r6, r7, $r21, r29;
        java.lang.Throwable r9, $r25;
        com.android.server.pm.UserManagerService $r10;
        boolean $z0;
        java.util.HashMap $r11, $r13, r26;
        java.lang.Object $r12;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r15, $r18;
        java.util.List $r17, $r24, r28, r30;
        java.util.Comparator $r20;
        android.content.pm.PackageParser$Package r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r10 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r10.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        $r24 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r24;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i1, 0, 0, "query intent activities");

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label02;

        $r23 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r23 == null goto label02;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label02:
        if r3 == null goto label04;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r22;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label03;

        $r21 = new android.content.pm.ResolveInfo;

        specialinvoke $r21.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r21;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label03:
        return r4;

     label04:
        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r26 = $r11;

        entermonitor $r11;

     label05:
        r27 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        if r27 != null goto label10;

        r28 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List getMatchingCrossProfileIntentFilters(android.content.Intent,java.lang.String,int)>(r1, r2, i1);

        r7 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo querySkipCurrentProfileIntents(java.util.List,android.content.Intent,java.lang.String,int,int)>(r28, r1, r2, i0, i1);

        if r7 == null goto label07;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(1);

        r8 = $r19;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r7);

        exitmonitor r26;

     label06:
        return r8;

     label07:
        r29 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo queryCrossProfileIntents(java.util.List,android.content.Intent,java.lang.String,int,int)>(r28, r1, r2, i0, i1);

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        r30 = virtualinvoke $r18.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        if r29 == null goto label08;

        interfaceinvoke r30.<java.util.List: boolean add(java.lang.Object)>(r29);

        $r20 = <com.android.server.pm.PackageManagerService: java.util.Comparator mResolvePrioritySorter>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r30, $r20);

     label08:
        exitmonitor r26;

     label09:
        return r30;

     label10:
        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r27);

        r31 = (android.content.pm.PackageParser$Package) $r12;

        if r31 == null goto label12;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r16 = r31.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r17 = virtualinvoke $r15.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, $r16, i1);

        exitmonitor r26;

     label11:
        return $r17;

     label12:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        exitmonitor r26;

     label13:
        return $r14;

     label14:
        $r25 := @caughtexception;

        r9 = $r25;

        exitmonitor r26;

     label15:
        throw r9;

        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private android.content.pm.ResolveInfo querySkipCurrentProfileIntents(java.util.List, android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, i1, i2, i3, $i4, $i5;
        com.android.server.pm.CrossProfileIntentFilter r4;
        android.content.pm.ResolveInfo r5;
        java.lang.Object $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r1 == null goto label3;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.pm.CrossProfileIntentFilter) $r6;

        $i4 = virtualinvoke r4.<com.android.server.pm.CrossProfileIntentFilter: int getFlags()>();

        $i5 = $i4 & 2;

        if $i5 == 0 goto label2;

        r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo checkTargetCanHandle(com.android.server.pm.CrossProfileIntentFilter,android.content.Intent,java.lang.String,int,int)>(r4, r2, r3, i0, i1);

        if r5 == null goto label2;

        return r5;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    private android.content.pm.ResolveInfo queryCrossProfileIntents(java.util.List, android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.util.SparseBooleanArray r4, $r7;
        com.android.server.pm.CrossProfileIntentFilter r5;
        android.content.pm.ResolveInfo r6;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if r1 == null goto label4;

        $r7 = new android.util.SparseBooleanArray;

        specialinvoke $r7.<android.util.SparseBooleanArray: void <init>()>();

        r4 = $r7;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (com.android.server.pm.CrossProfileIntentFilter) $r8;

        i4 = virtualinvoke r5.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        $i6 = virtualinvoke r5.<com.android.server.pm.CrossProfileIntentFilter: int getFlags()>();

        $i5 = $i6 & 2;

        if $i5 != 0 goto label3;

        $z0 = virtualinvoke r4.<android.util.SparseBooleanArray: boolean get(int)>(i4);

        if $z0 != 0 goto label3;

        r6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo checkTargetCanHandle(com.android.server.pm.CrossProfileIntentFilter,android.content.Intent,java.lang.String,int,int)>(r5, r2, r3, i0, i1);

        if r6 == null goto label2;

        return r6;

     label2:
        virtualinvoke r4.<android.util.SparseBooleanArray: void put(int,boolean)>(i4, 1);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return null;
    }

    private android.content.pm.ResolveInfo checkTargetCanHandle(com.android.server.pm.CrossProfileIntentFilter, android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.CrossProfileIntentFilter r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, i1, $i2, $i3;
        java.util.List r4;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r5;
        boolean $z0;
        android.content.pm.ResolveInfo $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.CrossProfileIntentFilter;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $i2 = virtualinvoke r1.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        r4 = virtualinvoke $r5.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r2, r3, i0, $i2);

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i3 = virtualinvoke r1.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        $r6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo createForwardingResolveInfo(android.content.IntentFilter,int,int)>(r1, i1, $i3);

        return $r6;

     label1:
        return null;
    }

    private android.content.pm.ResolveInfo createForwardingResolveInfo(android.content.IntentFilter, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.pm.ResolveInfo r2, $r6;
        java.lang.String r3, $r9;
        android.content.ComponentName r4, $r7;
        android.content.pm.ActivityInfo r5;
        android.content.pm.ApplicationInfo $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = new android.content.pm.ResolveInfo;

        specialinvoke $r6.<android.content.pm.ResolveInfo: void <init>()>();

        r2 = $r6;

        if i1 != 0 goto label1;

        r3 = <com.android.internal.app.IntentForwarderActivity: java.lang.String FORWARD_INTENT_TO_USER_OWNER>;

        goto label2;

     label1:
        r3 = <com.android.internal.app.IntentForwarderActivity: java.lang.String FORWARD_INTENT_TO_MANAGED_PROFILE>;

     label2:
        $r7 = new android.content.ComponentName;

        $r8 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r9, r3);

        r4 = $r7;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r4, 0, i0);

        if i1 != 0 goto label3;

        r5.<android.content.pm.ActivityInfo: int showUserIcon> = 0;

        r2.<android.content.pm.ResolveInfo: boolean noResourceId> = 1;

     label3:
        r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r5;

        r2.<android.content.pm.ResolveInfo: int priority> = 0;

        r2.<android.content.pm.ResolveInfo: int preferredOrder> = 0;

        r2.<android.content.pm.ResolveInfo: int match> = 0;

        r2.<android.content.pm.ResolveInfo: boolean isDefault> = 1;

        r2.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = r1;

        r2.<android.content.pm.ResolveInfo: int targetUserId> = i1;

        return r2;
    }

    public java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], java.lang.String[], android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1, r11, $r39;
        android.content.Intent[] r2;
        java.lang.String[] r3;
        android.content.Intent r4, r8;
        java.lang.String r5, r6, r9, $r17, $r19, $r21, $r23, $r35, $r36, $r41, $r42, $r43, $r44, $r45, r50;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18;
        java.util.List r7, $r46;
        android.content.pm.ResolveInfo r10, r12, $r14, $r16, $r32, $r38, r48, r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.server.pm.UserManagerService $r13;
        java.lang.Object $r15, $r18, $r22, $r27, $r28, $r31;
        android.content.pm.ApplicationInfo $r20, $r34, $r40;
        android.content.IntentFilter $r24, $r25, $r26, $r29, $r37;
        android.content.pm.ActivityInfo $r30, $r33, r47, r52;
        java.util.Iterator r49;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.Intent[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        $r13 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r13.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        $r46 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r46;

     label01:
        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i6, i1, 0, 0, "query intent activity options");

        r6 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        $i7 = i0 | 64;

        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r4, r5, $i7, i1);

        i2 = 0;

        if r2 == null goto label19;

        i4 = 0;

     label02:
        $i11 = lengthof r2;

        if i4 >= $i11 goto label19;

        r8 = r2[i4];

        if r8 != null goto label03;

        goto label18;

     label03:
        r9 = virtualinvoke r8.<android.content.Intent: java.lang.String getAction()>();

        if r6 == null goto label04;

        $z9 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z9 == 0 goto label04;

        r9 = null;

     label04:
        r10 = null;

        r11 = virtualinvoke r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r11 != null goto label09;

        if r3 == null goto label05;

        $r44 = r3[i4];

        goto label06;

     label05:
        $r44 = null;

     label06:
        r10 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r8, $r44, i0, i1);

        if r10 != null goto label07;

        goto label18;

     label07:
        $r38 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        if r10 != $r38 goto label08;

     label08:
        r47 = r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r39 = new android.content.ComponentName;

        $r40 = r47.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r45 = $r40.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r41 = r47.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r39.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r45, $r41);

        r11 = $r39;

        goto label10;

     label09:
        r47 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r11, i0, i1);

        if r47 != null goto label10;

        goto label18;

     label10:
        i3 = interfaceinvoke r7.<java.util.List: int size()>();

        i5 = i2;

     label11:
        if i5 >= i3 goto label16;

        $r31 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i5);

        r12 = (android.content.pm.ResolveInfo) $r31;

        $r30 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r35 = $r30.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r36 = virtualinvoke r11.<android.content.ComponentName: java.lang.String getClassName()>();

        $z7 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z7 == 0 goto label12;

        $r33 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r34 = $r33.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r42 = $r34.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r43 = virtualinvoke r11.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z8 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        if $z8 != 0 goto label13;

     label12:
        if r9 == null goto label15;

        $r37 = r12.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $z6 = virtualinvoke $r37.<android.content.IntentFilter: boolean matchAction(java.lang.String)>(r9);

        if $z6 == 0 goto label15;

     label13:
        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i5);

        if r10 != null goto label14;

        r10 = r12;

     label14:
        i5 = i5 + -1;

        i3 = i3 + -1;

     label15:
        i5 = i5 + 1;

        goto label11;

     label16:
        if r10 != null goto label17;

        $r32 = new android.content.pm.ResolveInfo;

        specialinvoke $r32.<android.content.pm.ResolveInfo: void <init>()>();

        r10 = $r32;

        r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r47;

     label17:
        interfaceinvoke r7.<java.util.List: void add(int,java.lang.Object)>(i2, r10);

        r10.<android.content.pm.ResolveInfo: int specificIndex> = i4;

        i2 = i2 + 1;

     label18:
        i4 = i4 + 1;

        goto label02;

     label19:
        i12 = interfaceinvoke r7.<java.util.List: int size()>();

        i13 = i2;

     label20:
        $i8 = i12 - 1;

        if i13 >= $i8 goto label29;

        $r22 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i13);

        r48 = (android.content.pm.ResolveInfo) $r22;

        $r24 = r48.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        if $r24 != null goto label21;

        goto label28;

     label21:
        $r25 = r48.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        r49 = virtualinvoke $r25.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

        if r49 != null goto label22;

        goto label28;

     label22:
        $z3 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label27;

        $r28 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.lang.String) $r28;

        if r6 == null goto label23;

        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z4 == 0 goto label23;

        goto label22;

     label23:
        i14 = i13 + 1;

     label24:
        if i14 >= i12 goto label26;

        $r27 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i14);

        r51 = (android.content.pm.ResolveInfo) $r27;

        $r26 = r51.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        if $r26 == null goto label25;

        $r29 = r51.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $z5 = virtualinvoke $r29.<android.content.IntentFilter: boolean hasAction(java.lang.String)>(r50);

        if $z5 == 0 goto label25;

        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i14);

        i14 = i14 + -1;

        i12 = i12 + -1;

     label25:
        i14 = i14 + 1;

        goto label24;

     label26:
        goto label22;

     label27:
        $i10 = i0 & 64;

        if $i10 != 0 goto label28;

        r48.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = null;

     label28:
        i13 = i13 + 1;

        goto label20;

     label29:
        if r1 == null goto label32;

        i15 = interfaceinvoke r7.<java.util.List: int size()>();

        i16 = 0;

     label30:
        if i16 >= i15 goto label32;

        $r18 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i16);

        $r16 = (android.content.pm.ResolveInfo) $r18;

        r52 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r20 = r52.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r21 = $r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z1 == 0 goto label31;

        $r19 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $r23 = r52.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label31;

        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i16);

        goto label32;

     label31:
        i16 = i16 + 1;

        goto label30;

     label32:
        $i9 = i0 & 64;

        if $i9 != 0 goto label34;

        i17 = interfaceinvoke r7.<java.util.List: int size()>();

        i18 = 0;

     label33:
        if i18 >= i17 goto label34;

        $r15 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i18);

        $r14 = (android.content.pm.ResolveInfo) $r15;

        $r14.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = null;

        i18 = i18 + 1;

        goto label33;

     label34:
        return r7;
    }

    public java.util.List queryIntentReceivers(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r19;
        java.lang.String r2, r23;
        int i0, i1;
        android.content.ComponentName r3;
        java.util.ArrayList r4, $r13, $r17;
        android.content.pm.ActivityInfo r5;
        android.content.pm.ResolveInfo r6, $r18;
        java.lang.Throwable r7, $r21;
        com.android.server.pm.UserManagerService $r8;
        boolean $z0;
        java.util.HashMap $r9, $r10, r22;
        java.lang.Object $r11;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r12, $r16;
        java.util.List $r14, $r15, $r20;
        android.content.pm.PackageParser$Package r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r8 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r8.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r20;

     label01:
        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label02;

        $r19 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r19 == null goto label02;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label02:
        if r3 == null goto label04;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r17;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label03;

        $r18 = new android.content.pm.ResolveInfo;

        specialinvoke $r18.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r18;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label03:
        return r4;

     label04:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r22 = $r9;

        entermonitor $r9;

     label05:
        r23 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        if r23 != null goto label07;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        $r15 = virtualinvoke $r16.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r22;

     label06:
        return $r15;

     label07:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23);

        r24 = (android.content.pm.PackageParser$Package) $r11;

        if r24 == null goto label09;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        $r13 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r14 = virtualinvoke $r12.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, $r13, i1);

        exitmonitor r22;

     label08:
        return $r14;

     label09:
        exitmonitor r22;

     label10:
        return null;

     label11:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r22;

     label12:
        throw r7;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, $i2;
        java.util.List r3;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        if r3 == null goto label2;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 < 1 goto label2;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        return $r6;

     label2:
        return null;
    }

    public java.util.List queryIntentServices(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r19;
        java.lang.String r2, r23;
        int i0, i1;
        android.content.ComponentName r3;
        java.util.ArrayList r4, $r13, $r17;
        android.content.pm.ServiceInfo r5;
        android.content.pm.ResolveInfo r6, $r18;
        java.lang.Throwable r7, $r21;
        com.android.server.pm.UserManagerService $r8;
        boolean $z0;
        java.util.HashMap $r9, $r10, r22;
        java.lang.Object $r11;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r12, $r16;
        java.util.List $r14, $r15, $r20;
        android.content.pm.PackageParser$Package r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r8 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r8.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r20;

     label01:
        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label02;

        $r19 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r19 == null goto label02;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label02:
        if r3 == null goto label04;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r17;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label03;

        $r18 = new android.content.pm.ResolveInfo;

        specialinvoke $r18.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r18;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label03:
        return r4;

     label04:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r22 = $r9;

        entermonitor $r9;

     label05:
        r23 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        if r23 != null goto label07;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        $r15 = virtualinvoke $r16.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r22;

     label06:
        return $r15;

     label07:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23);

        r24 = (android.content.pm.PackageParser$Package) $r11;

        if r24 == null goto label09;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        $r13 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r14 = virtualinvoke $r12.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, $r13, i1);

        exitmonitor r22;

     label08:
        return $r14;

     label09:
        exitmonitor r22;

     label10:
        return null;

     label11:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r22;

     label12:
        throw r7;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public java.util.List queryIntentContentProviders(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r19;
        java.lang.String r2, r23;
        int i0, i1;
        android.content.ComponentName r3;
        java.util.ArrayList r4, $r13, $r17;
        android.content.pm.ProviderInfo r5;
        android.content.pm.ResolveInfo r6, $r18;
        java.lang.Throwable r7, $r21;
        com.android.server.pm.UserManagerService $r8;
        boolean $z0;
        java.util.HashMap $r9, $r10, r22;
        java.lang.Object $r11;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r12, $r16;
        java.util.List $r14, $r15, $r20;
        android.content.pm.PackageParser$Package r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r8 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r8.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r20;

     label01:
        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label02;

        $r19 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r19 == null goto label02;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label02:
        if r3 == null goto label04;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r17;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label03;

        $r18 = new android.content.pm.ResolveInfo;

        specialinvoke $r18.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r18;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label03:
        return r4;

     label04:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r22 = $r9;

        entermonitor $r9;

     label05:
        r23 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        if r23 != null goto label07;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r15 = virtualinvoke $r16.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r22;

     label06:
        return $r15;

     label07:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23);

        r24 = (android.content.pm.PackageParser$Package) $r11;

        if r24 == null goto label09;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r13 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r14 = virtualinvoke $r12.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, $r13, i1);

        exitmonitor r22;

     label08:
        return $r14;

     label09:
        exitmonitor r22;

     label10:
        return null;

     label11:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r22;

     label12:
        throw r7;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public android.content.pm.ParceledListSlice getInstalledPackages(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z3, $z5;
        java.util.HashMap r1, $r7, $r9, $r11, $r15, $r19;
        java.util.ArrayList r2, $r8, $r14;
        java.util.Iterator r3, r25;
        com.android.server.pm.PackageSetting r4;
        android.content.pm.PackageInfo r5, r27;
        java.lang.Throwable r6, $r24;
        java.util.Collection $r10, $r18;
        android.content.pm.ParceledListSlice $r12;
        java.lang.Object $r13, $r20;
        com.android.server.pm.Settings $r16, $r17;
        android.content.pm.PackageParser$Package $r21, $r22, r26;
        java.lang.String $r23;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & 8192;

        if $i2 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i3, i1, 1, 0, "get installed packages");

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r7;

        entermonitor $r7;

     label03:
        if z0 == 0 goto label09;

        $r14 = new java.util.ArrayList;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $i5 = virtualinvoke $r15.<java.util.HashMap: int size()>();

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i5);

        r2 = $r14;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r18 = virtualinvoke $r19.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r20 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PackageSetting) $r20;

        $r21 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r21 == null goto label05;

        $r22 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>($r22, i0, i1);

        goto label06;

     label05:
        $r23 = r4.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>($r23, i0, i1);

     label06:
        if r5 == null goto label07;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label07:
        goto label04;

     label08:
        goto label12;

     label09:
        $r8 = new java.util.ArrayList;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $i4 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i4);

        r2 = $r8;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r25 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r13 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r26 = (android.content.pm.PackageParser$Package) $r13;

        r27 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>(r26, i0, i1);

        if r27 == null goto label11;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label11:
        goto label10;

     label12:
        $r12 = new android.content.pm.ParceledListSlice;

        specialinvoke $r12.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r2);

        exitmonitor r1;

     label13:
        return $r12;

     label14:
        $r24 := @caughtexception;

        r6 = $r24;

        exitmonitor r1;

     label15:
        throw r6;

        catch java.lang.Throwable from label03 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void addPackageHoldingPermissions(java.util.ArrayList, com.android.server.pm.PackageSetting, java.lang.String[], boolean[], int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.ArrayList r1;
        com.android.server.pm.PackageSetting r2;
        java.lang.String[] r3, $r9, $r10;
        boolean[] r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9;
        com.android.server.pm.GrantedPermissions r5, $r15;
        com.android.server.pm.SharedUserSetting $r6;
        android.content.pm.PackageParser$Package $r7, $r12;
        java.lang.String $r8, $r11, $r14;
        boolean $z1, $z2;
        java.util.HashSet $r13;
        android.content.pm.PackageInfo r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: boolean[];

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 = 0;

        $r6 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r6 == null goto label01;

        $r15 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label02;

     label01:
        $r15 = r2;

     label02:
        r5 = $r15;

        i3 = 0;

     label03:
        $i5 = lengthof r3;

        if i3 >= $i5 goto label06;

        $r13 = r5.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r14 = r3[i3];

        $z2 = virtualinvoke $r13.<java.util.HashSet: boolean contains(java.lang.Object)>($r14);

        if $z2 == 0 goto label04;

        r4[i3] = 1;

        i2 = i2 + 1;

        goto label05;

     label04:
        r4[i3] = 0;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        if i2 != 0 goto label07;

        return;

     label07:
        $r7 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 == null goto label08;

        $r12 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r16 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>($r12, i0, i1);

        goto label09;

     label08:
        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r16 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>($r8, i0, i1);

     label09:
        if r16 == null goto label14;

        $i6 = i0 & 4096;

        if $i6 != 0 goto label13;

        $i7 = lengthof r3;

        if i2 != $i7 goto label10;

        r16.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions> = r3;

        goto label13;

     label10:
        $r9 = newarray (java.lang.String)[i2];

        r16.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions> = $r9;

        i9 = 0;

        i4 = 0;

     label11:
        $i8 = lengthof r3;

        if i4 >= $i8 goto label13;

        $z1 = r4[i4];

        if $z1 == 0 goto label12;

        $r10 = r16.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $r11 = r3[i4];

        $r10[i9] = $r11;

        i9 = i9 + 1;

     label12:
        i4 = i4 + 1;

        goto label11;

     label13:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

     label14:
        return;
    }

    public android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[], int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String[] r1;
        int i0, i1, $i2, $i3;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.HashMap r2, $r10, $r13, $r17;
        java.util.ArrayList r3, $r11;
        boolean[] r4;
        java.util.Iterator r5, r22;
        com.android.server.pm.PackageSetting r6, r7;
        java.lang.Throwable r8, $r21;
        com.android.server.pm.UserManagerService $r9;
        java.util.Collection $r12, $r19;
        android.content.pm.ParceledListSlice $r14;
        java.lang.Object $r15, $r16, $r20;
        com.android.server.pm.Settings $r18;
        android.content.pm.PackageParser$Package r23;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r9 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z1 = virtualinvoke $r9.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z1 != 0 goto label01;

        return null;

     label01:
        $i2 = i0 & 8192;

        if $i2 == 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z0 = $z4;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r10;

        entermonitor $r10;

     label04:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        $i3 = lengthof r1;

        r4 = newarray (boolean)[$i3];

        if z0 == 0 goto label07;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r17 = $r18.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r19 = virtualinvoke $r17.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.PackageSetting) $r20;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPackageHoldingPermissions(java.util.ArrayList,com.android.server.pm.PackageSetting,java.lang.String[],boolean[],int,int)>(r3, r6, r1, r4, i0, i1);

        goto label05;

     label06:
        goto label10;

     label07:
        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.util.Collection values()>();

        r22 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r16 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (android.content.pm.PackageParser$Package) $r16;

        $r15 = r23.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r7 = (com.android.server.pm.PackageSetting) $r15;

        if r7 == null goto label09;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPackageHoldingPermissions(java.util.ArrayList,com.android.server.pm.PackageSetting,java.lang.String[],boolean[],int,int)>(r3, r7, r1, r4, i0, i1);

     label09:
        goto label08;

     label10:
        $r14 = new android.content.pm.ParceledListSlice;

        specialinvoke $r14.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r3);

        exitmonitor r2;

     label11:
        return $r14;

     label12:
        $r21 := @caughtexception;

        r8 = $r21;

        exitmonitor r2;

     label13:
        throw r8;

        catch java.lang.Throwable from label04 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public android.content.pm.ParceledListSlice getInstalledApplications(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2, $z4, $z6;
        java.util.HashMap r1, $r8, $r10, $r11, $r22, $r23;
        java.util.ArrayList r2, $r9, $r20;
        java.util.Iterator r3, r31;
        com.android.server.pm.PackageSetting r4, $r18;
        android.content.pm.ApplicationInfo r5, r33;
        java.lang.Throwable r6, $r30;
        com.android.server.pm.UserManagerService $r7;
        java.util.Collection $r12, $r25;
        android.content.pm.ParceledListSlice $r13;
        java.lang.Object $r14, $r15, $r16, $r24;
        android.content.pm.PackageUserState $r17, $r29;
        com.android.server.pm.Settings $r19, $r21;
        android.content.pm.PackageParser$Package $r26, $r28, r32;
        java.lang.String $r27;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z1 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z1 != 0 goto label01;

        return null;

     label01:
        $i2 = i0 & 8192;

        if $i2 == 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r8;

        entermonitor $r8;

     label04:
        if z0 == 0 goto label10;

        $r20 = new java.util.ArrayList;

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r23 = $r19.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $i4 = virtualinvoke $r23.<java.util.HashMap: int size()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i4);

        r2 = $r20;

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r22 = $r21.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r25 = virtualinvoke $r22.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r24 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PackageSetting) $r24;

        $r26 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r26 == null goto label06;

        $r28 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r29 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r5 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r28, i0, $r29, i1);

        goto label07;

     label06:
        $r27 = r4.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLPw(java.lang.String,int,int)>($r27, i0, i1);

     label07:
        if r5 == null goto label08;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label08:
        goto label05;

     label09:
        goto label13;

     label10:
        $r9 = new java.util.ArrayList;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $i3 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i3);

        r2 = $r9;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r31 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r14 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (android.content.pm.PackageParser$Package) $r14;

        $r16 = r32.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r16 == null goto label12;

        $r15 = r32.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r18 = (com.android.server.pm.PackageSetting) $r15;

        $r17 = virtualinvoke $r18.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r33 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r32, i0, $r17, i1);

        if r33 == null goto label12;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r33);

     label12:
        goto label11;

     label13:
        $r13 = new android.content.pm.ParceledListSlice;

        specialinvoke $r13.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r2);

        exitmonitor r1;

     label14:
        return $r13;

     label15:
        $r30 := @caughtexception;

        r6 = $r30;

        exitmonitor r1;

     label16:
        throw r6;

        catch java.lang.Throwable from label04 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public java.util.List getPersistentApplications(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r8;
        java.util.HashMap r2, $r9, $r10, $r18;
        java.util.Iterator r3;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.ApplicationInfo r6, $r12, $r14;
        java.lang.Throwable r7, $r20;
        java.util.Collection $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r13, $r17;
        java.lang.String $r15;
        com.android.server.pm.Settings $r16;
        android.content.pm.PackageUserState $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r1 = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r9;

        entermonitor $r9;

     label1:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageParser$Package) $r13;

        $r12 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r12 == null goto label4;

        $r14 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r14.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 8;

        if $i3 == 0 goto label4;

        $z1 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r4);

        if $z2 == 0 goto label4;

     label3:
        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r17 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r5 = (com.android.server.pm.PackageSetting) $r17;

        if r5 == null goto label4;

        $r19 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r4, i0, $r19, i1);

        if r6 == null goto label4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r20 := @caughtexception;

        r7 = $r20;

        exitmonitor r2;

     label8:
        throw r7;

     label9:
        return r1;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r19;
        int i0, i1, $i2, $i3;
        java.util.HashMap r2, $r7, $r8, $r18;
        android.content.pm.PackageParser$Provider r3;
        com.android.server.pm.PackageSetting r4, $r20;
        java.lang.Throwable r5, $r22;
        com.android.server.pm.UserManagerService $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r21;
        android.content.pm.ProviderInfo $r10, $r12, $r15;
        com.android.server.pm.Settings $r11, $r17;
        android.content.pm.PackageUserState $r13;
        android.content.pm.ApplicationInfo $r14;
        android.content.pm.PackageParser$Package $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Provider) $r9;

        if r3 == null goto label03;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r16 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r19 = $r16.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r21 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r19);

        $r20 = (com.android.server.pm.PackageSetting) $r21;

        goto label04;

     label03:
        $r20 = null;

     label04:
        r4 = $r20;

        if r4 == null goto label06;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z2 = virtualinvoke $r11.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r10, i0, i1);

        if $z2 == 0 goto label06;

        $z1 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z1 == 0 goto label05;

        $r15 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r14 = $r15.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r14.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i3 & 1;

        if $i2 == 0 goto label06;

     label05:
        $r13 = virtualinvoke r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r12 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r3, i0, $r13, i1);

        goto label07;

     label06:
        $r12 = null;

     label07:
        exitmonitor r2;

     label08:
        return $r12;

     label09:
        $r22 := @caughtexception;

        r5 = $r22;

        exitmonitor r2;

     label10:
        throw r5;

        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void querySyncProviders(java.util.List, java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1, r2;
        java.util.HashMap r3, $r10, $r11, $r17;
        java.util.Iterator r4;
        int i0, $i1, $i2;
        java.util.Map$Entry r5;
        android.content.pm.PackageParser$Provider r6;
        com.android.server.pm.PackageSetting r7;
        android.content.pm.ProviderInfo r8, $r23;
        java.lang.Throwable r9, $r24;
        java.util.Set $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r13, $r14, $r19, $r21;
        android.content.pm.PackageParser$Package $r15;
        com.android.server.pm.Settings $r16;
        java.lang.String $r18;
        android.content.pm.PackageUserState $r20;
        android.content.pm.ApplicationInfo $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r10;

        entermonitor $r10;

     label1:
        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r14;

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (android.content.pm.PackageParser$Provider) $r13;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r17 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r18 = $r15.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r19 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        r7 = (com.android.server.pm.PackageSetting) $r19;

        if r7 == null goto label4;

        $z1 = r6.<android.content.pm.PackageParser$Provider: boolean syncable>;

        if $z1 == 0 goto label4;

        $z2 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z2 == 0 goto label3;

        $r23 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r22 = $r23.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r22.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label4;

     label3:
        $r20 = virtualinvoke r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

        r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r6, 0, $r20, i0);

        if r8 == null goto label4;

        $r21 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r8);

     label4:
        goto label2;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r24 := @caughtexception;

        r9 = $r24;

        exitmonitor r3;

     label8:
        throw r9;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.util.List queryContentProviders(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r18, $r22, $r28;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList r2, $r26;
        java.util.HashMap r3, $r9, $r11, $r17;
        java.util.Iterator r4;
        android.content.pm.PackageParser$Provider r5;
        com.android.server.pm.PackageSetting r6;
        android.content.pm.ProviderInfo r7, $r19, $r21, $r27, $r29, $r30;
        java.lang.Throwable r8, $r32;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r10;
        java.util.Collection $r12;
        boolean $z0, $z1, $z3, $z4, $z5;
        java.lang.Object $r13, $r20;
        java.util.Comparator $r14;
        android.content.pm.PackageParser$Package $r15;
        com.android.server.pm.Settings $r16, $r23;
        android.content.pm.PackageUserState $r24;
        android.content.pm.ApplicationInfo $r25, $r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = null;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r11 = staticinvoke <com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.HashMap access$1900(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>($r10);

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

        if r1 == null goto label02;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        goto label03;

     label02:
        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label03:
        i2 = $i3;

     label04:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.PackageParser$Provider) $r13;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r17 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = r5.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r18 = $r15.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r20 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        r6 = (com.android.server.pm.PackageSetting) $r20;

        if r6 == null goto label08;

        $r19 = r5.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r22 = $r19.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r22 == null goto label08;

        if r1 == null goto label05;

        $r29 = r5.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r28 = $r29.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $z4 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label08;

        $r30 = r5.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r31 = $r30.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r31.<android.content.pm.ApplicationInfo: int uid>;

        $z5 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i6, i0);

        if $z5 == 0 goto label08;

     label05:
        $r23 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r21 = r5.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = virtualinvoke $r23.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r21, i1, i2);

        if $z1 == 0 goto label08;

        $z3 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z3 == 0 goto label06;

        $r27 = r5.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r25 = $r27.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r25.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & 1;

        if $i5 == 0 goto label08;

     label06:
        if r2 != null goto label07;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>(int)>(3);

        r2 = $r26;

     label07:
        $r24 = virtualinvoke r6.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i2);

        r7 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r5, i1, $r24, i2);

        if r7 == null goto label08;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label08:
        goto label04;

     label09:
        exitmonitor r3;

     label10:
        goto label13;

     label11:
        $r32 := @caughtexception;

        r8 = $r32;

        exitmonitor r3;

     label12:
        throw r8;

     label13:
        if r2 == null goto label14;

        $r14 = <com.android.server.pm.PackageManagerService: java.util.Comparator mProviderInitOrderSorter>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r14);

     label14:
        return r2;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0;
        java.util.HashMap r2, $r5, $r6;
        android.content.pm.PackageParser$Instrumentation r3;
        java.lang.Throwable r4, $r9;
        java.lang.Object $r7;
        android.content.pm.InstrumentationInfo $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Instrumentation) $r7;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>(r3, i0);

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List queryInstrumentation(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r14;
        int i0;
        java.util.ArrayList r2, $r8;
        java.util.HashMap r3, $r9, $r10;
        java.util.Iterator r4;
        android.content.pm.PackageParser$Instrumentation r5;
        android.content.pm.InstrumentationInfo r6, $r13;
        java.lang.Throwable r7, $r15;
        java.util.Collection $r11;
        boolean $z0, $z2;
        java.lang.Object $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r9;

        entermonitor $r9;

     label1:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.PackageParser$Instrumentation) $r12;

        if r1 == null goto label3;

        $r13 = r5.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r14 = $r13.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label4;

     label3:
        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>(r5, i0);

        if r6 == null goto label4;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label4:
        goto label2;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r15 := @caughtexception;

        r7 = $r15;

        exitmonitor r3;

     label8:
        throw r7;

     label9:
        return r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void createIdmapsForPackageLI(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r4;
        java.util.HashMap r2, $r6;
        java.util.Iterator r3;
        java.lang.String $r5, $r13, $r14;
        java.lang.Object $r7, $r9;
        java.util.Collection $r8;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12, $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays>;

        $r5 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (java.util.HashMap) $r7;

        if r2 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create idmap for ");

        $r13 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": no overlay packages");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r14);

        return;

     label1:
        $r8 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageParser$Package) $r9;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean createIdmapForPackagePairLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r1, r4);

        goto label2;

     label3:
        return;
    }

    private boolean createIdmapForPackagePairLI(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2, r7;
        java.util.HashMap r3, $r9;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.content.pm.PackageParser$Package[] r4, r6, $r17;
        com.android.server.pm.PackageManagerService$3 r5, $r18;
        boolean $z0;
        java.lang.String $r8, $r12, $r14, $r23, $r28, $r29, $r30, $r33, $r36, $r40, $r43, $r47, $r49;
        java.lang.Object $r10;
        android.content.pm.ApplicationInfo $r11, $r19, $r21;
        com.android.server.pm.Installer $r13;
        java.util.Collection $r15;
        java.lang.Object[] $r16;
        java.lang.String[] $r20, $r24;
        java.lang.StringBuilder $r22, $r25, $r26, $r27, $r31, $r32, $r34, $r35, $r37, $r38, $r39, $r41, $r42, $r44, $r45, $r46, $r48;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $z0 = r2.<android.content.pm.PackageParser$Package: boolean mTrustedOverlay>;

        if $z0 != 0 goto label1;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping target and overlay pair ");

        $r43 = r1.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r47 = r2.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": overlay not trusted");

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r49);

        return 0;

     label1:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays>;

        $r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r3 = (java.util.HashMap) $r10;

        if r3 != null goto label2;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was about to create idmap for ");

        $r33 = r1.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r36 = r2.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but target package has no known overlays");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r40);

        return 0;

     label2:
        $r11 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i4);

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r14 = r1.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r12 = r2.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $i5 = virtualinvoke $r13.<com.android.server.pm.Installer: int idmap(java.lang.String,java.lang.String,int)>($r14, $r12, i0);

        if $i5 == 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate idmap for ");

        $r28 = r1.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r30 = r2.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r29);

        return 0;

     label3:
        $r15 = virtualinvoke r3.<java.util.HashMap: java.util.Collection values()>();

        $r17 = newarray (android.content.pm.PackageParser$Package)[0];

        $r16 = interfaceinvoke $r15.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        r4 = (android.content.pm.PackageParser$Package[]) $r16;

        $r18 = new com.android.server.pm.PackageManagerService$3;

        specialinvoke $r18.<com.android.server.pm.PackageManagerService$3: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r5 = $r18;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r4, r5);

        $r19 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = lengthof r4;

        $r20 = newarray (java.lang.String)[$i6];

        $r19.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs> = $r20;

        i1 = 0;

        r6 = r4;

        i2 = lengthof r6;

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        r7 = r6[i3];

        $r21 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r21.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

        $i7 = i1;

        i1 = i1 + 1;

        $r23 = r7.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        $r24[$i7] = $r23;

        i3 = i3 + 1;

        goto label4;

     label5:
        return 1;
    }

    private void scanDirLI(java.io.File, int, int, long)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, r4;
        int i0, i1, i3, i4, $i5, $i7, $i8;
        long l2;
        java.io.File[] r2, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z8;
        com.android.server.pm.PackageManagerException r5, $r13;
        java.lang.String $r6, $r11, $r15, $r19, $r23;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r14, $r16, $r17, $r18, $r20, $r21, $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z1 == 0 goto label01;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No files in app dir ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r11);

        return;

     label01:
        r3 = r2;

        i3 = lengthof r3;

        i4 = 0;

     label02:
        if i4 >= i3 goto label11;

        r4 = r3[i4];

        $z2 = staticinvoke <android.content.pm.PackageParser: boolean isApkFile(java.io.File)>(r4);

        if $z2 != 0 goto label03;

        $z4 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();

        if $z4 == 0 goto label04;

     label03:
        $r6 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z3 = staticinvoke <com.android.server.pm.PackageInstallerService: boolean isStageName(java.lang.String)>($r6);

        if $z3 != 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z0 = $z5;

        if z0 != 0 goto label06;

        goto label10;

     label06:
        $i5 = i0 | 4;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>(r4, $i5, i1, l2, null);

     label07:
        goto label10;

     label08:
        $r13 := @caughtexception;

        r5 = $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = virtualinvoke r5.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r19);

        $i7 = i0 & 1;

        if $i7 != 0 goto label10;

        $i8 = r5.<com.android.server.pm.PackageManagerException: int error>;

        if $i8 != -2 goto label10;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting invalid package at ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r23);

        $z8 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();

        if $z8 == 0 goto label09;

        staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>(r4);

     label09:
        virtualinvoke r4.<java.io.File: boolean delete()>();

     label10:
        i4 = i4 + 1;

        goto label02;

     label11:
        return;

        catch com.android.server.pm.PackageManagerException from label06 to label07 with label08;
    }

    private static java.io.File getSettingsProblemFile()
    {
        java.io.File r0, r1, r2, $r3, $r4;

        r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "system");

        r1 = $r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "uiderrors.txt");

        r2 = $r4;

        return r2;
    }

    static void reportSettingsProblem(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(i0, r0);

        return;
    }

    static void logCriticalInfo(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, r5, $r13, $r15;
        java.io.File r1;
        java.io.FileOutputStream r2, $r6;
        com.android.internal.util.FastPrintWriter r3, $r7;
        java.text.SimpleDateFormat r4, $r8;
        java.util.Date $r9;
        long $l2;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.io.IOException $r16;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        staticinvoke <android.util.Slog: int println(int,java.lang.String,java.lang.String)>(i0, "PackageManager", r0);

        staticinvoke <com.android.server.EventLogTags: void writePmCriticalInfo(java.lang.String)>(r0);

     label1:
        r1 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File getSettingsProblemFile()>();

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r1, 1);

        r2 = $r6;

        $r7 = new com.android.internal.util.FastPrintWriter;

        specialinvoke $r7.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r2);

        r3 = $r7;

        $r8 = new java.text.SimpleDateFormat;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>()>();

        r4 = $r8;

        $r9 = new java.util.Date;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r9.<java.util.Date: void <init>(long)>($l2);

        r5 = virtualinvoke r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        virtualinvoke r3.<java.io.PrintWriter: void close()>();

        $r15 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r15, 508, -1, -1);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void collectCertificatesLI(android.content.pm.PackageParser, com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package, java.io.File, int) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser r1;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.PackageParser$Package r3;
        java.io.File r4, $r13;
        int i0, $i6;
        long l1, $l3, $l4;
        com.android.server.pm.KeySetManagerService r5;
        java.util.HashMap r6, $r29;
        java.lang.Throwable r7, $r31;
        java.lang.StringBuilder $r8, $r10, $r11, $r16, $r18, $r19, $r22;
        java.lang.String $r9, $r12, $r20, $r21;
        boolean $z0, $z1, $z2;
        byte $b5, $b8;
        com.android.server.pm.PackageKeySetData $r14;
        com.android.server.pm.PackageSignatures $r15, $r24, $r27;
        android.content.pm.Signature[] $r17, $r23, $r25;
        com.android.server.pm.Settings $r26;
        android.content.pm.PackageParser$PackageParserException $r28, r33;
        android.util.ArraySet $r30;
        com.android.server.pm.PackageManagerException $r32;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        r3 := @parameter2: android.content.pm.PackageParser$Package;

        r4 := @parameter3: java.io.File;

        i0 := @parameter4: int;

        if r2 == null goto label07;

        $r13 = r2.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z0 = virtualinvoke $r13.<java.io.File: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label07;

        $l4 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        $l3 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label07;

        $z1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isCompatSignatureUpdateNeeded(android.content.pm.PackageParser$Package)>(r3);

        if $z1 != 0 goto label07;

        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isRecoverSignatureUpdateNeeded(android.content.pm.PackageParser$Package)>(r3);

        if $z2 != 0 goto label07;

        $r14 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        l1 = virtualinvoke $r14.<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>();

        $r15 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r17 = $r15.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r17 == null goto label06;

        $r24 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r23 = $r24.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $i6 = lengthof $r23;

        if $i6 == 0 goto label06;

        $b8 = l1 cmp -1L;

        if $b8 == 0 goto label06;

        $r27 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r25 = $r27.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        r3.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures> = $r25;

        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r5 = $r26.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r29 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r6 = $r29;

        entermonitor $r29;

     label01:
        $r30 = virtualinvoke r5.<com.android.server.pm.KeySetManagerService: android.util.ArraySet getPublicKeysFromKeySetLPr(long)>(l1);

        r3.<android.content.pm.PackageParser$Package: android.util.ArraySet mSigningKeys> = $r30;

        exitmonitor r6;

     label02:
        goto label05;

     label03:
        $r31 := @caughtexception;

        r7 = $r31;

        exitmonitor r6;

     label04:
        throw r7;

     label05:
        return;

     label06:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PackageSetting for ");

        $r21 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing signatures.  Collecting certs again to recover them.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r20);

        goto label08;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed; collecting certs");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r12);

     label08:
        virtualinvoke r1.<android.content.pm.PackageParser: void collectCertificates(android.content.pm.PackageParser$Package,int)>(r3, i0);

        virtualinvoke r1.<android.content.pm.PackageParser: void collectManifestDigest(android.content.pm.PackageParser$Package)>(r3);

     label09:
        goto label11;

     label10:
        $r28 := @caughtexception;

        r33 = $r28;

        $r32 = staticinvoke <com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException 'from'(android.content.pm.PackageParser$PackageParserException)>(r33);

        throw $r32;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch android.content.pm.PackageParser$PackageParserException from label08 to label09 with label10;
    }

    private android.content.pm.PackageParser$Package scanPackageLI(java.io.File, int, int, long, android.os.UserHandle) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, $r49, $r50, $r96, $r137;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i31;
        long l2;
        android.os.UserHandle r2;
        android.content.pm.PackageParser r3, $r16;
        android.content.pm.PackageParser$Package r4, r163;
        android.content.pm.PackageParser$PackageParserException r5, $r153;
        com.android.server.pm.PackageSetting r6, r154;
        java.util.HashMap r7, $r19, $r20, $r37, $r98, $r100, $r120, r155, r158, r164;
        java.lang.String r8, $r21, $r24, $r26, $r30, $r36, $r39, $r40, $r43, $r44, $r52, $r60, $r62, $r63, $r64, $r66, $r69, $r80, $r83, $r86, $r87, $r93, $r97, $r102, $r103, $r104, $r105, $r108, $r114, $r119, $r126, $r128, $r136, $r141, $r143, $r146, r161, r162;
        java.lang.Throwable r9, r10, r11, r12, r13, r14, $r139, $r147, $r148, $r150, $r151, $r152;
        java.lang.String[] $r15, $r28, $r32, $r72, $r106;
        android.util.DisplayMetrics $r17;
        boolean $z0, $z2, $z3, $z5, $z6, $z7, $z8, z9, z10;
        com.android.server.pm.Settings $r18, $r25, $r38, $r124, $r138, $r140;
        java.util.ArrayList $r22, $r142;
        java.lang.Object $r23, $r71, $r121, r157, r160;
        android.content.pm.ApplicationInfo $r27, $r29, $r31, $r33, $r34, $r35;
        java.lang.StringBuilder $r41, $r42, $r45, $r51, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r61, $r65, $r67, $r68, $r70, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r81, $r82, $r84, $r85, $r88, $r89, $r90, $r91, $r92, $r94, $r95, $r101, $r107, $r109, $r110, $r111, $r112, $r113, $r115, $r116, $r117, $r118, $r122, $r125, $r127, $r129, $r130, $r131, $r132, $r133, $r134, $r144, $r145;
        com.android.server.pm.PackageSignatures $r46;
        android.content.pm.Signature[] $r47, $r48;
        com.android.server.pm.PackageManagerException $r135, $r149;
        com.android.server.pm.PackageManagerService$InstallArgs r156, r159;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 := @parameter4: android.os.UserHandle;

        $i3 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        i31 = i0 | $i3;

        $r16 = new android.content.pm.PackageParser;

        specialinvoke $r16.<android.content.pm.PackageParser: void <init>()>();

        r3 = $r16;

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses>;

        virtualinvoke r3.<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>($r15);

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        virtualinvoke r3.<android.content.pm.PackageParser: void setOnlyCoreApps(boolean)>($z0);

        $r17 = r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        virtualinvoke r3.<android.content.pm.PackageParser: void setDisplayMetrics(android.util.DisplayMetrics)>($r17);

        $i4 = i1 & 512;

        if $i4 == 0 goto label01;

        i31 = i31 | 512;

     label01:
        r4 = virtualinvoke r3.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,int)>(r1, i31);

     label02:
        goto label04;

     label03:
        $r153 := @caughtexception;

        r5 = $r153;

        $r149 = staticinvoke <com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException 'from'(android.content.pm.PackageParser$PackageParserException)>(r5);

        throw $r149;

     label04:
        r154 = null;

        $r19 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r19;

        entermonitor $r19;

     label05:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r20 = $r18.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r21 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r23 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r21);

        r8 = (java.lang.String) $r23;

        $r22 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        if $r22 == null goto label06;

        $r142 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $z7 = virtualinvoke $r142.<java.util.ArrayList: boolean contains(java.lang.Object)>(r8);

        if $z7 == 0 goto label06;

        $r138 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r154 = virtualinvoke $r138.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>(r8);

     label06:
        if r154 != null goto label07;

        $r140 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r141 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r154 = virtualinvoke $r140.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>($r141);

     label07:
        $r25 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        if r154 == null goto label08;

        $r24 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        goto label09;

     label08:
        $r24 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

     label09:
        r6 = virtualinvoke $r25.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r24);

        exitmonitor r7;

     label10:
        goto label13;

     label11:
        $r152 := @caughtexception;

        r9 = $r152;

        exitmonitor r7;

     label12:
        throw r9;

     label13:
        z9 = 0;

        if r6 == null goto label31;

        $i18 = i31 & 1;

        if $i18 == 0 goto label31;

        if r154 == null goto label31;

        $r96 = r154.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z5 = virtualinvoke $r96.<java.io.File: boolean equals(java.lang.Object)>(r1);

        if $z5 != 0 goto label31;

        $i21 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $i22 = r154.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i21 >= $i22 goto label15;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r114 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r113 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r118 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: updated version ");

        $i26 = r154.<com.android.server.pm.PackageSetting: int versionCode>;

        $r133 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than this ");

        $i27 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r132 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r136 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(4, $r136);

        $r137 = r6.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z6 = virtualinvoke $r137.<java.io.File: boolean equals(java.lang.Object)>(r1);

        if $z6 != 0 goto label14;

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code path for hidden system pkg : ");

        $r126 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r130 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r128 = r6.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r129 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        $r145 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r146);

        r6.<com.android.server.pm.PackageSetting: java.io.File codePath> = r1;

        $r143 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        r6.<com.android.server.pm.PackageSetting: java.lang.String codePathString> = $r143;

        $z8 = staticinvoke <com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>(r1);

        if $z8 == 0 goto label14;

        $i29 = r6.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i28 = $i29 | 1073741824;

        r6.<com.android.server.pm.PackageSetting: int pkgFlags> = $i28;

     label14:
        r6.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg> = r4;

        $r135 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r135.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-5, null);

        throw $r135;

     label15:
        $r98 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r155 = $r98;

        entermonitor $r98;

     label16:
        $r100 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r97 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r100.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r97);

        exitmonitor r155;

     label17:
        goto label20;

     label18:
        $r139 := @caughtexception;

        r10 = $r139;

        exitmonitor r155;

     label19:
        throw r10;

     label20:
        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r93 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r107 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reverting from ");

        $r108 = r154.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": new version ");

        $i24 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than installed ");

        $i25 = r154.<com.android.server.pm.PackageSetting: int versionCode>;

        $r101 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r102);

        $i23 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)>(r154);

        $r103 = r154.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r104 = r154.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r105 = r154.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $r106 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>(r154);

        r156 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgsForExisting(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i23, $r103, $r104, $r105, $r106);

        $r121 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r157 = $r121;

        entermonitor $r121;

     label21:
        virtualinvoke r156.<com.android.server.pm.PackageManagerService$InstallArgs: void cleanUpResourcesLI()>();

        exitmonitor r157;

     label22:
        goto label25;

     label23:
        $r150 := @caughtexception;

        r11 = $r150;

        exitmonitor r157;

     label24:
        throw r11;

     label25:
        $r120 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r158 = $r120;

        entermonitor $r120;

     label26:
        $r124 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r119 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r124.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>($r119);

        exitmonitor r158;

     label27:
        goto label30;

     label28:
        $r147 := @caughtexception;

        r13 = $r147;

        exitmonitor r158;

     label29:
        throw r13;

     label30:
        z9 = 1;

     label31:
        if r6 == null goto label32;

        i31 = i31 | 1;

        $i20 = r6.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i19 = $i20 & 1073741824;

        if $i19 == 0 goto label32;

        i31 = i31 | 128;

     label32:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void collectCertificatesLI(android.content.pm.PackageParser,com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package,java.io.File,int)>(r3, r154, r4, r1, i31);

        z10 = 0;

        if r6 != null goto label39;

        if r154 == null goto label39;

        $i9 = i31 & 64;

        if $i9 == 0 goto label39;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r154);

        if $z2 != 0 goto label39;

        $r46 = r154.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r48 = $r46.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r47 = r4.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i10 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r48, $r47);

        if $i10 == 0 goto label33;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r80 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r79 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r89 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appeared on system, but");

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signatures don\'t match existing userdata copy; removing");

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r87);

        $r86 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>($r86, null, 1, null, null, 0, null, 0);

        r154 = null;

        goto label39;

     label33:
        $i12 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $i11 = r154.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i12 >= $i11 goto label34;

        z10 = 1;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r69 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r77 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appeared at ");

        $r75 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but new version ");

        $i17 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r74 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than installed ");

        $i16 = r154.<com.android.server.pm.PackageSetting: int versionCode>;

        $r85 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; hiding system");

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(4, $r83);

        goto label39;

     label34:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r52 = r154.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r59 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reverting from ");

        $r60 = r154.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r56 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": new version ");

        $i13 = r4.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r65 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than installed ");

        $i15 = r154.<com.android.server.pm.PackageSetting: int versionCode>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>(5, $r66);

        $i14 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)>(r154);

        $r62 = r154.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r64 = r154.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r63 = r154.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $r72 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>(r154);

        r159 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgsForExisting(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i14, $r62, $r64, $r63, $r72);

        $r71 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r160 = $r71;

        entermonitor $r71;

     label35:
        virtualinvoke r159.<com.android.server.pm.PackageManagerService$InstallArgs: void cleanUpResourcesLI()>();

        exitmonitor r160;

     label36:
        goto label39;

     label37:
        $r148 := @caughtexception;

        r12 = $r148;

        exitmonitor r160;

     label38:
        throw r12;

     label39:
        $i5 = i31 & 64;

        if $i5 != 0 goto label40;

        if r154 == null goto label40;

        $r50 = r154.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r49 = r154.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $z3 = virtualinvoke $r50.<java.io.File: boolean equals(java.lang.Object)>($r49);

        if $z3 != 0 goto label40;

        i31 = i31 | 16;

     label40:
        r161 = null;

        r162 = null;

        $i6 = i31 & 16;

        if $i6 == 0 goto label42;

        if z9 != 0 goto label42;

        if r154 == null goto label41;

        $r43 = r154.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        if $r43 == null goto label41;

        r161 = r154.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        r162 = r154.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        goto label43;

     label41:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource path not set for pkg : ");

        $r40 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r44);

        goto label43;

     label42:
        r161 = r4.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        r162 = r4.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

     label43:
        $r27 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = r4.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        virtualinvoke $r27.<android.content.pm.ApplicationInfo: void setCodePath(java.lang.String)>($r26);

        $r31 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r30 = r4.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        virtualinvoke $r31.<android.content.pm.ApplicationInfo: void setBaseCodePath(java.lang.String)>($r30);

        $r29 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r28 = r4.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths>;

        virtualinvoke $r29.<android.content.pm.ApplicationInfo: void setSplitCodePaths(java.lang.String[])>($r28);

        $r34 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke $r34.<android.content.pm.ApplicationInfo: void setResourcePath(java.lang.String)>(r161);

        $r35 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke $r35.<android.content.pm.ApplicationInfo: void setBaseResourcePath(java.lang.String)>(r162);

        $r33 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r32 = r4.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths>;

        virtualinvoke $r33.<android.content.pm.ApplicationInfo: void setSplitResourcePaths(java.lang.String[])>($r32);

        $i7 = i1 | 8;

        r163 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r4, i31, $i7, l2, r2);

        if z10 == 0 goto label48;

        $r37 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r164 = $r37;

        entermonitor $r37;

     label44:
        $r36 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void grantPermissionsLPw(android.content.pm.PackageParser$Package,boolean,java.lang.String)>(r4, 1, $r36);

        $r38 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r39 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r38.<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)>($r39);

        exitmonitor r164;

     label45:
        goto label48;

     label46:
        $r151 := @caughtexception;

        r14 = $r151;

        exitmonitor r164;

     label47:
        throw r14;

     label48:
        return r163;

        catch android.content.pm.PackageParser$PackageParserException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
    }

    private static java.lang.String fixProcessName(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        return r0;

     label1:
        return r1;
    }

    private void verifySignaturesLP(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        android.content.pm.PackageParser$Package r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        com.android.server.pm.PackageSignatures $r3, $r7, $r10, $r25, $r27, $r29, $r38, $r40;
        android.content.pm.Signature[] $r4, $r8, $r11, $r12, $r28, $r30;
        com.android.server.pm.SharedUserSetting $r5, $r6, $r9, $r20, $r23, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.pm.PackageManagerException $r13, $r32;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r21, $r22, $r31, $r33, $r34, $r35, $r37;
        java.lang.String $r15, $r19, $r24, $r36, $r39;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r3 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r4 = $r3.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r4 == null goto label09;

        $r29 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r28 = $r29.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r30 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i3 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r28, $r30);

        if $i3 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        if z0 != 0 goto label05;

        $r40 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $i5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int compareSignaturesCompat(com.android.server.pm.PackageSignatures,android.content.pm.PackageParser$Package)>($r40, r2);

        if $i5 != 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z0 = $z6;

     label05:
        if z0 != 0 goto label08;

        $r38 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $i4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int compareSignaturesRecover(com.android.server.pm.PackageSignatures,android.content.pm.PackageParser$Package)>($r38, r2);

        if $i4 != 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        z0 = $z4;

     label08:
        if z0 != 0 goto label09;

        $r32 = new com.android.server.pm.PackageManagerException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r36 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signatures do not match the ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("previously installed version; ignoring!");

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-7, $r39);

        throw $r32;

     label09:
        $r5 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r5 == null goto label18;

        $r6 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r7 = $r6.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r8 = $r7.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r8 == null goto label18;

        $r9 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r10 = $r9.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r12 = $r10.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r11 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i0 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r12, $r11);

        if $i0 != 0 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        z7 = $z3;

        if z7 != 0 goto label14;

        $r26 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r27 = $r26.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int compareSignaturesCompat(com.android.server.pm.PackageSignatures,android.content.pm.PackageParser$Package)>($r27, r2);

        if $i2 != 0 goto label12;

        $z2 = 1;

        goto label13;

     label12:
        $z2 = 0;

     label13:
        z7 = $z2;

     label14:
        if z7 != 0 goto label17;

        $r23 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r25 = $r23.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int compareSignaturesRecover(com.android.server.pm.PackageSignatures,android.content.pm.PackageParser$Package)>($r25, r2);

        if $i1 != 0 goto label15;

        $z1 = 1;

        goto label16;

     label15:
        $z1 = 0;

     label16:
        z7 = $z1;

     label17:
        if z7 != 0 goto label18;

        $r13 = new com.android.server.pm.PackageManagerException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r15 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no signatures that match those in shared user ");

        $r20 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r19 = $r20.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring!");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-8, $r24);

        throw $r13;

     label18:
        return;
    }

    private static final void enforceSystemOrRoot(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        java.lang.SecurityException $r1;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label1;

        if i0 == 0 goto label1;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(r0);

        throw $r1;

     label1:
        return;
    }

    public void performBootDexOpt()
    {
        com.android.server.pm.PackageManagerService r0;
        android.os.storage.IMountService r1;
        long l0, l1, l2, l3, $l9, $l10;
        java.util.Iterator r2, r3, r6, r50, r52, r56, r58;
        java.lang.Throwable r5, $r37;
        android.content.pm.PackageParser$Package r7, r46, r49, r51, r53, r57, r59;
        java.util.HashMap $r8, r43;
        java.util.ArrayList $r9, r45;
        android.content.Intent $r10, $r11, r47, r54;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z9, $z10, $z12, $z13, $z15, $z16, $z19;
        android.os.storage.StorageManager $r12;
        android.content.Context $r13, $r28, $r38;
        java.lang.Object $r14, $r19, $r20, $r22, $r24, $r25, $r26;
        byte $b5, $b6, $b8, $b11;
        java.lang.StringBuilder $r15, $r17, $r18, $r31, $r32, $r33, $r34;
        java.lang.String $r16, $r23, $r27, $r30, $r40;
        java.lang.IllegalStateException $r21;
        android.content.ContentResolver $r29;
        android.os.RemoteException $r35, $r36;
        android.app.IActivityManager $r39;
        android.content.res.Resources $r41;
        java.util.HashSet r44, r48, r55;
        int i13, i14;
        java.io.File r60;

        r0 := @this: com.android.server.pm.PackageManagerService;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("Only the system can request dexopt be performed");

     label01:
        r1 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        if r1 == null goto label07;

        $r28 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r29 = virtualinvoke $r28.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r29, "fstrim_mandatory_interval", 259200000L);

        $b8 = l0 cmp 0L;

        if $b8 <= 0 goto label06;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l10 = interfaceinvoke r1.<android.os.storage.IMountService: long lastMaintenance()>();

        l1 = $l9 - $l10;

        $b11 = l1 cmp l0;

        if $b11 <= 0 goto label06;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No disk maintenance in ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; running immediately");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r30);

        $z19 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>();

        if $z19 != 0 goto label05;

     label02:
        $r39 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r38 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r41 = virtualinvoke $r38.<android.content.Context: android.content.res.Resources getResources()>();

        $r40 = virtualinvoke $r41.<android.content.res.Resources: java.lang.String getString(int)>(17040517);

        interfaceinvoke $r39.<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>($r40, 1);

     label03:
        goto label05;

     label04:
        $r36 := @caughtexception;

     label05:
        interfaceinvoke r1.<android.os.storage.IMountService: void runMaintenance()>();

     label06:
        goto label08;

     label07:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Mount service unavailable!");

     label08:
        goto label10;

     label09:
        $r35 := @caughtexception;

     label10:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r43 = $r8;

        entermonitor $r8;

     label11:
        r44 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt>;

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt> = null;

        exitmonitor r43;

     label12:
        goto label15;

     label13:
        $r37 := @caughtexception;

        r5 = $r37;

        exitmonitor r43;

     label14:
        throw r5;

     label15:
        if r44 == null goto label36;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r45 = $r9;

        r2 = virtualinvoke r44.<java.util.HashSet: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r25 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r46 = (android.content.pm.PackageParser$Package) $r25;

        $z15 = r46.<android.content.pm.PackageParser$Package: boolean coreApp>;

        if $z15 == 0 goto label17;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r46);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label17:
        goto label16;

     label18:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PRE_BOOT_COMPLETED");

        r47 = $r10;

        r48 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.HashSet getPackageNamesForIntent(android.content.Intent)>(r47);

        r3 = virtualinvoke r44.<java.util.HashSet: java.util.Iterator iterator()>();

     label19:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r26 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r49 = (android.content.pm.PackageParser$Package) $r26;

        $r27 = r49.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z13 = virtualinvoke r48.<java.util.HashSet: boolean contains(java.lang.Object)>($r27);

        if $z13 == 0 goto label20;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r49);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label20:
        goto label19;

     label21:
        r50 = virtualinvoke r44.<java.util.HashSet: java.util.Iterator iterator()>();

     label22:
        $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label24;

        $r24 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (android.content.pm.PackageParser$Package) $r24;

        $z10 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r51);

        if $z10 == 0 goto label23;

        $z16 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r51);

        if $z16 != 0 goto label23;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r51);

        interfaceinvoke r50.<java.util.Iterator: void remove()>();

     label23:
        goto label22;

     label24:
        r52 = virtualinvoke r44.<java.util.HashSet: java.util.Iterator iterator()>();

     label25:
        $z3 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label27;

        $r22 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        r53 = (android.content.pm.PackageParser$Package) $r22;

        $z12 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r53);

        if $z12 == 0 goto label26;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r53);

        interfaceinvoke r52.<java.util.Iterator: void remove()>();

     label26:
        goto label25;

     label27:
        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        r54 = $r11;

        r55 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.HashSet getPackageNamesForIntent(android.content.Intent)>(r54);

        r56 = virtualinvoke r44.<java.util.HashSet: java.util.Iterator iterator()>();

     label28:
        $z5 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label30;

        $r19 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (android.content.pm.PackageParser$Package) $r19;

        $r23 = r57.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z9 = virtualinvoke r55.<java.util.HashSet: boolean contains(java.lang.Object)>($r23);

        if $z9 == 0 goto label29;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r57);

        interfaceinvoke r56.<java.util.Iterator: void remove()>();

     label29:
        goto label28;

     label30:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void filterRecentlyUsedApps(java.util.HashSet)>(r44);

        r58 = virtualinvoke r44.<java.util.HashSet: java.util.Iterator iterator()>();

     label31:
        $z4 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label32;

        $r20 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (android.content.pm.PackageParser$Package) $r20;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r59);

        goto label31;

     label32:
        i13 = 0;

        i14 = virtualinvoke r45.<java.util.ArrayList: int size()>();

        r60 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r13 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r12 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageManager 'from'(android.content.Context)>($r13);

        l2 = virtualinvoke $r12.<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>(r60);

        $b5 = l2 cmp 0L;

        if $b5 != 0 goto label33;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid low memory threshold");

        throw $r21;

     label33:
        r6 = virtualinvoke r45.<java.util.ArrayList: java.util.Iterator iterator()>();

     label34:
        $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label36;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.content.pm.PackageParser$Package) $r14;

        l3 = virtualinvoke r60.<java.io.File: long getUsableSpace()>();

        $b6 = l3 cmp l2;

        if $b6 >= 0 goto label35;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not running dexopt on remaining apps due to low memory: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        goto label36;

     label35:
        i13 = i13 + 1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void performBootDexOpt(android.content.pm.PackageParser$Package,int,int)>(r7, i13, i14);

        goto label34;

     label36:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label01 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private void filterRecentlyUsedApps(java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashSet r1;
        long l0, l1, l4, l5, $l6, $l8;
        java.util.Iterator r2;
        android.content.pm.PackageParser$Package r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r4;
        byte $b7;
        com.android.server.pm.PackageManagerService$PackageUsage $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.HashSet;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mLazyDexOpt>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>();

        if $z3 != 0 goto label6;

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageUsage mPackageUsage>;

        $z4 = virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageUsage: boolean isHistoricalPackageUsageAvailable()>();

        if $z4 == 0 goto label6;

     label1:
        $z1 = r0.<com.android.server.pm.PackageManagerService: boolean mLazyDexOpt>;

        if $z1 == 0 goto label2;

        l0 = 30L;

        goto label3;

     label2:
        l0 = 10080L;

     label3:
        $l6 = l0 * 60L;

        l1 = $l6 * 1000L;

        virtualinvoke r1.<java.util.HashSet: int size()>();

        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r2 = virtualinvoke r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.PackageParser$Package) $r4;

        l5 = r3.<android.content.pm.PackageParser$Package: long mLastPackageUsageTimeInMills>;

        $l8 = l5 + l1;

        $b7 = $l8 cmp l4;

        if $b7 >= 0 goto label5;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label5:
        goto label4;

     label6:
        return;
    }

    private java.util.HashSet getPackageNamesForIntent(android.content.Intent)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.util.List r2;
        java.util.Iterator r4;
        android.content.pm.ResolveInfo r5;
        android.content.pm.IPackageManager $r6;
        java.util.HashSet $r7, r12;
        boolean $z0;
        java.lang.Object $r8;
        android.content.pm.ActivityInfo $r9;
        java.lang.String $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 = null;

     label1:
        $r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r2 = interfaceinvoke $r6.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, null, 0, 0);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r12 = $r7;

        if r2 == null goto label6;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.ResolveInfo) $r8;

        $r9 = r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r9.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>($r10);

        goto label5;

     label6:
        return r12;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void performBootDexOpt(android.content.pm.PackageParser$Package, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r15;
        int i0, i1;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r14;
        boolean $z0;
        android.app.IActivityManager $r6;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        java.lang.Object[] $r9;
        java.lang.Integer $r10, $r11;
        android.os.RemoteException $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>();

        if $z0 != 0 goto label4;

     label1:
        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[1] = $r11;

        $r13 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040518, $r9);

        interfaceinvoke $r6.<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>($r13, 1);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        r15 = r1;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r3 = $r5;

        entermonitor $r5;

     label5:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,boolean)>(r15, null, 0, 0, 1);

        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label8:
        throw r4;

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean performDexOptIfNeeded(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return $z0;
    }

    private static java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $r1 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPreferredInstructionSet()>();

        return $r4;

     label1:
        $r2 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $r3 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r2);

        return $r3;
    }

    public boolean performDexOpt(java.lang.String, java.lang.String, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, r4, $r12;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        android.content.pm.PackageParser$Package r3;
        java.util.HashMap r5, $r8, $r9;
        java.lang.Throwable r6, r7, $r17, $r18;
        java.lang.Object $r10, $r15, r19;
        com.android.server.pm.PackageManagerService$PackageUsage $r11;
        android.content.pm.ApplicationInfo $r13;
        android.util.ArraySet $r14;
        int $i0;
        java.lang.String[] $r16, r20;
        long $l1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z3 = r0.<com.android.server.pm.PackageManagerService: boolean mLazyDexOpt>;

        if $z3 != 0 goto label01;

        if z0 == 0 goto label02;

     label01:
        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z1 = $z6;

        if z0 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z2 = $z7;

        if z1 != 0 goto label06;

        if z2 != 0 goto label06;

        return 0;

     label06:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r5 = $r8;

        entermonitor $r8;

     label07:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r10;

        if r3 != null goto label09;

        exitmonitor r5;

     label08:
        return 0;

     label09:
        if z2 == 0 goto label10;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3.<android.content.pm.PackageParser$Package: long mLastPackageUsageTimeInMills> = $l1;

     label10:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageUsage mPackageUsage>;

        virtualinvoke $r11.<com.android.server.pm.PackageManagerService$PackageUsage: void write(boolean)>(0);

        if z1 != 0 goto label12;

        exitmonitor r5;

     label11:
        return 0;

     label12:
        if r2 == null goto label13;

        $r12 = r2;

        goto label14;

     label13:
        $r13 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>($r13);

     label14:
        r4 = $r12;

        $r14 = r3.<android.content.pm.PackageParser$Package: android.util.ArraySet mDexOptPerformed>;

        $z4 = virtualinvoke $r14.<android.util.ArraySet: boolean contains(java.lang.Object)>(r4);

        if $z4 == 0 goto label16;

        exitmonitor r5;

     label15:
        return 0;

     label16:
        exitmonitor r5;

     label17:
        goto label20;

     label18:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r5;

     label19:
        throw r6;

     label20:
        $r15 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r19 = $r15;

        entermonitor $r15;

     label21:
        $r16 = newarray (java.lang.String)[1];

        $r16[0] = r4;

        r20 = $r16;

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,boolean)>(r3, r20, 0, 0, 1);

        if $i0 != 1 goto label22;

        $z5 = 1;

        goto label23;

     label22:
        $z5 = 0;

     label23:
        exitmonitor r19;

     label24:
        return $z5;

     label25:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r19;

     label26:
        throw r7;

        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label11 with label18;
        catch java.lang.Throwable from label12 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label21 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    public java.util.HashSet getPackagesThatNeedDexOpt()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashSet r1, $r12;
        java.util.HashMap r2, $r6, $r7;
        java.util.Iterator r3;
        android.content.pm.PackageParser$Package r4;
        java.lang.Throwable r5, $r13;
        java.util.Collection $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        android.util.ArraySet $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 = null;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageParser$Package) $r9;

        $r10 = r4.<android.content.pm.PackageParser$Package: android.util.ArraySet mDexOptPerformed>;

        $z1 = virtualinvoke $r10.<android.util.ArraySet: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        goto label2;

     label3:
        if r1 != null goto label4;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r1 = $r12;

     label4:
        $r11 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return r1;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void shutdown()
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$PackageUsage $r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageUsage mPackageUsage>;

        virtualinvoke $r1.<com.android.server.pm.PackageManagerService$PackageUsage: void write(boolean)>(1);

        return;
    }

    private void performDexOptLibsLI(java.util.ArrayList, java.lang.String[], boolean, boolean, java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.ArrayList r1;
        java.lang.String[] r2;
        boolean z0, z1, $z2;
        java.util.HashSet r3;
        int i0, $i1;
        android.content.pm.PackageParser$Package r4;
        java.lang.String r5, $r13, $r14;
        java.util.HashMap r6, $r9, $r11, $r16;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r7;
        java.lang.Throwable r8, $r17;
        java.lang.Object $r10, $r12, $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.util.HashSet;

        i0 = 0;

     label01:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label10;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r6 = $r9;

        entermonitor $r9;

     label02:
        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (java.lang.String) $r10;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r12;

        if r7 == null goto label03;

        $r14 = r7.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        if $r14 == null goto label03;

        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r13 = r7.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r4 = (android.content.pm.PackageParser$Package) $r15;

        goto label04;

     label03:
        r4 = null;

     label04:
        exitmonitor r6;

     label05:
        goto label08;

     label06:
        $r17 := @caughtexception;

        r8 = $r17;

        exitmonitor r6;

     label07:
        throw r8;

     label08:
        if r4 == null goto label09;

        $z2 = virtualinvoke r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r5);

        if $z2 != 0 goto label09;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,java.util.HashSet)>(r4, r2, z0, z1, r3);

     label09:
        i0 = i0 + 1;

        goto label01;

     label10:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private int performDexOptLI(android.content.pm.PackageParser$Package, java.lang.String[], boolean, boolean, java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        java.lang.String[] r2, r4, r6, r7, $r11;
        boolean z0, z1, z2, z3, $z5, $z6, $z7, $z9, $z10, $z12, $z13;
        java.util.HashSet r3, $r32, $r34, $r35;
        java.util.List r5;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i11, $i13, i18, i19;
        java.lang.String r8, r10, $r18, $r25, $r27, $r33, $r36, $r38, $r42, $r49, $r52, $r58, $r63;
        java.util.Iterator r9;
        byte b2, $b9;
        android.content.pm.ApplicationInfo $r12, $r13, $r14, $r20, $r31, $r41, $r43;
        java.lang.Object $r15;
        android.util.ArraySet $r16, $r48;
        java.lang.StringBuilder $r17, $r19, $r21, $r22, $r23, $r24, $r26, $r28, $r29, $r37, $r39, $r40, $r50, $r51, $r55, $r57, $r59, $r61, $r64, $r65, $r66;
        com.android.server.pm.Installer $r30, $r44;
        java.util.ArrayList $r45, $r46, $r47, $r54;
        java.io.IOException $r53, r68;
        java.io.FileNotFoundException $r56;
        dalvik.system.StaleDexCacheError $r60, r69;
        java.lang.Exception $r62, r70;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.util.HashSet;

        if r2 == null goto label01;

        $r11 = r2;

        goto label02;

     label01:
        $r12 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(android.content.pm.ApplicationInfo)>($r12);

     label02:
        r4 = $r11;

        if r3 == null goto label04;

        $r49 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r49);

        $r45 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r45 == null goto label03;

        $r54 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void performDexOptLibsLI(java.util.ArrayList,java.lang.String[],boolean,boolean,java.util.HashSet)>($r54, r4, z0, z1, r3);

     label03:
        $r47 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r47 == null goto label04;

        $r46 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void performDexOptLibsLI(java.util.ArrayList,java.lang.String[],boolean,boolean,java.util.HashSet)>($r46, r4, z0, z1, r3);

     label04:
        $r13 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i5 & 4;

        if $i6 != 0 goto label05;

        return 0;

     label05:
        $r14 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r14.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i8 & 16384;

        if $i7 == 0 goto label06;

        $z13 = 1;

        goto label07;

     label06:
        $z13 = 0;

     label07:
        z2 = $z13;

        r5 = virtualinvoke r1.<android.content.pm.PackageParser$Package: java.util.List getAllCodePathsExcludingResourceOnly()>();

        z3 = 0;

        r6 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>(r4);

        r7 = r6;

        i0 = lengthof r7;

        i1 = 0;

     label08:
        if i1 >= i0 goto label33;

        r8 = r7[i1];

        if z0 != 0 goto label09;

        $r48 = r1.<android.content.pm.PackageParser$Package: android.util.ArraySet mDexOptPerformed>;

        $z12 = virtualinvoke $r48.<android.util.ArraySet: boolean contains(java.lang.Object)>(r8);

        if $z12 == 0 goto label09;

        goto label32;

     label09:
        r9 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z5 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label31;

        $r15 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r15;

     label11:
        $r18 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        b2 = staticinvoke <dalvik.system.DexFile: byte isDexOptNeededInternal(java.lang.String,java.lang.String,java.lang.String,boolean)>(r10, $r18, r8, z1);

        if z0 != 0 goto label12;

        if z1 != 0 goto label17;

        if b2 != 2 goto label17;

     label12:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running dexopt on: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r20 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r25 = $r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isa=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vmSafeMode=");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r27);

        $r31 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r31.<android.content.pm.ApplicationInfo: int uid>;

        i4 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i11);

        $r30 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $z6 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z6 != 0 goto label13;

        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        $r33 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        i3 = virtualinvoke $r30.<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String,java.lang.String,boolean)>(r10, i4, $z7, $r33, r8, z2);

        if i3 >= 0 goto label16;

     label15:
        return -1;

     label16:
        z3 = 1;

        goto label22;

     label17:
        if z1 != 0 goto label22;

        if b2 != 1 goto label22;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running patchoat on: ");

        $r41 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r36 = $r41.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r38);

        $r43 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r43.<android.content.pm.ApplicationInfo: int uid>;

        i18 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i13);

        $r44 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $z9 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z9 != 0 goto label18;

        $z10 = 1;

        goto label19;

     label18:
        $z10 = 0;

     label19:
        $r42 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        i19 = virtualinvoke $r44.<com.android.server.pm.Installer: int patchoat(java.lang.String,int,boolean,java.lang.String,java.lang.String)>(r10, i18, $z10, $r42, r8);

        if i19 >= 0 goto label21;

     label20:
        return -1;

     label21:
        z3 = 1;

     label22:
        if z1 == 0 goto label25;

        if b2 == 0 goto label25;

        $r32 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt>;

        if $r32 != null goto label23;

        $r34 = new java.util.HashSet;

        specialinvoke $r34.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt> = $r34;

     label23:
        $r35 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt>;

        virtualinvoke $r35.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label24:
        return 2;

     label25:
        goto label30;

     label26:
        $r56 := @caughtexception;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Apk not found for dexopt: ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r63 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r63);

        return -1;

     label27:
        $r53 := @caughtexception;

        r68 = $r53;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException reading apk: ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r52, r68);

        return -1;

     label28:
        $r60 := @caughtexception;

        r69 = $r60;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StaleDexCacheError when reading apk: ");

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r58, r69);

        return -1;

     label29:
        $r62 := @caughtexception;

        r70 = $r62;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Exception when doing dexopt : ", r70);

        return -1;

     label30:
        goto label10;

     label31:
        $r16 = r1.<android.content.pm.PackageParser$Package: android.util.ArraySet mDexOptPerformed>;

        virtualinvoke $r16.<android.util.ArraySet: boolean add(java.lang.Object)>(r8);

     label32:
        i1 = i1 + 1;

        goto label08;

     label33:
        if z3 == 0 goto label34;

        $b9 = 1;

        goto label35;

     label34:
        $b9 = 0;

     label35:
        return $b9;

        catch java.io.FileNotFoundException from label11 to label15 with label26;
        catch java.io.FileNotFoundException from label16 to label20 with label26;
        catch java.io.FileNotFoundException from label21 to label24 with label26;
        catch java.io.IOException from label11 to label15 with label27;
        catch java.io.IOException from label16 to label20 with label27;
        catch java.io.IOException from label21 to label24 with label27;
        catch dalvik.system.StaleDexCacheError from label11 to label15 with label28;
        catch dalvik.system.StaleDexCacheError from label16 to label20 with label28;
        catch dalvik.system.StaleDexCacheError from label21 to label24 with label28;
        catch java.lang.Exception from label11 to label15 with label29;
        catch java.lang.Exception from label16 to label20 with label29;
        catch java.lang.Exception from label21 to label24 with label29;
    }

    private static java.lang.String[] getAppDexInstructionSets(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        java.lang.String $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12;
        java.lang.String[] $r2, $r5, $r8;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $r1 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r1 == null goto label2;

        $r4 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r4 == null goto label1;

        $r8 = newarray (java.lang.String)[2];

        $r9 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $r10 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r9);

        $r8[0] = $r10;

        $r11 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        $r12 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r11);

        $r8[1] = $r12;

        return $r8;

     label1:
        $r5 = newarray (java.lang.String)[1];

        $r6 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $r7 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r6);

        $r5[0] = $r7;

        return $r5;

     label2:
        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPreferredInstructionSet()>();

        $r2[0] = $r3;

        return $r2;
    }

    private static java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        java.lang.String $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12;
        java.lang.String[] $r2, $r5, $r8;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $r1 = r0.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r1 == null goto label2;

        $r4 = r0.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r4 == null goto label1;

        $r8 = newarray (java.lang.String)[2];

        $r9 = r0.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $r10 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r9);

        $r8[0] = $r10;

        $r11 = r0.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $r12 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r11);

        $r8[1] = $r12;

        return $r8;

     label1:
        $r5 = newarray (java.lang.String)[1];

        $r6 = r0.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $r7 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r6);

        $r5[0] = $r7;

        return $r5;

     label2:
        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPreferredInstructionSet()>();

        $r2[0] = $r3;

        return $r2;
    }

    private static java.lang.String getPreferredInstructionSet()
    {
        java.lang.String $r0, $r1, $r3, $r4;
        java.lang.String[] $r2;

        $r0 = <com.android.server.pm.PackageManagerService: java.lang.String sPreferredInstructionSet>;

        if $r0 != null goto label1;

        $r2 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        $r3 = $r2[0];

        $r4 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r3);

        <com.android.server.pm.PackageManagerService: java.lang.String sPreferredInstructionSet> = $r4;

     label1:
        $r1 = <com.android.server.pm.PackageManagerService: java.lang.String sPreferredInstructionSet>;

        return $r1;
    }

    private static java.util.List getAllInstructionSets()
    {
        java.lang.String[] r0, r2;
        java.util.ArrayList r1, $r5;
        int i0, i1, $i2;
        java.lang.String r3, r4;
        boolean $z0;

        r0 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        $r5 = new java.util.ArrayList;

        $i2 = lengthof r0;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i2);

        r1 = $r5;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        r4 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>(r3);

        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    private static java.lang.String getDexCodeInstructionSet(java.lang.String)
    {
        java.lang.String r0, r1, $r5, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ro.dalvik.vm.isa.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r5);

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = r0;

        goto label2;

     label1:
        $r6 = r1;

     label2:
        return $r6;
    }

    private static java.lang.String[] getDexCodeInstructionSets(java.lang.String[])
    {
        java.lang.String[] r0, r2, $r5, $r7;
        java.util.HashSet r1, $r4;
        int i0, i1, $i2, $i3;
        java.lang.String r3, $r8;
        java.lang.Object[] $r6;

        r0 := @parameter0: java.lang.String[];

        $r4 = new java.util.HashSet;

        $i2 = lengthof r0;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i2);

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r8 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getDexCodeInstructionSet(java.lang.String)>(r3);

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke r1.<java.util.HashSet: int size()>();

        $r5 = newarray (java.lang.String)[$i3];

        $r6 = virtualinvoke r1.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        return $r7;
    }

    public static java.lang.String[] getAllDexCodeInstructionSets()
    {
        java.lang.String[] r0, $r2, $r3, $r4;
        int i0, $i1, $i2;
        java.lang.String r1, $r5;

        $r2 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        $i1 = lengthof $r2;

        r0 = newarray (java.lang.String)[$i1];

        i0 = 0;

     label1:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label2;

        $r4 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        r1 = $r4[i0];

        $r5 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>(r1);

        r0[i0] = $r5;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>(r0);

        return $r3;
    }

    public void forceDexOpt(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r12, $r18, $r21;
        android.content.pm.PackageParser$Package r2;
        java.util.HashMap r3, $r6, $r7;
        java.lang.Throwable r4, r5, $r23, $r24;
        int i0;
        java.lang.Object $r8, $r9, r25;
        java.lang.String[] $r10, r26;
        android.content.pm.ApplicationInfo $r11;
        java.lang.StringBuilder $r13, $r15, $r16, $r19, $r20, $r22;
        java.lang.IllegalStateException $r14;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("forceDexOpt");

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.content.pm.PackageParser$Package) $r8;

        if r2 != null goto label02;

        $r17 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing package: ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label02:
        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r23 := @caughtexception;

        r4 = $r23;

        exitmonitor r3;

     label05:
        throw r4;

     label06:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r25 = $r9;

        entermonitor $r9;

     label07:
        $r10 = newarray (java.lang.String)[1];

        $r11 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>($r11);

        $r10[0] = $r12;

        r26 = $r10;

        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,boolean)>(r2, r26, 1, 0, 1);

        if i0 == 1 goto label08;

        $r14 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to dexopt: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label08:
        exitmonitor r25;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        r5 = $r24;

        exitmonitor r25;

     label11:
        throw r5;

     label12:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private int performDexOptLI(android.content.pm.PackageParser$Package, java.lang.String[], boolean, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        java.lang.String[] r2;
        boolean z0, z1, z2;
        java.util.HashSet r3, $r5;
        int $i0;
        java.util.ArrayList $r4, $r7;
        java.lang.String $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        if z2 == 0 goto label2;

        $r4 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r4 != null goto label1;

        $r7 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r7 == null goto label2;

     label1:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r3 = $r5;

        $r6 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        goto label3;

     label2:
        r3 = null;

     label3:
        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,java.util.HashSet)>(r1, r2, z0, z1, r3);

        return $i0;
    }

    private boolean verifyPackageUpdateLPr(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        android.content.pm.PackageParser$Package r2;
        int $i0, $i1;
        java.lang.String $r3, $r8, $r11, $r13, $r18, $r19, $r23;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r20, $r21, $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $i0 = r1.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update from ");

        $r18 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r19 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": old package not in system partition");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        return 0;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r3 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        if $r5 == null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update from ");

        $r8 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": old package still exists");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r13);

        return 0;

     label2:
        return 1;
    }

    java.io.File getDataPathForUser(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.io.File $r1, $r3;
        java.lang.StringBuilder $r2, $r5, $r7, $r8;
        java.lang.String $r4, $r6, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.pm.PackageManagerService: java.io.File mUserAppDataDir>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = <java.io.File: java.lang.String separator>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r9);

        return $r1;
    }

    private java.io.File getDataPathForPackage(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r5, $r7, $r10, $r13;
        int i0;
        java.io.File $r2, $r4, $r14, $r15;
        java.lang.StringBuilder $r3, $r6, $r8, $r9, $r11, $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r14 = new java.io.File;

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppDataDir>;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, r1);

        return $r14;

     label1:
        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.io.File mUserAppDataDir>;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = <java.io.File: java.lang.String separator>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = <java.io.File: java.lang.String separator>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r13);

        return $r2;
    }

    private int createDataDirsLI(java.lang.String, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4, $i5;
        int[] r3, r4;
        com.android.server.pm.UserManagerService $r5;
        com.android.server.pm.Installer $r6, $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r5 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r3 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i1 = virtualinvoke $r6.<com.android.server.pm.Installer: int install(java.lang.String,int,int,java.lang.String)>(r1, i0, i0, r2);

        if i1 >= 0 goto label1;

        return i1;

     label1:
        r4 = r3;

        i2 = lengthof r4;

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        i4 = r4[i3];

        if i4 == 0 goto label3;

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i4, i0);

        i1 = virtualinvoke $r7.<com.android.server.pm.Installer: int createUserData(java.lang.String,int,int,java.lang.String)>(r1, $i5, i4, r2);

        if i1 >= 0 goto label3;

        return i1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return i1;
    }

    private int removeDataDirsLI(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int[] r2, r3;
        int i0, i1, i2, i3, i4;
        com.android.server.pm.UserManagerService $r4;
        com.android.server.pm.Installer $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r2 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i0 = 0;

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        i3 = r3[i2];

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i4 = virtualinvoke $r5.<com.android.server.pm.Installer: int remove(java.lang.String,int)>(r1, i3);

        if i4 >= 0 goto label2;

        i0 = i4;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i0;
    }

    private int deleteCodeCacheDirsLI(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int[] r2, r3;
        int i0, i1, i2, i3, i4;
        com.android.server.pm.UserManagerService $r4;
        com.android.server.pm.Installer $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r2 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i0 = 0;

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        i3 = r3[i2];

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i4 = virtualinvoke $r5.<com.android.server.pm.Installer: int deleteCodeCacheFiles(java.lang.String,int)>(r1, i3);

        if i4 >= 0 goto label2;

        i0 = i4;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i0;
    }

    private void addSharedLibraryLPw(android.util.ArraySet, com.android.server.pm.PackageManagerService$SharedLibraryEntry, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.util.ArraySet r1;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r2;
        android.content.pm.PackageParser$Package r3, r4;
        java.lang.String $r5, $r6, $r10, $r11, $r12, $r13, $r14;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        java.util.List $r9;
        boolean $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.util.ArraySet;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$SharedLibraryEntry;

        r3 := @parameter2: android.content.pm.PackageParser$Package;

        $r5 = r2.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        if $r5 == null goto label1;

        $r14 = r2.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        virtualinvoke r1.<android.util.ArraySet: boolean add(java.lang.Object)>($r14);

        return;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = r2.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (android.content.pm.PackageParser$Package) $r8;

        if r3 == null goto label3;

        $r11 = r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r10 = r2.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

        if r4 == null goto label2;

        $r13 = r4.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r12 = r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label3;

     label2:
        r4 = r3;

     label3:
        if r4 == null goto label4;

        $r9 = virtualinvoke r4.<android.content.pm.PackageParser$Package: java.util.List getAllCodePaths()>();

        virtualinvoke r1.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r9);

     label4:
        return;
    }

    private void updateSharedLibrariesLPw(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2;
        android.util.ArraySet r3, $r6;
        int i0, i1, $i3, $i4, i5, i6, i7;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r4, r46;
        java.util.ArrayList $r5, $r7, $r8, $r12, $r20, $r27, $r29, $r40, $r41, $r45;
        java.lang.String[] $r9, $r11;
        java.lang.Object[] $r10;
        java.lang.Object $r13, $r16, $r23, $r32, $r33, $r37;
        java.util.HashMap $r14, $r28;
        java.lang.StringBuilder $r15, $r17, $r18, $r21, $r24, $r25, $r31, $r35, $r36, $r39, $r43, $r44;
        java.lang.String $r19, $r22, $r26, $r34, $r38, $r42;
        com.android.server.pm.PackageManagerException $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r5 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r5 != null goto label01;

        $r45 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r45 == null goto label14;

     label01:
        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r3 = $r6;

        $r7 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r7 == null goto label02;

        $r41 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $i4 = virtualinvoke $r41.<java.util.ArrayList: int size()>();

        goto label03;

     label02:
        $i4 = 0;

     label03:
        i0 = $i4;

        i1 = 0;

     label04:
        if i1 >= i0 goto label06;

        $r28 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r27 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r32 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r33 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r32);

        r4 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r33;

        if r4 != null goto label05;

        $r30 = new com.android.server.pm.PackageManagerException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r34 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires unavailable shared library ");

        $r40 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r37 = virtualinvoke $r40.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r38 = (java.lang.String) $r37;

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; failing!");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-9, $r42);

        throw $r30;

     label05:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addSharedLibraryLPw(android.util.ArraySet,com.android.server.pm.PackageManagerService$SharedLibraryEntry,android.content.pm.PackageParser$Package)>(r3, r4, r2);

        i1 = i1 + 1;

        goto label04;

     label06:
        $r8 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r8 == null goto label07;

        $r29 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $i3 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        goto label08;

     label07:
        $i3 = 0;

     label08:
        i5 = $i3;

        i6 = 0;

     label09:
        if i6 >= i5 goto label12;

        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r12 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r46 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r16;

        if r46 != null goto label10;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r19 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" desires unavailable shared library ");

        $r20 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r23 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r22 = (java.lang.String) $r23;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring!");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r26);

        goto label11;

     label10:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addSharedLibraryLPw(android.util.ArraySet,com.android.server.pm.PackageManagerService$SharedLibraryEntry,android.content.pm.PackageParser$Package)>(r3, r46, r2);

     label11:
        i6 = i6 + 1;

        goto label09;

     label12:
        i7 = virtualinvoke r3.<android.util.ArraySet: int size()>();

        if i7 <= 0 goto label13;

        $r9 = newarray (java.lang.String)[i7];

        $r10 = virtualinvoke r3.<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r11 = (java.lang.String[]) $r10;

        r1.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles> = $r11;

        goto label14;

     label13:
        r1.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles> = null;

     label14:
        return;
    }

    private static boolean hasString(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        int i0, i1, $i2, $i3;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        if r0 != null goto label1;

        return 0;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        i0 = $i2 - 1;

     label2:
        if i0 < 0 goto label6;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = $i3 - 1;

     label3:
        if i1 < 0 goto label5;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + -1;

        goto label3;

     label5:
        i0 = i0 + -1;

        goto label2;

     label6:
        return 0;
    }

    private void updateAllSharedLibrariesLPw()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Iterator r1;
        android.content.pm.PackageParser$Package r2;
        com.android.server.pm.PackageManagerException r3, $r7;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.PackageParser$Package) $r6;

     label2:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSharedLibrariesLPw(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r2, null);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAllSharedLibrariesLPw failed: ");

        $r10 = virtualinvoke r3.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r12);

     label5:
        goto label1;

     label6:
        return;

        catch com.android.server.pm.PackageManagerException from label2 to label3 with label4;
    }

    private java.util.ArrayList updateAllSharedLibrariesLPw(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r4;
        java.util.ArrayList r2, $r9, $r10, $r11, $r12, $r13;
        java.util.Iterator r3;
        com.android.server.pm.PackageManagerException r5, $r14;
        java.util.HashMap $r6;
        java.util.Collection $r7;
        boolean $z0, $z1, $z3;
        java.lang.Object $r8;
        java.lang.StringBuilder $r15, $r17, $r19;
        java.lang.String $r16, $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 = null;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageParser$Package) $r8;

        $r10 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r9 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasString(java.util.List,java.util.List)>($r10, $r9);

        if $z1 != 0 goto label2;

        $r12 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r13 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasString(java.util.List,java.util.List)>($r12, $r13);

        if $z3 == 0 goto label7;

     label2:
        if r2 != null goto label3;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

     label3:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label4:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSharedLibrariesLPw(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r4, r1);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        r5 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAllSharedLibrariesLPw failed: ");

        $r16 = virtualinvoke r5.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r18);

     label7:
        goto label1;

     label8:
        return r2;

        catch com.android.server.pm.PackageManagerException from label4 to label5 with label6;
    }

    private static java.lang.String deriveAbiOverride(java.lang.String, com.android.server.pm.PackageSetting)
    {
        java.lang.String r0, r2, $r3;
        com.android.server.pm.PackageSetting r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.server.pm.PackageSetting;

        r2 = null;

        $r3 = "-";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r2 = null;

        goto label3;

     label1:
        if r0 == null goto label2;

        r2 = r0;

        goto label3;

     label2:
        if r1 == null goto label3;

        r2 = r1.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

     label3:
        return r2;
    }

    private android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package, int, int, long, android.os.UserHandle) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r3, r4;
        int i0, i1, $i3, $i5;
        long l2;
        android.os.UserHandle r2;
        boolean z0;
        java.lang.Throwable r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 := @parameter4: android.os.UserHandle;

        z0 = 0;

     label1:
        r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageDirtyLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r1, i0, i1, l2, r2);

        z0 = 1;

        r4 = r3;

     label2:
        if z0 != 0 goto label3;

        $i3 = i1 & 1024;

        if $i3 == 0 goto label3;

        $r6 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r6);

     label3:
        return r4;

     label4:
        $r7 := @caughtexception;

        r5 = $r7;

     label5:
        if z0 != 0 goto label6;

        $i5 = i1 & 1024;

        if $i5 == 0 goto label6;

        $r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r8);

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private android.content.pm.PackageParser$Package scanPackageDirtyLI(android.content.pm.PackageParser$Package, int, int, long, android.os.UserHandle) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, $r73, $r105, $r260, $r262, $r272, $r444, $r446, $r447, $r497, r858, r859, r892;
        int i0, i1, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, i94, i95, i96, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125;
        long l2, $l26, $l46, $l48, l97;
        android.os.UserHandle r2;
        java.io.File r3, $r21, $r43, $r46, $r96, $r645, $r648, r823, r824, r832, r833, r847;
        java.util.HashMap r4, r7, $r32, $r40, $r53, $r101, $r109, $r115, $r128, $r136, $r137, $r139, $r142, $r146, $r161, $r194, $r283, $r294, $r321, $r397, $r399, $r422, $r427, $r439, $r577, $r601, $r625, $r656, $r725, r841, r855, r860, r885, r891;
        java.lang.Throwable r5, r15, r16, r17, r19, r20, r23, r24, $r769, $r773, $r774, $r780, $r799, $r800, $r819, $r820;
        com.android.server.pm.SharedUserSetting r6, $r491, $r508, $r697, $r746, $r751, $r752, $r757, $r765, $r776;
        com.android.server.pm.PackageSetting r8, $r652, r825, r830, r857;
        java.lang.String r9, r10, r13, r18, $r22, $r28, $r30, $r31, $r33, $r38, $r41, $r42, $r44, $r47, $r49, $r52, $r55, $r56, $r61, $r63, $r74, $r76, $r77, $r78, $r80, $r85, $r93, $r98, $r100, $r104, $r107, $r110, $r121, $r123, $r125, $r126, $r127, $r129, $r131, $r138, $r141, $r144, $r145, $r148, $r151, $r159, $r163, $r164, $r175, $r177, $r182, $r185, $r190, $r197, $r198, $r199, $r202, $r206, $r211, $r213, $r215, $r218, $r220, $r223, $r225, $r228, $r230, $r232, $r233, $r237, $r238, $r241, $r243, $r247, $r253, $r259, $r264, $r265, $r268, $r277, $r281, $r282, $r289, $r297, $r301, $r307, $r308, $r310, $r312, $r316, $r319, $r322, $r324, $r326, $r327, $r335, $r336, $r339, $r340, $r347, $r352, $r354, $r357, $r358, $r360, $r364, $r370, $r371, $r374, $r375, $r376, $r381, $r387, $r390, $r393, $r398, $r401, $r402, $r409, $r413, $r416, $r420, $r421, $r425, $r429, $r431, $r432, $r435, $r440, $r443, $r449, $r453, $r456, $r468, $r471, $r472, $r479, $r484, $r487, $r499, $r501, $r504, $r511, $r514, $r516, $r521, $r530, $r531, $r532, $r534, $r535, $r542, $r545, $r549, $r551, $r553, $r557, $r562, $r563, $r585, $r586, $r588, $r597, $r606, $r610, $r614, $r615, $r621, $r623, $r624, $r626, $r635, $r637, $r643, $r647, $r651, $r659, $r661, $r662, $r666, $r671, $r675, $r676, $r681, $r682, $r685, $r687, $r691, $r698, $r719, $r721, $r726, $r730, $r733, $r735, $r739, $r740, $r741, $r744, $r745, $r749, $r750, $r761, $r768, $r778, $r781, $r784, $r785, $r786, $r787, $r793, $r795, $r804, $r806, $r810, $r812, $r813, $r815, r826, r828, r829, r831, r836, r837, r838, r839, r840, r842, r845, r852, r856, r867, r887;
        android.content.pm.PackageParser$Provider r11, r14, $r384, r871, r873;
        java.lang.String[] r12, $r91, $r169, $r170, $r478, $r482, $r483, $r485, $r486, $r502, $r507, $r536, $r538, $r539, $r540, $r541, $r552, r848, r872;
        com.android.server.pm.PackageManagerException $r25, $r35, $r135, $r458, $r466, $r477, $r490, $r546, $r561, $r581, $r603, $r674, $r694, $r729, $r755, $r782, $r818, r827;
        android.content.pm.ApplicationInfo $r26, $r27, $r45, $r51, $r54, $r57, $r58, $r59, $r68, $r69, $r70, $r71, $r75, $r81, $r82, $r83, $r84, $r88, $r89, $r90, $r94, $r95, $r97, $r99, $r103, $r106, $r112, $r113, $r149, $r152, $r162, $r167, $r168, $r173, $r174, $r216, $r250, $r304, $r306, $r328, $r329, $r341, $r343, $r362, $r367, $r405, $r451, $r452, $r454, $r455, $r467, $r469, $r470, $r480, $r481, $r492, $r498, $r503, $r505, $r512, $r520, $r523, $r527, $r528, $r533, $r537, $r543, $r544, $r548, $r550, $r559, $r560, $r570, $r571, $r573, $r580, $r584, $r587, $r589, $r598, $r607, $r642, $r649, $r686, $r706, $r716, $r722, $r727, $r728, $r797, $r798;
        android.content.ComponentName $r29, $r187, $r410, $r411, $r613, $r699, $r705, $r783;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, z61, z62, z63, z64, z65, z66, z67, z68;
        java.lang.StringBuilder $r34, $r36, $r37, $r39, $r79, $r86, $r87, $r188, $r200, $r201, $r204, $r205, $r208, $r209, $r210, $r212, $r221, $r224, $r226, $r227, $r240, $r242, $r244, $r245, $r248, $r249, $r254, $r255, $r257, $r266, $r269, $r270, $r271, $r273, $r274, $r275, $r278, $r279, $r286, $r288, $r290, $r292, $r296, $r299, $r300, $r303, $r313, $r318, $r325, $r333, $r346, $r350, $r366, $r377, $r378, $r379, $r403, $r404, $r407, $r408, $r412, $r414, $r415, $r419, $r423, $r424, $r426, $r428, $r430, $r433, $r434, $r436, $r437, $r438, $r463, $r464, $r465, $r473, $r474, $r475, $r476, $r488, $r489, $r510, $r513, $r515, $r517, $r518, $r519, $r522, $r525, $r526, $r529, $r547, $r554, $r555, $r556, $r558, $r564, $r565, $r566, $r567, $r568, $r569, $r572, $r574, $r575, $r578, $r579, $r582, $r590, $r591, $r592, $r593, $r594, $r595, $r596, $r599, $r602, $r604, $r605, $r608, $r609, $r611, $r612, $r630, $r632, $r633, $r634, $r636, $r638, $r639, $r641, $r644, $r646, $r663, $r664, $r665, $r667, $r668, $r669, $r670, $r673, $r677, $r678, $r679, $r680, $r683, $r688, $r689, $r690, $r692, $r693, $r723, $r724, $r732, $r734, $r736, $r737, $r738, $r742, $r743, $r747, $r748, $r753, $r754, $r756, $r762, $r763, $r766, $r767, $r770, $r771, $r772, $r777, $r779, $r788, $r789, $r790, $r792, $r794, $r796, $r801, $r803, $r805, $r807, $r809, $r811, $r814, $r816, $r821, r870, r874, r876, r878, r880, r883, r889;
        java.util.ArrayList $r48, $r72, $r111, $r116, $r117, $r118, $r119, $r130, $r132, $r133, $r134, $r154, $r157, $r158, $r192, $r293, $r314, $r331, $r345, $r365, $r445, $r459, $r460, $r462, $r494, $r495, $r496, $r617, $r618, $r628, $r629, $r653, $r654, $r658, r854;
        java.util.HashSet $r50, $r156, $r509, $r672, $r684;
        com.android.server.pm.Settings $r60, $r62, $r108, $r114, $r120, $r191, $r295, $r442, $r576, $r583, $r616, $r631, $r655, $r660, $r731;
        com.android.server.pm.PackageSettingBase $r64;
        android.content.pm.Signature[] $r65, $r696, $r759, $r760, $r817;
        com.android.server.pm.PackageSignatures $r66, $r695, $r758, $r764;
        com.android.server.pm.PackageKeySetData $r67;
        com.android.server.pm.UserManagerService $r92;
        java.lang.Object $r102, $r140, $r143, $r153, $r155, $r181, $r193, $r195, $r284, $r287, $r315, $r332, $r344, $r368, $r388, $r389, $r391, $r394, $r396, $r406, $r448, $r450, $r457, $r461, $r493, $r600, $r619, $r627, $r650, $r657, r851;
        byte $b21, $b27, $b45, $b47;
        android.util.ArrayMap $r122, $r385;
        android.util.ArraySet $r124, $r382, $r392, $r395;
        android.content.pm.InstrumentationInfo $r147, $r150, $r160, $r165, $r166, $r171, $r172, $r189;
        android.content.pm.PermissionInfo $r176, $r178, $r183, $r186, $r196, $r203, $r207, $r214, $r217, $r219, $r222, $r229, $r231, $r234, $r235, $r239, $r246, $r252, $r263, $r267, $r298, $r302;
        android.content.pm.PackageParser$PermissionGroup $r179, $r256, $r291, r881, r882;
        android.content.pm.PackageParser$Permission $r180, $r184, $r251, $r258, $r261, r884;
        com.android.server.pm.BasePermission $r236, r886, r888;
        android.content.pm.PermissionGroupInfo $r276, $r280, $r285, $r311, $r317, $r320, $r323;
        android.content.pm.ActivityInfo $r305, $r309, $r334, $r338, $r342, $r348, $r700, $r707, $r708, $r709, $r710, $r711, $r712, $r713, $r714, $r715, $r718, $r720;
        android.content.pm.ServiceInfo $r330, $r369, $r372;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r337, $r349;
        android.content.pm.ProviderInfo $r351, $r353, $r355, $r356, $r359, $r363, $r380, $r386, $r400, $r417, $r418, $r620, $r622;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r361;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r373;
        java.util.Set $r383;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry $r441;
        com.android.server.pm.Installer $r500, $r524, $r640;
        dalvik.system.VMRuntime $r506;
        android.content.pm.ResolveInfo $r701, $r702, $r703, $r704;
        java.lang.Class $r717;
        java.io.IOException $r775, $r822, r844, r849;
        java.lang.NullPointerException $r791, r868;
        android.system.ErrnoException $r802, r835;
        java.lang.IllegalArgumentException $r808, r869;
        android.system.StructStat r834;
        com.android.internal.content.NativeLibraryHelper$Handle r843, r846;
        int[] r850, r853;
        java.util.Iterator r861, r864, r866;
        android.content.pm.PackageCleanItem r862;
        com.android.server.pm.KeySetManagerService r863;
        java.util.Map$Entry r865;
        android.content.pm.PackageParser$Service r875;
        android.content.pm.PackageParser$Activity r877, r879;
        android.content.pm.PackageParser$Instrumentation r890;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 := @parameter4: android.os.UserHandle;

        $r21 = new java.io.File;

        $r22 = r1.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r22);

        r3 = $r21;

        $r27 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r28 = virtualinvoke $r27.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        if $r28 == null goto label001;

        $r26 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r30 = virtualinvoke $r26.<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>();

        if $r30 != null goto label002;

     label001:
        $r25 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r25.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-2, "Code and resource paths haven\'t been set correctly");

        throw $r25;

     label002:
        $i10 = i0 & 1;

        if $i10 == 0 goto label003;

        $r798 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i92 = $r798.<android.content.pm.ApplicationInfo: int flags>;

        $i91 = $i92 | 1;

        $r798.<android.content.pm.ApplicationInfo: int flags> = $i91;

        goto label004;

     label003:
        r1.<android.content.pm.PackageParser$Package: boolean coreApp> = 0;

     label004:
        $i9 = i0 & 128;

        if $i9 == 0 goto label005;

        $r797 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i89 = $r797.<android.content.pm.ApplicationInfo: int flags>;

        $i90 = $i89 | 1073741824;

        $r797.<android.content.pm.ApplicationInfo: int flags> = $i90;

     label005:
        $r29 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        if $r29 == null goto label006;

        $r783 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        $r784 = virtualinvoke $r783.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r785 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z60 = virtualinvoke $r784.<java.lang.String: boolean equals(java.lang.Object)>($r785);

        if $z60 == 0 goto label006;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setUpCustomResolverActivity(android.content.pm.PackageParser$Package)>(r1);

     label006:
        $r33 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z0 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 == 0 goto label013;

        $r725 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r725;

        entermonitor $r725;

     label007:
        $r727 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        if $r727 == null goto label008;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Core android package being redefined.  Skipping.");

        $r788 = new java.lang.StringBuilder;

        specialinvoke $r788.<java.lang.StringBuilder: void <init>()>();

        $r789 = virtualinvoke $r788.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r790 = virtualinvoke $r789.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r781 = virtualinvoke $r790.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r781);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        $r782 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r782.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-5, "Core android package being redefined.  Skipping.");

        throw $r782;

     label008:
        r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage> = r1;

        $i87 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        r1.<android.content.pm.PackageParser$Package: int mVersionCode> = $i87;

        $r728 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication> = $r728;

        $z57 = r0.<com.android.server.pm.PackageManagerService: boolean mResolverReplaced>;

        if $z57 != 0 goto label009;

        $r718 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r716 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r718.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r716;

        $r720 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r717 = class "com/android/internal/app/ResolverActivity";

        $r719 = virtualinvoke $r717.<java.lang.Class: java.lang.String getName()>();

        $r720.<android.content.pm.ActivityInfo: java.lang.String name> = $r719;

        $r708 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r722 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r721 = $r722.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r708.<android.content.pm.ActivityInfo: java.lang.String packageName> = $r721;

        $r709 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r709.<android.content.pm.ActivityInfo: java.lang.String processName> = "system:ui";

        $r710 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r710.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r711 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r711.<android.content.pm.ActivityInfo: int documentLaunchMode> = 3;

        $r712 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r712.<android.content.pm.ActivityInfo: int flags> = 32;

        $r713 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r713.<android.content.pm.ActivityInfo: int theme> = 16974975;

        $r714 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r714.<android.content.pm.ActivityInfo: boolean exported> = 1;

        $r715 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r715.<android.content.pm.ActivityInfo: boolean enabled> = 1;

        $r701 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r700 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r701.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r700;

        $r702 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r702.<android.content.pm.ResolveInfo: int priority> = 0;

        $r703 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r703.<android.content.pm.ResolveInfo: int preferredOrder> = 0;

        $r704 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r704.<android.content.pm.ResolveInfo: int match> = 0;

        $r705 = new android.content.ComponentName;

        $r706 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r787 = $r706.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r707 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r786 = $r707.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r705.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r787, $r786);

        r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName> = $r705;

     label009:
        exitmonitor r4;

     label010:
        goto label013;

     label011:
        $r799 := @caughtexception;

        r5 = $r799;

        exitmonitor r4;

     label012:
        throw r5;

     label013:
        $r32 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r31 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z1 = virtualinvoke $r32.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r31);

        if $z1 != 0 goto label014;

        $r40 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r41 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z2 = virtualinvoke $r40.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r41);

        if $z2 == 0 goto label015;

     label014:
        $r35 = new com.android.server.pm.PackageManagerException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application package ");

        $r38 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already installed.  Skipping duplicate.");

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-5, $r42);

        throw $r35;

     label015:
        $r46 = new java.io.File;

        $r45 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r44 = virtualinvoke $r45.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        specialinvoke $r46.<java.io.File: void <init>(java.lang.String)>($r44);

        r823 = $r46;

        $r43 = new java.io.File;

        $r51 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r52 = virtualinvoke $r51.<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>();

        specialinvoke $r43.<java.io.File: void <init>(java.lang.String)>($r52);

        r824 = $r43;

        r6 = null;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z3 != 0 goto label016;

        r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages> = null;

        r1.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage> = null;

        r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions> = null;

     label016:
        $r53 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r53;

        entermonitor $r53;

     label017:
        $r47 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        if $r47 == null goto label018;

        $r731 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r730 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        r6 = virtualinvoke $r731.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)>($r730, 0, 1);

        if r6 != null goto label018;

        $r729 = new com.android.server.pm.PackageManagerException;

        $r734 = new java.lang.StringBuilder;

        specialinvoke $r734.<java.lang.StringBuilder: void <init>()>();

        $r732 = virtualinvoke $r734.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating application package ");

        $r733 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r724 = virtualinvoke $r732.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r733);

        $r723 = virtualinvoke $r724.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for shared user failed");

        $r726 = virtualinvoke $r723.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r729.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-4, $r726);

        throw $r729;

     label018:
        r8 = null;

        r9 = null;

        $r48 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        if $r48 == null goto label023;

        $r660 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r656 = $r660.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r661 = r1.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage>;

        $r657 = virtualinvoke $r656.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r661);

        r10 = (java.lang.String) $r657;

        $r658 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $z55 = virtualinvoke $r658.<java.util.ArrayList: boolean contains(java.lang.Object)>(r10);

        if $z55 == 0 goto label019;

        r9 = r1.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage>;

        $r739 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z58 = virtualinvoke $r739.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z58 != 0 goto label023;

        virtualinvoke r1.<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>(r10);

        goto label023;

     label019:
        $r653 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $i84 = virtualinvoke $r653.<java.util.ArrayList: int size()>();

        i3 = $i84 - 1;

     label020:
        if i3 < 0 goto label023;

        $r655 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r654 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $r650 = virtualinvoke $r654.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r651 = (java.lang.String) $r650;

        $r652 = virtualinvoke $r655.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>($r651);

        r8 = $r652;

        if $r652 == null goto label022;

        $z54 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean verifyPackageUpdateLPr(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r8, r1);

        if $z54 != 0 goto label021;

        r8 = null;

        goto label022;

     label021:
        $r752 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r752 == null goto label023;

        $r751 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r749 = $r751.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r750 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        $z59 = virtualinvoke $r749.<java.lang.String: boolean equals(java.lang.Object)>($r750);

        if $z59 != 0 goto label023;

        $r754 = new java.lang.StringBuilder;

        specialinvoke $r754.<java.lang.StringBuilder: void <init>()>();

        $r753 = virtualinvoke $r754.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to migrate data from ");

        $r744 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r743 = virtualinvoke $r753.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r744);

        $r742 = virtualinvoke $r743.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r741 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r748 = virtualinvoke $r742.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r741);

        $r747 = virtualinvoke $r748.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": old uid ");

        $r746 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r745 = $r746.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r737 = virtualinvoke $r747.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r745);

        $r738 = virtualinvoke $r737.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" differs from ");

        $r735 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        $r736 = virtualinvoke $r738.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r735);

        $r740 = virtualinvoke $r736.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r740);

        r8 = null;

     label022:
        i3 = i3 + -1;

        goto label020;

     label023:
        $r50 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages>;

        $r49 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z4 = virtualinvoke $r50.<java.util.HashSet: boolean contains(java.lang.Object)>($r49);

        if $z4 == 0 goto label024;

        $r668 = new java.lang.StringBuilder;

        specialinvoke $r668.<java.lang.StringBuilder: void <init>()>();

        $r663 = virtualinvoke $r668.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r662 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r665 = virtualinvoke $r663.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r662);

        $r664 = virtualinvoke $r665.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was transferred to another, but its .apk remains");

        $r659 = virtualinvoke $r664.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r659);

     label024:
        $r62 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r57 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r63 = $r57.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r58 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r56 = $r58.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $r59 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r55 = $r59.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        $r54 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r54.<android.content.pm.ApplicationInfo: int flags>;

        r825 = virtualinvoke $r62.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,android.os.UserHandle,boolean)>(r1, r8, r9, r6, r823, r824, $r63, $r56, $r55, $i11, r2, 0);

        if r825 != null goto label025;

        $r674 = new com.android.server.pm.PackageManagerException;

        $r673 = new java.lang.StringBuilder;

        specialinvoke $r673.<java.lang.StringBuilder: void <init>()>();

        $r669 = virtualinvoke $r673.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating application package ");

        $r671 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r670 = virtualinvoke $r669.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r671);

        $r667 = virtualinvoke $r670.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r666 = virtualinvoke $r667.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r674.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-4, $r666);

        throw $r674;

     label025:
        $r64 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSettingBase origPackage>;

        if $r64 == null goto label026;

        $r682 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r1.<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>($r682);

        $r683 = new java.lang.StringBuilder;

        specialinvoke $r683.<java.lang.StringBuilder: void <init>()>();

        $r680 = virtualinvoke $r683.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New package ");

        $r681 = r825.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $r678 = virtualinvoke $r680.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r681);

        $r679 = virtualinvoke $r678.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" renamed to replace old package ");

        $r676 = r825.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r677 = virtualinvoke $r679.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r676);

        r826 = virtualinvoke $r677.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r826);

        $r672 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages>;

        $r675 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r672.<java.util.HashSet: boolean add(java.lang.Object)>($r675);

        r825.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSettingBase origPackage> = null;

     label026:
        if r9 == null goto label027;

        $r684 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages>;

        $r685 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r684.<java.util.HashSet: boolean add(java.lang.Object)>($r685);

     label027:
        $r60 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r61 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z5 = virtualinvoke $r60.<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>($r61);

        if $z5 == 0 goto label028;

        $r686 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i86 = $r686.<android.content.pm.ApplicationInfo: int flags>;

        $i85 = $i86 | 128;

        $r686.<android.content.pm.ApplicationInfo: int flags> = $i85;

     label028:
        $i12 = i0 & 64;

        if $i12 != 0 goto label029;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSharedLibrariesLPw(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r1, null);

     label029:
        $z7 = r0.<com.android.server.pm.PackageManagerService: boolean mFoundPolicyFile>;

        if $z7 == 0 goto label030;

        staticinvoke <com.android.server.pm.SELinuxMMAC: boolean assignSeinfoValue(android.content.pm.PackageParser$Package)>(r1);

     label030:
        $r68 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = r825.<com.android.server.pm.PackageSetting: int appId>;

        $r68.<android.content.pm.ApplicationInfo: int uid> = $i14;

        r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras> = r825;

        $r67 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        $z6 = virtualinvoke $r67.<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>();

        if $z6 == 0 goto label031;

        $r697 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r697 == null goto label036;

     label031:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void verifySignaturesLP(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r825, r1);

        $r66 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r65 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r66.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures> = $r65;

     label032:
        goto label038;

     label033:
        $r818 := @caughtexception;

        r827 = $r818;

        $i93 = i0 & 64;

        if $i93 != 0 goto label034;

        throw r827;

     label034:
        $r764 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r817 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r764.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures> = $r817;

        $r765 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r765 == null goto label035;

        $r757 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r758 = $r757.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r760 = $r758.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r759 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i88 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r760, $r759);

        if $i88 == 0 goto label035;

        $r755 = new com.android.server.pm.PackageManagerException;

        $r756 = new java.lang.StringBuilder;

        specialinvoke $r756.<java.lang.StringBuilder: void <init>()>();

        $r777 = virtualinvoke $r756.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature mismatch for shared user : ");

        $r776 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r779 = virtualinvoke $r777.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r776);

        $r778 = virtualinvoke $r779.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r755.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-104, $r778);

        throw $r755;

     label035:
        $r766 = new java.lang.StringBuilder;

        specialinvoke $r766.<java.lang.StringBuilder: void <init>()>();

        $r767 = virtualinvoke $r766.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r761 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r762 = virtualinvoke $r767.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r761);

        $r763 = virtualinvoke $r762.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signature changed; retaining data.");

        r828 = virtualinvoke $r763.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r828);

        goto label038;

     label036:
        $z56 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean checkUpgradeKeySetLP(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r825, r1);

        if $z56 != 0 goto label037;

        $r694 = new com.android.server.pm.PackageManagerException;

        $r693 = new java.lang.StringBuilder;

        specialinvoke $r693.<java.lang.StringBuilder: void <init>()>();

        $r692 = virtualinvoke $r693.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r691 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r690 = virtualinvoke $r692.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r691);

        $r689 = virtualinvoke $r690.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" upgrade keys do not match the ");

        $r688 = virtualinvoke $r689.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("previously installed version");

        $r687 = virtualinvoke $r688.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r694.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-7, $r687);

        throw $r694;

     label037:
        $r695 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r696 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r695.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures> = $r696;

     label038:
        $i13 = i1 & 16;

        if $i13 == 0 goto label045;

        $r617 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i94 = virtualinvoke $r617.<java.util.ArrayList: int size()>();

        i95 = 0;

     label039:
        if i95 >= i94 goto label045;

        $r618 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r619 = virtualinvoke $r618.<java.util.ArrayList: java.lang.Object get(int)>(i95);

        r11 = (android.content.pm.PackageParser$Provider) $r619;

        $r620 = r11.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r621 = $r620.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r621 == null goto label044;

        $r622 = r11.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r623 = $r622.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r12 = virtualinvoke $r623.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i4 = 0;

     label040:
        $i81 = lengthof r12;

        if i4 >= $i81 goto label044;

        $r625 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r624 = r12[i4];

        $z51 = virtualinvoke $r625.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r624);

        if $z51 == 0 goto label043;

        $r601 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r626 = r12[i4];

        $r600 = virtualinvoke $r601.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r626);

        r14 = (android.content.pm.PackageParser$Provider) $r600;

        if r14 == null goto label041;

        $r613 = virtualinvoke r14.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        if $r613 == null goto label041;

        $r699 = virtualinvoke r14.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        $r698 = virtualinvoke $r699.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label042;

     label041:
        $r698 = "?";

     label042:
        r13 = $r698;

        $r603 = new com.android.server.pm.PackageManagerException;

        $r602 = new java.lang.StringBuilder;

        specialinvoke $r602.<java.lang.StringBuilder: void <init>()>();

        $r604 = virtualinvoke $r602.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t install because provider name ");

        $r606 = r12[i4];

        $r605 = virtualinvoke $r604.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r606);

        $r608 = virtualinvoke $r605.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in package ");

        $r607 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r610 = $r607.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r609 = virtualinvoke $r608.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r610);

        $r612 = virtualinvoke $r609.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is already used by ");

        $r611 = virtualinvoke $r612.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r614 = virtualinvoke $r611.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r603.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-13, $r614);

        throw $r603;

     label043:
        i4 = i4 + 1;

        goto label040;

     label044:
        i95 = i95 + 1;

        goto label039;

     label045:
        $r72 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        if $r72 == null goto label048;

        $r629 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        $i82 = virtualinvoke $r629.<java.util.ArrayList: int size()>();

        i96 = $i82 - 1;

     label046:
        if i96 < 0 goto label048;

        $r628 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        $r627 = virtualinvoke $r628.<java.util.ArrayList: java.lang.Object get(int)>(i96);

        r829 = (java.lang.String) $r627;

        $r631 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r830 = virtualinvoke $r631.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>(r829);

        if r830 == null goto label047;

        $z52 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean verifyPackageUpdateLPr(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r830, r1);

        if $z52 == 0 goto label047;

        $r630 = new java.lang.StringBuilder;

        specialinvoke $r630.<java.lang.StringBuilder: void <init>()>();

        $r634 = virtualinvoke $r630.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adopting permissions from ");

        $r633 = virtualinvoke $r634.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r829);

        $r632 = virtualinvoke $r633.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r637 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r636 = virtualinvoke $r632.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r637);

        $r635 = virtualinvoke $r636.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r635);

        $r616 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r615 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r616.<com.android.server.pm.Settings: void transferPermissionsLPw(java.lang.String,java.lang.String)>(r829, $r615);

     label047:
        i96 = i96 + -1;

        goto label046;

     label048:
        exitmonitor r7;

     label049:
        goto label052;

     label050:
        $r819 := @caughtexception;

        r16 = $r819;

        exitmonitor r7;

     label051:
        throw r16;

     label052:
        r831 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        l97 = virtualinvoke r3.<java.io.File: long lastModified()>();

        $i16 = i1 & 4;

        if $i16 == 0 goto label053;

        $z53 = 1;

        goto label054;

     label053:
        $z53 = 0;

     label054:
        z61 = $z53;

        $r75 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r70 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r78 = $r70.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r71 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r77 = $r71.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r69 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r69.<android.content.pm.ApplicationInfo: int uid>;

        $r76 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r78, $r77, $i15);

        $r75.<android.content.pm.ApplicationInfo: java.lang.String processName> = $r76;

        $r73 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        if $r73 != r1 goto label055;

        $r645 = new java.io.File;

        $r648 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r645.<java.io.File: void <init>(java.io.File,java.lang.String)>($r648, "system");

        r832 = $r645;

        $r649 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r647 = virtualinvoke r832.<java.io.File: java.lang.String getPath()>();

        $r649.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r647;

        goto label079;

     label055:
        $r74 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r833 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getDataPathForPackage(java.lang.String,int)>($r74, 0);

        z62 = 0;

        $z8 = virtualinvoke r833.<java.io.File: boolean exists()>();

        if $z8 == 0 goto label075;

        i98 = 0;

     label056:
        $r521 = virtualinvoke r833.<java.io.File: java.lang.String getPath()>();

        r834 = staticinvoke <android.system.Os: android.system.StructStat stat(java.lang.String)>($r521);

        i98 = r834.<android.system.StructStat: int st_uid>;

     label057:
        goto label059;

     label058:
        $r802 := @caughtexception;

        r835 = $r802;

        $r801 = new java.lang.StringBuilder;

        specialinvoke $r801.<java.lang.StringBuilder: void <init>()>();

        $r805 = virtualinvoke $r801.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t stat path ");

        $r806 = virtualinvoke r833.<java.io.File: java.lang.String getPath()>();

        $r803 = virtualinvoke $r805.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r806);

        $r804 = virtualinvoke $r803.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r804, r835);

     label059:
        $r520 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i69 = $r520.<android.content.pm.ApplicationInfo: int uid>;

        if i98 == $i69 goto label073;

        z63 = 0;

        if i98 != 0 goto label060;

        $r640 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r560 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i74 = $r560.<android.content.pm.ApplicationInfo: int uid>;

        $r559 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i75 = $r559.<android.content.pm.ApplicationInfo: int uid>;

        i99 = virtualinvoke $r640.<com.android.server.pm.Installer: int fixUid(java.lang.String,int,int)>(r831, $i74, $i75);

        if i99 < 0 goto label060;

        z63 = 1;

        $r638 = new java.lang.StringBuilder;

        specialinvoke $r638.<java.lang.StringBuilder: void <init>()>();

        $r639 = virtualinvoke $r638.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r643 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r644 = virtualinvoke $r639.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r643);

        $r641 = virtualinvoke $r644.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unexpectedly changed to uid 0; recovered to ");

        $r642 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i83 = $r642.<android.content.pm.ApplicationInfo: int uid>;

        $r646 = virtualinvoke $r641.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i83);

        r836 = virtualinvoke $r646.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r836);

     label060:
        if z63 != 0 goto label066;

        $i80 = i0 & 1;

        if $i80 != 0 goto label061;

        $i76 = i1 & 256;

        if $i76 == 0 goto label066;

     label061:
        i100 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>(r831);

        if i100 < 0 goto label064;

        $i77 = i0 & 1;

        if $i77 == 0 goto label062;

        $r562 = "System package ";

        goto label063;

     label062:
        $r562 = "Third party package ";

     label063:
        r837 = $r562;

        $r567 = new java.lang.StringBuilder;

        specialinvoke $r567.<java.lang.StringBuilder: void <init>()>();

        $r568 = virtualinvoke $r567.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r837);

        $r563 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r564 = virtualinvoke $r568.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r563);

        $r565 = virtualinvoke $r564.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has changed from uid: ");

        $r566 = virtualinvoke $r565.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i98);

        $r572 = virtualinvoke $r566.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r573 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i78 = $r573.<android.content.pm.ApplicationInfo: int uid>;

        $r574 = virtualinvoke $r572.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i78);

        $r569 = virtualinvoke $r574.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; old data erased");

        r838 = virtualinvoke $r569.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r838);

        z63 = 1;

        $r570 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i73 = $r570.<android.content.pm.ApplicationInfo: int uid>;

        $r571 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r557 = $r571.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        i101 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int createDataDirsLI(java.lang.String,int,java.lang.String)>(r831, $i73, $r557);

        if i101 != -1 goto label064;

        $r558 = new java.lang.StringBuilder;

        specialinvoke $r558.<java.lang.StringBuilder: void <init>()>();

        $r554 = virtualinvoke $r558.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r837);

        $r553 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r556 = virtualinvoke $r554.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r553);

        $r555 = virtualinvoke $r556.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not have data directory re-created after delete.");

        r839 = virtualinvoke $r555.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r839);

        $r561 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r561.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-4, r839);

        throw $r561;

     label064:
        if z63 != 0 goto label065;

        r0.<com.android.server.pm.PackageManagerService: boolean mHasSystemUidErrors> = 1;

     label065:
        goto label067;

     label066:
        if z63 != 0 goto label067;

        $r581 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r581.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-24, "scanPackageLI");

        throw $r581;

     label067:
        if z63 != 0 goto label073;

        $r523 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r522 = new java.lang.StringBuilder;

        specialinvoke $r522.<java.lang.StringBuilder: void <init>()>();

        $r526 = virtualinvoke $r522.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mismatched_uid/settings_");

        $r527 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i70 = $r527.<android.content.pm.ApplicationInfo: int uid>;

        $r525 = virtualinvoke $r526.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i70);

        $r590 = virtualinvoke $r525.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/fs_");

        $r591 = virtualinvoke $r590.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i98);

        $r588 = virtualinvoke $r591.<java.lang.StringBuilder: java.lang.String toString()>();

        $r523.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r588;

        $r587 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r589 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r586 = $r589.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r587.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r586;

        $r598 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r584 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r585 = $r584.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r598.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir> = $r585;

        $r599 = new java.lang.StringBuilder;

        specialinvoke $r599.<java.lang.StringBuilder: void <init>()>();

        $r596 = virtualinvoke $r599.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r597 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r594 = virtualinvoke $r596.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r597);

        $r595 = virtualinvoke $r594.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatched uid: ");

        $r592 = virtualinvoke $r595.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i98);

        $r593 = virtualinvoke $r592.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on disk, ");

        $r580 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i79 = $r580.<android.content.pm.ApplicationInfo: int uid>;

        $r579 = virtualinvoke $r593.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i79);

        $r578 = virtualinvoke $r579.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in settings");

        r840 = virtualinvoke $r578.<java.lang.StringBuilder: java.lang.String toString()>();

        $r577 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r841 = $r577;

        entermonitor $r577;

     label068:
        $r576 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r575 = $r576.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r575.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r840);

        $r583 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r582 = $r583.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r582.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        z62 = 1;

        $z50 = r825.<com.android.server.pm.PackageSetting: boolean uidError>;

        if $z50 != 0 goto label069;

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, r840);

     label069:
        exitmonitor r841;

     label070:
        goto label073;

     label071:
        $r773 := @caughtexception;

        r15 = $r773;

        exitmonitor r841;

     label072:
        throw r15;

     label073:
        $r512 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r511 = virtualinvoke r833.<java.io.File: java.lang.String getPath()>();

        $r512.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r511;

        $z44 = r0.<com.android.server.pm.PackageManagerService: boolean mShouldRestoreconData>;

        if $z44 == 0 goto label074;

        $r510 = new java.lang.StringBuilder;

        specialinvoke $r510.<java.lang.StringBuilder: void <init>()>();

        $r515 = virtualinvoke $r510.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELinux relabeling of ");

        $r514 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r513 = virtualinvoke $r515.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r514);

        $r529 = virtualinvoke $r513.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" issued.");

        $r530 = virtualinvoke $r529.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r530);

        $r524 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r532 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r528 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r531 = $r528.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        $r533 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i71 = $r533.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r524.<com.android.server.pm.Installer: boolean restoreconData(java.lang.String,java.lang.String,int)>($r532, $r531, $i71);

     label074:
        goto label078;

     label075:
        $r82 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r82.<android.content.pm.ApplicationInfo: int uid>;

        $r81 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r80 = $r81.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        i102 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int createDataDirsLI(java.lang.String,int,java.lang.String)>(r831, $i17, $r80);

        if i102 >= 0 goto label076;

        $r546 = new com.android.server.pm.PackageManagerException;

        $r547 = new java.lang.StringBuilder;

        specialinvoke $r547.<java.lang.StringBuilder: void <init>()>();

        $r519 = virtualinvoke $r547.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create data dirs [errorCode=");

        $r518 = virtualinvoke $r519.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i102);

        $r517 = virtualinvoke $r518.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r516 = virtualinvoke $r517.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r546.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-4, $r516);

        throw $r546;

     label076:
        $z9 = virtualinvoke r833.<java.io.File: boolean exists()>();

        if $z9 == 0 goto label077;

        $r544 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r545 = virtualinvoke r833.<java.io.File: java.lang.String getPath()>();

        $r544.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r545;

        goto label078;

     label077:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create data directory: ");

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r833);

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r85);

        $r84 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r84.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = null;

     label078:
        r825.<com.android.server.pm.PackageSetting: boolean uidError> = z62;

     label079:
        virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r83 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke $r83.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        $r93 = r1.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride>;

        r842 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String deriveAbiOverride(java.lang.String,com.android.server.pm.PackageSetting)>($r93, r825);

        $z12 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z12 == 0 goto label087;

        $z47 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z47 != 0 goto label087;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setBundledAppAbisAndRoots(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting)>(r1, r825);

        $r548 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r549 = $r548.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r549 != null goto label086;

        $r550 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r551 = $r550.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r551 != null goto label086;

        $r552 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $i72 = lengthof $r552;

        if $i72 <= 0 goto label086;

        r843 = null;

     label080:
        r843 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(java.io.File)>(r3);

        $z49 = staticinvoke <com.android.internal.content.NativeLibraryHelper: boolean hasRenderscriptBitcode(com.android.internal.content.NativeLibraryHelper$Handle)>(r843);

        if $z49 == 0 goto label081;

        $r543 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r541 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r542 = $r541[0];

        $r543.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r542;

     label081:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r843);

        goto label086;

     label082:
        $r775 := @caughtexception;

        r844 = $r775;

        $r770 = new java.lang.StringBuilder;

        specialinvoke $r770.<java.lang.StringBuilder: void <init>()>();

        $r772 = virtualinvoke $r770.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error scanning system app : ");

        $r771 = virtualinvoke $r772.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r844);

        $r768 = virtualinvoke $r771.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r768);

     label083:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r843);

        goto label086;

     label084:
        $r800 := @caughtexception;

        r17 = $r800;

     label085:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r843);

        throw r17;

     label086:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setNativeLibraryPaths(android.content.pm.PackageParser$Package)>(r1);

        goto label122;

     label087:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setNativeLibraryPaths(android.content.pm.PackageParser$Package)>(r1);

        $z11 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z11 != 0 goto label088;

        $z46 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z46 == 0 goto label089;

     label088:
        $z48 = 1;

        goto label090;

     label089:
        $z48 = 0;

     label090:
        z64 = $z48;

        $r95 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r845 = $r95.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r94 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        z65 = $r94.<android.content.pm.ApplicationInfo: boolean nativeLibraryRootRequiresIsa>;

        r846 = null;

     label091:
        r846 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(java.io.File)>(r3);

        $r96 = new java.io.File;

        specialinvoke $r96.<java.io.File: void <init>(java.lang.String)>(r845);

        r847 = $r96;

        $r89 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r89.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = null;

        $r88 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r88.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = null;

        $r90 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z10 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isMultiArch(android.content.pm.ApplicationInfo)>($r90);

        if $z10 == 0 goto label100;

        $r484 = r1.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride>;

        if $r484 == null goto label092;

        $r535 = "-";

        $r534 = r1.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride>;

        $z45 = virtualinvoke $r535.<java.lang.String: boolean equals(java.lang.Object)>($r534);

        if $z45 != 0 goto label092;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Ignoring abiOverride for multi arch application.");

     label092:
        i5 = -114;

        i6 = -114;

        $r485 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $i62 = lengthof $r485;

        if $i62 <= 0 goto label094;

        if z64 == 0 goto label093;

        $r540 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        i5 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int findSupportedAbi(com.android.internal.content.NativeLibraryHelper$Handle,java.lang.String[])>(r846, $r540);

        goto label094;

     label093:
        $r539 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        i5 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesForSupportedAbi(com.android.internal.content.NativeLibraryHelper$Handle,java.io.File,java.lang.String[],boolean)>(r846, r847, $r539, z65);

     label094:
        staticinvoke <com.android.server.pm.PackageManagerService: void maybeThrowExceptionForMultiArchCopy(java.lang.String,int)>("Error unpackaging 32 bit native libs for multiarch app.", i5);

        $r483 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $i61 = lengthof $r483;

        if $i61 <= 0 goto label096;

        if z64 == 0 goto label095;

        $r538 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        i6 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int findSupportedAbi(com.android.internal.content.NativeLibraryHelper$Handle,java.lang.String[])>(r846, $r538);

        goto label096;

     label095:
        $r536 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        i6 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesForSupportedAbi(com.android.internal.content.NativeLibraryHelper$Handle,java.io.File,java.lang.String[],boolean)>(r846, r847, $r536, z65);

     label096:
        staticinvoke <com.android.server.pm.PackageManagerService: void maybeThrowExceptionForMultiArchCopy(java.lang.String,int)>("Error unpackaging 64 bit native libs for multiarch app.", i6);

        if i6 < 0 goto label097;

        $r537 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r478 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r479 = $r478[i6];

        $r537.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r479;

     label097:
        if i5 < 0 goto label099;

        $r482 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        r18 = $r482[i5];

        if i6 < 0 goto label098;

        $r481 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r481.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = r18;

        goto label099;

     label098:
        $r480 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r480.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = r18;

     label099:
        goto label109;

     label100:
        if r842 == null goto label101;

        $r486 = newarray (java.lang.String)[1];

        $r486[0] = r842;

        goto label102;

     label101:
        $r486 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

     label102:
        r848 = $r486;

        z66 = 0;

        $r91 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $i18 = lengthof $r91;

        if $i18 <= 0 goto label103;

        if r842 != null goto label103;

        $z37 = staticinvoke <com.android.internal.content.NativeLibraryHelper: boolean hasRenderscriptBitcode(com.android.internal.content.NativeLibraryHelper$Handle)>(r846);

        if $z37 == 0 goto label103;

        r848 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        z66 = 1;

     label103:
        if z64 == 0 goto label104;

        i103 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int findSupportedAbi(com.android.internal.content.NativeLibraryHelper$Handle,java.lang.String[])>(r846, r848);

        goto label105;

     label104:
        i103 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesForSupportedAbi(com.android.internal.content.NativeLibraryHelper$Handle,java.io.File,java.lang.String[],boolean)>(r846, r847, r848, z65);

     label105:
        if i103 >= 0 goto label106;

        if i103 == -114 goto label106;

        $r466 = new com.android.server.pm.PackageManagerException;

        $r465 = new java.lang.StringBuilder;

        specialinvoke $r465.<java.lang.StringBuilder: void <init>()>();

        $r488 = virtualinvoke $r465.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error unpackaging native libs for app, errorCode=");

        $r489 = virtualinvoke $r488.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i103);

        $r487 = virtualinvoke $r489.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r466.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-110, $r487);

        throw $r466;

     label106:
        if i103 < 0 goto label107;

        $r467 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r468 = r848[i103];

        $r467.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r468;

        goto label109;

     label107:
        if i103 != -114 goto label108;

        if r842 == null goto label108;

        $r469 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r469.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = r842;

        goto label109;

     label108:
        if z66 == 0 goto label109;

        $r470 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r471 = r848[0];

        $r470.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r471;

     label109:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r846);

        goto label114;

     label110:
        $r822 := @caughtexception;

        r849 = $r822;

        $r821 = new java.lang.StringBuilder;

        specialinvoke $r821.<java.lang.StringBuilder: void <init>()>();

        $r816 = virtualinvoke $r821.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get canonical file ");

        $r815 = virtualinvoke r849.<java.io.IOException: java.lang.String toString()>();

        $r814 = virtualinvoke $r816.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r815);

        $r813 = virtualinvoke $r814.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r813);

     label111:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r846);

        goto label114;

     label112:
        $r774 := @caughtexception;

        r19 = $r774;

     label113:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r846);

        throw r19;

     label114:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setNativeLibraryPaths(android.content.pm.PackageParser$Package)>(r1);

        $r92 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r850 = virtualinvoke $r92.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r102 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r851 = $r102;

        entermonitor $r102;

     label115:
        $r103 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r104 = $r103.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r104 == null goto label118;

        $r503 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r504 = $r503.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $z41 = staticinvoke <dalvik.system.VMRuntime: boolean is64BitAbi(java.lang.String)>($r504);

        if $z41 != 0 goto label118;

        $r498 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r852 = $r498.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        r853 = r850;

        i104 = lengthof r853;

        i7 = 0;

     label116:
        if i7 >= i104 goto label118;

        i8 = r853[i7];

        $r500 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r499 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $i60 = virtualinvoke $r500.<com.android.server.pm.Installer: int linkNativeLibraryDirectory(java.lang.String,java.lang.String,int)>($r499, r852, i8);

        if $i60 >= 0 goto label117;

        $r477 = new com.android.server.pm.PackageManagerException;

        $r476 = new java.lang.StringBuilder;

        specialinvoke $r476.<java.lang.StringBuilder: void <init>()>();

        $r475 = virtualinvoke $r476.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed linking native library dir (user=");

        $r474 = virtualinvoke $r475.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r473 = virtualinvoke $r474.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r472 = virtualinvoke $r473.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r477.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-110, $r472);

        throw $r477;

     label117:
        i7 = i7 + 1;

        goto label116;

     label118:
        exitmonitor r851;

     label119:
        goto label122;

     label120:
        $r780 := @caughtexception;

        r20 = $r780;

        exitmonitor r851;

     label121:
        throw r20;

     label122:
        $r105 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        if $r105 != r1 goto label125;

        $r505 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r506 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $z42 = virtualinvoke $r506.<dalvik.system.VMRuntime: boolean is64Bit()>();

        if $z42 == 0 goto label123;

        $r502 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r501 = $r502[0];

        goto label124;

     label123:
        $r507 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r501 = $r507[0];

     label124:
        $r505.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r501;

     label125:
        $r106 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r107 = $r106.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        r825.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = $r107;

        $r97 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r98 = $r97.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        r825.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = $r98;

        r825.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString> = r842;

        r1.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride> = r842;

        $r99 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r100 = $r99.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        r825.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = $r100;

        $i19 = i1 & 256;

        if $i19 != 0 goto label128;

        $r491 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r491 == null goto label128;

        $r508 = r825.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r509 = $r508.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        $i68 = i1 & 128;

        if $i68 == 0 goto label126;

        $z43 = 1;

        goto label127;

     label126:
        $z43 = 0;

     label127:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void adjustCpuAbisForSharedUserLPw(java.util.Set,android.content.pm.PackageParser$Package,boolean,boolean)>($r509, r1, z61, $z43);

     label128:
        $i20 = i1 & 2;

        if $i20 != 0 goto label131;

        $i65 = i1 & 128;

        if $i65 == 0 goto label129;

        $z38 = 1;

        goto label130;

     label129:
        $z38 = 0;

     label130:
        $i63 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,boolean)>(r1, null, z61, $z38, 0);

        if $i63 != -1 goto label131;

        $r490 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r490.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-11, "scanPackageLI");

        throw $r490;

     label131:
        $z13 = r0.<com.android.server.pm.PackageManagerService: boolean mFactoryTest>;

        if $z13 == 0 goto label132;

        $r494 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $z40 = virtualinvoke $r494.<java.util.ArrayList: boolean contains(java.lang.Object)>("android.permission.FACTORY_TEST");

        if $z40 == 0 goto label132;

        $r492 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i64 = $r492.<android.content.pm.ApplicationInfo: int flags>;

        $i66 = $i64 | 16;

        $r492.<android.content.pm.ApplicationInfo: int flags> = $i66;

     label132:
        r854 = null;

        $r101 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r855 = $r101;

        entermonitor $r101;

     label133:
        $r112 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i23 = $r112.<android.content.pm.ApplicationInfo: int flags>;

        $i22 = $i23 & 1;

        if $i22 == 0 goto label144;

        $r459 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        if $r459 == null goto label144;

        i105 = 0;

     label134:
        $r460 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i58 = virtualinvoke $r460.<java.util.ArrayList: int size()>();

        if i105 >= $i58 goto label143;

        $r462 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r461 = virtualinvoke $r462.<java.util.ArrayList: java.lang.Object get(int)>(i105);

        r856 = (java.lang.String) $r461;

        z67 = 0;

        $z36 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z36 == 0 goto label138;

        $r442 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r443 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r857 = virtualinvoke $r442.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r443);

        $r447 = r857.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r447 == null goto label137;

        $r446 = r857.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r445 = $r446.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        if $r445 == null goto label137;

        i106 = 0;

     label135:
        $r444 = r857.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r495 = $r444.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i67 = virtualinvoke $r495.<java.util.ArrayList: int size()>();

        if i106 >= $i67 goto label137;

        $r497 = r857.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r496 = $r497.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r493 = virtualinvoke $r496.<java.util.ArrayList: java.lang.Object get(int)>(i106);

        $z39 = virtualinvoke r856.<java.lang.String: boolean equals(java.lang.Object)>($r493);

        if $z39 == 0 goto label136;

        z67 = 1;

        goto label137;

     label136:
        i106 = i106 + 1;

        goto label135;

     label137:
        goto label139;

     label138:
        z67 = 1;

     label139:
        if z67 == 0 goto label141;

        $r427 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $z33 = virtualinvoke $r427.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r856);

        if $z33 != 0 goto label140;

        $r439 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r441 = new com.android.server.pm.PackageManagerService$SharedLibraryEntry;

        $r440 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke $r441.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: void <init>(java.lang.String,java.lang.String)>(null, $r440);

        virtualinvoke $r439.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r856, $r441);

        goto label142;

     label140:
        $r431 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z32 = virtualinvoke r856.<java.lang.String: boolean equals(java.lang.Object)>($r431);

        if $z32 != 0 goto label142;

        $r430 = new java.lang.StringBuilder;

        specialinvoke $r430.<java.lang.StringBuilder: void <init>()>();

        $r434 = virtualinvoke $r430.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r432 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r433 = virtualinvoke $r434.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r432);

        $r438 = virtualinvoke $r433.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" library ");

        $r437 = virtualinvoke $r438.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r856);

        $r436 = virtualinvoke $r437.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists; skipping");

        $r435 = virtualinvoke $r436.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r435);

        goto label142;

     label141:
        $r463 = new java.lang.StringBuilder;

        specialinvoke $r463.<java.lang.StringBuilder: void <init>()>();

        $r464 = virtualinvoke $r463.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r425 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r426 = virtualinvoke $r464.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r425);

        $r423 = virtualinvoke $r426.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declares lib ");

        $r424 = virtualinvoke $r423.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r856);

        $r428 = virtualinvoke $r424.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not declared on system image; skipping");

        $r429 = virtualinvoke $r428.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r429);

     label142:
        i105 = i105 + 1;

        goto label134;

     label143:
        $i59 = i1 & 256;

        if $i59 != 0 goto label144;

        r854 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList updateAllSharedLibrariesLPw(android.content.pm.PackageParser$Package)>(r1);

     label144:
        exitmonitor r855;

     label145:
        goto label148;

     label146:
        $r769 := @caughtexception;

        r23 = $r769;

        exitmonitor r855;

     label147:
        throw r23;

     label148:
        if r854 == null goto label153;

        $i54 = i1 & 2;

        if $i54 != 0 goto label153;

        i107 = 0;

     label149:
        $i55 = virtualinvoke r854.<java.util.ArrayList: int size()>();

        if i107 >= $i55 goto label153;

        $r457 = virtualinvoke r854.<java.util.ArrayList: java.lang.Object get(int)>(i107);

        r858 = (android.content.pm.PackageParser$Package) $r457;

        $i56 = i1 & 128;

        if $i56 == 0 goto label150;

        $z35 = 1;

        goto label151;

     label150:
        $z35 = 0;

     label151:
        $i57 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,boolean)>(r858, null, z61, $z35, 0);

        if $i57 != -1 goto label152;

        $r458 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r458.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-11, "scanPackageLI failed to dexopt clientLibPkgs");

        throw $r458;

     label152:
        i107 = i107 + 1;

        goto label149;

     label153:
        $i24 = i1 & 2048;

        if $i24 == 0 goto label154;

        $r454 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r456 = $r454.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r455 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i53 = $r455.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>($r456, $i53, "update pkg");

     label154:
        if r854 == null goto label156;

        i108 = 0;

     label155:
        $i51 = virtualinvoke r854.<java.util.ArrayList: int size()>();

        if i108 >= $i51 goto label156;

        $r450 = virtualinvoke r854.<java.util.ArrayList: java.lang.Object get(int)>(i108);

        r859 = (android.content.pm.PackageParser$Package) $r450;

        $r451 = r859.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r453 = $r451.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r452 = r859.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i52 = $r452.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>($r453, $i52, "update lib");

        i108 = i108 + 1;

        goto label155;

     label156:
        $r115 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r860 = $r115;

        entermonitor $r115;

     label157:
        $r114 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r114.<com.android.server.pm.Settings: void insertPackageSettingLPw(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r825, r1);

        $r109 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r113 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r110 = $r113.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r109.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r110, r1);

        $r108 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r111 = $r108.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        r861 = virtualinvoke $r111.<java.util.ArrayList: java.util.Iterator iterator()>();

     label158:
        $z14 = interfaceinvoke r861.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label160;

        $r448 = interfaceinvoke r861.<java.util.Iterator: java.lang.Object next()>();

        r862 = (android.content.pm.PackageCleanItem) $r448;

        $r449 = r862.<android.content.pm.PackageCleanItem: java.lang.String packageName>;

        $z34 = virtualinvoke r831.<java.lang.String: boolean equals(java.lang.Object)>($r449);

        if $z34 == 0 goto label159;

        interfaceinvoke r861.<java.util.Iterator: void remove()>();

     label159:
        goto label158;

     label160:
        $b21 = l2 cmp 0L;

        if $b21 == 0 goto label162;

        $l46 = r825.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $b45 = $l46 cmp 0L;

        if $b45 != 0 goto label161;

        r825.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l2;

        r825.<com.android.server.pm.PackageSetting: long firstInstallTime> = l2;

        goto label164;

     label161:
        $i50 = i1 & 64;

        if $i50 == 0 goto label164;

        r825.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l2;

        goto label164;

     label162:
        $l26 = r825.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $b27 = $l26 cmp 0L;

        if $b27 != 0 goto label163;

        r825.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l97;

        r825.<com.android.server.pm.PackageSetting: long firstInstallTime> = l97;

        goto label164;

     label163:
        $i25 = i0 & 64;

        if $i25 == 0 goto label164;

        $l48 = r825.<com.android.server.pm.PackageSetting: long timeStamp>;

        $b47 = l97 cmp $l48;

        if $b47 == 0 goto label164;

        r825.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l97;

     label164:
        $r120 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r863 = $r120.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

     label165:
        $r123 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r863.<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>($r123);

        $r121 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r124 = r1.<android.content.pm.PackageParser$Package: android.util.ArraySet mSigningKeys>;

        virtualinvoke r863.<com.android.server.pm.KeySetManagerService: void addSigningKeySetToPackageLPw(java.lang.String,android.util.ArraySet)>($r121, $r124);

        $r122 = r1.<android.content.pm.PackageParser$Package: android.util.ArrayMap mKeySetMapping>;

        if $r122 == null goto label170;

        $r385 = r1.<android.content.pm.PackageParser$Package: android.util.ArrayMap mKeySetMapping>;

        $r383 = virtualinvoke $r385.<android.util.ArrayMap: java.util.Set entrySet()>();

        r864 = interfaceinvoke $r383.<java.util.Set: java.util.Iterator iterator()>();

     label166:
        $z28 = interfaceinvoke r864.<java.util.Iterator: boolean hasNext()>();

        if $z28 == 0 goto label168;

        $r389 = interfaceinvoke r864.<java.util.Iterator: java.lang.Object next()>();

        r865 = (java.util.Map$Entry) $r389;

        $r388 = interfaceinvoke r865.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r388 == null goto label167;

        $r387 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r396 = interfaceinvoke r865.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r395 = (android.util.ArraySet) $r396;

        $r394 = interfaceinvoke r865.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r393 = (java.lang.String) $r394;

        virtualinvoke r863.<com.android.server.pm.KeySetManagerService: void addDefinedKeySetToPackageLPw(java.lang.String,android.util.ArraySet,java.lang.String)>($r387, $r395, $r393);

     label167:
        goto label166;

     label168:
        $r382 = r1.<android.content.pm.PackageParser$Package: android.util.ArraySet mUpgradeKeySets>;

        if $r382 == null goto label170;

        $r392 = r1.<android.content.pm.PackageParser$Package: android.util.ArraySet mUpgradeKeySets>;

        r866 = virtualinvoke $r392.<android.util.ArraySet: java.util.Iterator iterator()>();

     label169:
        $z30 = interfaceinvoke r866.<java.util.Iterator: boolean hasNext()>();

        if $z30 == 0 goto label170;

        $r391 = interfaceinvoke r866.<java.util.Iterator: java.lang.Object next()>();

        r867 = (java.lang.String) $r391;

        $r390 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r863.<com.android.server.pm.KeySetManagerService: void addUpgradeKeySetToPackageLPw(java.lang.String,java.lang.String)>($r390, r867);

        goto label169;

     label170:
        goto label173;

     label171:
        $r791 := @caughtexception;

        r868 = $r791;

        $r792 = new java.lang.StringBuilder;

        specialinvoke $r792.<java.lang.StringBuilder: void <init>()>();

        $r794 = virtualinvoke $r792.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not add KeySet to ");

        $r793 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r796 = virtualinvoke $r794.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r793);

        $r795 = virtualinvoke $r796.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r795, r868);

        goto label173;

     label172:
        $r808 := @caughtexception;

        r869 = $r808;

        $r807 = new java.lang.StringBuilder;

        specialinvoke $r807.<java.lang.StringBuilder: void <init>()>();

        $r811 = virtualinvoke $r807.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not add KeySet to malformed package");

        $r812 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r809 = virtualinvoke $r811.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r812);

        $r810 = virtualinvoke $r809.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r810, r869);

     label173:
        $r117 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i109 = virtualinvoke $r117.<java.util.ArrayList: int size()>();

        r870 = null;

        i110 = 0;

     label174:
        if i110 >= i109 goto label186;

        $r365 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r368 = virtualinvoke $r365.<java.util.ArrayList: java.lang.Object get(int)>(i110);

        r871 = (android.content.pm.PackageParser$Provider) $r368;

        $r359 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r367 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r358 = $r367.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r363 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r364 = $r363.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r362 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i43 = $r362.<android.content.pm.ApplicationInfo: int uid>;

        $r360 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r358, $r364, $i43);

        $r359.<android.content.pm.ProviderInfo: java.lang.String processName> = $r360;

        $r361 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        virtualinvoke $r361.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void addProvider(android.content.pm.PackageParser$Provider)>(r871);

        $r355 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z27 = $r355.<android.content.pm.ProviderInfo: boolean isSyncable>;

        r871.<android.content.pm.PackageParser$Provider: boolean syncable> = $z27;

        $r356 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r357 = $r356.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r357 == null goto label182;

        $r351 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r352 = $r351.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r872 = virtualinvoke $r352.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r400 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r400.<android.content.pm.ProviderInfo: java.lang.String authority> = null;

        i111 = 0;

     label175:
        $i49 = lengthof r872;

        if i111 >= $i49 goto label182;

        if i111 != 1 goto label176;

        $z29 = r871.<android.content.pm.PackageParser$Provider: boolean syncable>;

        if $z29 == 0 goto label176;

        $r384 = new android.content.pm.PackageParser$Provider;

        specialinvoke $r384.<android.content.pm.PackageParser$Provider: void <init>(android.content.pm.PackageParser$Provider)>(r871);

        r871 = $r384;

        r871.<android.content.pm.PackageParser$Provider: boolean syncable> = 0;

     label176:
        $r397 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r401 = r872[i111];

        $z31 = virtualinvoke $r397.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r401);

        if $z31 != 0 goto label178;

        $r422 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r420 = r872[i111];

        virtualinvoke $r422.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r420, r871);

        $r417 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r416 = $r417.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r416 != null goto label177;

        $r386 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r375 = r872[i111];

        $r386.<android.content.pm.ProviderInfo: java.lang.String authority> = $r375;

        goto label181;

     label177:
        $r418 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r419 = new java.lang.StringBuilder;

        specialinvoke $r419.<java.lang.StringBuilder: void <init>()>();

        $r380 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r381 = $r380.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r378 = virtualinvoke $r419.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r381);

        $r379 = virtualinvoke $r378.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r376 = r872[i111];

        $r377 = virtualinvoke $r379.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r376);

        $r374 = virtualinvoke $r377.<java.lang.StringBuilder: java.lang.String toString()>();

        $r418.<android.content.pm.ProviderInfo: java.lang.String authority> = $r374;

        goto label181;

     label178:
        $r399 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r398 = r872[i111];

        $r406 = virtualinvoke $r399.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r398);

        r873 = (android.content.pm.PackageParser$Provider) $r406;

        $r407 = new java.lang.StringBuilder;

        specialinvoke $r407.<java.lang.StringBuilder: void <init>()>();

        $r408 = virtualinvoke $r407.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping provider name ");

        $r402 = r872[i111];

        $r403 = virtualinvoke $r408.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r402);

        $r404 = virtualinvoke $r403.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in package ");

        $r405 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r413 = $r405.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r412 = virtualinvoke $r404.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r413);

        $r415 = virtualinvoke $r412.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): name already used by ");

        if r873 == null goto label179;

        $r411 = virtualinvoke r873.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        if $r411 == null goto label179;

        $r410 = virtualinvoke r873.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        $r421 = virtualinvoke $r410.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label180;

     label179:
        $r421 = "?";

     label180:
        $r414 = virtualinvoke $r415.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r421);

        $r409 = virtualinvoke $r414.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r409);

     label181:
        i111 = i111 + 1;

        goto label175;

     label182:
        $i42 = i0 & 2;

        if $i42 == 0 goto label185;

        if r870 != null goto label183;

        $r350 = new java.lang.StringBuilder;

        specialinvoke $r350.<java.lang.StringBuilder: void <init>(int)>(256);

        r870 = $r350;

        goto label184;

     label183:
        virtualinvoke r870.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label184:
        $r353 = r871.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r354 = $r353.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke r870.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r354);

     label185:
        i110 = i110 + 1;

        goto label174;

     label186:
        if r870 == null goto label187;

     label187:
        $r116 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        i112 = virtualinvoke $r116.<java.util.ArrayList: int size()>();

        r874 = null;

        i113 = 0;

     label188:
        if i113 >= i112 goto label192;

        $r331 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r332 = virtualinvoke $r331.<java.util.ArrayList: java.lang.Object get(int)>(i113);

        r875 = (android.content.pm.PackageParser$Service) $r332;

        $r372 = r875.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r329 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r327 = $r329.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r330 = r875.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r326 = $r330.<android.content.pm.ServiceInfo: java.lang.String processName>;

        $r328 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i38 = $r328.<android.content.pm.ApplicationInfo: int uid>;

        $r371 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r327, $r326, $i38);

        $r372.<android.content.pm.ServiceInfo: java.lang.String processName> = $r371;

        $r373 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r373.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)>(r875);

        $i44 = i0 & 2;

        if $i44 == 0 goto label191;

        if r874 != null goto label189;

        $r366 = new java.lang.StringBuilder;

        specialinvoke $r366.<java.lang.StringBuilder: void <init>(int)>(256);

        r874 = $r366;

        goto label190;

     label189:
        virtualinvoke r874.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label190:
        $r369 = r875.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r370 = $r369.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke r874.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r370);

     label191:
        i113 = i113 + 1;

        goto label188;

     label192:
        if r874 == null goto label193;

     label193:
        $r119 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        i114 = virtualinvoke $r119.<java.util.ArrayList: int size()>();

        r876 = null;

        i115 = 0;

     label194:
        if i115 >= i114 goto label198;

        $r345 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r344 = virtualinvoke $r345.<java.util.ArrayList: java.lang.Object get(int)>(i115);

        r877 = (android.content.pm.PackageParser$Activity) $r344;

        $r338 = r877.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r343 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r339 = $r343.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r342 = r877.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r340 = $r342.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r341 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i40 = $r341.<android.content.pm.ApplicationInfo: int uid>;

        $r336 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r339, $r340, $i40);

        $r338.<android.content.pm.ActivityInfo: java.lang.String processName> = $r336;

        $r337 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r337.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r877, "receiver");

        $i39 = i0 & 2;

        if $i39 == 0 goto label197;

        if r876 != null goto label195;

        $r333 = new java.lang.StringBuilder;

        specialinvoke $r333.<java.lang.StringBuilder: void <init>(int)>(256);

        r876 = $r333;

        goto label196;

     label195:
        virtualinvoke r876.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label196:
        $r334 = r877.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r335 = $r334.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r876.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r335);

     label197:
        i115 = i115 + 1;

        goto label194;

     label198:
        if r876 == null goto label199;

     label199:
        $r118 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i116 = virtualinvoke $r118.<java.util.ArrayList: int size()>();

        r878 = null;

        i117 = 0;

     label200:
        if i117 >= i116 goto label204;

        $r314 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r315 = virtualinvoke $r314.<java.util.ArrayList: java.lang.Object get(int)>(i117);

        r879 = (android.content.pm.PackageParser$Activity) $r315;

        $r309 = r879.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r304 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r308 = $r304.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r305 = r879.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r307 = $r305.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r306 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i35 = $r306.<android.content.pm.ApplicationInfo: int uid>;

        $r310 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r308, $r307, $i35);

        $r309.<android.content.pm.ActivityInfo: java.lang.String processName> = $r310;

        $r349 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r349.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r879, "activity");

        $i41 = i0 & 2;

        if $i41 == 0 goto label203;

        if r878 != null goto label201;

        $r346 = new java.lang.StringBuilder;

        specialinvoke $r346.<java.lang.StringBuilder: void <init>(int)>(256);

        r878 = $r346;

        goto label202;

     label201:
        virtualinvoke r878.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label202:
        $r348 = r879.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r347 = $r348.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r878.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r347);

     label203:
        i117 = i117 + 1;

        goto label200;

     label204:
        if r878 == null goto label205;

     label205:
        $r133 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        i118 = virtualinvoke $r133.<java.util.ArrayList: int size()>();

        r880 = null;

        i119 = 0;

     label206:
        if i119 >= i118 goto label213;

        $r293 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        $r284 = virtualinvoke $r293.<java.util.ArrayList: java.lang.Object get(int)>(i119);

        r881 = (android.content.pm.PackageParser$PermissionGroup) $r284;

        $r283 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r285 = r881.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r282 = $r285.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r287 = virtualinvoke $r283.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r282);

        r882 = (android.content.pm.PackageParser$PermissionGroup) $r287;

        if r882 != null goto label209;

        $r321 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r320 = r881.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r319 = $r320.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r321.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r319, r881);

        $i36 = i0 & 2;

        if $i36 == 0 goto label212;

        if r880 != null goto label207;

        $r313 = new java.lang.StringBuilder;

        specialinvoke $r313.<java.lang.StringBuilder: void <init>(int)>(256);

        r880 = $r313;

        goto label208;

     label207:
        virtualinvoke r880.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label208:
        $r311 = r881.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r312 = $r311.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r880.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r312);

        goto label212;

     label209:
        $r288 = new java.lang.StringBuilder;

        specialinvoke $r288.<java.lang.StringBuilder: void <init>()>();

        $r286 = virtualinvoke $r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission group ");

        $r276 = r881.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r277 = $r276.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r274 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r277);

        $r275 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r280 = r881.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r281 = $r280.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        $r278 = virtualinvoke $r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r281);

        $r279 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r323 = r882.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r322 = $r323.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        $r325 = virtualinvoke $r279.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r322);

        $r324 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r324);

        $i37 = i0 & 2;

        if $i37 == 0 goto label212;

        if r880 != null goto label210;

        $r318 = new java.lang.StringBuilder;

        specialinvoke $r318.<java.lang.StringBuilder: void <init>(int)>(256);

        r880 = $r318;

        goto label211;

     label210:
        virtualinvoke r880.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label211:
        virtualinvoke r880.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r317 = r881.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r316 = $r317.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r880.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r316);

     label212:
        i119 = i119 + 1;

        goto label206;

     label213:
        if r880 == null goto label214;

     label214:
        $r134 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        i120 = virtualinvoke $r134.<java.util.ArrayList: int size()>();

        r883 = null;

        i121 = 0;

     label215:
        if i121 >= i120 goto label238;

        $r192 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r193 = virtualinvoke $r192.<java.util.ArrayList: java.lang.Object get(int)>(i121);

        r884 = (android.content.pm.PackageParser$Permission) $r193;

        $z20 = r884.<android.content.pm.PackageParser$Permission: boolean tree>;

        if $z20 == 0 goto label216;

        $r295 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r294 = $r295.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        goto label217;

     label216:
        $r191 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r294 = $r191.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

     label217:
        r885 = $r294;

        $r194 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r196 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r197 = $r196.<android.content.pm.PermissionInfo: java.lang.String group>;

        $r195 = virtualinvoke $r194.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r197);

        $r179 = (android.content.pm.PackageParser$PermissionGroup) $r195;

        r884.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group> = $r179;

        $r178 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r177 = $r178.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r177 == null goto label218;

        $r256 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group>;

        if $r256 == null goto label236;

     label218:
        $r176 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r182 = $r176.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r181 = virtualinvoke r885.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r182);

        r886 = (com.android.server.pm.BasePermission) $r181;

        if r886 == null goto label222;

        $r265 = r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r263 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r264 = $r263.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z26 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r265, $r264);

        if $z26 != 0 goto label222;

        $r261 = r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r261 == null goto label219;

        $r258 = r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r260 = $r258.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $z24 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>($r260);

        if $z24 == 0 goto label219;

        $z23 = 1;

        goto label220;

     label219:
        $z23 = 0;

     label220:
        z68 = $z23;

        $r262 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $z25 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>($r262);

        if $z25 == 0 goto label222;

        $i34 = r886.<com.android.server.pm.BasePermission: int type>;

        if $i34 != 1 goto label221;

        $r251 = r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r251 != null goto label221;

        r886.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = r825;

        r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = r884;

        $r250 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i33 = $r250.<android.content.pm.ApplicationInfo: int uid>;

        r886.<com.android.server.pm.BasePermission: int uid> = $i33;

        $r252 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r259 = $r252.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage> = $r259;

        goto label222;

     label221:
        if z68 != 0 goto label222;

        $r270 = new java.lang.StringBuilder;

        specialinvoke $r270.<java.lang.StringBuilder: void <init>()>();

        $r271 = virtualinvoke $r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New decl ");

        $r272 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $r273 = virtualinvoke $r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r272);

        $r266 = virtualinvoke $r273.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of permission  ");

        $r267 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r268 = $r267.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r269 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r268);

        $r254 = virtualinvoke $r269.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is system; overriding ");

        $r253 = r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r255 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r253);

        r887 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r887);

        r886 = null;

     label222:
        if r886 != null goto label223;

        $r236 = new com.android.server.pm.BasePermission;

        $r235 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r232 = $r235.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r234 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r233 = $r234.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        specialinvoke $r236.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r232, $r233, 0);

        r886 = $r236;

        $r231 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r230 = $r231.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r885.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r230, r886);

     label223:
        $r180 = r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r180 != null goto label231;

        $r213 = r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        if $r213 == null goto label224;

        $r238 = r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r239 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r237 = $r239.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z22 = virtualinvoke $r238.<java.lang.String: boolean equals(java.lang.Object)>($r237);

        if $z22 == 0 goto label230;

     label224:
        $r214 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r215 = $r214.<android.content.pm.PermissionInfo: java.lang.String name>;

        r888 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)>($r215);

        if r888 == null goto label225;

        $r198 = r888.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r222 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r199 = $r222.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z21 = virtualinvoke $r198.<java.lang.String: boolean equals(java.lang.Object)>($r199);

        if $z21 == 0 goto label228;

     label225:
        r886.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = r825;

        r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = r884;

        $r216 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i31 = $r216.<android.content.pm.ApplicationInfo: int uid>;

        r886.<com.android.server.pm.BasePermission: int uid> = $i31;

        $r217 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r218 = $r217.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage> = $r218;

        $i32 = i0 & 2;

        if $i32 == 0 goto label229;

        if r883 != null goto label226;

        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>(int)>(256);

        r883 = $r221;

        goto label227;

     label226:
        virtualinvoke r883.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label227:
        $r219 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r220 = $r219.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r883.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r220);

        goto label229;

     label228:
        $r200 = new java.lang.StringBuilder;

        specialinvoke $r200.<java.lang.StringBuilder: void <init>()>();

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r203 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r202 = $r203.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r205 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r202);

        $r204 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r207 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r206 = $r207.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r209 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r206);

        $r208 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: base tree ");

        $r211 = r888.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r210 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r211);

        $r242 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is from package ");

        $r243 = r888.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r240 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r243);

        $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r241);

     label229:
        goto label234;

     label230:
        $r249 = new java.lang.StringBuilder;

        specialinvoke $r249.<java.lang.StringBuilder: void <init>()>();

        $r248 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r246 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r247 = $r246.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r244 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r247);

        $r245 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r229 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r228 = $r229.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r227 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r228);

        $r226 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r225 = r886.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r224 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r225);

        $r223 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r223);

        goto label234;

     label231:
        $i28 = i0 & 2;

        if $i28 == 0 goto label234;

        if r883 != null goto label232;

        $r212 = new java.lang.StringBuilder;

        specialinvoke $r212.<java.lang.StringBuilder: void <init>(int)>(256);

        r883 = $r212;

        goto label233;

     label232:
        virtualinvoke r883.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label233:
        virtualinvoke r883.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r186 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r185 = $r186.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r883.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r185);

     label234:
        $r184 = r886.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r184 != r884 goto label235;

        $r183 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i29 = $r183.<android.content.pm.PermissionInfo: int protectionLevel>;

        r886.<com.android.server.pm.BasePermission: int protectionLevel> = $i29;

     label235:
        goto label237;

     label236:
        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>()>();

        $r299 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r298 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r297 = $r298.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r296 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r297);

        $r303 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r302 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r301 = $r302.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r300 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r301);

        $r292 = virtualinvoke $r300.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: no group ");

        $r291 = r884.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group>;

        $r290 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r291);

        $r289 = virtualinvoke $r290.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r289);

     label237:
        i121 = i121 + 1;

        goto label215;

     label238:
        if r883 == null goto label239;

     label239:
        $r130 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        i122 = virtualinvoke $r130.<java.util.ArrayList: int size()>();

        r889 = null;

        i123 = 0;

     label240:
        if i123 >= i122 goto label244;

        $r154 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r153 = virtualinvoke $r154.<java.util.ArrayList: java.lang.Object get(int)>(i123);

        r890 = (android.content.pm.PackageParser$Instrumentation) $r153;

        $r150 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r152 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r151 = $r152.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r150.<android.content.pm.InstrumentationInfo: java.lang.String packageName> = $r151;

        $r147 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r149 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r148 = $r149.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r147.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir> = $r148;

        $r172 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r174 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r175 = $r174.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r172.<android.content.pm.InstrumentationInfo: java.lang.String publicSourceDir> = $r175;

        $r171 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r173 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r170 = $r173.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        $r171.<android.content.pm.InstrumentationInfo: java.lang.String[] splitSourceDirs> = $r170;

        $r166 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r168 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r169 = $r168.<android.content.pm.ApplicationInfo: java.lang.String[] splitPublicSourceDirs>;

        $r166.<android.content.pm.InstrumentationInfo: java.lang.String[] splitPublicSourceDirs> = $r169;

        $r165 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r167 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r164 = $r167.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r165.<android.content.pm.InstrumentationInfo: java.lang.String dataDir> = $r164;

        $r160 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r162 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r163 = $r162.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r160.<android.content.pm.InstrumentationInfo: java.lang.String nativeLibraryDir> = $r163;

        $r161 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r187 = virtualinvoke r890.<android.content.pm.PackageParser$Instrumentation: android.content.ComponentName getComponentName()>();

        virtualinvoke $r161.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r187, r890);

        $i30 = i0 & 2;

        if $i30 == 0 goto label243;

        if r889 != null goto label241;

        $r188 = new java.lang.StringBuilder;

        specialinvoke $r188.<java.lang.StringBuilder: void <init>(int)>(256);

        r889 = $r188;

        goto label242;

     label241:
        virtualinvoke r889.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label242:
        $r189 = r890.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r190 = $r189.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        virtualinvoke r889.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r190);

     label243:
        i123 = i123 + 1;

        goto label240;

     label244:
        if r889 == null goto label245;

     label245:
        $r132 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        if $r132 == null goto label247;

        $r158 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        i124 = virtualinvoke $r158.<java.util.ArrayList: int size()>();

        i125 = 0;

     label246:
        if i125 >= i124 goto label247;

        $r156 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mProtectedBroadcasts>;

        $r157 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        $r155 = virtualinvoke $r157.<java.util.ArrayList: java.lang.Object get(int)>(i125);

        virtualinvoke $r156.<java.util.HashSet: boolean add(java.lang.Object)>($r155);

        i125 = i125 + 1;

        goto label246;

     label247:
        virtualinvoke r825.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(l97);

        $r131 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        if $r131 == null goto label250;

        $r127 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        if $r127 == null goto label251;

        $r126 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        $z18 = virtualinvoke $r126.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z18 != 0 goto label251;

        $r146 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays>;

        $r145 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        $z19 = virtualinvoke $r146.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r145);

        if $z19 != 0 goto label248;

        $r137 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays>;

        $r159 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        $r136 = new java.util.HashMap;

        specialinvoke $r136.<java.util.HashMap: void <init>()>();

        virtualinvoke $r137.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r159, $r136);

     label248:
        $r142 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays>;

        $r141 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        $r143 = virtualinvoke $r142.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r141);

        r891 = (java.util.HashMap) $r143;

        $r144 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r891.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r144, r1);

        $r139 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r138 = r1.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        $r140 = virtualinvoke $r139.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r138);

        r892 = (android.content.pm.PackageParser$Package) $r140;

        if r892 == null goto label249;

        $z17 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean createIdmapForPackagePairLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r892, r1);

        if $z17 != 0 goto label249;

        $r135 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r135.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-7, "scanPackageLI failed to createIdmap");

        throw $r135;

     label249:
        goto label251;

     label250:
        $r128 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mOverlays>;

        $r129 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z16 = virtualinvoke $r128.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r129);

        if $z16 == 0 goto label251;

        $r125 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z15 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z15 != 0 goto label251;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void createIdmapsForPackageLI(android.content.pm.PackageParser$Package)>(r1);

     label251:
        exitmonitor r860;

     label252:
        goto label255;

     label253:
        $r820 := @caughtexception;

        r24 = $r820;

        exitmonitor r860;

     label254:
        throw r24;

     label255:
        return r1;

        catch java.lang.Throwable from label007 to label010 with label011;
        catch java.lang.Throwable from label011 to label012 with label011;
        catch com.android.server.pm.PackageManagerException from label031 to label032 with label033;
        catch java.lang.Throwable from label017 to label049 with label050;
        catch java.lang.Throwable from label050 to label051 with label050;
        catch android.system.ErrnoException from label056 to label057 with label058;
        catch java.lang.Throwable from label068 to label070 with label071;
        catch java.lang.Throwable from label071 to label072 with label071;
        catch java.io.IOException from label080 to label081 with label082;
        catch java.lang.Throwable from label080 to label081 with label084;
        catch java.lang.Throwable from label082 to label083 with label084;
        catch java.lang.Throwable from label084 to label085 with label084;
        catch java.io.IOException from label091 to label109 with label110;
        catch java.lang.Throwable from label091 to label109 with label112;
        catch java.lang.Throwable from label110 to label111 with label112;
        catch java.lang.Throwable from label112 to label113 with label112;
        catch java.lang.Throwable from label115 to label119 with label120;
        catch java.lang.Throwable from label120 to label121 with label120;
        catch java.lang.Throwable from label133 to label145 with label146;
        catch java.lang.Throwable from label146 to label147 with label146;
        catch java.lang.NullPointerException from label165 to label170 with label171;
        catch java.lang.IllegalArgumentException from label165 to label170 with label172;
        catch java.lang.Throwable from label157 to label252 with label253;
        catch java.lang.Throwable from label253 to label254 with label253;
    }

    private void adjustCpuAbisForSharedUserLPw(java.util.Set, android.content.pm.PackageParser$Package, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Set r1;
        android.content.pm.PackageParser$Package r2, $r12, $r13, $r14, $r26, $r27;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String r3, r7, r8, $r10, $r20, $r23, $r25, $r28, $r29, $r30, $r32, $r33, $r34, $r46, $r47, $r49, $r51, r53;
        com.android.server.pm.PackageSetting r4, r6, r55;
        java.util.Iterator r5, r54;
        android.content.pm.ApplicationInfo $r9, $r15, $r17, $r31, $r35, $r50, $r52;
        java.lang.Object $r11, $r36, $r48;
        java.lang.StringBuilder $r16, $r18, $r19, $r21, $r22, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        com.android.server.pm.Installer $r24;
        int $i1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 = null;

        if r2 == null goto label01;

        $r50 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r51 = $r50.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r51 == null goto label01;

        $r52 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r49 = $r52.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        r3 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r49);

     label01:
        r4 = null;

        r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r36 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.PackageSetting) $r36;

        if r2 == null goto label03;

        $r46 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r47 = r6.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z6 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z6 != 0 goto label08;

     label03:
        $r33 = r6.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r33 != null goto label04;

        goto label02;

     label04:
        $r34 = r6.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        r7 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r34);

        if r3 == null goto label07;

        $z5 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 != 0 goto label07;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instruction set mismatch, ");

        if r4 != null goto label05;

        $r48 = "[caller]";

        goto label06;

     label05:
        $r48 = r4;

     label06:
        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" whereas ");

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r8 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", r8);

     label07:
        if r3 != null goto label08;

        r3 = r7;

        r4 = r6;

     label08:
        goto label02;

     label09:
        if r3 == null goto label17;

        if r4 == null goto label10;

        r53 = r4.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if r2 == null goto label11;

        $r35 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r35.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = r53;

        goto label11;

     label10:
        $r9 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r53 = $r9.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

     label11:
        r54 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r11 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (com.android.server.pm.PackageSetting) $r11;

        if r2 == null goto label13;

        $r30 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r32 = r55.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z4 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z4 != 0 goto label16;

     label13:
        $r10 = r55.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r10 == null goto label14;

        goto label12;

     label14:
        r55.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = r53;

        $r13 = r55.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r13 == null goto label16;

        $r12 = r55.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r15 = $r12.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r15 == null goto label16;

        $r14 = r55.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r17 = $r14.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r17.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = r53;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adjusting ABI for : ");

        $r20 = r55.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r23);

        $r26 = r55.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,java.lang.String[],boolean,boolean,boolean)>($r26, null, z0, z1, 1);

        if $i1 != -1 goto label15;

        r55.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = null;

        $r27 = r55.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r31 = $r27.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r31.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = null;

        return;

     label15:
        $r24 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r25 = r55.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r28 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPreferredInstructionSet()>();

        $r29 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getDexCodeInstructionSet(java.lang.String)>($r28);

        virtualinvoke $r24.<com.android.server.pm.Installer: int rmdex(java.lang.String,java.lang.String)>($r25, $r29);

     label16:
        goto label12;

     label17:
        return;
    }

    private void setUpCustomResolverActivity(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r30;
        android.content.pm.ApplicationInfo $r5, $r10;
        android.content.pm.ActivityInfo $r6, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        android.content.ComponentName $r7, $r25, $r28;
        java.lang.String $r9, $r11, $r29;
        android.content.pm.ResolveInfo $r20, $r21, $r22, $r23;
        java.lang.StringBuilder $r24, $r26, $r27;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<com.android.server.pm.PackageManagerService: boolean mResolverReplaced> = 1;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r5 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r5;

        $r8 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        $r9 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getClassName()>();

        $r8.<android.content.pm.ActivityInfo: java.lang.String name> = $r9;

        $r12 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r10 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r12.<android.content.pm.ActivityInfo: java.lang.String packageName> = $r11;

        $r13 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r13.<android.content.pm.ActivityInfo: java.lang.String processName> = null;

        $r14 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r14.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r15 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r15.<android.content.pm.ActivityInfo: int flags> = 288;

        $r17 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r17.<android.content.pm.ActivityInfo: int theme> = 0;

        $r16 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r16.<android.content.pm.ActivityInfo: boolean exported> = 1;

        $r19 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r19.<android.content.pm.ActivityInfo: boolean enabled> = 1;

        $r21 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r18 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r18;

        $r20 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r20.<android.content.pm.ResolveInfo: int priority> = 0;

        $r23 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r23.<android.content.pm.ResolveInfo: int preferredOrder> = 0;

        $r22 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r22.<android.content.pm.ResolveInfo: int match> = 0;

        $r25 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName> = $r25;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replacing default ResolverActivity with custom activity: ");

        $r28 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r29);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r30 := @caughtexception;

        r3 = $r30;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static java.lang.String calculateBundledApkRoot(java.lang.String)
    {
        java.lang.String r0, $r16, $r17, $r23, $r24;
        java.io.File r1, r2, r3, r4, r5, $r6, $r7, $r8, $r9, $r10, $r21;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r18, $r20, $r22;
        java.io.IOException $r19;

        r0 := @parameter0: java.lang.String;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r0);

        r1 = $r6;

        $r7 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r7, r1);

        if $z0 == 0 goto label1;

        r2 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        goto label8;

     label1:
        $r8 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        $z1 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r8, r1);

        if $z1 == 0 goto label2;

        r2 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        goto label8;

     label2:
        $r9 = staticinvoke <android.os.Environment: java.io.File getVendorDirectory()>();

        $z2 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r9, r1);

        if $z2 == 0 goto label3;

        r2 = staticinvoke <android.os.Environment: java.io.File getVendorDirectory()>();

        goto label8;

     label3:
        r3 = virtualinvoke r1.<java.io.File: java.io.File getCanonicalFile()>();

        r4 = virtualinvoke r3.<java.io.File: java.io.File getParentFile()>();

     label4:
        $r10 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();

        r5 = $r10;

        if $r10 == null goto label5;

        r3 = r4;

        r4 = r5;

        goto label4;

     label5:
        r2 = r3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized code path ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - using ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

     label6:
        goto label8;

     label7:
        $r19 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t canonicalize code path ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        $r21 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r24 = virtualinvoke $r21.<java.io.File: java.lang.String getPath()>();

        return $r24;

     label8:
        $r17 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        return $r17;

        catch java.io.IOException from label3 to label6 with label7;
    }

    private void setNativeLibraryPaths(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        android.content.pm.ApplicationInfo r2;
        java.lang.String r3, r5, r6, r7, r8, $r10, $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r29, $r30, $r36, $r37, $r38, $r39, $r40, r42;
        java.io.File r4, $r9, $r11, $r13, $r16, $r22, $r24, $r25, $r28, $r32, $r33, $r34, $r41;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String[] $r31, $r35;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = r1.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = $r9;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.ApplicationInfo)>(r2);

        if $z3 == 0 goto label01;

        $z7 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.ApplicationInfo)>(r2);

        if $z7 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.ApplicationInfo)>(r2);

        if $z4 != 0 goto label03;

        $z9 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.ApplicationInfo)>(r2);

        if $z9 == 0 goto label04;

     label03:
        $z8 = 1;

        goto label05;

     label04:
        $z8 = 0;

     label05:
        z1 = $z8;

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir> = null;

        r2.<android.content.pm.ApplicationInfo: boolean nativeLibraryRootRequiresIsa> = 0;

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = null;

        r2.<android.content.pm.ApplicationInfo: java.lang.String secondaryNativeLibraryDir> = null;

        $z5 = staticinvoke <android.content.pm.PackageParser: boolean isApkFile(java.io.File)>(r4);

        if $z5 == 0 goto label14;

        if z0 == 0 goto label11;

        $r30 = r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        r5 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String calculateBundledApkRoot(java.lang.String)>($r30);

        $r29 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>(r2);

        z2 = staticinvoke <dalvik.system.VMRuntime: boolean is64BitInstructionSet(java.lang.String)>($r29);

        r6 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String deriveCodePathName(java.lang.String)>(r3);

        if z2 == 0 goto label06;

        $r38 = "lib64";

        goto label07;

     label06:
        $r38 = "lib";

     label07:
        r7 = $r38;

        $r33 = new java.io.File;

        specialinvoke $r33.<java.io.File: void <init>(java.lang.String)>(r5);

        $r31 = newarray (java.lang.String)[2];

        $r31[0] = r7;

        $r31[1] = r6;

        $r32 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r33, $r31);

        $r36 = virtualinvoke $r32.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir> = $r36;

        $r37 = r2.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r37 == null goto label10;

        if z2 == 0 goto label08;

        $r39 = "lib";

        goto label09;

     label08:
        $r39 = "lib64";

     label09:
        r8 = $r39;

        $r34 = new java.io.File;

        specialinvoke $r34.<java.io.File: void <init>(java.lang.String)>(r5);

        $r35 = newarray (java.lang.String)[2];

        $r35[0] = r8;

        $r35[1] = r6;

        $r41 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r34, $r35);

        $r40 = virtualinvoke $r41.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String secondaryNativeLibraryDir> = $r40;

     label10:
        goto label13;

     label11:
        if z1 == 0 goto label12;

        $r28 = new java.io.File;

        $r25 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r28.<java.io.File: void <init>(java.io.File,java.lang.String)>($r25, "lib");

        $r26 = virtualinvoke $r28.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir> = $r26;

        goto label13;

     label12:
        r42 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String deriveCodePathName(java.lang.String)>(r3);

        $r22 = new java.io.File;

        $r24 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppLib32InstallDir>;

        specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, r42);

        $r23 = virtualinvoke $r22.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir> = $r23;

     label13:
        r2.<android.content.pm.ApplicationInfo: boolean nativeLibraryRootRequiresIsa> = 0;

        $r27 = r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r27;

        goto label15;

     label14:
        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, "lib");

        $r10 = virtualinvoke $r11.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir> = $r10;

        r2.<android.content.pm.ApplicationInfo: boolean nativeLibraryRootRequiresIsa> = 1;

        $r13 = new java.io.File;

        $r12 = r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r15 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>(r2);

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r12, $r15);

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r14;

        $r17 = r2.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r17 == null goto label15;

        $r16 = new java.io.File;

        $r18 = r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r19 = r2.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        $r21 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r19);

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r18, $r21);

        $r20 = virtualinvoke $r16.<java.io.File: java.lang.String getAbsolutePath()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String secondaryNativeLibraryDir> = $r20;

     label15:
        return;
    }

    private void setBundledAppAbisAndRoots(android.content.pm.PackageParser$Package, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        com.android.server.pm.PackageSetting r2;
        java.lang.String r3, r4, $r6, $r8, $r10, $r12;
        android.content.pm.ApplicationInfo $r5, $r7, $r9, $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        $r5 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = virtualinvoke $r5.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String deriveCodePathName(java.lang.String)>($r6);

        $r7 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        r4 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String calculateBundledApkRoot(java.lang.String)>($r8);

        staticinvoke <com.android.server.pm.PackageManagerService: void setBundledAppAbi(android.content.pm.PackageParser$Package,java.lang.String,java.lang.String)>(r1, r4, r3);

        if r2 == null goto label1;

        $r9 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = $r10;

        $r11 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = $r12;

     label1:
        return;
    }

    private static void setBundledAppAbi(android.content.pm.PackageParser$Package, java.lang.String, java.lang.String)
    {
        android.content.pm.PackageParser$Package r0;
        java.lang.String r1, r2, r5, $r7, $r14, $r17, $r18, $r23, $r27, $r32, $r33, $r35, $r38, $r42, $r44, $r47, $r49, $r55, r56;
        java.io.File r3, r4, $r6, $r8, $r46, $r50, $r51, $r52, $r53, $r54;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String[] $r9, $r10, $r15, $r19, $r20, $r26, $r31, $r34, $r39, $r43, $r45, $r48;
        android.content.pm.ApplicationInfo $r11, $r12, $r13, $r16, $r21, $r22, $r24, $r36, $r37, $r40, $r41;
        int $i0, $i1;
        java.lang.StringBuilder $r25, $r28, $r29, $r30;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r6 = new java.io.File;

        $r7 = r0.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7);

        r3 = $r6;

        $z2 = staticinvoke <android.content.pm.PackageParser: boolean isApkFile(java.io.File)>(r3);

        if $z2 == 0 goto label01;

        $r53 = new java.io.File;

        $r54 = new java.io.File;

        specialinvoke $r54.<java.io.File: void <init>(java.lang.String,java.lang.String)>("lib64", r2);

        $r49 = virtualinvoke $r54.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r53.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, $r49);

        z0 = virtualinvoke $r53.<java.io.File: boolean exists()>();

        $r50 = new java.io.File;

        $r51 = new java.io.File;

        specialinvoke $r51.<java.io.File: void <init>(java.lang.String,java.lang.String)>("lib", r2);

        $r55 = virtualinvoke $r51.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r50.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, $r55);

        z1 = virtualinvoke $r50.<java.io.File: boolean exists()>();

        goto label05;

     label01:
        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "lib");

        r4 = $r8;

        $r9 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $z3 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r9);

        if $z3 != 0 goto label02;

        $r45 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r44 = $r45[0];

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r44);

        if $z7 != 0 goto label02;

        $r48 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r47 = $r48[0];

        r5 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r47);

        $r52 = new java.io.File;

        specialinvoke $r52.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r5);

        z0 = virtualinvoke $r52.<java.io.File: boolean exists()>();

        goto label03;

     label02:
        z0 = 0;

     label03:
        $r10 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $z4 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r10);

        if $z4 != 0 goto label04;

        $r39 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r38 = $r39[0];

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r38);

        if $z6 != 0 goto label04;

        $r43 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r42 = $r43[0];

        r56 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r42);

        $r46 = new java.io.File;

        specialinvoke $r46.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r56);

        z1 = virtualinvoke $r46.<java.io.File: boolean exists()>();

        goto label05;

     label04:
        z1 = 0;

     label05:
        if z0 == 0 goto label06;

        if z1 != 0 goto label06;

        $r41 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r34 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r35 = $r34[0];

        $r41.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r35;

        $r40 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r40.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = null;

        goto label11;

     label06:
        if z1 == 0 goto label07;

        if z0 != 0 goto label07;

        $r36 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r32 = $r31[0];

        $r36.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r32;

        $r37 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r37.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = null;

        goto label11;

     label07:
        if z1 == 0 goto label10;

        if z0 == 0 goto label10;

        $r13 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label08;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package: ");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has multiple bundled libs, but is not multiarch.");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r33);

     label08:
        $r14 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getPreferredInstructionSet()>();

        $z5 = staticinvoke <dalvik.system.VMRuntime: boolean is64BitInstructionSet(java.lang.String)>($r14);

        if $z5 == 0 goto label09;

        $r22 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r20 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r23 = $r20[0];

        $r22.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r23;

        $r24 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r27 = $r26[0];

        $r24.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = $r27;

        goto label11;

     label09:
        $r16 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r15 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $r17 = $r15[0];

        $r16.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = $r17;

        $r21 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $r18 = $r19[0];

        $r21.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = $r18;

        goto label11;

     label10:
        $r12 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi> = null;

        $r11 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi> = null;

     label11:
        return;
    }

    private void killApplication(java.lang.String, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0;
        android.app.IActivityManager r3;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r3 == null goto label4;

     label1:
        interfaceinvoke r3.<android.app.IActivityManager: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>(r1, i0, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void removePackageLI(com.android.server.pm.PackageSetting, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        boolean z0;
        java.util.HashMap r2, $r5, $r7;
        android.content.pm.PackageParser$Package r3;
        java.lang.Throwable r4, $r9;
        java.lang.String $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        z0 := @parameter1: boolean;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

        r3 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if r3 == null goto label2;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package,boolean)>(r3, z0);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void removeInstalledPackageLI(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0;
        java.util.HashMap r2, $r4, $r7;
        java.lang.Throwable r3, $r9;
        android.content.pm.ApplicationInfo $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package,boolean)>(r1, z0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23;
        android.content.pm.PackageParser$Provider r2;
        java.lang.String[] r3;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r21, $r28, $r35, $r57, $r59, $r60, $r64;
        android.content.pm.ApplicationInfo $r11;
        java.util.HashMap $r15, $r22, $r25, $r27, $r37, $r49, $r75, $r76;
        java.lang.Object $r16, $r19, $r24, $r29, $r31, $r33, $r34, $r44, $r45, $r50, $r55, $r56, $r58, $r63, $r77;
        java.lang.String $r17, $r18, $r20, $r32, $r38, $r42, $r48, $r51, $r66, $r68, $r69, $r70, $r74, r85, r89;
        android.content.ComponentName $r23;
        com.android.server.pm.Settings $r26, $r40, $r53;
        android.util.ArrayMap $r30, $r36, $r43;
        android.content.pm.PermissionInfo $r39, $r41, $r46, $r47;
        android.content.pm.PackageParser$Permission $r52, r82;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r54, $r61;
        java.lang.StringBuilder $r62, r78;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r65;
        android.content.pm.ServiceInfo $r67;
        android.content.pm.ProviderInfo $r71, $r73;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r72;
        android.content.pm.PackageParser$Service r79;
        android.content.pm.PackageParser$Activity r80, r81;
        com.android.server.pm.BasePermission r83, r86;
        android.util.ArraySet r84, r87;
        android.content.pm.PackageParser$Instrumentation r88;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r90;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        $r4 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label06;

        $r64 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r63 = virtualinvoke $r64.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.content.pm.PackageParser$Provider) $r63;

        $r72 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        virtualinvoke $r72.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void removeProvider(android.content.pm.PackageParser$Provider)>(r2);

        $r73 = r2.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r70 = $r73.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r70 != null goto label02;

        goto label05;

     label02:
        $r71 = r2.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r69 = $r71.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r3 = virtualinvoke $r69.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i2 = 0;

     label03:
        $i10 = lengthof r3;

        if i2 >= $i10 goto label05;

        $r76 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r68 = r3[i2];

        $r77 = virtualinvoke $r76.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r68);

        if $r77 != r2 goto label04;

        $r75 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r74 = r3[i2];

        virtualinvoke $r75.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r74);

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        goto label07;

     label07:
        $r5 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        i11 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        r78 = null;

        i12 = 0;

     label08:
        if i12 >= i11 goto label12;

        $r57 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r56 = virtualinvoke $r57.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r79 = (android.content.pm.PackageParser$Service) $r56;

        $r65 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r65.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void removeService(android.content.pm.PackageParser$Service)>(r79);

        if z0 == 0 goto label11;

        if r78 != null goto label09;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>(int)>(256);

        r78 = $r62;

        goto label10;

     label09:
        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label10:
        $r67 = r79.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r66 = $r67.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

     label11:
        i12 = i12 + 1;

        goto label08;

     label12:
        if r78 == null goto label13;

     label13:
        $r6 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        i13 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i14 = 0;

     label14:
        if i14 >= i13 goto label15;

        $r60 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r55 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r80 = (android.content.pm.PackageParser$Activity) $r55;

        $r54 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r54.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r80, "receiver");

        i14 = i14 + 1;

        goto label14;

     label15:
        goto label16;

     label16:
        $r7 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i15 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i16 = 0;

     label17:
        if i16 >= i15 goto label18;

        $r59 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r58 = virtualinvoke $r59.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r81 = (android.content.pm.PackageParser$Activity) $r58;

        $r61 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r61.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r81, "activity");

        i16 = i16 + 1;

        goto label17;

     label18:
        goto label19;

     label19:
        $r8 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        i17 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i18 = 0;

     label20:
        if i18 >= i17 goto label24;

        $r35 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r34 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r82 = (android.content.pm.PackageParser$Permission) $r34;

        $r40 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r37 = $r40.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r39 = r82.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r38 = $r39.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r45 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r38);

        r83 = (com.android.server.pm.BasePermission) $r45;

        if r83 != null goto label21;

        $r53 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r49 = $r53.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r47 = r82.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r48 = $r47.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r50 = virtualinvoke $r49.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r48);

        r83 = (com.android.server.pm.BasePermission) $r50;

     label21:
        if r83 == null goto label22;

        $r52 = r83.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r52 != r82 goto label22;

        r83.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = null;

     label22:
        $r46 = r82.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i8 = $r46.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i9 = $i8 & 64;

        if $i9 == 0 goto label23;

        $r43 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r41 = r82.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r42 = $r41.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r44 = virtualinvoke $r43.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r42);

        r84 = (android.util.ArraySet) $r44;

        if r84 == null goto label23;

        $r51 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r84.<android.util.ArraySet: boolean remove(java.lang.Object)>($r51);

     label23:
        i18 = i18 + 1;

        goto label20;

     label24:
        goto label25;

     label25:
        $r9 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        i19 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i20 = 0;

     label26:
        if i20 >= i19 goto label28;

        $r28 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r29 = virtualinvoke $r28.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        r85 = (java.lang.String) $r29;

        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r27 = $r26.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r31 = virtualinvoke $r27.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r85);

        r86 = (com.android.server.pm.BasePermission) $r31;

        if r86 == null goto label27;

        $i7 = r86.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i6 = $i7 & 64;

        if $i6 == 0 goto label27;

        $r30 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r33 = virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r85);

        r87 = (android.util.ArraySet) $r33;

        if r87 == null goto label27;

        $r32 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r87.<android.util.ArraySet: boolean remove(java.lang.Object)>($r32);

        $z2 = virtualinvoke r87.<android.util.ArraySet: boolean isEmpty()>();

        if $z2 == 0 goto label27;

        $r36 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r85);

     label27:
        i20 = i20 + 1;

        goto label26;

     label28:
        goto label29;

     label29:
        $r10 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        i21 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        i22 = 0;

     label30:
        if i22 >= i21 goto label31;

        $r21 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r24 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        r88 = (android.content.pm.PackageParser$Instrumentation) $r24;

        $r25 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r23 = virtualinvoke r88.<android.content.pm.PackageParser$Instrumentation: android.content.ComponentName getComponentName()>();

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r23);

        i22 = i22 + 1;

        goto label30;

     label31:
        goto label32;

     label32:
        $r11 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i4 & 1;

        if $i3 == 0 goto label35;

        $r13 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        if $r13 == null goto label35;

        i23 = 0;

     label33:
        $r12 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i5 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if i23 >= $i5 goto label35;

        $r14 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        r89 = (java.lang.String) $r16;

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r19 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r89);

        r90 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r19;

        if r90 == null goto label34;

        $r20 = r90.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        if $r20 == null goto label34;

        $r18 = r90.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $r17 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label34;

        $r22 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r89);

     label34:
        i23 = i23 + 1;

        goto label33;

     label35:
        goto label36;

     label36:
        return;
    }

    private static boolean hasPermission(android.content.pm.PackageParser$Package, java.lang.String)
    {
        android.content.pm.PackageParser$Package r0;
        java.lang.String r1, $r7;
        int i0, $i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Permission $r5;
        android.content.pm.PermissionInfo $r6;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r3 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (android.content.pm.PackageParser$Permission) $r4;

        $r6 = $r5.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r7 = $r6.<android.content.pm.PermissionInfo: java.lang.String name>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return 0;
    }

    private void updatePermissionsLPw(java.lang.String, android.content.pm.PackageParser$Package, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r17, $r22, $r23, $r25, $r27, $r30, $r33, $r35, $r40, $r41, $r53, $r57, $r63, $r65, $r67, $r69, $r70, $r73, $r74, $r80, $r84;
        android.content.pm.PackageParser$Package r2, $r46, r88;
        int i0, $i1, $i2, $i3, $i4, $i7;
        java.util.Iterator r3, r85, r87;
        com.android.server.pm.BasePermission r4, r5, r86;
        com.android.server.pm.Settings $r6, $r9, $r34, $r82;
        java.util.HashMap $r7, $r10, $r13, $r39, $r81;
        java.util.Collection $r8, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Object $r14, $r15, $r38, $r62, $r78;
        com.android.server.pm.PackageSettingBase $r16, $r18, $r37, $r43, $r49, $r61, $r64, $r79;
        java.lang.StringBuilder $r19, $r20, $r21, $r24, $r26, $r28, $r29, $r31, $r32, $r36, $r59, $r60, $r66, $r68, $r71, $r72, $r75, $r76, $r77, $r83;
        android.content.pm.PermissionInfo $r42, $r44, $r45, $r54, $r56, $r58;
        android.content.pm.PackageParser$Permission $r47, $r48, $r50, $r51, $r52, $r55;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        i0 := @parameter2: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r62 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.BasePermission) $r62;

        $r61 = r4.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r61 != null goto label02;

        $r82 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r81 = $r82.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r80 = r4.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r78 = virtualinvoke $r81.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r80);

        $r79 = (com.android.server.pm.PackageSettingBase) $r78;

        r4.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = $r79;

     label02:
        $r64 = r4.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r64 != null goto label03;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling permission tree: ");

        $r74 = r4.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r73 = r4.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r83 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r84);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label05;

     label03:
        if r1 == null goto label05;

        $r63 = r4.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r63);

        if $z7 == 0 goto label05;

        if r2 == null goto label04;

        $r67 = r4.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z8 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasPermission(android.content.pm.PackageParser$Package,java.lang.String)>(r2, $r67);

        if $z8 != 0 goto label05;

     label04:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing old permission tree: ");

        $r69 = r4.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r68 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r70 = r4.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r66 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r65);

        i0 = i0 | 1;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label05:
        goto label01;

     label06:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r9.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r85 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r85.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r15 = interfaceinvoke r85.<java.util.Iterator: java.lang.Object next()>();

        r86 = (com.android.server.pm.BasePermission) $r15;

        $i4 = r86.<com.android.server.pm.BasePermission: int type>;

        if $i4 != 2 goto label08;

        $r43 = r86.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r43 != null goto label08;

        $r42 = r86.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        if $r42 == null goto label08;

        $r41 = r86.<com.android.server.pm.BasePermission: java.lang.String name>;

        r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)>($r41);

        if r5 == null goto label08;

        $r48 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r48 == null goto label08;

        $r49 = r5.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        r86.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = $r49;

        $r50 = new android.content.pm.PackageParser$Permission;

        $r51 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r46 = $r51.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $r44 = new android.content.pm.PermissionInfo;

        $r45 = r86.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        specialinvoke $r44.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>($r45);

        specialinvoke $r50.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>($r46, $r44);

        r86.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = $r50;

        $r47 = r86.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r58 = $r47.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r55 = r5.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r56 = $r55.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r57 = $r56.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r58.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r57;

        $r52 = r86.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r54 = $r52.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r53 = r86.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r54.<android.content.pm.PermissionInfo: java.lang.String name> = $r53;

        $i7 = r5.<com.android.server.pm.BasePermission: int uid>;

        r86.<com.android.server.pm.BasePermission: int uid> = $i7;

     label08:
        $r16 = r86.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r16 != null goto label09;

        $r34 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r39 = $r34.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r40 = r86.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r38 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r40);

        $r37 = (com.android.server.pm.PackageSettingBase) $r38;

        r86.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = $r37;

     label09:
        $r18 = r86.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r18 != null goto label10;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling permission: ");

        $r33 = r86.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r30 = r86.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r35);

        interfaceinvoke r85.<java.util.Iterator: void remove()>();

        goto label12;

     label10:
        if r1 == null goto label12;

        $r17 = r86.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z5 == 0 goto label12;

        if r2 == null goto label11;

        $r25 = r86.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z6 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasPermission(android.content.pm.PackageParser$Package,java.lang.String)>(r2, $r25);

        if $z6 != 0 goto label12;

     label11:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing old permission: ");

        $r23 = r86.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r22 = r86.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r27);

        i0 = i0 | 1;

        interfaceinvoke r85.<java.util.Iterator: void remove()>();

     label12:
        goto label07;

     label13:
        $i1 = i0 & 1;

        if $i1 == 0 goto label18;

        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.util.Collection values()>();

        r87 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r87.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r14 = interfaceinvoke r87.<java.util.Iterator: java.lang.Object next()>();

        r88 = (android.content.pm.PackageParser$Package) $r14;

        if r88 == r2 goto label17;

        $i3 = i0 & 4;

        if $i3 == 0 goto label15;

        $z4 = 1;

        goto label16;

     label15:
        $z4 = 0;

     label16:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void grantPermissionsLPw(android.content.pm.PackageParser$Package,boolean,java.lang.String)>(r88, $z4, r1);

     label17:
        goto label14;

     label18:
        if r2 == null goto label21;

        $i2 = i0 & 2;

        if $i2 == 0 goto label19;

        $z2 = 1;

        goto label20;

     label19:
        $z2 = 0;

     label20:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void grantPermissionsLPw(android.content.pm.PackageParser$Package,boolean,java.lang.String)>(r2, $z2, r1);

     label21:
        return;
    }

    private void grantPermissionsLPw(android.content.pm.PackageParser$Package, boolean, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20, $z21;
        java.lang.String r2, r6, r8, $r24, $r27, $r29, $r35, $r42, $r43, $r45, $r56, $r60, $r62, $r66, $r67, $r75, $r91, $r92, $r96;
        com.android.server.pm.PackageSetting r3;
        com.android.server.pm.GrantedPermissions r4, $r89;
        java.util.HashSet r5, $r31, $r74, $r76, $r80, $r85, $r86, $r88;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, i15;
        com.android.server.pm.BasePermission r7;
        java.lang.Object $r9, $r16, $r18, $r22, $r93;
        android.util.ArraySet r10, $r94;
        int[] $r11, $r50, $r51, $r52, $r72, $r73, $r77, $r78, $r79, $r81, $r83, $r87;
        com.android.server.pm.SharedUserSetting $r12;
        java.util.ArrayList $r13, $r14, $r15;
        java.lang.Boolean $r17;
        com.android.server.pm.Settings $r19;
        java.lang.StringBuilder $r20, $r23, $r25, $r26, $r28, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r46, $r47, $r48, $r49, $r53, $r55, $r57, $r58, $r59, $r61, $r63, $r64, $r65, $r68, $r69, $r70, $r71;
        java.util.HashMap $r21;
        com.android.server.pm.PackageSettingBase $r30, $r82;
        android.content.pm.ApplicationInfo $r44, $r54;
        android.util.ArrayMap $r90, $r95;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r9 = r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r3 = (com.android.server.pm.PackageSetting) $r9;

        if r3 != null goto label01;

        return;

     label01:
        $r12 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r12 == null goto label02;

        $r89 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label03;

     label02:
        $r89 = r3;

     label03:
        r4 = $r89;

        r5 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        z1 = 0;

        if z0 == 0 goto label04;

        r3.<com.android.server.pm.PackageSetting: boolean permissionsFixed> = 0;

        if r4 != r3 goto label04;

        $r86 = new java.util.HashSet;

        $r85 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        specialinvoke $r86.<java.util.HashSet: void <init>(java.util.Collection)>($r85);

        r5 = $r86;

        $r88 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r88.<java.util.HashSet: void clear()>();

        $r87 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        r4.<com.android.server.pm.GrantedPermissions: int[] gids> = $r87;

     label04:
        $r11 = r4.<com.android.server.pm.GrantedPermissions: int[] gids>;

        if $r11 != null goto label05;

        $r83 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        r4.<com.android.server.pm.GrantedPermissions: int[] gids> = $r83;

     label05:
        $r13 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i1 = 0;

     label06:
        if i1 >= i0 goto label28;

        $r14 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (java.lang.String) $r16;

        $r15 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissionsRequired>;

        $r18 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r17 = (java.lang.Boolean) $r18;

        z2 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r21 = $r19.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (com.android.server.pm.BasePermission) $r22;

        if r7 == null goto label07;

        $r30 = r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r30 != null goto label09;

     label07:
        if r2 == null goto label08;

        $r27 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z8 == 0 goto label27;

     label08:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r24 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r29);

        goto label27;

     label09:
        r8 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        z4 = 0;

        $i3 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i4 = $i3 & 64;

        if $i4 == 0 goto label11;

        $r90 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r91 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r93 = virtualinvoke $r90.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r91);

        r10 = (android.util.ArraySet) $r93;

        if r10 != null goto label10;

        $r94 = new android.util.ArraySet;

        specialinvoke $r94.<android.util.ArraySet: void <init>()>();

        r10 = $r94;

        $r95 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r96 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        virtualinvoke $r95.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r96, r10);

     label10:
        $r92 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r10.<android.util.ArraySet: boolean add(java.lang.Object)>($r92);

     label11:
        $i6 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        i15 = $i6 & 15;

        if i15 == 0 goto label12;

        if i15 != 1 goto label16;

     label12:
        if z2 != 0 goto label13;

        $z20 = virtualinvoke r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r8);

        if $z20 != 0 goto label13;

        $z19 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r3);

        if $z19 == 0 goto label14;

        $z17 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)>(r3);

        if $z17 != 0 goto label14;

     label13:
        $z18 = 1;

        goto label15;

     label14:
        $z18 = 0;

     label15:
        z3 = $z18;

        goto label19;

     label16:
        $r82 = r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r82 != null goto label17;

        z3 = 0;

        goto label19;

     label17:
        if i15 != 2 goto label18;

        z3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean grantSignaturePermission(java.lang.String,android.content.pm.PackageParser$Package,com.android.server.pm.BasePermission,java.util.HashSet)>(r8, r1, r7, r5);

        if z3 == 0 goto label19;

        z4 = 1;

        goto label19;

     label18:
        z3 = 0;

     label19:
        if z3 == 0 goto label24;

        $z11 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r3);

        if $z11 != 0 goto label20;

        $z15 = r3.<com.android.server.pm.PackageSetting: boolean permissionsFixed>;

        if $z15 == 0 goto label20;

        if z4 != 0 goto label20;

        $r76 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z21 = virtualinvoke $r76.<java.util.HashSet: boolean contains(java.lang.Object)>(r8);

        if $z21 != 0 goto label20;

        z3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isNewPlatformPermissionForPackage(java.lang.String,android.content.pm.PackageParser$Package)>(r8, r1);

     label20:
        if z3 == 0 goto label22;

        $r74 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z12 = virtualinvoke $r74.<java.util.HashSet: boolean contains(java.lang.Object)>(r8);

        if $z12 != 0 goto label21;

        z1 = 1;

        $r80 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r80.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

        $r78 = r4.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r79 = r7.<com.android.server.pm.BasePermission: int[] gids>;

        $r77 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r78, $r79);

        r4.<com.android.server.pm.GrantedPermissions: int[] gids> = $r77;

        goto label27;

     label21:
        $z13 = r3.<com.android.server.pm.PackageSetting: boolean haveGids>;

        if $z13 != 0 goto label27;

        $r73 = r4.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r72 = r7.<com.android.server.pm.BasePermission: int[] gids>;

        $r81 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r73, $r72);

        r4.<com.android.server.pm.GrantedPermissions: int[] gids> = $r81;

        goto label27;

     label22:
        if r2 == null goto label23;

        $r75 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r75);

        if $z14 == 0 goto label27;

     label23:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not granting permission ");

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to package ");

        $r67 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r65 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it was previously installed without");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r66);

        goto label27;

     label24:
        $r31 = r4.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z9 = virtualinvoke $r31.<java.util.HashSet: boolean remove(java.lang.Object)>(r8);

        if $z9 == 0 goto label25;

        z1 = 1;

        $r51 = r4.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r50 = r7.<com.android.server.pm.BasePermission: int[] gids>;

        $r52 = staticinvoke <com.android.server.pm.PackageManagerService: int[] removeInts(int[],int[])>($r51, $r50);

        r4.<com.android.server.pm.GrantedPermissions: int[] gids> = $r52;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Un-granting permission ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r57 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r56 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (protectionLevel=");

        $i11 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r53 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r54 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r54.<android.content.pm.ApplicationInfo: int flags>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i13);

        $r64 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r60 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r60);

        goto label27;

     label25:
        $i5 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i7 = $i5 & 64;

        if $i7 != 0 goto label27;

        if r2 == null goto label26;

        $r43 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        if $z10 == 0 goto label27;

     label26:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not granting permission ");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to package ");

        $r35 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (protectionLevel=");

        $i8 = r7.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r44 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r44.<android.content.pm.ApplicationInfo: int flags>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r46 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r41 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r42);

     label27:
        i1 = i1 + 1;

        goto label06;

     label28:
        if z1 != 0 goto label29;

        if z0 == 0 goto label30;

     label29:
        $z6 = r3.<com.android.server.pm.PackageSetting: boolean permissionsFixed>;

        if $z6 != 0 goto label30;

        $z7 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r3);

        if $z7 == 0 goto label31;

     label30:
        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)>(r3);

        if $z5 == 0 goto label32;

     label31:
        r3.<com.android.server.pm.PackageSetting: boolean permissionsFixed> = 1;

     label32:
        r3.<com.android.server.pm.PackageSetting: boolean haveGids> = 1;

        return;
    }

    private boolean isNewPlatformPermissionForPackage(java.lang.String, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r6, $r11, $r13;
        android.content.pm.PackageParser$Package r2;
        boolean z0, $z1;
        int i0, i1, $i2, $i3;
        android.content.pm.PackageParser$NewPermissionInfo r3;
        android.content.pm.PackageParser$NewPermissionInfo[] $r4, $r5;
        android.content.pm.ApplicationInfo $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        z0 = 0;

        $r4 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        r3 = $r5[i1];

        $r6 = r3.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r7 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i2 = r3.<android.content.pm.PackageParser$NewPermissionInfo: int sdkVersion>;

        if $i3 >= $i2 goto label2;

        z0 = 1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Auto-granting ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to old pkg ");

        $r11 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r13);

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z0;
    }

    private boolean grantSignaturePermission(java.lang.String, android.content.pm.PackageParser$Package, com.android.server.pm.BasePermission, java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r12;
        android.content.pm.PackageParser$Package r2, $r15, $r17, $r20, $r21;
        com.android.server.pm.BasePermission r3;
        java.util.HashSet r4, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.pm.PackageSetting r5;
        com.android.server.pm.GrantedPermissions r6, $r23;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.pm.PackageSettingBase $r7;
        com.android.server.pm.PackageSignatures $r8;
        android.content.pm.Signature[] $r9, $r10, $r22, $r24;
        com.android.server.pm.Settings $r11;
        com.android.server.pm.SharedUserSetting $r13;
        java.util.ArrayList $r16, $r18;
        java.lang.Object $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        r3 := @parameter2: com.android.server.pm.BasePermission;

        r4 := @parameter3: java.util.HashSet;

        $r7 = r3.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $r8 = $r7.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageSignatures signatures>;

        $r10 = $r8.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r9 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i1 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r10, $r9);

        if $i1 == 0 goto label01;

        $r21 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        $r24 = $r21.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r22 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i7 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r24, $r22);

        if $i7 != 0 goto label02;

     label01:
        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        if z0 != 0 goto label11;

        $i4 = r3.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i5 = $i4 & 16;

        if $i5 == 0 goto label11;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r2);

        if $z1 == 0 goto label11;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r2);

        if $z2 == 0 goto label10;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r5 = virtualinvoke $r11.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r12);

        $r13 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r13 == null goto label04;

        $r23 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        goto label05;

     label04:
        $r23 = r5;

     label05:
        r6 = $r23;

        $r14 = r6.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z3 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label06;

        z0 = 1;

        goto label09;

     label06:
        $r15 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r15 == null goto label09;

        $z4 = virtualinvoke r5.<com.android.server.pm.PackageSetting: boolean isPrivileged()>();

        if $z4 == 0 goto label09;

        i0 = 0;

     label07:
        $r17 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r16 = $r17.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $i6 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if i0 >= $i6 goto label09;

        $r20 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r18 = $r20.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z5 == 0 goto label08;

        z0 = 1;

        goto label09;

     label08:
        i0 = i0 + 1;

        goto label07;

     label09:
        goto label11;

     label10:
        z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isPrivilegedApp(android.content.pm.PackageParser$Package)>(r2);

     label11:
        if z0 != 0 goto label12;

        $i2 = r3.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i3 = $i2 & 32;

        if $i3 == 0 goto label12;

        z0 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

     label12:
        return z0;
    }

    static final void sendPackageBroadcast(java.lang.String, java.lang.String, android.os.Bundle, java.lang.String, android.content.IIntentReceiver, int[])
    {
        java.lang.String r0, r1, r3;
        android.os.Bundle r2;
        android.content.IIntentReceiver r4;
        int[] r5, r7;
        android.app.IActivityManager r6;
        int i0, i1, i2, i3, $i5, $i6, i7;
        android.content.Intent r8, $r9;
        boolean $z0;
        android.net.Uri $r15;
        android.os.RemoteException $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.IIntentReceiver;

        r5 := @parameter5: int[];

        r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r6 == null goto label13;

     label01:
        if r5 != null goto label02;

        r5 = interfaceinvoke r6.<android.app.IActivityManager: int[] getRunningUserIds()>();

     label02:
        r7 = r5;

        i0 = lengthof r7;

        i1 = 0;

     label03:
        if i1 >= i0 goto label11;

        i2 = r7[i1];

        $r9 = new android.content.Intent;

        if r1 == null goto label04;

        $r15 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r1, null);

        goto label05;

     label04:
        $r15 = null;

     label05:
        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>(r0, $r15);

        r8 = $r9;

        if r2 == null goto label06;

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r2);

     label06:
        if r3 == null goto label07;

        virtualinvoke r8.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r3);

     label07:
        i3 = virtualinvoke r8.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        if i3 <= 0 goto label08;

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        if $i6 == i2 goto label08;

        $i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        i7 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, $i5);

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i7);

     label08:
        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i2);

        virtualinvoke r8.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        if r4 == null goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        interfaceinvoke r6.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>(null, r8, null, r4, 0, null, null, null, -1, $z0, 0, i2);

        i1 = i1 + 1;

        goto label03;

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

     label13:
        return;

        catch android.os.RemoteException from label01 to label11 with label12;
    }

    private boolean isExternalMediaAvailable()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageCleanItem r1, $r8;
        java.util.HashMap r2, $r5;
        java.util.ArrayList r3;
        java.lang.Throwable r4, $r9;
        boolean $z0;
        com.android.server.pm.Settings $r6;
        int $i0;
        java.lang.Object $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageCleanItem;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isExternalMediaAvailable()>();

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return null;

     label03:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r3 = $r6.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        if r1 == null goto label04;

        virtualinvoke r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label04:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label06;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r8 = (android.content.pm.PackageCleanItem) $r7;

        exitmonitor r2;

     label05:
        return $r8;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void schedulePackageCleaning(java.lang.String, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0, $z1;
        android.os.Message r2;
        com.android.server.pm.PackageManagerService$PackageHandler $r3;
        java.util.ArrayList $r4, $r5, $r6;
        byte $b1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        r2 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(7, i0, $b1, r1);

        $z1 = r0.<com.android.server.pm.PackageManagerService: boolean mSystemReady>;

        if $z1 == 0 goto label3;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        goto label5;

     label3:
        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList mPostSystemReadyMessages>;

        if $r4 != null goto label4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList mPostSystemReadyMessages> = $r6;

     label4:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList mPostSystemReadyMessages>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label5:
        return;
    }

    void startCleaningPackages()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r12;
        boolean $z0, $z1;
        com.android.server.pm.Settings $r5;
        java.util.ArrayList $r6;
        android.content.Intent $r7, r13;
        android.content.ComponentName $r8;
        android.os.RemoteException $r11;
        android.app.IActivityManager r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isExternalMediaAvailable()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        $z1 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        exitmonitor r1;

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label08:
        throw r2;

     label09:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.content.pm.CLEAN_EXTERNAL_STORAGE");

        r13 = $r7;

        $r8 = <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT>;

        virtualinvoke r13.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r8);

        r14 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r14 == null goto label13;

     label10:
        interfaceinvoke r14.<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(null, r13, null, 0);

     label11:
        goto label13;

     label12:
        $r11 := @caughtexception;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    public void installPackage(java.lang.String, android.content.pm.IPackageInstallObserver2, int, java.lang.String, android.content.pm.VerificationParams, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r3, r5;
        android.content.pm.IPackageInstallObserver2 r2;
        int i0, $i1;
        android.content.pm.VerificationParams r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver2;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: java.lang.String;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String,int)>(r1, r2, i0, r3, r4, r5, $i1);

        return;
    }

    public void installPackageAsUser(java.lang.String, android.content.pm.IPackageInstallObserver2, int, java.lang.String, android.content.pm.VerificationParams, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r3, r5;
        android.content.pm.IPackageInstallObserver2 r2;
        int i0, i1, i2, $i3, i4, i5;
        android.content.pm.VerificationParams r4;
        java.io.File r7, $r12;
        com.android.server.pm.PackageManagerService$OriginInfo r8;
        android.os.Message r9;
        android.content.Context $r10;
        boolean $z0;
        android.os.UserHandle $r11, r17;
        com.android.server.pm.PackageManagerService$PackageHandler $r13, $r14;
        com.android.server.pm.PackageManagerService$InstallParams $r15;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver2;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        $r10 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INSTALL_PACKAGES", null);

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i2, i1, 1, 1, "installPackageAsUser");

        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>(i1, "no_install_apps");

        if $z0 == 0 goto label05;

     label01:
        if r2 == null goto label02;

        interfaceinvoke r2.<android.content.pm.IPackageInstallObserver2: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>("", -111, null, null);

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

     label04:
        return;

     label05:
        if i2 == 2000 goto label06;

        if i2 != 0 goto label07;

     label06:
        i4 = i0 | 32;

        goto label08;

     label07:
        i5 = i0 & -33;

        i4 = i5 & -65;

     label08:
        $i3 = i4 & 64;

        if $i3 == 0 goto label09;

        r17 = <android.os.UserHandle: android.os.UserHandle ALL>;

        goto label10;

     label09:
        $r11 = new android.os.UserHandle;

        specialinvoke $r11.<android.os.UserHandle: void <init>(int)>(i1);

        r17 = $r11;

     label10:
        virtualinvoke r4.<android.content.pm.VerificationParams: void setInstallerUid(int)>(i2);

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r1);

        r7 = $r12;

        r8 = staticinvoke <com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromUntrustedFile(java.io.File)>(r7);

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r9 = virtualinvoke $r13.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        $r15 = new com.android.server.pm.PackageManagerService$InstallParams;

        specialinvoke $r15.<com.android.server.pm.PackageManagerService$InstallParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$OriginInfo,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,android.os.UserHandle,java.lang.String)>(r0, r8, r2, i4, r3, r4, r17, r5);

        r9.<android.os.Message: java.lang.Object obj> = $r15;

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r14.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r9);

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    void installStage(java.lang.String, java.io.File, java.lang.String, android.content.pm.IPackageInstallObserver2, android.content.pm.PackageInstaller$SessionParams, java.lang.String, int, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r3, r6, $r15;
        java.io.File r2;
        android.content.pm.IPackageInstallObserver2 r4;
        android.content.pm.PackageInstaller$SessionParams r5;
        int i0, $i1;
        android.os.UserHandle r7;
        android.content.pm.VerificationParams r8, $r11;
        com.android.server.pm.PackageManagerService$OriginInfo r9;
        android.os.Message r10;
        android.net.Uri $r12, $r13;
        com.android.server.pm.PackageManagerService$PackageHandler $r14, $r17;
        com.android.server.pm.PackageManagerService$InstallParams $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.pm.IPackageInstallObserver2;

        r5 := @parameter4: android.content.pm.PackageInstaller$SessionParams;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r7 := @parameter7: android.os.UserHandle;

        $r11 = new android.content.pm.VerificationParams;

        $r13 = r5.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri>;

        $r12 = r5.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri>;

        specialinvoke $r11.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(null, $r13, $r12, i0, null);

        r8 = $r11;

        if r2 == null goto label1;

        r9 = staticinvoke <com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromStagedFile(java.io.File)>(r2);

        goto label2;

     label1:
        r9 = staticinvoke <com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromStagedContainer(java.lang.String)>(r3);

     label2:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r10 = virtualinvoke $r14.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        $r16 = new com.android.server.pm.PackageManagerService$InstallParams;

        $i1 = r5.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $r15 = r5.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        specialinvoke $r16.<com.android.server.pm.PackageManagerService$InstallParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$OriginInfo,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,android.os.UserHandle,java.lang.String)>(r0, r9, r4, $i1, r6, r8, r7, $r15);

        r10.<android.os.Message: java.lang.Object obj> = $r16;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r17.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r10);

        return;
    }

    private void sendPackageAddedForUser(java.lang.String, com.android.server.pm.PackageSetting, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        com.android.server.pm.PackageSetting r2;
        int i0, $i1, $i2;
        android.os.Bundle r3, $r6;
        android.app.IActivityManager r4;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.Intent r5, $r8, $r9;
        int[] $r7;
        android.os.RemoteException $r10, r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        i0 := @parameter2: int;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>(int)>(1);

        r3 = $r6;

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i1);

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", $i2);

        $r7 = newarray (int)[1];

        $r7[0] = i0;

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_ADDED", r1, r3, null, null, $r7);

     label1:
        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z1 != 0 goto label2;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z4 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z0 = $z3;

        if z0 == 0 goto label5;

        $z2 = interfaceinvoke r4.<android.app.IActivityManager: boolean isUserRunning(int,boolean)>(i0, 0);

        if $z2 == 0 goto label5;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        $r8 = virtualinvoke $r9.<android.content.Intent: android.content.Intent addFlags(int)>(32);

        r5 = virtualinvoke $r8.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        interfaceinvoke r4.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>(null, r5, null, null, 0, null, null, null, -1, 0, 0, i0);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        r11 = $r10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to bootstrap installed package", r11);

     label7:
        return;

        catch android.os.RemoteException from label1 to label5 with label6;
    }

    public boolean setApplicationHiddenSettingAsUser(java.lang.String, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r9, $r18;
        boolean z0, z1, z2, z3, $z4, $z5, z6;
        int i0, i1, $i3, $i4;
        com.android.server.pm.PackageSetting r2;
        long l2;
        java.util.HashMap r3, $r11, $r12;
        java.lang.Throwable r4, r5, $r21, $r22;
        android.content.Context $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r16, $r17, $r19, $r20;
        com.android.server.pm.Settings $r13, $r15;
        java.lang.Object $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_USERS", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setApplicationHiddenSetting for user ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i1, i0, 1, 1, $r9);

        if z0 == 0 goto label01;

        $z5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdmin(java.lang.String,int)>(r1, i0);

        if $z5 == 0 goto label01;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not hiding package ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": has active device admin");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r18);

        return 0;

     label01:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        z1 = 0;

        z2 = 0;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r11;

        entermonitor $r11;

     label03:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r14;

        if r2 != null goto label05;

        z3 = 0;

        exitmonitor r3;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z3;

     label05:
        $z4 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getHidden(int)>(i0);

        if $z4 == z0 goto label07;

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setHidden(boolean,int)>(z0, i0);

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r15.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        if z0 == 0 goto label06;

        z2 = 1;

        goto label07;

     label06:
        z1 = 1;

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r3;

     label10:
        throw r4;

     label11:
        if z1 == 0 goto label13;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageAddedForUser(java.lang.String,com.android.server.pm.PackageSetting,int)>(r1, r2, i0);

        z6 = 1;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z6;

     label13:
        if z2 == 0 goto label14;

        $i3 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $i4 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i3);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>(r1, $i4, "hiding pkg");

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendApplicationHiddenForUser(java.lang.String,com.android.server.pm.PackageSetting,int)>(r1, r2, i0);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label17;

     label15:
        $r21 := @caughtexception;

        r5 = $r21;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r5;

     label17:
        return 0;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label02 to label04 with label15;
        catch java.lang.Throwable from label05 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void sendApplicationHiddenForUser(java.lang.String, com.android.server.pm.PackageSetting, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        com.android.server.pm.PackageSetting r2;
        int i0, $i1, $i2;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r3, $r4;
        int[] $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        i0 := @parameter2: int;

        $r4 = new com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>();

        r3 = $r4;

        r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r1;

        $r5 = newarray (int)[1];

        $r5[0] = i0;

        r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int[] removedUsers> = $r5;

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i1);

        r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid> = $i2;

        virtualinvoke r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)>(0, 0, 0);

        return;
    }

    public boolean getApplicationHiddenSettingAsUser(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r9;
        int i0, $i2;
        com.android.server.pm.PackageSetting r2;
        long l1;
        java.util.HashMap r3, $r11, $r12;
        boolean z0, z1;
        java.lang.Throwable r4, r5, $r15, $r16;
        android.content.Context $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        com.android.server.pm.Settings $r13;
        java.lang.Object $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_USERS", null);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getApplicationHidden for user ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i2, i0, 1, 0, $r9);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r11;

        entermonitor $r11;

     label2:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r14;

        if r2 != null goto label4;

        z0 = 1;

        exitmonitor r3;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label4:
        z1 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getHidden(int)>(i0);

        exitmonitor r3;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z1;

     label6:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label7:
        throw r4;

     label8:
        $r16 := @caughtexception;

        r5 = $r16;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public int installExistingPackageAsUser(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r11;
        int i0, i1;
        com.android.server.pm.PackageSetting r2;
        long l2;
        boolean z0, $z1, $z2;
        java.util.HashMap r4, $r14, $r16;
        byte b3;
        java.lang.Throwable r5, r6, $r18, $r19;
        android.content.Context $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        android.os.Bundle $r12;
        com.android.server.pm.Settings $r13, $r17;
        java.lang.Object $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INSTALL_PACKAGES", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("installExistingPackage for user ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i1, i0, 1, 1, $r11);

        $z1 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>(i0, "no_install_apps");

        if $z1 == 0 goto label01;

        return -111;

     label01:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        z0 = 0;

        $r12 = new android.os.Bundle;

        specialinvoke $r12.<android.os.Bundle: void <init>(int)>(1);

        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r14;

        entermonitor $r14;

     label03:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r15;

        if r2 != null goto label05;

        b3 = -3;

        exitmonitor r4;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return b3;

     label05:
        $z2 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>(i0);

        if $z2 != 0 goto label06;

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, i0);

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setHidden(boolean,int)>(0, i0);

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r17.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        z0 = 1;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r4;

     label09:
        throw r5;

     label10:
        if z0 == 0 goto label11;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageAddedForUser(java.lang.String,com.android.server.pm.PackageSetting,int)>(r1, r2, i0);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label14;

     label12:
        $r18 := @caughtexception;

        r6 = $r18;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r6;

     label14:
        return 1;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label02 to label04 with label12;
        catch java.lang.Throwable from label05 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    boolean isUserRestricted(int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.lang.String r1, $r7;
        android.os.Bundle r2;
        com.android.server.pm.UserManagerService $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r2 = virtualinvoke $r3.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>(i0);

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r1, 0);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User is restricted: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

        return 1;

     label1:
        return 0;
    }

    public void verifyPendingInstall(int, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2;
        android.os.Message r1;
        com.android.server.pm.PackageVerificationResponse r2, $r5;
        android.content.Context $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", "Only package verification agents can verify applications");

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r1 = virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(15);

        $r5 = new com.android.server.pm.PackageVerificationResponse;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r5.<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>(i1, $i2);

        r2 = $r5;

        r1.<android.os.Message: int arg1> = i0;

        r1.<android.os.Message: java.lang.Object obj> = r2;

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r6.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void extendVerificationTimeout(int, int, long)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i3;
        long l2;
        com.android.server.pm.PackageVerificationState r1;
        com.android.server.pm.PackageVerificationResponse r2, $r7;
        android.os.Message r3;
        android.content.Context $r4;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        byte $b4, $b5;
        boolean $z0;
        com.android.server.pm.PackageManagerService$PackageHandler $r8, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", "Only package verification agents can extend verification timeouts");

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.PackageVerificationState) $r6;

        $r7 = new com.android.server.pm.PackageVerificationResponse;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r7.<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>(i1, $i3);

        r2 = $r7;

        $b4 = l2 cmp 3600000L;

        if $b4 <= 0 goto label1;

        l2 = 3600000L;

     label1:
        $b5 = l2 cmp 0L;

        if $b5 >= 0 goto label2;

        l2 = 0L;

     label2:
        if i1 == 1 goto label3;

        if i1 == -1 goto label3;

     label3:
        if r1 == null goto label4;

        $z0 = virtualinvoke r1.<com.android.server.pm.PackageVerificationState: boolean timeoutExtended()>();

        if $z0 != 0 goto label4;

        virtualinvoke r1.<com.android.server.pm.PackageVerificationState: void extendTimeout()>();

        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r3 = virtualinvoke $r8.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(15);

        r3.<android.os.Message: int arg1> = i0;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r9.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessageDelayed(android.os.Message,long)>(r3, l2);

     label4:
        return;
    }

    private void broadcastPackageVerified(int, android.net.Uri, int, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.net.Uri r1;
        android.os.UserHandle r2;
        android.content.Intent r3, $r4;
        android.content.Context $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.UserHandle;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_VERIFIED");

        r3 = $r4;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(r1, "application/vnd.android.package-archive");

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_ID", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_RESULT", i1);

        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r3, r2, "android.permission.PACKAGE_VERIFICATION_AGENT");

        return;
    }

    private android.content.ComponentName matchComponentForVerifier(java.lang.String, java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r6, $r7, $r11;
        java.util.List r2;
        android.content.pm.ActivityInfo r3, $r9, $r10;
        int i0, i1;
        android.content.pm.ResolveInfo r4;
        android.content.ComponentName $r5;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 = null;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.content.pm.ResolveInfo) $r8;

        $r9 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r9 != null goto label2;

        goto label3;

     label2:
        $r10 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r10.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label3;

        r3 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if r3 != null goto label5;

        return null;

     label5:
        $r5 = new android.content.ComponentName;

        $r7 = r3.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r6 = r3.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        return $r5;
    }

    private java.util.List matchVerifiers(android.content.pm.PackageInfoLite, java.util.List, com.android.server.pm.PackageVerificationState)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageInfoLite r1;
        java.util.List r2;
        com.android.server.pm.PackageVerificationState r3;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r4, $r9;
        android.content.pm.VerifierInfo r5;
        android.content.ComponentName r6;
        android.content.pm.VerifierInfo[] $r7, $r8, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageInfoLite;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.android.server.pm.PackageVerificationState;

        $r7 = r1.<android.content.pm.PackageInfoLite: android.content.pm.VerifierInfo[] verifiers>;

        $i3 = lengthof $r7;

        if $i3 != 0 goto label1;

        return null;

     label1:
        $r8 = r1.<android.content.pm.PackageInfoLite: android.content.pm.VerifierInfo[] verifiers>;

        i0 = lengthof $r8;

        $r9 = new java.util.ArrayList;

        $i4 = i0 + 1;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i4);

        r4 = $r9;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        $r10 = r1.<android.content.pm.PackageInfoLite: android.content.pm.VerifierInfo[] verifiers>;

        r5 = $r10[i1];

        $r11 = r5.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        r6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName matchComponentForVerifier(java.lang.String,java.util.List)>($r11, r2);

        if r6 != null goto label3;

        goto label5;

     label3:
        i2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidForVerifier(android.content.pm.VerifierInfo)>(r5);

        if i2 != -1 goto label4;

        goto label5;

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        virtualinvoke r3.<com.android.server.pm.PackageVerificationState: void addSufficientVerifier(int)>(i2);

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return r4;
    }

    private int getUidForVerifier(android.content.pm.VerifierInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.VerifierInfo r1;
        java.util.HashMap r2, $r8, $r10;
        android.content.pm.PackageParser$Package r3;
        byte[] r4, r31;
        android.content.pm.Signature r5;
        java.security.PublicKey r6, $r14;
        java.lang.Throwable r7, $r28;
        java.lang.String $r9, $r19, $r20, $r23, $r25;
        java.lang.Object $r11;
        android.content.pm.Signature[] $r12, $r13;
        int $i0, $i1;
        boolean $z0;
        android.content.pm.ApplicationInfo $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r21, $r22, $r24, $r26, $r27;
        java.security.cert.CertificateException $r29;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.VerifierInfo;

        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r8;

        entermonitor $r8;

     label01:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = r1.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        r3 = (android.content.pm.PackageParser$Package) $r11;

        if r3 != null goto label03;

        exitmonitor r2;

     label02:
        return -1;

     label03:
        $r12 = r3.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i0 = lengthof $r12;

        if $i0 == 1 goto label05;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifier package ");

        $r23 = r1.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has more than one signature; ignoring");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r25);

        exitmonitor r2;

     label04:
        return -1;

     label05:
        $r13 = r3.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        r5 = $r13[0];

        r6 = virtualinvoke r5.<android.content.pm.Signature: java.security.PublicKey getPublicKey()>();

        r4 = interfaceinvoke r6.<java.security.PublicKey: byte[] getEncoded()>();

     label06:
        goto label09;

     label07:
        $r29 := @caughtexception;

        exitmonitor r2;

     label08:
        return -1;

     label09:
        $r14 = r1.<android.content.pm.VerifierInfo: java.security.PublicKey publicKey>;

        r31 = interfaceinvoke $r14.<java.security.PublicKey: byte[] getEncoded()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r31, r4);

        if $z0 != 0 goto label11;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifier package ");

        $r19 = r1.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have the expected public key; ignoring");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r20);

        exitmonitor r2;

     label10:
        return -1;

     label11:
        $r15 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        exitmonitor r2;

     label12:
        return $i1;

     label13:
        $r28 := @caughtexception;

        r7 = $r28;

        exitmonitor r2;

     label14:
        throw r7;

        catch java.security.cert.CertificateException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void finishPackageInstall(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        android.os.Message r1;
        com.android.server.pm.PackageManagerService$PackageHandler $r2, $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("Only the system is allowed to finish installs");

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r1 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int)>(9, i0, 0);

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    private long getVerificationTimeout()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        long $l0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r2, "verifier_timeout", 10000L);

        return $l0;
    }

    private int getDefaultVerificationResponse()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "verifier_default_response", 1);

        return $i0;
    }

    private boolean isVerificationEnabled(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2;
        android.content.Context $r1, $r3;
        android.content.ContentResolver $r2, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>(i0, "ensure_verify_apps");

        $i2 = i1 & 32;

        if $i2 == 0 goto label3;

        $z2 = staticinvoke <android.app.ActivityManager: boolean isRunningInTestHarness()>();

        if $z2 == 0 goto label1;

        return 0;

     label1:
        if z0 == 0 goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r4, "verifier_verify_adb_installs", 1);

        if $i4 != 0 goto label3;

        return 0;

     label3:
        if z0 == 0 goto label4;

        return 1;

     label4:
        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "package_verifier_enable", 1);

        if $i3 != 1 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    private int getUnknownSourcesSettings()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "install_non_market_apps", -1);

        return $i0;
    }

    public void setInstallerPackageName(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r19, $r25, $r27, $r33, $r37, $r43, $r51, $r59, $r62;
        int i0, $i1, $i2;
        java.util.HashMap r3, $r10, $r12, $r30, $r55;
        com.android.server.pm.PackageSetting r4, r5, r8, $r28;
        android.content.pm.Signature[] r6, $r36, $r41;
        java.lang.Object r7, $r13, $r31, $r54;
        java.lang.Throwable r9, $r64;
        com.android.server.pm.Settings $r11, $r14, $r32, $r48;
        java.lang.StringBuilder $r15, $r17, $r18, $r21, $r22, $r23, $r24, $r26, $r38, $r39, $r40, $r44, $r45, $r46, $r52, $r56, $r57, $r58, $r60, $r61;
        java.lang.SecurityException $r16, $r20, $r34, $r47;
        boolean $z0, $z1;
        com.android.server.pm.PackageSignatures $r29, $r35, $r42, $r49;
        com.android.server.pm.SharedUserSetting $r50;
        java.lang.IllegalArgumentException $r53, $r63;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r10;

        entermonitor $r10;

     label01:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r11.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.PackageSetting) $r13;

        if r4 != null goto label02;

        $r63 = new java.lang.IllegalArgumentException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown target package: ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r59);

        throw $r63;

     label02:
        if r2 == null goto label03;

        $r48 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r55 = $r48.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r54 = virtualinvoke $r55.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.android.server.pm.PackageSetting) $r54;

        if r5 != null goto label04;

        $r53 = new java.lang.IllegalArgumentException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown installer package: ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r62);

        throw $r53;

     label03:
        r5 = null;

     label04:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r7 = virtualinvoke $r14.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i0);

        if r7 == null goto label07;

        $z0 = r7 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label05;

        $r50 = (com.android.server.pm.SharedUserSetting) r7;

        $r49 = $r50.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r6 = $r49.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        goto label08;

     label05:
        $z1 = r7 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label06;

        $r28 = (com.android.server.pm.PackageSetting) r7;

        $r29 = $r28.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r6 = $r29.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        goto label08;

     label06:
        $r20 = new java.lang.SecurityException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad object ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for uid ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label07:
        $r16 = new java.lang.SecurityException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown calling uid ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r19);

        throw $r16;

     label08:
        if r5 == null goto label09;

        $r42 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r41 = $r42.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $i2 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>(r6, $r41);

        if $i2 == 0 goto label09;

        $r47 = new java.lang.SecurityException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller does not have same cert as new installer package ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.SecurityException: void <init>(java.lang.String)>($r51);

        throw $r47;

     label09:
        $r27 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r27 == null goto label10;

        $r32 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r30 = $r32.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r33 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        $r31 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r33);

        r8 = (com.android.server.pm.PackageSetting) $r31;

        if r8 == null goto label10;

        $r35 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r36 = $r35.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $i1 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>(r6, $r36);

        if $i1 == 0 goto label10;

        $r34 = new java.lang.SecurityException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller does not have same cert as old installer package ");

        $r37 = r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.SecurityException: void <init>(java.lang.String)>($r43);

        throw $r34;

     label10:
        r4.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName> = r2;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

        exitmonitor r3;

     label11:
        goto label14;

     label12:
        $r64 := @caughtexception;

        r9 = $r64;

        exitmonitor r3;

     label13:
        throw r9;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void processPendingInstall(com.android.server.pm.PackageManagerService$InstallArgs, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        int i0;
        com.android.server.pm.PackageManagerService$6 $r2;
        com.android.server.pm.PackageManagerService$PackageHandler $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$InstallArgs;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r2 = new com.android.server.pm.PackageManagerService$6;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$6: void <init>(com.android.server.pm.PackageManagerService,int,com.android.server.pm.PackageManagerService$InstallArgs)>(r0, i0, r1);

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private static long calculateDirectorySize(com.android.internal.app.IMediaContainerService, java.io.File[]) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService r0;
        java.io.File[] r1, r2;
        long l0, $l3;
        int i1, i2;
        java.io.File r3;
        java.lang.String $r4;

        r0 := @parameter0: com.android.internal.app.IMediaContainerService;

        r1 := @parameter1: java.io.File[];

        l0 = 0L;

        r2 = r1;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r3 = r2[i2];

        $r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $l3 = interfaceinvoke r0.<com.android.internal.app.IMediaContainerService: long calculateDirectorySize(java.lang.String)>($r4);

        l0 = l0 + $l3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return l0;
    }

    private static void clearDirectory(com.android.internal.app.IMediaContainerService, java.io.File[])
    {
        com.android.internal.app.IMediaContainerService r0;
        java.io.File[] r1, r2;
        int i0, i1;
        java.io.File r3;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        r0 := @parameter0: com.android.internal.app.IMediaContainerService;

        r1 := @parameter1: java.io.File[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

     label2:
        $r5 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke r0.<com.android.internal.app.IMediaContainerService: void clearDirectory(java.lang.String)>($r5);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private static boolean installOnSd(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        return 0;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static boolean installForwardLocked(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(com.android.server.pm.PackageManagerService$InstallParams)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallParams r1;
        int $i0;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$AsecInstallArgs $r2;
        com.android.server.pm.PackageManagerService$FileInstallArgs $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$InstallParams;

        $i0 = r1.<com.android.server.pm.PackageManagerService$InstallParams: int installFlags>;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>($i0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallParams: boolean isForwardLocked()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>(r0, r1);

        return $r2;

     label2:
        $r3 = new com.android.server.pm.PackageManagerService$FileInstallArgs;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>(r0, r1);

        return $r3;
    }

    private com.android.server.pm.PackageManagerService$InstallArgs createInstallArgsForExisting(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.lang.String r1, r2, r3, $r8;
        java.lang.String[] r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.pm.PackageManagerService$FileInstallArgs $r5;
        com.android.server.pm.PackageManagerService$AsecInstallArgs $r6;
        java.io.File $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>(i0);

        if $z1 == 0 goto label1;

        z0 = 1;

        goto label3;

     label1:
        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installForwardLocked(int)>(i0);

        if $z2 == 0 goto label2;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z5 != 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        if z0 == 0 goto label4;

        $r6 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>(i0);

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installForwardLocked(int)>(i0);

        specialinvoke $r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String[],boolean,boolean)>(r0, r1, r4, $z3, $z4);

        return $r6;

     label4:
        $r5 = new com.android.server.pm.PackageManagerService$FileInstallArgs;

        specialinvoke $r5.<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(r0, r1, r2, r3, r4);

        return $r5;
    }

    private boolean isAsecExternal(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>(r1);

        $r3 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mAsecInternalPath>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static void maybeThrowExceptionForMultiArchCopy(java.lang.String, int) throws com.android.server.pm.PackageManagerException
    {
        java.lang.String r0;
        int i0;
        com.android.server.pm.PackageManagerException $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        if i0 == -114 goto label1;

        if i0 == -113 goto label1;

        $r1 = new com.android.server.pm.PackageManagerException;

        specialinvoke $r1.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(i0, r0);

        throw $r1;

     label1:
        return;
    }

    static java.lang.String cidFromCodePath(java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i2 = i1 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);

        return $r2;
    }

    static java.lang.String getAsecPackageName(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("-");

        if i0 != -1 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    private static java.lang.String getNextCodePath(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r4, $r8, $r13, $r14, r16, r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11, $r12;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 = 1;

        if r0 == null goto label6;

        r4 = r0;

        if r2 == null goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(r2);

        if $z1 == 0 goto label1;

        $i6 = virtualinvoke r4.<java.lang.String: int length()>();

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        $i7 = $i6 - $i5;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

     label1:
        i1 = virtualinvoke r4.<java.lang.String: int lastIndexOf(java.lang.String)>(r1);

        if i1 == -1 goto label6;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = i1 + $i3;

        r16 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i2);

        if r16 == null goto label6;

        $z0 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label2;

        $r14 = "-";

        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();

        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>($i4);

     label2:
        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

        if i8 > 1 goto label3;

        i0 = i8 + 1;

        goto label4;

     label3:
        i0 = i8 + -1;

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

        catch java.lang.NumberFormatException from label2 to label4 with label5;
    }

    private java.io.File getNextCodePath(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r9;
        int i0;
        java.io.File r2, $r3, $r5;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = 1;

     label1:
        $r3 = new java.io.File;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r9);

        r2 = $r3;

        i0 = i0 + 1;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return r2;
    }

    private static boolean ignoreCodePath(java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String deriveCodePathName(java.lang.String)>(r0);

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("-");

        if i0 == -1 goto label4;

        $i1 = i0 + 1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

        $i3 = i0 + 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static java.lang.String deriveCodePathName(java.lang.String)
    {
        java.lang.String r0, r2, $r4, $r9;
        java.io.File r1, $r3;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r0);

        r1 = $r3;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        return r2;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".tmp");

        if $z2 == 0 goto label4;

     label3:
        i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(46);

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r4;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Odd, ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t look like an APK");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r9);

        return null;
    }

    private void installNewPackageLI(android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r38;
        int i0, i1, $i3;
        android.os.UserHandle r2, $r14;
        java.lang.String r3, r5, $r8, $r21, $r26, $r31, $r35, $r37;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r4;
        boolean z0, $z1, $z2;
        java.util.HashMap r6, $r10, $r12, $r13, $r28;
        java.lang.Throwable r7, $r29;
        java.io.File $r9;
        com.android.server.pm.Settings $r11, $r27;
        long $l2;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r15;
        byte $b4;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r30, $r32, $r33, $r36;
        java.lang.Object $r25;
        com.android.server.pm.PackageManagerException $r34, r39;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.UserHandle;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r5 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r9 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getDataPathForPackage(java.lang.String,int)>($r8, 0);

        z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r6 = $r10;

        entermonitor $r10;

     label01:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r11.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $z1 = virtualinvoke $r12.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z1 == 0 goto label03;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to re-install ");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without first uninstalling package running as ");

        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r28 = $r27.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r25 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        $r26 = (java.lang.String) $r25;

        $r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-1, $r31);

        exitmonitor r6;

     label02:
        return;

     label03:
        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $z2 = virtualinvoke $r13.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z2 == 0 goto label05;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to re-install ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without first uninstalling.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-1, $r21);

        exitmonitor r6;

     label04:
        return;

     label05:
        exitmonitor r6;

     label06:
        goto label09;

     label07:
        $r29 := @caughtexception;

        r7 = $r29;

        exitmonitor r6;

     label08:
        throw r7;

     label09:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r38 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r1, i0, i1, $l2, r2);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSettingsLI(android.content.pm.PackageParser$Package,java.lang.String,int[],boolean[],com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r38, r3, null, null, r4);

        $i3 = r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i3 == 1 goto label12;

        $r14 = <android.os.UserHandle: android.os.UserHandle ALL>;

        if z0 == 0 goto label10;

        $b4 = 1;

        goto label11;

     label10:
        $b4 = 0;

     label11:
        $r15 = r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r5, $r14, 0, null, null, $b4, $r15, 1);

     label12:
        goto label14;

     label13:
        $r34 := @caughtexception;

        r39 = $r34;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r37 = r1.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,com.android.server.pm.PackageManagerException)>($r35, r39);

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch com.android.server.pm.PackageManagerException from label09 to label12 with label13;
    }

    private boolean checkUpgradeKeySetLP(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        android.content.pm.PackageParser$Package r2;
        long[] r3;
        com.android.server.pm.KeySetManagerService r4;
        int i0, $i1;
        android.util.ArraySet r5, $r8;
        com.android.server.pm.PackageKeySetData $r6;
        com.android.server.pm.Settings $r7;
        long $l2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r6 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        r3 = virtualinvoke $r6.<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>();

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r4 = $r7.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        i0 = 0;

     label1:
        $i1 = lengthof r3;

        if i0 >= $i1 goto label3;

        $l2 = r3[i0];

        r5 = virtualinvoke r4.<com.android.server.pm.KeySetManagerService: android.util.ArraySet getPublicKeysFromKeySetLPr(long)>($l2);

        $r8 = r2.<android.content.pm.PackageParser$Package: android.util.ArraySet mSigningKeys>;

        $z0 = virtualinvoke $r8.<android.util.ArraySet: boolean containsAll(java.util.Collection)>(r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void replacePackageLI(android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.os.UserHandle r2;
        java.lang.String r3, r6, $r25, $r28;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r4;
        int[] r7;
        boolean[] r8;
        java.util.HashMap r9, $r12, $r14, $r15;
        com.android.server.pm.PackageSetting r10;
        java.lang.Throwable r11, $r31;
        java.lang.Object $r13, $r18;
        com.android.server.pm.Settings $r16;
        android.content.pm.Signature[] $r17, $r19;
        com.android.server.pm.UserManagerService $r20;
        boolean $z0, $z1, $z2, z3;
        java.lang.StringBuilder $r21, $r22, $r23, $r26, $r29, $r30;
        com.android.server.pm.PackageKeySetData $r24;
        com.android.server.pm.SharedUserSetting $r27;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.UserHandle;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r6 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r9 = $r12;

        entermonitor $r12;

     label01:
        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r5 = (android.content.pm.PackageParser$Package) $r13;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r18 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r10 = (com.android.server.pm.PackageSetting) $r18;

        if r10 == null goto label02;

        $r24 = r10.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        $z1 = virtualinvoke $r24.<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>();

        if $z1 == 0 goto label02;

        $r27 = r10.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r27 == null goto label04;

     label02:
        $r19 = r5.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r17 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i3 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r19, $r17);

        if $i3 == 0 goto label06;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New package has a different signature: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-104, $r25);

        exitmonitor r9;

     label03:
        return;

     label04:
        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean checkUpgradeKeySetLP(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r10, r1);

        if $z2 != 0 goto label06;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New package not signed by keys specified by upgrade-keysets: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-104, $r28);

        exitmonitor r9;

     label05:
        return;

     label06:
        $r20 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r7 = virtualinvoke $r20.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $i5 = lengthof r7;

        r8 = newarray (boolean)[$i5];

        i2 = 0;

     label07:
        $i4 = lengthof r7;

        if i2 >= $i4 goto label10;

        if r10 == null goto label08;

        $i6 = r7[i2];

        $z0 = virtualinvoke r10.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i6);

        goto label09;

     label08:
        $z0 = 0;

     label09:
        r8[i2] = $z0;

        i2 = i2 + 1;

        goto label07;

     label10:
        exitmonitor r9;

     label11:
        goto label14;

     label12:
        $r31 := @caughtexception;

        r11 = $r31;

        exitmonitor r9;

     label13:
        throw r11;

     label14:
        z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r5);

        if z3 == 0 goto label15;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void replaceSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r5, r1, i0, i1, r2, r7, r8, r3, r4);

        goto label16;

     label15:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r5, r1, i0, i1, r2, r7, r8, r3, r4);

     label16:
        return;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, int[], boolean[], java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2, r49;
        int i0, i1, i3, $i5, $i8, $i9, $i10, $i11, $i12;
        android.os.UserHandle r3;
        int[] r4, r9, $r15;
        boolean[] r5;
        java.lang.String r6, r8, $r19, $r20, $r22, $r28, $r36, $r38, $r42, $r44;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r7;
        boolean z0, z1, $z2, $z3, $z5, $z7, z8;
        long l2, $l6;
        java.util.ArrayList r10, $r18;
        com.android.server.pm.PackageManagerException r11, $r32, $r46, r50;
        byte b4, $b14, $b15;
        java.lang.Object $r12, $r34;
        java.lang.Throwable r13, $r45;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r14, $r31;
        android.content.pm.ApplicationInfo $r16, $r17;
        java.io.File $r21, r51;
        com.android.server.pm.Settings $r23;
        java.util.HashMap $r25, r52;
        java.lang.StringBuilder $r26, $r27, $r29, $r30, $r35, $r37, $r39, $r40, $r41, $r43, $r47, $r48;
        com.android.server.pm.PackageSetting $r33;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.UserHandle;

        r4 := @parameter5: int[];

        r5 := @parameter6: boolean[];

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        z0 = 1;

        z1 = 0;

        $r12 = r2.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r12 == null goto label01;

        $r34 = r2.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r33 = (com.android.server.pm.PackageSetting) $r34;

        l2 = $r33.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        goto label02;

     label01:
        l2 = 0L;

     label02:
        $r14 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, null, 1, null, null, 1, $r14, 1);

        if $z2 != 0 goto label03;

        virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-10, "replaceNonSystemPackageLI");

        z0 = 0;

        goto label09;

     label03:
        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z3 != 0 goto label04;

        $z7 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z7 == 0 goto label05;

     label04:
        $r15 = newarray (int)[1];

        $r16 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $r15[0] = $i5;

        r9 = $r15;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(1);

        r10 = $r18;

        $r17 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(0, 1, r10, r9, null);

     label05:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: int deleteCodeCacheDirsLI(java.lang.String)>(r8);

     label06:
        $i8 = i1 | 64;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r49 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r2, i0, $i8, $l6, r3);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSettingsLI(android.content.pm.PackageParser$Package,java.lang.String,int[],boolean[],com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r49, r6, r4, r5, r7);

        z1 = 1;

     label07:
        goto label09;

     label08:
        $r46 := @caughtexception;

        r50 = $r46;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r42 = r2.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        $r43 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,com.android.server.pm.PackageManagerException)>($r44, r50);

     label09:
        $i9 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i9 == 1 goto label24;

        if z1 == 0 goto label10;

        $r31 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, null, 1, r4, r5, 1, $r31, 1);

     label10:
        if z0 == 0 goto label24;

        $r21 = new java.io.File;

        $r20 = r1.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r20);

        r51 = $r21;

        z8 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        $i11 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        $i12 = $i11 | 2;

        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z5 == 0 goto label11;

        $b14 = 16;

        goto label12;

     label11:
        $b14 = 0;

     label12:
        $i10 = $i12 | $b14;

        if z8 == 0 goto label13;

        $b15 = 32;

        goto label14;

     label13:
        $b15 = 0;

     label14:
        i3 = $i10 | $b15;

        b4 = 72;

     label15:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>(r51, i3, b4, l2, null);

     label16:
        goto label18;

     label17:
        $r32 := @caughtexception;

        r11 = $r32;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to restore package : ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r35 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after failed upgrade: ");

        $r36 = virtualinvoke r11.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r38);

        return;

     label18:
        $r25 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r52 = $r25;

        entermonitor $r25;

     label19:
        $r22 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r22, r1, 1);

        $r23 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r23.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r52;

     label20:
        goto label23;

     label21:
        $r45 := @caughtexception;

        r13 = $r45;

        exitmonitor r52;

     label22:
        throw r13;

     label23:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully restored package : ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after failed upgrade");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r28);

     label24:
        return;

        catch com.android.server.pm.PackageManagerException from label06 to label07 with label08;
        catch com.android.server.pm.PackageManagerException from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    private void replaceSystemPackageLI(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, int[], boolean[], java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2, r9, r81;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i14;
        android.os.UserHandle r3;
        int[] r4;
        boolean[] r5;
        java.lang.String r6, r8, $r27, $r43, $r50, $r60, $r61, $r62, $r64, $r66, $r76, $r78;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r7;
        boolean z1, z2;
        com.android.server.pm.PackageSetting r10, r82;
        java.util.HashMap r11, $r16, $r17, $r21, $r31, $r38, r80, r85;
        java.lang.Throwable r12, r13, r15, $r74, $r75, $r77;
        android.content.pm.ApplicationInfo $r14, $r25, $r28, $r29, $r35, $r51, $r57, $r58, $r63;
        com.android.server.pm.Settings $r18, $r34, $r37, $r41, $r42;
        java.lang.Object $r19, $r20, $r36, $r47;
        java.lang.StringBuilder $r22, $r23, $r24, $r26, $r45, $r46, $r49, $r54, $r55, $r65, $r67, $r70, $r71, $r72, $r79;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r30, $r32, $r33, $r52;
        com.android.server.pm.SharedUserSetting $r44, $r48, $r53, $r56;
        long $l11, $l12;
        java.lang.String[] $r59;
        com.android.server.pm.PackageManagerException $r68, $r73, r83, r84;
        com.android.server.pm.PackageManagerService$InstallArgs $r69;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.UserHandle;

        r4 := @parameter5: int[];

        r5 := @parameter6: boolean[];

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        z1 = 0;

        i14 = i0 | 1;

        $r14 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r14.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i3 & 1073741824;

        if $i2 == 0 goto label01;

        i14 = i14 | 128;

     label01:
        r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        if r8 != null goto label02;

        virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-10, "Attempt to delete null packageName.");

        return;

     label02:
        $r17 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r11 = $r17;

        entermonitor $r17;

     label03:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r19 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.content.pm.PackageParser$Package) $r19;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r21 = $r18.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r20 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r10 = (com.android.server.pm.PackageSetting) $r20;

        if r9 == null goto label04;

        $r25 = r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r25 == null goto label04;

        if r10 != null goto label06;

     label04:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find package:");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" information");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-10, $r27);

        exitmonitor r11;

     label05:
        return;

     label06:
        exitmonitor r11;

     label07:
        goto label10;

     label08:
        $r75 := @caughtexception;

        r13 = $r75;

        exitmonitor r11;

     label09:
        throw r13;

     label10:
        $r29 = r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r29.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>(r8, $i4, "replace sys pkg");

        $r32 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r28 = r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        $r32.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid> = $i5;

        $r30 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r30.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r8;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>(r10, 1);

        $r31 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r80 = $r31;

        entermonitor $r31;

     label11:
        $r34 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        z2 = virtualinvoke $r34.<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)>(r8);

        if z2 != 0 goto label12;

        if r1 == null goto label12;

        $r52 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r51 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r61 = virtualinvoke $r51.<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>();

        $r63 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r62 = virtualinvoke $r63.<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>();

        $r58 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r60 = $r58.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryRootDir>;

        $r57 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r59 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(android.content.pm.ApplicationInfo)>($r57);

        $r69 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgsForExisting(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(0, $r61, $r62, $r60, $r59);

        $r52.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args> = $r69;

        goto label13;

     label12:
        $r33 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r33.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args> = null;

     label13:
        exitmonitor r80;

     label14:
        goto label17;

     label15:
        $r74 := @caughtexception;

        r12 = $r74;

        exitmonitor r80;

     label16:
        throw r12;

     label17:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: int deleteCodeCacheDirsLI(java.lang.String)>(r8);

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $r35 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r35.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i7 | 128;

        $r35.<android.content.pm.ApplicationInfo: int flags> = $i6;

        r81 = null;

     label18:
        r81 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r2, i14, i1, 0L, r3);

        $r36 = r81.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r36 == null goto label19;

        $r47 = r81.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r82 = (com.android.server.pm.PackageSetting) $r47;

        $l11 = r10.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        r82.<com.android.server.pm.PackageSetting: long firstInstallTime> = $l11;

        $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r82.<com.android.server.pm.PackageSetting: long lastUpdateTime> = $l12;

        $r44 = r10.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r48 = r82.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r44 == $r48 goto label19;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forbidding shared user change from ");

        $r53 = r10.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r54 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r56 = r82.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r49 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-8, $r50);

        z1 = 1;

     label19:
        $i10 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i10 != 1 goto label20;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSettingsLI(android.content.pm.PackageParser$Package,java.lang.String,int[],boolean[],com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r81, r6, r4, r5, r7);

        z1 = 1;

     label20:
        goto label22;

     label21:
        $r73 := @caughtexception;

        r83 = $r73;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r78 = r2.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        $r79 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r76 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,com.android.server.pm.PackageManagerException)>($r76, r83);

     label22:
        $i9 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i9 == 1 goto label33;

        if r81 == null goto label23;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removeInstalledPackageLI(android.content.pm.PackageParser$Package,boolean)>(r81, 1);

     label23:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r9, i14, 8, 0L, r3);

     label24:
        goto label26;

     label25:
        $r68 := @caughtexception;

        r84 = $r68;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to restore original package: ");

        $r64 = virtualinvoke r84.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r66);

     label26:
        $r38 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r85 = $r38;

        entermonitor $r38;

     label27:
        if z2 == 0 goto label28;

        $r41 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r41.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>(r8);

     label28:
        if z1 == 0 goto label29;

        $r42 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r43 = r10.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        virtualinvoke $r42.<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>(r8, $r43);

     label29:
        $r37 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r37.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r85;

     label30:
        goto label33;

     label31:
        $r77 := @caughtexception;

        r15 = $r77;

        exitmonitor r85;

     label32:
        throw r15;

     label33:
        return;

        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label11 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch com.android.server.pm.PackageManagerException from label18 to label20 with label21;
        catch com.android.server.pm.PackageManagerException from label23 to label24 with label25;
        catch java.lang.Throwable from label27 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
    }

    private void updateSettingsLI(android.content.pm.PackageParser$Package, java.lang.String, int[], boolean[], com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        java.lang.String r2, r6, $r16;
        int[] r3, r9, $r22;
        boolean[] r4;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r5;
        java.util.HashMap r7, $r11, $r15, $r23, r27;
        java.lang.Throwable r8, r10, $r25, $r26;
        int i0, i1, i2, $i5, $i6, $i7, $i9, i10;
        com.android.server.pm.Settings $r12, $r13, $r18, $r19, $r20, $r21;
        java.util.ArrayList $r14;
        byte $b4, $b8;
        android.content.pm.ApplicationInfo $r17;
        boolean $z0, $z1;
        java.lang.Object $r24;
        com.android.server.pm.PackageSetting r28;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: int[];

        r4 := @parameter3: boolean[];

        r5 := @parameter4: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r6 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r11;

        entermonitor $r11;

     label01:
        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r12.<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>(r6, 0);

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r13.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r7;

     label02:
        goto label05;

     label03:
        $r25 := @caughtexception;

        r8 = $r25;

        exitmonitor r7;

     label04:
        throw r8;

     label05:
        $r15 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r27 = $r15;

        entermonitor $r15;

     label06:
        $r16 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r14 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i5 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label07;

        $b8 = 1;

        goto label08;

     label07:
        $b8 = 0;

     label08:
        $b4 = 2 | $b8;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r16, r1, $b4);

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z0 == 0 goto label12;

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r23 = $r21.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r28 = (com.android.server.pm.PackageSetting) $r24;

        if r28 == null goto label12;

        $r22 = r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        if $r22 == null goto label10;

        r9 = r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        i0 = lengthof r9;

        i1 = 0;

     label09:
        if i1 >= i0 goto label10;

        i2 = r9[i1];

        virtualinvoke r28.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(0, i2, r2);

        i1 = i1 + 1;

        goto label09;

     label10:
        if r3 == null goto label12;

        if r4 == null goto label12;

        i10 = 0;

     label11:
        $i7 = lengthof r3;

        if i10 >= $i7 goto label12;

        $z1 = r4[i10];

        $i9 = r3[i10];

        virtualinvoke r28.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z1, $i9);

        i10 = i10 + 1;

        goto label11;

     label12:
        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String name> = r6;

        $r17 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int uid> = $i6;

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg> = r1;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r18.<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>(r6, 1);

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>(r6, r2);

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r19.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r27;

     label13:
        goto label16;

     label14:
        $r26 := @caughtexception;

        r10 = $r26;

        exitmonitor r27;

     label15:
        throw r10;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r3, $r14, $r17, $r20, $r58, $r60, $r64, $r66, $r71, $r75, $r81, $r83, $r86, $r90, $r97, $r99, $r101, r110, r111, r112;
        java.io.File r4, $r15;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        android.content.pm.PackageParser r5, $r16;
        android.content.pm.PackageParser$Package r6, $r41, $r43, $r45;
        android.content.pm.PackageParser$PackageParserException r7, r8, $r104, $r105;
        java.util.HashMap r9, $r24, $r25, $r30, $r32, $r37, $r49, $r53, $r56, $r63, r114;
        android.content.pm.PackageParser$Permission r10;
        com.android.server.pm.BasePermission r11;
        java.lang.Throwable r12, r13, $r103, $r106;
        java.lang.String[] $r18;
        android.util.DisplayMetrics $r19;
        android.content.pm.ApplicationInfo $r21, $r42, $r52;
        java.util.ArrayList $r22, $r51, $r55, $r57, $r80;
        android.content.pm.ManifestDigest $r23, $r108, $r109;
        java.lang.Object $r26, $r29, $r36, $r50, $r54, $r59;
        com.android.server.pm.Settings $r27, $r31, $r38, $r48, $r62;
        android.os.UserHandle $r28, $r39;
        int[] $r33, $r34, $r40, $r47;
        com.android.server.pm.UserManagerService $r35, $r46;
        com.android.server.pm.PackageSetting $r44, $r93, $r107, r113, r115;
        android.content.pm.PermissionInfo $r61, $r74, $r87, $r100;
        java.lang.StringBuilder $r65, $r72, $r73, $r76, $r77, $r78, $r79, $r82, $r84, $r85, $r88, $r89, $r98;
        android.content.pm.Signature[] $r67, $r68;
        com.android.server.pm.PackageSettingBase $r69, $r91, $r94, $r95, $r102;
        com.android.server.pm.PackageSignatures $r70;
        com.android.server.pm.PackageKeySetData $r92;
        com.android.server.pm.SharedUserSetting $r96;
        byte $b17, $b18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$InstallArgs;

        r2 := @parameter1: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        i0 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: int installFlags>;

        r3 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String installerPackageName>;

        $r15 = new java.io.File;

        $r14 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String getCodePath()>();

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r14);

        r4 = $r15;

        $i5 = i0 & 1;

        if $i5 == 0 goto label01;

        $z16 = 1;

        goto label02;

     label01:
        $z16 = 0;

     label02:
        z0 = $z16;

        $i4 = i0 & 8;

        if $i4 == 0 goto label03;

        $z15 = 1;

        goto label04;

     label03:
        $z15 = 0;

     label04:
        z1 = $z15;

        z2 = 0;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $i7 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        $i6 = $i7 | 2;

        if z0 == 0 goto label05;

        $b18 = 16;

        goto label06;

     label05:
        $b18 = 0;

     label06:
        $i8 = $i6 | $b18;

        if z1 == 0 goto label07;

        $b17 = 32;

        goto label08;

     label07:
        $b17 = 0;

     label08:
        i1 = $i8 | $b17;

        $r16 = new android.content.pm.PackageParser;

        specialinvoke $r16.<android.content.pm.PackageParser: void <init>()>();

        r5 = $r16;

        $r18 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses>;

        virtualinvoke r5.<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>($r18);

        $r19 = r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        virtualinvoke r5.<android.content.pm.PackageParser: void setDisplayMetrics(android.util.DisplayMetrics)>($r19);

     label09:
        r6 = virtualinvoke r5.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,int)>(r4, i1);

     label10:
        goto label12;

     label11:
        $r104 := @caughtexception;

        r7 = $r104;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,android.content.pm.PackageParser$PackageParserException)>("Failed parse during installPackageLI", r7);

        return;

     label12:
        $r17 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String abiOverride>;

        r6.<android.content.pm.PackageParser$Package: java.lang.String cpuAbiOverride> = $r17;

        $r20 = r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String name> = $r20;

        r110 = $r20;

        $r21 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r21.<android.content.pm.ApplicationInfo: int flags>;

        $i10 = $i9 & 256;

        if $i10 == 0 goto label13;

        $i16 = i0 & 4;

        if $i16 != 0 goto label13;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-15, "installPackageLI");

        return;

     label13:
        virtualinvoke r5.<android.content.pm.PackageParser: void collectCertificates(android.content.pm.PackageParser$Package,int)>(r6, i1);

        virtualinvoke r5.<android.content.pm.PackageParser: void collectManifestDigest(android.content.pm.PackageParser$Package)>(r6);

     label14:
        goto label16;

     label15:
        $r105 := @caughtexception;

        r8 = $r105;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,android.content.pm.PackageParser$PackageParserException)>("Failed collect during installPackageLI", r8);

        return;

     label16:
        $r23 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.ManifestDigest manifestDigest>;

        if $r23 == null goto label17;

        $r109 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.ManifestDigest manifestDigest>;

        $r108 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ManifestDigest manifestDigest>;

        $z17 = virtualinvoke $r109.<android.content.pm.ManifestDigest: boolean equals(java.lang.Object)>($r108);

        if $z17 != 0 goto label17;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-23, "Manifest digest changed");

        return;

     label17:
        r111 = null;

        z3 = 0;

        $r24 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r9 = $r24;

        entermonitor $r24;

     label18:
        $r22 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        i2 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        i3 = i2 - 1;

     label19:
        if i3 < 0 goto label28;

        $r55 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r54 = virtualinvoke $r55.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r10 = (android.content.pm.PackageParser$Permission) $r54;

        $r62 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r63 = $r62.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r61 = r10.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r64 = $r61.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r59 = virtualinvoke $r63.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r64);

        r11 = (com.android.server.pm.BasePermission) $r59;

        if r11 == null goto label27;

        $r60 = r11.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r58 = r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z10 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>($r58);

        if $z10 == 0 goto label20;

        $r102 = r11.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $z12 = $r102 instanceof com.android.server.pm.PackageSetting;

        if $z12 == 0 goto label20;

        $r91 = r11.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $r92 = $r91.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageKeySetData keySetData>;

        $z13 = virtualinvoke $r92.<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>();

        if $z13 == 0 goto label20;

        $r94 = r11.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $r93 = (com.android.server.pm.PackageSetting) $r94;

        $r96 = $r93.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r96 == null goto label23;

     label20:
        $r69 = r11.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $r70 = $r69.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageSignatures signatures>;

        $r68 = $r70.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r67 = r6.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i15 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r68, $r67);

        if $i15 != 0 goto label21;

        $z14 = 1;

        goto label22;

     label21:
        $z14 = 0;

     label22:
        z4 = $z14;

        goto label24;

     label23:
        $r95 = r11.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $r107 = (com.android.server.pm.PackageSetting) $r95;

        z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean checkUpgradeKeySetLP(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>($r107, r6);

     label24:
        if z4 != 0 goto label27;

        $r66 = r11.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z11 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z11 != 0 goto label26;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r90 = r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r89 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempting to redeclare permission ");

        $r87 = r10.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r86 = $r87.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r85 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already owned by ");

        $r83 = r11.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r98 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-112, $r97);

        $r100 = r10.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r99 = $r100.<android.content.pm.PermissionInfo: java.lang.String name>;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String origPermission> = $r99;

        $r101 = r11.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String origPackage> = $r101;

        exitmonitor r9;

     label25:
        return;

     label26:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r75 = r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r73 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempting to redeclare system permission ");

        $r74 = r10.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r71 = $r74.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r82 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring new declaration");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r81);

        $r80 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        virtualinvoke $r80.<java.util.ArrayList: java.lang.Object remove(int)>(i3);

     label27:
        i3 = i3 + -1;

        goto label19;

     label28:
        $i11 = i0 & 2;

        if $i11 == 0 goto label30;

        $r48 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r49 = $r48.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r50 = virtualinvoke $r49.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r110);

        r112 = (java.lang.String) $r50;

        $r51 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        if $r51 == null goto label29;

        $r57 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $z9 = virtualinvoke $r57.<java.util.ArrayList: boolean contains(java.lang.Object)>(r112);

        if $z9 == 0 goto label29;

        $r53 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $z7 = virtualinvoke $r53.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r112);

        if $z7 == 0 goto label29;

        virtualinvoke r6.<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>(r112);

        r110 = r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        z2 = 1;

        goto label30;

     label29:
        $r56 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $z8 = virtualinvoke $r56.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r110);

        if $z8 == 0 goto label30;

        z2 = 1;

     label30:
        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r25 = $r27.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r26 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r110);

        r113 = (com.android.server.pm.PackageSetting) $r26;

        if r113 == null goto label34;

        $r38 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r37 = $r38.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r36 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r110);

        $r44 = (com.android.server.pm.PackageSetting) $r36;

        r111 = $r44.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r45 = r113.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r45 == null goto label33;

        $r41 = r113.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r42 = $r41.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r42 == null goto label33;

        $r43 = r113.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r52 = $r43.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r52.<android.content.pm.ApplicationInfo: int flags>;

        $i14 = $i13 & 1;

        if $i14 == 0 goto label31;

        $z6 = 1;

        goto label32;

     label31:
        $z6 = 0;

     label32:
        z3 = $z6;

     label33:
        $r46 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r47 = virtualinvoke $r46.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r40 = virtualinvoke r113.<com.android.server.pm.PackageSetting: int[] queryInstalledUsers(int[],boolean)>($r47, 1);

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers> = $r40;

     label34:
        exitmonitor r9;

     label35:
        goto label38;

     label36:
        $r106 := @caughtexception;

        r13 = $r106;

        exitmonitor r9;

     label37:
        throw r13;

     label38:
        if z3 == 0 goto label39;

        if z1 == 0 goto label39;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-19, "Cannot install updates to system apps on sdcard");

        return;

     label39:
        $i12 = r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        $z5 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: boolean doRename(int,android.content.pm.PackageParser$Package,java.lang.String)>($i12, r6, r111);

        if $z5 != 0 goto label40;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>(-4, "Failed rename");

        return;

     label40:
        if z2 == 0 goto label41;

        $r39 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void replacePackageLI(android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r6, i1, 2076, $r39, r3, r2);

        goto label42;

     label41:
        $r28 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void installNewPackageLI(android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r6, i1, 1052, $r28, r3, r2);

     label42:
        $r32 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r114 = $r32;

        entermonitor $r32;

     label43:
        $r31 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r30 = $r31.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r29 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r110);

        r115 = (com.android.server.pm.PackageSetting) $r29;

        if r115 == null goto label44;

        $r35 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r34 = virtualinvoke $r35.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r33 = virtualinvoke r115.<com.android.server.pm.PackageSetting: int[] queryInstalledUsers(int[],boolean)>($r34, 1);

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] newUsers> = $r33;

     label44:
        exitmonitor r114;

     label45:
        goto label48;

     label46:
        $r103 := @caughtexception;

        r12 = $r103;

        exitmonitor r114;

     label47:
        throw r12;

     label48:
        return;

        catch android.content.pm.PackageParser$PackageParserException from label09 to label10 with label11;
        catch android.content.pm.PackageParser$PackageParserException from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label25 with label36;
        catch java.lang.Throwable from label26 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.Throwable from label43 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
    }

    private static boolean isForwardLocked(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 536870912;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isForwardLocked(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 536870912;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isForwardLocked(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r1.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & 536870912;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isMultiArch(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isMultiArch(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isExternal(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isExternal(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isExternal(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSystemApp(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isPrivilegedApp(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1073741824;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSystemApp(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSystemApp(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isUpdatedSystemApp(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        byte b0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        b0 = 0;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(com.android.server.pm.PackageSetting)>(r1);

        if $z0 == 0 goto label1;

        b0 = b0 | 8;

     label1:
        $z1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isForwardLocked(com.android.server.pm.PackageSetting)>(r1);

        if $z1 == 0 goto label2;

        b0 = b0 | 1;

     label2:
        return b0;
    }

    private void deleteTempPackageFiles()
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$7 r1, $r4;
        java.io.File[] r2;
        int i0, i1;
        java.io.File r3, $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r4 = new com.android.server.pm.PackageManagerService$7;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$7: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r1 = $r4;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        r2 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(r1);

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r3.<java.io.File: boolean delete()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void deletePackageAsUser(java.lang.String, android.content.pm.IPackageDeleteObserver, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageDeleteObserver r2;
        int i0, i1;
        android.content.pm.PackageManager$LegacyPackageDeleteObserver $r3;
        android.content.pm.IPackageDeleteObserver2 $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDeleteObserver;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = new android.content.pm.PackageManager$LegacyPackageDeleteObserver;

        specialinvoke $r3.<android.content.pm.PackageManager$LegacyPackageDeleteObserver: void <init>(android.content.pm.IPackageDeleteObserver)>(r2);

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager$LegacyPackageDeleteObserver: android.content.pm.IPackageDeleteObserver2 getBinder()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver2,int,int)>(r1, $r4, i0, i1);

        return;
    }

    public void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver2, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r14;
        android.content.pm.IPackageDeleteObserver2 r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        int[] r4;
        android.content.Context $r5, $r10;
        boolean $z0, $z2, z3;
        com.android.server.pm.PackageManagerService$8 $r6;
        com.android.server.pm.PackageManagerService$PackageHandler $r7;
        com.android.server.pm.UserManagerService $r8;
        java.lang.StringBuilder $r9, $r11, $r12;
        android.os.RemoteException $r13, $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDeleteObserver2;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_PACKAGES", null);

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        if $i4 == i0 goto label01;

        $r10 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deletePackage for user ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", $r14);

     label01:
        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>(i0, "no_uninstall_apps");

        if $z0 == 0 goto label06;

     label02:
        interfaceinvoke r2.<android.content.pm.IPackageDeleteObserver2: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, -3, null);

     label03:
        goto label05;

     label04:
        $r13 := @caughtexception;

     label05:
        return;

     label06:
        z3 = 0;

        $i5 = i1 & 2;

        if $i5 == 0 goto label10;

        $r8 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r4 = virtualinvoke $r8.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i3 = 0;

     label07:
        $i7 = lengthof r4;

        if i3 >= $i7 goto label09;

        $i6 = r4[i3];

        $z2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean getBlockUninstallForUser(java.lang.String,int)>(r1, $i6);

        if $z2 == 0 goto label08;

        z3 = 1;

        goto label09;

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        goto label11;

     label10:
        z3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean getBlockUninstallForUser(java.lang.String,int)>(r1, i0);

     label11:
        if z3 == 0 goto label16;

     label12:
        interfaceinvoke r2.<android.content.pm.IPackageDeleteObserver2: void onPackageDeleted(java.lang.String,int,java.lang.String)>(r1, -4, null);

     label13:
        goto label15;

     label14:
        $r15 := @caughtexception;

     label15:
        return;

     label16:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r6 = new com.android.server.pm.PackageManagerService$8;

        specialinvoke $r6.<com.android.server.pm.PackageManagerService$8: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,int,android.content.pm.IPackageDeleteObserver2)>(r0, r1, i0, i1, r2);

        virtualinvoke $r7.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r6);

        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label12 to label13 with label14;
    }

    private boolean isPackageDeviceAdmin(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        android.app.admin.IDevicePolicyManager r2;
        int[] r3, $r5;
        android.os.IBinder $r4;
        boolean $z0, $z1;
        com.android.server.pm.UserManagerService $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("device_policy");

        r2 = staticinvoke <android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>($r4);

     label01:
        if r2 == null goto label09;

        $z0 = interfaceinvoke r2.<android.app.admin.IDevicePolicyManager: boolean isDeviceOwner(java.lang.String)>(r1);

        if $z0 == 0 goto label03;

     label02:
        return 1;

     label03:
        if i0 != -1 goto label04;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r3 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        goto label05;

     label04:
        $r5 = newarray (int)[1];

        $r5[0] = i0;

        r3 = $r5;

     label05:
        i1 = 0;

     label06:
        $i2 = lengthof r3;

        if i1 >= $i2 goto label09;

        $i3 = r3[i1];

        $z1 = interfaceinvoke r2.<android.app.admin.IDevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String,int)>(r1, $i3);

        if $z1 == 0 goto label08;

     label07:
        return 1;

     label08:
        i1 = i1 + 1;

        goto label06;

     label09:
        goto label11;

     label10:
        $r7 := @caughtexception;

     label11:
        return 0;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label07 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private int deletePackageX(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r28;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r2, $r10;
        boolean z0, z1, $z3, $z5, z6;
        android.os.UserHandle r3, $r12;
        int[] r4;
        boolean[] r5;
        java.util.HashMap r6, $r14, $r16, $r25;
        com.android.server.pm.PackageSetting r7;
        java.lang.Throwable r8, r9, r11, $r31, $r32, $r33;
        com.android.server.pm.Settings $r13;
        java.lang.Object $r15, $r18, $r20, $r24, r34, r36;
        com.android.server.pm.UserManagerService $r17;
        java.lang.Runtime $r19;
        com.android.server.pm.PackageManagerService$InstallArgs $r21, $r22;
        byte $b8;
        android.os.Bundle $r23, r35;
        java.lang.StringBuilder $r26, $r27, $r29, $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r10 = new com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r10.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>();

        r2 = $r10;

        $i3 = i1 & 2;

        if $i3 == 0 goto label01;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        goto label02;

     label01:
        $r12 = new android.os.UserHandle;

        specialinvoke $r12.<android.os.UserHandle: void <init>(int)>(i0);

     label02:
        r3 = $r12;

        $i4 = virtualinvoke r3.<android.os.UserHandle: int getIdentifier()>();

        $z3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdmin(java.lang.String,int)>(r1, $i4);

        if $z3 == 0 goto label03;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not removing package ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": has active device admin");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        return -2;

     label03:
        z1 = 0;

        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r6 = $r14;

        entermonitor $r14;

     label04:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (com.android.server.pm.PackageSetting) $r15;

        $r17 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r4 = virtualinvoke $r17.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $i6 = lengthof r4;

        r5 = newarray (boolean)[$i6];

        i2 = 0;

     label05:
        $i5 = lengthof r4;

        if i2 >= $i5 goto label08;

        if r7 == null goto label06;

        $i10 = r4[i2];

        $z5 = virtualinvoke r7.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i10);

        goto label07;

     label06:
        $z5 = 0;

     label07:
        r5[i2] = $z5;

        i2 = i2 + 1;

        goto label05;

     label08:
        exitmonitor r6;

     label09:
        goto label12;

     label10:
        $r31 := @caughtexception;

        r8 = $r31;

        exitmonitor r6;

     label11:
        throw r8;

     label12:
        $r18 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r34 = $r18;

        entermonitor $r18;

     label13:
        $i7 = i1 | 65536;

        z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r1, r3, 1, r4, r5, $i7, r2, 1);

        z6 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: boolean isRemovedPackageSystemUpdate>;

        if z0 == 0 goto label14;

        if z6 != 0 goto label14;

        $r25 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r24 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r24 != null goto label14;

        z1 = 1;

     label14:
        exitmonitor r34;

     label15:
        goto label18;

     label16:
        $r32 := @caughtexception;

        r9 = $r32;

        exitmonitor r34;

     label17:
        throw r9;

     label18:
        if z0 == 0 goto label21;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)>(1, z6, z1);

        if z6 == 0 goto label21;

        $r23 = new android.os.Bundle;

        specialinvoke $r23.<android.os.Bundle: void <init>(int)>(1);

        r35 = $r23;

        $i9 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId>;

        if $i9 < 0 goto label19;

        $i11 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId>;

        goto label20;

     label19:
        $i11 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid>;

     label20:
        virtualinvoke r35.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", $i11);

        virtualinvoke r35.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", 1);

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_ADDED", r1, r35, null, null, null);

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_REPLACED", r1, r35, null, null, null);

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.MY_PACKAGE_REPLACED", null, null, r1, null, null);

     label21:
        $r19 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r19.<java.lang.Runtime: void gc()>();

        $r22 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args>;

        if $r22 == null goto label26;

        $r20 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r36 = $r20;

        entermonitor $r20;

     label22:
        $r21 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args>;

        virtualinvoke $r21.<com.android.server.pm.PackageManagerService$InstallArgs: boolean doPostDeleteLI(boolean)>(1);

        exitmonitor r36;

     label23:
        goto label26;

     label24:
        $r33 := @caughtexception;

        r11 = $r33;

        exitmonitor r36;

     label25:
        throw r11;

     label26:
        if z0 == 0 goto label27;

        $b8 = 1;

        goto label28;

     label27:
        $b8 = -1;

     label28:
        return $b8;

        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    private void removePackageDataLI(com.android.server.pm.PackageSetting, int[], boolean[], com.android.server.pm.PackageManagerService$PackageRemovedInfo, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1, r6;
        int[] r2, $r18, $r25, $r27;
        boolean[] r3;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9;
        boolean z0, $z1, $z3;
        java.lang.String r5, $r16, $r17;
        java.util.HashMap r7, $r10, $r12, $r14, r29;
        java.lang.Throwable r8, r9, $r26, $r28;
        com.android.server.pm.Settings $r11, $r15, $r21, $r22, $r23;
        java.lang.Object $r13;
        com.android.server.pm.SharedUserSetting $r19;
        com.android.server.pm.KeySetManagerService $r20;
        com.android.server.pm.UserManagerService $r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: int[];

        r3 := @parameter2: boolean[];

        r4 := @parameter3: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $i1 = i0 & 65536;

        if $i1 == 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>(r1, $z3);

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r10;

        entermonitor $r10;

     label03:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r11.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.PackageSetting) $r13;

        if r4 == null goto label06;

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r5;

        if r6 == null goto label04;

        $r24 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r25 = virtualinvoke $r24.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r27 = virtualinvoke r6.<com.android.server.pm.PackageSetting: int[] queryInstalledUsers(int[],boolean)>($r25, 1);

        goto label05;

     label04:
        $r27 = null;

     label05:
        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int[] removedUsers> = $r27;

     label06:
        exitmonitor r7;

     label07:
        goto label10;

     label08:
        $r26 := @caughtexception;

        r8 = $r26;

        exitmonitor r7;

     label09:
        throw r8;

     label10:
        $i2 = i0 & 1;

        if $i2 != 0 goto label11;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>(r5);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void schedulePackageCleaning(java.lang.String,int,boolean)>(r5, -1, 1);

     label11:
        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r29 = $r14;

        entermonitor $r14;

     label12:
        if r6 == null goto label17;

        $i4 = i0 & 1;

        if $i4 != 0 goto label15;

        if r4 == null goto label13;

        $r23 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r20 = $r23.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        virtualinvoke $r20.<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>(r5);

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i7 = virtualinvoke $r21.<com.android.server.pm.Settings: int removePackageLPw(java.lang.String)>(r5);

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId> = $i7;

     label13:
        if r6 == null goto label14;

        $r17 = r6.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r17, null, 0);

        $r19 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r19 == null goto label14;

        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        virtualinvoke $r22.<com.android.server.pm.Settings: void updateSharedUserPermsLPw(com.android.server.pm.PackageSetting,int[])>(r6, $r18);

     label14:
        $r16 = r6.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>($r16, -1);

     label15:
        if r2 == null goto label17;

        if r3 == null goto label17;

        i9 = 0;

     label16:
        $i6 = lengthof r2;

        if i9 >= $i6 goto label17;

        $z1 = r3[i9];

        $i5 = r2[i9];

        virtualinvoke r1.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z1, $i5);

        i9 = i9 + 1;

        goto label16;

     label17:
        if z0 == 0 goto label18;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r15.<com.android.server.pm.Settings: void writeLPr()>();

     label18:
        exitmonitor r29;

     label19:
        goto label22;

     label20:
        $r28 := @caughtexception;

        r9 = $r28;

        exitmonitor r29;

     label21:
        throw r9;

     label22:
        if r4 == null goto label23;

        $i3 = r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId>;

        staticinvoke <com.android.server.pm.PackageManagerService: void removeKeystoreDataIfNeeded(int,int)>(-1, $i3);

     label23:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label12 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    static boolean locationIsPrivileged(java.io.File)
    {
        java.io.File r0, $r2, $r3;
        java.lang.String r1, $r4, $r9;
        boolean $z0;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: java.io.File;

     label1:
        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "priv-app");

        r1 = virtualinvoke $r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to access code path ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r9);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private boolean deleteSystemPackageLI(com.android.server.pm.PackageSetting, int[], boolean[], int, com.android.server.pm.PackageManagerService$PackageRemovedInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1, r9, r45;
        int[] r2;
        boolean[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r4;
        boolean z0, z1, $z2, $z3, $z4, z5;
        java.util.HashMap r5, $r12, $r15, $r19, $r25, r46, r48;
        java.lang.Throwable r6, r7, r10, $r33, $r36, $r40;
        com.android.server.pm.PackageManagerException r8, $r35;
        java.lang.String $r11, $r14, $r17, $r23, $r24, $r29, $r31, $r38, $r42, $r44;
        com.android.server.pm.Settings $r13, $r16, $r20, $r26, $r27;
        java.io.File $r18, $r21;
        java.lang.Object $r22;
        java.lang.StringBuilder $r28, $r30, $r32, $r34, $r37, $r39, $r41, $r43;
        short s7;
        android.content.pm.PackageParser$Package r47;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: int[];

        r3 := @parameter2: boolean[];

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        z0 := @parameter5: boolean;

        if r2 == null goto label01;

        if r3 == null goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z1 = $z4;

        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r5 = $r12;

        entermonitor $r12;

     label03:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r45 = virtualinvoke $r13.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r11);

        exitmonitor r5;

     label04:
        goto label07;

     label05:
        $r36 := @caughtexception;

        r6 = $r36;

        exitmonitor r5;

     label06:
        throw r6;

     label07:
        if r45 != null goto label08;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to delete unknown system package ");

        $r31 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r29);

        return 0;

     label08:
        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: boolean isRemovedPackageSystemUpdate> = 1;

        $i3 = r45.<com.android.server.pm.PackageSetting: int versionCode>;

        $i2 = r1.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i3 >= $i2 goto label09;

        i6 = i0 & -2;

        goto label10;

     label09:
        i6 = i0 | 1;

     label10:
        z5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteInstalledPackageLI(com.android.server.pm.PackageSetting,boolean,int,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r1, 1, i6, r2, r3, r4, z0);

        if z5 != 0 goto label11;

        return 0;

     label11:
        $r15 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r46 = $r15;

        entermonitor $r15;

     label12:
        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r16.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>($r14);

        $r17 = r1.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        staticinvoke <com.android.internal.content.NativeLibraryHelper: void removeNativeBinariesLI(java.lang.String)>($r17);

        exitmonitor r46;

     label13:
        goto label16;

     label14:
        $r40 := @caughtexception;

        r7 = $r40;

        exitmonitor r46;

     label15:
        throw r7;

     label16:
        s7 = 5;

        $r18 = r45.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>($r18);

        if $z2 == 0 goto label17;

        s7 = 133;

     label17:
        $r21 = r45.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        r47 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>($r21, s7, 32, 0L, null);

     label18:
        goto label20;

     label19:
        $r35 := @caughtexception;

        r8 = $r35;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to restore system package:");

        $r38 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r42 = virtualinvoke r8.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r44);

        return 0;

     label20:
        $r19 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r48 = $r19;

        entermonitor $r19;

     label21:
        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r25 = $r20.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r24 = r47.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r22 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r24);

        r9 = (com.android.server.pm.PackageSetting) $r22;

        $r23 = r47.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r23, r47, 3);

        if z1 == 0 goto label24;

        i1 = 0;

     label22:
        $i4 = lengthof r2;

        if i1 >= $i4 goto label23;

        $z3 = r3[i1];

        $i5 = r2[i1];

        virtualinvoke r9.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z3, $i5);

        i1 = i1 + 1;

        goto label22;

     label23:
        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r26.<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>();

     label24:
        if z0 == 0 goto label25;

        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r27.<com.android.server.pm.Settings: void writeLPr()>();

     label25:
        exitmonitor r48;

     label26:
        goto label29;

     label27:
        $r33 := @caughtexception;

        r10 = $r33;

        exitmonitor r48;

     label28:
        throw r10;

     label29:
        return 1;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch com.android.server.pm.PackageManagerException from label17 to label18 with label19;
        catch java.lang.Throwable from label21 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    private boolean deleteInstalledPackageLI(com.android.server.pm.PackageSetting, boolean, int, int[], boolean[], com.android.server.pm.PackageManagerService$PackageRemovedInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        boolean z0, z1;
        int i0, $i1, $i2;
        int[] r2;
        boolean[] r3;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r4;
        java.lang.String $r5, $r6, $r7;
        java.lang.String[] $r8;
        com.android.server.pm.PackageManagerService$InstallArgs $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: int[];

        r3 := @parameter4: boolean[];

        r4 := @parameter5: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        z1 := @parameter6: boolean;

        if r4 == null goto label1;

        $i2 = r1.<com.android.server.pm.PackageSetting: int appId>;

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid> = $i2;

     label1:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageDataLI(com.android.server.pm.PackageSetting,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,int,boolean)>(r1, r2, r3, r4, i0, z1);

        if z0 == 0 goto label2;

        if r4 == null goto label2;

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)>(r1);

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r6 = r1.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r7 = r1.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $r8 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>(r1);

        $r9 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgsForExisting(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i1, $r5, $r6, $r7, $r8);

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args> = $r9;

     label2:
        return 1;
    }

    public boolean setBlockUninstallForUser(java.lang.String, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r13, $r18;
        boolean z0, $z1;
        int i0;
        java.util.HashMap r2, $r6, $r8;
        com.android.server.pm.PackageSetting r3;
        java.lang.Throwable r4, $r19;
        android.content.Context $r5;
        com.android.server.pm.Settings $r7, $r10;
        java.lang.Object $r9;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r16, $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_PACKAGES", null);

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r7.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.PackageSetting) $r9;

        if r3 != null goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package doesn\'t exist in set block uninstall ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r18);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $z1 = virtualinvoke r3.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>(i0);

        if $z1 != 0 goto label5;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package not installed in set block uninstall ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r13);

        exitmonitor r2;

     label4:
        return 0;

     label5:
        virtualinvoke r3.<com.android.server.pm.PackageSetting: void setBlockUninstall(boolean,int)>(z0, i0);

        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r10.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return 1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean getBlockUninstallForUser(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r12;
        int i0;
        java.util.HashMap r2, $r5, $r7;
        com.android.server.pm.PackageSetting r3;
        java.lang.Throwable r4, $r13;
        com.android.server.pm.Settings $r6;
        java.lang.Object $r8;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.pm.PackageSetting) $r8;

        if r3 != null goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package doesn\'t exist in get block uninstall ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r12);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke r3.<com.android.server.pm.PackageSetting: boolean getBlockUninstall(int)>(i0);

        exitmonitor r2;

     label4:
        return $z0;

     label5:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean deletePackageLI(java.lang.String, android.os.UserHandle, boolean, int[], boolean[], int, com.android.server.pm.PackageManagerService$PackageRemovedInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r21;
        android.os.UserHandle r2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, z8;
        int[] r3, $r14, $r15;
        boolean[] r4;
        int i0, i1, i2, $i3, $i5, $i6, $i7, $i8;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r5;
        com.android.server.pm.PackageSetting r6;
        java.util.HashMap r7, $r9, $r10;
        java.lang.Throwable r8, $r24;
        com.android.server.pm.Settings $r11, $r16, $r18;
        java.lang.Object $r12;
        com.android.server.pm.Installer $r13;
        com.android.server.pm.UserManagerService $r17;
        java.lang.StringBuilder $r19, $r20, $r22, $r23;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        z0 := @parameter2: boolean;

        r3 := @parameter3: int[];

        r4 := @parameter4: boolean[];

        i0 := @parameter5: int;

        r5 := @parameter6: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        z1 := @parameter7: boolean;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label01:
        z2 = 0;

        i1 = -1;

        i2 = -1;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r9;

        entermonitor $r9;

     label02:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r11.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (com.android.server.pm.PackageSetting) $r12;

        if r6 != null goto label04;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

        exitmonitor r7;

     label03:
        return 0;

     label04:
        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r6);

        if $z3 == 0 goto label05;

        $i8 = i0 & 4;

        if $i8 == 0 goto label08;

     label05:
        if r2 == null goto label08;

        $i6 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        if $i6 == -1 goto label08;

        $i5 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r6.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,java.util.HashSet,java.util.HashSet,boolean)>($i5, 0, 0, 1, 1, 0, null, null, null, 0);

        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r6);

        if $z5 != 0 goto label07;

        $r17 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r15 = virtualinvoke $r17.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $z6 = virtualinvoke r6.<com.android.server.pm.PackageSetting: boolean isAnyInstalled(int[])>($r15);

        if $z6 == 0 goto label06;

        i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        i2 = r6.<com.android.server.pm.PackageSetting: int appId>;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r18.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        goto label08;

     label06:
        $i7 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r6.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, $i7);

        goto label08;

     label07:
        i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        i2 = r6.<com.android.server.pm.PackageSetting: int appId>;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r16.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

     label08:
        exitmonitor r7;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        r8 = $r24;

        exitmonitor r7;

     label11:
        throw r8;

     label12:
        if i1 < 0 goto label14;

        if r5 == null goto label13;

        r5.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r1;

        r5.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId> = i2;

        $r14 = newarray (int)[1];

        $r14[0] = i1;

        r5.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int[] removedUsers> = $r14;

     label13:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r13.<com.android.server.pm.Installer: int clearUserData(java.lang.String,int)>(r1, i1);

        staticinvoke <com.android.server.pm.PackageManagerService: void removeKeystoreDataIfNeeded(int,int)>(i1, i2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void schedulePackageCleaning(java.lang.String,int,boolean)>(r1, i1, 0);

        return 1;

     label14:
        if z2 == 0 goto label15;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageDataLI(com.android.server.pm.PackageSetting,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,int,boolean)>(r6, null, null, r5, i0, z1);

        return 1;

     label15:
        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r6);

        if $z4 == 0 goto label16;

        z8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteSystemPackageLI(com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r6, r3, r4, i0, r5, z1);

        goto label17;

     label16:
        $i3 = r6.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>(r1, $i3, "uninstall pkg");

        z8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteInstalledPackageLI(com.android.server.pm.PackageSetting,boolean,int,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r6, z0, i0, r3, r4, r5, z1);

     label17:
        return z8;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void clearExternalStorageDataSync(java.lang.String, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        int[] r3, r5, $r13;
        com.android.server.pm.PackageManagerService$ClearStorageConnection r4, r6, $r12;
        long l4, l5, $l6, $l8;
        java.lang.Throwable r8, r9, $r29, $r31;
        android.content.Intent $r10, r33;
        android.content.ComponentName $r11;
        android.content.Context $r14, $r16, $r27, $r30;
        android.os.UserHandle $r15;
        com.android.internal.app.IMediaContainerService $r17, $r20, $r21, $r23, $r25;
        android.os.Environment$UserEnvironment $r19, r34;
        java.io.File[] $r22, $r24, $r26;
        byte $b7;
        com.android.server.pm.UserManagerService $r28;
        java.lang.InterruptedException $r32;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z2 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        if $z2 == 0 goto label01;

        z1 = 1;

        goto label05;

     label01:
        r2 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z3 != 0 goto label02;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted_ro");

        if $z6 == 0 goto label03;

     label02:
        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z1 = $z5;

     label05:
        if z1 != 0 goto label06;

        return;

     label06:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>()>();

        $r11 = <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT>;

        r33 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r11);

        if i0 != -1 goto label07;

        $r28 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r3 = virtualinvoke $r28.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        goto label08;

     label07:
        $r13 = newarray (int)[1];

        $r13[0] = i0;

        r3 = $r13;

     label08:
        $r12 = new com.android.server.pm.PackageManagerService$ClearStorageConnection;

        specialinvoke $r12.<com.android.server.pm.PackageManagerService$ClearStorageConnection: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r4 = $r12;

        $r14 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r15 = <android.os.UserHandle: android.os.UserHandle OWNER>;

        $z4 = virtualinvoke $r14.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r33, r4, 1, $r15);

        if $z4 == 0 goto label27;

     label09:
        r5 = r3;

        i1 = lengthof r5;

        i2 = 0;

     label10:
        if i2 >= i1 goto label24;

        i3 = r5[i2];

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = $l6 + 5000L;

        r6 = r4;

        entermonitor r4;

     label11:
        l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label12:
        $r17 = r4.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        if $r17 != null goto label16;

        $b7 = l5 cmp l4;

        if $b7 >= 0 goto label16;

     label13:
        $l8 = l4 - l5;

        virtualinvoke r4.<java.lang.Object: void wait(long)>($l8);

     label14:
        goto label12;

     label15:
        $r32 := @caughtexception;

        goto label12;

     label16:
        exitmonitor r6;

     label17:
        goto label20;

     label18:
        $r29 := @caughtexception;

        r9 = $r29;

        exitmonitor r6;

     label19:
        throw r9;

     label20:
        $r21 = r4.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        if $r21 != null goto label22;

     label21:
        $r27 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r27.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r4);

        return;

     label22:
        $r19 = new android.os.Environment$UserEnvironment;

        specialinvoke $r19.<android.os.Environment$UserEnvironment: void <init>(int)>(i3);

        r34 = $r19;

        $r20 = r4.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        $r24 = virtualinvoke r34.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)>(r1);

        staticinvoke <com.android.server.pm.PackageManagerService: void clearDirectory(com.android.internal.app.IMediaContainerService,java.io.File[])>($r20, $r24);

        if z0 == 0 goto label23;

        $r25 = r4.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        $r22 = virtualinvoke r34.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)>(r1);

        staticinvoke <com.android.server.pm.PackageManagerService: void clearDirectory(com.android.internal.app.IMediaContainerService,java.io.File[])>($r25, $r22);

        $r23 = r4.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        $r26 = virtualinvoke r34.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)>(r1);

        staticinvoke <com.android.server.pm.PackageManagerService: void clearDirectory(com.android.internal.app.IMediaContainerService,java.io.File[])>($r23, $r26);

     label23:
        i2 = i2 + 1;

        goto label10;

     label24:
        $r16 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r16.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r4);

        goto label27;

     label25:
        $r31 := @caughtexception;

        r8 = $r31;

     label26:
        $r30 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r30.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r4);

        throw r8;

     label27:
        return;

        catch java.lang.InterruptedException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label09 to label21 with label25;
        catch java.lang.Throwable from label22 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    public void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        int i0, $i1;
        android.content.Context $r3;
        com.android.server.pm.PackageManagerService$9 $r4;
        com.android.server.pm.PackageManagerService$PackageHandler $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_USER_DATA", null);

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>($i1, i0, 1, 0, "clear application data");

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r4 = new com.android.server.pm.PackageManagerService$9;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$9: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>(r0, r1, i0, r2);

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    private boolean clearApplicationUserDataLI(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r11, $r13, $r14, $r21, $r29, r32;
        int i0, $i1, i6, i7;
        android.content.pm.PackageParser$Package r2;
        java.util.HashMap r3, $r6, $r7, $r28;
        com.android.server.pm.PackageSetting r4;
        java.lang.Throwable r5, $r30;
        java.lang.Object $r8, $r31;
        com.android.server.pm.Installer $r9, $r16;
        android.content.pm.ApplicationInfo $r10, $r12, $r15, $r17, $r19;
        boolean $z0;
        java.lang.StringBuilder $r18, $r20, $r22, $r23, $r24, $r25, $r26;
        com.android.server.pm.Settings $r27;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.content.pm.PackageParser$Package) $r8;

        if r2 != null goto label03;

        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r28 = $r27.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r31 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.PackageSetting) $r31;

        if r4 == null goto label03;

        r2 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label03:
        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r30 := @caughtexception;

        r5 = $r30;

        exitmonitor r3;

     label06:
        throw r5;

     label07:
        if r2 != null goto label08;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r29);

     label08:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i6 = virtualinvoke $r9.<com.android.server.pm.Installer: int clearUserData(java.lang.String,int)>(r1, i0);

        if i6 >= 0 goto label09;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove cache files for package: ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

        return 0;

     label09:
        if r2 != null goto label10;

        return 0;

     label10:
        if r2 == null goto label11;

        $r17 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r17 == null goto label11;

        $r19 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i7 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <com.android.server.pm.PackageManagerService: void removeKeystoreDataIfNeeded(int,int)>(i0, i7);

     label11:
        if r2 == null goto label12;

        $r10 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r11 == null goto label12;

        $r12 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $z0 = staticinvoke <dalvik.system.VMRuntime: boolean is64BitAbi(java.lang.String)>($r13);

        if $z0 != 0 goto label12;

        $r15 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r32 = $r15.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r14 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $i1 = virtualinvoke $r16.<com.android.server.pm.Installer: int linkNativeLibraryDirectory(java.lang.String,java.lang.String,int)>($r14, r32, i0);

        if $i1 >= 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Failed linking native library dir");

        return 0;

     label12:
        return 1;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    private static void removeKeystoreDataIfNeeded(int, int)
    {
        int i0, i1, i2, i3, i4, $i6, $i7;
        android.security.KeyStore r0;
        int[] r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.server.pm.UserManagerService $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= 0 goto label1;

        return;

     label1:
        r0 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        if r0 == null goto label5;

        if i0 != -1 goto label4;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r1 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i2 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        i4 = r1[i3];

        $i7 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i4, i1);

        virtualinvoke r0.<android.security.KeyStore: boolean clearUid(int)>($i7);

        i3 = i3 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        $i6 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, i1);

        virtualinvoke r0.<android.security.KeyStore: boolean clearUid(int)>($i6);

        goto label6;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not contact keystore to clear entries for app id ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r5);

     label6:
        return;
    }

    public void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        int i0;
        android.content.Context $r3;
        com.android.server.pm.PackageManagerService$10 $r4;
        com.android.server.pm.PackageManagerService$PackageHandler $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_CACHE_FILES", null);

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r4 = new com.android.server.pm.PackageManagerService$10;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$10: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>(r0, r1, i0, r2);

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    private boolean deleteApplicationCacheFilesLI(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r14, $r18, $r25;
        int i0, i5;
        android.content.pm.PackageParser$Package r2;
        java.util.HashMap r3, $r5, $r6;
        java.lang.Throwable r4, $r24;
        java.lang.Object $r7;
        com.android.server.pm.Installer $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23;
        android.content.pm.ApplicationInfo r26;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.content.pm.PackageParser$Package) $r7;

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r24 := @caughtexception;

        r4 = $r24;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        if r2 != null goto label7;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r25);

        return 0;

     label7:
        r26 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if r26 != null goto label8;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r18);

        return 0;

     label8:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i5 = virtualinvoke $r8.<com.android.server.pm.Installer: int deleteCacheFiles(java.lang.String,int)>(r1, i0);

        if i5 >= 0 goto label9;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove cache files for package: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r14);

        return 0;

     label9:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void getPackageSizeInfo(java.lang.String, int, android.content.pm.IPackageStatsObserver)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.IPackageStatsObserver r2;
        android.content.pm.PackageStats r3, $r6;
        android.os.Message r4;
        android.content.Context $r5;
        com.android.server.pm.PackageManagerService$PackageHandler $r7, $r9;
        com.android.server.pm.PackageManagerService$MeasureParams $r8;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.IPackageStatsObserver;

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GET_PACKAGE_SIZE", null);

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to get size of null packageName");

        throw $r10;

     label1:
        $r6 = new android.content.pm.PackageStats;

        specialinvoke $r6.<android.content.pm.PackageStats: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r6;

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r4 = virtualinvoke $r7.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        $r8 = new com.android.server.pm.PackageManagerService$MeasureParams;

        specialinvoke $r8.<com.android.server.pm.PackageManagerService$MeasureParams: void <init>(com.android.server.pm.PackageManagerService,android.content.pm.PackageStats,android.content.pm.IPackageStatsObserver)>(r0, r3, r2);

        r4.<android.os.Message: java.lang.Object obj> = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r9.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r4);

        return;
    }

    private boolean getPackageSizeInfoLI(java.lang.String, int, android.content.pm.PackageStats)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r4, r5, r7, $r16, $r20, $r24, $r30, r33;
        int i0, i4;
        android.content.pm.PackageStats r2;
        android.content.pm.PackageParser$Package r3, $r29;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.HashMap r6, $r9, $r10, $r14;
        java.lang.Throwable r8, $r31;
        java.lang.Object $r11, $r13;
        com.android.server.pm.Settings $r12;
        java.lang.String[] $r15, r35;
        com.android.server.pm.Installer $r17;
        long $l1, $l2, $l3;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r25, $r26, $r27, $r28;
        android.content.pm.ApplicationInfo $r23, r34;
        com.android.server.pm.PackageSetting r32;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.PackageStats;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to get size of null packageName.");

        return 0;

     label01:
        z0 = 0;

        r4 = null;

        r5 = null;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r6 = $r9;

        entermonitor $r9;

     label02:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r11;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r12.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r32 = (com.android.server.pm.PackageSetting) $r13;

        if r3 != null goto label06;

        z0 = 1;

        if r32 == null goto label03;

        $r29 = r32.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r29 != null goto label05;

     label03:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r30);

        exitmonitor r6;

     label04:
        return 0;

     label05:
        r3 = r32.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label06:
        if r32 == null goto label07;

        r4 = r32.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

     label07:
        if r3 == null goto label09;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r3);

        if $z3 != 0 goto label08;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r3);

        if $z4 == 0 goto label09;

     label08:
        $r23 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = virtualinvoke $r23.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        r7 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String cidFromCodePath(java.lang.String)>($r24);

        if r7 == null goto label09;

        r5 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>(r7);

     label09:
        exitmonitor r6;

     label10:
        goto label13;

     label11:
        $r31 := @caughtexception;

        r8 = $r31;

        exitmonitor r6;

     label12:
        throw r8;

     label13:
        r33 = null;

        if z0 != 0 goto label15;

        r34 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if r34 != null goto label14;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r20);

        return 0;

     label14:
        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r3);

        if $z2 == 0 goto label15;

        r33 = virtualinvoke r34.<android.content.pm.ApplicationInfo: java.lang.String getBaseResourcePath()>();

     label15:
        $r15 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>(r32);

        r35 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>($r15);

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r16 = r3.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        i4 = virtualinvoke $r17.<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],android.content.pm.PackageStats)>(r1, i0, $r16, r4, r33, r5, r35, r2);

        if i4 >= 0 goto label16;

        return 0;

     label16:
        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r3);

        if $z1 != 0 goto label17;

        $l3 = r2.<android.content.pm.PackageStats: long codeSize>;

        $l1 = r2.<android.content.pm.PackageStats: long externalCodeSize>;

        $l2 = $l3 + $l1;

        r2.<android.content.pm.PackageStats: long codeSize> = $l2;

        r2.<android.content.pm.PackageStats: long externalCodeSize> = 0L;

     label17:
        return 1;

        catch java.lang.Throwable from label02 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void addPackageToPreferred(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "addPackageToPreferred: this is now a no-op");

        return;
    }

    public void removePackageFromPreferred(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "removePackageFromPreferred: this is now a no-op");

        return;
    }

    public java.util.List getPreferredPackages(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    private int getUidTargetSdkVersionLockedLPr(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2, $i3;
        java.lang.Object r1, $r10;
        com.android.server.pm.SharedUserSetting r2;
        java.util.Iterator r3;
        com.android.server.pm.PackageSetting r4, r14;
        com.android.server.pm.Settings $r5;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageParser$Package $r6, $r7, $r11, $r12;
        android.content.pm.ApplicationInfo $r8, $r13;
        java.util.HashSet $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r1 = virtualinvoke $r5.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i0);

        $z0 = r1 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label4;

        r2 = (com.android.server.pm.SharedUserSetting) r1;

        i1 = 10000;

        $r9 = r2.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        r3 = virtualinvoke $r9.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PackageSetting) $r10;

        $r12 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r12 == null goto label2;

        $r11 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r13 = $r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i2 = $r13.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i2 >= i1 goto label2;

        i1 = i2;

     label2:
        goto label1;

     label3:
        return i1;

     label4:
        $z1 = r1 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label5;

        r14 = (com.android.server.pm.PackageSetting) r1;

        $r6 = r14.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r6 == null goto label5;

        $r7 = r14.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r8.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        return $i3;

     label5:
        return 10000;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPreferredActivityInternal(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean,int,java.lang.String)>(r1, i0, r2, r3, 1, i1, "Adding preferred");

        return;
    }

    private void addPreferredActivityInternal(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, boolean, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1, i2, $i3, $i4, $i6;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        boolean z0;
        java.lang.String r4, $r13, $r19, $r27;
        java.util.HashMap r5, $r8;
        com.android.server.pm.PreferredIntentResolver r6;
        java.lang.Throwable r7, $r28;
        android.content.Context $r9, $r22;
        com.android.server.pm.Settings $r10, $r23;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r24, $r25, $r26;
        com.android.server.pm.PreferredActivity $r20;
        android.util.LogPrinter $r21;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        z0 := @parameter4: boolean;

        i1 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i2, i1, 1, 0, "add preferred activity");

        $i3 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i3 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot set a preferred activity with no filter actions");

        return;

     label1:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r5 = $r8;

        entermonitor $r8;

     label2:
        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i4 = virtualinvoke $r9.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS");

        if $i4 == 0 goto label5;

        $i6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidTargetSdkVersionLockedLPr(int)>(i2);

        if $i6 >= 8 goto label4;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring addPreferredActivity() from uid ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r27);

        exitmonitor r5;

     label3:
        return;

     label4:
        $r22 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r22.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

     label5:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r6 = virtualinvoke $r10.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(i1);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" activity ");

        $r13 = virtualinvoke r3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r19);

        $r21 = new android.util.LogPrinter;

        specialinvoke $r21.<android.util.LogPrinter: void <init>(int,java.lang.String)>(4, "PackageManager");

        virtualinvoke r1.<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>($r21, "  ");

        $r20 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r20.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>(r1, i0, r2, r3, z0);

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>($r20);

        $r23 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r23.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        exitmonitor r5;

     label6:
        goto label9;

     label7:
        $r28 := @caughtexception;

        r7 = $r28;

        exitmonitor r5;

     label8:
        throw r7;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, i16;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3, $r19;
        java.util.HashMap r4, $r12;
        com.android.server.pm.PreferredIntentResolver r5;
        java.util.ArrayList r6;
        com.android.server.pm.PreferredActivity r7, r8;
        java.lang.Throwable r9, $r28;
        java.lang.IllegalArgumentException $r10, $r29;
        android.content.Context $r11, $r24;
        com.android.server.pm.Settings $r13;
        java.lang.Object $r14, $r16, $r17;
        android.util.SparseArray $r15;
        com.android.server.pm.PreferredComponent $r18, $r20, $r21, $r22;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r23, $r25, $r27;
        java.lang.String $r26;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

        $i3 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i3 == 1 goto label01;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("replacePreferredActivity expects filter to have only 1 action.");

        throw $r29;

     label01:
        $i4 = virtualinvoke r1.<android.content.IntentFilter: int countDataAuthorities()>();

        if $i4 != 0 goto label02;

        $i6 = virtualinvoke r1.<android.content.IntentFilter: int countDataPaths()>();

        if $i6 != 0 goto label02;

        $i5 = virtualinvoke r1.<android.content.IntentFilter: int countDataSchemes()>();

        if $i5 > 1 goto label02;

        $i7 = virtualinvoke r1.<android.content.IntentFilter: int countDataTypes()>();

        if $i7 == 0 goto label03;

     label02:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("replacePreferredActivity expects filter to have no data authorities, paths, or types; and at most one scheme.");

        throw $r10;

     label03:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i2, i1, 1, 0, "replace preferred activity");

        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r12;

        entermonitor $r12;

     label04:
        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i8 = virtualinvoke $r11.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS");

        if $i8 == 0 goto label07;

        $i13 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidTargetSdkVersionLockedLPr(int)>(i2);

        if $i13 >= 8 goto label06;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring replacePreferredActivity() from uid ");

        $i15 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r26);

        exitmonitor r4;

     label05:
        return;

     label06:
        $r24 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r24.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

     label07:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r13.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r14 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.pm.PreferredIntentResolver) $r14;

        if r5 == null goto label11;

        r6 = virtualinvoke r5.<com.android.server.pm.PreferredIntentResolver: java.util.ArrayList findFilters(android.content.IntentFilter)>(r1);

        if r6 == null goto label09;

        $i10 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i10 != 1 goto label09;

        $r17 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r7 = (com.android.server.pm.PreferredActivity) $r17;

        $r20 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z0 = $r20.<com.android.server.pm.PreferredComponent: boolean mAlways>;

        if $z0 == 0 goto label09;

        $r18 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r19 = $r18.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $z1 = virtualinvoke $r19.<android.content.ComponentName: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label09;

        $r21 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $i12 = $r21.<com.android.server.pm.PreferredComponent: int mMatch>;

        $i11 = i0 & 268369920;

        if $i12 != $i11 goto label09;

        $r22 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z2 = virtualinvoke $r22.<com.android.server.pm.PreferredComponent: boolean sameSet(android.content.ComponentName[])>(r2);

        if $z2 == 0 goto label09;

        exitmonitor r4;

     label08:
        return;

     label09:
        if r6 == null goto label11;

        i16 = 0;

     label10:
        $i9 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i16 >= $i9 goto label11;

        $r16 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r8 = (com.android.server.pm.PreferredActivity) $r16;

        virtualinvoke r5.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r8);

        i16 = i16 + 1;

        goto label10;

     label11:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPreferredActivityInternal(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean,int,java.lang.String)>(r1, i0, r2, r3, 1, i1, "Replacing preferred");

        exitmonitor r4;

     label12:
        goto label15;

     label13:
        $r28 := @caughtexception;

        r9 = $r28;

        exitmonitor r4;

     label14:
        throw r9;

     label15:
        return;

        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label08 with label13;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void clearPackagePreferredActivities(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        java.util.HashMap r2, $r5, $r6;
        android.content.pm.PackageParser$Package r3;
        java.lang.Throwable r4, $r16;
        java.lang.Object $r7;
        android.content.Context $r8, $r10;
        boolean $z0;
        com.android.server.pm.Settings $r9;
        java.lang.StringBuilder $r11, $r12, $r14;
        android.content.pm.ApplicationInfo $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r7;

        if r3 == null goto label02;

        $r15 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        if $i7 == i0 goto label05;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS");

        if $i2 == 0 goto label05;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidTargetSdkVersionLockedLPr(int)>($i3);

        if $i4 >= 8 goto label04;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring clearPackagePreferredActivities() from uid ");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r13);

        exitmonitor r2;

     label03:
        return;

     label04:
        $r10 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

     label05:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>(r1, i1);

        if $z0 == 0 goto label06;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r9.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    boolean clearPackagePreferredActivitiesLPw(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r18;
        int i0, i1, i2, $i3, $i4, i5;
        java.util.ArrayList r2, $r17;
        boolean z0, $z1, $z3, $z4;
        com.android.server.pm.PreferredIntentResolver r3;
        java.util.Iterator r4;
        com.android.server.pm.PreferredActivity r5, r6;
        com.android.server.pm.Settings $r7, $r9, $r11;
        android.util.SparseArray $r8, $r10, $r13;
        java.lang.Object $r12, $r14, $r15;
        com.android.server.pm.PreferredComponent $r16, $r20;
        android.content.ComponentName $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = null;

        z0 = 0;

        i1 = 0;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r7.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i3 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i1 >= $i3 goto label11;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r9.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        i2 = virtualinvoke $r10.<android.util.SparseArray: int keyAt(int)>(i1);

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r11.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r12 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (com.android.server.pm.PreferredIntentResolver) $r12;

        if i0 == -1 goto label02;

        if i0 == i2 goto label02;

        goto label10;

     label02:
        r4 = virtualinvoke r3.<com.android.server.pm.PreferredIntentResolver: java.util.Iterator filterIterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.PreferredActivity) $r15;

        if r1 == null goto label04;

        $r16 = r5.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r19 = $r16.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $r18 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label06;

        $r20 = r5.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z4 = $r20.<com.android.server.pm.PreferredComponent: boolean mAlways>;

        if $z4 == 0 goto label06;

     label04:
        if r2 != null goto label05;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r2 = $r17;

     label05:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label06:
        goto label03;

     label07:
        if r2 == null goto label10;

        i5 = 0;

     label08:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i5 >= $i4 goto label09;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r6 = (com.android.server.pm.PreferredActivity) $r14;

        virtualinvoke r3.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r6);

        i5 = i5 + 1;

        goto label08;

     label09:
        z0 = 1;

     label10:
        i1 = i1 + 1;

        goto label01;

     label11:
        return z0;
    }

    public void resetPreferredActivities(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r7;
        android.content.Context $r3;
        com.android.server.pm.Settings $r5, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>(null, i1);

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r5.<com.android.server.pm.Settings: void readDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>(r0, i1);

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r6.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getPreferredActivities(java.util.List, java.util.List, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1, r2;
        java.lang.String r3, $r18;
        byte b0;
        int i1;
        java.util.HashMap r4, $r9;
        com.android.server.pm.PreferredIntentResolver r5;
        java.util.Iterator r6;
        com.android.server.pm.PreferredActivity r7;
        java.lang.Throwable r8, $r21;
        com.android.server.pm.Settings $r10;
        android.util.SparseArray $r11;
        java.lang.Object $r12, $r13;
        boolean $z0, $z3, $z4;
        android.content.ComponentName $r14, $r19;
        com.android.server.pm.PreferredComponent $r15, $r17, $r20;
        android.content.IntentFilter $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        b0 = 0;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = $r10.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.pm.PreferredIntentResolver) $r12;

        if r5 == null goto label06;

        r6 = virtualinvoke r5.<com.android.server.pm.PreferredIntentResolver: java.util.Iterator filterIterator()>();

     label02:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.PreferredActivity) $r13;

        if r3 == null goto label03;

        $r17 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r19 = $r17.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $r18 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label05;

        $r20 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z4 = $r20.<com.android.server.pm.PreferredComponent: boolean mAlways>;

        if $z4 == 0 goto label05;

     label03:
        if r1 == null goto label04;

        $r16 = new android.content.IntentFilter;

        specialinvoke $r16.<android.content.IntentFilter: void <init>(android.content.IntentFilter)>(r7);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r16);

     label04:
        if r2 == null goto label05;

        $r15 = r7.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r14 = $r15.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label05:
        goto label02;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r21 := @caughtexception;

        r8 = $r21;

        exitmonitor r4;

     label09:
        throw r8;

     label10:
        return b0;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void addPersistentPreferredActivity(android.content.IntentFilter, android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        android.content.ComponentName r2;
        int i0, i1, $i2;
        java.util.HashMap r3, $r5;
        java.lang.Throwable r4, $r18;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12;
        java.lang.String $r11;
        android.util.LogPrinter $r13;
        com.android.server.pm.PersistentPreferredIntentResolver $r14;
        com.android.server.pm.Settings $r15, $r16;
        com.android.server.pm.PersistentPreferredActivity $r17;
        java.lang.SecurityException $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 == 1000 goto label1;

        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>("addPersistentPreferredActivity can only be run by the system");

        throw $r19;

     label1:
        $i2 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i2 != 0 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot set a preferred activity with no filter actions");

        return;

     label2:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r5;

        entermonitor $r5;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding persistent preferred activity ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r11);

        $r13 = new android.util.LogPrinter;

        specialinvoke $r13.<android.util.LogPrinter: void <init>(int,java.lang.String)>(4, "PackageManager");

        virtualinvoke r1.<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>($r13, "  ");

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = virtualinvoke $r15.<com.android.server.pm.Settings: com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)>(i0);

        $r17 = new com.android.server.pm.PersistentPreferredActivity;

        specialinvoke $r17.<com.android.server.pm.PersistentPreferredActivity: void <init>(android.content.IntentFilter,android.content.ComponentName)>(r1, r2);

        virtualinvoke $r14.<com.android.server.pm.PersistentPreferredIntentResolver: void addFilter(android.content.IntentFilter)>($r17);

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r16.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void clearPackagePersistentPreferredActivities(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r21;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.util.ArrayList r2, $r23;
        boolean z0, $z1, $z2;
        java.util.HashMap r3, $r9;
        com.android.server.pm.PersistentPreferredIntentResolver r4;
        java.util.Iterator r5;
        com.android.server.pm.PersistentPreferredActivity r6, r7;
        java.lang.Throwable r8, $r22;
        android.util.SparseArray $r10, $r14, $r15;
        com.android.server.pm.Settings $r11, $r12, $r13, $r16;
        java.lang.Object $r17, $r18, $r19;
        android.content.ComponentName $r20;
        java.lang.SecurityException $r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 == 1000 goto label01;

        $r24 = new java.lang.SecurityException;

        specialinvoke $r24.<java.lang.SecurityException: void <init>(java.lang.String)>("clearPackagePersistentPreferredActivities can only be run by the system");

        throw $r24;

     label01:
        r2 = null;

        z0 = 0;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r9;

        entermonitor $r9;

     label02:
        i2 = 0;

     label03:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r11.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $i4 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i2 >= $i4 goto label12;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r12.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        i3 = virtualinvoke $r14.<android.util.SparseArray: int keyAt(int)>(i2);

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r16.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r17 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r4 = (com.android.server.pm.PersistentPreferredIntentResolver) $r17;

        if i0 == i3 goto label04;

        goto label11;

     label04:
        r5 = virtualinvoke r4.<com.android.server.pm.PersistentPreferredIntentResolver: java.util.Iterator filterIterator()>();

     label05:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.PersistentPreferredActivity) $r18;

        $r20 = r6.<com.android.server.pm.PersistentPreferredActivity: android.content.ComponentName mComponent>;

        $r21 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label07;

        if r2 != null goto label06;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r2 = $r23;

     label06:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label07:
        goto label05;

     label08:
        if r2 == null goto label11;

        i6 = 0;

     label09:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i6 >= $i5 goto label10;

        $r19 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r7 = (com.android.server.pm.PersistentPreferredActivity) $r19;

        virtualinvoke r4.<com.android.server.pm.PersistentPreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r7);

        i6 = i6 + 1;

        goto label09;

     label10:
        z0 = 1;

     label11:
        i2 = i2 + 1;

        goto label03;

     label12:
        if z0 == 0 goto label13;

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r13.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

     label13:
        exitmonitor r3;

     label14:
        goto label17;

     label15:
        $r22 := @caughtexception;

        r8 = $r22;

        exitmonitor r3;

     label16:
        throw r8;

     label17:
        return;

        catch java.lang.Throwable from label02 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void addCrossProfileIntentFilter(android.content.IntentFilter, java.lang.String, int, int, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        java.lang.String r2;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.util.HashMap r3, $r7;
        com.android.server.pm.CrossProfileIntentFilter r4, $r8;
        java.lang.Throwable r5, $r12;
        android.content.Context $r6;
        com.android.server.pm.Settings $r9, $r10;
        com.android.server.pm.CrossProfileIntentResolver $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

        i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceOwnerRights(java.lang.String,int,int)>(r2, i0, i4);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceShellRestriction(java.lang.String,int,int)>("no_debugging_features", i4, i1);

        $i5 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i5 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot set a crossProfile intent filter with no filter actions");

        return;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r7;

        entermonitor $r7;

     label2:
        $r8 = new com.android.server.pm.CrossProfileIntentFilter;

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i4);

        specialinvoke $r8.<com.android.server.pm.CrossProfileIntentFilter: void <init>(android.content.IntentFilter,java.lang.String,int,int,int)>(r1, r2, $i6, i2, i3);

        r4 = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = virtualinvoke $r9.<com.android.server.pm.Settings: com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)>(i1);

        virtualinvoke $r11.<com.android.server.pm.CrossProfileIntentResolver: void addFilter(android.content.IntentFilter)>(r4);

        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r10.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void clearCrossProfileIntentFilters(int, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String r1, $r14;
        java.util.HashMap r2, $r9;
        com.android.server.pm.CrossProfileIntentResolver r3;
        java.util.HashSet r4, $r12;
        java.util.Iterator r5;
        com.android.server.pm.CrossProfileIntentFilter r6;
        java.lang.Throwable r7, $r16;
        android.content.Context $r8;
        com.android.server.pm.Settings $r10, $r13;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.lang.Object $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r8 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", null);

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceOwnerRights(java.lang.String,int,int)>(r1, i1, i2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceShellRestriction(java.lang.String,int,int)>("no_debugging_features", i2, i0);

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r9;

        entermonitor $r9;

     label1:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r3 = virtualinvoke $r10.<com.android.server.pm.Settings: com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)>(i0);

        $r12 = new java.util.HashSet;

        $r11 = virtualinvoke r3.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r11);

        r4 = $r12;

        r5 = virtualinvoke r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.CrossProfileIntentFilter) $r15;

        $r14 = virtualinvoke r6.<com.android.server.pm.CrossProfileIntentFilter: java.lang.String getOwnerPackage()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $i4 = virtualinvoke r6.<com.android.server.pm.CrossProfileIntentFilter: int getOwnerUserId()>();

        if $i4 != i3 goto label3;

        virtualinvoke r3.<com.android.server.pm.CrossProfileIntentResolver: void removeFilter(android.content.IntentFilter)>(r6);

     label3:
        goto label2;

     label4:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r13.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r16 := @caughtexception;

        r7 = $r16;

        exitmonitor r2;

     label7:
        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void enforceOwnerRights(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r11, $r16, $r28;
        int i0, i1, i2, $i3, $i4;
        android.content.pm.PackageInfo r2;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0;
        java.lang.SecurityException $r4, $r19;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        if $i3 != 1000 goto label1;

        return;

     label1:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if i2 == i0 goto label2;

        $r19 = new java.lang.SecurityException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("calling uid ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pretends to own ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on user ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but belongs to user ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r28);

        throw $r19;

     label2:
        r2 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, i2);

        if r2 != null goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on user ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label3:
        $r3 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i4, i1);

        if $z0 != 0 goto label4;

        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not own package ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label4:
        return;
    }

    public android.content.ComponentName getHomeActivities(java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1, r3;
        android.content.Intent r2, $r7;
        int i0;
        android.content.pm.ResolveInfo r4, r6;
        java.util.Iterator r5;
        android.content.pm.ActivityInfo $r9, $r11, $r13;
        android.content.ComponentName $r10;
        java.lang.String $r12, $r14;
        java.lang.Object $r15;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r2 = $r7;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.HOME");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r2, null, 128, i0);

        r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r2, null, 0, r3, 0, 1, 0, 0, i0);

        interfaceinvoke r1.<java.util.List: void clear()>();

        if r3 == null goto label2;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.ResolveInfo) $r15;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        if r4 == null goto label3;

        $r9 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r9 != null goto label4;

     label3:
        $r10 = null;

        goto label5;

     label4:
        $r10 = new android.content.ComponentName;

        $r11 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r14 = $r11.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r13 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r13.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r12);

     label5:
        return $r10;
    }

    public void setApplicationEnabledSetting(java.lang.String, int, int, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, $i3;
        com.android.server.pm.UserManagerService $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $r3 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r3.<com.android.server.pm.UserManagerService: boolean exists(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r2 != null goto label2;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

     label2:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setEnabledSetting(java.lang.String,java.lang.String,int,int,int,java.lang.String)>(r1, null, i0, i1, i2, r2);

        return;
    }

    public void setComponentEnabledSetting(android.content.ComponentName, int, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, i2;
        com.android.server.pm.UserManagerService $r2;
        boolean $z0;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: boolean exists(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setEnabledSetting(java.lang.String,java.lang.String,int,int,int,java.lang.String)>($r3, $r4, i0, i1, i2, null);

        return;
    }

    private void setEnabledSetting(java.lang.String, java.lang.String, int, int, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, r3, r5, $r20, $r35, $r36, $r47, $r58, $r65, $r66, $r69;
        int i0, i1, i2, i3, i4, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, i17;
        com.android.server.pm.PackageSetting r4;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16;
        java.util.ArrayList r6, $r29;
        android.content.pm.PackageParser$Package r7;
        java.util.HashMap r8, $r12, $r13;
        java.lang.Throwable r9, r10, $r67, $r68;
        android.content.Context $r11;
        com.android.server.pm.Settings $r14, $r23;
        android.content.pm.ApplicationInfo $r15;
        java.lang.Object $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r30, $r32, $r33, $r34, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r56, $r57, $r59, $r60, $r61, $r62, $r64;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r24, $r27, $r28;
        com.android.server.pm.PackageManagerService$PackageHandler $r25, $r26;
        java.lang.IllegalArgumentException $r31, $r46, $r55, $r63;
        java.lang.SecurityException $r45;
        long l16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        if i0 == 0 goto label01;

        if i0 == 1 goto label01;

        if i0 == 2 goto label01;

        if i0 == 3 goto label01;

        if i0 == 4 goto label01;

        $r63 = new java.lang.IllegalArgumentException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid new component state: ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r69 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r69);

        throw $r63;

     label01:
        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        i4 = virtualinvoke $r11.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CHANGE_COMPONENT_ENABLED_STATE");

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i3, i2, 0, 1, "set enabled");

        if i4 != 0 goto label02;

        $z15 = 1;

        goto label03;

     label02:
        $z15 = 0;

     label03:
        z0 = $z15;

        z1 = 0;

        if r2 != null goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        z2 = $z14;

        if z2 == 0 goto label06;

        $r66 = r1;

        goto label07;

     label06:
        $r66 = r2;

     label07:
        r5 = $r66;

        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r8 = $r12;

        entermonitor $r12;

     label08:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r16 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.PackageSetting) $r16;

        if r4 != null goto label10;

        if r2 != null goto label09;

        $r55 = new java.lang.IllegalArgumentException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r65 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r65);

        throw $r55;

     label09:
        $r46 = new java.lang.IllegalArgumentException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component: ");

        $r59 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r58);

        throw $r46;

     label10:
        if z0 != 0 goto label11;

        $i14 = r4.<com.android.server.pm.PackageSetting: int appId>;

        $z13 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i3, $i14);

        if $z13 != 0 goto label11;

        $r45 = new java.lang.SecurityException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: attempt to change component state from pid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r51 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", package uid=");

        $i15 = r4.<com.android.server.pm.PackageSetting: int appId>;

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r47 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.SecurityException: void <init>(java.lang.String)>($r47);

        throw $r45;

     label11:
        if r2 != null goto label16;

        $i12 = virtualinvoke r4.<com.android.server.pm.PackageSetting: int getEnabled(int)>(i2);

        if $i12 != i0 goto label13;

        exitmonitor r8;

     label12:
        return;

     label13:
        if i0 == 0 goto label14;

        if i0 != 1 goto label15;

     label14:
        r3 = null;

     label15:
        virtualinvoke r4.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(i0, i2, r3);

        goto label28;

     label16:
        r7 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if r7 == null goto label17;

        $z12 = virtualinvoke r7.<android.content.pm.PackageParser$Package: boolean hasComponentClassName(java.lang.String)>(r2);

        if $z12 != 0 goto label19;

     label17:
        $r15 = r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r15.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i6 < 16 goto label18;

        $r31 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component class ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r36 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r31;

     label18:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setComponentEnabledSetting: component class ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in ");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r20);

     label19:
        tableswitch(i0)
        {
            case 0: goto label24;
            case 1: goto label20;
            case 2: goto label22;
            default: goto label26;
        };

     label20:
        $z3 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean enableComponentLPw(java.lang.String,int)>(r2, i2);

        if $z3 != 0 goto label28;

        exitmonitor r8;

     label21:
        return;

     label22:
        $z9 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean disableComponentLPw(java.lang.String,int)>(r2, i2);

        if $z9 != 0 goto label28;

        exitmonitor r8;

     label23:
        return;

     label24:
        $z11 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean restoreComponentLPw(java.lang.String,int)>(r2, i2);

        if $z11 != 0 goto label28;

        exitmonitor r8;

     label25:
        return;

     label26:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid new component state: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r35);

        exitmonitor r8;

     label27:
        return;

     label28:
        $r23 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r23.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        $r24 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        r6 = virtualinvoke $r24.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: java.util.ArrayList get(int,java.lang.String)>(i2, r1);

        if r6 != null goto label29;

        $z10 = 1;

        goto label30;

     label29:
        $z10 = 0;

     label30:
        z16 = $z10;

        if z16 == 0 goto label31;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r6 = $r29;

     label31:
        $z4 = virtualinvoke r6.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z4 != 0 goto label32;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label32:
        $i8 = i1 & 1;

        if $i8 != 0 goto label33;

        z1 = 1;

        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r27.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void remove(int,java.lang.String)>(i2, r1);

        goto label35;

     label33:
        if z16 == 0 goto label34;

        $r28 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r28.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void put(int,java.lang.String,java.util.ArrayList)>(i2, r1, r6);

     label34:
        $r25 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $z5 = virtualinvoke $r25.<com.android.server.pm.PackageManagerService$PackageHandler: boolean hasMessages(int)>(1);

        if $z5 != 0 goto label35;

        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r26.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(1, 10000L);

     label35:
        exitmonitor r8;

     label36:
        goto label39;

     label37:
        $r67 := @caughtexception;

        r10 = $r67;

        exitmonitor r8;

     label38:
        throw r10;

     label39:
        l16 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label40:
        if z1 == 0 goto label43;

        $i9 = r4.<com.android.server.pm.PackageSetting: int appId>;

        i17 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, $i9);

        $i10 = i1 & 1;

        if $i10 == 0 goto label41;

        $z6 = 1;

        goto label42;

     label41:
        $z6 = 0;

     label42:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageChangedBroadcast(java.lang.String,boolean,java.util.ArrayList,int)>(r1, $z6, r6, i17);

     label43:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l16);

        goto label46;

     label44:
        $r68 := @caughtexception;

        r9 = $r68;

     label45:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l16);

        throw r9;

     label46:
        return;

        catch java.lang.Throwable from label08 to label12 with label37;
        catch java.lang.Throwable from label13 to label21 with label37;
        catch java.lang.Throwable from label22 to label23 with label37;
        catch java.lang.Throwable from label24 to label25 with label37;
        catch java.lang.Throwable from label26 to label27 with label37;
        catch java.lang.Throwable from label28 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label40 to label43 with label44;
        catch java.lang.Throwable from label44 to label45 with label44;
    }

    private void sendPackageChangedBroadcast(java.lang.String, boolean, java.util.ArrayList, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r7;
        boolean z0;
        java.util.ArrayList r2;
        int i0, $i1, $i2;
        android.os.Bundle r3, $r5;
        java.lang.String[] r4;
        java.lang.Object $r6;
        int[] $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.ArrayList;

        i0 := @parameter3: int;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>(int)>(4);

        r3 = $r5;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.intent.extra.changed_component_name", $r7);

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        r4 = newarray (java.lang.String)[$i1];

        virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        virtualinvoke r3.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.intent.extra.changed_component_name_list", r4);

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", z0);

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", i0);

        $r9 = newarray (int)[1];

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r9[0] = $i2;

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_CHANGED", r1, r3, null, null, $r9);

        return;
    }

    public void setPackageStoppedState(java.lang.String, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2;
        java.util.HashMap r2, $r6;
        java.lang.Throwable r3, $r8;
        com.android.server.pm.UserManagerService $r4;
        android.content.Context $r5;
        com.android.server.pm.Settings $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z2 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z2 != 0 goto label1;

        return;

     label1:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        i2 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CHANGE_COMPONENT_ENABLED_STATE");

        if i2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z1 = $z4;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i1, i0, 1, 1, "stop package");

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label4:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z3 = virtualinvoke $r7.<com.android.server.pm.Settings: boolean setPackageStoppedStateLPw(java.lang.String,boolean,boolean,int,int)>(r1, z0, z1, i1, i0);

        if $z3 == 0 goto label5;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWritePackageRestrictionsLocked(int)>(i0);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.lang.String getInstallerPackageName(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r6;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r7;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = virtualinvoke $r5.<com.android.server.pm.Settings: java.lang.String getInstallerPackageNameLPr(java.lang.String)>(r1);

        exitmonitor r2;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getApplicationEnabledSetting(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r7;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label1;

        return 2;

     label1:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i1, i0, 0, 0, "get enabled");

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i2 = virtualinvoke $r6.<com.android.server.pm.Settings: int getApplicationEnabledSettingLPr(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label3:
        return $i2;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getComponentEnabledSetting(android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r7;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label1;

        return 2;

     label1:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>(i1, i0, 0, 0, "get component enabled");

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i2 = virtualinvoke $r6.<com.android.server.pm.Settings: int getComponentEnabledSettingLPr(android.content.ComponentName,int)>(r1, i0);

        exitmonitor r2;

     label3:
        return $i2;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void enterSafeMode()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("Only the system can request entering safe mode");

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode> = 1;

     label1:
        return;
    }

    public void systemReady()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, $z1, $z2, $z4;
        java.util.HashMap r1, $r9, $r32;
        java.util.ArrayList r2, $r10, $r13, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, i7;
        com.android.server.pm.PreferredIntentResolver r3;
        java.util.Iterator r4, r39;
        com.android.server.pm.PreferredActivity r5, r38;
        java.lang.Throwable r6, $r37;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        com.android.server.pm.Settings $r11, $r18, $r21, $r22;
        android.util.SparseArray $r12, $r17, $r23;
        com.android.server.pm.UserManagerService $r14;
        java.lang.Object $r16, $r20, $r25, $r33, $r34;
        java.util.Set $r19;
        java.lang.StringBuilder $r24, $r26, $r27;
        java.lang.String $r28;
        com.android.server.pm.PreferredComponent $r29, $r36;
        android.content.ComponentName $r30, $r35;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r31;
        android.os.Message r40;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r0.<com.android.server.pm.PackageManagerService: boolean mSystemReady> = 1;

        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r8, "compatibility_mode", 1);

        if $i1 != 1 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        staticinvoke <android.content.pm.PackageParser: void setCompatibilityModeEnabled(boolean)>(z0);

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r9;

        entermonitor $r9;

     label03:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r2 = $r10;

        i0 = 0;

     label04:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r11.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i2 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label11;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r17 = $r18.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r20 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r3 = (com.android.server.pm.PreferredIntentResolver) $r20;

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

        $r19 = virtualinvoke r3.<com.android.server.pm.PreferredIntentResolver: java.util.Set filterSet()>();

        r4 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r33 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.PreferredActivity) $r33;

        $r31 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r32 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1700(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r31);

        $r36 = r5.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r35 = $r36.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $r34 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r35);

        if $r34 != null goto label06;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label06:
        goto label05;

     label07:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label10;

        i7 = 0;

     label08:
        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i7 >= $i3 goto label09;

        $r25 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r38 = (com.android.server.pm.PreferredActivity) $r25;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling preferred activity: ");

        $r29 = r38.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r30 = $r29.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        virtualinvoke r3.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r38);

        i7 = i7 + 1;

        goto label08;

     label09:
        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r23 = $r22.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i5 = virtualinvoke $r23.<android.util.SparseArray: int keyAt(int)>(i0);

        virtualinvoke $r21.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i5);

     label10:
        i0 = i0 + 1;

        goto label04;

     label11:
        exitmonitor r1;

     label12:
        goto label15;

     label13:
        $r37 := @caughtexception;

        r6 = $r37;

        exitmonitor r1;

     label14:
        throw r6;

     label15:
        $r14 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        virtualinvoke $r14.<com.android.server.pm.UserManagerService: void systemReady()>();

        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList mPostSystemReadyMessages>;

        if $r13 == null goto label18;

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList mPostSystemReadyMessages>;

        r39 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r16 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (android.os.Message) $r16;

        virtualinvoke r40.<android.os.Message: void sendToTarget()>();

        goto label16;

     label17:
        r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList mPostSystemReadyMessages> = null;

     label18:
        return;

        catch java.lang.Throwable from label03 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean isSafeMode()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        return $z0;
    }

    public boolean hasSystemUidErrors()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mHasSystemUidErrors>;

        return $z0;
    }

    static java.lang.String arrayToString(int[])
    {
        int[] r0;
        java.lang.StringBuffer r1, $r2;
        int i0, $i1, $i2;
        java.lang.String $r5;

        r0 := @parameter0: int[];

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        if r0 == null goto label3;

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i2 = r0[i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.pm.PackageManagerService$DumpState r4, $r16;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72, $z73, $z74, $z75, $z76, $z77, $z78, z79, z80, z81;
        java.lang.String r5, r6, r9, r11, $r19, $r23, $r36, $r43, $r45, $r51, $r52, $r58, $r64, $r81, $r82, $r84, $r86, $r91, $r92, $r93, $r94, $r96, $r97, $r98, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r140, $r141, $r142, $r147, $r150, $r157, $r158, $r159, $r160, $r166, $r175, $r181, r186, r190, r208;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23;
        java.util.HashMap r7, $r17, $r33, $r35, $r88, $r100, $r102, $r139, r187;
        java.lang.Throwable r8, r12, r13, r15, $r154, $r170, $r183, $r185;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r10;
        android.content.Context $r14;
        java.io.File $r18, r204;
        java.io.BufferedReader $r20, r207;
        java.io.FileReader $r21;
        com.android.server.pm.Settings $r22, $r27, $r28, $r31, $r50, $r67, $r68, $r70, $r76, $r104, $r105, $r106, $r107, $r138;
        java.io.FileInputStream $r24, r205;
        com.android.internal.util.IndentingPrintWriter $r25;
        com.android.server.pm.PackageInstallerService $r26;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r29, $r90;
        com.android.server.pm.KeySetManagerService $r30;
        java.util.Collection $r32;
        java.util.Set $r34, $r89, $r99;
        android.content.pm.ProviderInfo $r37, $r38, $r44, $r47, $r53;
        android.content.pm.ApplicationInfo $r39, $r48;
        java.lang.Object $r40, $r41, $r42, $r46, $r54, $r56, $r59, $r66, $r95, $r101, $r103;
        android.util.ArrayMap $r49, $r55, $r57;
        java.lang.Boolean $r60;
        java.io.BufferedOutputStream $r61, r193;
        com.android.internal.util.FastXmlSerializer $r62, r194;
        java.io.FileOutputStream $r63, r192;
        android.util.SparseArray $r65, $r69, $r75;
        java.lang.StringBuilder $r71, $r72, $r73, $r74, $r77, $r78, $r79, $r80, $r143, $r144, $r145, $r148, $r149, $r151, $r152, $r153, $r161, $r162, $r163, $r164, $r165, $r167, $r172, $r173, $r174, $r178, $r179, $r180;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r83;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r85, $r87;
        char $c14;
        java.lang.IllegalArgumentException $r146, r195;
        java.io.IOException $r155, $r156, $r168, $r176, $r177, $r182, $r184, r197;
        java.io.FileNotFoundException $r169;
        java.lang.IllegalStateException $r171, r196;
        java.util.Iterator r188, r189, r199, r201;
        com.android.server.pm.PreferredIntentResolver r191;
        android.util.ArraySet r198;
        android.content.pm.PackageParser$Provider r200, r203;
        java.util.Map$Entry r202;
        byte[] r206;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r14 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i1 = virtualinvoke $r14.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i1 == 0 goto label001;

        $r167 = new java.lang.StringBuilder;

        specialinvoke $r167.<java.lang.StringBuilder: void <init>()>();

        $r165 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i17 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r145 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i16 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r149 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r148 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r147);

        return;

     label001:
        $r16 = new com.android.server.pm.PackageManagerService$DumpState;

        specialinvoke $r16.<com.android.server.pm.PackageManagerService$DumpState: void <init>()>();

        r4 = $r16;

        z0 = 0;

        z1 = 0;

        r5 = null;

        i0 = 0;

     label002:
        $i3 = lengthof r3;

        if i0 >= $i3 goto label009;

        r6 = r3[i0];

        if r6 == null goto label009;

        $i13 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i13 <= 0 goto label009;

        $c14 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);

        if $c14 == 45 goto label003;

        goto label009;

     label003:
        i0 = i0 + 1;

        $r158 = "-a";

        $z76 = virtualinvoke $r158.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z76 == 0 goto label004;

        goto label008;

     label004:
        $r157 = "-h";

        $z75 = virtualinvoke $r157.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z75 == 0 goto label005;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Package manager dump options:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  [-h] [-f] [--checkin] [cmd] ...");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    --checkin: dump for a checkin");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    -f: print details of intent filters");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    -h: print this help");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  cmd may be one of:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    l[ibraries]: list known shared libraries");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    f[ibraries]: list device features");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    k[eysets]: print known keysets");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    r[esolvers]: dump intent resolvers");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    perm[issions]: dump permissions");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    pref[erred]: print preferred package settings");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    preferred-xml [--full]: print preferred package settings as xml");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    prov[iders]: dump content providers");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    p[ackages]: dump installed packages");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    s[hared-users]: dump shared user IDs");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    m[essages]: print collected runtime messages");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    v[erifiers]: print package verifier info");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    version: print database version info");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    write: write current settings now");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    <package.name>: info about given package");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    installs: details about install sessions");

        return;

     label005:
        $r160 = "--checkin";

        $z78 = virtualinvoke $r160.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z78 == 0 goto label006;

        z1 = 1;

        goto label008;

     label006:
        $r159 = "-f";

        $z77 = virtualinvoke $r159.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z77 == 0 goto label007;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>(1);

        goto label008;

     label007:
        $r163 = new java.lang.StringBuilder;

        specialinvoke $r163.<java.lang.StringBuilder: void <init>()>();

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        $r161 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r166 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r166);

     label008:
        goto label002;

     label009:
        $i2 = lengthof r3;

        if i0 >= $i2 goto label041;

        r186 = r3[i0];

        i18 = i0 + 1;

        $r118 = "android";

        $z52 = virtualinvoke $r118.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z52 != 0 goto label010;

        $z53 = virtualinvoke r186.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z53 == 0 goto label011;

     label010:
        r5 = r186;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>(1);

        goto label041;

     label011:
        $r119 = "l";

        $z50 = virtualinvoke $r119.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z50 != 0 goto label012;

        $r116 = "libraries";

        $z51 = virtualinvoke $r116.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z51 == 0 goto label013;

     label012:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(1);

        goto label041;

     label013:
        $r117 = "f";

        $z48 = virtualinvoke $r117.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z48 != 0 goto label014;

        $r114 = "features";

        $z49 = virtualinvoke $r114.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z49 == 0 goto label015;

     label014:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(2);

        goto label041;

     label015:
        $r115 = "r";

        $z46 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z46 != 0 goto label016;

        $r112 = "resolvers";

        $z47 = virtualinvoke $r112.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z47 == 0 goto label017;

     label016:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(4);

        goto label041;

     label017:
        $r113 = "perm";

        $z60 = virtualinvoke $r113.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z60 != 0 goto label018;

        $r126 = "permissions";

        $z61 = virtualinvoke $r126.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z61 == 0 goto label019;

     label018:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(8);

        goto label041;

     label019:
        $r127 = "pref";

        $z58 = virtualinvoke $r127.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z58 != 0 goto label020;

        $r124 = "preferred";

        $z59 = virtualinvoke $r124.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z59 == 0 goto label021;

     label020:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(512);

        goto label041;

     label021:
        $r125 = "preferred-xml";

        $z56 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z56 == 0 goto label022;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(1024);

        $i15 = lengthof r3;

        if i18 >= $i15 goto label041;

        $r136 = "--full";

        $r137 = r3[i18];

        $z70 = virtualinvoke $r136.<java.lang.String: boolean equals(java.lang.Object)>($r137);

        if $z70 == 0 goto label041;

        z0 = 1;

        goto label041;

     label022:
        $r122 = "p";

        $z57 = virtualinvoke $r122.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z57 != 0 goto label023;

        $r123 = "packages";

        $z54 = virtualinvoke $r123.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z54 == 0 goto label024;

     label023:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(16);

        goto label041;

     label024:
        $r120 = "s";

        $z55 = virtualinvoke $r120.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z55 != 0 goto label025;

        $r121 = "shared-users";

        $z69 = virtualinvoke $r121.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z69 == 0 goto label026;

     label025:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(32);

        goto label041;

     label026:
        $r135 = "prov";

        $z68 = virtualinvoke $r135.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z68 != 0 goto label027;

        $r134 = "providers";

        $z67 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z67 == 0 goto label028;

     label027:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(128);

        goto label041;

     label028:
        $r133 = "m";

        $z66 = virtualinvoke $r133.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z66 != 0 goto label029;

        $r132 = "messages";

        $z65 = virtualinvoke $r132.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z65 == 0 goto label030;

     label029:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(64);

        goto label041;

     label030:
        $r131 = "v";

        $z64 = virtualinvoke $r131.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z64 != 0 goto label031;

        $r130 = "verifiers";

        $z63 = virtualinvoke $r130.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z63 == 0 goto label032;

     label031:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(256);

        goto label041;

     label032:
        $r129 = "version";

        $z62 = virtualinvoke $r129.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z62 == 0 goto label033;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(4096);

        goto label041;

     label033:
        $r128 = "k";

        $z74 = virtualinvoke $r128.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z74 != 0 goto label034;

        $r142 = "keysets";

        $z73 = virtualinvoke $r142.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z73 == 0 goto label035;

     label034:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(2048);

        goto label041;

     label035:
        $r141 = "installs";

        $z72 = virtualinvoke $r141.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z72 == 0 goto label036;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(8192);

        goto label041;

     label036:
        $r140 = "write";

        $z71 = virtualinvoke $r140.<java.lang.String: boolean equals(java.lang.Object)>(r186);

        if $z71 == 0 goto label041;

        $r139 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r139;

        entermonitor $r139;

     label037:
        $r138 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r138.<com.android.server.pm.Settings: void writeLPr()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Settings written.");

        exitmonitor r7;

     label038:
        return;

     label039:
        $r154 := @caughtexception;

        r8 = $r154;

        exitmonitor r7;

     label040:
        throw r8;

     label041:
        if z1 == 0 goto label042;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("vers,1");

     label042:
        $r17 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r187 = $r17;

        entermonitor $r17;

     label043:
        $z2 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(4096);

        if $z2 == 0 goto label045;

        if r5 != null goto label045;

        if z1 != 0 goto label045;

        $z45 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z45 == 0 goto label044;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label044:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Database versions:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  SDK Version:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" internal=");

        $r105 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i8 = $r105.<com.android.server.pm.Settings: int mInternalSdkPlatform>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" external=");

        $r104 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i7 = $r104.<com.android.server.pm.Settings: int mExternalSdkPlatform>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  DB Version:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" internal=");

        $r107 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i10 = $r107.<com.android.server.pm.Settings: int mInternalDatabaseVersion>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" external=");

        $r106 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i9 = $r106.<com.android.server.pm.Settings: int mExternalDatabaseVersion>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i9);

     label045:
        $z4 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(256);

        if $z4 == 0 goto label048;

        if r5 != null goto label048;

        if z1 != 0 goto label047;

        $z44 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z44 == 0 goto label046;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label046:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Verifiers:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Required: ");

        $r110 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r110);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (uid=");

        $r111 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        $i12 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>($r111, 0);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i12);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label048;

     label047:
        $r96 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        if $r96 == null goto label048;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("vrfy,");

        $r108 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r108);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r109 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        $i11 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>($r109, 0);

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i11);

     label048:
        $z3 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(1);

        if $z3 == 0 goto label059;

        if r5 != null goto label059;

        z79 = 0;

        $r100 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r99 = virtualinvoke $r100.<java.util.HashMap: java.util.Set keySet()>();

        r188 = interfaceinvoke $r99.<java.util.Set: java.util.Iterator iterator()>();

     label049:
        $z43 = interfaceinvoke r188.<java.util.Iterator: boolean hasNext()>();

        if $z43 == 0 goto label059;

        $r103 = interfaceinvoke r188.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r103;

        $r102 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r95 = virtualinvoke $r102.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r95;

        if z1 != 0 goto label052;

        if z79 != 0 goto label051;

        $z41 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z41 == 0 goto label050;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label050:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Libraries:");

        z79 = 1;

     label051:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        goto label053;

     label052:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("lib,");

     label053:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        if z1 != 0 goto label054;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> ");

     label054:
        $r94 = r10.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        if $r94 == null goto label056;

        if z1 != 0 goto label055;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("(jar) ");

        $r97 = r10.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r97);

        goto label058;

     label055:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",jar,");

        $r98 = r10.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r98);

        goto label058;

     label056:
        if z1 != 0 goto label057;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("(apk) ");

        $r92 = r10.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r92);

        goto label058;

     label057:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",apk,");

        $r93 = r10.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r93);

     label058:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label049;

     label059:
        $z6 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(2);

        if $z6 == 0 goto label065;

        if r5 != null goto label065;

        $z35 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z35 == 0 goto label060;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label060:
        if z1 != 0 goto label061;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Features:");

     label061:
        $r88 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        $r89 = virtualinvoke $r88.<java.util.HashMap: java.util.Set keySet()>();

        r189 = interfaceinvoke $r89.<java.util.Set: java.util.Iterator iterator()>();

     label062:
        $z42 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>();

        if $z42 == 0 goto label065;

        $r101 = interfaceinvoke r189.<java.util.Iterator: java.lang.Object next()>();

        r190 = (java.lang.String) $r101;

        if z1 != 0 goto label063;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        goto label064;

     label063:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("feat,");

     label064:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r190);

        goto label062;

     label065:
        if z1 != 0 goto label077;

        $z26 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(4);

        if $z26 == 0 goto label077;

        $r85 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $z31 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z31 == 0 goto label066;

        $r86 = "\nActivity Resolver Table:";

        goto label067;

     label066:
        $r86 = "Activity Resolver Table:";

     label067:
        $z33 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z32 = virtualinvoke $r85.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, $r86, "  ", r5, $z33);

        if $z32 == 0 goto label068;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label068:
        $r87 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        $z34 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z34 == 0 goto label069;

        $r82 = "\nReceiver Resolver Table:";

        goto label070;

     label069:
        $r82 = "Receiver Resolver Table:";

     label070:
        $z29 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z28 = virtualinvoke $r87.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, $r82, "  ", r5, $z29);

        if $z28 == 0 goto label071;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label071:
        $r83 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        $z30 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z30 == 0 goto label072;

        $r84 = "\nService Resolver Table:";

        goto label073;

     label072:
        $r84 = "Service Resolver Table:";

     label073:
        $z36 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z37 = virtualinvoke $r83.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, $r84, "  ", r5, $z36);

        if $z37 == 0 goto label074;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label074:
        $r90 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $z38 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z38 == 0 goto label075;

        $r91 = "\nProvider Resolver Table:";

        goto label076;

     label075:
        $r91 = "Provider Resolver Table:";

     label076:
        $z39 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z40 = virtualinvoke $r90.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, $r91, "  ", r5, $z39);

        if $z40 == 0 goto label077;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label077:
        if z1 != 0 goto label082;

        $z24 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(512);

        if $z24 == 0 goto label082;

        i19 = 0;

     label078:
        $r68 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r69 = $r68.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i6 = virtualinvoke $r69.<android.util.SparseArray: int size()>();

        if i19 >= $i6 goto label082;

        $r67 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r65 = $r67.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r66 = virtualinvoke $r65.<android.util.SparseArray: java.lang.Object valueAt(int)>(i19);

        r191 = (com.android.server.pm.PreferredIntentResolver) $r66;

        $r76 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r75 = $r76.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        i20 = virtualinvoke $r75.<android.util.SparseArray: int keyAt(int)>(i19);

        $z25 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z25 == 0 goto label079;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPreferred Activities User ");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r81 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label080;

     label079:
        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred Activities User ");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r81 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

     label080:
        $z27 = virtualinvoke r191.<com.android.server.pm.PreferredIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, $r81, "  ", r5, 1);

        if $z27 == 0 goto label081;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label081:
        i19 = i19 + 1;

        goto label078;

     label082:
        if z1 != 0 goto label088;

        $z22 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(1024);

        if $z22 == 0 goto label088;

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        $r63 = new java.io.FileOutputStream;

        specialinvoke $r63.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        r192 = $r63;

        $r61 = new java.io.BufferedOutputStream;

        specialinvoke $r61.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r192);

        r193 = $r61;

        $r62 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r62.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r194 = $r62;

     label083:
        interfaceinvoke r194.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r193, "utf-8");

        $r60 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r194.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r60);

        interfaceinvoke r194.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        $r70 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r70.<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int,boolean)>(r194, 0, z0);

        interfaceinvoke r194.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        interfaceinvoke r194.<org.xmlpull.v1.XmlSerializer: void flush()>();

     label084:
        goto label088;

     label085:
        $r146 := @caughtexception;

        r195 = $r146;

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing: ");

        $r151 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r195);

        $r150 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r150);

        goto label088;

     label086:
        $r171 := @caughtexception;

        r196 = $r171;

        $r172 = new java.lang.StringBuilder;

        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing: ");

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r196);

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r175);

        goto label088;

     label087:
        $r177 := @caughtexception;

        r197 = $r177;

        $r178 = new java.lang.StringBuilder;

        specialinvoke $r178.<java.lang.StringBuilder: void <init>()>();

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing: ");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r197);

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r181);

     label088:
        if z1 != 0 goto label094;

        $z19 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(8);

        if $z19 == 0 goto label094;

        $r50 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r50.<com.android.server.pm.Settings: void dumpPermissionsLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>(r2, r5, r4);

        if r5 != null goto label094;

        i21 = 0;

     label089:
        $r49 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $i5 = virtualinvoke $r49.<android.util.ArrayMap: int size()>();

        if i21 >= $i5 goto label094;

        if i21 != 0 goto label091;

        $z23 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z23 == 0 goto label090;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label090:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("AppOp Permissions:");

     label091:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  AppOp Permission ");

        $r57 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r59 = virtualinvoke $r57.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i21);

        $r58 = (java.lang.String) $r59;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r58);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r55 = r0.<com.android.server.pm.PackageManagerService: android.util.ArrayMap mAppOpPermissionPackages>;

        $r54 = virtualinvoke $r55.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i21);

        r198 = (android.util.ArraySet) $r54;

        i22 = 0;

     label092:
        $i4 = virtualinvoke r198.<android.util.ArraySet: int size()>();

        if i22 >= $i4 goto label093;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r56 = virtualinvoke r198.<android.util.ArraySet: java.lang.Object valueAt(int)>(i22);

        $r64 = (java.lang.String) $r56;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        i22 = i22 + 1;

        goto label092;

     label093:
        i21 = i21 + 1;

        goto label089;

     label094:
        if z1 != 0 goto label105;

        $z14 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(128);

        if $z14 == 0 goto label105;

        z80 = 0;

        $r29 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r33 = staticinvoke <com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.HashMap access$1900(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>($r29);

        $r32 = virtualinvoke $r33.<java.util.HashMap: java.util.Collection values()>();

        r199 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>();

     label095:
        $z15 = interfaceinvoke r199.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label099;

        $r46 = interfaceinvoke r199.<java.util.Iterator: java.lang.Object next()>();

        r200 = (android.content.pm.PackageParser$Provider) $r46;

        if r5 == null goto label096;

        $r53 = r200.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r52 = $r53.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z20 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z20 != 0 goto label096;

        goto label095;

     label096:
        if z80 != 0 goto label098;

        $z21 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z21 == 0 goto label097;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label097:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Registered ContentProviders:");

        z80 = 1;

     label098:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r200.<android.content.pm.PackageParser$Provider: void printComponentShortName(java.io.PrintWriter)>(r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r51 = virtualinvoke r200.<android.content.pm.PackageParser$Provider: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        goto label095;

     label099:
        z81 = 0;

        $r35 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r34 = virtualinvoke $r35.<java.util.HashMap: java.util.Set entrySet()>();

        r201 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label100:
        $z16 = interfaceinvoke r201.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label105;

        $r40 = interfaceinvoke r201.<java.util.Iterator: java.lang.Object next()>();

        r202 = (java.util.Map$Entry) $r40;

        $r41 = interfaceinvoke r202.<java.util.Map$Entry: java.lang.Object getValue()>();

        r203 = (android.content.pm.PackageParser$Provider) $r41;

        if r5 == null goto label101;

        $r44 = r203.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r45 = $r44.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z17 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z17 != 0 goto label101;

        goto label100;

     label101:
        if z81 != 0 goto label103;

        $z18 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z18 == 0 goto label102;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label102:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ContentProvider Authorities:");

        z81 = 1;

     label103:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  [");

        $r42 = interfaceinvoke r202.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r43 = (java.lang.String) $r42;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r43);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("]:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r36 = virtualinvoke r203.<android.content.pm.PackageParser$Provider: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        $r37 = r203.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        if $r37 == null goto label104;

        $r38 = r203.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r39 = $r38.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r39 == null goto label104;

        $r47 = r203.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r48 = $r47.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r11 = virtualinvoke $r48.<android.content.pm.ApplicationInfo: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      applicationInfo=");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r11);

     label104:
        goto label100;

     label105:
        if z1 != 0 goto label106;

        $z12 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(2048);

        if $z12 == 0 goto label106;

        $r31 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r30 = $r31.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        virtualinvoke $r30.<com.android.server.pm.KeySetManagerService: void dumpLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>(r2, r5, r4);

     label106:
        $z5 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(16);

        if $z5 == 0 goto label107;

        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r27.<com.android.server.pm.Settings: void dumpPackagesLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState,boolean)>(r2, r5, r4, z1);

     label107:
        if z1 != 0 goto label108;

        $z13 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(32);

        if $z13 == 0 goto label108;

        $r28 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r28.<com.android.server.pm.Settings: void dumpSharedUsersLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>(r2, r5, r4);

     label108:
        if z1 != 0 goto label110;

        $z10 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(8192);

        if $z10 == 0 goto label110;

        if r5 != null goto label110;

        $z11 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z11 == 0 goto label109;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label109:
        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageInstallerService mInstallerService>;

        $r25 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r25.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>(r2, "  ", 120);

        virtualinvoke $r26.<com.android.server.pm.PackageInstallerService: void dump(com.android.internal.util.IndentingPrintWriter)>($r25);

     label110:
        if z1 != 0 goto label133;

        $z8 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(64);

        if $z8 == 0 goto label133;

        if r5 != null goto label133;

        $z9 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z9 == 0 goto label111;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label111:
        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r22.<com.android.server.pm.Settings: void dumpReadMessagesLPr(java.io.PrintWriter,com.android.server.pm.PackageManagerService$DumpState)>(r2, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Package warning messages:");

        r204 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File getSettingsProblemFile()>();

        r205 = null;

     label112:
        $r24 = new java.io.FileInputStream;

        specialinvoke $r24.<java.io.FileInputStream: void <init>(java.io.File)>(r204);

        r205 = $r24;

        i23 = virtualinvoke r205.<java.io.FileInputStream: int available()>();

        r206 = newarray (byte)[i23];

        virtualinvoke r205.<java.io.FileInputStream: int read(byte[])>(r206);

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r206);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r23);

     label113:
        if r205 == null goto label133;

     label114:
        virtualinvoke r205.<java.io.FileInputStream: void close()>();

     label115:
        goto label133;

     label116:
        $r168 := @caughtexception;

        goto label133;

     label117:
        $r169 := @caughtexception;

     label118:
        if r205 == null goto label133;

     label119:
        virtualinvoke r205.<java.io.FileInputStream: void close()>();

     label120:
        goto label133;

     label121:
        $r176 := @caughtexception;

        goto label133;

     label122:
        $r184 := @caughtexception;

     label123:
        if r205 == null goto label133;

     label124:
        virtualinvoke r205.<java.io.FileInputStream: void close()>();

     label125:
        goto label133;

     label126:
        $r182 := @caughtexception;

        goto label133;

     label127:
        $r183 := @caughtexception;

        r12 = $r183;

     label128:
        if r205 == null goto label132;

     label129:
        virtualinvoke r205.<java.io.FileInputStream: void close()>();

     label130:
        goto label132;

     label131:
        $r156 := @caughtexception;

     label132:
        throw r12;

     label133:
        if z1 == 0 goto label141;

        $z7 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(64);

        if $z7 == 0 goto label141;

        r207 = null;

     label134:
        $r20 = new java.io.BufferedReader;

        $r21 = new java.io.FileReader;

        $r18 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File getSettingsProblemFile()>();

        specialinvoke $r21.<java.io.FileReader: void <init>(java.io.File)>($r18);

        specialinvoke $r20.<java.io.BufferedReader: void <init>(java.io.Reader)>($r21);

        r207 = $r20;

     label135:
        $r19 = virtualinvoke r207.<java.io.BufferedReader: java.lang.String readLine()>();

        r208 = $r19;

        if $r19 == null goto label136;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("msg,");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r208);

        goto label135;

     label136:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r207);

        goto label141;

     label137:
        $r155 := @caughtexception;

     label138:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r207);

        goto label141;

     label139:
        $r170 := @caughtexception;

        r13 = $r170;

     label140:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r207);

        throw r13;

     label141:
        exitmonitor r187;

     label142:
        goto label145;

     label143:
        $r185 := @caughtexception;

        r15 = $r185;

        exitmonitor r187;

     label144:
        throw r15;

     label145:
        return;

        catch java.lang.Throwable from label037 to label038 with label039;
        catch java.lang.Throwable from label039 to label040 with label039;
        catch java.lang.IllegalArgumentException from label083 to label084 with label085;
        catch java.lang.IllegalStateException from label083 to label084 with label086;
        catch java.io.IOException from label083 to label084 with label087;
        catch java.io.IOException from label114 to label115 with label116;
        catch java.io.FileNotFoundException from label112 to label113 with label117;
        catch java.io.IOException from label119 to label120 with label121;
        catch java.io.IOException from label112 to label113 with label122;
        catch java.io.IOException from label124 to label125 with label126;
        catch java.lang.Throwable from label112 to label113 with label127;
        catch java.lang.Throwable from label117 to label118 with label127;
        catch java.lang.Throwable from label122 to label123 with label127;
        catch java.io.IOException from label129 to label130 with label131;
        catch java.lang.Throwable from label127 to label128 with label127;
        catch java.io.IOException from label134 to label136 with label137;
        catch java.lang.Throwable from label134 to label136 with label139;
        catch java.lang.Throwable from label137 to label138 with label139;
        catch java.lang.Throwable from label139 to label140 with label139;
        catch java.lang.Throwable from label043 to label142 with label143;
        catch java.lang.Throwable from label143 to label144 with label143;
    }

    static java.lang.String getEncryptKey()
    {
        java.lang.String r0, $r7, $r12;
        android.security.SystemKeyStore $r1, $r2;
        java.io.IOException $r3, r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;
        java.security.NoSuchAlgorithmException $r8, r13;

     label1:
        $r1 = staticinvoke <android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>();

        r0 = virtualinvoke $r1.<android.security.SystemKeyStore: java.lang.String retrieveKeyHexString(java.lang.String)>("AppsOnSD");

        if r0 != null goto label3;

        $r2 = staticinvoke <android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>();

        r0 = virtualinvoke $r2.<android.security.SystemKeyStore: java.lang.String generateNewKeyHexString(int,java.lang.String,java.lang.String)>(128, "AES", "AppsOnSD");

        if r0 != null goto label3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Failed to create encryption keys");

     label2:
        return null;

     label3:
        return r0;

     label4:
        $r8 := @caughtexception;

        r13 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create encryption keys with exception: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r12);

        return null;

     label5:
        $r3 := @caughtexception;

        r14 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve encryption keys with exception: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r7);

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public void updateExternalMediaStatus(boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1, $z2, $z3;
        int i0;
        java.util.HashMap r1, $r4;
        android.os.Message r2;
        java.lang.Throwable r3, $r19;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10;
        java.lang.String $r11, $r16, $r18;
        com.android.server.pm.PackageManagerService$PackageHandler $r12, $r14, $r15;
        com.android.server.pm.PackageManagerService$11 $r13;
        byte $b2;
        java.lang.SecurityException $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 0 goto label01;

        if i0 == 1000 goto label01;

        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>("Media status can only be updated by the system");

        throw $r17;

     label01:
        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r4;

        entermonitor $r4;

     label02:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating external media status from ");

        $z2 = r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted>;

        if $z2 == 0 goto label03;

        $r18 = "mounted";

        goto label04;

     label03:
        $r18 = "unmounted";

     label04:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        if z0 == 0 goto label05;

        $r16 = "mounted";

        goto label06;

     label05:
        $r16 = "unmounted";

     label06:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r11);

        $z3 = r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted>;

        if z0 != $z3 goto label10;

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        if z1 == 0 goto label07;

        $b2 = 1;

        goto label08;

     label07:
        $b2 = 0;

     label08:
        r2 = virtualinvoke $r14.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int)>(12, $b2, -1);

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r15.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r2);

        exitmonitor r1;

     label09:
        return;

     label10:
        r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted> = z0;

        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r19 := @caughtexception;

        r3 = $r19;

        exitmonitor r1;

     label13:
        throw r3;

     label14:
        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r13 = new com.android.server.pm.PackageManagerService$11;

        specialinvoke $r13.<com.android.server.pm.PackageManagerService$11: void <init>(com.android.server.pm.PackageManagerService,boolean,boolean)>(r0, z0, z1);

        virtualinvoke $r12.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r13);

        return;

        catch java.lang.Throwable from label02 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void scanAvailableAsecs()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean,boolean)>(1, 0, 0);

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mShouldRestoreconData>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.server.pm.SELinuxMMAC: void setRestoreconDone()>();

        r0.<com.android.server.pm.PackageManagerService: boolean mShouldRestoreconData> = 0;

     label1:
        return;
    }

    private void updateExternalMediaStatusInner(boolean, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        android.util.ArrayMap r1, $r10;
        int[] r2;
        java.lang.String[] r3, r5, $r17;
        java.util.HashMap r4, $r12, $r16;
        int i0, i1, i2;
        java.lang.String r6, r7, $r19, $r24, $r26, $r27, $r28, $r29, $r35, $r41;
        com.android.server.pm.PackageSetting r8;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r9, $r18;
        java.lang.Throwable r11, $r40;
        com.android.server.pm.PackageInstallerService $r13;
        com.android.server.pm.Settings $r14;
        java.lang.Object $r15;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r25, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r1 = $r10;

        r2 = <libcore.util.EmptyArray: int[] INT>;

        r3 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()>();

        $z3 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r3);

        if $z3 == 0 goto label01;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", "No secure containers found");

        goto label16;

     label01:
        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r4 = $r12;

        entermonitor $r12;

     label02:
        r5 = r3;

        i0 = lengthof r5;

        i1 = 0;

     label03:
        if i1 >= i0 goto label11;

        r6 = r5[i1];

        $z4 = staticinvoke <com.android.server.pm.PackageInstallerService: boolean isStageName(java.lang.String)>(r6);

        if $z4 == 0 goto label04;

        goto label10;

     label04:
        r7 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)>(r6);

        if r7 != null goto label05;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found stale container ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no package name");

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r41);

        goto label10;

     label05:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (com.android.server.pm.PackageSetting) $r15;

        if r8 != null goto label06;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found stale container ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no matching settings");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r35);

        goto label10;

     label06:
        if z2 == 0 goto label07;

        if z0 != 0 goto label07;

        $z7 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(com.android.server.pm.PackageSetting)>(r8);

        if $z7 != 0 goto label07;

        goto label10;

     label07:
        $r18 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        $r17 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>(r8);

        $z5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isForwardLocked(com.android.server.pm.PackageSetting)>(r8);

        specialinvoke $r18.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String[],boolean)>(r0, r6, $r17, $z5);

        r9 = $r18;

        $r19 = r8.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        if $r19 == null goto label09;

        $r28 = r8.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r27 = virtualinvoke r9.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>();

        $z6 = virtualinvoke $r28.<java.lang.String: boolean startsWith(java.lang.String)>($r27);

        if $z6 == 0 goto label09;

        $r29 = r8.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r29);

        i2 = r8.<com.android.server.pm.PackageSetting: int appId>;

        if i2 == -1 goto label08;

        r2 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>(r2, i2);

     label08:
        goto label10;

     label09:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found stale container ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected codePath=");

        $r26 = r8.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r24);

     label10:
        i1 = i1 + 1;

        goto label03;

     label11:
        exitmonitor r4;

     label12:
        goto label15;

     label13:
        $r40 := @caughtexception;

        r11 = $r40;

        exitmonitor r4;

     label14:
        throw r11;

     label15:
        staticinvoke <java.util.Arrays: void sort(int[])>(r2);

     label16:
        if z0 == 0 goto label17;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void loadMediaPackages(android.util.ArrayMap,int[])>(r1, r2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void startCleaningPackages()>();

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageInstallerService mInstallerService>;

        virtualinvoke $r13.<com.android.server.pm.PackageInstallerService: void onSecureContainersAvailable()>();

        goto label18;

     label17:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void unloadMediaPackages(android.util.ArrayMap,int[],boolean)>(r1, r2, z1);

     label18:
        return;

        catch java.lang.Throwable from label02 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private void sendResourcesChangedBroadcast(boolean, boolean, java.util.ArrayList, int[], android.content.IIntentReceiver)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1;
        java.util.ArrayList r1;
        int[] r2;
        android.content.IIntentReceiver r3;
        int i0;
        android.os.Bundle r4, $r6;
        java.lang.String r5, $r10;
        java.lang.String[] $r7, $r9;
        java.lang.Object[] $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.util.ArrayList;

        r2 := @parameter3: int[];

        r3 := @parameter4: android.content.IIntentReceiver;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label5;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r4 = $r6;

        $r7 = newarray (java.lang.String)[i0];

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.lang.String[]) $r8;

        virtualinvoke r4.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.intent.extra.changed_package_list", $r9);

        if r2 == null goto label1;

        virtualinvoke r4.<android.os.Bundle: void putIntArray(java.lang.String,int[])>("android.intent.extra.changed_uid_list", r2);

     label1:
        if z1 == 0 goto label2;

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", z1);

     label2:
        if z0 == 0 goto label3;

        $r10 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        goto label4;

     label3:
        $r10 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

     label4:
        r5 = $r10;

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>(r5, null, r4, null, r3, null);

     label5:
        return;
    }

    private void loadMediaPackages(android.util.ArrayMap, int[])
    {
        com.android.server.pm.PackageManagerService r0;
        android.util.ArrayMap r1;
        int[] r2;
        java.util.ArrayList r3, $r14;
        java.util.Set r4;
        java.util.Iterator r5;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r6;
        java.lang.String r7, $r27, $r33, $r36, $r37, $r43, $r44, $r45, $r57, $r58, $r59, $r62, $r71, $r72, $r75, $r79, $r83, $r91, $r92, $r93;
        byte b0, $b5, $b7;
        int i1, $i2, $i3, $i4, $i6, $i8, $i9, $i11, $i16;
        java.lang.Object r8, $r29, $r30, $r51;
        android.content.pm.PackageParser$Package r9;
        com.android.server.pm.PackageManagerException r10, $r97;
        java.lang.Throwable r11, r12, r13, r15, $r74, $r86, $r94, $r95;
        java.util.HashMap $r16, $r60, r98, r99;
        boolean $z0, $z1, $z2, $z3, $z4, z6;
        com.android.server.pm.Settings $r17, $r18, $r19, $r20, $r25;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r26, $r28, $r31, $r32, $r34, $r35, $r38, $r39, $r40, $r41, $r42, $r46, $r47, $r48, $r49, $r50, $r53, $r54, $r55, $r56, $r61, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r73, $r76, $r77, $r78, $r80, $r81, $r82, $r84, $r85, $r87, $r88, $r89, $r90, $r96;
        java.io.File $r52;
        android.content.pm.ApplicationInfo $r67;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.util.ArrayMap;

        r2 := @parameter1: int[];

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r3 = $r14;

        r4 = virtualinvoke r1.<android.util.ArrayMap: java.util.Set keySet()>();

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r29 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.PackageManagerService$AsecInstallArgs) $r29;

        $r30 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.String) $r30;

        b0 = -18;

     label02:
        $i11 = virtualinvoke r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPreInstall(int)>(1);

        if $i11 == 1 goto label04;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mount cid : ");

        $r72 = r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r73 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r70 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when installing from sdcard");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r71);

     label03:
        if b0 == 1 goto label01;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r79 = r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r78 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stale, retCode=");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r75);

        goto label01;

     label04:
        if r7 == null goto label05;

        $r44 = virtualinvoke r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>();

        $z2 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>($r44);

        if $z2 != 0 goto label07;

     label05:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r36 = r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cachepath ");

        $r33 = virtualinvoke r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>();

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match one in settings ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r37);

     label06:
        if b0 == 1 goto label01;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r45 = r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stale, retCode=");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r43 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r43);

        goto label01;

     label07:
        i1 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        $z3 = virtualinvoke r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean isExternal()>();

        if $z3 == 0 goto label08;

        i1 = i1 | 32;

     label08:
        $z4 = virtualinvoke r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean isFwdLocked()>();

        if $z4 == 0 goto label09;

        i1 = i1 | 16;

     label09:
        $r51 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r8 = $r51;

        entermonitor $r51;

     label10:
        r9 = null;

     label11:
        $r52 = new java.io.File;

        specialinvoke $r52.<java.io.File: void <init>(java.lang.String)>(r7);

        r9 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>($r52, i1, 0, 0L, null);

     label12:
        goto label14;

     label13:
        $r97 := @caughtexception;

        r10 = $r97;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to scan ");

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r91 = virtualinvoke r10.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r92);

     label14:
        if r9 == null goto label20;

        $r60 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r98 = $r60;

        entermonitor $r60;

     label15:
        b0 = 1;

        $r59 = r9.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r59);

        $r67 = r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i16 = $r67.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPostInstall(int,int)>(1, $i16);

        exitmonitor r98;

     label16:
        goto label19;

     label17:
        $r74 := @caughtexception;

        r11 = $r74;

        exitmonitor r98;

     label18:
        throw r11;

     label19:
        goto label21;

     label20:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to install pkg from  ");

        $r56 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from sdcard");

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r57);

     label21:
        exitmonitor r8;

     label22:
        goto label25;

     label23:
        $r95 := @caughtexception;

        r12 = $r95;

        exitmonitor r8;

     label24:
        throw r12;

     label25:
        if b0 == 1 goto label29;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r62 = r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r61 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stale, retCode=");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r58 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r58);

        goto label29;

     label26:
        $r86 := @caughtexception;

        r13 = $r86;

     label27:
        if b0 == 1 goto label28;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r83 = r6.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r82 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stale, retCode=");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r93 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r93);

     label28:
        throw r13;

     label29:
        goto label01;

     label30:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r99 = $r16;

        entermonitor $r16;

     label31:
        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i4 = $r17.<com.android.server.pm.Settings: int mExternalSdkPlatform>;

        $i2 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        if $i4 == $i2 goto label32;

        $z1 = 1;

        goto label33;

     label32:
        $z1 = 0;

     label33:
        z6 = $z1;

        if z6 == 0 goto label34;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Platform changed from ");

        $r25 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i8 = $r25.<com.android.server.pm.Settings: int mExternalSdkPlatform>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i9 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; regranting permissions for external storage");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r27);

     label34:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i3 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r18.<com.android.server.pm.Settings: int mExternalSdkPlatform> = $i3;

        if z6 == 0 goto label35;

        $b7 = 6;

        goto label36;

     label35:
        $b7 = 0;

     label36:
        $b5 = 1 | $b7;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>(null, null, $b5);

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void updateExternalDatabaseVersion()>();

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r19.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r99;

     label37:
        goto label40;

     label38:
        $r94 := @caughtexception;

        r15 = $r94;

        exitmonitor r99;

     label39:
        throw r15;

     label40:
        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label41;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(1, 0, r3, r2, null);

     label41:
        return;

        catch com.android.server.pm.PackageManagerException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label10 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label04 to label06 with label26;
        catch java.lang.Throwable from label07 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label31 to label37 with label38;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    private void unloadAllContainers(java.util.Set)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Set r1;
        java.util.Iterator r2;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r3;
        java.lang.Object r4, $r6, $r7;
        java.lang.Throwable r5, $r8;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.PackageManagerService$AsecInstallArgs) $r6;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r4 = $r7;

        entermonitor $r7;

     label2:
        virtualinvoke r3.<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean doPostDeleteLI(boolean)>(0);

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void unloadMediaPackages(android.util.ArrayMap, int[], boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.util.ArrayMap r1;
        int[] r2;
        boolean z0, z1, $z2;
        java.util.ArrayList r3, r4, $r13, $r14;
        java.util.Set r5;
        java.util.Iterator r6;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r7;
        java.lang.String r8, $r26;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r9, $r20;
        java.lang.Object r10, $r21, $r22;
        java.lang.Throwable r11, r12, $r27, $r28;
        com.android.server.pm.Settings $r15;
        java.util.HashMap $r16, r29;
        int $i0;
        com.android.server.pm.PackageManagerService$PackageHandler $r17, $r18;
        com.android.server.pm.PackageManagerService$12 $r19;
        byte $b1;
        java.lang.StringBuilder $r23, $r24, $r25;
        android.os.Message r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.util.ArrayMap;

        r2 := @parameter1: int[];

        z0 := @parameter2: boolean;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r4 = $r14;

        r5 = virtualinvoke r1.<android.util.ArrayMap: java.util.Set keySet()>();

        r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.PackageManagerService$AsecInstallArgs) $r22;

        r8 = virtualinvoke r7.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()>();

        $r20 = new com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r20.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>();

        r9 = $r20;

        $r21 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        r10 = $r21;

        entermonitor $r21;

     label02:
        z1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, null, 0, null, null, 1, r9, 0);

        if z1 == 0 goto label03;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label04;

     label03:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete pkg from sdcard : ");

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r26);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label04:
        exitmonitor r10;

     label05:
        goto label08;

     label06:
        $r28 := @caughtexception;

        r11 = $r28;

        exitmonitor r10;

     label07:
        throw r11;

     label08:
        goto label01;

     label09:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r29 = $r16;

        entermonitor $r16;

     label10:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r15.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r29;

     label11:
        goto label14;

     label12:
        $r27 := @caughtexception;

        r12 = $r27;

        exitmonitor r29;

     label13:
        throw r12;

     label14:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label15;

        $r19 = new com.android.server.pm.PackageManagerService$12;

        specialinvoke $r19.<com.android.server.pm.PackageManagerService$12: void <init>(com.android.server.pm.PackageManagerService,boolean,java.util.Set)>(r0, z0, r5);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(0, 0, r3, r2, $r19);

        goto label18;

     label15:
        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        if z0 == 0 goto label16;

        $b1 = 1;

        goto label17;

     label16:
        $b1 = 0;

     label17:
        r30 = virtualinvoke $r17.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(12, $b1, -1, r5);

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r18.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r30);

     label18:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void movePackage(java.lang.String, android.content.pm.IPackageMoveObserver, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r5, r6, $r25;
        android.content.pm.IPackageMoveObserver r2;
        int i0, $i3, $i4, $i5, $i7;
        android.os.UserHandle r3, $r12;
        byte b1, b2, $b6, $b9, b13, b15;
        java.io.File r4, $r24;
        java.util.HashMap r7, $r13, $r14, $r18;
        android.content.pm.PackageParser$Package r8;
        com.android.server.pm.PackageSetting r9;
        java.lang.Throwable r10, $r26;
        android.content.Context $r11;
        com.android.server.pm.Settings $r15;
        java.lang.Object $r16, $r17;
        com.android.server.pm.PackageManagerService$13 $r19, r29;
        com.android.server.pm.PackageManagerService$PackageHandler $r20, $r22;
        com.android.server.pm.PackageManagerService$InstallParams $r21;
        android.content.pm.ApplicationInfo $r23;
        boolean $z2, $z3, $z4, $z5;
        android.os.RemoteException $r27;
        android.os.Message r30;
        com.android.server.pm.PackageManagerService$OriginInfo r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageMoveObserver;

        i0 := @parameter2: int;

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MOVE_PACKAGE", null);

        $r12 = new android.os.UserHandle;

        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke $r12.<android.os.UserHandle: void <init>(int)>($i3);

        r3 = $r12;

        b1 = 1;

        b2 = 0;

        r4 = null;

        r5 = null;

        r6 = null;

        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r7 = $r14;

        entermonitor $r14;

     label01:
        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r16 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (android.content.pm.PackageParser$Package) $r16;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (com.android.server.pm.PackageSetting) $r17;

        if r8 == null goto label02;

        if r9 != null goto label03;

     label02:
        b1 = -2;

        goto label14;

     label03:
        $r23 = r8.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r23 == null goto label04;

        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r8);

        if $z5 == 0 goto label04;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot move system application");

        b1 = -3;

        goto label13;

     label04:
        $z2 = r8.<android.content.pm.PackageParser$Package: boolean mOperationPending>;

        if $z2 == 0 goto label05;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to move package which has pending operations");

        b1 = -7;

        goto label13;

     label05:
        $i4 = i0 & 2;

        if $i4 == 0 goto label06;

        $i7 = i0 & 1;

        if $i7 == 0 goto label06;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Ambigous flags specified for move location.");

        b1 = -5;

        goto label12;

     label06:
        $i5 = i0 & 2;

        if $i5 == 0 goto label07;

        $b6 = 8;

        goto label08;

     label07:
        $b6 = 16;

     label08:
        b2 = $b6;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r8);

        if $z3 == 0 goto label09;

        $b9 = 8;

        goto label10;

     label09:
        $b9 = 16;

     label10:
        b13 = $b9;

        if b2 != b13 goto label11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "No move required. Trying to move to same location");

        b1 = -5;

        goto label12;

     label11:
        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r8);

        if $z4 == 0 goto label12;

        b2 = b2 | 1;

     label12:
        if b1 != 1 goto label13;

        r8.<android.content.pm.PackageParser$Package: boolean mOperationPending> = 1;

     label13:
        $r24 = new java.io.File;

        $r25 = r8.<android.content.pm.PackageParser$Package: java.lang.String codePath>;

        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>($r25);

        r4 = $r24;

        r5 = r9.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        r6 = r9.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

     label14:
        exitmonitor r7;

     label15:
        goto label18;

     label16:
        $r26 := @caughtexception;

        r10 = $r26;

        exitmonitor r7;

     label17:
        throw r10;

     label18:
        if b1 == 1 goto label23;

     label19:
        interfaceinvoke r2.<android.content.pm.IPackageMoveObserver: void packageMoved(java.lang.String,int)>(r1, b1);

     label20:
        goto label22;

     label21:
        $r27 := @caughtexception;

     label22:
        return;

     label23:
        $r19 = new com.android.server.pm.PackageManagerService$13;

        specialinvoke $r19.<com.android.server.pm.PackageManagerService$13: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,android.content.pm.IPackageMoveObserver)>(r0, r1, r2);

        r29 = $r19;

        b15 = b2 | 2;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r30 = virtualinvoke $r20.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        r31 = staticinvoke <com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromExistingFile(java.io.File)>(r4);

        $r21 = new com.android.server.pm.PackageManagerService$InstallParams;

        specialinvoke $r21.<com.android.server.pm.PackageManagerService$InstallParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$OriginInfo,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,android.os.UserHandle,java.lang.String)>(r0, r31, r29, b15, r5, null, r3, r6);

        r30.<android.os.Message: java.lang.Object obj> = $r21;

        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r22.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r30);

        return;

        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch android.os.RemoteException from label19 to label20 with label21;
    }

    public boolean setInstallLocation(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1;
        android.content.Context $r1, $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS", null);

        $i1 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int getInstallLocation()>();

        if $i1 != i0 goto label1;

        return 1;

     label1:
        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label3;

     label2:
        $r2 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r3, "default_install_location", i0);

        return 1;

     label3:
        return 0;
    }

    public int getInstallLocation()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "default_install_location", 0);

        return $i0;
    }

    void cleanUpUserLILPw(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.UserManagerService r1;
        int i0;
        java.util.HashSet $r2;
        java.lang.Integer $r3;
        com.android.server.pm.Settings $r4;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r5;
        com.android.server.pm.Installer $r6, $r8;
        android.util.SparseBooleanArray $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r4.<com.android.server.pm.Settings: void removeUserLPw(int)>(i0);

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void remove(int)>(i0);

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        if $r6 == null goto label1;

        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r8.<com.android.server.pm.Installer: int removeUserDataDirs(int)>(i0);

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseBooleanArray mUserNeedsBadging>;

        virtualinvoke $r7.<android.util.SparseBooleanArray: void delete(int)>(i0);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void removeUnusedPackagesLILPw(com.android.server.pm.UserManagerService,int)>(r1, i0);

        return;
    }

    private void removeUnusedPackagesLILPw(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.UserManagerService r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        int[] r2;
        java.util.Iterator r3;
        com.android.server.pm.PackageSetting r4;
        java.lang.String r5;
        boolean z1, $z2, $z4;
        com.android.server.pm.Settings $r6;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        android.content.pm.PackageParser$Package $r9, $r11;
        java.lang.Object $r10;
        com.android.server.pm.PackageManagerService$PackageHandler $r12;
        com.android.server.pm.PackageManagerService$14 $r13;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<com.android.server.pm.UserManagerService: int[] getUserIdsLPr()>();

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.PackageSetting) $r10;

        $r9 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r9 != null goto label2;

        goto label1;

     label2:
        $r11 = r4.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r5 = $r11.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $i2 = r4.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i4 = $i2 & 1;

        if $i4 == 0 goto label3;

        goto label1;

     label3:
        z1 = 0;

        i1 = 0;

     label4:
        $i3 = lengthof r2;

        if i1 >= $i3 goto label6;

        $i5 = r2[i1];

        if $i5 == i0 goto label5;

        $i6 = r2[i1];

        $z4 = virtualinvoke r4.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i6);

        if $z4 == 0 goto label5;

        z1 = 1;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        if z1 != 0 goto label7;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r13 = new com.android.server.pm.PackageManagerService$14;

        specialinvoke $r13.<com.android.server.pm.PackageManagerService$14: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int)>(r0, r5, i0);

        virtualinvoke $r12.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r13);

     label7:
        goto label1;

     label8:
        return;
    }

    void createNewUserLILPw(int, java.io.File)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.io.File r1;
        com.android.server.pm.Installer $r2, $r3, $r4;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.File;

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r3.<com.android.server.pm.Installer: int createUserConfig(int)>(i0);

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r5.<com.android.server.pm.Settings: void createNewUserLILPw(com.android.server.pm.PackageManagerService,com.android.server.pm.Installer,int,java.io.File)>(r0, $r4, i0, r1);

     label1:
        return;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r7;
        android.content.Context $r3;
        com.android.server.pm.Settings $r5;
        android.content.pm.VerifierDeviceIdentity $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", "Only package verification agents can read the verifier device identity");

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = virtualinvoke $r5.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()>();

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPermissionEnforced(java.lang.String, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r7, $r12;
        boolean z0, $z1, $z3;
        java.util.HashMap r2, $r14;
        java.lang.Throwable r3, r5, $r21, $r22;
        android.content.Context $r6;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        com.android.server.pm.Settings $r13, $r15, $r17, $r20;
        java.lang.Boolean $r16, $r18, $r19;
        android.os.RemoteException $r23;
        android.app.IActivityManager r24;
        long l0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GRANT_REVOKE_PERMISSIONS", null);

        $r7 = "android.permission.READ_EXTERNAL_STORAGE";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label15;

        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r14;

        entermonitor $r14;

     label01:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r13.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        if $r16 == null goto label02;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r20.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $z3 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == z0 goto label03;

     label02:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r15.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced> = $r18;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r17.<com.android.server.pm.Settings: void writeLPr()>();

     label03:
        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r22 := @caughtexception;

        r3 = $r22;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        r24 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r24 == null goto label14;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        interfaceinvoke r24.<android.app.IActivityManager: boolean killProcessesBelowForeground(java.lang.String)>("setPermissionEnforcement");

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label14;

     label10:
        $r23 := @caughtexception;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label14;

     label12:
        $r21 := @caughtexception;

        r5 = $r21;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label14:
        goto label16;

     label15:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No selective enforcement for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label16:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public boolean isPermissionEnforced(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        return 1;
    }

    public boolean isStorageLow()
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        com.android.server.storage.DeviceStorageMonitorInternal r1;
        boolean z0, z1;
        java.lang.Throwable r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "com/android/server/storage/DeviceStorageMonitorInternal");

        r1 = (com.android.server.storage.DeviceStorageMonitorInternal) $r3;

        if r1 == null goto label3;

        z0 = interfaceinvoke r1.<com.android.server.storage.DeviceStorageMonitorInternal: boolean isMemoryLow()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        z1 = 0;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.pm.IPackageInstaller getPackageInstaller()
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageInstallerService $r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageInstallerService mInstallerService>;

        return $r1;
    }

    private boolean userNeedsBadging(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.content.pm.UserInfo r1;
        long l2;
        java.lang.Throwable r2, $r7;
        android.util.SparseBooleanArray $r3, $r4, $r6;
        boolean $z0, $z1, z2;
        com.android.server.pm.UserManagerService $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseBooleanArray mUserNeedsBadging>;

        i1 = virtualinvoke $r3.<android.util.SparseBooleanArray: int indexOfKey(int)>(i0);

        if i1 >= 0 goto label8;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r1 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label5;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label5:
        if r1 == null goto label6;

        $z1 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label6;

        z2 = 1;

        goto label7;

     label6:
        z2 = 0;

     label7:
        $r6 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseBooleanArray mUserNeedsBadging>;

        virtualinvoke $r6.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z2);

        return z2;

     label8:
        $r4 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseBooleanArray mUserNeedsBadging>;

        $z0 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        return $z0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.pm.KeySet getKeySetByAlias(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r16, $r22;
        java.util.HashMap r3, $r7, $r8;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.KeySetManagerService r5;
        java.lang.Throwable r6, $r21;
        java.lang.Object $r9;
        com.android.server.pm.Settings $r10;
        android.content.pm.KeySet $r11;
        com.android.server.pm.KeySetHandle $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r19, $r20;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return null;

     label2:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r7;

        entermonitor $r7;

     label3:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r9;

        if r4 != null goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeySet requested for unknown package:");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label4:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r5 = $r10.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r11 = new android.content.pm.KeySet;

        $r12 = virtualinvoke r5.<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getKeySetByAliasAndPackageNameLPr(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke $r11.<android.content.pm.KeySet: void <init>(android.os.IBinder)>($r12);

        exitmonitor r3;

     label5:
        return $r11;

     label6:
        $r21 := @caughtexception;

        r6 = $r21;

        exitmonitor r3;

     label7:
        throw r6;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.content.pm.KeySet getSigningKeySet(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16, $r21;
        java.util.HashMap r2, $r6, $r7;
        android.content.pm.PackageParser$Package r3;
        com.android.server.pm.KeySetManagerService r4;
        java.lang.Throwable r5, $r23;
        java.lang.Object $r8;
        android.content.pm.ApplicationInfo $r9;
        int $i0, $i1, $i2;
        com.android.server.pm.Settings $r10;
        android.content.pm.KeySet $r11;
        com.android.server.pm.KeySetHandle $r12;
        java.lang.StringBuilder $r13, $r15, $r17, $r19, $r20, $r22;
        java.lang.SecurityException $r14;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r2 = $r6;

        entermonitor $r6;

     label2:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.pm.PackageParser$Package) $r8;

        if r3 != null goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeySet requested for unknown package:");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r18 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label3:
        $r9 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == $i1 goto label4;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if 1000 == $i2 goto label4;

        $r14 = new java.lang.SecurityException;

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>("May not access signing KeySet of other apps.");

        throw $r14;

     label4:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r4 = $r10.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r11 = new android.content.pm.KeySet;

        $r12 = virtualinvoke r4.<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getSigningKeySetByPackageNameLPr(java.lang.String)>(r1);

        specialinvoke $r11.<android.content.pm.KeySet: void <init>(android.os.IBinder)>($r12);

        exitmonitor r2;

     label5:
        return $r11;

     label6:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r2;

     label7:
        throw r5;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isPackageSignedByKeySet(java.lang.String, android.content.pm.KeySet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16, $r22;
        android.content.pm.KeySet r2;
        java.util.HashMap r3, $r8, $r9;
        android.content.pm.PackageParser$Package r4;
        android.os.IBinder r5;
        com.android.server.pm.KeySetManagerService r6;
        java.lang.Throwable r7, $r21;
        java.lang.Object $r10;
        boolean $z0, $z1;
        com.android.server.pm.Settings $r11;
        com.android.server.pm.KeySetHandle $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r19, $r20;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.KeySet;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r8;

        entermonitor $r8;

     label3:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r10;

        if r4 != null goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeySet requested for unknown package:");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label4:
        r5 = virtualinvoke r2.<android.content.pm.KeySet: android.os.IBinder getToken()>();

        $z0 = r5 instanceof com.android.server.pm.KeySetHandle;

        if $z0 == 0 goto label6;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r6 = $r11.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r12 = (com.android.server.pm.KeySetHandle) r5;

        $z1 = virtualinvoke r6.<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByLPr(java.lang.String,com.android.server.pm.KeySetHandle)>(r1, $r12);

        exitmonitor r3;

     label5:
        return $z1;

     label6:
        exitmonitor r3;

     label7:
        return 0;

     label8:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r3;

     label9:
        throw r7;

        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean isPackageSignedByKeySetExactly(java.lang.String, android.content.pm.KeySet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16, $r22;
        android.content.pm.KeySet r2;
        java.util.HashMap r3, $r8, $r9;
        android.content.pm.PackageParser$Package r4;
        android.os.IBinder r5;
        com.android.server.pm.KeySetManagerService r6;
        java.lang.Throwable r7, $r21;
        java.lang.Object $r10;
        boolean $z0, $z1;
        com.android.server.pm.Settings $r11;
        com.android.server.pm.KeySetHandle $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r19, $r20;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.KeySet;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r3 = $r8;

        entermonitor $r8;

     label3:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r10;

        if r4 != null goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeySet requested for unknown package:");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label4:
        r5 = virtualinvoke r2.<android.content.pm.KeySet: android.os.IBinder getToken()>();

        $z0 = r5 instanceof com.android.server.pm.KeySetHandle;

        if $z0 == 0 goto label6;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r6 = $r11.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r12 = (com.android.server.pm.KeySetHandle) r5;

        $z1 = virtualinvoke r6.<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByExactlyLPr(java.lang.String,com.android.server.pm.KeySetHandle)>(r1, $r12);

        exitmonitor r3;

     label5:
        return $z1;

     label6:
        exitmonitor r3;

     label7:
        return 0;

     label8:
        $r21 := @caughtexception;

        r7 = $r21;

        exitmonitor r3;

     label9:
        throw r7;

        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    static com.android.server.pm.PackageManagerService$DefaultContainerConnection access$500(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$DefaultContainerConnection $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection mDefContainerConn>;

        return $r1;
    }

    static com.android.internal.app.IMediaContainerService access$602(com.android.server.pm.PackageManagerService, com.android.internal.app.IMediaContainerService)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.internal.app.IMediaContainerService r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.internal.app.IMediaContainerService;

        r0.<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService mContainerService> = r1;

        return r1;
    }

    static com.android.internal.app.IMediaContainerService access$600(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.internal.app.IMediaContainerService $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService mContainerService>;

        return $r1;
    }

    static void access$700(com.android.server.pm.PackageManagerService, java.lang.String, boolean, java.util.ArrayList, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        boolean z0;
        java.util.ArrayList r2;
        int i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.ArrayList;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageChangedBroadcast(java.lang.String,boolean,java.util.ArrayList,int)>(r1, z0, r2, i0);

        return;
    }

    static boolean access$800(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r0);

        return $z0;
    }

    static boolean access$900(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r0);

        return $z0;
    }

    static void access$1000(com.android.server.pm.PackageManagerService, boolean, boolean, java.util.ArrayList, int[], android.content.IIntentReceiver)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1;
        java.util.ArrayList r1;
        int[] r2;
        android.content.IIntentReceiver r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.util.ArrayList;

        r2 := @parameter4: int[];

        r3 := @parameter5: android.content.IIntentReceiver;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(z0, z1, r1, r2, r3);

        return;
    }

    static int access$1100(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUnknownSourcesSettings()>();

        return $i0;
    }

    static void access$1200(com.android.server.pm.PackageManagerService, java.util.Set)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Set r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.util.Set;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void unloadAllContainers(java.util.Set)>(r1);

        return;
    }

    static java.util.HashSet access$1300(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashSet $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers>;

        return $r1;
    }

    static int access$1400(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getDefaultVerificationResponse()>();

        return $i0;
    }

    static void access$1500(com.android.server.pm.PackageManagerService, int, android.net.Uri, int, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.net.Uri r1;
        android.os.UserHandle r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        r2 := @parameter4: android.os.UserHandle;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void broadcastPackageVerified(int,android.net.Uri,int,android.os.UserHandle)>(i0, r1, i1, r2);

        return;
    }

    static void access$1600(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallArgs, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$InstallArgs;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void processPendingInstall(com.android.server.pm.PackageManagerService$InstallArgs,int)>(r1, i0);

        return;
    }

    static boolean access$2000(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.ApplicationInfo)>(r0);

        return $z0;
    }

    static boolean access$2100(com.android.server.pm.PackageManagerService, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean userNeedsBadging(int)>(i0);

        return $z0;
    }

    static java.util.Comparator access$2200()
    {
        java.util.Comparator $r0;

        $r0 = <com.android.server.pm.PackageManagerService: java.util.Comparator mResolvePrioritySorter>;

        return $r0;
    }

    static void access$2300(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallArgs, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$InstallArgs;

        r2 := @parameter2: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r1, r2);

        return;
    }

    static boolean access$2400(com.android.server.pm.PackageManagerService, java.lang.String, int, android.content.pm.PackageStats)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageStats r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.pm.PackageStats;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean getPackageSizeInfoLI(java.lang.String,int,android.content.pm.PackageStats)>(r1, i0, r2);

        return $z0;
    }

    static long access$2500(com.android.internal.app.IMediaContainerService, java.io.File[]) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService r0;
        java.io.File[] r1;
        long $l0;

        r0 := @parameter0: com.android.internal.app.IMediaContainerService;

        r1 := @parameter1: java.io.File[];

        $l0 = staticinvoke <com.android.server.pm.PackageManagerService: long calculateDirectorySize(com.android.internal.app.IMediaContainerService,java.io.File[])>(r0, r1);

        return $l0;
    }

    static com.android.server.pm.PackageManagerService$InstallArgs access$2600(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallParams)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallParams r1;
        com.android.server.pm.PackageManagerService$InstallArgs $r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$InstallParams;

        $r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(com.android.server.pm.PackageManagerService$InstallParams)>(r1);

        return $r2;
    }

    static java.lang.String access$2700(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        return $r1;
    }

    static boolean access$2800(com.android.server.pm.PackageManagerService, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isVerificationEnabled(int,int)>(i0, i1);

        return $z0;
    }

    static int access$2908(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $i0 = r0.<com.android.server.pm.PackageManagerService: int mPendingVerificationToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.pm.PackageManagerService: int mPendingVerificationToken> = $i1;

        return $i0;
    }

    static java.util.List access$3000(com.android.server.pm.PackageManagerService, android.content.pm.PackageInfoLite, java.util.List, com.android.server.pm.PackageVerificationState)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageInfoLite r1;
        java.util.List r2, $r4;
        com.android.server.pm.PackageVerificationState r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: android.content.pm.PackageInfoLite;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.android.server.pm.PackageVerificationState;

        $r4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List matchVerifiers(android.content.pm.PackageInfoLite,java.util.List,com.android.server.pm.PackageVerificationState)>(r1, r2, r3);

        return $r4;
    }

    static android.content.ComponentName access$3100(com.android.server.pm.PackageManagerService, java.lang.String, java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.List r2;
        android.content.ComponentName $r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName matchComponentForVerifier(java.lang.String,java.util.List)>(r1, r2);

        return $r3;
    }

    static long access$3200(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        long $l0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $l0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: long getVerificationTimeout()>();

        return $l0;
    }

    static java.io.File access$3400(com.android.server.pm.PackageManagerService, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getNextCodePath(java.lang.String)>(r1);

        return $r2;
    }

    static java.lang.String[] access$3500(java.lang.String[])
    {
        java.lang.String[] r0, $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>(r0);

        return $r1;
    }

    static boolean access$3600(com.android.server.pm.PackageManagerService, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isAsecExternal(java.lang.String)>(r1);

        return $z0;
    }

    static java.lang.String access$3700(java.lang.String, com.android.server.pm.PackageSetting)
    {
        java.lang.String r0, $r2;
        com.android.server.pm.PackageSetting r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.server.pm.PackageSetting;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String deriveAbiOverride(java.lang.String,com.android.server.pm.PackageSetting)>(r0, r1);

        return $r2;
    }

    static java.lang.String access$3800(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getNextCodePath(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    static int access$3900(com.android.server.pm.PackageManagerService, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int deletePackageX(java.lang.String,int,int)>(r1, i0, i1);

        return $i2;
    }

    static boolean access$4100(com.android.server.pm.PackageManagerService, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearApplicationUserDataLI(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static void access$4200(com.android.server.pm.PackageManagerService, java.lang.String, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void clearExternalStorageDataSync(java.lang.String,int,boolean)>(r1, i0, z0);

        return;
    }

    static boolean access$4300(com.android.server.pm.PackageManagerService, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteApplicationCacheFilesLI(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static void access$4400(com.android.server.pm.PackageManagerService, boolean, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1, z2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean,boolean)>(z0, z1, z2);

        return;
    }

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        com.android.server.pm.PackageManagerService$4 $r1;
        com.android.server.pm.PackageManagerService$5 $r2;

        <com.android.server.pm.PackageManagerService: java.lang.String SD_ENCRYPTION_ALGORITHM> = "AES";

        <com.android.server.pm.PackageManagerService: java.lang.String SD_ENCRYPTION_KEYSTORE_NAME> = "AppsOnSD";

        <com.android.server.pm.PackageManagerService: boolean DEBUG_SD_INSTALL> = 0;

        <com.android.server.pm.PackageManagerService: int UPDATE_PERMISSIONS_REPLACE_ALL> = 4;

        <com.android.server.pm.PackageManagerService: int UPDATE_PERMISSIONS_REPLACE_PKG> = 2;

        <com.android.server.pm.PackageManagerService: int UPDATE_PERMISSIONS_ALL> = 1;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_FAILED> = -1;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_DEFERRED> = 2;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_PERFORMED> = 1;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_SKIPPED> = 0;

        <com.android.server.pm.PackageManagerService: int BROADCAST_DELAY> = 10000;

        <com.android.server.pm.PackageManagerService: int WRITE_SETTINGS_DELAY> = 10000;

        <com.android.server.pm.PackageManagerService: int CHECK_PENDING_VERIFICATION> = 16;

        <com.android.server.pm.PackageManagerService: int PACKAGE_VERIFIED> = 15;

        <com.android.server.pm.PackageManagerService: int WRITE_PACKAGE_RESTRICTIONS> = 14;

        <com.android.server.pm.PackageManagerService: int WRITE_SETTINGS> = 13;

        <com.android.server.pm.PackageManagerService: int UPDATED_MEDIA_STATUS> = 12;

        <com.android.server.pm.PackageManagerService: int MCS_GIVE_UP> = 11;

        <com.android.server.pm.PackageManagerService: int MCS_RECONNECT> = 10;

        <com.android.server.pm.PackageManagerService: int POST_INSTALL> = 9;

        <com.android.server.pm.PackageManagerService: int FIND_INSTALL_LOC> = 8;

        <com.android.server.pm.PackageManagerService: int START_CLEANING_PACKAGE> = 7;

        <com.android.server.pm.PackageManagerService: int MCS_UNBIND> = 6;

        <com.android.server.pm.PackageManagerService: int INIT_COPY> = 5;

        <com.android.server.pm.PackageManagerService: int END_COPY> = 4;

        <com.android.server.pm.PackageManagerService: int MCS_BOUND> = 3;

        <com.android.server.pm.PackageManagerService: int SEND_PENDING_BROADCAST> = 1;

        <com.android.server.pm.PackageManagerService: java.lang.String IDMAP_SUFFIX> = "@idmap";

        <com.android.server.pm.PackageManagerService: java.lang.String IDMAP_PREFIX> = "/data/resource-cache/";

        <com.android.server.pm.PackageManagerService: java.lang.String VENDOR_OVERLAY_DIR> = "/vendor/overlay";

        <com.android.server.pm.PackageManagerService: java.lang.String PACKAGE_MIME_TYPE> = "application/vnd.android.package-archive";

        <com.android.server.pm.PackageManagerService: java.lang.String DEFAULT_CONTAINER_PACKAGE> = "com.android.defcontainer";

        <com.android.server.pm.PackageManagerService: int DEFAULT_VERIFICATION_RESPONSE> = 1;

        <com.android.server.pm.PackageManagerService: long DEFAULT_VERIFICATION_TIMEOUT> = 10000L;

        <com.android.server.pm.PackageManagerService: boolean DEFAULT_VERIFY_ENABLE> = 1;

        <com.android.server.pm.PackageManagerService: long DEFAULT_MANDATORY_FSTRIM_INTERVAL> = 259200000L;

        <com.android.server.pm.PackageManagerService: long WATCHDOG_TIMEOUT> = 600000L;

        <com.android.server.pm.PackageManagerService: int REMOVE_CHATTY> = 65536;

        <com.android.server.pm.PackageManagerService: int SCAN_REPLACING> = 2048;

        <com.android.server.pm.PackageManagerService: int SCAN_DELETE_DATA_ON_FAILURES> = 1024;

        <com.android.server.pm.PackageManagerService: int SCAN_TRUSTED_OVERLAY> = 512;

        <com.android.server.pm.PackageManagerService: int SCAN_BOOTING> = 256;

        <com.android.server.pm.PackageManagerService: int SCAN_DEFER_DEX> = 128;

        <com.android.server.pm.PackageManagerService: int SCAN_UPDATE_TIME> = 64;

        <com.android.server.pm.PackageManagerService: int SCAN_NO_PATHS> = 32;

        <com.android.server.pm.PackageManagerService: int SCAN_NEW_INSTALL> = 16;

        <com.android.server.pm.PackageManagerService: int SCAN_UPDATE_SIGNATURE> = 8;

        <com.android.server.pm.PackageManagerService: int SCAN_FORCE_DEX> = 4;

        <com.android.server.pm.PackageManagerService: int SCAN_NO_DEX> = 2;

        <com.android.server.pm.PackageManagerService: java.lang.String INSTALL_PACKAGE_SUFFIX> = "-";

        <com.android.server.pm.PackageManagerService: int MAX_PERMISSION_TREE_FOOTPRINT> = 32768;

        <com.android.server.pm.PackageManagerService: int SHELL_UID> = 2000;

        <com.android.server.pm.PackageManagerService: int BLUETOOTH_UID> = 1002;

        <com.android.server.pm.PackageManagerService: int NFC_UID> = 1027;

        <com.android.server.pm.PackageManagerService: int LOG_UID> = 1007;

        <com.android.server.pm.PackageManagerService: int RADIO_UID> = 1001;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_ABI_SELECTION> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_DEXOPT> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_VERIFY> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_PACKAGE_SCANNING> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_INTENT_MATCHING> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_PACKAGE_INFO> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_SHOW_INFO> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_BROADCASTS> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_REMOVE> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_INSTALL> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_UPGRADE> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_PREFERRED> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_SETTINGS> = 0;

        <com.android.server.pm.PackageManagerService: java.lang.String TAG> = "PackageManager";

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.defcontainer", "com.android.defcontainer.DefaultContainerService");

        <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT> = $r0;

        $r1 = new com.android.server.pm.PackageManagerService$4;

        specialinvoke $r1.<com.android.server.pm.PackageManagerService$4: void <init>()>();

        <com.android.server.pm.PackageManagerService: java.util.Comparator mResolvePrioritySorter> = $r1;

        $r2 = new com.android.server.pm.PackageManagerService$5;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$5: void <init>()>();

        <com.android.server.pm.PackageManagerService: java.util.Comparator mProviderInitOrderSorter> = $r2;

        return;
    }
}
