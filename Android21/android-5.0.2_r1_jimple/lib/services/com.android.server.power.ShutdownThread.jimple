public final class com.android.server.power.ShutdownThread extends java.lang.Thread
{
    private static final java.lang.String TAG;
    private static final int PHONE_STATE_POLL_SLEEP_MSEC;
    private static final int MAX_BROADCAST_TIME;
    private static final int MAX_SHUTDOWN_WAIT_TIME;
    private static final int MAX_RADIO_WAIT_TIME;
    private static final int SHUTDOWN_VIBRATE_MS;
    private static java.lang.Object sIsStartedGuard;
    private static boolean sIsStarted;
    private static boolean mReboot;
    private static boolean mRebootSafeMode;
    private static java.lang.String mRebootReason;
    public static final java.lang.String SHUTDOWN_ACTION_PROPERTY;
    public static final java.lang.String REBOOT_SAFEMODE_PROPERTY;
    private static final com.android.server.power.ShutdownThread sInstance;
    private static final android.media.AudioAttributes VIBRATION_ATTRIBUTES;
    private final java.lang.Object mActionDoneSync;
    private boolean mActionDone;
    private android.content.Context mContext;
    private android.os.PowerManager mPowerManager;
    private android.os.PowerManager$WakeLock mCpuWakeLock;
    private android.os.PowerManager$WakeLock mScreenWakeLock;
    private android.os.Handler mHandler;
    private static android.app.AlertDialog sConfirmDialog;

    private void <init>()
    {
        com.android.server.power.ShutdownThread r0;
        java.lang.Object $r1;

        r0 := @this: com.android.server.power.ShutdownThread;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync> = $r1;

        return;
    }

    public static void shutdown(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        <com.android.server.power.ShutdownThread: boolean mReboot> = 0;

        <com.android.server.power.ShutdownThread: boolean mRebootSafeMode> = 0;

        staticinvoke <com.android.server.power.ShutdownThread: void shutdownInner(android.content.Context,boolean)>(r0, z0);

        return;
    }

    static void shutdownInner(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r25;
        com.android.server.power.ShutdownThread$CloseDialogReceiver r3, $r10;
        android.content.res.Resources $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        android.app.AlertDialog$Builder $r11, $r13, $r15, $r16, $r18;
        android.app.AlertDialog $r12, $r17, $r19, $r20, $r22, $r23, $r24;
        com.android.server.power.ShutdownThread$1 $r14;
        android.view.Window $r21;
        int $i1, $i2, i4, i5;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r4 = <com.android.server.power.ShutdownThread: java.lang.Object sIsStartedGuard>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $z1 = <com.android.server.power.ShutdownThread: boolean sIsStarted>;

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShutdownThread", "Request to shutdown already running, returning.");

        exitmonitor r1;

     label02:
        return;

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r25 := @caughtexception;

        r2 = $r25;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        i4 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694779);

        $z2 = <com.android.server.power.ShutdownThread: boolean mRebootSafeMode>;

        if $z2 == 0 goto label08;

        $i1 = 17039601;

        goto label10;

     label08:
        if i4 != 2 goto label09;

        $i1 = 17039599;

        goto label10;

     label09:
        $i1 = 17039598;

     label10:
        i5 = $i1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying thread to start shutdown longPressBehavior=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShutdownThread", $r9);

        if z0 == 0 goto label14;

        $r10 = new com.android.server.power.ShutdownThread$CloseDialogReceiver;

        specialinvoke $r10.<com.android.server.power.ShutdownThread$CloseDialogReceiver: void <init>(android.content.Context)>(r0);

        r3 = $r10;

        $r12 = <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog>;

        if $r12 == null goto label11;

        $r23 = <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog>;

        virtualinvoke $r23.<android.app.AlertDialog: void dismiss()>();

     label11:
        $r11 = new android.app.AlertDialog$Builder;

        specialinvoke $r11.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $z3 = <com.android.server.power.ShutdownThread: boolean mRebootSafeMode>;

        if $z3 == 0 goto label12;

        $i2 = 17039600;

        goto label13;

     label12:
        $i2 = 17039593;

     label13:
        $r13 = virtualinvoke $r11.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>($i2);

        $r15 = virtualinvoke $r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(i5);

        $r14 = new com.android.server.power.ShutdownThread$1;

        specialinvoke $r14.<com.android.server.power.ShutdownThread$1: void <init>(android.content.Context)>(r0);

        $r16 = virtualinvoke $r15.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039379, $r14);

        $r18 = virtualinvoke $r16.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(17039369, null);

        $r17 = virtualinvoke $r18.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog> = $r17;

        $r20 = <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog>;

        r3.<com.android.server.power.ShutdownThread$CloseDialogReceiver: android.app.Dialog dialog> = $r20;

        $r19 = <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog>;

        virtualinvoke $r19.<android.app.AlertDialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>(r3);

        $r22 = <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog>;

        $r21 = virtualinvoke $r22.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r21.<android.view.Window: void setType(int)>(2009);

        $r24 = <com.android.server.power.ShutdownThread: android.app.AlertDialog sConfirmDialog>;

        virtualinvoke $r24.<android.app.AlertDialog: void show()>();

        goto label15;

     label14:
        staticinvoke <com.android.server.power.ShutdownThread: void beginShutdownSequence(android.content.Context)>(r0);

     label15:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public static void reboot(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        <com.android.server.power.ShutdownThread: boolean mReboot> = 1;

        <com.android.server.power.ShutdownThread: boolean mRebootSafeMode> = 0;

        <com.android.server.power.ShutdownThread: java.lang.String mRebootReason> = r1;

        staticinvoke <com.android.server.power.ShutdownThread: void shutdownInner(android.content.Context,boolean)>(r0, z0);

        return;
    }

    public static void rebootSafeMode(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        <com.android.server.power.ShutdownThread: boolean mReboot> = 1;

        <com.android.server.power.ShutdownThread: boolean mRebootSafeMode> = 1;

        <com.android.server.power.ShutdownThread: java.lang.String mRebootReason> = null;

        staticinvoke <com.android.server.power.ShutdownThread: void shutdownInner(android.content.Context,boolean)>(r0, z0);

        return;
    }

    private static void beginShutdownSequence(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object r1, $r3, $r10;
        java.lang.Throwable r2, $r38;
        boolean $z0, $z1;
        android.app.ProgressDialog $r4, r40;
        java.lang.CharSequence $r5, $r6;
        android.view.Window $r7;
        com.android.server.power.ShutdownThread $r8, $r9, $r12, $r13, $r14, $r16, $r18, $r20, $r23, $r25, $r26, $r28, $r29, $r31, $r33, $r35, $r39;
        android.os.PowerManager $r11, $r15, $r22, $r27;
        android.os.PowerManager$WakeLock $r17, $r19, $r21, $r30, $r32, $r34;
        com.android.server.power.ShutdownThread$2 $r24;
        java.lang.SecurityException $r36, $r37, r41, r42;

        r0 := @parameter0: android.content.Context;

        $r3 = <com.android.server.power.ShutdownThread: java.lang.Object sIsStartedGuard>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        $z0 = <com.android.server.power.ShutdownThread: boolean sIsStarted>;

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShutdownThread", "Shutdown sequence already running, returning.");

        exitmonitor r1;

     label02:
        return;

     label03:
        <com.android.server.power.ShutdownThread: boolean sIsStarted> = 1;

        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r38 := @caughtexception;

        r2 = $r38;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $r4 = new android.app.ProgressDialog;

        specialinvoke $r4.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);

        r40 = $r4;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.CharSequence getText(int)>(17039593);

        virtualinvoke r40.<android.app.ProgressDialog: void setTitle(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke r0.<android.content.Context: java.lang.CharSequence getText(int)>(17039597);

        virtualinvoke r40.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r6);

        virtualinvoke r40.<android.app.ProgressDialog: void setIndeterminate(boolean)>(1);

        virtualinvoke r40.<android.app.ProgressDialog: void setCancelable(boolean)>(0);

        $r7 = virtualinvoke r40.<android.app.ProgressDialog: android.view.Window getWindow()>();

        virtualinvoke $r7.<android.view.Window: void setType(int)>(2009);

        virtualinvoke r40.<android.app.ProgressDialog: void show()>();

        $r8 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r8.<com.android.server.power.ShutdownThread: android.content.Context mContext> = r0;

        $r9 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r10 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r11 = (android.os.PowerManager) $r10;

        $r9.<com.android.server.power.ShutdownThread: android.os.PowerManager mPowerManager> = $r11;

        $r12 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r12.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mCpuWakeLock> = null;

     label08:
        $r14 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r13 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r15 = $r13.<com.android.server.power.ShutdownThread: android.os.PowerManager mPowerManager>;

        $r17 = virtualinvoke $r15.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ShutdownThread-cpu");

        $r14.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mCpuWakeLock> = $r17;

        $r16 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r19 = $r16.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mCpuWakeLock>;

        virtualinvoke $r19.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r18 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r21 = $r18.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mCpuWakeLock>;

        virtualinvoke $r21.<android.os.PowerManager$WakeLock: void acquire()>();

     label09:
        goto label11;

     label10:
        $r37 := @caughtexception;

        r41 = $r37;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShutdownThread", "No permission to acquire wake lock", r41);

        $r35 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r35.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mCpuWakeLock> = null;

     label11:
        $r20 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r20.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mScreenWakeLock> = null;

        $r23 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r22 = $r23.<com.android.server.power.ShutdownThread: android.os.PowerManager mPowerManager>;

        $z1 = virtualinvoke $r22.<android.os.PowerManager: boolean isScreenOn()>();

        if $z1 == 0 goto label15;

     label12:
        $r31 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r28 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r27 = $r28.<com.android.server.power.ShutdownThread: android.os.PowerManager mPowerManager>;

        $r32 = virtualinvoke $r27.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(26, "ShutdownThread-screen");

        $r31.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mScreenWakeLock> = $r32;

        $r29 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r30 = $r29.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mScreenWakeLock>;

        virtualinvoke $r30.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r33 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r34 = $r33.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mScreenWakeLock>;

        virtualinvoke $r34.<android.os.PowerManager$WakeLock: void acquire()>();

     label13:
        goto label15;

     label14:
        $r36 := @caughtexception;

        r42 = $r36;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShutdownThread", "No permission to acquire wake lock", r42);

        $r39 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r39.<com.android.server.power.ShutdownThread: android.os.PowerManager$WakeLock mScreenWakeLock> = null;

     label15:
        $r26 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        $r24 = new com.android.server.power.ShutdownThread$2;

        specialinvoke $r24.<com.android.server.power.ShutdownThread$2: void <init>()>();

        $r26.<com.android.server.power.ShutdownThread: android.os.Handler mHandler> = $r24;

        $r25 = <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance>;

        virtualinvoke $r25.<com.android.server.power.ShutdownThread: void start()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.SecurityException from label08 to label09 with label10;
        catch java.lang.SecurityException from label12 to label13 with label14;
    }

    void actionDone()
    {
        com.android.server.power.ShutdownThread r0;
        java.lang.Object r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.power.ShutdownThread;

        $r3 = r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<com.android.server.power.ShutdownThread: boolean mActionDone> = 1;

        $r4 = r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void run()
    {
        com.android.server.power.ShutdownThread r0;
        com.android.server.power.ShutdownThread$3 r1, $r11;
        java.lang.String r2, $r13, $r27, $r29, $r30;
        long l0, l1, $l3, $l7, $l10, $l12, l16, l17;
        java.lang.Object r3, r7, $r21, $r26, $r28, $r31;
        com.android.server.power.ShutdownThread$4 r4, $r23;
        java.lang.Throwable r6, r10, $r33, $r37;
        android.os.storage.IMountService r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r12, $r14, $r15;
        android.content.Intent $r17, r38;
        android.os.UserHandle $r18;
        android.os.Handler $r19;
        android.content.Context $r20;
        android.os.IBinder $r22, $r24, $r25;
        byte $b9, $b11;
        java.lang.Exception $r32, r42;
        java.lang.InterruptedException $r34, $r35;
        android.os.RemoteException $r36;
        android.app.IActivityManager r39;
        com.android.server.pm.PackageManagerService r41;

        r0 := @this: com.android.server.power.ShutdownThread;

        $r11 = new com.android.server.power.ShutdownThread$3;

        specialinvoke $r11.<com.android.server.power.ShutdownThread$3: void <init>(com.android.server.power.ShutdownThread)>(r0);

        r1 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $z0 = <com.android.server.power.ShutdownThread: boolean mReboot>;

        if $z0 == 0 goto label01;

        $r29 = "1";

        goto label02;

     label01:
        $r29 = "0";

     label02:
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r13 = <com.android.server.power.ShutdownThread: java.lang.String mRebootReason>;

        if $r13 == null goto label03;

        $r30 = <com.android.server.power.ShutdownThread: java.lang.String mRebootReason>;

        goto label04;

     label03:
        $r30 = "";

     label04:
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.shutdown.requested", r2);

        $z1 = <com.android.server.power.ShutdownThread: boolean mRebootSafeMode>;

        if $z1 == 0 goto label05;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.safemode", "1");

     label05:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ShutdownThread", "Sending shutdown broadcast...");

        r0.<com.android.server.power.ShutdownThread: boolean mActionDone> = 0;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        r38 = $r17;

        virtualinvoke r38.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r20 = r0.<com.android.server.power.ShutdownThread: android.content.Context mContext>;

        $r18 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r19 = r0.<com.android.server.power.ShutdownThread: android.os.Handler mHandler>;

        virtualinvoke $r20.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r38, $r18, null, r1, $r19, 0, null, null);

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l3 + 10000L;

        $r21 = r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync>;

        r3 = $r21;

        entermonitor $r21;

     label06:
        $z2 = r0.<com.android.server.power.ShutdownThread: boolean mActionDone>;

        if $z2 != 0 goto label11;

        $l12 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = l0 - $l12;

        $b11 = l1 cmp 0L;

        if $b11 > 0 goto label07;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShutdownThread", "Shutdown broadcast timed out");

        goto label11;

     label07:
        $r31 = r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync>;

        virtualinvoke $r31.<java.lang.Object: void wait(long)>(l1);

     label08:
        goto label10;

     label09:
        $r34 := @caughtexception;

     label10:
        goto label06;

     label11:
        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r37 := @caughtexception;

        r6 = $r37;

        exitmonitor r3;

     label14:
        throw r6;

     label15:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ShutdownThread", "Shutting down activity manager...");

        $r22 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("activity");

        r39 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager asInterface(android.os.IBinder)>($r22);

        if r39 == null goto label19;

     label16:
        interfaceinvoke r39.<android.app.IActivityManager: boolean shutdown(int)>(10000);

     label17:
        goto label19;

     label18:
        $r36 := @caughtexception;

     label19:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ShutdownThread", "Shutting down package manager...");

        $r24 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r41 = (com.android.server.pm.PackageManagerService) $r24;

        if r41 == null goto label20;

        virtualinvoke r41.<com.android.server.pm.PackageManagerService: void shutdown()>();

     label20:
        specialinvoke r0.<com.android.server.power.ShutdownThread: void shutdownRadios(int)>(12000);

        $r23 = new com.android.server.power.ShutdownThread$4;

        specialinvoke $r23.<com.android.server.power.ShutdownThread$4: void <init>(com.android.server.power.ShutdownThread)>(r0);

        r4 = $r23;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ShutdownThread", "Shutting down MountService");

        r0.<com.android.server.power.ShutdownThread: boolean mActionDone> = 0;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l16 = $l7 + 20000L;

        $r26 = r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync>;

        r7 = $r26;

        entermonitor $r26;

     label21:
        $r25 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("mount");

        r8 = staticinvoke <android.os.storage.IMountService$Stub: android.os.storage.IMountService asInterface(android.os.IBinder)>($r25);

        if r8 == null goto label22;

        interfaceinvoke r8.<android.os.storage.IMountService: void shutdown(android.os.storage.IMountShutdownObserver)>(r4);

        goto label23;

     label22:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShutdownThread", "MountService unavailable for shutdown");

     label23:
        goto label25;

     label24:
        $r32 := @caughtexception;

        r42 = $r32;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShutdownThread", "Exception during MountService shutdown", r42);

     label25:
        $z3 = r0.<com.android.server.power.ShutdownThread: boolean mActionDone>;

        if $z3 != 0 goto label30;

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l17 = l16 - $l10;

        $b9 = l17 cmp 0L;

        if $b9 > 0 goto label26;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShutdownThread", "Shutdown wait timed out");

        goto label30;

     label26:
        $r28 = r0.<com.android.server.power.ShutdownThread: java.lang.Object mActionDoneSync>;

        virtualinvoke $r28.<java.lang.Object: void wait(long)>(l17);

     label27:
        goto label29;

     label28:
        $r35 := @caughtexception;

     label29:
        goto label25;

     label30:
        exitmonitor r7;

     label31:
        goto label34;

     label32:
        $r33 := @caughtexception;

        r10 = $r33;

        exitmonitor r7;

     label33:
        throw r10;

     label34:
        $z4 = <com.android.server.power.ShutdownThread: boolean mReboot>;

        $r27 = <com.android.server.power.ShutdownThread: java.lang.String mRebootReason>;

        staticinvoke <com.android.server.power.ShutdownThread: void rebootOrShutdown(boolean,java.lang.String)>($z4, $r27);

        return;

        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch android.os.RemoteException from label16 to label17 with label18;
        catch java.lang.Exception from label21 to label23 with label24;
        catch java.lang.InterruptedException from label26 to label27 with label28;
        catch java.lang.Throwable from label21 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    private void shutdownRadios(int)
    {
        com.android.server.power.ShutdownThread r0;
        int i0;
        long l1, $l2, $l3, $l4;
        boolean[] r1;
        com.android.server.power.ShutdownThread$5 r2, $r4;
        boolean $z0;
        java.lang.InterruptedException $r5;

        r0 := @this: com.android.server.power.ShutdownThread;

        i0 := @parameter0: int;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = (long) i0;

        l1 = $l2 + $l3;

        r1 = newarray (boolean)[1];

        $r4 = new com.android.server.power.ShutdownThread$5;

        specialinvoke $r4.<com.android.server.power.ShutdownThread$5: void <init>(com.android.server.power.ShutdownThread,long,boolean[])>(r0, l1, r1);

        r2 = $r4;

        virtualinvoke r2.<java.lang.Thread: void start()>();

     label1:
        $l4 = (long) i0;

        virtualinvoke r2.<java.lang.Thread: void join(long)>($l4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        $z0 = r1[0];

        if $z0 != 0 goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShutdownThread", "Timed out waiting for NFC, Radio and Bluetooth shutdown.");

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static void rebootOrShutdown(boolean, java.lang.String)
    {
        boolean z0;
        java.lang.String r0, $r8;
        android.os.SystemVibrator r1, $r3;
        java.lang.Exception r2, $r10;
        android.media.AudioAttributes $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.InterruptedException $r9;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String;

        if z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rebooting, reason: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ShutdownThread", $r8);

        staticinvoke <com.android.server.power.PowerManagerService: void lowLevelReboot(java.lang.String)>(r0);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ShutdownThread", "Reboot failed, will attempt shutdown instead");

        goto label8;

     label1:
        $r3 = new android.os.SystemVibrator;

        specialinvoke $r3.<android.os.SystemVibrator: void <init>()>();

        r1 = $r3;

     label2:
        $r4 = <com.android.server.power.ShutdownThread: android.media.AudioAttributes VIBRATION_ATTRIBUTES>;

        virtualinvoke r1.<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>(500L, $r4);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShutdownThread", "Failed to vibrate during shutdown.", r2);

     label5:
        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

     label8:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ShutdownThread", "Performing low-level shutdown...");

        staticinvoke <com.android.server.power.PowerManagerService: void lowLevelShutdown()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    static void access$000(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.server.power.ShutdownThread: void beginShutdownSequence(android.content.Context)>(r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        com.android.server.power.ShutdownThread $r1;
        android.media.AudioAttributes$Builder $r2, $r3, $r4;
        android.media.AudioAttributes $r5;

        <com.android.server.power.ShutdownThread: java.lang.String REBOOT_SAFEMODE_PROPERTY> = "persist.sys.safemode";

        <com.android.server.power.ShutdownThread: java.lang.String SHUTDOWN_ACTION_PROPERTY> = "sys.shutdown.requested";

        <com.android.server.power.ShutdownThread: int SHUTDOWN_VIBRATE_MS> = 500;

        <com.android.server.power.ShutdownThread: int MAX_RADIO_WAIT_TIME> = 12000;

        <com.android.server.power.ShutdownThread: int MAX_SHUTDOWN_WAIT_TIME> = 20000;

        <com.android.server.power.ShutdownThread: int MAX_BROADCAST_TIME> = 10000;

        <com.android.server.power.ShutdownThread: int PHONE_STATE_POLL_SLEEP_MSEC> = 500;

        <com.android.server.power.ShutdownThread: java.lang.String TAG> = "ShutdownThread";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.server.power.ShutdownThread: java.lang.Object sIsStartedGuard> = $r0;

        <com.android.server.power.ShutdownThread: boolean sIsStarted> = 0;

        $r1 = new com.android.server.power.ShutdownThread;

        specialinvoke $r1.<com.android.server.power.ShutdownThread: void <init>()>();

        <com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread sInstance> = $r1;

        $r2 = new android.media.AudioAttributes$Builder;

        specialinvoke $r2.<android.media.AudioAttributes$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(13);

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        <com.android.server.power.ShutdownThread: android.media.AudioAttributes VIBRATION_ATTRIBUTES> = $r5;

        return;
    }
}
