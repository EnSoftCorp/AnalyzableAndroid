class com.android.server.job.JobServiceContext$JobServiceHandler extends android.os.Handler
{
    final com.android.server.job.JobServiceContext this$0;

    void <init>(com.android.server.job.JobServiceContext, android.os.Looper)
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        com.android.server.job.JobServiceContext r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        r1 := @parameter0: com.android.server.job.JobServiceContext;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        android.os.Message r1;
        boolean z0, $z1, $z2, z3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.job.JobServiceContext $r2, $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label10;
            case 1: goto label02;
            case 2: goto label01;
            case 3: goto label09;
            case 4: goto label11;
            default: goto label12;
        };

     label01:
        $r2 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$000(com.android.server.job.JobServiceContext)>($r2);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleServiceBoundH()>();

        goto label13;

     label02:
        $r3 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$000(com.android.server.job.JobServiceContext)>($r3);

        $r4 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i1 = $r4.<com.android.server.job.JobServiceContext: int mVerb>;

        if $i1 != 1 goto label05;

        $i5 = r1.<android.os.Message: int arg2>;

        if $i5 != 1 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleStartedH(boolean)>(z0);

        goto label13;

     label05:
        $r5 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i2 = $r5.<com.android.server.job.JobServiceContext: int mVerb>;

        if $i2 == 2 goto label06;

        $r6 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i4 = $r6.<com.android.server.job.JobServiceContext: int mVerb>;

        if $i4 != 3 goto label13;

     label06:
        $i3 = r1.<android.os.Message: int arg2>;

        if $i3 != 1 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        z3 = $z1;

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleFinishedH(boolean)>(z3);

        goto label13;

     label09:
        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleCancelH()>();

        goto label13;

     label10:
        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleOpTimeoutH()>();

        goto label13;

     label11:
        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(1);

        goto label13;

     label12:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognised message: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r10);

     label13:
        return;
    }

    private void handleServiceBoundH()
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        android.os.RemoteException r1, $r18;
        com.android.server.job.JobServiceContext $r2, $r3, $r5, $r6, $r7, $r8, $r13, $r20;
        int $i0, $i1;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        android.app.job.IJobService $r9;
        android.app.job.JobParameters $r10;
        java.lang.StringBuilder $r11, $r12, $r17, $r19, $r21, $r24, $r26;
        java.lang.String[] $r14;
        java.lang.String $r15, $r16, $r25, $r27;
        android.content.ComponentName $r22;
        com.android.server.job.controllers.JobStatus $r23;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        $r2 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i0 = $r2.<com.android.server.job.JobServiceContext: int mVerb>;

        if $i0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending onStartJob for a job that isn\'t pending. ");

        $r14 = staticinvoke <com.android.server.job.JobServiceContext: java.lang.String[] access$100()>();

        $r13 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i1 = $r13.<com.android.server.job.JobServiceContext: int mVerb>;

        $r15 = $r14[$i1];

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r16);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(0);

        return;

     label1:
        $r3 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r4 = staticinvoke <com.android.server.job.JobServiceContext: java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.job.JobServiceContext)>($r3);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(1);

        return;

     label2:
        $r5 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r5.<com.android.server.job.JobServiceContext: int mVerb> = 1;

        $r6 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$300(com.android.server.job.JobServiceContext)>($r6);

        $r7 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r9 = $r7.<com.android.server.job.JobServiceContext: android.app.job.IJobService service>;

        $r8 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r10 = staticinvoke <com.android.server.job.JobServiceContext: android.app.job.JobParameters access$400(com.android.server.job.JobServiceContext)>($r8);

        interfaceinvoke $r9.<android.app.job.IJobService: void startJob(android.app.job.JobParameters)>($r10);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        r1 = $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error sending onStart message to \'");

        $r20 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r23 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r20);

        $r22 = virtualinvoke $r23.<com.android.server.job.controllers.JobStatus: android.content.ComponentName getServiceComponent()>();

        $r25 = virtualinvoke $r22.<android.content.ComponentName: java.lang.String getShortClassName()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JobServiceContext", $r27, r1);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void handleStartedH(boolean)
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        boolean z0, $z1;
        com.android.server.job.JobServiceContext $r1, $r2, $r3, $r5, $r9;
        int $i0, $i1;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        java.lang.StringBuilder $r6, $r7, $r11, $r12;
        java.lang.String[] $r8;
        java.lang.String $r10, $r13;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i0 = $r1.<com.android.server.job.JobServiceContext: int mVerb>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            default: goto label4;
        };

     label1:
        $r2 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r2.<com.android.server.job.JobServiceContext: int mVerb> = 2;

        if z0 != 0 goto label2;

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleFinishedH(boolean)>(0);

        return;

     label2:
        $r3 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r4 = staticinvoke <com.android.server.job.JobServiceContext: java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.job.JobServiceContext)>($r3);

        $z1 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void handleCancelH()>();

        return;

     label3:
        $r5 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$300(com.android.server.job.JobServiceContext)>($r5);

        goto label5;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling started job but job wasn\'t starting! Was ");

        $r8 = staticinvoke <com.android.server.job.JobServiceContext: java.lang.String[] access$100()>();

        $r9 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i1 = $r9.<com.android.server.job.JobServiceContext: int mVerb>;

        $r10 = $r8[$i1];

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r13);

        return;

     label5:
        return;
    }

    private void handleFinishedH(boolean)
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        boolean z0;
        com.android.server.job.JobServiceContext $r1, $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8;
        java.lang.String[] $r4;
        java.lang.String $r6, $r9;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i0 = $r1.<com.android.server.job.JobServiceContext: int mVerb>;

        lookupswitch($i0)
        {
            case 2: goto label1;
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(z0);

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got an execution complete message for a job that wasn\'t beingexecuted. Was ");

        $r4 = staticinvoke <com.android.server.job.JobServiceContext: java.lang.String[] access$100()>();

        $r5 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i1 = $r5.<com.android.server.job.JobServiceContext: int mVerb>;

        $r6 = $r4[$i1];

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r9);

     label3:
        return;
    }

    private void handleCancelH()
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        com.android.server.job.JobServiceContext $r1, $r3, $r4, $r8;
        com.android.server.job.controllers.JobStatus $r2;
        int $i0, $i1;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        $r1 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r2 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i0 = $r3.<com.android.server.job.JobServiceContext: int mVerb>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        $r4 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r5 = staticinvoke <com.android.server.job.JobServiceContext: java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.job.JobServiceContext)>($r4);

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        goto label7;

     label3:
        $z0 = virtualinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: boolean hasMessages(int)>(1);

        if $z0 == 0 goto label4;

        return;

     label4:
        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void sendStopMessageH()>();

        goto label7;

     label5:
        goto label7;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelling a job without a valid verb: ");

        $r8 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i1 = $r8.<com.android.server.job.JobServiceContext: int mVerb>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r10);

     label7:
        return;
    }

    private void handleOpTimeoutH()
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        com.android.server.job.JobServiceContext $r1, $r4, $r13, $r18, $r25, $r32;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r10, $r11, $r14, $r17, $r19, $r23, $r24, $r27, $r30, $r31, $r33, $r34, $r35;
        com.android.server.job.controllers.JobStatus $r5, $r12, $r21, $r26, $r36;
        java.lang.String $r6, $r9, $r15, $r16, $r20, $r22, $r28, $r29, $r37, $r38;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        $r1 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i0 = $r1.<com.android.server.job.JobServiceContext: int mVerb>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time-out while trying to bind ");

        $r4 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r5 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r4);

        $r6 = virtualinvoke $r5.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dropping.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r9);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(0);

        goto label6;

     label2:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No response from client for onStartJob \'");

        $r25 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r26 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r25);

        $r29 = virtualinvoke $r26.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r28);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(0);

        goto label6;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No response from client for onStopJob, \'");

        $r13 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r12 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r13);

        $r15 = virtualinvoke $r12.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r16);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(1);

        goto label6;

     label4:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client timed out while executing (no jobFinished received). sending onStop. ");

        $r18 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r21 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r18);

        $r20 = virtualinvoke $r21.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("JobServiceContext", $r22);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void sendStopMessageH()>();

        goto label6;

     label5:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling timeout for an invalid job state: ");

        $r32 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r36 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r32);

        $r37 = virtualinvoke $r36.<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dropping.");

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r38);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(0);

     label6:
        return;
    }

    private void sendStopMessageH()
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        android.os.RemoteException r1, $r16;
        com.android.server.job.JobServiceContext $r2, $r3, $r4, $r5, $r6, $r7, $r12;
        int $i0;
        android.app.job.IJobService $r8;
        android.app.job.JobParameters $r9;
        java.lang.StringBuilder $r10, $r11, $r15;
        com.android.server.job.controllers.JobStatus $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        $r2 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$000(com.android.server.job.JobServiceContext)>($r2);

        $r3 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $i0 = $r3.<com.android.server.job.JobServiceContext: int mVerb>;

        if $i0 == 2 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending onStopJob for a job that isn\'t started. ");

        $r12 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r13 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r12);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("JobServiceContext", $r14);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(0);

        return;

     label1:
        $r4 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r4.<com.android.server.job.JobServiceContext: int mVerb> = 3;

        $r5 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$300(com.android.server.job.JobServiceContext)>($r5);

        $r6 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r8 = $r6.<com.android.server.job.JobServiceContext: android.app.job.IJobService service>;

        $r7 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r9 = staticinvoke <com.android.server.job.JobServiceContext: android.app.job.JobParameters access$400(com.android.server.job.JobServiceContext)>($r7);

        interfaceinvoke $r8.<android.app.job.IJobService: void stopJob(android.app.job.JobParameters)>($r9);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r1 = $r16;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JobServiceContext", "Error sending onStopJob to client.", r1);

        specialinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>(0);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void closeAndCleanupJobH(boolean)
    {
        com.android.server.job.JobServiceContext$JobServiceHandler r0;
        boolean z0;
        com.android.server.job.controllers.JobStatus r1, $r11, $r14;
        java.lang.Object r2, $r7;
        java.lang.Throwable r4, $r37;
        com.android.server.job.JobServiceContext $r5, $r6, $r8, $r10, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r25, $r28, $r29, $r30, $r32, $r33, $r34;
        com.android.internal.app.IBatteryStats $r9;
        java.lang.String $r12;
        int $i0;
        android.os.PowerManager$WakeLock $r15, $r36;
        android.content.Context $r17;
        java.util.concurrent.atomic.AtomicBoolean $r27;
        com.android.server.job.JobCompletedListener $r31;
        android.os.RemoteException $r35;

        r0 := @this: com.android.server.job.JobServiceContext$JobServiceHandler;

        z0 := @parameter0: boolean;

        $r5 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        r1 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r5);

        $r6 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r7 = staticinvoke <com.android.server.job.JobServiceContext: java.lang.Object access$600(com.android.server.job.JobServiceContext)>($r6);

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r9 = staticinvoke <com.android.server.job.JobServiceContext: com.android.internal.app.IBatteryStats access$700(com.android.server.job.JobServiceContext)>($r8);

        $r10 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r11 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r10);

        $r12 = virtualinvoke $r11.<com.android.server.job.controllers.JobStatus: java.lang.String getName()>();

        $r13 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r14 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$500(com.android.server.job.JobServiceContext)>($r13);

        $i0 = virtualinvoke $r14.<com.android.server.job.controllers.JobStatus: int getUid()>();

        interfaceinvoke $r9.<com.android.internal.app.IBatteryStats: void noteJobFinish(java.lang.String,int)>($r12, $i0);

     label2:
        goto label4;

     label3:
        $r35 := @caughtexception;

     label4:
        $r16 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r15 = staticinvoke <com.android.server.job.JobServiceContext: android.os.PowerManager$WakeLock access$800(com.android.server.job.JobServiceContext)>($r16);

        if $r15 == null goto label5;

        $r32 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r36 = staticinvoke <com.android.server.job.JobServiceContext: android.os.PowerManager$WakeLock access$800(com.android.server.job.JobServiceContext)>($r32);

        virtualinvoke $r36.<android.os.PowerManager$WakeLock: void release()>();

     label5:
        $r18 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r17 = staticinvoke <com.android.server.job.JobServiceContext: android.content.Context access$900(com.android.server.job.JobServiceContext)>($r18);

        $r20 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        virtualinvoke $r17.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r20);

        $r19 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: android.os.PowerManager$WakeLock access$802(com.android.server.job.JobServiceContext,android.os.PowerManager$WakeLock)>($r19, null);

        $r21 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.controllers.JobStatus access$502(com.android.server.job.JobServiceContext,com.android.server.job.controllers.JobStatus)>($r21, null);

        $r23 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: android.app.job.JobParameters access$402(com.android.server.job.JobServiceContext,android.app.job.JobParameters)>($r23, null);

        $r25 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r25.<com.android.server.job.JobServiceContext: int mVerb> = -1;

        $r28 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r27 = staticinvoke <com.android.server.job.JobServiceContext: java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.job.JobServiceContext)>($r28);

        virtualinvoke $r27.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r29 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r29.<com.android.server.job.JobServiceContext: android.app.job.IJobService service> = null;

        $r30 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: boolean access$1002(com.android.server.job.JobServiceContext,boolean)>($r30, 1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r37 := @caughtexception;

        r4 = $r37;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        $r33 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        staticinvoke <com.android.server.job.JobServiceContext: void access$000(com.android.server.job.JobServiceContext)>($r33);

        virtualinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void removeMessages(int)>(1);

        virtualinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void removeMessages(int)>(2);

        virtualinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void removeMessages(int)>(3);

        virtualinvoke r0.<com.android.server.job.JobServiceContext$JobServiceHandler: void removeMessages(int)>(4);

        $r34 = r0.<com.android.server.job.JobServiceContext$JobServiceHandler: com.android.server.job.JobServiceContext this$0>;

        $r31 = staticinvoke <com.android.server.job.JobServiceContext: com.android.server.job.JobCompletedListener access$1100(com.android.server.job.JobServiceContext)>($r34);

        interfaceinvoke $r31.<com.android.server.job.JobCompletedListener: void onJobCompleted(com.android.server.job.controllers.JobStatus,boolean)>(r1, z0);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
