final class com.android.server.hdmi.VolumeControlAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    private static final int STATE_WAIT_FOR_NEXT_VOLUME_PRESS;
    private static final int MAX_VOLUME;
    private static final int UNKNOWN_AVR_VOLUME;
    private final int mAvrAddress;
    private boolean mIsVolumeUp;
    private long mLastKeyUpdateTime;
    private int mLastAvrVolume;
    private boolean mSentKeyPressed;

    public static int scaleToCecVolume(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 * 100;

        $i3 = $i2 / i1;

        return $i3;
    }

    public static int scaleToCustomVolume(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 * i1;

        $i3 = $i2 / 100;

        return $i3;
    }

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int, boolean)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        r0.<com.android.server.hdmi.VolumeControlAction: int mAvrAddress> = i0;

        r0.<com.android.server.hdmi.VolumeControlAction: boolean mIsVolumeUp> = z0;

        r0.<com.android.server.hdmi.VolumeControlAction: int mLastAvrVolume> = -1;

        r0.<com.android.server.hdmi.VolumeControlAction: boolean mSentKeyPressed> = 0;

        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void updateLastKeyUpdateTime()>();

        return;
    }

    private void updateLastKeyUpdateTime()
    {
        com.android.server.hdmi.VolumeControlAction r0;
        long $l0;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.hdmi.VolumeControlAction: long mLastKeyUpdateTime> = $l0;

        return;
    }

    boolean start()
    {
        com.android.server.hdmi.VolumeControlAction r0;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        r0.<com.android.server.hdmi.VolumeControlAction: int mState> = 1;

        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void sendVolumeKeyPressed()>();

        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void resetTimer()>();

        return 1;
    }

    private void sendVolumeKeyPressed()
    {
        com.android.server.hdmi.VolumeControlAction r0;
        int $i0, $i1;
        boolean $z0;
        com.android.server.hdmi.HdmiCecMessage $r1;
        byte $b2;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: int getSourceAddress()>();

        $i1 = r0.<com.android.server.hdmi.VolumeControlAction: int mAvrAddress>;

        $z0 = r0.<com.android.server.hdmi.VolumeControlAction: boolean mIsVolumeUp>;

        if $z0 == 0 goto label1;

        $b2 = 65;

        goto label2;

     label1:
        $b2 = 66;

     label2:
        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildUserControlPressed(int,int,int)>($i0, $i1, $b2);

        virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        r0.<com.android.server.hdmi.VolumeControlAction: boolean mSentKeyPressed> = 1;

        return;
    }

    private void resetTimer()
    {
        com.android.server.hdmi.VolumeControlAction r0;
        com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer $r1;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        $r1 = r0.<com.android.server.hdmi.VolumeControlAction: com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer mActionTimer>;

        interfaceinvoke $r1.<com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer: void clearTimerMessage()>();

        virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: void addTimer(int,int)>(1, 300);

        return;
    }

    void handleVolumeChange(boolean)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        boolean z0, $z1, $z2;
        java.lang.Object[] $r1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.hdmi.VolumeControlAction: boolean mIsVolumeUp>;

        if $z1 == z0 goto label1;

        $r1 = newarray (java.lang.Object)[2];

        $z2 = r0.<com.android.server.hdmi.VolumeControlAction: boolean mIsVolumeUp>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r1[1] = $r3;

        staticinvoke <com.android.server.hdmi.HdmiLogger: void debug(java.lang.String,java.lang.Object[])>("Volume Key Status Changed[old:%b new:%b]", $r1);

        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void sendVolumeKeyReleased()>();

        r0.<com.android.server.hdmi.VolumeControlAction: boolean mIsVolumeUp> = z0;

     label1:
        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void updateLastKeyUpdateTime()>();

        return;
    }

    private void sendVolumeKeyReleased()
    {
        com.android.server.hdmi.VolumeControlAction r0;
        int $i0, $i1;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: int getSourceAddress()>();

        $i1 = r0.<com.android.server.hdmi.VolumeControlAction: int mAvrAddress>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildUserControlReleased(int,int)>($i0, $i1);

        virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        r0.<com.android.server.hdmi.VolumeControlAction: boolean mSentKeyPressed> = 0;

        return;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i0 = r0.<com.android.server.hdmi.VolumeControlAction: int mState>;

        if $i0 != 1 goto label1;

        $i1 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getSource()>();

        $i2 = r0.<com.android.server.hdmi.VolumeControlAction: int mAvrAddress>;

        if $i1 == $i2 goto label2;

     label1:
        return 0;

     label2:
        $i3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        lookupswitch($i3)
        {
            case 0: goto label4;
            case 122: goto label3;
            default: goto label5;
        };

     label3:
        $z0 = specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: boolean handleReportAudioStatus(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return $z0;

     label4:
        $z1 = specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: boolean handleFeatureAbort(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return $z1;

     label5:
        return 0;
    }

    private boolean handleReportAudioStatus(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        byte[] r2;
        boolean z0, $z1, $z2;
        byte b0, $b1, $b3;
        short $s2;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        java.lang.Integer $r5;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r6;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b1 = r2[0];

        $s2 = $b1 & 128;

        if $s2 != 128 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $b3 = r2[0];

        b0 = $b3 & 127;

        r0.<com.android.server.hdmi.VolumeControlAction: int mLastAvrVolume> = b0;

        $z1 = specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: boolean shouldUpdateAudioVolume(boolean)>(z0);

        if $z1 == 0 goto label3;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b0);

        $r3[1] = $r5;

        staticinvoke <com.android.server.hdmi.HdmiLogger: void debug(java.lang.String,java.lang.Object[])>("Force volume change[mute:%b, volume=%d]", $r3);

        $r6 = virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        virtualinvoke $r6.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void setAudioStatus(boolean,int)>(z0, b0);

     label3:
        return 1;
    }

    private boolean shouldUpdateAudioVolume(boolean)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        boolean z0, $z1, $z2, $z3;
        android.media.AudioManager r1;
        int i0, i1;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r2;
        com.android.server.hdmi.HdmiControlService $r3;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $r3 = virtualinvoke $r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiControlService getService()>();

        r1 = virtualinvoke $r3.<com.android.server.hdmi.HdmiControlService: android.media.AudioManager getAudioManager()>();

        i0 = virtualinvoke r1.<android.media.AudioManager: int getStreamVolume(int)>(3);

        $z1 = r0.<com.android.server.hdmi.VolumeControlAction: boolean mIsVolumeUp>;

        if $z1 == 0 goto label4;

        i1 = virtualinvoke r1.<android.media.AudioManager: int getStreamMaxVolume(int)>(3);

        if i0 != i1 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        if i0 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    private boolean handleFeatureAbort(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        short s0;
        byte[] $r2;
        byte $b1;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b1 = $r2[0];

        s0 = $b1 & 255;

        if s0 != 68 goto label1;

        virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: void finish()>();

        return 1;

     label1:
        return 0;
    }

    protected void clear()
    {
        com.android.server.hdmi.VolumeControlAction r0;
        boolean $z0;
        int $i0, $i1;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void clear()>();

        $z0 = r0.<com.android.server.hdmi.VolumeControlAction: boolean mSentKeyPressed>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void sendVolumeKeyReleased()>();

     label1:
        $i0 = r0.<com.android.server.hdmi.VolumeControlAction: int mLastAvrVolume>;

        if $i0 == -1 goto label2;

        $r1 = virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i1 = r0.<com.android.server.hdmi.VolumeControlAction: int mLastAvrVolume>;

        virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void setAudioStatus(boolean,int)>(0, $i1);

        r0.<com.android.server.hdmi.VolumeControlAction: int mLastAvrVolume> = -1;

     label2:
        return;
    }

    void handleTimerEvent(int)
    {
        com.android.server.hdmi.VolumeControlAction r0;
        int i0;
        long $l1, $l2, $l3;
        byte $b4;

        r0 := @this: com.android.server.hdmi.VolumeControlAction;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        return;

     label1:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<com.android.server.hdmi.VolumeControlAction: long mLastKeyUpdateTime>;

        $l3 = $l1 - $l2;

        $b4 = $l3 cmp 300L;

        if $b4 < 0 goto label2;

        virtualinvoke r0.<com.android.server.hdmi.VolumeControlAction: void finish()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void sendVolumeKeyPressed()>();

        specialinvoke r0.<com.android.server.hdmi.VolumeControlAction: void resetTimer()>();

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.VolumeControlAction: int UNKNOWN_AVR_VOLUME> = -1;

        <com.android.server.hdmi.VolumeControlAction: int MAX_VOLUME> = 100;

        <com.android.server.hdmi.VolumeControlAction: int STATE_WAIT_FOR_NEXT_VOLUME_PRESS> = 1;

        <com.android.server.hdmi.VolumeControlAction: java.lang.String TAG> = "VolumeControlAction";

        return;
    }
}
