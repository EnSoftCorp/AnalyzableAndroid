final class com.android.server.display.PersistentDataStore extends java.lang.Object
{
    static final java.lang.String TAG;
    private java.util.ArrayList mRememberedWifiDisplays;
    private final android.util.AtomicFile mAtomicFile;
    private boolean mLoaded;
    private boolean mDirty;

    public void <init>()
    {
        com.android.server.display.PersistentDataStore r0;
        java.util.ArrayList $r1;
        android.util.AtomicFile $r2;
        java.io.File $r3;

        r0 := @this: com.android.server.display.PersistentDataStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays> = $r1;

        $r2 = new android.util.AtomicFile;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>("/data/system/display-manager-state.xml");

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile> = $r2;

        return;
    }

    public void saveIfNeeded()
    {
        com.android.server.display.PersistentDataStore r0;
        boolean $z0;

        r0 := @this: com.android.server.display.PersistentDataStore;

        $z0 = r0.<com.android.server.display.PersistentDataStore: boolean mDirty>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void save()>();

        r0.<com.android.server.display.PersistentDataStore: boolean mDirty> = 0;

     label1:
        return;
    }

    public android.hardware.display.WifiDisplay getRememberedWifiDisplay(java.lang.String)
    {
        com.android.server.display.PersistentDataStore r0;
        java.lang.String r1;
        int i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.hardware.display.WifiDisplay $r4;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void loadIfNeeded()>();

        i0 = specialinvoke r0.<com.android.server.display.PersistentDataStore: int findRememberedWifiDisplay(java.lang.String)>(r1);

        if i0 < 0 goto label1;

        $r2 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.hardware.display.WifiDisplay) $r3;

        return $r4;

     label1:
        return null;
    }

    public android.hardware.display.WifiDisplay[] getRememberedWifiDisplays()
    {
        com.android.server.display.PersistentDataStore r0;
        java.util.ArrayList $r1, $r2;
        int $i0;
        android.hardware.display.WifiDisplay[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: com.android.server.display.PersistentDataStore;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void loadIfNeeded()>();

        $r2 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $r1 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (android.hardware.display.WifiDisplay)[$i0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (android.hardware.display.WifiDisplay[]) $r4;

        return $r5;
    }

    public android.hardware.display.WifiDisplay applyWifiDisplayAlias(android.hardware.display.WifiDisplay)
    {
        com.android.server.display.PersistentDataStore r0;
        android.hardware.display.WifiDisplay r1, $r5, $r10;
        java.lang.String r2, $r3, $r4, $r6, $r7;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r8;
        java.lang.Object $r9;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        if r1 == null goto label2;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void loadIfNeeded()>();

        r2 = null;

        $r3 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        i0 = specialinvoke r0.<com.android.server.display.PersistentDataStore: int findRememberedWifiDisplay(java.lang.String)>($r3);

        if i0 < 0 goto label1;

        $r8 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (android.hardware.display.WifiDisplay) $r9;

        r2 = virtualinvoke $r10.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

     label1:
        $r4 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

        $z0 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z0 != 0 goto label2;

        $r5 = new android.hardware.display.WifiDisplay;

        $r6 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $r7 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>();

        $z1 = virtualinvoke r1.<android.hardware.display.WifiDisplay: boolean isAvailable()>();

        $z2 = virtualinvoke r1.<android.hardware.display.WifiDisplay: boolean canConnect()>();

        $z3 = virtualinvoke r1.<android.hardware.display.WifiDisplay: boolean isRemembered()>();

        specialinvoke $r5.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r6, $r7, r2, $z1, $z2, $z3);

        return $r5;

     label2:
        return r1;
    }

    public android.hardware.display.WifiDisplay[] applyWifiDisplayAliases(android.hardware.display.WifiDisplay[])
    {
        com.android.server.display.PersistentDataStore r0;
        android.hardware.display.WifiDisplay[] r1, r2;
        int i0, i1;
        android.hardware.display.WifiDisplay r3, $r4, $r5;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: android.hardware.display.WifiDisplay[];

        r2 = r1;

        if r2 == null goto label4;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r4 = r1[i1];

        r3 = virtualinvoke r0.<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay applyWifiDisplayAlias(android.hardware.display.WifiDisplay)>($r4);

        $r5 = r1[i1];

        if r3 == $r5 goto label3;

        if r2 != r1 goto label2;

        r2 = newarray (android.hardware.display.WifiDisplay)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);

     label2:
        r2[i1] = r3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r2;
    }

    public boolean rememberWifiDisplay(android.hardware.display.WifiDisplay)
    {
        com.android.server.display.PersistentDataStore r0;
        android.hardware.display.WifiDisplay r1, r2;
        int i0;
        java.lang.String $r3;
        java.util.ArrayList $r4, $r5, $r7;
        java.lang.Object $r6;
        boolean $z1;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void loadIfNeeded()>();

        $r3 = virtualinvoke r1.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        i0 = specialinvoke r0.<com.android.server.display.PersistentDataStore: int findRememberedWifiDisplay(java.lang.String)>($r3);

        if i0 < 0 goto label2;

        $r5 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.hardware.display.WifiDisplay) $r6;

        $z1 = virtualinvoke r2.<android.hardware.display.WifiDisplay: boolean equals(android.hardware.display.WifiDisplay)>(r1);

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $r7 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        goto label3;

     label2:
        $r4 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        specialinvoke r0.<com.android.server.display.PersistentDataStore: void setDirty()>();

        return 1;
    }

    public boolean forgetWifiDisplay(java.lang.String)
    {
        com.android.server.display.PersistentDataStore r0;
        java.lang.String r1;
        int i0;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: java.lang.String;

        i0 = specialinvoke r0.<com.android.server.display.PersistentDataStore: int findRememberedWifiDisplay(java.lang.String)>(r1);

        if i0 < 0 goto label1;

        $r2 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void setDirty()>();

        return 1;

     label1:
        return 0;
    }

    private int findRememberedWifiDisplay(java.lang.String)
    {
        com.android.server.display.PersistentDataStore r0;
        java.lang.String r1, $r6;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.hardware.display.WifiDisplay $r5;
        boolean $z0;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.hardware.display.WifiDisplay) $r4;

        $r6 = virtualinvoke $r5.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void loadIfNeeded()
    {
        com.android.server.display.PersistentDataStore r0;
        boolean $z0;

        r0 := @this: com.android.server.display.PersistentDataStore;

        $z0 = r0.<com.android.server.display.PersistentDataStore: boolean mLoaded>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void load()>();

        r0.<com.android.server.display.PersistentDataStore: boolean mLoaded> = 1;

     label1:
        return;
    }

    private void setDirty()
    {
        com.android.server.display.PersistentDataStore r0;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r0.<com.android.server.display.PersistentDataStore: boolean mDirty> = 1;

        return;
    }

    private void clearState()
    {
        com.android.server.display.PersistentDataStore r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.display.PersistentDataStore;

        $r1 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    private void load()
    {
        com.android.server.display.PersistentDataStore r0;
        java.io.FileInputStream r1;
        java.io.IOException r3, $r8;
        java.lang.Throwable r4, $r7;
        android.util.AtomicFile $r5;
        java.io.BufferedInputStream $r6;
        java.io.FileNotFoundException $r9;
        org.xmlpull.v1.XmlPullParserException $r10, r12;
        org.xmlpull.v1.XmlPullParser r11;

        r0 := @this: com.android.server.display.PersistentDataStore;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void clearState()>();

     label01:
        $r5 = r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile>;

        r1 = virtualinvoke $r5.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        return;

     label04:
        r11 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

        interfaceinvoke r11.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r6, null);

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void loadFromXml(org.xmlpull.v1.XmlPullParser)>(r11);

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label12;

     label06:
        $r8 := @caughtexception;

        r3 = $r8;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayManager", "Failed to load display manager persistent store data.", r3);

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void clearState()>();

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label12;

     label08:
        $r10 := @caughtexception;

        r12 = $r10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayManager", "Failed to load display manager persistent store data.", r12);

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void clearState()>();

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label12;

     label10:
        $r7 := @caughtexception;

        r4 = $r7;

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r4;

     label12:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void save()
    {
        com.android.server.display.PersistentDataStore r0;
        java.io.FileOutputStream r1;
        boolean z0, z1;
        com.android.internal.util.FastXmlSerializer r2, $r5;
        java.lang.Throwable r3, $r9;
        android.util.AtomicFile $r4, $r7, $r8, $r10, $r11;
        java.io.BufferedOutputStream $r6;
        java.io.IOException $r12, r13;

        r0 := @this: com.android.server.display.PersistentDataStore;

     label01:
        $r4 = r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile>;

        r1 = virtualinvoke $r4.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        z0 = 0;

     label02:
        $r5 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r5.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r5;

        $r6 = new java.io.BufferedOutputStream;

        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r6, "utf-8");

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void flush()>();

        z1 = 1;

     label03:
        if z1 == 0 goto label04;

        $r8 = r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile>;

        virtualinvoke $r8.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

        goto label09;

     label04:
        $r7 = r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile>;

        virtualinvoke $r7.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

        goto label09;

     label05:
        $r9 := @caughtexception;

        r3 = $r9;

     label06:
        if z0 == 0 goto label07;

        $r11 = r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile>;

        virtualinvoke $r11.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

        goto label08;

     label07:
        $r10 = r0.<com.android.server.display.PersistentDataStore: android.util.AtomicFile mAtomicFile>;

        virtualinvoke $r10.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

     label08:
        throw r3;

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        r13 = $r12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DisplayManager", "Failed to save display manager persistent store data.", r13);

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label01 to label09 with label10;
    }

    private void loadFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.display.PersistentDataStore r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "display-manager-state");

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r1, i0);

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("remembered-wifi-displays");

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.display.PersistentDataStore: void loadRememberedWifiDisplaysFromXml(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label2:
        return;
    }

    private void loadRememberedWifiDisplaysFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.display.PersistentDataStore r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, r3, r4, $r5;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParserException $r6, $r9;
        android.hardware.display.WifiDisplay $r7;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r1, i0);

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("wifi-display");

        if $z1 == 0 goto label1;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "deviceAddress");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "deviceName");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "deviceAlias");

        if r2 == null goto label2;

        if r3 != null goto label3;

     label2:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Missing deviceAddress or deviceName attribute on wifi-display.");

        throw $r6;

     label3:
        $i1 = specialinvoke r0.<com.android.server.display.PersistentDataStore: int findRememberedWifiDisplay(java.lang.String)>(r2);

        if $i1 < 0 goto label4;

        $r9 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Found duplicate wifi display device address.");

        throw $r9;

     label4:
        $r8 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        $r7 = new android.hardware.display.WifiDisplay;

        specialinvoke $r7.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>(r2, r3, r4, 0, 0, 0);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label5:
        return;
    }

    private void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.display.PersistentDataStore r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.util.Iterator r2;
        android.hardware.display.WifiDisplay r3;
        java.lang.Boolean $r4;
        java.util.ArrayList $r7;
        boolean $z0;
        java.lang.Object $r10;
        java.lang.String $r12, $r14, $r15, $r18;

        r0 := @this: com.android.server.display.PersistentDataStore;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "display-manager-state");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "remembered-wifi-displays");

        $r7 = r0.<com.android.server.display.PersistentDataStore: java.util.ArrayList mRememberedWifiDisplays>;

        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.hardware.display.WifiDisplay) $r10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "wifi-display");

        $r12 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "deviceAddress", $r12);

        $r14 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "deviceName", $r14);

        $r15 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

        if $r15 == null goto label2;

        $r18 = virtualinvoke r3.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "deviceAlias", $r18);

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "wifi-display");

        goto label1;

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "remembered-wifi-displays");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "display-manager-state");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.PersistentDataStore: java.lang.String TAG> = "DisplayManager";

        return;
    }
}
