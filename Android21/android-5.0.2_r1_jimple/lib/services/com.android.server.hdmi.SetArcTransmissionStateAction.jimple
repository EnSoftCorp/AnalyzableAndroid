final class com.android.server.hdmi.SetArcTransmissionStateAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    private static final int STATE_WAITING_TIMEOUT;
    private final boolean mEnabled;
    private final int mAvrAddress;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int, boolean)
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.hdmi.SetArcTransmissionStateAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        $i1 = virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int getSourceAddress()>();

        staticinvoke <com.android.server.hdmi.HdmiUtils: void verifyAddressType(int,int)>($i1, 0);

        staticinvoke <com.android.server.hdmi.HdmiUtils: void verifyAddressType(int,int)>(i0, 5);

        r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mAvrAddress> = i0;

        r0.<com.android.server.hdmi.SetArcTransmissionStateAction: boolean mEnabled> = z0;

        return;
    }

    boolean start()
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.hdmi.SetArcTransmissionStateAction;

        $z0 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: boolean mEnabled>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void setArcStatus(boolean)>(1);

        r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mState> = 1;

        $i0 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void addTimer(int,int)>($i0, 2000);

        specialinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void sendReportArcInitiated()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void setArcStatus(boolean)>(0);

        virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void finish()>();

     label2:
        return 1;
    }

    private void sendReportArcInitiated()
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int $i0, $i1;
        com.android.server.hdmi.SetArcTransmissionStateAction$1 $r2;

        r0 := @this: com.android.server.hdmi.SetArcTransmissionStateAction;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int getSourceAddress()>();

        $i1 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mAvrAddress>;

        r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildReportArcInitiated(int,int)>($i0, $i1);

        $r2 = new com.android.server.hdmi.SetArcTransmissionStateAction$1;

        specialinvoke $r2.<com.android.server.hdmi.SetArcTransmissionStateAction$1: void <init>(com.android.server.hdmi.SetArcTransmissionStateAction)>(r0);

        virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage,com.android.server.hdmi.HdmiControlService$SendMessageCallback)>(r1, $r2);

        return;
    }

    private void setArcStatus(boolean)
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        boolean z0, z1;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        int $i1, $i2;
        com.android.server.hdmi.HdmiCecMessage $r9;

        r0 := @this: com.android.server.hdmi.SetArcTransmissionStateAction;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        z1 = virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean setArcStatus(boolean)>(z0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change arc status [old:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SetArcTransmissionStateAction", $r8);

        if z0 != 0 goto label1;

        if z1 == 0 goto label1;

        $i1 = virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int getSourceAddress()>();

        $i2 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mAvrAddress>;

        $r9 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildReportArcTerminated(int,int)>($i1, $i2);

        virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r9);

     label1:
        return;
    }

    boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int i0, $i2;
        short s1;
        byte[] $r2;
        byte $b3;
        java.lang.Object[] $r3;

        r0 := @this: com.android.server.hdmi.SetArcTransmissionStateAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $i2 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mState>;

        if $i2 == 1 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        if i0 != 0 goto label2;

        $r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b3 = $r2[0];

        s1 = $b3 & 255;

        if s1 != 193 goto label2;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.server.hdmi.HdmiLogger: void debug(java.lang.String,java.lang.Object[])>("Feature aborted for <Report Arc Initiated>", $r3);

        specialinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void setArcStatus(boolean)>(0);

        virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void finish()>();

        return 1;

     label2:
        return 0;
    }

    void handleTimerEvent(int)
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.hdmi.SetArcTransmissionStateAction;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mState>;

        if $i1 != i0 goto label1;

        $i2 = r0.<com.android.server.hdmi.SetArcTransmissionStateAction: int mState>;

        if $i2 == 1 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void finish()>();

        return;
    }

    static void access$000(com.android.server.hdmi.SetArcTransmissionStateAction, boolean)
    {
        com.android.server.hdmi.SetArcTransmissionStateAction r0;
        boolean z0;

        r0 := @parameter0: com.android.server.hdmi.SetArcTransmissionStateAction;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.hdmi.SetArcTransmissionStateAction: void setArcStatus(boolean)>(z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.SetArcTransmissionStateAction: int STATE_WAITING_TIMEOUT> = 1;

        <com.android.server.hdmi.SetArcTransmissionStateAction: java.lang.String TAG> = "SetArcTransmissionStateAction";

        return;
    }
}
