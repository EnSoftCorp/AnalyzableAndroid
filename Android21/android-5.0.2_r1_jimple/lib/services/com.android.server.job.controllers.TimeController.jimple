public class com.android.server.job.controllers.TimeController extends com.android.server.job.controllers.StateController
{
    private static final java.lang.String TAG;
    private static final java.lang.String ACTION_JOB_EXPIRED;
    private static final java.lang.String ACTION_JOB_DELAY_EXPIRED;
    private final android.app.PendingIntent mDeadlineExpiredAlarmIntent;
    private final android.app.PendingIntent mNextDelayExpiredAlarmIntent;
    private long mNextJobExpiredElapsedMillis;
    private long mNextDelayExpiredElapsedMillis;
    private android.app.AlarmManager mAlarmService;
    private final java.util.List mTrackedJobs;
    private static com.android.server.job.controllers.TimeController mSingleton;
    private final android.content.BroadcastReceiver mAlarmExpiredReceiver;

    public static synchronized com.android.server.job.controllers.TimeController get(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.JobSchedulerService r0;
        com.android.server.job.controllers.TimeController $r1, $r2, $r3;
        android.content.Context $r4;

        r0 := @parameter0: com.android.server.job.JobSchedulerService;

        $r1 = <com.android.server.job.controllers.TimeController: com.android.server.job.controllers.TimeController mSingleton>;

        if $r1 != null goto label1;

        $r3 = new com.android.server.job.controllers.TimeController;

        $r4 = virtualinvoke r0.<com.android.server.job.JobSchedulerService: android.content.Context getContext()>();

        specialinvoke $r3.<com.android.server.job.controllers.TimeController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r0, $r4);

        <com.android.server.job.controllers.TimeController: com.android.server.job.controllers.TimeController mSingleton> = $r3;

     label1:
        $r2 = <com.android.server.job.controllers.TimeController: com.android.server.job.controllers.TimeController mSingleton>;

        return $r2;
    }

    private void <init>(com.android.server.job.StateChangedListener, android.content.Context)
    {
        com.android.server.job.controllers.TimeController r0;
        com.android.server.job.StateChangedListener r1;
        android.content.Context r2, $r7, $r10, $r15;
        android.content.IntentFilter r3, $r12;
        java.util.LinkedList $r4;
        com.android.server.job.controllers.TimeController$1 $r5;
        android.content.Intent $r6, $r9;
        android.app.PendingIntent $r8, $r11;
        android.content.BroadcastReceiver $r13;

        r0 := @this: com.android.server.job.controllers.TimeController;

        r1 := @parameter0: com.android.server.job.StateChangedListener;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r1, r2);

        r0.<com.android.server.job.controllers.TimeController: android.app.AlarmManager mAlarmService> = null;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs> = $r4;

        $r5 = new com.android.server.job.controllers.TimeController$1;

        specialinvoke $r5.<com.android.server.job.controllers.TimeController$1: void <init>(com.android.server.job.controllers.TimeController)>(r0);

        r0.<com.android.server.job.controllers.TimeController: android.content.BroadcastReceiver mAlarmExpiredReceiver> = $r5;

        $r7 = r0.<com.android.server.job.controllers.TimeController: android.content.Context mContext>;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.content.jobscheduler.JOB_DEADLINE_EXPIRED");

        $r8 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r7, 0, $r6, 0);

        r0.<com.android.server.job.controllers.TimeController: android.app.PendingIntent mDeadlineExpiredAlarmIntent> = $r8;

        $r10 = r0.<com.android.server.job.controllers.TimeController: android.content.Context mContext>;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.content.jobscheduler.JOB_DELAY_EXPIRED");

        $r11 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r10, 0, $r9, 0);

        r0.<com.android.server.job.controllers.TimeController: android.app.PendingIntent mNextDelayExpiredAlarmIntent> = $r11;

        r0.<com.android.server.job.controllers.TimeController: long mNextJobExpiredElapsedMillis> = 9223372036854775807L;

        r0.<com.android.server.job.controllers.TimeController: long mNextDelayExpiredElapsedMillis> = 9223372036854775807L;

        $r12 = new android.content.IntentFilter;

        specialinvoke $r12.<android.content.IntentFilter: void <init>(java.lang.String)>("android.content.jobscheduler.JOB_DEADLINE_EXPIRED");

        r3 = $r12;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.content.jobscheduler.JOB_DELAY_EXPIRED");

        $r15 = r0.<com.android.server.job.controllers.TimeController: android.content.Context mContext>;

        $r13 = r0.<com.android.server.job.controllers.TimeController: android.content.BroadcastReceiver mAlarmExpiredReceiver>;

        virtualinvoke $r15.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r13, r3);

        return;
    }

    public synchronized void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.TimeController r0;
        com.android.server.job.controllers.JobStatus r1, r3;
        java.util.ListIterator r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r4, $r5;
        int $i0;
        long $l1, $l2, $l3, $l4;
        java.lang.Object $r6;
        byte $b5;

        r0 := @this: com.android.server.job.controllers.TimeController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasTimingDelayConstraint()>();

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z4 == 0 goto label9;

     label1:
        virtualinvoke r0.<com.android.server.job.controllers.TimeController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>(r1);

        $r5 = r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs>;

        $r4 = r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label2:
        $z1 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        r3 = (com.android.server.job.controllers.JobStatus) $r6;

        $l4 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>();

        $l3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>();

        $b5 = $l4 cmp $l3;

        if $b5 >= 0 goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>(r1);

        $z2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasTimingDelayConstraint()>();

        if $z2 == 0 goto label5;

        $l1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getEarliestRunTime()>();

        goto label6;

     label5:
        $l1 = 9223372036854775807L;

     label6:
        $z3 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z3 == 0 goto label7;

        $l2 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>();

        goto label8;

     label7:
        $l2 = 9223372036854775807L;

     label8:
        specialinvoke r0.<com.android.server.job.controllers.TimeController: void maybeUpdateAlarms(long,long)>($l1, $l2);

     label9:
        return;
    }

    public synchronized void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.TimeController r0;
        com.android.server.job.controllers.JobStatus r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.TimeController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r2 = r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void checkExpiredDelaysAndResetAlarm()>();

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void checkExpiredDeadlinesAndResetAlarm()>();

     label1:
        return;
    }

    private boolean canStopTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.TimeController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r3;

        r0 := @this: com.android.server.job.controllers.TimeController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasTimingDelayConstraint()>();

        if $z0 == 0 goto label1;

        $r3 = r1.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean timeDelayConstraintSatisfied>;

        $z4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z4 == 0 goto label3;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z1 == 0 goto label2;

        $r2 = r1.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean deadlineConstraintSatisfied>;

        $z2 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    private void ensureAlarmService()
    {
        com.android.server.job.controllers.TimeController r0;
        android.app.AlarmManager $r1, $r4;
        android.content.Context $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.job.controllers.TimeController;

        $r1 = r0.<com.android.server.job.controllers.TimeController: android.app.AlarmManager mAlarmService>;

        if $r1 != null goto label1;

        $r2 = r0.<com.android.server.job.controllers.TimeController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r4 = (android.app.AlarmManager) $r3;

        r0.<com.android.server.job.controllers.TimeController: android.app.AlarmManager mAlarmService> = $r4;

     label1:
        return;
    }

    private synchronized void checkExpiredDeadlinesAndResetAlarm()
    {
        com.android.server.job.controllers.TimeController r0;
        long l0, l1, l2;
        java.util.Iterator r1;
        com.android.server.job.controllers.JobStatus r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        byte $b3;
        com.android.server.job.StateChangedListener $r6;

        r0 := @this: com.android.server.job.controllers.TimeController;

        l0 = 9223372036854775807L;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.job.controllers.JobStatus) $r4;

        $z1 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        l2 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>();

        $b3 = l2 cmp l1;

        if $b3 > 0 goto label3;

        $r5 = r2.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean deadlineConstraintSatisfied>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r6 = r0.<com.android.server.job.controllers.TimeController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r6.<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>(r2);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label4;

     label3:
        l0 = l2;

        goto label5;

     label4:
        goto label1;

     label5:
        specialinvoke r0.<com.android.server.job.controllers.TimeController: void setDeadlineExpiredAlarm(long)>(l0);

        return;
    }

    private synchronized void checkExpiredDelaysAndResetAlarm()
    {
        com.android.server.job.controllers.TimeController r0;
        long l0, l1, l2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r1;
        com.android.server.job.controllers.JobStatus r2;
        java.util.List $r3;
        com.android.server.job.StateChangedListener $r4;
        java.lang.Object $r5;
        byte $b3, $b4;
        java.util.concurrent.atomic.AtomicBoolean $r6;

        r0 := @this: com.android.server.job.controllers.TimeController;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = 9223372036854775807L;

        z0 = 0;

        $r3 = r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.job.controllers.JobStatus) $r5;

        $z2 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: boolean hasTimingDelayConstraint()>();

        if $z2 != 0 goto label2;

        goto label1;

     label2:
        l2 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: long getEarliestRunTime()>();

        $b4 = l2 cmp l0;

        if $b4 > 0 goto label4;

        $r6 = r2.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean timeDelayConstraintSatisfied>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $z3 = specialinvoke r0.<com.android.server.job.controllers.TimeController: boolean canStopTrackingJob(com.android.server.job.controllers.JobStatus)>(r2);

        if $z3 == 0 goto label3;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label3:
        $z4 = virtualinvoke r2.<com.android.server.job.controllers.JobStatus: boolean isReady()>();

        if $z4 == 0 goto label5;

        z0 = 1;

        goto label5;

     label4:
        $b3 = l1 cmp l2;

        if $b3 <= 0 goto label5;

        l1 = l2;

     label5:
        goto label1;

     label6:
        if z0 == 0 goto label7;

        $r4 = r0.<com.android.server.job.controllers.TimeController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r4.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

     label7:
        specialinvoke r0.<com.android.server.job.controllers.TimeController: void setDelayExpiredAlarm(long)>(l1);

        return;
    }

    private void maybeUpdateAlarms(long, long)
    {
        com.android.server.job.controllers.TimeController r0;
        long l0, l1, $l2, $l4;
        byte $b3, $b5;

        r0 := @this: com.android.server.job.controllers.TimeController;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = r0.<com.android.server.job.controllers.TimeController: long mNextDelayExpiredElapsedMillis>;

        $b3 = l0 cmp $l2;

        if $b3 >= 0 goto label1;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void setDelayExpiredAlarm(long)>(l0);

     label1:
        $l4 = r0.<com.android.server.job.controllers.TimeController: long mNextJobExpiredElapsedMillis>;

        $b5 = l1 cmp $l4;

        if $b5 >= 0 goto label2;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void setDeadlineExpiredAlarm(long)>(l1);

     label2:
        return;
    }

    private void setDelayExpiredAlarm(long)
    {
        com.android.server.job.controllers.TimeController r0;
        long l0, $l1, l2;
        android.app.PendingIntent $r1;

        r0 := @this: com.android.server.job.controllers.TimeController;

        l0 := @parameter0: long;

        l2 = specialinvoke r0.<com.android.server.job.controllers.TimeController: long maybeAdjustAlarmTime(long)>(l0);

        r0.<com.android.server.job.controllers.TimeController: long mNextDelayExpiredElapsedMillis> = l2;

        $r1 = r0.<com.android.server.job.controllers.TimeController: android.app.PendingIntent mNextDelayExpiredAlarmIntent>;

        $l1 = r0.<com.android.server.job.controllers.TimeController: long mNextDelayExpiredElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void updateAlarmWithPendingIntent(android.app.PendingIntent,long)>($r1, $l1);

        return;
    }

    private void setDeadlineExpiredAlarm(long)
    {
        com.android.server.job.controllers.TimeController r0;
        long l0, $l1, l2;
        android.app.PendingIntent $r1;

        r0 := @this: com.android.server.job.controllers.TimeController;

        l0 := @parameter0: long;

        l2 = specialinvoke r0.<com.android.server.job.controllers.TimeController: long maybeAdjustAlarmTime(long)>(l0);

        r0.<com.android.server.job.controllers.TimeController: long mNextJobExpiredElapsedMillis> = l2;

        $r1 = r0.<com.android.server.job.controllers.TimeController: android.app.PendingIntent mDeadlineExpiredAlarmIntent>;

        $l1 = r0.<com.android.server.job.controllers.TimeController: long mNextJobExpiredElapsedMillis>;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void updateAlarmWithPendingIntent(android.app.PendingIntent,long)>($r1, $l1);

        return;
    }

    private long maybeAdjustAlarmTime(long)
    {
        com.android.server.job.controllers.TimeController r0;
        long l0, l1;
        byte $b2;

        r0 := @this: com.android.server.job.controllers.TimeController;

        l0 := @parameter0: long;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        return l1;

     label1:
        return l0;
    }

    private void updateAlarmWithPendingIntent(android.app.PendingIntent, long)
    {
        com.android.server.job.controllers.TimeController r0;
        android.app.PendingIntent r1;
        long l0;
        byte $b1;
        android.app.AlarmManager $r2, $r3;

        r0 := @this: com.android.server.job.controllers.TimeController;

        r1 := @parameter0: android.app.PendingIntent;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void ensureAlarmService()>();

        $b1 = l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        $r3 = r0.<com.android.server.job.controllers.TimeController: android.app.AlarmManager mAlarmService>;

        virtualinvoke $r3.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r1);

        goto label2;

     label1:
        $r2 = r0.<com.android.server.job.controllers.TimeController: android.app.AlarmManager mAlarmService>;

        virtualinvoke $r2.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(3, l0, r1);

     label2:
        return;
    }

    public void dumpControllerState(java.io.PrintWriter)
    {
        com.android.server.job.controllers.TimeController r0;
        java.io.PrintWriter r1;
        long l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10;
        java.util.Iterator r2;
        com.android.server.job.controllers.JobStatus r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31;
        java.lang.String $r8, $r14, $r19, $r20, $r25, $r29;
        java.util.List $r18;
        boolean $z0, $z1, $z2;
        int $i8;
        java.lang.Object $r21;
        java.lang.Comparable $r32, $r33;

        r0 := @this: com.android.server.job.controllers.TimeController;

        r1 := @parameter0: java.io.PrintWriter;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alarms (");

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next delay alarm in ");

        $l2 = r0.<com.android.server.job.controllers.TimeController: long mNextDelayExpiredElapsedMillis>;

        $l4 = $l2 - l0;

        $l3 = $l4 / 1000L;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next deadline alarm in ");

        $l5 = r0.<com.android.server.job.controllers.TimeController: long mNextJobExpiredElapsedMillis>;

        $l7 = $l5 - l0;

        $l6 = $l7 / 1000L;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Tracking:");

        $r18 = r0.<com.android.server.job.controllers.TimeController: java.util.List mTrackedJobs>;

        r2 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r21 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.job.controllers.JobStatus) $r21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $i8 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i8);

        $r25 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": (");

        $z2 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: boolean hasTimingDelayConstraint()>();

        if $z2 == 0 goto label2;

        $l10 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: long getEarliestRunTime()>();

        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        goto label3;

     label2:
        $r32 = "N/A";

     label3:
        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $z1 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>();

        if $z1 == 0 goto label4;

        $l9 = virtualinvoke r3.<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>();

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        goto label5;

     label4:
        $r33 = "N/A";

     label5:
        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        goto label1;

     label6:
        return;
    }

    static void access$000(com.android.server.job.controllers.TimeController)
    {
        com.android.server.job.controllers.TimeController r0;

        r0 := @parameter0: com.android.server.job.controllers.TimeController;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void checkExpiredDeadlinesAndResetAlarm()>();

        return;
    }

    static void access$100(com.android.server.job.controllers.TimeController)
    {
        com.android.server.job.controllers.TimeController r0;

        r0 := @parameter0: com.android.server.job.controllers.TimeController;

        specialinvoke r0.<com.android.server.job.controllers.TimeController: void checkExpiredDelaysAndResetAlarm()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.job.controllers.TimeController: java.lang.String ACTION_JOB_DELAY_EXPIRED> = "android.content.jobscheduler.JOB_DELAY_EXPIRED";

        <com.android.server.job.controllers.TimeController: java.lang.String ACTION_JOB_EXPIRED> = "android.content.jobscheduler.JOB_DEADLINE_EXPIRED";

        <com.android.server.job.controllers.TimeController: java.lang.String TAG> = "JobScheduler.Time";

        return;
    }
}
