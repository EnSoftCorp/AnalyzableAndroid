public class com.android.server.SystemServiceManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private boolean mSafeMode;
    private final java.util.ArrayList mServices;
    private int mCurrentPhase;

    public void <init>(android.content.Context)
    {
        com.android.server.SystemServiceManager r0;
        android.content.Context r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices> = $r2;

        r0.<com.android.server.SystemServiceManager: int mCurrentPhase> = -1;

        r0.<com.android.server.SystemServiceManager: android.content.Context mContext> = r1;

        return;
    }

    public com.android.server.SystemService startService(java.lang.String)
    {
        com.android.server.SystemServiceManager r0;
        java.lang.String r1, $r9, $r17;
        java.lang.Class r2;
        java.lang.ClassNotFoundException r3, $r5;
        com.android.server.SystemService $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        java.lang.RuntimeException $r10;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: java.lang.String;

     label1:
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", $r9);

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service class not found, usually indicates that the caller should ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("have called PackageManager.hasSystemFeature() to check whether the ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("feature is available on this device before trying to start the ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("services that implement it");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r3);

        throw $r10;

     label4:
        $r4 = virtualinvoke r0.<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>(r2);

        return $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public com.android.server.SystemService startService(java.lang.Class)
    {
        com.android.server.SystemServiceManager r0;
        java.lang.Class r1, $r9, $r21;
        java.lang.String r2, $r8, $r20, $r22, $r32, $r35, $r43, $r52, $r58;
        com.android.server.SystemService r3;
        java.lang.reflect.Constructor r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r16, $r17, $r18, $r19, $r23, $r26, $r27, $r28, $r29, $r31, $r34, $r36, $r37, $r38, $r39, $r44, $r45, $r46, $r47, $r48, $r53, $r54, $r55, $r56, $r57;
        boolean $z0;
        java.lang.Class[] $r10;
        android.content.Context $r11;
        java.lang.Object[] $r12;
        java.util.ArrayList $r13;
        java.lang.Object $r14;
        java.lang.RuntimeException $r15, $r24, $r30, $r33, $r41, $r49, $r50, r63;
        java.lang.reflect.InvocationTargetException $r25, r62;
        java.lang.InstantiationException $r40, r59;
        java.lang.IllegalAccessException $r42, r60;
        java.lang.NoSuchMethodException $r51, r61;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", $r8);

        $r9 = class "com/android/server/SystemService";

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 != 0 goto label01;

        $r15 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service must extend ");

        $r21 = class "com/android/server/SystemService";

        $r20 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label01:
        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "android/content/Context";

        r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r10);

        $r12 = newarray (java.lang.Object)[1];

        $r11 = r0.<com.android.server.SystemServiceManager: android.content.Context mContext>;

        $r12[0] = $r11;

        $r14 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        r3 = (com.android.server.SystemService) $r14;

     label02:
        goto label07;

     label03:
        $r40 := @caughtexception;

        r59 = $r40;

        $r41 = new java.lang.RuntimeException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service could not be instantiated");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r43, r59);

        throw $r41;

     label04:
        $r42 := @caughtexception;

        r60 = $r42;

        $r49 = new java.lang.RuntimeException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service must have a public constructor with a Context argument");

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r52, r60);

        throw $r49;

     label05:
        $r51 := @caughtexception;

        r61 = $r51;

        $r50 = new java.lang.RuntimeException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service must have a public constructor with a Context argument");

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r58, r61);

        throw $r50;

     label06:
        $r25 := @caughtexception;

        r62 = $r25;

        $r24 = new java.lang.RuntimeException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service constructor threw an exception");

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r62);

        throw $r24;

     label07:
        $r13 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label08:
        virtualinvoke r3.<com.android.server.SystemService: void onStart()>();

     label09:
        goto label11;

     label10:
        $r33 := @caughtexception;

        r63 = $r33;

        $r30 = new java.lang.RuntimeException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to start service ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onStart threw an exception");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r35, r63);

        throw $r30;

     label11:
        return r3;

        catch java.lang.InstantiationException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label04;
        catch java.lang.NoSuchMethodException from label01 to label02 with label05;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label06;
        catch java.lang.RuntimeException from label08 to label09 with label10;
    }

    public void startBootPhase(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7;
        com.android.server.SystemService r1;
        java.lang.Exception r2, $r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r13, $r14, $r17, $r18, $r19;
        java.lang.String $r6, $r15, $r20;
        java.util.ArrayList $r7, $r9;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r10;
        java.lang.RuntimeException $r11;
        java.lang.Class $r16;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        if i0 > $i3 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Next phase must be larger than previous");

        throw $r10;

     label1:
        r0.<com.android.server.SystemServiceManager: int mCurrentPhase> = i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting phase ");

        $i4 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", $r6);

        $r7 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label7;

        $r9 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.SystemService) $r8;

     label3:
        $i6 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        virtualinvoke r1.<com.android.server.SystemService: void onBootPhase(int)>($i6);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        r2 = $r12;

        $r11 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to boot service ");

        $r16 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onBootPhase threw an exception during phase ");

        $i7 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r2);

        throw $r11;

     label6:
        i2 = i2 + 1;

        goto label2;

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void startUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0, i1, i2;
        com.android.server.SystemService r1;
        java.lang.Exception r2, $r6;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r14;
        java.lang.String $r11, $r13;
        java.lang.Class $r12;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        $r4 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.SystemService) $r5;

     label2:
        virtualinvoke r1.<com.android.server.SystemService: void onStartUser(int)>(i0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reporting start of user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to service ");

        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServiceManager", $r13, r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void switchUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0, i1, i2;
        com.android.server.SystemService r1;
        java.lang.Exception r2, $r6;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r14;
        java.lang.String $r11, $r13;
        java.lang.Class $r12;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        $r4 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.SystemService) $r5;

     label2:
        virtualinvoke r1.<com.android.server.SystemService: void onSwitchUser(int)>(i0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reporting switch of user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to service ");

        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServiceManager", $r13, r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void stopUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0, i1, i2;
        com.android.server.SystemService r1;
        java.lang.Exception r2, $r6;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r14;
        java.lang.String $r11, $r13;
        java.lang.Class $r12;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        $r4 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.SystemService) $r5;

     label2:
        virtualinvoke r1.<com.android.server.SystemService: void onStopUser(int)>(i0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reporting stop of user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to service ");

        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServiceManager", $r13, r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void cleanupUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0, i1, i2;
        com.android.server.SystemService r1;
        java.lang.Exception r2, $r6;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r14;
        java.lang.String $r11, $r13;
        java.lang.Class $r12;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        $r4 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.SystemService) $r5;

     label2:
        virtualinvoke r1.<com.android.server.SystemService: void onCleanupUser(int)>(i0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reporting cleanup of user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to service ");

        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServiceManager", $r13, r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void setSafeMode(boolean)
    {
        com.android.server.SystemServiceManager r0;
        boolean z0;

        r0 := @this: com.android.server.SystemServiceManager;

        z0 := @parameter0: boolean;

        r0.<com.android.server.SystemServiceManager: boolean mSafeMode> = z0;

        return;
    }

    public boolean isSafeMode()
    {
        com.android.server.SystemServiceManager r0;
        boolean $z0;

        r0 := @this: com.android.server.SystemServiceManager;

        $z0 = r0.<com.android.server.SystemServiceManager: boolean mSafeMode>;

        return $z0;
    }

    public void dump()
    {
        com.android.server.SystemServiceManager r0;
        java.lang.StringBuilder r1, $r3, $r4, $r5, $r13, $r14;
        int i0, i1, $i2;
        com.android.server.SystemService r2;
        java.util.ArrayList $r8, $r11;
        java.lang.String $r9, $r15;
        java.lang.Object $r10;
        java.lang.Class $r12;

        r0 := @this: com.android.server.SystemServiceManager;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current phase: ");

        $i2 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Services:\n");

        $r8 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r11 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.SystemService) $r10;

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SystemServiceManager", $r9);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.SystemServiceManager: java.lang.String TAG> = "SystemServiceManager";

        return;
    }
}
