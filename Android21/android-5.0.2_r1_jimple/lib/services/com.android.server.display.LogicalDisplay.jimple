final class com.android.server.display.LogicalDisplay extends java.lang.Object
{
    private final android.view.DisplayInfo mBaseDisplayInfo;
    private static final int BLANK_LAYER_STACK;
    private final int mDisplayId;
    private final int mLayerStack;
    private android.view.DisplayInfo mOverrideDisplayInfo;
    private android.view.DisplayInfo mInfo;
    private com.android.server.display.DisplayDevice mPrimaryDisplayDevice;
    private com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo;
    private boolean mHasContent;
    private float mRequestedRefreshRate;
    private final android.graphics.Rect mTempLayerStackRect;
    private final android.graphics.Rect mTempDisplayRect;

    public void <init>(int, int, com.android.server.display.DisplayDevice)
    {
        com.android.server.display.LogicalDisplay r0;
        int i0, i1;
        com.android.server.display.DisplayDevice r1;
        android.view.DisplayInfo $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: com.android.server.display.LogicalDisplay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.server.display.DisplayDevice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.view.DisplayInfo;

        specialinvoke $r2.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempLayerStackRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect> = $r4;

        r0.<com.android.server.display.LogicalDisplay: int mDisplayId> = i0;

        r0.<com.android.server.display.LogicalDisplay: int mLayerStack> = i1;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice> = r1;

        return;
    }

    public int getDisplayIdLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        int $i0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mDisplayId>;

        return $i0;
    }

    public com.android.server.display.DisplayDevice getPrimaryDisplayDeviceLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayDevice $r1;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        return $r1;
    }

    public android.view.DisplayInfo getDisplayInfoLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        android.view.DisplayInfo $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        int $i0, $i1;
        java.lang.String $r12;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        if $r1 != null goto label2;

        $r3 = new android.view.DisplayInfo;

        specialinvoke $r3.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo> = $r3;

        $r4 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        if $r4 == null goto label1;

        $r8 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        $r7 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        virtualinvoke $r8.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>($r7);

        $r10 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        $r9 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i0 = $r9.<android.view.DisplayInfo: int layerStack>;

        $r10.<android.view.DisplayInfo: int layerStack> = $i0;

        $r13 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        $r11 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r12 = $r11.<android.view.DisplayInfo: java.lang.String name>;

        $r13.<android.view.DisplayInfo: java.lang.String name> = $r12;

        $r15 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        $r14 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i1 = $r14.<android.view.DisplayInfo: int state>;

        $r15.<android.view.DisplayInfo: int state> = $i1;

        goto label2;

     label1:
        $r6 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        $r5 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        virtualinvoke $r6.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>($r5);

     label2:
        $r2 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo>;

        return $r2;
    }

    public boolean setDisplayInfoOverrideFromWindowManagerLocked(android.view.DisplayInfo)
    {
        com.android.server.display.LogicalDisplay r0;
        android.view.DisplayInfo r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: android.view.DisplayInfo;

        if r1 == null goto label2;

        $r3 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        if $r3 != null goto label1;

        $r6 = new android.view.DisplayInfo;

        specialinvoke $r6.<android.view.DisplayInfo: void <init>(android.view.DisplayInfo)>(r1);

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo> = $r6;

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo> = null;

        return 1;

     label1:
        $r4 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $z0 = virtualinvoke $r4.<android.view.DisplayInfo: boolean equals(android.view.DisplayInfo)>(r1);

        if $z0 != 0 goto label3;

        $r5 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        virtualinvoke $r5.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>(r1);

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo> = null;

        return 1;

     label2:
        $r2 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        if $r2 == null goto label3;

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo> = null;

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo> = null;

        return 1;

     label3:
        return 0;
    }

    public boolean isValidLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayDevice $r1;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $r1 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void updateLocked(java.util.List)
    {
        com.android.server.display.LogicalDisplay r0;
        java.util.List r1;
        com.android.server.display.DisplayDeviceInfo r2, $r6;
        com.android.server.display.DisplayDevice $r3, $r4, $r5;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        android.view.DisplayInfo $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40;
        java.lang.String $r9, $r11, $r36;
        float[] $r19, $r21, $r22;
        float $f0, $f1, $f2;
        long $l16, $l17;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice> = null;

        return;

     label2:
        $r5 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        r2 = virtualinvoke $r5.<com.android.server.display.DisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>();

        $r6 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo>;

        $z1 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r6, r2);

        if $z1 != 0 goto label7;

        $r7 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mLayerStack>;

        $r7.<android.view.DisplayInfo: int layerStack> = $i0;

        $r8 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r8.<android.view.DisplayInfo: int flags> = 0;

        $i1 = r2.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label3;

        $r39 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i27 = $r39.<android.view.DisplayInfo: int flags>;

        $i28 = $i27 | 1;

        $r39.<android.view.DisplayInfo: int flags> = $i28;

     label3:
        $i3 = r2.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i5 = $i3 & 4;

        if $i5 == 0 goto label4;

        $r40 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i30 = $r40.<android.view.DisplayInfo: int flags>;

        $i31 = $i30 | 2;

        $r40.<android.view.DisplayInfo: int flags> = $i31;

     label4:
        $i4 = r2.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i7 = $i4 & 16;

        if $i7 == 0 goto label5;

        $r34 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i26 = $r34.<android.view.DisplayInfo: int flags>;

        $i29 = $i26 | 4;

        $r34.<android.view.DisplayInfo: int flags> = $i29;

     label5:
        $i6 = r2.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i9 = $i6 & 64;

        if $i9 == 0 goto label6;

        $r38 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i24 = $r38.<android.view.DisplayInfo: int flags>;

        $i25 = $i24 | 8;

        $r38.<android.view.DisplayInfo: int flags> = $i25;

     label6:
        $r10 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i8 = r2.<com.android.server.display.DisplayDeviceInfo: int type>;

        $r10.<android.view.DisplayInfo: int type> = $i8;

        $r12 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r9 = r2.<com.android.server.display.DisplayDeviceInfo: java.lang.String address>;

        $r12.<android.view.DisplayInfo: java.lang.String address> = $r9;

        $r13 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r11 = r2.<com.android.server.display.DisplayDeviceInfo: java.lang.String name>;

        $r13.<android.view.DisplayInfo: java.lang.String name> = $r11;

        $r14 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i10 = r2.<com.android.server.display.DisplayDeviceInfo: int width>;

        $r14.<android.view.DisplayInfo: int appWidth> = $i10;

        $r15 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i11 = r2.<com.android.server.display.DisplayDeviceInfo: int height>;

        $r15.<android.view.DisplayInfo: int appHeight> = $i11;

        $r18 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i12 = r2.<com.android.server.display.DisplayDeviceInfo: int width>;

        $r18.<android.view.DisplayInfo: int logicalWidth> = $i12;

        $r16 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i13 = r2.<com.android.server.display.DisplayDeviceInfo: int height>;

        $r16.<android.view.DisplayInfo: int logicalHeight> = $i13;

        $r17 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r17.<android.view.DisplayInfo: int rotation> = 0;

        $r20 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $f0 = r2.<com.android.server.display.DisplayDeviceInfo: float refreshRate>;

        $r20.<android.view.DisplayInfo: float refreshRate> = $f0;

        $r23 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r22 = r2.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates>;

        $r19 = r2.<com.android.server.display.DisplayDeviceInfo: float[] supportedRefreshRates>;

        $i14 = lengthof $r19;

        $r21 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r22, $i14);

        $r23.<android.view.DisplayInfo: float[] supportedRefreshRates> = $r21;

        $r25 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i15 = r2.<com.android.server.display.DisplayDeviceInfo: int densityDpi>;

        $r25.<android.view.DisplayInfo: int logicalDensityDpi> = $i15;

        $r24 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $f2 = r2.<com.android.server.display.DisplayDeviceInfo: float xDpi>;

        $r24.<android.view.DisplayInfo: float physicalXDpi> = $f2;

        $r27 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $f1 = r2.<com.android.server.display.DisplayDeviceInfo: float yDpi>;

        $r27.<android.view.DisplayInfo: float physicalYDpi> = $f1;

        $r26 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $l17 = r2.<com.android.server.display.DisplayDeviceInfo: long appVsyncOffsetNanos>;

        $r26.<android.view.DisplayInfo: long appVsyncOffsetNanos> = $l17;

        $r29 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $l16 = r2.<com.android.server.display.DisplayDeviceInfo: long presentationDeadlineNanos>;

        $r29.<android.view.DisplayInfo: long presentationDeadlineNanos> = $l16;

        $r28 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i19 = r2.<com.android.server.display.DisplayDeviceInfo: int state>;

        $r28.<android.view.DisplayInfo: int state> = $i19;

        $r31 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i18 = r2.<com.android.server.display.DisplayDeviceInfo: int width>;

        $r31.<android.view.DisplayInfo: int smallestNominalAppWidth> = $i18;

        $r30 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i21 = r2.<com.android.server.display.DisplayDeviceInfo: int height>;

        $r30.<android.view.DisplayInfo: int smallestNominalAppHeight> = $i21;

        $r33 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i20 = r2.<com.android.server.display.DisplayDeviceInfo: int width>;

        $r33.<android.view.DisplayInfo: int largestNominalAppWidth> = $i20;

        $r32 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i23 = r2.<com.android.server.display.DisplayDeviceInfo: int height>;

        $r32.<android.view.DisplayInfo: int largestNominalAppHeight> = $i23;

        $r35 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $i22 = r2.<com.android.server.display.DisplayDeviceInfo: int ownerUid>;

        $r35.<android.view.DisplayInfo: int ownerUid> = $i22;

        $r37 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r36 = r2.<com.android.server.display.DisplayDeviceInfo: java.lang.String ownerPackageName>;

        $r37.<android.view.DisplayInfo: java.lang.String ownerPackageName> = $r36;

        r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDeviceInfo mPrimaryDisplayDeviceInfo> = r2;

        r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mInfo> = null;

     label7:
        return;
    }

    public void configureDisplayInTransactionLocked(com.android.server.display.DisplayDevice, boolean)
    {
        com.android.server.display.LogicalDisplay r0;
        com.android.server.display.DisplayDevice r1;
        boolean z0, z1, $z2;
        android.view.DisplayInfo r2;
        com.android.server.display.DisplayDeviceInfo r3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30;
        float $f0;
        android.graphics.Rect $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: com.android.server.display.DisplayDevice;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo getDisplayInfoLocked()>();

        r3 = virtualinvoke r1.<com.android.server.display.DisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>();

        if z0 == 0 goto label01;

        $i7 = -1;

        goto label02;

     label01:
        $i7 = r0.<com.android.server.display.LogicalDisplay: int mLayerStack>;

     label02:
        virtualinvoke r1.<com.android.server.display.DisplayDevice: void setLayerStackInTransactionLocked(int)>($i7);

        $f0 = r0.<com.android.server.display.LogicalDisplay: float mRequestedRefreshRate>;

        virtualinvoke r1.<com.android.server.display.DisplayDevice: void requestRefreshRateLocked(float)>($f0);

        $r4 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempLayerStackRect>;

        $i9 = r2.<android.view.DisplayInfo: int logicalWidth>;

        $i8 = r2.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i9, $i8);

        i0 = 0;

        $i11 = r3.<com.android.server.display.DisplayDeviceInfo: int flags>;

        $i10 = $i11 & 2;

        if $i10 == 0 goto label03;

        i0 = r2.<android.view.DisplayInfo: int rotation>;

     label03:
        $i13 = r3.<com.android.server.display.DisplayDeviceInfo: int rotation>;

        $i12 = i0 + $i13;

        i30 = $i12 % 4;

        if i30 == 1 goto label04;

        if i30 != 3 goto label05;

     label04:
        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z1 = $z2;

        if z1 == 0 goto label07;

        $i27 = r3.<com.android.server.display.DisplayDeviceInfo: int height>;

        goto label08;

     label07:
        $i27 = r3.<com.android.server.display.DisplayDeviceInfo: int width>;

     label08:
        i1 = $i27;

        if z1 == 0 goto label09;

        $i29 = r3.<com.android.server.display.DisplayDeviceInfo: int width>;

        goto label10;

     label09:
        $i29 = r3.<com.android.server.display.DisplayDeviceInfo: int height>;

     label10:
        i2 = $i29;

        $i15 = r2.<android.view.DisplayInfo: int logicalHeight>;

        $i16 = i1 * $i15;

        $i14 = r2.<android.view.DisplayInfo: int logicalWidth>;

        $i17 = i2 * $i14;

        if $i16 >= $i17 goto label11;

        i3 = i1;

        $i25 = r2.<android.view.DisplayInfo: int logicalHeight>;

        $i28 = $i25 * i1;

        $i26 = r2.<android.view.DisplayInfo: int logicalWidth>;

        i4 = $i28 / $i26;

        goto label12;

     label11:
        $i19 = r2.<android.view.DisplayInfo: int logicalWidth>;

        $i21 = $i19 * i2;

        $i18 = r2.<android.view.DisplayInfo: int logicalHeight>;

        i3 = $i21 / $i18;

        i4 = i2;

     label12:
        $i20 = i2 - i4;

        i5 = $i20 / 2;

        $i23 = i1 - i3;

        i6 = $i23 / 2;

        $r5 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        $i22 = i6 + i3;

        $i24 = i5 + i4;

        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(i6, i5, $i22, $i24);

        $r7 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempLayerStackRect>;

        $r6 = r0.<com.android.server.display.LogicalDisplay: android.graphics.Rect mTempDisplayRect>;

        virtualinvoke r1.<com.android.server.display.DisplayDevice: void setProjectionInTransactionLocked(int,android.graphics.Rect,android.graphics.Rect)>(i30, $r7, $r6);

        return;
    }

    public boolean hasContentLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        boolean $z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $z0 = r0.<com.android.server.display.LogicalDisplay: boolean mHasContent>;

        return $z0;
    }

    public void setHasContentLocked(boolean)
    {
        com.android.server.display.LogicalDisplay r0;
        boolean z0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        z0 := @parameter0: boolean;

        r0.<com.android.server.display.LogicalDisplay: boolean mHasContent> = z0;

        return;
    }

    public void setRequestedRefreshRateLocked(float)
    {
        com.android.server.display.LogicalDisplay r0;
        float f0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        f0 := @parameter0: float;

        r0.<com.android.server.display.LogicalDisplay: float mRequestedRefreshRate> = f0;

        return;
    }

    public float getRequestedRefreshRateLocked()
    {
        com.android.server.display.LogicalDisplay r0;
        float $f0;

        r0 := @this: com.android.server.display.LogicalDisplay;

        $f0 = r0.<com.android.server.display.LogicalDisplay: float mRequestedRefreshRate>;

        return $f0;
    }

    public void dumpLocked(java.io.PrintWriter)
    {
        com.android.server.display.LogicalDisplay r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r26, $r28;
        int $i0, $i1;
        java.lang.String $r5, $r9, $r14, $r17, $r24, $r27, $r30;
        boolean $z0;
        com.android.server.display.DisplayDevice $r15, $r29;
        android.view.DisplayInfo $r22, $r25;

        r0 := @this: com.android.server.display.LogicalDisplay;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisplayId=");

        $i0 = r0.<com.android.server.display.LogicalDisplay: int mDisplayId>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLayerStack=");

        $i1 = r0.<com.android.server.display.LogicalDisplay: int mLayerStack>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHasContent=");

        $z0 = r0.<com.android.server.display.LogicalDisplay: boolean mHasContent>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPrimaryDisplayDevice=");

        $r15 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        if $r15 == null goto label1;

        $r29 = r0.<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice mPrimaryDisplayDevice>;

        $r30 = virtualinvoke $r29.<com.android.server.display.DisplayDevice: java.lang.String getNameLocked()>();

        goto label2;

     label1:
        $r30 = "null";

     label2:
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBaseDisplayInfo=");

        $r22 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mBaseDisplayInfo>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOverrideDisplayInfo=");

        $r25 = r0.<com.android.server.display.LogicalDisplay: android.view.DisplayInfo mOverrideDisplayInfo>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.LogicalDisplay: int BLANK_LAYER_STACK> = -1;

        return;
    }
}
