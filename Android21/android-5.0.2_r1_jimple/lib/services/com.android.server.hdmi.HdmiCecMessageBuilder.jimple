public class com.android.server.hdmi.HdmiCecMessageBuilder extends java.lang.Object
{
    private static final int OSD_NAME_MAX_LENGTH;

    private void <init>()
    {
        com.android.server.hdmi.HdmiCecMessageBuilder r0;

        r0 := @this: com.android.server.hdmi.HdmiCecMessageBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.android.server.hdmi.HdmiCecMessage of(int, int, byte[])
    {
        int i0, i1, $i3;
        byte[] r0, r1;
        byte b2;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        b2 = r0[0];

        $i3 = lengthof r0;

        r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r0, 1, $i3);

        $r2 = new com.android.server.hdmi.HdmiCecMessage;

        specialinvoke $r2.<com.android.server.hdmi.HdmiCecMessage: void <init>(int,int,int,byte[])>(i0, i1, b2, r1);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildFeatureAbortCommand(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i6;
        byte[] r0, $r1;
        byte $b5, $b7;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = newarray (byte)[2];

        $i4 = i2 & 255;

        $b5 = (byte) $i4;

        $r1[0] = $b5;

        $i6 = i3 & 255;

        $b7 = (byte) $i6;

        $r1[1] = $b7;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 0, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildGivePhysicalAddress(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 131);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildGiveOsdNameCommand(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 70);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildGiveDeviceVendorIdCommand(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 140);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSetMenuLanguageCommand(int, java.lang.String)
    {
        int i0, $i1;
        java.lang.String r0, r1;
        byte[] r2, $r3;
        char $c2, $c3, $c5, $c6, $c8, $c9;
        byte $b4, $b7, $b10;
        com.android.server.hdmi.HdmiCecMessage $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 == 3 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = newarray (byte)[3];

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $c3 = $c2 & 255;

        $b4 = (byte) $c3;

        $r3[0] = $b4;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        $c6 = $c5 & 255;

        $b7 = (byte) $c6;

        $r3[1] = $b7;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(2);

        $c8 = $c9 & 255;

        $b10 = (byte) $c8;

        $r3[2] = $b10;

        r2 = $r3;

        $r4 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 15, 50, r2);

        return $r4;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSetOsdNameCommand(int, int, java.lang.String)
    {
        int i0, i1, i2, $i3;
        java.lang.String r0, $r3;
        byte[] r1;
        com.android.server.hdmi.HdmiCecMessage $r4;
        java.io.UnsupportedEncodingException $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 13);

     label1:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        r1 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 71, r1);

        return $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    static com.android.server.hdmi.HdmiCecMessage buildReportPhysicalAddressCommand(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i6, $i8;
        byte[] r0, $r1;
        byte $b5, $b7, $b9;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = newarray (byte)[3];

        $i3 = i1 >> 8;

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        $r1[0] = $b5;

        $i6 = i1 & 255;

        $b7 = (byte) $i6;

        $r1[1] = $b7;

        $i8 = i2 & 255;

        $b9 = (byte) $i8;

        $r1[2] = $b9;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 15, 132, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildDeviceVendorIdCommand(int, int)
    {
        int i0, i1, $i2, $i3, $i5, $i6, $i8;
        byte[] r0, $r1;
        byte $b4, $b7, $b9;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = newarray (byte)[3];

        $i2 = i1 >> 16;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        $r1[0] = $b4;

        $i5 = i1 >> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        $r1[1] = $b7;

        $i8 = i1 & 255;

        $b9 = (byte) $i8;

        $r1[2] = $b9;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 15, 135, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildCecVersion(int, int, int)
    {
        int i0, i1, i2, $i3;
        byte[] r0, $r1;
        byte $b4;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = newarray (byte)[1];

        $i3 = i2 & 255;

        $b4 = (byte) $i3;

        $r1[0] = $b4;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 158, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildRequestArcInitiation(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 195);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildRequestArcTermination(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 196);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildReportArcInitiated(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 193);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildReportArcTerminated(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 194);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildTextViewOn(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 13);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildActiveSource(int, int)
    {
        int i0, i1;
        byte[] $r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: byte[] physicalAddressToParam(int)>(i1);

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 15, 130, $r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildInactiveSource(int, int)
    {
        int i0, i1;
        byte[] $r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: byte[] physicalAddressToParam(int)>(i1);

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 0, 157, $r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSetStreamPath(int, int)
    {
        int i0, i1;
        byte[] $r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: byte[] physicalAddressToParam(int)>(i1);

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 15, 134, $r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildRoutingChange(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i6, $i8, $i9, $i11;
        byte[] r0, $r1;
        byte $b5, $b7, $b10, $b12;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = newarray (byte)[4];

        $i3 = i1 >> 8;

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        $r1[0] = $b5;

        $i6 = i1 & 255;

        $b7 = (byte) $i6;

        $r1[1] = $b7;

        $i8 = i2 >> 8;

        $i9 = $i8 & 255;

        $b10 = (byte) $i9;

        $r1[2] = $b10;

        $i11 = i2 & 255;

        $b12 = (byte) $i11;

        $r1[3] = $b12;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, 15, 128, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildGiveDevicePowerStatus(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 143);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildReportPowerStatus(int, int, int)
    {
        int i0, i1, i2, $i3;
        byte[] r0, $r1;
        byte $b4;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = newarray (byte)[1];

        $i3 = i2 & 255;

        $b4 = (byte) $i3;

        $r1[0] = $b4;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 144, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildReportMenuStatus(int, int, int)
    {
        int i0, i1, i2, $i3;
        byte[] r0, $r1;
        byte $b4;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = newarray (byte)[1];

        $i3 = i2 & 255;

        $b4 = (byte) $i3;

        $r1[0] = $b4;

        r0 = $r1;

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 142, r0);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSystemAudioModeRequest(int, int, int, boolean)
    {
        int i0, i1, i2;
        boolean z0;
        com.android.server.hdmi.HdmiCecMessage $r0, $r2;
        byte[] $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: byte[] physicalAddressToParam(int)>(i2);

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 112, $r1);

        return $r2;

     label1:
        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 112);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildGiveAudioStatus(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 113);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildUserControlPressed(int, int, int)
    {
        int i0, i1, i2, $i3;
        byte[] $r0;
        byte $b4;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = newarray (byte)[1];

        $i3 = i2 & 255;

        $b4 = (byte) $i3;

        $r0[0] = $b4;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildUserControlPressed(int,int,byte[])>(i0, i1, $r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildUserControlPressed(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 68, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildUserControlReleased(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 69);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildGiveSystemAudioModeStatus(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 125);

        return $r0;
    }

    public static com.android.server.hdmi.HdmiCecMessage buildStandby(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 54);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildVendorCommand(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 137, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildVendorCommandWithId(int, int, int, byte[])
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i13;
        byte[] r0, r1;
        byte $b7, $b10, $b12;
        com.android.server.hdmi.HdmiCecMessage $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: byte[];

        $i3 = lengthof r0;

        $i4 = $i3 + 3;

        r1 = newarray (byte)[$i4];

        $i5 = i2 >> 16;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r1[0] = $b7;

        $i8 = i2 >> 8;

        $i9 = $i8 & 255;

        $b10 = (byte) $i9;

        r1[1] = $b10;

        $i11 = i2 & 255;

        $b12 = (byte) $i11;

        r1[2] = $b12;

        $i13 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 3, $i13);

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 160, r1);

        return $r2;
    }

    static com.android.server.hdmi.HdmiCecMessage buildRecordOn(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 9, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildRecordOff(int, int)
    {
        int i0, i1;
        com.android.server.hdmi.HdmiCecMessage $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int)>(i0, i1, 11);

        return $r0;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSetDigitalTimer(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 151, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSetAnalogueTimer(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 52, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildSetExternalTimer(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 162, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildClearDigitalTimer(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 153, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildClearAnalogueTimer(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 51, r0);

        return $r1;
    }

    static com.android.server.hdmi.HdmiCecMessage buildClearExternalTimer(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildCommand(int,int,int,byte[])>(i0, i1, 161, r0);

        return $r1;
    }

    private static com.android.server.hdmi.HdmiCecMessage buildCommand(int, int, int)
    {
        int i0, i1, i2;
        com.android.server.hdmi.HdmiCecMessage $r0;
        byte[] $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new com.android.server.hdmi.HdmiCecMessage;

        $r1 = <com.android.server.hdmi.HdmiCecMessage: byte[] EMPTY_PARAM>;

        specialinvoke $r0.<com.android.server.hdmi.HdmiCecMessage: void <init>(int,int,int,byte[])>(i0, i1, i2, $r1);

        return $r0;
    }

    private static com.android.server.hdmi.HdmiCecMessage buildCommand(int, int, int, byte[])
    {
        int i0, i1, i2;
        byte[] r0;
        com.android.server.hdmi.HdmiCecMessage $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: byte[];

        $r1 = new com.android.server.hdmi.HdmiCecMessage;

        specialinvoke $r1.<com.android.server.hdmi.HdmiCecMessage: void <init>(int,int,int,byte[])>(i0, i1, i2, r0);

        return $r1;
    }

    private static byte[] physicalAddressToParam(int)
    {
        int i0, $i1, $i2, $i4;
        byte[] $r0;
        byte $b3, $b5;

        i0 := @parameter0: int;

        $r0 = newarray (byte)[2];

        $i1 = i0 >> 8;

        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $r0[0] = $b3;

        $i4 = i0 & 255;

        $b5 = (byte) $i4;

        $r0[1] = $b5;

        return $r0;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.HdmiCecMessageBuilder: int OSD_NAME_MAX_LENGTH> = 13;

        return;
    }
}
