class com.android.server.pm.LauncherAppsService$LauncherAppsImpl extends android.content.pm.ILauncherApps$Stub
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.content.pm.PackageManager mPm;
    private final android.os.UserManager mUm;
    private final com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners;
    private com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor mPackageMonitor;
    final com.android.server.pm.LauncherAppsService this$0;

    public void <init>(com.android.server.pm.LauncherAppsService, android.content.Context)
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        com.android.server.pm.LauncherAppsService r1;
        android.content.Context r2, $r5, $r7;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList $r3;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor $r4;
        android.content.pm.PackageManager $r6;
        java.lang.Object $r8;
        android.os.UserManager $r9;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: com.android.server.pm.LauncherAppsService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService this$0> = r1;

        specialinvoke r0.<android.content.pm.ILauncherApps$Stub: void <init>()>();

        $r3 = new com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList;

        specialinvoke $r3.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: void <init>(com.android.server.pm.LauncherAppsService$LauncherAppsImpl)>(r0);

        r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners> = $r3;

        $r4 = new com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor;

        specialinvoke $r4.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void <init>(com.android.server.pm.LauncherAppsService$LauncherAppsImpl,com.android.server.pm.LauncherAppsService$1)>(r0, null);

        r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor mPackageMonitor> = $r4;

        r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.Context mContext> = r2;

        $r5 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.pm.PackageManager mPm> = $r6;

        $r7 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r9 = (android.os.UserManager) $r8;

        r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.os.UserManager mUm> = $r9;

        return;
    }

    public void addOnAppsChangedListener(android.content.pm.IOnAppsChangedListener) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.content.pm.IOnAppsChangedListener r1;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList r2, $r4, $r5, $r6, $r7;
        java.lang.Throwable r3, $r9;
        int $i0;
        android.os.UserHandle $r8;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.content.pm.IOnAppsChangedListener;

        $r4 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        $i0 = virtualinvoke $r5.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: int getRegisteredCallbackCount()>();

        if $i0 != 0 goto label2;

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startWatchingPackageBroadcasts()>();

     label2:
        $r6 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        virtualinvoke $r6.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: boolean unregister(android.os.IInterface)>(r1);

        $r7 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        $r8 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        virtualinvoke $r7.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: boolean register(android.os.IInterface,java.lang.Object)>(r1, $r8);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void removeOnAppsChangedListener(android.content.pm.IOnAppsChangedListener) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.content.pm.IOnAppsChangedListener r1;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        int $i0;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.content.pm.IOnAppsChangedListener;

        $r4 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        virtualinvoke $r5.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: boolean unregister(android.os.IInterface)>(r1);

        $r6 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        $i0 = virtualinvoke $r6.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: int getRegisteredCallbackCount()>();

        if $i0 != 0 goto label2;

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void stopWatchingPackageBroadcasts()>();

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void startWatchingPackageBroadcasts()
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.os.UserHandle $r1;
        android.content.Context $r2;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor $r3;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        $r3 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor mPackageMonitor>;

        $r2 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.Context mContext>;

        $r1 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r2, null, $r1, 1);

        return;
    }

    private void stopWatchingPackageBroadcasts()
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor $r1;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        $r1 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor mPackageMonitor>;

        virtualinvoke $r1.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void unregister()>();

        return;
    }

    void checkCallbackCount()
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        int $i0;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        $r3 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        $i0 = virtualinvoke $r4.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList: int getRegisteredCallbackCount()>();

        if $i0 != 0 goto label2;

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void stopWatchingPackageBroadcasts()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void ensureInUserProfiles(android.os.UserHandle, java.lang.String)
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.os.UserHandle r1;
        java.lang.String r2;
        int i0, i1, $i3, $i4, $i5;
        long l2;
        android.content.pm.UserInfo r3, r4;
        java.lang.Throwable r5, $r9;
        android.os.UserManager $r6, $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.os.UserHandle;

        r2 := @parameter1: java.lang.String;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        if i1 != i0 goto label1;

        return;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r6 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.os.UserManager mUm>;

        r3 = virtualinvoke $r6.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $r7 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.os.UserManager mUm>;

        r4 = virtualinvoke $r7.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i1);

        if r4 == null goto label3;

        $i4 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        if $i4 == -1 goto label3;

        $i5 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        $i3 = r3.<android.content.pm.UserInfo: int profileGroupId>;

        if $i5 == $i3 goto label4;

     label3:
        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label7;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean isUserEnabled(android.os.UserHandle)
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.os.UserHandle r1;
        long l0;
        android.content.pm.UserInfo r2;
        boolean z0, $z1, $z2;
        java.lang.Throwable r3, $r5;
        android.os.UserManager $r4;
        int $i1;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.os.UserHandle;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.os.UserManager mUm>;

        $i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        r2 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>($i1);

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getLauncherActivities(java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        java.lang.String r1, $r10;
        android.os.UserHandle r2;
        android.content.Intent r3, $r11;
        long l0;
        java.util.List r4, r5;
        java.lang.Throwable r6, $r15;
        java.lang.StringBuilder $r7, $r8, $r9;
        boolean $z0;
        android.content.pm.PackageManager $r14;
        int $i1;
        java.util.ArrayList $r16;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot retrieve activities for unrelated profile ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void ensureInUserProfiles(android.os.UserHandle,java.lang.String)>(r2, $r10);

        $z0 = specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean isUserEnabled(android.os.UserHandle)>(r2);

        if $z0 != 0 goto label1;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        return $r16;

     label1:
        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.MAIN", null);

        r3 = $r11;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r14 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.pm.PackageManager mPm>;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r4 = virtualinvoke $r14.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r3, 0, $i1);

        r5 = r4;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r5;

     label4:
        $r15 := @caughtexception;

        r6 = $r15;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.ResolveInfo resolveActivity(android.content.Intent, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.content.Intent r1;
        android.os.UserHandle r2;
        long l0;
        android.content.pm.ResolveInfo r3, r4;
        java.lang.Throwable r5, $r11;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        boolean $z0;
        android.content.pm.PackageManager $r10;
        int $i1;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.UserHandle;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot resolve activity for unrelated profile ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void ensureInUserProfiles(android.os.UserHandle,java.lang.String)>(r2, $r9);

        $z0 = specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean isUserEnabled(android.os.UserHandle)>(r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r10 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.pm.PackageManager mPm>;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r3 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r1, 0, $i1);

        r4 = r3;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r4;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isPackageEnabled(java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        java.lang.String r1, $r9;
        android.os.UserHandle r2;
        long l0;
        android.content.pm.IPackageManager r3;
        android.content.pm.PackageInfo r4;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r5, $r11;
        java.lang.StringBuilder $r6, $r7, $r8;
        int $i1;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot check package for unrelated profile ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void ensureInUserProfiles(android.os.UserHandle,java.lang.String)>(r2, $r9);

        $z1 = specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean isUserEnabled(android.os.UserHandle)>(r2);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r4 = interfaceinvoke r3.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, $i1);

        if r4 == null goto label3;

        $r10 = r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z3 = $r10.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z3 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isActivityEnabled(android.content.ComponentName, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.content.ComponentName r1;
        android.os.UserHandle r2;
        long l0;
        android.content.pm.IPackageManager r3;
        android.content.pm.ActivityInfo r4;
        boolean z0, $z1, $z2;
        java.lang.Throwable r5, $r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        int $i1;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.UserHandle;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot check component for unrelated profile ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void ensureInUserProfiles(android.os.UserHandle,java.lang.String)>(r2, $r9);

        $z1 = specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean isUserEnabled(android.os.UserHandle)>(r2);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r4 = interfaceinvoke r3.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r1, 0, $i1);

        if r4 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label6:
        $r10 := @caughtexception;

        r5 = $r10;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void startActivityAsUser(android.content.ComponentName, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.content.ComponentName r1;
        android.graphics.Rect r2;
        android.os.Bundle r3;
        android.os.UserHandle r4;
        android.content.Intent r5, $r16;
        long l0;
        android.content.pm.IPackageManager r6;
        android.content.pm.ActivityInfo r7, r9;
        java.util.List r8;
        int i1, i2, $i3, $i4;
        java.lang.Throwable r10, $r43;
        java.lang.StringBuilder $r11, $r12, $r13, $r21, $r22, $r24, $r36, $r37, $r38, $r39, $r40, $r41;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r14, $r17, $r26, $r27, $r29, $r30, $r31, $r35, $r44;
        android.content.pm.PackageManager $r20;
        java.lang.SecurityException $r23, $r32;
        android.content.pm.ResolveInfo $r25;
        java.lang.Object $r28;
        android.content.Context $r33;
        java.lang.IllegalStateException $r42;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.UserHandle;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot start activity for unrelated profile ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void ensureInUserProfiles(android.os.UserHandle,java.lang.String)>(r4, $r14);

        $z0 = specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean isUserEnabled(android.os.UserHandle)>(r4);

        if $z0 != 0 goto label1;

        $r42 = new java.lang.IllegalStateException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot start activity for disabled profile ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r44);

        throw $r42;

     label1:
        $r16 = new android.content.Intent;

        specialinvoke $r16.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r5 = $r16;

        virtualinvoke r5.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r5.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>(r2);

        virtualinvoke r5.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r17 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r17);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i3 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        r7 = interfaceinvoke r6.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r1, 0, $i3);

        $z1 = r7.<android.content.pm.ActivityInfo: boolean exported>;

        if $z1 != 0 goto label3;

        $r32 = new java.lang.SecurityException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot launch non-exported components ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.SecurityException: void <init>(java.lang.String)>($r35);

        throw $r32;

     label3:
        $r20 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.pm.PackageManager mPm>;

        $i4 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        r8 = virtualinvoke $r20.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r5, 0, $i4);

        i1 = interfaceinvoke r8.<java.util.List: int size()>();

        i2 = 0;

     label4:
        if i2 >= i1 goto label7;

        $r28 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i2);

        $r25 = (android.content.pm.ResolveInfo) $r28;

        r9 = $r25.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r26 = r9.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r31 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z2 == 0 goto label6;

        $r29 = r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r30 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z3 == 0 goto label6;

        virtualinvoke r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        $r33 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.Context mContext>;

        virtualinvoke $r33.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r5, r3, r4);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        $r23 = new java.lang.SecurityException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to launch activity without  category Intent.CATEGORY_LAUNCHER ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r27);

        throw $r23;

     label8:
        $r43 := @caughtexception;

        r10 = $r43;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r10;

        catch java.lang.Throwable from label2 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public void showAppDetailsAsUser(android.content.ComponentName, android.graphics.Rect, android.os.Bundle, android.os.UserHandle) throws android.os.RemoteException
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.content.ComponentName r1;
        android.graphics.Rect r2;
        android.os.Bundle r3;
        android.os.UserHandle r4;
        long l0;
        java.lang.String r5, $r11, $r21;
        android.content.Intent r6, $r12;
        java.lang.Throwable r7, $r20;
        java.lang.StringBuilder $r8, $r9, $r10, $r16, $r18, $r19;
        boolean $z0;
        android.net.Uri $r13;
        android.content.Context $r14;
        java.lang.IllegalStateException $r17;

        r0 := @this: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.UserHandle;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot show app details for unrelated profile ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void ensureInUserProfiles(android.os.UserHandle,java.lang.String)>(r4, $r11);

        $z0 = specialinvoke r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean isUserEnabled(android.os.UserHandle)>(r4);

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot show app details for disabled profile ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r12 = new android.content.Intent;

        $r13 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r5, null);

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.settings.APPLICATION_DETAILS_SETTINGS", $r13);

        r6 = $r12;

        virtualinvoke r6.<android.content.Intent: android.content.Intent setFlags(int)>(276856832);

        virtualinvoke r6.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>(r2);

        $r14 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.content.Context mContext>;

        virtualinvoke $r14.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r6, r3, r4);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r20 := @caughtexception;

        r7 = $r20;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r7;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static android.os.UserManager access$100(com.android.server.pm.LauncherAppsService$LauncherAppsImpl)
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        android.os.UserManager $r1;

        r0 := @parameter0: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        $r1 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.os.UserManager mUm>;

        return $r1;
    }

    static com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList access$200(com.android.server.pm.LauncherAppsService$LauncherAppsImpl)
    {
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl r0;
        com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList $r1;

        r0 := @parameter0: com.android.server.pm.LauncherAppsService$LauncherAppsImpl;

        $r1 = r0.<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList mListeners>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.LauncherAppsService$LauncherAppsImpl: java.lang.String TAG> = "LauncherAppsService";

        <com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean DEBUG> = 0;

        return;
    }
}
