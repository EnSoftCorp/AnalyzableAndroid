abstract class com.android.server.firewall.StringFilter extends java.lang.Object implements com.android.server.firewall.Filter
{
    private static final java.lang.String ATTR_EQUALS;
    private static final java.lang.String ATTR_STARTS_WITH;
    private static final java.lang.String ATTR_CONTAINS;
    private static final java.lang.String ATTR_PATTERN;
    private static final java.lang.String ATTR_REGEX;
    private static final java.lang.String ATTR_IS_NULL;
    private final com.android.server.firewall.StringFilter$ValueProvider mValueProvider;
    public static final com.android.server.firewall.StringFilter$ValueProvider COMPONENT;
    public static final com.android.server.firewall.StringFilter$ValueProvider COMPONENT_NAME;
    public static final com.android.server.firewall.StringFilter$ValueProvider COMPONENT_PACKAGE;
    public static final com.android.server.firewall.FilterFactory ACTION;
    public static final com.android.server.firewall.StringFilter$ValueProvider DATA;
    public static final com.android.server.firewall.StringFilter$ValueProvider MIME_TYPE;
    public static final com.android.server.firewall.StringFilter$ValueProvider SCHEME;
    public static final com.android.server.firewall.StringFilter$ValueProvider SSP;
    public static final com.android.server.firewall.StringFilter$ValueProvider HOST;
    public static final com.android.server.firewall.StringFilter$ValueProvider PATH;

    private void <init>(com.android.server.firewall.StringFilter$ValueProvider)
    {
        com.android.server.firewall.StringFilter r0;
        com.android.server.firewall.StringFilter$ValueProvider r1;

        r0 := @this: com.android.server.firewall.StringFilter;

        r1 := @parameter0: com.android.server.firewall.StringFilter$ValueProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider mValueProvider> = r1;

        return;
    }

    public static com.android.server.firewall.StringFilter readFromXml(com.android.server.firewall.StringFilter$ValueProvider, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.firewall.StringFilter$ValueProvider r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.server.firewall.StringFilter r2, r3;
        int i0, $i1;
        com.android.server.firewall.StringFilter$IsNullFilter $r4;
        org.xmlpull.v1.XmlPullParserException $r5;

        r0 := @parameter0: com.android.server.firewall.StringFilter$ValueProvider;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 = null;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label4;

        r3 = staticinvoke <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter getFilter(com.android.server.firewall.StringFilter$ValueProvider,org.xmlpull.v1.XmlPullParser,int)>(r0, r1, i0);

        if r3 == null goto label3;

        if r2 == null goto label2;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Multiple string filter attributes found");

        throw $r5;

     label2:
        r2 = r3;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        if r2 != null goto label5;

        $r4 = new com.android.server.firewall.StringFilter$IsNullFilter;

        specialinvoke $r4.<com.android.server.firewall.StringFilter$IsNullFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,boolean)>(r0, 0);

        r2 = $r4;

     label5:
        return r2;
    }

    private static com.android.server.firewall.StringFilter getFilter(com.android.server.firewall.StringFilter$ValueProvider, org.xmlpull.v1.XmlPullParser, int)
    {
        com.android.server.firewall.StringFilter$ValueProvider r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0;
        java.lang.String r2, $r4, $r6, $r8, $r9, $r12, $r13;
        char $c1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.firewall.StringFilter$EqualsFilter $r3;
        com.android.server.firewall.StringFilter$StartsWithFilter $r5;
        com.android.server.firewall.StringFilter$RegexFilter $r7;
        com.android.server.firewall.StringFilter$PatternStringFilter $r10;
        com.android.server.firewall.StringFilter$IsNullFilter $r11;
        com.android.server.firewall.StringFilter$ContainsFilter $r14;

        r0 := @parameter0: com.android.server.firewall.StringFilter$ValueProvider;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter2: int;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        tableswitch($c1)
        {
            case 99: goto label07;
            case 100: goto label13;
            case 101: goto label01;
            case 102: goto label13;
            case 103: goto label13;
            case 104: goto label13;
            case 105: goto label03;
            case 106: goto label13;
            case 107: goto label13;
            case 108: goto label13;
            case 109: goto label13;
            case 110: goto label13;
            case 111: goto label13;
            case 112: goto label09;
            case 113: goto label13;
            case 114: goto label11;
            case 115: goto label05;
            default: goto label13;
        };

     label01:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("equals");

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r3 = new com.android.server.firewall.StringFilter$EqualsFilter;

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        specialinvoke $r3.<com.android.server.firewall.StringFilter$EqualsFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>(r0, $r4);

        return $r3;

     label03:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("isNull");

        if $z4 != 0 goto label04;

        return null;

     label04:
        $r11 = new com.android.server.firewall.StringFilter$IsNullFilter;

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        specialinvoke $r11.<com.android.server.firewall.StringFilter$IsNullFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>(r0, $r12);

        return $r11;

     label05:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("startsWith");

        if $z1 != 0 goto label06;

        return null;

     label06:
        $r5 = new com.android.server.firewall.StringFilter$StartsWithFilter;

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        specialinvoke $r5.<com.android.server.firewall.StringFilter$StartsWithFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>(r0, $r6);

        return $r5;

     label07:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("contains");

        if $z5 != 0 goto label08;

        return null;

     label08:
        $r14 = new com.android.server.firewall.StringFilter$ContainsFilter;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        specialinvoke $r14.<com.android.server.firewall.StringFilter$ContainsFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>(r0, $r13);

        return $r14;

     label09:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pattern");

        if $z3 != 0 goto label10;

        return null;

     label10:
        $r10 = new com.android.server.firewall.StringFilter$PatternStringFilter;

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        specialinvoke $r10.<com.android.server.firewall.StringFilter$PatternStringFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>(r0, $r9);

        return $r10;

     label11:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("regex");

        if $z2 != 0 goto label12;

        return null;

     label12:
        $r7 = new com.android.server.firewall.StringFilter$RegexFilter;

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        specialinvoke $r7.<com.android.server.firewall.StringFilter$RegexFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>(r0, $r8);

        return $r7;

     label13:
        return null;
    }

    protected abstract boolean matchesValue(java.lang.String);

    public boolean matches(com.android.server.firewall.IntentFirewall, android.content.ComponentName, android.content.Intent, int, int, java.lang.String, int)
    {
        com.android.server.firewall.StringFilter r0;
        com.android.server.firewall.IntentFirewall r1;
        android.content.ComponentName r2;
        android.content.Intent r3;
        int i0, i1, i2;
        java.lang.String r4, r5;
        com.android.server.firewall.StringFilter$ValueProvider $r6;
        boolean $z0;

        r0 := @this: com.android.server.firewall.StringFilter;

        r1 := @parameter0: com.android.server.firewall.IntentFirewall;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: android.content.Intent;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        i2 := @parameter6: int;

        $r6 = r0.<com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider mValueProvider>;

        r5 = virtualinvoke $r6.<com.android.server.firewall.StringFilter$ValueProvider: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>(r2, r3, r4);

        $z0 = virtualinvoke r0.<com.android.server.firewall.StringFilter: boolean matchesValue(java.lang.String)>(r5);

        return $z0;
    }

    void <init>(com.android.server.firewall.StringFilter$ValueProvider, com.android.server.firewall.StringFilter$1)
    {
        com.android.server.firewall.StringFilter r0;
        com.android.server.firewall.StringFilter$ValueProvider r1;
        com.android.server.firewall.StringFilter$1 r2;

        r0 := @this: com.android.server.firewall.StringFilter;

        r1 := @parameter0: com.android.server.firewall.StringFilter$ValueProvider;

        r2 := @parameter1: com.android.server.firewall.StringFilter$1;

        specialinvoke r0.<com.android.server.firewall.StringFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.android.server.firewall.StringFilter$1 $r0;
        com.android.server.firewall.StringFilter$2 $r1;
        com.android.server.firewall.StringFilter$3 $r2;
        com.android.server.firewall.StringFilter$4 $r3;
        com.android.server.firewall.StringFilter$5 $r4;
        com.android.server.firewall.StringFilter$6 $r5;
        com.android.server.firewall.StringFilter$7 $r6;
        com.android.server.firewall.StringFilter$8 $r7;
        com.android.server.firewall.StringFilter$9 $r8;
        com.android.server.firewall.StringFilter$10 $r9;

        <com.android.server.firewall.StringFilter: java.lang.String ATTR_IS_NULL> = "isNull";

        <com.android.server.firewall.StringFilter: java.lang.String ATTR_REGEX> = "regex";

        <com.android.server.firewall.StringFilter: java.lang.String ATTR_PATTERN> = "pattern";

        <com.android.server.firewall.StringFilter: java.lang.String ATTR_CONTAINS> = "contains";

        <com.android.server.firewall.StringFilter: java.lang.String ATTR_STARTS_WITH> = "startsWith";

        <com.android.server.firewall.StringFilter: java.lang.String ATTR_EQUALS> = "equals";

        $r0 = new com.android.server.firewall.StringFilter$1;

        specialinvoke $r0.<com.android.server.firewall.StringFilter$1: void <init>(java.lang.String)>("component");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider COMPONENT> = $r0;

        $r1 = new com.android.server.firewall.StringFilter$2;

        specialinvoke $r1.<com.android.server.firewall.StringFilter$2: void <init>(java.lang.String)>("component-name");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider COMPONENT_NAME> = $r1;

        $r2 = new com.android.server.firewall.StringFilter$3;

        specialinvoke $r2.<com.android.server.firewall.StringFilter$3: void <init>(java.lang.String)>("component-package");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider COMPONENT_PACKAGE> = $r2;

        $r3 = new com.android.server.firewall.StringFilter$4;

        specialinvoke $r3.<com.android.server.firewall.StringFilter$4: void <init>(java.lang.String)>("action");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.FilterFactory ACTION> = $r3;

        $r4 = new com.android.server.firewall.StringFilter$5;

        specialinvoke $r4.<com.android.server.firewall.StringFilter$5: void <init>(java.lang.String)>("data");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider DATA> = $r4;

        $r5 = new com.android.server.firewall.StringFilter$6;

        specialinvoke $r5.<com.android.server.firewall.StringFilter$6: void <init>(java.lang.String)>("mime-type");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider MIME_TYPE> = $r5;

        $r6 = new com.android.server.firewall.StringFilter$7;

        specialinvoke $r6.<com.android.server.firewall.StringFilter$7: void <init>(java.lang.String)>("scheme");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider SCHEME> = $r6;

        $r7 = new com.android.server.firewall.StringFilter$8;

        specialinvoke $r7.<com.android.server.firewall.StringFilter$8: void <init>(java.lang.String)>("scheme-specific-part");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider SSP> = $r7;

        $r8 = new com.android.server.firewall.StringFilter$9;

        specialinvoke $r8.<com.android.server.firewall.StringFilter$9: void <init>(java.lang.String)>("host");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider HOST> = $r8;

        $r9 = new com.android.server.firewall.StringFilter$10;

        specialinvoke $r9.<com.android.server.firewall.StringFilter$10: void <init>(java.lang.String)>("path");

        <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider PATH> = $r9;

        return;
    }
}
