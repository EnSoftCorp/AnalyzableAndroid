final class com.android.server.wm.Session extends android.view.IWindowSession$Stub implements android.os.IBinder$DeathRecipient
{
    final com.android.server.wm.WindowManagerService mService;
    final android.view.IWindowSessionCallback mCallback;
    final com.android.internal.view.IInputMethodClient mClient;
    final com.android.internal.view.IInputContext mInputContext;
    final int mUid;
    final int mPid;
    final java.lang.String mStringName;
    android.view.SurfaceSession mSurfaceSession;
    int mNumWindow;
    boolean mClientDead;
    float mLastReportedAnimatorScale;

    public void <init>(com.android.server.wm.WindowManagerService, android.view.IWindowSessionCallback, com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext)
    {
        com.android.server.wm.Session r0;
        com.android.server.wm.WindowManagerService r1, $r23, $r25, $r26, $r28, $r31, $r35, $r36, $r41;
        android.view.IWindowSessionCallback r2;
        com.android.internal.view.IInputMethodClient r3;
        com.android.internal.view.IInputContext r4;
        java.lang.StringBuilder r5, $r11;
        java.util.HashMap r6, $r22;
        android.os.IBinder r7, $r30;
        java.lang.Throwable r8, r10, $r39, $r43;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float $f0;
        java.lang.String $r13, $r24;
        com.android.internal.view.IInputMethodManager $r27, $r29, $r32, $r34, $r40, $r42;
        boolean $z0;
        android.os.RemoteException $r37, $r44;
        long l12;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.view.IWindowSessionCallback;

        r3 := @parameter2: com.android.internal.view.IInputMethodClient;

        r4 := @parameter3: com.android.internal.view.IInputContext;

        specialinvoke r0.<android.view.IWindowSession$Stub: void <init>()>();

        r0.<com.android.server.wm.Session: int mNumWindow> = 0;

        r0.<com.android.server.wm.Session: boolean mClientDead> = 0;

        r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.Session: android.view.IWindowSessionCallback mCallback> = r2;

        r0.<com.android.server.wm.Session: com.android.internal.view.IInputMethodClient mClient> = r3;

        r0.<com.android.server.wm.Session: com.android.internal.view.IInputContext mInputContext> = r4;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r0.<com.android.server.wm.Session: int mUid> = $i0;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r0.<com.android.server.wm.Session: int mPid> = $i1;

        $f0 = virtualinvoke r1.<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>();

        r0.<com.android.server.wm.Session: float mLastReportedAnimatorScale> = $f0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        r5 = $r11;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session{");

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i3 = r0.<com.android.server.wm.Session: int mPid>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $i4 = r0.<com.android.server.wm.Session: int mUid>;

        if $i4 >= 10000 goto label01;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i11 = r0.<com.android.server.wm.Session: int mUid>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        goto label02;

     label01:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":u");

        $i6 = r0.<com.android.server.wm.Session: int mUid>;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i6);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(97);

        $i8 = r0.<com.android.server.wm.Session: int mUid>;

        $i7 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i8);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

     label02:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r24 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wm.Session: java.lang.String mStringName> = $r24;

        $r25 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r22 = $r25.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r6 = $r22;

        entermonitor $r22;

     label03:
        $r23 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r27 = $r23.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r27 != null goto label04;

        $r31 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $z0 = $r31.<com.android.server.wm.WindowManagerService: boolean mHaveInputMethods>;

        if $z0 == 0 goto label04;

        r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("input_method");

        $r35 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r34 = staticinvoke <com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>(r7);

        $r35.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager> = $r34;

     label04:
        exitmonitor r6;

     label05:
        goto label08;

     label06:
        $r39 := @caughtexception;

        r8 = $r39;

        exitmonitor r6;

     label07:
        throw r8;

     label08:
        l12 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        $r26 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r29 = $r26.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r29 == null goto label10;

        $r28 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r32 = $r28.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        $i10 = r0.<com.android.server.wm.Session: int mUid>;

        $i9 = r0.<com.android.server.wm.Session: int mPid>;

        interfaceinvoke $r32.<com.android.internal.view.IInputMethodManager: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>(r3, r4, $i10, $i9);

        goto label11;

     label10:
        interfaceinvoke r3.<com.android.internal.view.IInputMethodClient: void setUsingInputMethod(boolean)>(0);

     label11:
        $r30 = interfaceinvoke r3.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r30.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        goto label20;

     label13:
        $r37 := @caughtexception;

     label14:
        $r36 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r42 = $r36.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r42 == null goto label15;

        $r41 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r40 = $r41.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        interfaceinvoke $r40.<com.android.internal.view.IInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>(r3);

     label15:
        goto label17;

     label16:
        $r44 := @caughtexception;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        goto label20;

     label18:
        $r43 := @caughtexception;

        r10 = $r43;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l12);

        throw r10;

     label20:
        return;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label09 to label12 with label13;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label09 to label12 with label18;
        catch java.lang.Throwable from label13 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.wm.Session r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.Session;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke r0.<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Window Session Crash", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void binderDied()
    {
        com.android.server.wm.Session r0;
        java.lang.Throwable r2, $r12;
        com.android.server.wm.WindowManagerService $r3, $r5, $r9;
        com.android.internal.view.IInputMethodManager $r4, $r11;
        java.util.HashMap $r6, r14;
        com.android.internal.view.IInputMethodClient $r7, $r10;
        android.os.IBinder $r8;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.wm.Session;

     label1:
        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r4 == null goto label2;

        $r9 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r11 = $r9.<com.android.server.wm.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        $r10 = r0.<com.android.server.wm.Session: com.android.internal.view.IInputMethodClient mClient>;

        interfaceinvoke $r11.<com.android.internal.view.IInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>($r10);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r14 = $r6;

        entermonitor $r6;

     label5:
        $r7 = r0.<com.android.server.wm.Session: com.android.internal.view.IInputMethodClient mClient>;

        $r8 = interfaceinvoke $r7.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r8.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.wm.Session: boolean mClientDead> = 1;

        virtualinvoke r0.<com.android.server.wm.Session: void killSessionLocked()>();

        exitmonitor r14;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r14;

     label8:
        throw r2;

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int add(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect, android.view.InputChannel)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0, i1, $i2;
        android.view.WindowManager$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.InputChannel r4;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowManager$LayoutParams;

        i1 := @parameter3: int;

        r3 := @parameter4: android.graphics.Rect;

        r4 := @parameter5: android.view.InputChannel;

        $i2 = virtualinvoke r0.<com.android.server.wm.Session: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>(r1, i0, r2, i1, 0, r3, r4);

        return $i2;
    }

    public int addToDisplay(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, int, android.graphics.Rect, android.view.InputChannel)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0, i1, i2, $i3;
        android.view.WindowManager$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.InputChannel r4;
        com.android.server.wm.WindowManagerService $r5;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowManager$LayoutParams;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.graphics.Rect;

        r4 := @parameter6: android.view.InputChannel;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $i3 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>(r0, r1, i0, r2, i1, i2, r3, r4);

        return $i3;
    }

    public int addWithoutInputChannel(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0, i1, $i2;
        android.view.WindowManager$LayoutParams r2;
        android.graphics.Rect r3;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowManager$LayoutParams;

        i1 := @parameter3: int;

        r3 := @parameter4: android.graphics.Rect;

        $i2 = virtualinvoke r0.<com.android.server.wm.Session: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect)>(r1, i0, r2, i1, 0, r3);

        return $i2;
    }

    public int addToDisplayWithoutInputChannel(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, int, android.graphics.Rect)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0, i1, i2, $i3;
        android.view.WindowManager$LayoutParams r2;
        android.graphics.Rect r3;
        com.android.server.wm.WindowManagerService $r4;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowManager$LayoutParams;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.graphics.Rect;

        $r4 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $i3 = virtualinvoke $r4.<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>(r0, r1, i0, r2, i1, i2, r3, null);

        return $i3;
    }

    public void remove(android.view.IWindow)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void removeWindow(com.android.server.wm.Session,android.view.IWindow)>(r0, r1);

        return;
    }

    public int relayout(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, int, int, int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.content.res.Configuration, android.view.Surface)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0, i1, i2, i3, i4, i5;
        android.view.WindowManager$LayoutParams r2;
        android.graphics.Rect r3, r4, r5, r6, r7;
        android.content.res.Configuration r8;
        android.view.Surface r9;
        com.android.server.wm.WindowManagerService $r10;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowManager$LayoutParams;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        r3 := @parameter7: android.graphics.Rect;

        r4 := @parameter8: android.graphics.Rect;

        r5 := @parameter9: android.graphics.Rect;

        r6 := @parameter10: android.graphics.Rect;

        r7 := @parameter11: android.graphics.Rect;

        r8 := @parameter12: android.content.res.Configuration;

        r9 := @parameter13: android.view.Surface;

        $r10 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        i5 = virtualinvoke $r10.<com.android.server.wm.WindowManagerService: int relayoutWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>(r0, r1, i0, r2, i1, i2, i3, i4, r3, r4, r5, r6, r7, r8, r9);

        return i5;
    }

    public void performDeferredDestroy(android.view.IWindow)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void performDeferredDestroyWindow(com.android.server.wm.Session,android.view.IWindow)>(r0, r1);

        return;
    }

    public boolean outOfMemory(android.view.IWindow)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        com.android.server.wm.WindowManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: boolean outOfMemoryWindow(com.android.server.wm.Session,android.view.IWindow)>(r0, r1);

        return $z0;
    }

    public void setTransparentRegion(android.view.IWindow, android.graphics.Region)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        android.graphics.Region r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        r2 := @parameter1: android.graphics.Region;

        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void setTransparentRegionWindow(com.android.server.wm.Session,android.view.IWindow,android.graphics.Region)>(r0, r1, r2);

        return;
    }

    public void setInsets(android.view.IWindow, int, android.graphics.Rect, android.graphics.Rect, android.graphics.Region)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0;
        android.graphics.Rect r2, r3;
        android.graphics.Region r4;
        com.android.server.wm.WindowManagerService $r5;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        r4 := @parameter4: android.graphics.Region;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void setInsetsWindow(com.android.server.wm.Session,android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>(r0, r1, i0, r2, r3, r4);

        return;
    }

    public void getDisplayFrame(android.view.IWindow, android.graphics.Rect)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        android.graphics.Rect r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        r2 := @parameter1: android.graphics.Rect;

        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void getWindowDisplayFrame(com.android.server.wm.Session,android.view.IWindow,android.graphics.Rect)>(r0, r1, r2);

        return;
    }

    public void finishDrawing(android.view.IWindow)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void finishDrawingWindow(com.android.server.wm.Session,android.view.IWindow)>(r0, r1);

        return;
    }

    public void setInTouchMode(boolean)
    {
        com.android.server.wm.Session r0;
        boolean z0;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r6;
        com.android.server.wm.WindowManagerService $r3, $r5;

        r0 := @this: com.android.server.wm.Session;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r5.<com.android.server.wm.WindowManagerService: boolean mInTouchMode> = z0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getInTouchMode()
    {
        com.android.server.wm.Session r0;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r6;
        com.android.server.wm.WindowManagerService $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.Session;

        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $z0 = $r5.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean performHapticFeedback(android.view.IWindow, int, boolean)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0;
        boolean z0, z1;
        java.util.HashMap r2, $r6;
        long l1;
        java.lang.Throwable r3, r4, $r11, $r12;
        com.android.server.wm.WindowManagerService $r5, $r7, $r8;
        android.view.WindowManagerPolicy $r9;
        com.android.server.wm.WindowState $r10;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r7 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r7.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r8 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r10 = virtualinvoke $r8.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>(r0, r1, 1);

        z1 = interfaceinvoke $r9.<android.view.WindowManagerPolicy: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>($r10, i0, z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r2;

     label4:
        return z1;

     label5:
        $r12 := @caughtexception;

        r3 = $r12;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label8:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public android.os.IBinder prepareDrag(android.view.IWindow, int, int, int, android.view.Surface)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        int i0, i1, i2;
        android.view.Surface r2;
        android.view.SurfaceSession $r3;
        com.android.server.wm.WindowManagerService $r4;
        android.os.IBinder $r5;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.Surface;

        $r4 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r3 = r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowManagerService: android.os.IBinder prepareDragSurface(android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface)>(r1, $r3, i0, i1, i2, r2);

        return $r5;
    }

    public boolean performDrag(android.view.IWindow, android.os.IBinder, float, float, float, float, android.content.ClipData)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        android.os.IBinder r2, $r16, $r21;
        float f0, f1, f2, f3, $f4, $f5;
        android.content.ClipData r3;
        java.util.HashMap r4, $r13;
        com.android.server.wm.WindowState r5;
        com.android.server.wm.DisplayContent r6;
        android.view.Display r7;
        android.view.SurfaceControl r8;
        java.lang.Throwable r9, r10, $r58, $r60;
        com.android.server.wm.WindowManagerService $r11, $r12, $r14, $r18, $r20, $r23, $r24, $r25, $r26, $r33, $r34, $r36, $r38, $r39, $r41, $r44, $r47, $r48, $r51, $r52;
        com.android.server.wm.DragState $r15, $r17, $r22, $r30, $r32, $r35, $r37, $r40, $r42, $r43, $r45, $r46, $r50;
        com.android.server.wm.WindowManagerService$H $r19;
        com.android.server.wm.InputMonitor $r27, $r53;
        android.view.InputChannel $r28, $r31;
        com.android.server.input.InputManagerService $r29;
        boolean $z0;
        int $i0, $i2;
        java.lang.StringBuilder $r49, $r55, $r56;
        java.lang.IllegalStateException $r54, $r59;
        java.lang.String $r57;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        r2 := @parameter1: android.os.IBinder;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        r3 := @parameter6: android.content.ClipData;

        $r11 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r13 = $r11.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r4 = $r13;

        entermonitor $r13;

     label01:
        $r12 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r15 = $r12.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        if $r15 != null goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "No drag prepared");

        $r59 = new java.lang.IllegalStateException;

        specialinvoke $r59.<java.lang.IllegalStateException: void <init>(java.lang.String)>("performDrag() without prepareDrag()");

        throw $r59;

     label02:
        $r14 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r17 = $r14.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r16 = $r17.<com.android.server.wm.DragState: android.os.IBinder mToken>;

        if r2 == $r16 goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "Performing mismatched drag");

        $r54 = new java.lang.IllegalStateException;

        specialinvoke $r54.<java.lang.IllegalStateException: void <init>(java.lang.String)>("performDrag() does not match prepareDrag()");

        throw $r54;

     label03:
        $r18 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        r5 = virtualinvoke $r18.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>(null, r1, 0);

        if r5 != null goto label05;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad requesting window ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r57);

        exitmonitor r4;

     label04:
        return 0;

     label05:
        $r20 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r19 = $r20.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r21 = interfaceinvoke r1.<android.view.IWindow: android.os.IBinder asBinder()>();

        virtualinvoke $r19.<com.android.server.wm.WindowManagerService$H: void removeMessages(int,java.lang.Object)>(20, $r21);

        r6 = virtualinvoke r5.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r6 != null goto label07;

        exitmonitor r4;

     label06:
        return 0;

     label07:
        r7 = virtualinvoke r6.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        $r23 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r22 = $r23.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r22.<com.android.server.wm.DragState: void register(android.view.Display)>(r7);

        $r26 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r27 = $r26.<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r27.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        $r24 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r29 = $r24.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r28 = r5.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        $r25 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r30 = $r25.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r31 = $r30.<com.android.server.wm.DragState: android.view.InputChannel mServerChannel>;

        $z0 = virtualinvoke $r29.<com.android.server.input.InputManagerService: boolean transferTouchFocus(android.view.InputChannel,android.view.InputChannel)>($r28, $r31);

        if $z0 != 0 goto label09;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "Unable to transfer touch focus");

        $r48 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r50 = $r48.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r50.<com.android.server.wm.DragState: void unregister()>();

        $r51 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r51.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState> = null;

        $r52 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r53 = $r52.<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r53.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        exitmonitor r4;

     label08:
        return 0;

     label09:
        $r34 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r32 = $r34.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r32.<com.android.server.wm.DragState: android.content.ClipData mData> = r3;

        $r33 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r37 = $r33.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r37.<com.android.server.wm.DragState: float mCurrentX> = f0;

        $r38 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r35 = $r38.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r35.<com.android.server.wm.DragState: float mCurrentY> = f1;

        $r36 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r42 = $r36.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r42.<com.android.server.wm.DragState: void broadcastDragStartedLw(float,float)>(f0, f1);

        $r41 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r40 = $r41.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r40.<com.android.server.wm.DragState: float mThumbOffsetX> = f2;

        $r39 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r45 = $r39.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r45.<com.android.server.wm.DragState: float mThumbOffsetY> = f3;

        $r44 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r43 = $r44.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        r8 = $r43.<com.android.server.wm.DragState: android.view.SurfaceControl mSurfaceControl>;

        staticinvoke <android.view.SurfaceControl: void openTransaction()>();

     label10:
        $f5 = f0 - f2;

        $f4 = f1 - f3;

        virtualinvoke r8.<android.view.SurfaceControl: void setPosition(float,float)>($f5, $f4);

        virtualinvoke r8.<android.view.SurfaceControl: void setAlpha(float)>(0.7071F);

        $r47 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r46 = $r47.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $i0 = virtualinvoke $r46.<com.android.server.wm.DragState: int getDragLayerLw()>();

        virtualinvoke r8.<android.view.SurfaceControl: void setLayer(int)>($i0);

        $i2 = virtualinvoke r7.<android.view.Display: int getLayerStack()>();

        virtualinvoke r8.<android.view.SurfaceControl: void setLayerStack(int)>($i2);

        virtualinvoke r8.<android.view.SurfaceControl: void show()>();

     label11:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        goto label14;

     label12:
        $r60 := @caughtexception;

        r9 = $r60;

     label13:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        throw r9;

     label14:
        exitmonitor r4;

     label15:
        goto label18;

     label16:
        $r58 := @caughtexception;

        r10 = $r58;

        exitmonitor r4;

     label17:
        throw r10;

     label18:
        return 1;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label01 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public void reportDropResult(android.view.IWindow, boolean)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;
        boolean z0;
        android.os.IBinder r2, $r14, $r17;
        java.util.HashMap r3, $r8;
        long l0;
        com.android.server.wm.WindowState r4;
        java.lang.Throwable r5, r6, $r31, $r32;
        com.android.server.wm.WindowManagerService $r7, $r9, $r12, $r13, $r16, $r18, $r19;
        com.android.server.wm.DragState $r10, $r11, $r20, $r21;
        com.android.server.wm.WindowManagerService$H $r15;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r27, $r29;
        java.lang.String $r23, $r30;
        java.lang.IllegalStateException $r28;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        z0 := @parameter1: boolean;

        r2 = interfaceinvoke r1.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r7 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r3 = $r8;

        entermonitor $r8;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r9 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        if $r10 != null goto label05;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "Drop result given but no drag in progress");

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r3;

     label04:
        return;

     label05:
        $r12 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r11 = $r12.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r14 = $r11.<com.android.server.wm.DragState: android.os.IBinder mToken>;

        if $r14 == r2 goto label06;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid drop-result claim by ");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r30);

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reportDropResult() by non-recipient");

        throw $r28;

     label06:
        $r13 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r15 = $r13.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r17 = interfaceinvoke r1.<android.view.IWindow: android.os.IBinder asBinder()>();

        virtualinvoke $r15.<com.android.server.wm.WindowManagerService$H: void removeMessages(int,java.lang.Object)>(21, $r17);

        $r16 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        r4 = virtualinvoke $r16.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>(null, r1, 0);

        if r4 != null goto label09;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad result-reporting window ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r23);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r3;

     label08:
        return;

     label09:
        $r18 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r20 = $r18.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r20.<com.android.server.wm.DragState: boolean mDragResult> = z0;

        $r19 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r21 = $r19.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r21.<com.android.server.wm.DragState: void endDragLw()>();

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label13;

     label11:
        $r31 := @caughtexception;

        r5 = $r31;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label13:
        exitmonitor r3;

     label14:
        goto label17;

     label15:
        $r32 := @caughtexception;

        r6 = $r32;

        exitmonitor r3;

     label16:
        throw r6;

     label17:
        return;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label05 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label04 with label15;
        catch java.lang.Throwable from label05 to label08 with label15;
        catch java.lang.Throwable from label09 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void dragRecipientEntered(android.view.IWindow)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        return;
    }

    public void dragRecipientExited(android.view.IWindow)
    {
        com.android.server.wm.Session r0;
        android.view.IWindow r1;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.view.IWindow;

        return;
    }

    public void setWallpaperPosition(android.os.IBinder, float, float, float, float)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        float f0, f1, f2, f3;
        java.util.HashMap r2, $r6;
        long l0;
        java.lang.Throwable r3, r4, $r10, $r11;
        com.android.server.wm.WindowManagerService $r5, $r7, $r8;
        com.android.server.wm.WindowState $r9;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r8 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r7 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r9 = virtualinvoke $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.os.IBinder,boolean)>(r0, r1, 1);

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.wm.WindowState,float,float,float,float)>($r9, f0, f1, f2, f3);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label06;

     label04:
        $r11 := @caughtexception;

        r3 = $r11;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void wallpaperOffsetsComplete(android.os.IBinder)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void wallpaperOffsetsComplete(android.os.IBinder)>(r1);

        return;
    }

    public void setWallpaperDisplayOffset(android.os.IBinder, int, int)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        int i0, i1;
        java.util.HashMap r2, $r6;
        long l2;
        java.lang.Throwable r3, r4, $r10, $r11;
        com.android.server.wm.WindowManagerService $r5, $r7, $r8;
        com.android.server.wm.WindowState $r9;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r8 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r7 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r9 = virtualinvoke $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.os.IBinder,boolean)>(r0, r1, 1);

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void setWindowWallpaperDisplayOffsetLocked(com.android.server.wm.WindowState,int,int)>($r9, i0, i1);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label06;

     label04:
        $r11 := @caughtexception;

        r3 = $r11;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r3;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.os.Bundle sendWallpaperCommand(android.os.IBinder, java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0, i1, i2;
        android.os.Bundle r3, r5;
        boolean z0;
        java.util.HashMap r4, $r9;
        long l3;
        java.lang.Throwable r6, r7, $r13, $r14;
        com.android.server.wm.WindowManagerService $r8, $r10, $r12;
        com.android.server.wm.WindowState $r11;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.Bundle;

        z0 := @parameter6: boolean;

        $r8 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r8.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r4 = $r9;

        entermonitor $r9;

     label1:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r12 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r10 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.os.IBinder,boolean)>(r0, r1, 1);

        r5 = virtualinvoke $r12.<com.android.server.wm.WindowManagerService: android.os.Bundle sendWindowWallpaperCommandLocked(com.android.server.wm.WindowState,java.lang.String,int,int,int,android.os.Bundle,boolean)>($r11, r2, i0, i1, i2, r3, z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r4;

     label4:
        return r5;

     label5:
        $r14 := @caughtexception;

        r6 = $r14;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r6;

     label7:
        $r13 := @caughtexception;

        r7 = $r13;

        exitmonitor r4;

     label8:
        throw r7;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public void wallpaperCommandComplete(android.os.IBinder, android.os.Bundle)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        android.os.Bundle r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>(r1, r2);

        return;
    }

    public void setUniverseTransform(android.os.IBinder, float, float, float, float, float, float, float)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        float f0, f1, f2, f3, f4, f5, f6;
        java.util.HashMap r2, $r6;
        long l0;
        java.lang.Throwable r3, r4, $r10, $r11;
        com.android.server.wm.WindowManagerService $r5, $r7, $r9;
        com.android.server.wm.WindowState $r8;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        f6 := @parameter7: float;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r9 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r7 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.os.IBinder,boolean)>(r0, r1, 1);

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void setUniverseTransformLocked(com.android.server.wm.WindowState,float,float,float,float,float,float,float)>($r8, f0, f1, f2, f3, f4, f5, f6);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label06;

     label04:
        $r11 := @caughtexception;

        r3 = $r11;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onRectangleOnScreenRequested(android.os.IBinder, android.graphics.Rect)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        android.graphics.Rect r2;
        java.util.HashMap r3, $r7;
        long l0;
        java.lang.Throwable r4, r5, $r9, $r10;
        com.android.server.wm.WindowManagerService $r6, $r8;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.graphics.Rect;

        $r6 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r7 = $r6.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r8 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>(r1, r2);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label06;

     label04:
        $r9 := @caughtexception;

        r4 = $r9;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r3;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.view.IWindowId getWindowId(android.os.IBinder)
    {
        com.android.server.wm.Session r0;
        android.os.IBinder r1;
        com.android.server.wm.WindowManagerService $r2;
        android.view.IWindowId $r3;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: android.view.IWindowId getWindowId(android.os.IBinder)>(r1);

        return $r3;
    }

    void windowAddedLocked()
    {
        com.android.server.wm.Session r0;
        android.view.SurfaceSession $r1, $r2;
        int $i0, $i1;
        com.android.server.wm.WindowManagerService $r3, $r5, $r6;
        android.util.ArraySet $r4;
        float $f0, $f1;
        byte $b2;

        r0 := @this: com.android.server.wm.Session;

        $r1 = r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        if $r1 != null goto label1;

        $r2 = new android.view.SurfaceSession;

        specialinvoke $r2.<android.view.SurfaceSession: void <init>()>();

        r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession> = $r2;

        $r3 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: android.util.ArraySet mSessions>;

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>(r0);

        $f0 = r0.<com.android.server.wm.Session: float mLastReportedAnimatorScale>;

        $r5 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $f1 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>();

        $b2 = $f0 cmpl $f1;

        if $b2 == 0 goto label1;

        $r6 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void dispatchNewAnimatorScaleLocked(com.android.server.wm.Session)>(r0);

     label1:
        $i0 = r0.<com.android.server.wm.Session: int mNumWindow>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wm.Session: int mNumWindow> = $i1;

        return;
    }

    void windowRemovedLocked()
    {
        com.android.server.wm.Session r0;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.Session;

        $i0 = r0.<com.android.server.wm.Session: int mNumWindow>;

        $i1 = $i0 - 1;

        r0.<com.android.server.wm.Session: int mNumWindow> = $i1;

        virtualinvoke r0.<com.android.server.wm.Session: void killSessionLocked()>();

        return;
    }

    void killSessionLocked()
    {
        com.android.server.wm.Session r0;
        java.lang.Exception r1, $r6;
        int $i0;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r2;
        android.util.ArraySet $r3;
        android.view.SurfaceSession $r4, $r5, $r9;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15, $r16;

        r0 := @this: com.android.server.wm.Session;

        $i0 = r0.<com.android.server.wm.Session: int mNumWindow>;

        if $i0 > 0 goto label5;

        $z0 = r0.<com.android.server.wm.Session: boolean mClientDead>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.android.server.wm.Session: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r2.<com.android.server.wm.WindowManagerService: android.util.ArraySet mSessions>;

        virtualinvoke $r3.<android.util.ArraySet: boolean remove(java.lang.Object)>(r0);

        $r4 = r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        if $r4 == null goto label5;

     label1:
        $r5 = r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        virtualinvoke $r5.<android.view.SurfaceSession: void kill()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when killing surface session ");

        $r9 = r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in session ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r16);

     label4:
        r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession> = null;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.Session r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        int $i0;
        boolean $z0;
        android.view.SurfaceSession $r3;

        r0 := @this: com.android.server.wm.Session;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mNumWindow=");

        $i0 = r0.<com.android.server.wm.Session: int mNumWindow>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mClientDead=");

        $z0 = r0.<com.android.server.wm.Session: boolean mClientDead>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mSurfaceSession=");

        $r3 = r0.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.Session r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wm.Session;

        $r1 = r0.<com.android.server.wm.Session: java.lang.String mStringName>;

        return $r1;
    }
}
