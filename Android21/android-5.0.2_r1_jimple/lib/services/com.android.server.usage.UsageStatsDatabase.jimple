class com.android.server.usage.UsageStatsDatabase extends java.lang.Object
{
    private static final int CURRENT_VERSION;
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private final java.lang.Object mLock;
    private final java.io.File[] mIntervalDirs;
    private final android.app.usage.TimeSparseArray[] mSortedStatFiles;
    private final com.android.server.usage.UnixCalendar mCal;
    private final java.io.File mVersionFile;

    public void <init>(java.io.File)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.io.File r1, $r4, $r5, $r6, $r7, $r8;
        java.lang.Object $r2;
        java.io.File[] $r3, $r9;
        int $i0;
        android.app.usage.TimeSparseArray[] $r10;
        com.android.server.usage.UnixCalendar $r11;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock> = $r2;

        $r3 = newarray (java.io.File)[4];

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "daily");

        $r3[0] = $r4;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "weekly");

        $r3[1] = $r5;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "monthly");

        $r3[2] = $r6;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "yearly");

        $r3[3] = $r7;

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs> = $r3;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "version");

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile> = $r8;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i0 = lengthof $r9;

        $r10 = newarray (android.app.usage.TimeSparseArray)[$i0];

        r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles> = $r10;

        $r11 = new com.android.server.usage.UnixCalendar;

        specialinvoke $r11.<com.android.server.usage.UnixCalendar: void <init>(long)>(0L);

        r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal> = $r11;

        return;
    }

    public void init(long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0;
        java.lang.Object r1, $r5, $r7;
        java.io.File[] r2;
        int i1, i2, i3, i4, i5, i6, i7, i8;
        java.io.File r3;
        java.lang.Throwable r4, $r14;
        android.util.AtomicFile $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r11, $r13;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, $r12;
        android.app.usage.TimeSparseArray[] r15;
        android.app.usage.TimeSparseArray r16;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        r2 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        i1 = lengthof r2;

        i2 = 0;

     label02:
        if i2 >= i1 goto label04;

        r3 = r2[i2];

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        $r9 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory ");

        $r10 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label03:
        i2 = i2 + 1;

        goto label02;

     label04:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void checkVersionLocked()>();

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        r15 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        i6 = lengthof r15;

        i7 = 0;

     label05:
        if i7 >= i6 goto label11;

        r16 = r15[i7];

        i3 = virtualinvoke r16.<android.app.usage.TimeSparseArray: int closestIndexOnOrAfter(long)>(l0);

        if i3 >= 0 goto label06;

        goto label10;

     label06:
        i4 = virtualinvoke r16.<android.app.usage.TimeSparseArray: int size()>();

        i5 = i3;

     label07:
        if i5 >= i4 goto label08;

        $r7 = virtualinvoke r16.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i5);

        $r6 = (android.util.AtomicFile) $r7;

        virtualinvoke $r6.<android.util.AtomicFile: void delete()>();

        i5 = i5 + 1;

        goto label07;

     label08:
        i8 = i3;

     label09:
        if i8 >= i4 goto label10;

        virtualinvoke r16.<android.app.usage.TimeSparseArray: void removeAt(int)>(i8);

        i8 = i8 + 1;

        goto label09;

     label10:
        i7 = i7 + 1;

        goto label05;

     label11:
        exitmonitor r1;

     label12:
        goto label15;

     label13:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r1;

     label14:
        throw r4;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private void indexFilesLocked()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        com.android.server.usage.UsageStatsDatabase$1 r1, $r6;
        int i0, i1, i2, $i3;
        java.io.File[] r2, r3, $r13;
        java.io.File r4, $r12;
        android.util.AtomicFile r5, $r14;
        android.app.usage.TimeSparseArray[] $r7, $r8, $r10, $r16, $r18;
        android.app.usage.TimeSparseArray $r9, $r11, $r15, $r17;
        long $l4;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $r6 = new com.android.server.usage.UsageStatsDatabase$1;

        specialinvoke $r6.<com.android.server.usage.UsageStatsDatabase$1: void <init>(com.android.server.usage.UsageStatsDatabase)>(r0);

        r1 = $r6;

        i0 = 0;

     label1:
        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $i3 = lengthof $r7;

        if i0 >= $i3 goto label6;

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r9 = $r8[i0];

        if $r9 != null goto label2;

        $r18 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r17 = new android.app.usage.TimeSparseArray;

        specialinvoke $r17.<android.app.usage.TimeSparseArray: void <init>()>();

        $r18[i0] = $r17;

        goto label3;

     label2:
        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r11 = $r10[i0];

        virtualinvoke $r11.<android.app.usage.TimeSparseArray: void clear()>();

     label3:
        $r13 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r12 = $r13[i0];

        r2 = virtualinvoke $r12.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(r1);

        if r2 == null goto label5;

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label4:
        if i2 >= i1 goto label5;

        r4 = r3[i2];

        $r14 = new android.util.AtomicFile;

        specialinvoke $r14.<android.util.AtomicFile: void <init>(java.io.File)>(r4);

        r5 = $r14;

        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r15 = $r16[i0];

        $l4 = staticinvoke <com.android.server.usage.UsageStatsXml: long parseBeginTime(android.util.AtomicFile)>(r5);

        virtualinvoke $r15.<android.app.usage.TimeSparseArray: void put(long,java.lang.Object)>($l4, r5);

        i2 = i2 + 1;

        goto label4;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;
    }

    private void checkVersionLocked()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0;
        java.io.BufferedReader r1, $r8;
        java.lang.Throwable r2, r3, r4, r5, r6, r7, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r32, r33, r36, r37, r38;
        java.io.FileReader $r9;
        java.io.File $r10, $r21;
        java.lang.String $r11, $r17, $r20;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        java.io.FileWriter $r18;
        java.io.BufferedWriter $r19, r35;
        java.lang.RuntimeException $r28;
        java.io.IOException $r30, r39;
        java.lang.Exception $r31;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

     label01:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.FileReader;

        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        specialinvoke $r9.<java.io.FileReader: void <init>(java.io.File)>($r10);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        r1 = $r8;

        r2 = null;

     label02:
        $r11 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

     label03:
        if r1 == null goto label16;

        if r2 == null goto label07;

     label04:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label05:
        goto label16;

     label06:
        $r25 := @caughtexception;

        r3 = $r25;

        virtualinvoke r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r3);

        goto label16;

     label07:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        goto label16;

     label08:
        $r27 := @caughtexception;

        r33 = $r27;

        r2 = r33;

        throw r33;

     label09:
        $r32 := @caughtexception;

        r4 = $r32;

     label10:
        if r1 == null goto label15;

        if r2 == null goto label14;

     label11:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label12:
        goto label15;

     label13:
        $r24 := @caughtexception;

        r5 = $r24;

        virtualinvoke r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5);

        goto label15;

     label14:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label15:
        throw r4;

     label16:
        goto label18;

     label17:
        $r31 := @caughtexception;

        i0 = 0;

     label18:
        if i0 == 2 goto label36;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading from version ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r17);

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void doUpgradeLocked(int)>(i0);

     label19:
        $r19 = new java.io.BufferedWriter;

        $r18 = new java.io.FileWriter;

        $r21 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        specialinvoke $r18.<java.io.FileWriter: void <init>(java.io.File)>($r21);

        specialinvoke $r19.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r18);

        r35 = $r19;

        r36 = null;

     label20:
        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2);

        virtualinvoke r35.<java.io.BufferedWriter: void write(java.lang.String)>($r20);

     label21:
        if r35 == null goto label34;

        if r36 == null goto label25;

     label22:
        virtualinvoke r35.<java.io.BufferedWriter: void close()>();

     label23:
        goto label34;

     label24:
        $r23 := @caughtexception;

        r37 = $r23;

        virtualinvoke r36.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r37);

        goto label34;

     label25:
        virtualinvoke r35.<java.io.BufferedWriter: void close()>();

        goto label34;

     label26:
        $r26 := @caughtexception;

        r38 = $r26;

        r36 = r38;

        throw r38;

     label27:
        $r22 := @caughtexception;

        r6 = $r22;

     label28:
        if r35 == null goto label33;

        if r36 == null goto label32;

     label29:
        virtualinvoke r35.<java.io.BufferedWriter: void close()>();

     label30:
        goto label33;

     label31:
        $r29 := @caughtexception;

        r7 = $r29;

        virtualinvoke r36.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7);

        goto label33;

     label32:
        virtualinvoke r35.<java.io.BufferedWriter: void close()>();

     label33:
        throw r6;

     label34:
        goto label36;

     label35:
        $r30 := @caughtexception;

        r39 = $r30;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Failed to write new version");

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r39);

        throw $r28;

     label36:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label08 to label10 with label09;
        catch java.lang.NumberFormatException from label01 to label16 with label17;
        catch java.io.IOException from label01 to label16 with label17;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label26 to label28 with label27;
        catch java.io.IOException from label19 to label34 with label35;
    }

    private void doUpgradeLocked(int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, i1, i2, i3, $i5;
        java.io.File[] r1, r2, $r4, $r5;
        java.io.File r3, $r6;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        if i0 >= 2 goto label4;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Deleting all usage stats files");

        i1 = 0;

     label1:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i5 = lengthof $r4;

        if i1 >= $i5 goto label4;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r6 = $r5[i1];

        r1 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label3;

        r2 = r1;

        i2 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        r3 = r2[i3];

        virtualinvoke r3.<java.io.File: boolean delete()>();

        i3 = i3 + 1;

        goto label2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void onTimeChanged(long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, l5, $l6;
        java.lang.Object r1, $r7, $r8;
        android.app.usage.TimeSparseArray[] r2;
        int i1, i2, i3, i4;
        android.app.usage.TimeSparseArray r3;
        android.util.AtomicFile r4;
        java.lang.Throwable r6, $r31;
        java.io.FileInputStream $r9;
        byte $b7;
        java.io.File $r10, $r11, $r13, $r15, $r24, $r25, r33;
        java.lang.String $r12, $r18, $r20, $r22, $r26, $r28;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r21, $r23, $r27, $r29, $r30;
        java.io.IOException $r32;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        r2 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        i1 = lengthof r2;

        i2 = 0;

     label02:
        if i2 >= i1 goto label10;

        r3 = r2[i2];

        i3 = virtualinvoke r3.<android.app.usage.TimeSparseArray: int size()>();

        i4 = 0;

     label03:
        if i4 >= i3 goto label09;

        $r8 = virtualinvoke r3.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i4);

        r4 = (android.util.AtomicFile) $r8;

        $l6 = virtualinvoke r3.<android.app.usage.TimeSparseArray: long keyAt(int)>(i4);

        l5 = $l6 + l0;

        $b7 = l5 cmp 0L;

        if $b7 >= 0 goto label04;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting file ");

        $r25 = virtualinvoke r4.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r26 = virtualinvoke $r25.<java.io.File: java.lang.String getAbsolutePath()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for it is in the future now.");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r28);

        virtualinvoke r4.<android.util.AtomicFile: void delete()>();

        goto label08;

     label04:
        $r9 = virtualinvoke r4.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        virtualinvoke $r9.<java.io.FileInputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r32 := @caughtexception;

     label07:
        $r11 = new java.io.File;

        $r10 = virtualinvoke r4.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r13 = virtualinvoke $r10.<java.io.File: java.io.File getParentFile()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l5);

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, $r12);

        r33 = $r11;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving file ");

        $r15 = virtualinvoke r4.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r18 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke r33.<java.io.File: java.lang.String getAbsolutePath()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r20);

        $r24 = virtualinvoke r4.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r24.<java.io.File: boolean renameTo(java.io.File)>(r33);

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        virtualinvoke r3.<android.app.usage.TimeSparseArray: void clear()>();

        i2 = i2 + 1;

        goto label02;

     label10:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r31 := @caughtexception;

        r6 = $r31;

        exitmonitor r1;

     label13:
        throw r6;

     label14:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public com.android.server.usage.IntervalStats getLatestUsageStats(int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, $r5, $r15;
        android.util.AtomicFile r2;
        com.android.server.usage.IntervalStats r3, $r17;
        java.lang.Throwable r4, $r19;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        java.io.File[] $r11;
        android.app.usage.TimeSparseArray[] $r12, $r14;
        android.app.usage.TimeSparseArray $r13, $r16;
        java.io.IOException $r18, r20;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        if i0 < 0 goto label02;

        $r11 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i2 = lengthof $r11;

        if i0 < $i2 goto label03;

     label02:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label03:
        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r13 = $r12[i0];

        i1 = virtualinvoke $r13.<android.app.usage.TimeSparseArray: int size()>();

        if i1 != 0 goto label05;

        exitmonitor r1;

     label04:
        return null;

     label05:
        $r14 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r16 = $r14[i0];

        $i3 = i1 - 1;

        $r15 = virtualinvoke $r16.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>($i3);

        r2 = (android.util.AtomicFile) $r15;

        $r17 = new com.android.server.usage.IntervalStats;

        specialinvoke $r17.<com.android.server.usage.IntervalStats: void <init>()>();

        r3 = $r17;

        staticinvoke <com.android.server.usage.UsageStatsXml: void read(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r2, r3);

     label06:
        exitmonitor r1;

     label07:
        return r3;

     label08:
        $r18 := @caughtexception;

        r20 = $r18;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read usage stats file", r20);

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r1;

     label11:
        throw r4;

     label12:
        return null;

        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Throwable from label01 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public long getLatestUsageStatsBeginTime(int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r14;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.io.File[] $r9;
        android.app.usage.TimeSparseArray[] $r10, $r12;
        android.app.usage.TimeSparseArray $r11, $r13;
        long $l4;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        if i0 < 0 goto label2;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i2 = lengthof $r9;

        if i0 < $i2 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r11 = $r10[i0];

        i1 = virtualinvoke $r11.<android.app.usage.TimeSparseArray: int size()>();

        if i1 <= 0 goto label5;

        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r13 = $r12[i0];

        $i3 = i1 - 1;

        $l4 = virtualinvoke $r13.<android.app.usage.TimeSparseArray: long keyAt(int)>($i3);

        exitmonitor r1;

     label4:
        return $l4;

     label5:
        exitmonitor r1;

     label6:
        return -1L;

     label7:
        $r14 := @caughtexception;

        r2 = $r14;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.util.List queryUsageStats(int, long, long, com.android.server.usage.UsageStatsDatabase$StatCombiner)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, i3, i4, i5, $i6;
        long l1, l2, $l9, $l10;
        com.android.server.usage.UsageStatsDatabase$StatCombiner r1;
        java.lang.Object r2, $r9, $r18;
        android.app.usage.TimeSparseArray r3;
        com.android.server.usage.IntervalStats r4, $r17;
        java.util.ArrayList r5, $r16;
        android.util.AtomicFile r6;
        java.lang.Throwable r7, $r19;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12;
        java.io.File[] $r14;
        byte $b7, $b8, $b11;
        android.app.usage.TimeSparseArray[] $r15;
        java.io.IOException $r20, r21;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: com.android.server.usage.UsageStatsDatabase$StatCombiner;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r2 = $r9;

        entermonitor $r9;

     label01:
        if i0 < 0 goto label02;

        $r14 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i6 = lengthof $r14;

        if i0 < $i6 goto label03;

     label02:
        $r8 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label03:
        $r15 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        r3 = $r15[i0];

        $b7 = l2 cmp l1;

        if $b7 > 0 goto label05;

        exitmonitor r2;

     label04:
        return null;

     label05:
        i3 = virtualinvoke r3.<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>(l1);

        if i3 >= 0 goto label06;

        i3 = 0;

     label06:
        i4 = virtualinvoke r3.<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>(l2);

        if i4 >= 0 goto label08;

        exitmonitor r2;

     label07:
        return null;

     label08:
        $l9 = virtualinvoke r3.<android.app.usage.TimeSparseArray: long keyAt(int)>(i4);

        $b8 = $l9 cmp l2;

        if $b8 != 0 goto label10;

        i4 = i4 + -1;

        if i4 >= 0 goto label10;

        exitmonitor r2;

     label09:
        return null;

     label10:
        $r17 = new com.android.server.usage.IntervalStats;

        specialinvoke $r17.<com.android.server.usage.IntervalStats: void <init>()>();

        r4 = $r17;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r5 = $r16;

        i5 = i3;

     label11:
        if i5 > i4 goto label13;

        $r18 = virtualinvoke r3.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i5);

        r6 = (android.util.AtomicFile) $r18;

        staticinvoke <com.android.server.usage.UsageStatsXml: void read(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r6, r4);

        $l10 = r4.<com.android.server.usage.IntervalStats: long endTime>;

        $b11 = l1 cmp $l10;

        if $b11 >= 0 goto label12;

        interfaceinvoke r1.<com.android.server.usage.UsageStatsDatabase$StatCombiner: void combine(com.android.server.usage.IntervalStats,boolean,java.util.List)>(r4, 0, r5);

     label12:
        i5 = i5 + 1;

        goto label11;

     label13:
        exitmonitor r2;

     label14:
        return r5;

     label15:
        $r20 := @caughtexception;

        r21 = $r20;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read usage stats file", r21);

        exitmonitor r2;

     label16:
        return null;

     label17:
        $r19 := @caughtexception;

        r7 = $r19;

        exitmonitor r2;

     label18:
        throw r7;

        catch java.io.IOException from label10 to label13 with label15;
        catch java.lang.Throwable from label01 to label04 with label17;
        catch java.lang.Throwable from label05 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public int findBestFitBucket(long, long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, l1, l3, l7, $l9, $l10;
        java.lang.Object r1, $r3;
        int i2, i4, i5, i6, $i8;
        java.lang.Throwable r2, $r11;
        android.app.usage.TimeSparseArray[] $r4, $r5, $r8, $r9;
        android.app.usage.TimeSparseArray $r6, $r7, $r10;
        byte $b11;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        i2 = -1;

        l3 = 9223372036854775807L;

        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $i8 = lengthof $r4;

        i4 = $i8 - 1;

     label2:
        if i4 < 0 goto label4;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r6 = $r5[i4];

        i5 = virtualinvoke $r6.<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>(l0);

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r7 = $r8[i4];

        i6 = virtualinvoke $r7.<android.app.usage.TimeSparseArray: int size()>();

        if i5 < 0 goto label3;

        if i5 >= i6 goto label3;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r10 = $r9[i4];

        $l9 = virtualinvoke $r10.<android.app.usage.TimeSparseArray: long keyAt(int)>(i5);

        $l10 = $l9 - l0;

        l7 = staticinvoke <java.lang.Math: long abs(long)>($l10);

        $b11 = l7 cmp l3;

        if $b11 >= 0 goto label3;

        l3 = l7;

        i2 = i4;

     label3:
        i4 = i4 + -1;

        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return i2;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void prune(long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, $l1, $l2, $l3, $l4;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r24;
        com.android.server.usage.UnixCalendar $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r19, $r20, $r21;
        java.io.File[] $r6, $r11, $r17, $r22;
        java.io.File $r8, $r13, $r18, $r23;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r4.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r5.<com.android.server.usage.UnixCalendar: void addYears(int)>(-3);

        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r8 = $r6[3];

        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l1 = virtualinvoke $r7.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r8, $l1);

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r9.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r10.<com.android.server.usage.UnixCalendar: void addMonths(int)>(-6);

        $r11 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r13 = $r11[2];

        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l2 = virtualinvoke $r12.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r13, $l2);

        $r15 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r15.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r14 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r14.<com.android.server.usage.UnixCalendar: void addWeeks(int)>(-4);

        $r17 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r18 = $r17[1];

        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l3 = virtualinvoke $r16.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r18, $l3);

        $r20 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r20.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r19 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r19.<com.android.server.usage.UnixCalendar: void addDays(int)>(-7);

        $r22 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r23 = $r22[0];

        $r21 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l4 = virtualinvoke $r21.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r23, $l4);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r24 := @caughtexception;

        r2 = $r24;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void pruneFilesOlderThan(java.io.File, long)
    {
        java.io.File r0, r3, $r7;
        long l0, l3;
        java.io.File[] r1, r2;
        int i1, i2, $i5, $i6;
        java.lang.String r4, $r5, $r8;
        boolean $z0;
        android.util.AtomicFile $r6;
        byte $b4;

        r0 := @parameter0: java.io.File;

        l0 := @parameter1: long;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label4;

        r2 = r1;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r3 = r2[i2];

        r4 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".bak");

        if $z0 == 0 goto label2;

        $r7 = new java.io.File;

        $i6 = virtualinvoke r4.<java.lang.String: int length()>();

        $i5 = $i6 - 4;

        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);

        r3 = $r7;

     label2:
        $r5 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $b4 = l3 cmp l0;

        if $b4 >= 0 goto label3;

        $r6 = new android.util.AtomicFile;

        specialinvoke $r6.<android.util.AtomicFile: void <init>(java.io.File)>(r3);

        virtualinvoke $r6.<android.util.AtomicFile: void delete()>();

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public void putUsageStats(int, com.android.server.usage.IntervalStats) throws java.io.IOException
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, $i1;
        com.android.server.usage.IntervalStats r1;
        java.lang.Object r2, $r5, $r13;
        android.util.AtomicFile r3, $r16;
        java.lang.Throwable r4, $r21;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, $r18;
        java.io.File[] $r11, $r17;
        android.app.usage.TimeSparseArray[] $r12, $r20;
        long $l2, $l3, $l4, $l5;
        android.app.usage.TimeSparseArray $r14, $r22;
        java.io.File $r15, $r19;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        if i0 < 0 goto label2;

        $r11 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r11;

        if i0 < $i1 goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label3:
        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r14 = $r12[i0];

        $l2 = r1.<com.android.server.usage.IntervalStats: long beginTime>;

        $r13 = virtualinvoke $r14.<android.app.usage.TimeSparseArray: java.lang.Object get(long)>($l2);

        r3 = (android.util.AtomicFile) $r13;

        if r3 != null goto label4;

        $r16 = new android.util.AtomicFile;

        $r15 = new java.io.File;

        $r17 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r19 = $r17[i0];

        $l4 = r1.<com.android.server.usage.IntervalStats: long beginTime>;

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, $r18);

        specialinvoke $r16.<android.util.AtomicFile: void <init>(java.io.File)>($r15);

        r3 = $r16;

        $r20 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r22 = $r20[i0];

        $l5 = r1.<com.android.server.usage.IntervalStats: long beginTime>;

        virtualinvoke $r22.<android.app.usage.TimeSparseArray: void put(long,java.lang.Object)>($l5, r3);

     label4:
        staticinvoke <com.android.server.usage.UsageStatsXml: void write(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r3, r1);

        $l3 = virtualinvoke r3.<android.util.AtomicFile: long getLastModifiedTime()>();

        r1.<com.android.server.usage.IntervalStats: long lastTimeSaved> = $l3;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r21 := @caughtexception;

        r4 = $r21;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void <clinit>()
    {
        <com.android.server.usage.UsageStatsDatabase: boolean DEBUG> = 0;

        <com.android.server.usage.UsageStatsDatabase: java.lang.String TAG> = "UsageStatsDatabase";

        <com.android.server.usage.UsageStatsDatabase: int CURRENT_VERSION> = 2;

        return;
    }
}
