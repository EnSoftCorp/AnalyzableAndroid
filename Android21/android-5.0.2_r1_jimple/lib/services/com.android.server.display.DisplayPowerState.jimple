final class com.android.server.display.DisplayPowerState extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static boolean DEBUG;
    private final android.os.Handler mHandler;
    private final android.view.Choreographer mChoreographer;
    private final com.android.server.display.DisplayBlanker mBlanker;
    private final com.android.server.lights.Light mBacklight;
    private final com.android.server.display.ColorFade mColorFade;
    private final com.android.server.display.DisplayPowerState$PhotonicModulator mPhotonicModulator;
    private int mScreenState;
    private int mScreenBrightness;
    private boolean mScreenReady;
    private boolean mScreenUpdatePending;
    private boolean mColorFadePrepared;
    private float mColorFadeLevel;
    private boolean mColorFadeReady;
    private boolean mColorFadeDrawPending;
    private java.lang.Runnable mCleanListener;
    public static final android.util.FloatProperty COLOR_FADE_LEVEL;
    public static final android.util.IntProperty SCREEN_BRIGHTNESS;
    private final java.lang.Runnable mScreenUpdateRunnable;
    private final java.lang.Runnable mColorFadeDrawRunnable;

    public void <init>(com.android.server.display.DisplayBlanker, com.android.server.lights.Light, com.android.server.display.ColorFade)
    {
        com.android.server.display.DisplayPowerState r0;
        com.android.server.display.DisplayBlanker r1;
        com.android.server.lights.Light r2;
        com.android.server.display.ColorFade r3;
        com.android.server.display.DisplayPowerState$3 $r4;
        com.android.server.display.DisplayPowerState$4 $r5;
        android.os.Handler $r6;
        android.view.Choreographer $r7;
        com.android.server.display.DisplayPowerState$PhotonicModulator $r8, $r9;

        r0 := @this: com.android.server.display.DisplayPowerState;

        r1 := @parameter0: com.android.server.display.DisplayBlanker;

        r2 := @parameter1: com.android.server.lights.Light;

        r3 := @parameter2: com.android.server.display.ColorFade;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new com.android.server.display.DisplayPowerState$3;

        specialinvoke $r4.<com.android.server.display.DisplayPowerState$3: void <init>(com.android.server.display.DisplayPowerState)>(r0);

        r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mScreenUpdateRunnable> = $r4;

        $r5 = new com.android.server.display.DisplayPowerState$4;

        specialinvoke $r5.<com.android.server.display.DisplayPowerState$4: void <init>(com.android.server.display.DisplayPowerState)>(r0);

        r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mColorFadeDrawRunnable> = $r5;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>(boolean)>(1);

        r0.<com.android.server.display.DisplayPowerState: android.os.Handler mHandler> = $r6;

        $r7 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        r0.<com.android.server.display.DisplayPowerState: android.view.Choreographer mChoreographer> = $r7;

        r0.<com.android.server.display.DisplayPowerState: com.android.server.display.DisplayBlanker mBlanker> = r1;

        r0.<com.android.server.display.DisplayPowerState: com.android.server.lights.Light mBacklight> = r2;

        r0.<com.android.server.display.DisplayPowerState: com.android.server.display.ColorFade mColorFade> = r3;

        $r8 = new com.android.server.display.DisplayPowerState$PhotonicModulator;

        specialinvoke $r8.<com.android.server.display.DisplayPowerState$PhotonicModulator: void <init>(com.android.server.display.DisplayPowerState,com.android.server.display.DisplayPowerState$1)>(r0, null);

        r0.<com.android.server.display.DisplayPowerState: com.android.server.display.DisplayPowerState$PhotonicModulator mPhotonicModulator> = $r8;

        $r9 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.DisplayPowerState$PhotonicModulator mPhotonicModulator>;

        virtualinvoke $r9.<com.android.server.display.DisplayPowerState$PhotonicModulator: void start()>();

        r0.<com.android.server.display.DisplayPowerState: int mScreenState> = 2;

        r0.<com.android.server.display.DisplayPowerState: int mScreenBrightness> = 255;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void scheduleScreenUpdate()>();

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared> = 0;

        r0.<com.android.server.display.DisplayPowerState: float mColorFadeLevel> = 1.0F;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady> = 1;

        return;
    }

    public void setScreenState(int)
    {
        com.android.server.display.DisplayPowerState r0;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.display.DisplayPowerState;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.display.DisplayPowerState: int mScreenState>;

        if $i1 == i0 goto label2;

        $z0 = <com.android.server.display.DisplayPowerState: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScreenState: state=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", $r4);

     label1:
        r0.<com.android.server.display.DisplayPowerState: int mScreenState> = i0;

        r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady> = 0;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void scheduleScreenUpdate()>();

     label2:
        return;
    }

    public int getScreenState()
    {
        com.android.server.display.DisplayPowerState r0;
        int $i0;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $i0 = r0.<com.android.server.display.DisplayPowerState: int mScreenState>;

        return $i0;
    }

    public void setScreenBrightness(int)
    {
        com.android.server.display.DisplayPowerState r0;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.display.DisplayPowerState;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.display.DisplayPowerState: int mScreenBrightness>;

        if $i1 == i0 goto label2;

        $z0 = <com.android.server.display.DisplayPowerState: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScreenBrightness: brightness=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", $r4);

     label1:
        r0.<com.android.server.display.DisplayPowerState: int mScreenBrightness> = i0;

        $i2 = r0.<com.android.server.display.DisplayPowerState: int mScreenState>;

        if $i2 == 1 goto label2;

        r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady> = 0;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void scheduleScreenUpdate()>();

     label2:
        return;
    }

    public int getScreenBrightness()
    {
        com.android.server.display.DisplayPowerState r0;
        int $i0;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $i0 = r0.<com.android.server.display.DisplayPowerState: int mScreenBrightness>;

        return $i0;
    }

    public boolean prepareColorFade(android.content.Context, int)
    {
        com.android.server.display.DisplayPowerState r0;
        android.content.Context r1;
        int i0;
        com.android.server.display.ColorFade $r2;
        boolean $z0;

        r0 := @this: com.android.server.display.DisplayPowerState;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.ColorFade mColorFade>;

        $z0 = virtualinvoke $r2.<com.android.server.display.ColorFade: boolean prepare(android.content.Context,int)>(r1, i0);

        if $z0 != 0 goto label1;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared> = 0;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady> = 1;

        return 0;

     label1:
        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared> = 1;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady> = 0;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void scheduleColorFadeDraw()>();

        return 1;
    }

    public void dismissColorFade()
    {
        com.android.server.display.DisplayPowerState r0;
        com.android.server.display.ColorFade $r1;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $r1 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.ColorFade mColorFade>;

        virtualinvoke $r1.<com.android.server.display.ColorFade: void dismiss()>();

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared> = 0;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady> = 1;

        return;
    }

    public void setColorFadeLevel(float)
    {
        com.android.server.display.DisplayPowerState r0;
        float f0, $f1;
        byte $b0;
        boolean $z0, $z1;
        int $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.display.DisplayPowerState;

        f0 := @parameter0: float;

        $f1 = r0.<com.android.server.display.DisplayPowerState: float mColorFadeLevel>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label3;

        $z0 = <com.android.server.display.DisplayPowerState: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setColorFadeLevel: level=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", $r4);

     label1:
        r0.<com.android.server.display.DisplayPowerState: float mColorFadeLevel> = f0;

        $i1 = r0.<com.android.server.display.DisplayPowerState: int mScreenState>;

        if $i1 == 1 goto label2;

        r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady> = 0;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void scheduleScreenUpdate()>();

     label2:
        $z1 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared>;

        if $z1 == 0 goto label3;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady> = 0;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void scheduleColorFadeDraw()>();

     label3:
        return;
    }

    public float getColorFadeLevel()
    {
        com.android.server.display.DisplayPowerState r0;
        float $f0;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $f0 = r0.<com.android.server.display.DisplayPowerState: float mColorFadeLevel>;

        return $f0;
    }

    public boolean waitUntilClean(java.lang.Runnable)
    {
        com.android.server.display.DisplayPowerState r0;
        java.lang.Runnable r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.DisplayPowerState;

        r1 := @parameter0: java.lang.Runnable;

        $z0 = r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady>;

        if $z1 != 0 goto label2;

     label1:
        r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mCleanListener> = r1;

        return 0;

     label2:
        r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mCleanListener> = null;

        return 1;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.DisplayPowerState r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r35;
        int $i0, $i1;
        java.lang.String $r4, $r6, $r10, $r13, $r19, $r21, $r27, $r32, $r33;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0;
        com.android.server.display.DisplayPowerState$PhotonicModulator $r34;
        com.android.server.display.ColorFade $r36;

        r0 := @this: com.android.server.display.DisplayPowerState;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Display Power State:");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mScreenState=");

        $i0 = r0.<com.android.server.display.DisplayPowerState: int mScreenState>;

        $r4 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mScreenBrightness=");

        $i1 = r0.<com.android.server.display.DisplayPowerState: int mScreenBrightness>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mScreenReady=");

        $z0 = r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mScreenUpdatePending=");

        $z1 = r0.<com.android.server.display.DisplayPowerState: boolean mScreenUpdatePending>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mColorFadePrepared=");

        $z2 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mColorFadeLevel=");

        $f0 = r0.<com.android.server.display.DisplayPowerState: float mColorFadeLevel>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mColorFadeReady=");

        $z3 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady>;

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mColorFadeDrawPending=");

        $z4 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeDrawPending>;

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r34 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.DisplayPowerState$PhotonicModulator mPhotonicModulator>;

        virtualinvoke $r34.<com.android.server.display.DisplayPowerState$PhotonicModulator: void dump(java.io.PrintWriter)>(r1);

        $r36 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.ColorFade mColorFade>;

        virtualinvoke $r36.<com.android.server.display.ColorFade: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    private void scheduleScreenUpdate()
    {
        com.android.server.display.DisplayPowerState r0;
        boolean $z0;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $z0 = r0.<com.android.server.display.DisplayPowerState: boolean mScreenUpdatePending>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.display.DisplayPowerState: boolean mScreenUpdatePending> = 1;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void postScreenUpdateThreadSafe()>();

     label1:
        return;
    }

    private void postScreenUpdateThreadSafe()
    {
        com.android.server.display.DisplayPowerState r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $r2 = r0.<com.android.server.display.DisplayPowerState: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mScreenUpdateRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.server.display.DisplayPowerState: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mScreenUpdateRunnable>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void scheduleColorFadeDraw()
    {
        com.android.server.display.DisplayPowerState r0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.view.Choreographer $r2;

        r0 := @this: com.android.server.display.DisplayPowerState;

        $z0 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeDrawPending>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeDrawPending> = 1;

        $r2 = r0.<com.android.server.display.DisplayPowerState: android.view.Choreographer mChoreographer>;

        $r1 = r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mColorFadeDrawRunnable>;

        virtualinvoke $r2.<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>(2, $r1, null);

     label1:
        return;
    }

    private void invokeCleanListenerIfNeeded()
    {
        com.android.server.display.DisplayPowerState r0;
        java.lang.Runnable r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.DisplayPowerState;

        r1 = r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mCleanListener>;

        if r1 == null goto label1;

        $z0 = r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady>;

        if $z1 == 0 goto label1;

        r0.<com.android.server.display.DisplayPowerState: java.lang.Runnable mCleanListener> = null;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label1:
        return;
    }

    static boolean access$102(com.android.server.display.DisplayPowerState, boolean)
    {
        com.android.server.display.DisplayPowerState r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.DisplayPowerState: boolean mScreenUpdatePending> = z0;

        return z0;
    }

    static int access$200(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $i0 = r0.<com.android.server.display.DisplayPowerState: int mScreenState>;

        return $i0;
    }

    static float access$300(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        float $f0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $f0 = r0.<com.android.server.display.DisplayPowerState: float mColorFadeLevel>;

        return $f0;
    }

    static int access$400(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $i0 = r0.<com.android.server.display.DisplayPowerState: int mScreenBrightness>;

        return $i0;
    }

    static com.android.server.display.DisplayPowerState$PhotonicModulator access$500(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        com.android.server.display.DisplayPowerState$PhotonicModulator $r1;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $r1 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.DisplayPowerState$PhotonicModulator mPhotonicModulator>;

        return $r1;
    }

    static boolean access$600()
    {
        boolean $z0;

        $z0 = <com.android.server.display.DisplayPowerState: boolean DEBUG>;

        return $z0;
    }

    static boolean access$702(com.android.server.display.DisplayPowerState, boolean)
    {
        com.android.server.display.DisplayPowerState r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.DisplayPowerState: boolean mScreenReady> = z0;

        return z0;
    }

    static void access$800(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void invokeCleanListenerIfNeeded()>();

        return;
    }

    static boolean access$902(com.android.server.display.DisplayPowerState, boolean)
    {
        com.android.server.display.DisplayPowerState r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeDrawPending> = z0;

        return z0;
    }

    static boolean access$1000(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $z0 = r0.<com.android.server.display.DisplayPowerState: boolean mColorFadePrepared>;

        return $z0;
    }

    static com.android.server.display.ColorFade access$1100(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        com.android.server.display.ColorFade $r1;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $r1 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.ColorFade mColorFade>;

        return $r1;
    }

    static boolean access$1202(com.android.server.display.DisplayPowerState, boolean)
    {
        com.android.server.display.DisplayPowerState r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.DisplayPowerState: boolean mColorFadeReady> = z0;

        return z0;
    }

    static void access$1300(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        specialinvoke r0.<com.android.server.display.DisplayPowerState: void postScreenUpdateThreadSafe()>();

        return;
    }

    static com.android.server.display.DisplayBlanker access$1400(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        com.android.server.display.DisplayBlanker $r1;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $r1 = r0.<com.android.server.display.DisplayPowerState: com.android.server.display.DisplayBlanker mBlanker>;

        return $r1;
    }

    static com.android.server.lights.Light access$1500(com.android.server.display.DisplayPowerState)
    {
        com.android.server.display.DisplayPowerState r0;
        com.android.server.lights.Light $r1;

        r0 := @parameter0: com.android.server.display.DisplayPowerState;

        $r1 = r0.<com.android.server.display.DisplayPowerState: com.android.server.lights.Light mBacklight>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.server.display.DisplayPowerState$1 $r0;
        com.android.server.display.DisplayPowerState$2 $r1;

        <com.android.server.display.DisplayPowerState: java.lang.String TAG> = "DisplayPowerState";

        <com.android.server.display.DisplayPowerState: boolean DEBUG> = 0;

        $r0 = new com.android.server.display.DisplayPowerState$1;

        specialinvoke $r0.<com.android.server.display.DisplayPowerState$1: void <init>(java.lang.String)>("electronBeamLevel");

        <com.android.server.display.DisplayPowerState: android.util.FloatProperty COLOR_FADE_LEVEL> = $r0;

        $r1 = new com.android.server.display.DisplayPowerState$2;

        specialinvoke $r1.<com.android.server.display.DisplayPowerState$2: void <init>(java.lang.String)>("screenBrightness");

        <com.android.server.display.DisplayPowerState: android.util.IntProperty SCREEN_BRIGHTNESS> = $r1;

        return;
    }
}
