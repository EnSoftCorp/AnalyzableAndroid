final class com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler extends java.lang.Object implements com.android.server.hdmi.HdmiCecStandbyModeHandler$CecMessageHandler
{
    final com.android.server.hdmi.HdmiCecStandbyModeHandler this$0;

    private void <init>(com.android.server.hdmi.HdmiCecStandbyModeHandler)
    {
        com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler r0;
        com.android.server.hdmi.HdmiCecStandbyModeHandler r1;

        r0 := @this: com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecStandbyModeHandler;

        r0.<com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler: com.android.server.hdmi.HdmiCecStandbyModeHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean handle(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        boolean $z0, $z1, $z2;
        com.android.server.hdmi.HdmiCecStandbyModeHandler $r2;
        com.android.server.hdmi.HdmiCecStandbyModeHandler$CecMessageHandler $r3;

        r0 := @this: com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        $z0 = staticinvoke <com.android.server.hdmi.HdmiCecLocalDevice: boolean isPowerOnOrToggleCommand(com.android.server.hdmi.HdmiCecMessage)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <com.android.server.hdmi.HdmiCecLocalDevice: boolean isPowerOffOrToggleCommand(com.android.server.hdmi.HdmiCecMessage)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler: com.android.server.hdmi.HdmiCecStandbyModeHandler this$0>;

        $r3 = staticinvoke <com.android.server.hdmi.HdmiCecStandbyModeHandler: com.android.server.hdmi.HdmiCecStandbyModeHandler$CecMessageHandler access$300(com.android.server.hdmi.HdmiCecStandbyModeHandler)>($r2);

        $z2 = interfaceinvoke $r3.<com.android.server.hdmi.HdmiCecStandbyModeHandler$CecMessageHandler: boolean handle(com.android.server.hdmi.HdmiCecMessage)>(r1);

        return $z2;
    }

    void <init>(com.android.server.hdmi.HdmiCecStandbyModeHandler, com.android.server.hdmi.HdmiCecStandbyModeHandler$1)
    {
        com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler r0;
        com.android.server.hdmi.HdmiCecStandbyModeHandler r1;
        com.android.server.hdmi.HdmiCecStandbyModeHandler$1 r2;

        r0 := @this: com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecStandbyModeHandler;

        r2 := @parameter1: com.android.server.hdmi.HdmiCecStandbyModeHandler$1;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler: void <init>(com.android.server.hdmi.HdmiCecStandbyModeHandler)>(r1);

        return;
    }
}
