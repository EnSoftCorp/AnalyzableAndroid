public class com.android.server.am.TaskPersister extends java.lang.Object
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    private static final long INTER_WRITE_DELAY_MS;
    private static final long PRE_TASK_DELAY_MS;
    private static final int MAX_WRITE_QUEUE_LENGTH;
    private static final long FLUSH_QUEUE;
    private static final java.lang.String RECENTS_FILENAME;
    private static final java.lang.String TASKS_DIRNAME;
    private static final java.lang.String TASK_EXTENSION;
    private static final java.lang.String IMAGES_DIRNAME;
    static final java.lang.String IMAGE_EXTENSION;
    private static final java.lang.String TAG_TASK;
    static java.io.File sImagesDir;
    static java.io.File sTasksDir;
    private final com.android.server.am.ActivityManagerService mService;
    private final com.android.server.am.ActivityStackSupervisor mStackSupervisor;
    private long mNextWriteTime;
    private final com.android.server.am.TaskPersister$LazyTaskWriterThread mLazyTaskWriterThread;
    java.util.ArrayList mWriteQueue;

    void <init>(java.io.File, com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.TaskPersister r0;
        java.io.File r1, $r4, $r5, $r6, $r7, $r10, $r12, $r16, $r20;
        com.android.server.am.ActivityStackSupervisor r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.am.ActivityManagerService $r8;
        com.android.server.am.TaskPersister$LazyTaskWriterThread $r9;
        java.lang.StringBuilder $r11, $r13, $r15, $r17, $r18, $r19;
        java.lang.String $r14, $r21;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: com.android.server.am.ActivityStackSupervisor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = 0L;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue> = $r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "recent_tasks");

        <com.android.server.am.TaskPersister: java.io.File sTasksDir> = $r4;

        $r5 = <com.android.server.am.TaskPersister: java.io.File sTasksDir>;

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r16 = <com.android.server.am.TaskPersister: java.io.File sTasksDir>;

        $z3 = virtualinvoke $r16.<java.io.File: boolean mkdir()>();

        if $z3 != 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure creating tasks directory ");

        $r20 = <com.android.server.am.TaskPersister: java.io.File sTasksDir>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r21);

     label1:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "recent_images");

        <com.android.server.am.TaskPersister: java.io.File sImagesDir> = $r6;

        $r7 = <com.android.server.am.TaskPersister: java.io.File sImagesDir>;

        $z1 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $r10 = <com.android.server.am.TaskPersister: java.io.File sImagesDir>;

        $z2 = virtualinvoke $r10.<java.io.File: boolean mkdir()>();

        if $z2 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure creating images directory ");

        $r12 = <com.android.server.am.TaskPersister: java.io.File sImagesDir>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r14);

     label2:
        r0.<com.android.server.am.TaskPersister: com.android.server.am.ActivityStackSupervisor mStackSupervisor> = r2;

        $r8 = r2.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r0.<com.android.server.am.TaskPersister: com.android.server.am.ActivityManagerService mService> = $r8;

        $r9 = new com.android.server.am.TaskPersister$LazyTaskWriterThread;

        specialinvoke $r9.<com.android.server.am.TaskPersister$LazyTaskWriterThread: void <init>(com.android.server.am.TaskPersister,java.lang.String)>(r0, "LazyTaskWriterThread");

        r0.<com.android.server.am.TaskPersister: com.android.server.am.TaskPersister$LazyTaskWriterThread mLazyTaskWriterThread> = $r9;

        return;
    }

    void startPersisting()
    {
        com.android.server.am.TaskPersister r0;
        com.android.server.am.TaskPersister$LazyTaskWriterThread $r1;

        r0 := @this: com.android.server.am.TaskPersister;

        $r1 = r0.<com.android.server.am.TaskPersister: com.android.server.am.TaskPersister$LazyTaskWriterThread mLazyTaskWriterThread>;

        virtualinvoke $r1.<com.android.server.am.TaskPersister$LazyTaskWriterThread: void start()>();

        return;
    }

    private void removeThumbnails(com.android.server.am.TaskRecord)
    {
        com.android.server.am.TaskPersister r0;
        com.android.server.am.TaskRecord r1;
        java.lang.String r2, $r8;
        int i0, $i1, $i2;
        com.android.server.am.TaskPersister$WriteQueueItem r3;
        java.util.ArrayList $r4, $r5, $r9;
        java.lang.Object $r6;
        boolean $z0, $z1;
        com.android.server.am.TaskPersister$ImageWriteQueueItem $r7;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $i1 = r1.<com.android.server.am.TaskRecord: int taskId>;

        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r4 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label3;

        $r5 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.TaskPersister$WriteQueueItem) $r6;

        $z0 = r3 instanceof com.android.server.am.TaskPersister$ImageWriteQueueItem;

        if $z0 == 0 goto label2;

        $r7 = (com.android.server.am.TaskPersister$ImageWriteQueueItem) r3;

        $r8 = $r7.<com.android.server.am.TaskPersister$ImageWriteQueueItem: java.lang.String mFilename>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r9 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return;
    }

    private void yieldIfQueueTooDeep()
    {
        com.android.server.am.TaskPersister r0, r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        long $l0;
        byte $b1;

        r0 := @this: com.android.server.am.TaskPersister;

        z0 = 0;

        r1 = r0;

        entermonitor r0;

     label1:
        $l0 = r0.<com.android.server.am.TaskPersister: long mNextWriteTime>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        z0 = 1;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        if z0 == 0 goto label7;

        staticinvoke <java.lang.Thread: void yield()>();

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void wakeup(com.android.server.am.TaskRecord, boolean)
    {
        com.android.server.am.TaskPersister r0, r2;
        com.android.server.am.TaskRecord r1, $r14;
        boolean z0, $z3, $z4;
        int i0, $i1, $i6;
        com.android.server.am.TaskPersister$WriteQueueItem r3, $r6;
        java.lang.Throwable r4, $r16;
        java.util.ArrayList $r7, $r8, $r9, $r10, $r12;
        long $l2, $l4, $l5;
        byte $b3;
        com.android.server.am.TaskPersister$TaskWriteQueueItem $r11, $r15;
        java.lang.Object $r13;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        r2 = r0;

        entermonitor r0;

     label01:
        if r1 == null goto label06;

        $r9 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $i6 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i0 = $i6 - 1;

     label02:
        if i0 < 0 goto label04;

        $r12 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.TaskPersister$WriteQueueItem) $r13;

        $z3 = r3 instanceof com.android.server.am.TaskPersister$TaskWriteQueueItem;

        if $z3 == 0 goto label03;

        $r15 = (com.android.server.am.TaskPersister$TaskWriteQueueItem) r3;

        $r14 = $r15.<com.android.server.am.TaskPersister$TaskWriteQueueItem: com.android.server.am.TaskRecord mTask>;

        if $r14 != r1 goto label03;

        $z4 = r1.<com.android.server.am.TaskRecord: boolean inRecents>;

        if $z4 != 0 goto label04;

        specialinvoke r0.<com.android.server.am.TaskPersister: void removeThumbnails(com.android.server.am.TaskRecord)>(r1);

        goto label04;

     label03:
        i0 = i0 + -1;

        goto label02;

     label04:
        if i0 >= 0 goto label05;

        $r10 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r11 = new com.android.server.am.TaskPersister$TaskWriteQueueItem;

        specialinvoke $r11.<com.android.server.am.TaskPersister$TaskWriteQueueItem: void <init>(com.android.server.am.TaskRecord)>(r1);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label05:
        goto label07;

     label06:
        $r7 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r6 = new com.android.server.am.TaskPersister$WriteQueueItem;

        specialinvoke $r6.<com.android.server.am.TaskPersister$WriteQueueItem: void <init>(com.android.server.am.TaskPersister$1)>(null);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label07:
        if z0 != 0 goto label08;

        $r8 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 <= 6 goto label09;

     label08:
        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = -1L;

        goto label10;

     label09:
        $l2 = r0.<com.android.server.am.TaskPersister: long mNextWriteTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label10;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = $l5 + 3000L;

        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = $l4;

     label10:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label11:
        goto label14;

     label12:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label13:
        throw r4;

     label14:
        specialinvoke r0.<com.android.server.am.TaskPersister: void yieldIfQueueTooDeep()>();

        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    void flush()
    {
        com.android.server.am.TaskPersister r0, r1;
        java.lang.Throwable r3, $r6;
        long $l0;
        byte $b1;
        java.lang.InterruptedException $r5;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = -1L;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        $l0 = r0.<com.android.server.am.TaskPersister: long mNextWriteTime>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label2;

        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void saveImage(android.graphics.Bitmap, java.lang.String)
    {
        com.android.server.am.TaskPersister r0, r3;
        android.graphics.Bitmap r1;
        java.lang.String r2, $r14;
        int i0, $i1, $i2;
        com.android.server.am.TaskPersister$WriteQueueItem r4;
        com.android.server.am.TaskPersister$ImageWriteQueueItem r5, $r11;
        java.lang.Throwable r6, $r15;
        java.util.ArrayList $r8, $r9, $r10, $r12;
        long $l3, $l5, $l6;
        byte $b4;
        boolean $z1, $z2;
        java.lang.Object $r13;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: java.lang.String;

        r3 = r0;

        entermonitor r0;

     label01:
        $r8 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label02:
        if i0 < 0 goto label04;

        $r12 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.TaskPersister$WriteQueueItem) $r13;

        $z1 = r4 instanceof com.android.server.am.TaskPersister$ImageWriteQueueItem;

        if $z1 == 0 goto label03;

        r5 = (com.android.server.am.TaskPersister$ImageWriteQueueItem) r4;

        $r14 = r5.<com.android.server.am.TaskPersister$ImageWriteQueueItem: java.lang.String mFilename>;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label03;

        r5.<com.android.server.am.TaskPersister$ImageWriteQueueItem: android.graphics.Bitmap mImage> = r1;

        goto label04;

     label03:
        i0 = i0 + -1;

        goto label02;

     label04:
        if i0 >= 0 goto label05;

        $r10 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r11 = new com.android.server.am.TaskPersister$ImageWriteQueueItem;

        specialinvoke $r11.<com.android.server.am.TaskPersister$ImageWriteQueueItem: void <init>(java.lang.String,android.graphics.Bitmap)>(r2, r1);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label05:
        $r9 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i2 <= 6 goto label06;

        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = -1L;

        goto label07;

     label06:
        $l3 = r0.<com.android.server.am.TaskPersister: long mNextWriteTime>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label07;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = $l6 + 3000L;

        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = $l5;

     label07:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r6 = $r15;

        exitmonitor r3;

     label10:
        throw r6;

     label11:
        specialinvoke r0.<com.android.server.am.TaskPersister: void yieldIfQueueTooDeep()>();

        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)
    {
        com.android.server.am.TaskPersister r0;
        java.lang.String r1;
        android.graphics.Bitmap r2, $r3;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.am.TaskPersister: android.graphics.Bitmap getImageFromWriteQueue(java.lang.String)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = staticinvoke <com.android.server.am.TaskPersister: android.graphics.Bitmap restoreImage(java.lang.String)>(r1);

        return $r3;
    }

    android.graphics.Bitmap getImageFromWriteQueue(java.lang.String)
    {
        com.android.server.am.TaskPersister r0, r2;
        java.lang.String r1, $r10;
        int i0, $i1;
        com.android.server.am.TaskPersister$WriteQueueItem r3;
        com.android.server.am.TaskPersister$ImageWriteQueueItem r4;
        java.lang.Throwable r5, $r12;
        java.util.ArrayList $r7, $r8;
        java.lang.Object $r9;
        boolean $z0, $z1;
        android.graphics.Bitmap $r11;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label2:
        if i0 < 0 goto label5;

        $r8 = r0.<com.android.server.am.TaskPersister: java.util.ArrayList mWriteQueue>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.TaskPersister$WriteQueueItem) $r9;

        $z0 = r3 instanceof com.android.server.am.TaskPersister$ImageWriteQueueItem;

        if $z0 == 0 goto label4;

        r4 = (com.android.server.am.TaskPersister$ImageWriteQueueItem) r3;

        $r10 = r4.<com.android.server.am.TaskPersister$ImageWriteQueueItem: java.lang.String mFilename>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        $r11 = r4.<com.android.server.am.TaskPersister$ImageWriteQueueItem: android.graphics.Bitmap mImage>;

        exitmonitor r2;

     label3:
        return $r11;

     label4:
        i0 = i0 + -1;

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        return null;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private java.io.StringWriter saveToXml(com.android.server.am.TaskRecord) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.am.TaskPersister r0;
        com.android.server.am.TaskRecord r1;
        com.android.internal.util.FastXmlSerializer r2, $r4;
        java.io.StringWriter r3, $r5;
        java.lang.Boolean $r6;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $r4 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r4.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r4;

        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        r3 = $r5;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r3);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "task");

        virtualinvoke r1.<com.android.server.am.TaskRecord: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "task");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void flush()>();

        return r3;
    }

    private java.lang.String fileToString(java.io.File)
    {
        com.android.server.am.TaskPersister r0;
        java.io.File r1;
        java.lang.String r2, r5, $r9, $r10, $r15, $r20, $r21;
        java.io.BufferedReader r3, $r6;
        java.lang.StringBuffer r4, $r8;
        java.io.FileReader $r7;
        long $l0;
        int $i1, $i2;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r18, $r19;
        java.io.IOException $r17;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: java.io.File;

        r2 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

     label1:
        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.FileReader;

        specialinvoke $r7.<java.io.FileReader: void <init>(java.io.File)>(r1);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        r3 = $r6;

        $r8 = new java.lang.StringBuffer;

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $i2 = $i1 * 2;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i2);

        r4 = $r8;

     label2:
        $r9 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r5 = $r9;

        if $r9 == null goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        goto label2;

     label3:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

        $r10 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        return $r10;

     label5:
        $r17 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t read file ");

        $r20 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r21);

        return null;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private com.android.server.am.TaskRecord taskIdToTask(int, java.util.ArrayList)
    {
        com.android.server.am.TaskPersister r0;
        int i0, i1, $i2, $i4;
        java.util.ArrayList r1;
        com.android.server.am.TaskRecord r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.server.am.TaskPersister;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        if i0 >= 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label2:
        if i1 < 0 goto label4;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.TaskRecord) $r7;

        $i4 = r2.<com.android.server.am.TaskRecord: int taskId>;

        if $i4 != i0 goto label3;

        return r2;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore affiliation error looking for taskId=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r6);

        return null;
    }

    java.util.ArrayList restoreTasksLocked()
    {
        com.android.server.am.TaskPersister r0;
        java.util.ArrayList r1, $r11, $r17;
        android.util.ArraySet r2, $r13;
        java.io.File[] r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i17;
        java.io.File r4, $r12, $r50;
        java.io.BufferedReader r5, $r20;
        boolean z0, $z2, z7;
        org.xmlpull.v1.XmlPullParser r6;
        java.lang.String r7, $r24, $r27, $r29, $r35, $r39, $r41, $r52, $r57, $r58, $r59, $r67, $r69, $r72, $r73;
        com.android.server.am.TaskRecord r8, $r19, $r21, r78;
        java.lang.Throwable r9, $r71;
        com.android.server.am.TaskPersister$1 $r14;
        java.util.List $r16;
        java.lang.Object $r18;
        java.lang.StringBuilder $r22, $r25, $r26, $r28, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r40, $r42, $r44, $r45, $r48, $r49, $r51, $r54, $r56, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r68, $r74;
        java.io.FileReader $r23;
        com.android.server.am.ActivityStackSupervisor $r34, $r43;
        java.lang.Integer $r46;
        java.io.IOException $r47, $r53, $r70;
        java.lang.Exception $r55, r76;
        com.android.server.am.TaskRecord[] r79;

        r0 := @this: com.android.server.am.TaskPersister;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r1 = $r11;

        $r13 = new android.util.ArraySet;

        specialinvoke $r13.<android.util.ArraySet: void <init>()>();

        r2 = $r13;

        $r12 = <com.android.server.am.TaskPersister: java.io.File sTasksDir>;

        r3 = virtualinvoke $r12.<java.io.File: java.io.File[] listFiles()>();

        if r3 != null goto label01;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to list files from ");

        $r50 = <com.android.server.am.TaskPersister: java.io.File sTasksDir>;

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r52);

        return r1;

     label01:
        i0 = 0;

     label02:
        $i3 = lengthof r3;

        if i0 >= $i3 goto label28;

        r4 = r3[i0];

        r5 = null;

        z0 = 0;

     label03:
        $r20 = new java.io.BufferedReader;

        $r23 = new java.io.FileReader;

        specialinvoke $r23.<java.io.FileReader: void <init>(java.io.File)>(r4);

        specialinvoke $r20.<java.io.BufferedReader: void <init>(java.io.Reader)>($r23);

        r5 = $r20;

        r6 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r5);

     label04:
        $i8 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i8;

        if $i8 == 1 goto label09;

        if i1 == 3 goto label09;

        r7 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i1 != 2 goto label08;

        $r29 = "task";

        $z2 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label07;

        $r34 = r0.<com.android.server.am.TaskPersister: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r8 = staticinvoke <com.android.server.am.TaskRecord: com.android.server.am.TaskRecord restoreFromXml(org.xmlpull.v1.XmlPullParser,com.android.server.am.ActivityStackSupervisor)>(r6, $r34);

        if r8 == null goto label05;

        r8.<com.android.server.am.TaskRecord: boolean isPersistable> = 1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        i2 = r8.<com.android.server.am.TaskRecord: int taskId>;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r2.<android.util.ArraySet: boolean add(java.lang.Object)>($r46);

        $r43 = r0.<com.android.server.am.TaskPersister: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r43.<com.android.server.am.ActivityStackSupervisor: void setNextTaskId(int)>(i2);

        goto label06;

     label05:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to restore taskFile=");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r41 = specialinvoke r0.<com.android.server.am.TaskPersister: java.lang.String fileToString(java.io.File)>(r4);

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r39);

     label06:
        goto label08;

     label07:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreTasksLocked Unknown xml event=");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("TaskPersister", $r35);

     label08:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r6);

        goto label04;

     label09:
        if r5 == null goto label13;

     label10:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label11:
        goto label13;

     label12:
        $r53 := @caughtexception;

     label13:
        if z0 == 0 goto label27;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting file=");

        $r24 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TaskPersister", $r27);

        virtualinvoke r4.<java.io.File: boolean delete()>();

        goto label27;

     label14:
        $r55 := @caughtexception;

        r76 = $r55;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse ");

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Error ");

        $r59 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TaskPersister", $r59, r76);

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failing file: ");

        $r69 = specialinvoke r0.<com.android.server.am.TaskPersister: java.lang.String fileToString(java.io.File)>(r4);

        $r66 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r67);

        z7 = 1;

     label15:
        if r5 == null goto label19;

     label16:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label17:
        goto label19;

     label18:
        $r70 := @caughtexception;

     label19:
        if z7 == 0 goto label27;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting file=");

        $r73 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r74 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TaskPersister", $r72);

        virtualinvoke r4.<java.io.File: boolean delete()>();

        goto label27;

     label20:
        $r71 := @caughtexception;

        r9 = $r71;

     label21:
        if r5 == null goto label25;

     label22:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label23:
        goto label25;

     label24:
        $r47 := @caughtexception;

     label25:
        if z0 == 0 goto label26;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting file=");

        $r57 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TaskPersister", $r58);

        virtualinvoke r4.<java.io.File: boolean delete()>();

     label26:
        throw r9;

     label27:
        i0 = i0 + 1;

        goto label02;

     label28:
        specialinvoke r0.<com.android.server.am.TaskPersister: void removeObsoleteFiles(android.util.ArraySet)>(r2);

        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i17 = $i5 - 1;

     label29:
        if i17 < 0 goto label30;

        $r18 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r78 = (com.android.server.am.TaskRecord) $r18;

        $i6 = r78.<com.android.server.am.TaskRecord: int mPrevAffiliateTaskId>;

        $r19 = specialinvoke r0.<com.android.server.am.TaskPersister: com.android.server.am.TaskRecord taskIdToTask(int,java.util.ArrayList)>($i6, r1);

        virtualinvoke r78.<com.android.server.am.TaskRecord: void setPrevAffiliate(com.android.server.am.TaskRecord)>($r19);

        $i7 = r78.<com.android.server.am.TaskRecord: int mNextAffiliateTaskId>;

        $r21 = specialinvoke r0.<com.android.server.am.TaskPersister: com.android.server.am.TaskRecord taskIdToTask(int,java.util.ArrayList)>($i7, r1);

        virtualinvoke r78.<com.android.server.am.TaskRecord: void setNextAffiliate(com.android.server.am.TaskRecord)>($r21);

        i17 = i17 + -1;

        goto label29;

     label30:
        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r79 = newarray (com.android.server.am.TaskRecord)[$i4];

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r79);

        $r14 = new com.android.server.am.TaskPersister$1;

        specialinvoke $r14.<com.android.server.am.TaskPersister$1: void <init>(com.android.server.am.TaskPersister)>(r0);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r79, $r14);

        $r17 = new java.util.ArrayList;

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r79);

        specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r16);

        return $r17;

        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Exception from label03 to label09 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label03 to label09 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    private static void removeObsoleteFiles(android.util.ArraySet, java.io.File[])
    {
        android.util.ArraySet r0;
        java.io.File[] r1;
        int i0, i1, i2, $i3;
        java.io.File r2;
        java.lang.String r3, $r5, $r9, $r11, $r15, $r17;
        java.lang.Integer $r6, $r7;
        boolean $z0;
        java.lang.StringBuilder $r8, $r10, $r12, $r14, $r16, $r18;
        java.lang.Exception $r13;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.io.File[];

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", "File error accessing recents directory (too many files open?).");

        return;

     label1:
        i0 = 0;

     label2:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label8;

        r2 = r1[i0];

        r3 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(95);

        if i1 <= 0 goto label7;

     label3:
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5);

        i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeObsoleteFile: Can\'t parse file=");

        $r15 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("TaskPersister", $r17);

        virtualinvoke r2.<java.io.File: boolean delete()>();

        goto label7;

     label6:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z0 = virtualinvoke r0.<android.util.ArraySet: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeObsoleteFile: deleting file=");

        $r9 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TaskPersister", $r11);

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label7:
        i0 = i0 + 1;

        goto label2;

     label8:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void removeObsoleteFiles(android.util.ArraySet)
    {
        com.android.server.am.TaskPersister r0;
        android.util.ArraySet r1;
        java.io.File $r2, $r4;
        java.io.File[] $r3, $r5;

        r0 := @this: com.android.server.am.TaskPersister;

        r1 := @parameter0: android.util.ArraySet;

        $r2 = <com.android.server.am.TaskPersister: java.io.File sTasksDir>;

        $r3 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <com.android.server.am.TaskPersister: void removeObsoleteFiles(android.util.ArraySet,java.io.File[])>(r1, $r3);

        $r4 = <com.android.server.am.TaskPersister: java.io.File sImagesDir>;

        $r5 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <com.android.server.am.TaskPersister: void removeObsoleteFiles(android.util.ArraySet,java.io.File[])>(r1, $r5);

        return;
    }

    static android.graphics.Bitmap restoreImage(java.lang.String)
    {
        java.lang.String r0, $r4, $r7;
        java.lang.StringBuilder $r1, $r3, $r5, $r6;
        java.io.File $r2;
        android.graphics.Bitmap $r8;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.android.server.am.TaskPersister: java.io.File sImagesDir>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r7);

        return $r8;
    }

    static com.android.server.am.ActivityManagerService access$100(com.android.server.am.TaskPersister)
    {
        com.android.server.am.TaskPersister r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @parameter0: com.android.server.am.TaskPersister;

        $r1 = r0.<com.android.server.am.TaskPersister: com.android.server.am.ActivityManagerService mService>;

        return $r1;
    }

    static void access$200(com.android.server.am.TaskPersister, android.util.ArraySet)
    {
        com.android.server.am.TaskPersister r0;
        android.util.ArraySet r1;

        r0 := @parameter0: com.android.server.am.TaskPersister;

        r1 := @parameter1: android.util.ArraySet;

        specialinvoke r0.<com.android.server.am.TaskPersister: void removeObsoleteFiles(android.util.ArraySet)>(r1);

        return;
    }

    static long access$300(com.android.server.am.TaskPersister)
    {
        com.android.server.am.TaskPersister r0;
        long $l0;

        r0 := @parameter0: com.android.server.am.TaskPersister;

        $l0 = r0.<com.android.server.am.TaskPersister: long mNextWriteTime>;

        return $l0;
    }

    static long access$302(com.android.server.am.TaskPersister, long)
    {
        com.android.server.am.TaskPersister r0;
        long l0;

        r0 := @parameter0: com.android.server.am.TaskPersister;

        l0 := @parameter1: long;

        r0.<com.android.server.am.TaskPersister: long mNextWriteTime> = l0;

        return l0;
    }

    static java.io.StringWriter access$400(com.android.server.am.TaskPersister, com.android.server.am.TaskRecord) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.am.TaskPersister r0;
        com.android.server.am.TaskRecord r1;
        java.io.StringWriter $r2;

        r0 := @parameter0: com.android.server.am.TaskPersister;

        r1 := @parameter1: com.android.server.am.TaskRecord;

        $r2 = specialinvoke r0.<com.android.server.am.TaskPersister: java.io.StringWriter saveToXml(com.android.server.am.TaskRecord)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.am.TaskPersister: java.lang.String TAG_TASK> = "task";

        <com.android.server.am.TaskPersister: java.lang.String IMAGE_EXTENSION> = ".png";

        <com.android.server.am.TaskPersister: java.lang.String IMAGES_DIRNAME> = "recent_images";

        <com.android.server.am.TaskPersister: java.lang.String TASK_EXTENSION> = ".xml";

        <com.android.server.am.TaskPersister: java.lang.String TASKS_DIRNAME> = "recent_tasks";

        <com.android.server.am.TaskPersister: java.lang.String RECENTS_FILENAME> = "_task";

        <com.android.server.am.TaskPersister: long FLUSH_QUEUE> = -1L;

        <com.android.server.am.TaskPersister: int MAX_WRITE_QUEUE_LENGTH> = 6;

        <com.android.server.am.TaskPersister: long PRE_TASK_DELAY_MS> = 3000L;

        <com.android.server.am.TaskPersister: long INTER_WRITE_DELAY_MS> = 500L;

        <com.android.server.am.TaskPersister: boolean DEBUG> = 0;

        <com.android.server.am.TaskPersister: java.lang.String TAG> = "TaskPersister";

        return;
    }
}
