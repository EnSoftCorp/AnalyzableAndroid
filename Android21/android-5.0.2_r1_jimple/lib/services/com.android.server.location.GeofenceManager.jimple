public class com.android.server.location.GeofenceManager extends java.lang.Object implements android.location.LocationListener, android.app.PendingIntent$OnFinished
{
    private static final java.lang.String TAG;
    private static final boolean D;
    private static final int MSG_UPDATE_FENCES;
    private static final int MAX_SPEED_M_S;
    private static final long MAX_AGE_NANOS;
    private static final long MIN_INTERVAL_MS;
    private static final long MAX_INTERVAL_MS;
    private final android.content.Context mContext;
    private final android.location.LocationManager mLocationManager;
    private final android.app.AppOpsManager mAppOps;
    private final android.os.PowerManager$WakeLock mWakeLock;
    private final com.android.server.location.GeofenceManager$GeofenceHandler mHandler;
    private final com.android.server.location.LocationBlacklist mBlacklist;
    private java.lang.Object mLock;
    private java.util.List mFences;
    private boolean mReceivingLocationUpdates;
    private long mLocationUpdateInterval;
    private android.location.Location mLastLocationUpdate;
    private boolean mPendingUpdate;

    public void <init>(android.content.Context, com.android.server.location.LocationBlacklist)
    {
        com.android.server.location.GeofenceManager r0;
        android.content.Context r1, $r6, $r9, $r12;
        com.android.server.location.LocationBlacklist r2;
        android.os.PowerManager r3;
        java.lang.Object $r4, $r7, $r10, $r13;
        java.util.LinkedList $r5;
        android.location.LocationManager $r8;
        android.app.AppOpsManager $r11;
        android.os.PowerManager$WakeLock $r14;
        com.android.server.location.GeofenceManager$GeofenceHandler $r15;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.location.LocationBlacklist;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.location.GeofenceManager: java.util.List mFences> = $r5;

        r0.<com.android.server.location.GeofenceManager: android.content.Context mContext> = r1;

        $r6 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r8 = (android.location.LocationManager) $r7;

        r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager> = $r8;

        $r9 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r11 = (android.app.AppOpsManager) $r10;

        r0.<com.android.server.location.GeofenceManager: android.app.AppOpsManager mAppOps> = $r11;

        $r12 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r3 = (android.os.PowerManager) $r13;

        $r14 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GeofenceManager");

        r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock> = $r14;

        $r15 = new com.android.server.location.GeofenceManager$GeofenceHandler;

        specialinvoke $r15.<com.android.server.location.GeofenceManager$GeofenceHandler: void <init>(com.android.server.location.GeofenceManager)>(r0);

        r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler> = $r15;

        r0.<com.android.server.location.GeofenceManager: com.android.server.location.LocationBlacklist mBlacklist> = r2;

        return;
    }

    public void addFence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, int, int, java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        android.location.LocationRequest r1;
        android.location.Geofence r2, $r14;
        android.app.PendingIntent r3, $r16;
        int i0, i1, i2, $i4;
        java.lang.String r4, $r31;
        com.android.server.location.GeofenceState r5, r7, $r9;
        java.lang.Object r6, $r10, $r15;
        java.lang.Throwable r8, $r29;
        boolean $z0, $z2, $z3;
        long $l3;
        java.util.List $r11, $r12, $r13, $r17;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: android.location.Geofence;

        r3 := @parameter2: android.app.PendingIntent;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addFence: request=");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", geofence=");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", packageName=");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r31);

     label1:
        $r9 = new com.android.server.location.GeofenceState;

        $l3 = virtualinvoke r1.<android.location.LocationRequest: long getExpireAt()>();

        specialinvoke $r9.<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,int,int,java.lang.String,android.app.PendingIntent)>(r2, $l3, i0, i1, r4, r3);

        r5 = $r9;

        $r10 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        r6 = $r10;

        entermonitor $r10;

     label2:
        $r11 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $i4 = interfaceinvoke $r11.<java.util.List: int size()>();

        i2 = $i4 - 1;

     label3:
        if i2 < 0 goto label5;

        $r13 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $r15 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.location.GeofenceState) $r15;

        $r14 = r7.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $z2 = virtualinvoke r2.<android.location.Geofence: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label4;

        $r16 = r7.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        $z3 = virtualinvoke r3.<android.app.PendingIntent: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label4;

        $r17 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        interfaceinvoke $r17.<java.util.List: java.lang.Object remove(int)>(i2);

        goto label5;

     label4:
        i2 = i2 + -1;

        goto label3;

     label5:
        $r12 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r5);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r6;

     label6:
        goto label9;

     label7:
        $r29 := @caughtexception;

        r8 = $r29;

        exitmonitor r6;

     label8:
        throw r8;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void removeFence(android.location.Geofence, android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Geofence r1, $r11;
        android.app.PendingIntent r2, $r10;
        java.lang.Object r3, $r7, $r9;
        java.util.Iterator r4;
        com.android.server.location.GeofenceState r5;
        java.lang.Throwable r6, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r8;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r17;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.location.Geofence;

        r2 := @parameter1: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label01;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeFence: fence=");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r17);

     label01:
        $r7 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.location.GeofenceState) $r9;

        $r10 = r5.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        $z2 = virtualinvoke $r10.<android.app.PendingIntent: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label05;

        if r1 != null goto label04;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        goto label05;

     label04:
        $r11 = r5.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $z3 = virtualinvoke r1.<android.location.Geofence: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label05;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label05:
        goto label03;

     label06:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r3;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void removeFence(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1, $r9, $r12;
        java.lang.Object r2, $r6, $r8;
        java.util.Iterator r3;
        com.android.server.location.GeofenceState r4;
        java.lang.Throwable r5, $r14;
        boolean $z0, $z1, $z2;
        java.util.List $r7;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeFence: packageName=");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r12);

     label1:
        $r6 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label2:
        $r7 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.location.GeofenceState) $r8;

        $r9 = r4.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label4:
        goto label3;

     label5:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void removeExpiredFencesLocked()
    {
        com.android.server.location.GeofenceManager r0;
        long l0, $l1;
        java.util.Iterator r1;
        com.android.server.location.GeofenceState r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        byte $b2;

        r0 := @this: com.android.server.location.GeofenceManager;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.location.GeofenceState) $r4;

        $l1 = r2.<com.android.server.location.GeofenceState: long mExpireAt>;

        $b2 = $l1 cmp l0;

        if $b2 >= 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private void scheduleUpdateFencesLocked()
    {
        com.android.server.location.GeofenceManager r0;
        boolean $z0;
        com.android.server.location.GeofenceManager$GeofenceHandler $r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 1;

        $r1 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        virtualinvoke $r1.<com.android.server.location.GeofenceManager$GeofenceHandler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    private android.location.Location getFreshLocationLocked()
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Location r1, $r4;
        long l0, $l1, $l2;
        boolean $z0, $z1;
        byte $b3;
        java.util.List $r2;
        android.location.LocationManager $r3;

        r0 := @this: com.android.server.location.GeofenceManager;

        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate>;

        goto label2;

     label1:
        $r4 = null;

     label2:
        r1 = $r4;

        if r1 != null goto label3;

        $r2 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r3 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        r1 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastLocation()>();

     label3:
        if r1 != null goto label4;

        return null;

     label4:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $l1 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 300000000000L;

        if $b3 <= 0 goto label5;

        return null;

     label5:
        return r1;
    }

    private void updateFences()
    {
        com.android.server.location.GeofenceManager r0;
        java.util.LinkedList r1, r2, $r8, $r10;
        java.lang.Object r3, $r9, $r12, $r14, $r36;
        android.location.Location r4, $r23;
        double d0, d1, $d2, $d3, $d4, $d5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z12;
        java.util.Iterator r5, r54, r56;
        com.android.server.location.GeofenceState r6;
        int i0, i1, $i2, $i7, $i8, $i10, $i11, $i12, $i13;
        java.lang.Throwable r7, $r48;
        java.util.List $r11, $r20;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r26, $r40, $r43, $r45, $r47, $r49, $r51;
        long $l3, $l6, l16;
        android.location.LocationManager $r27, $r34;
        java.lang.String $r28, $r37, $r41, $r44, $r46, $r50, $r52;
        com.android.server.location.GeofenceManager$GeofenceHandler $r29;
        android.location.LocationRequest $r31, $r32, r53;
        byte $b5, $b9;
        android.os.Looper $r33;
        com.android.server.location.LocationBlacklist $r35;
        android.app.PendingIntent $r38, $r39, r55, r57;
        android.app.AppOpsManager $r42;

        r0 := @this: com.android.server.location.GeofenceManager;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r1 = $r8;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r2 = $r10;

        $r9 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        r3 = $r9;

        entermonitor $r9;

     label01:
        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 0;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void removeExpiredFencesLocked()>();

        r4 = specialinvoke r0.<com.android.server.location.GeofenceManager: android.location.Location getFreshLocationLocked()>();

        d0 = 1.7976931348623157E308;

        z0 = 0;

        $r11 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r5 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r36 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.location.GeofenceState) $r36;

        $r35 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.LocationBlacklist mBlacklist>;

        $r37 = r6.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $z8 = virtualinvoke $r35.<com.android.server.location.LocationBlacklist: boolean isBlacklisted(java.lang.String)>($r37);

        if $z8 == 0 goto label03;

        $z12 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z12 == 0 goto label02;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping geofence processing for blacklisted app: ");

        $r52 = r6.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r50);

        goto label02;

     label03:
        $i8 = r6.<com.android.server.location.GeofenceState: int mAllowedResolutionLevel>;

        i0 = staticinvoke <com.android.server.LocationManagerService: int resolutionLevelToOp(int)>($i8);

        if i0 < 0 goto label04;

        $r42 = r0.<com.android.server.location.GeofenceManager: android.app.AppOpsManager mAppOps>;

        $i13 = r6.<com.android.server.location.GeofenceState: int mUid>;

        $r41 = r6.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $i12 = virtualinvoke $r42.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(1, $i13, $r41);

        if $i12 == 0 goto label04;

        $z10 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z10 == 0 goto label02;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping geofence processing for no op app: ");

        $r44 = r6.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r46);

        goto label02;

     label04:
        z0 = 1;

        if r4 == null goto label07;

        i1 = virtualinvoke r6.<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>(r4);

        $i10 = i1 & 1;

        if $i10 == 0 goto label05;

        $r39 = r6.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r39);

     label05:
        $i11 = i1 & 2;

        if $i11 == 0 goto label06;

        $r38 = r6.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r38);

     label06:
        d1 = virtualinvoke r6.<com.android.server.location.GeofenceState: double getDistanceToBoundary()>();

        $b9 = d1 cmpg d0;

        if $b9 >= 0 goto label07;

        d0 = d1;

     label07:
        goto label02;

     label08:
        if z0 == 0 goto label13;

        if r4 == null goto label09;

        $i7 = staticinvoke <java.lang.Double: int compare(double,double)>(d0, 1.7976931348623157E308);

        if $i7 == 0 goto label09;

        $d3 = d0 * 1000.0;

        $d2 = $d3 / 100.0;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(60000.0, $d2);

        $d5 = staticinvoke <java.lang.Math: double min(double,double)>(7200000.0, $d4);

        l16 = (long) $d5;

        goto label10;

     label09:
        l16 = 60000L;

     label10:
        $z7 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z7 == 0 goto label11;

        $l6 = r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval>;

        $b5 = $l6 cmp l16;

        if $b5 == 0 goto label12;

     label11:
        r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates> = 1;

        r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval> = l16;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = r4;

        $r32 = new android.location.LocationRequest;

        specialinvoke $r32.<android.location.LocationRequest: void <init>()>();

        r53 = $r32;

        $r31 = virtualinvoke r53.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l16);

        virtualinvoke $r31.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(0L);

        $r34 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        $r29 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        $r33 = virtualinvoke $r29.<com.android.server.location.GeofenceManager$GeofenceHandler: android.os.Looper getLooper()>();

        virtualinvoke $r34.<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>(r53, r0, $r33);

     label12:
        goto label14;

     label13:
        $z3 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z3 == 0 goto label14;

        r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates> = 0;

        r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval> = 0L;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = null;

        $r27 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        virtualinvoke $r27.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);

     label14:
        $z2 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z2 == 0 goto label15;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateFences: location=");

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mFences.size()=");

        $r20 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $i2 = interfaceinvoke $r20.<java.util.List: int size()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mReceivingLocationUpdates=");

        $z6 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLocationUpdateInterval=");

        $l3 = r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval>;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLastLocationUpdate=");

        $r23 = r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r28);

     label15:
        exitmonitor r3;

     label16:
        goto label19;

     label17:
        $r48 := @caughtexception;

        r7 = $r48;

        exitmonitor r3;

     label18:
        throw r7;

     label19:
        r54 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z4 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label21;

        $r14 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (android.app.PendingIntent) $r14;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntentExit(android.app.PendingIntent)>(r55);

        goto label20;

     label21:
        r56 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z5 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label23;

        $r12 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (android.app.PendingIntent) $r12;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntentEnter(android.app.PendingIntent)>(r57);

        goto label22;

     label23:
        return;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void sendIntentEnter(android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendIntentEnter: pendingIntent=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r8);

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("entering", 1);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>(r1, r2);

        return;
    }

    private void sendIntentExit(android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendIntentExit: pendingIntent=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r8);

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("entering", 0);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>(r1, r2);

        return;
    }

    private void sendIntent(android.app.PendingIntent, android.content.Intent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2;
        android.os.PowerManager$WakeLock $r4, $r7;
        android.content.Context $r5;
        android.app.PendingIntent$CanceledException $r6;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.Intent;

        $r4 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        $r5 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        virtualinvoke r1.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>($r5, 0, r2, r0, null, "android.permission.ACCESS_FINE_LOCATION");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r0.<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>(null, r1);

        $r7 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public void onLocationChanged(android.location.Location)
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Location r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0, $z1;
        com.android.server.location.GeofenceManager$GeofenceHandler $r5;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.location.Location;

        $r4 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = r1;

     label2:
        $z1 = r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate>;

        if $z1 == 0 goto label3;

        $r5 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        virtualinvoke $r5.<com.android.server.location.GeofenceManager$GeofenceHandler: void removeMessages(int)>(1);

        goto label4;

     label3:
        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 1;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void updateFences()>();

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onStatusChanged(java.lang.String, int, android.os.Bundle)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        return;
    }

    public void onProviderEnabled(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onProviderDisabled(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2;
        int i0;
        java.lang.String r3;
        android.os.Bundle r4;
        android.os.PowerManager$WakeLock $r5;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        $r5 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.location.GeofenceManager r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        com.android.server.location.GeofenceState r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r7, $r11;
        android.location.Geofence $r10;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Geofences:");

        $r4 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.GeofenceState) $r5;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("    ");

        $r7 = r3.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" ");

        $r10 = r3.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $r11 = virtualinvoke $r10.<android.location.Geofence: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\n");

        goto label1;

     label2:
        return;
    }

    static void access$000(com.android.server.location.GeofenceManager)
    {
        com.android.server.location.GeofenceManager r0;

        r0 := @parameter0: com.android.server.location.GeofenceManager;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void updateFences()>();

        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.GeofenceManager: long MAX_INTERVAL_MS> = 7200000L;

        <com.android.server.location.GeofenceManager: long MIN_INTERVAL_MS> = 60000L;

        <com.android.server.location.GeofenceManager: long MAX_AGE_NANOS> = 300000000000L;

        <com.android.server.location.GeofenceManager: int MAX_SPEED_M_S> = 100;

        <com.android.server.location.GeofenceManager: int MSG_UPDATE_FENCES> = 1;

        <com.android.server.location.GeofenceManager: java.lang.String TAG> = "GeofenceManager";

        $z0 = <com.android.server.LocationManagerService: boolean D>;

        <com.android.server.location.GeofenceManager: boolean D> = $z0;

        return;
    }
}
