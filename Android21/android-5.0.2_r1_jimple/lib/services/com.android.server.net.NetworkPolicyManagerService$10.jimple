class com.android.server.net.NetworkPolicyManagerService$10 extends android.content.BroadcastReceiver
{
    final com.android.server.net.NetworkPolicyManagerService this$0;

    void <init>(com.android.server.net.NetworkPolicyManagerService)
    {
        com.android.server.net.NetworkPolicyManagerService$10 r0;
        com.android.server.net.NetworkPolicyManagerService r1;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$10;

        r1 := @parameter0: com.android.server.net.NetworkPolicyManagerService;

        r0.<com.android.server.net.NetworkPolicyManagerService$10: com.android.server.net.NetworkPolicyManagerService this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.net.NetworkPolicyManagerService$10 r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0;
        android.net.wifi.WifiConfiguration r3;
        android.net.NetworkTemplate r4;
        java.lang.Object r5, $r11;
        java.lang.Throwable r6, $r17;
        android.os.Parcelable $r7;
        java.lang.String $r8, $r9;
        com.android.server.net.NetworkPolicyManagerService $r10, $r12, $r14, $r18;
        boolean $z0;
        android.util.ArrayMap $r13, $r16;

        r0 := @this: com.android.server.net.NetworkPolicyManagerService$10;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("changeReason", 0);

        if i0 != 1 goto label6;

        $r7 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("wifiConfiguration");

        r3 = (android.net.wifi.WifiConfiguration) $r7;

        $r8 = r3.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r8 == null goto label6;

        $r9 = r3.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        r4 = staticinvoke <android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.net.NetworkPolicyManagerService$10: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r11 = $r10.<com.android.server.net.NetworkPolicyManagerService: java.lang.Object mRulesLock>;

        r5 = $r11;

        entermonitor $r11;

     label1:
        $r12 = r0.<com.android.server.net.NetworkPolicyManagerService$10: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r13 = $r12.<com.android.server.net.NetworkPolicyManagerService: android.util.ArrayMap mNetworkPolicy>;

        $z0 = virtualinvoke $r13.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r14 = r0.<com.android.server.net.NetworkPolicyManagerService$10: com.android.server.net.NetworkPolicyManagerService this$0>;

        $r16 = $r14.<com.android.server.net.NetworkPolicyManagerService: android.util.ArrayMap mNetworkPolicy>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

        $r18 = r0.<com.android.server.net.NetworkPolicyManagerService$10: com.android.server.net.NetworkPolicyManagerService this$0>;

        virtualinvoke $r18.<com.android.server.net.NetworkPolicyManagerService: void writePolicyLocked()>();

     label2:
        exitmonitor r5;

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r5;

     label5:
        throw r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
