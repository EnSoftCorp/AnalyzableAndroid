public class com.android.server.am.LockToAppRequestDialog extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final com.android.server.am.ActivityManagerService mService;
    private android.app.AlertDialog mDialog;
    private com.android.server.am.TaskRecord mRequestedTask;
    private android.widget.CheckBox mCheckbox;
    private com.android.internal.widget.ILockSettings mLockSettingsService;
    private android.view.accessibility.AccessibilityManager mAccessibilityService;

    public void <init>(android.content.Context, com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.LockToAppRequestDialog r0;
        android.content.Context r1, $r3;
        com.android.server.am.ActivityManagerService r2;
        java.lang.Object $r4;
        android.view.accessibility.AccessibilityManager $r5;

        r0 := @this: com.android.server.am.LockToAppRequestDialog;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.LockToAppRequestDialog: android.content.Context mContext> = r1;

        $r3 = r0.<com.android.server.am.LockToAppRequestDialog: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r5 = (android.view.accessibility.AccessibilityManager) $r4;

        r0.<com.android.server.am.LockToAppRequestDialog: android.view.accessibility.AccessibilityManager mAccessibilityService> = $r5;

        r0.<com.android.server.am.LockToAppRequestDialog: com.android.server.am.ActivityManagerService mService> = r2;

        return;
    }

    private com.android.internal.widget.ILockSettings getLockSettings()
    {
        com.android.server.am.LockToAppRequestDialog r0;
        com.android.internal.widget.ILockSettings $r1, $r2, $r4;
        android.os.IBinder $r3;
        com.android.internal.widget.LockPatternUtilsCache $r5;

        r0 := @this: com.android.server.am.LockToAppRequestDialog;

        $r1 = r0.<com.android.server.am.LockToAppRequestDialog: com.android.internal.widget.ILockSettings mLockSettingsService>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("lock_settings");

        $r4 = staticinvoke <com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings asInterface(android.os.IBinder)>($r3);

        $r5 = staticinvoke <com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache getInstance(com.android.internal.widget.ILockSettings)>($r4);

        r0.<com.android.server.am.LockToAppRequestDialog: com.android.internal.widget.ILockSettings mLockSettingsService> = $r5;

     label1:
        $r2 = r0.<com.android.server.am.LockToAppRequestDialog: com.android.internal.widget.ILockSettings mLockSettingsService>;

        return $r2;
    }

    private int getLockString(int)
    {
        com.android.server.am.LockToAppRequestDialog r0;
        int i0, i1;
        com.android.internal.widget.ILockSettings $r1, $r2;
        long $l2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.am.LockToAppRequestDialog;

        i0 := @parameter0: int;

     label1:
        $r1 = specialinvoke r0.<com.android.server.am.LockToAppRequestDialog: com.android.internal.widget.ILockSettings getLockSettings()>();

        $l2 = interfaceinvoke $r1.<com.android.internal.widget.ILockSettings: long getLong(java.lang.String,long,int)>("lockscreen.password_type", 0L, i0);

        i1 = (int) $l2;

        lookupswitch(i1)
        {
            case 65536: goto label4;
            case 131072: goto label2;
            case 196608: goto label2;
            case 262144: goto label3;
            case 327680: goto label3;
            case 393216: goto label3;
            default: goto label6;
        };

     label2:
        return 17041020;

     label3:
        return 17041022;

     label4:
        $r2 = specialinvoke r0.<com.android.server.am.LockToAppRequestDialog: com.android.internal.widget.ILockSettings getLockSettings()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: boolean getBoolean(java.lang.String,boolean,int)>("lock_pattern_autolock", 0, i0);

        if $z0 == 0 goto label6;

     label5:
        return 17041021;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    public void clearPrompt()
    {
        com.android.server.am.LockToAppRequestDialog r0;
        android.app.AlertDialog $r1, $r2;

        r0 := @this: com.android.server.am.LockToAppRequestDialog;

        $r1 = r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog>;

        virtualinvoke $r2.<android.app.AlertDialog: void dismiss()>();

        r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog> = null;

     label1:
        return;
    }

    public void showLockTaskPrompt(com.android.server.am.TaskRecord)
    {
        com.android.server.am.LockToAppRequestDialog r0;
        com.android.server.am.TaskRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.res.Resources r2;
        java.lang.String r3, r5, $r10, $r11, $r13;
        android.app.AlertDialog$Builder r4, $r7, $r9, $r12, $r14;
        boolean z0, $z1, $z2;
        android.view.accessibility.AccessibilityManager $r6;
        android.content.Context $r8, $r24, $r25;
        android.app.AlertDialog $r15, $r17, $r19, $r21, $r22;
        android.view.Window $r16, $r18;
        android.view.WindowManager$LayoutParams $r20;
        android.view.View $r23;
        android.content.ContentResolver $r26;
        android.widget.CheckBox $r27, $r28, $r30;
        android.provider.Settings$SettingNotFoundException $r31;

        r0 := @this: com.android.server.am.LockToAppRequestDialog;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        virtualinvoke r0.<com.android.server.am.LockToAppRequestDialog: void clearPrompt()>();

        r0.<com.android.server.am.LockToAppRequestDialog: com.android.server.am.TaskRecord mRequestedTask> = r1;

        $i1 = r1.<com.android.server.am.TaskRecord: int userId>;

        i0 = specialinvoke r0.<com.android.server.am.LockToAppRequestDialog: int getLockString(int)>($i1);

        r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r6 = r0.<com.android.server.am.LockToAppRequestDialog: android.view.accessibility.AccessibilityManager mAccessibilityService>;

        $z1 = virtualinvoke $r6.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z1 == 0 goto label01;

        $i5 = 17041015;

        goto label02;

     label01:
        $i5 = 17041014;

     label02:
        r3 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i5);

        $r7 = new android.app.AlertDialog$Builder;

        $r8 = r0.<com.android.server.am.LockToAppRequestDialog: android.content.Context mContext>;

        specialinvoke $r7.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r8);

        $r10 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(17041013);

        $r9 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r10);

        $r12 = virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r3);

        $r11 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(17041017);

        $r14 = virtualinvoke $r12.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r11, r0);

        $r13 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(17041016);

        r4 = virtualinvoke $r14.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r13, r0);

        if i0 == 0 goto label03;

        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(int)>(17367147);

     label03:
        $r15 = virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog> = $r15;

        $r17 = r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog>;

        $r16 = virtualinvoke $r17.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r16.<android.view.Window: void setType(int)>(2003);

        $r19 = r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog>;

        $r18 = virtualinvoke $r19.<android.app.AlertDialog: android.view.Window getWindow()>();

        $r20 = virtualinvoke $r18.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i2 = $r20.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i3 = $i2 | 16;

        $r20.<android.view.WindowManager$LayoutParams: int privateFlags> = $i3;

        $r21 = r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog>;

        virtualinvoke $r21.<android.app.AlertDialog: void show()>();

        if i0 == 0 goto label10;

        $r24 = r0.<com.android.server.am.LockToAppRequestDialog: android.content.Context mContext>;

        r5 = virtualinvoke $r24.<android.content.Context: java.lang.String getString(int)>(i0);

        $r22 = r0.<com.android.server.am.LockToAppRequestDialog: android.app.AlertDialog mDialog>;

        $r23 = virtualinvoke $r22.<android.app.AlertDialog: android.view.View findViewById(int)>(16909084);

        $r27 = (android.widget.CheckBox) $r23;

        r0.<com.android.server.am.LockToAppRequestDialog: android.widget.CheckBox mCheckbox> = $r27;

        $r28 = r0.<com.android.server.am.LockToAppRequestDialog: android.widget.CheckBox mCheckbox>;

        virtualinvoke $r28.<android.widget.CheckBox: void setText(java.lang.CharSequence)>(r5);

     label04:
        $r25 = r0.<com.android.server.am.LockToAppRequestDialog: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>($r26, "lock_to_app_exit_locked");

        if $i4 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z0 = $z2;

        $r30 = r0.<com.android.server.am.LockToAppRequestDialog: android.widget.CheckBox mCheckbox>;

        virtualinvoke $r30.<android.widget.CheckBox: void setChecked(boolean)>(z0);

     label07:
        goto label09;

     label08:
        $r31 := @caughtexception;

     label09:
        goto label11;

     label10:
        r0.<com.android.server.am.LockToAppRequestDialog: android.widget.CheckBox mCheckbox> = null;

     label11:
        return;

        catch android.provider.Settings$SettingNotFoundException from label04 to label07 with label08;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        com.android.server.am.LockToAppRequestDialog r0;
        android.content.DialogInterface r1;
        int i0;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.widget.CheckBox $r4, $r7;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityManagerService $r6;
        boolean $z1;
        byte $b3;

        r0 := @this: com.android.server.am.LockToAppRequestDialog;

        r1 := @parameter0: android.content.DialogInterface;

        i0 := @parameter1: int;

        if -1 != i0 goto label3;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", "accept lock-to-app request");

        $r2 = r0.<com.android.server.am.LockToAppRequestDialog: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<com.android.server.am.LockToAppRequestDialog: android.widget.CheckBox mCheckbox>;

        if $r4 == null goto label1;

        $r7 = r0.<com.android.server.am.LockToAppRequestDialog: android.widget.CheckBox mCheckbox>;

        $z1 = virtualinvoke $r7.<android.widget.CheckBox: boolean isChecked()>();

        if $z1 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r3, "lock_to_app_exit_locked", $b3);

        $r6 = r0.<com.android.server.am.LockToAppRequestDialog: com.android.server.am.ActivityManagerService mService>;

        $r5 = r0.<com.android.server.am.LockToAppRequestDialog: com.android.server.am.TaskRecord mRequestedTask>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void startLockTaskMode(com.android.server.am.TaskRecord)>($r5);

        goto label4;

     label3:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", "ignore lock-to-app request");

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.LockToAppRequestDialog: java.lang.String TAG> = "ActivityManager";

        return;
    }
}
