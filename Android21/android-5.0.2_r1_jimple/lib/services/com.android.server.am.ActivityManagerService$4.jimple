class com.android.server.am.ActivityManagerService$4 extends java.lang.Thread
{
    final com.android.server.am.ActivityManagerService this$0;

    void <init>(com.android.server.am.ActivityManagerService, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$4 r0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.String r2;

        r0 := @this: com.android.server.am.ActivityManagerService$4;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.am.ActivityManagerService$4: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.server.am.ActivityManagerService$4 r0, r1;
        long l0, l1, l2, $l3, $l4, $l5, $l6;
        java.lang.Throwable r2, $r12;
        com.android.server.am.ActivityManagerService $r4, $r6, $r7, $r9;
        java.util.concurrent.atomic.AtomicLong $r5;
        byte $b7, $b8;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        java.lang.Exception $r10, r14;
        java.lang.InterruptedException $r11;

        r0 := @this: com.android.server.am.ActivityManagerService$4;

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService$4: com.android.server.am.ActivityManagerService this$0>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l3 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l4 = $l3 + 268435455L;

        l1 = $l4 - l0;

        $r6 = r0.<com.android.server.am.ActivityManagerService$4: com.android.server.am.ActivityManagerService this$0>;

        $l6 = $r6.<com.android.server.am.ActivityManagerService: long mLastWriteTime>;

        $l5 = $l6 + 1800000L;

        l2 = $l5 - l0;

        $b8 = l2 cmp l1;

        if $b8 >= 0 goto label03;

        l1 = l2;

     label03:
        $b7 = l1 cmp 0L;

        if $b7 <= 0 goto label04;

        $r9 = r0.<com.android.server.am.ActivityManagerService$4: com.android.server.am.ActivityManagerService this$0>;

        $r8 = $r9.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        virtualinvoke r0.<java.lang.Object: void wait(long)>(l1);

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label07:
        throw r2;

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

     label10:
        $r7 = r0.<com.android.server.am.ActivityManagerService$4: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label11:
        goto label01;

     label12:
        $r10 := @caughtexception;

        r14 = $r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unexpected exception collecting process stats", r14);

        goto label01;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.InterruptedException from label01 to label08 with label09;
        catch java.lang.Exception from label01 to label11 with label12;
    }
}
