class com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask extends com.android.server.backup.BackupManagerService$FullBackupTask
{
    static final java.lang.String TAG;
    java.util.ArrayList mPackages;
    boolean mUpdateSchedule;
    java.util.concurrent.atomic.AtomicBoolean mLatch;
    java.util.concurrent.atomic.AtomicBoolean mKeepRunning;
    com.android.server.backup.FullBackupJob mJob;
    final com.android.server.backup.BackupManagerService this$0;

    void <init>(com.android.server.backup.BackupManagerService, android.app.backup.IFullBackupRestoreObserver, java.lang.String[], boolean, com.android.server.backup.FullBackupJob, java.util.concurrent.atomic.AtomicBoolean)
    {
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask r0;
        com.android.server.backup.BackupManagerService r1;
        android.app.backup.IFullBackupRestoreObserver r2;
        java.lang.String[] r3, r6;
        boolean z0, $z1;
        com.android.server.backup.FullBackupJob r4;
        java.util.concurrent.atomic.AtomicBoolean r5, $r9;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r7, $r17, $r22;
        android.content.pm.PackageInfo r8;
        java.util.ArrayList $r10, $r14;
        android.content.pm.PackageManager $r11;
        android.content.pm.ApplicationInfo $r12, $r13, $r15;
        android.content.pm.PackageManager$NameNotFoundException $r16;
        java.lang.StringBuilder $r18, $r19, $r20, $r21;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService;

        r2 := @parameter1: android.app.backup.IFullBackupRestoreObserver;

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        r4 := @parameter4: com.android.server.backup.FullBackupJob;

        r5 := @parameter5: java.util.concurrent.atomic.AtomicBoolean;

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.backup.BackupManagerService$FullBackupTask: void <init>(com.android.server.backup.BackupManagerService,android.app.backup.IFullBackupRestoreObserver)>(r1, r2);

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule> = z0;

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch> = r5;

        $r9 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mKeepRunning> = $r9;

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob> = r4;

        $r10 = new java.util.ArrayList;

        $i2 = lengthof r3;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.ArrayList mPackages> = $r10;

        r6 = r3;

        i0 = lengthof r6;

        i1 = 0;

     label01:
        if i1 >= i0 goto label10;

        r7 = r6[i1];

     label02:
        $r11 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>(r1);

        r8 = virtualinvoke $r11.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r7, 64);

        $r12 = r8.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r12.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i4 & 32768;

        if $i3 == 0 goto label03;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("com.android.sharedstoragebackup");

        if $z1 == 0 goto label04;

     label03:
        goto label09;

     label04:
        $r13 = r8.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        if $i5 >= 10000 goto label06;

        $r15 = r8.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r17 = $r15.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r17 != null goto label06;

     label05:
        goto label09;

     label06:
        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.ArrayList mPackages>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label07:
        goto label09;

     label08:
        $r16 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested package ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found; ignoring");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PFTBT", $r22);

     label09:
        i1 = i1 + 1;

        goto label01;

     label10:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label08;
    }

    public void setRunning(boolean)
    {
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask r0;
        boolean z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mKeepRunning>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(z0);

        return;
    }

    public void run()
    {
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask r0;
        android.os.ParcelFileDescriptor[] r1, r2;
        android.content.pm.PackageInfo r3;
        com.android.internal.backup.IBackupTransport r4;
        java.lang.Object r5, r21, $r27, $r38, $r58, $r100, $r113, $r116, r133, r135, r138;
        java.lang.Throwable r6, r7, r13, r14, r15, r16, r17, r18, r19, r20, r23, $r95, $r96, $r109, $r121, $r122, $r124, $r125, $r126, $r128, $r130, $r131;
        java.util.concurrent.atomic.AtomicBoolean r8, $r31, $r32, $r33, $r54, $r55, $r56, $r76, $r78, $r88, $r101, $r102, $r103, $r104, $r105, $r106, $r118, $r119, $r120, r132, r134, r136, r139, r140;
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner r9, $r74;
        java.io.FileInputStream r10, $r83;
        java.io.FileOutputStream r11, $r82;
        byte[] r12;
        int i0, i2, i3, i4, i5;
        com.android.server.backup.BackupManagerService $r22, $r24, $r28, $r30, $r34, $r47, $r57, $r59, $r63, $r68, $r94, $r97, $r99, $r107, $r112, $r114, $r115, $r117, $r129;
        java.lang.String $r25, $r39, $r41, $r43, $r44, $r48, $r53, $r62, $r66, $r67, $r69, $r89, $r91;
        java.util.ArrayList $r26, $r37;
        com.android.server.backup.FullBackupJob $r29, $r35, $r50, $r65, $r93, $r98, $r108, $r111, $r123, $r127;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r36, $r40, $r42, $r46, $r51, $r52, $r60, $r61, $r64, $r70, $r85, $r86, $r87, $r90, $r92;
        android.os.ParcelFileDescriptor $r45, $r72, $r75, $r77, $r79, $r84;
        java.lang.Object[] $r49, $r71;
        java.lang.Thread $r73;
        long $l1;
        java.io.FileDescriptor $r80, $r81;
        java.lang.Exception $r110, r137;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask;

        r1 = null;

        r2 = null;

     label01:
        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r25 = $r22.<com.android.server.backup.BackupManagerService: java.lang.String mCurrentTransport>;

        r4 = staticinvoke <com.android.server.backup.BackupManagerService: com.android.internal.backup.IBackupTransport access$100(com.android.server.backup.BackupManagerService,java.lang.String)>($r24, $r25);

        if r4 != null goto label15;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Transport not present; full data backup not performed");

     label02:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r2);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r1);

        $r98 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        if $r98 == null goto label03;

        $r93 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        virtualinvoke $r93.<com.android.server.backup.FullBackupJob: void finishBackupPass()>();

     label03:
        $r97 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r100 = $r97.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r5 = $r100;

        entermonitor $r100;

     label04:
        $r99 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r99.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask mRunningFullBackupTask> = null;

        exitmonitor r5;

     label05:
        goto label08;

     label06:
        $r122 := @caughtexception;

        r6 = $r122;

        exitmonitor r5;

     label07:
        throw r6;

     label08:
        $r101 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r132 = $r101;

        entermonitor $r101;

     label09:
        $r103 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r103.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r102 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r102.<java.lang.Object: void notifyAll()>();

        exitmonitor r132;

     label10:
        goto label13;

     label11:
        $r95 := @caughtexception;

        r7 = $r95;

        exitmonitor r132;

     label12:
        throw r7;

     label13:
        $z5 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule>;

        if $z5 == 0 goto label14;

        $r94 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r94.<com.android.server.backup.BackupManagerService: void scheduleNextFullBackupJob()>();

     label14:
        return;

     label15:
        $r26 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.ArrayList mPackages>;

        i2 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        i3 = 0;

     label16:
        if i3 >= i2 goto label41;

        $r37 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.ArrayList mPackages>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.content.pm.PackageInfo) $r38;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating full-data transport backup of ");

        $r41 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PFTBT", $r39);

        $r43 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2840, $r43);

        r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        $r45 = r2[0];

        i4 = interfaceinvoke r4.<com.android.internal.backup.IBackupTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>(r3, $r45);

        if i4 != 0 goto label23;

        $r77 = r2[0];

        virtualinvoke $r77.<android.os.ParcelFileDescriptor: void close()>();

        r2[0] = null;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        $r76 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r76.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r8 = $r76;

        $r74 = new com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner;

        $r75 = r1[1];

        specialinvoke $r74.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: void <init>(com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask,android.os.ParcelFileDescriptor,android.content.pm.PackageInfo,java.util.concurrent.atomic.AtomicBoolean)>(r0, $r75, r3, r8);

        r9 = $r74;

        $r72 = r1[1];

        virtualinvoke $r72.<android.os.ParcelFileDescriptor: void close()>();

        r1[1] = null;

        $r73 = new java.lang.Thread;

        specialinvoke $r73.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r9, "package-backup-bridge");

        virtualinvoke $r73.<java.lang.Thread: void start()>();

        $r83 = new java.io.FileInputStream;

        $r84 = r1[0];

        $r81 = virtualinvoke $r84.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r83.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r81);

        r10 = $r83;

        $r82 = new java.io.FileOutputStream;

        $r79 = r2[1];

        $r80 = virtualinvoke $r79.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r82.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r80);

        r11 = $r82;

        r12 = newarray (byte)[8192];

     label17:
        $r78 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mKeepRunning>;

        $z3 = virtualinvoke $r78.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 != 0 goto label18;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PFTBT", "Full backup task told to stop");

        goto label20;

     label18:
        i5 = virtualinvoke r10.<java.io.FileInputStream: int read(byte[])>(r12);

        if i5 <= 0 goto label19;

        virtualinvoke r11.<java.io.FileOutputStream: void write(byte[],int,int)>(r12, 0, i5);

        i4 = interfaceinvoke r4.<com.android.internal.backup.IBackupTransport: int sendBackupData(int)>(i5);

     label19:
        if i5 <= 0 goto label20;

        if i4 == 0 goto label17;

     label20:
        $r88 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mKeepRunning>;

        $z4 = virtualinvoke $r88.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z4 != 0 goto label21;

        i4 = -1000;

        interfaceinvoke r4.<com.android.internal.backup.IBackupTransport: void cancelFullBackup()>();

        goto label22;

     label21:
        i0 = interfaceinvoke r4.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

        if i4 != 0 goto label22;

        i4 = i0;

     label22:
        if i4 == 0 goto label23;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error ");

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r92 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" backing up ");

        $r91 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PFTBT", $r89);

     label23:
        $z1 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule>;

        if $z1 == 0 goto label24;

        $r68 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r67 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r68.<com.android.server.backup.BackupManagerService: void enqueueFullBackup(java.lang.String,long)>($r67, $l1);

     label24:
        if i4 != -1002 goto label25;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport rejected backup of ");

        $r62 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r70 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PFTBT", $r69);

        $r71 = newarray (java.lang.Object)[2];

        $r66 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r71[0] = $r66;

        $r71[1] = "transport rejected";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2841, $r71);

        goto label40;

     label25:
        if i4 == 0 goto label39;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport failed; aborting backup: ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PFTBT", $r53);

        $r49 = newarray (java.lang.Object)[0];

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2842, $r49);

     label26:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r2);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r1);

        $r50 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        if $r50 == null goto label27;

        $r65 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        virtualinvoke $r65.<com.android.server.backup.FullBackupJob: void finishBackupPass()>();

     label27:
        $r57 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r58 = $r57.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r133 = $r58;

        entermonitor $r58;

     label28:
        $r59 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r59.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask mRunningFullBackupTask> = null;

        exitmonitor r133;

     label29:
        goto label32;

     label30:
        $r121 := @caughtexception;

        r13 = $r121;

        exitmonitor r133;

     label31:
        throw r13;

     label32:
        $r54 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r134 = $r54;

        entermonitor $r54;

     label33:
        $r55 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r55.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r56 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r56.<java.lang.Object: void notifyAll()>();

        exitmonitor r134;

     label34:
        goto label37;

     label35:
        $r109 := @caughtexception;

        r15 = $r109;

        exitmonitor r134;

     label36:
        throw r15;

     label37:
        $z2 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule>;

        if $z2 == 0 goto label38;

        $r63 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r63.<com.android.server.backup.BackupManagerService: void scheduleNextFullBackupJob()>();

     label38:
        return;

     label39:
        $r44 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2843, $r44);

        $r47 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r48 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r47.<com.android.server.backup.BackupManagerService: void logBackupComplete(java.lang.String)>($r48);

     label40:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r2);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r1);

        i3 = i3 + 1;

        goto label16;

     label41:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PFTBT", "Full backup completed.");

     label42:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r2);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r1);

        $r29 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        if $r29 == null goto label43;

        $r35 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        virtualinvoke $r35.<com.android.server.backup.FullBackupJob: void finishBackupPass()>();

     label43:
        $r30 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r27 = $r30.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r135 = $r27;

        entermonitor $r27;

     label44:
        $r28 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r28.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask mRunningFullBackupTask> = null;

        exitmonitor r135;

     label45:
        goto label48;

     label46:
        $r131 := @caughtexception;

        r14 = $r131;

        exitmonitor r135;

     label47:
        throw r14;

     label48:
        $r33 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r136 = $r33;

        entermonitor $r33;

     label49:
        $r31 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r31.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r32 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r32.<java.lang.Object: void notifyAll()>();

        exitmonitor r136;

     label50:
        goto label53;

     label51:
        $r128 := @caughtexception;

        r17 = $r128;

        exitmonitor r136;

     label52:
        throw r17;

     label53:
        $z0 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule>;

        if $z0 == 0 goto label81;

        $r34 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r34.<com.android.server.backup.BackupManagerService: void scheduleNextFullBackupJob()>();

        goto label81;

     label54:
        $r110 := @caughtexception;

        r137 = $r110;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PFTBT", "Exception trying full transport backup", r137);

     label55:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r2);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r1);

        $r111 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        if $r111 == null goto label56;

        $r108 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        virtualinvoke $r108.<com.android.server.backup.FullBackupJob: void finishBackupPass()>();

     label56:
        $r112 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r113 = $r112.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r138 = $r113;

        entermonitor $r113;

     label57:
        $r114 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r114.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask mRunningFullBackupTask> = null;

        exitmonitor r138;

     label58:
        goto label61;

     label59:
        $r96 := @caughtexception;

        r16 = $r96;

        exitmonitor r138;

     label60:
        throw r16;

     label61:
        $r104 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r139 = $r104;

        entermonitor $r104;

     label62:
        $r105 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r105.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r106 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r106.<java.lang.Object: void notifyAll()>();

        exitmonitor r139;

     label63:
        goto label66;

     label64:
        $r126 := @caughtexception;

        r19 = $r126;

        exitmonitor r139;

     label65:
        throw r19;

     label66:
        $z6 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule>;

        if $z6 == 0 goto label81;

        $r107 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r107.<com.android.server.backup.BackupManagerService: void scheduleNextFullBackupJob()>();

        goto label81;

     label67:
        $r124 := @caughtexception;

        r18 = $r124;

     label68:
        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r2);

        virtualinvoke r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: void cleanUpPipes(android.os.ParcelFileDescriptor[])>(r1);

        $r123 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        if $r123 == null goto label69;

        $r127 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.FullBackupJob mJob>;

        virtualinvoke $r127.<com.android.server.backup.FullBackupJob: void finishBackupPass()>();

     label69:
        $r117 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r116 = $r117.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r21 = $r116;

        entermonitor $r116;

     label70:
        $r115 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r115.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask mRunningFullBackupTask> = null;

        exitmonitor r21;

     label71:
        goto label74;

     label72:
        $r130 := @caughtexception;

        r20 = $r130;

        exitmonitor r21;

     label73:
        throw r20;

     label74:
        $r120 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r140 = $r120;

        entermonitor $r120;

     label75:
        $r119 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r119.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r118 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r118.<java.lang.Object: void notifyAll()>();

        exitmonitor r140;

     label76:
        goto label79;

     label77:
        $r125 := @caughtexception;

        r23 = $r125;

        exitmonitor r140;

     label78:
        throw r23;

     label79:
        $z7 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: boolean mUpdateSchedule>;

        if $z7 == 0 goto label80;

        $r129 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r129.<com.android.server.backup.BackupManagerService: void scheduleNextFullBackupJob()>();

     label80:
        throw r18;

     label81:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label35 to label36 with label35;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label49 to label50 with label51;
        catch java.lang.Throwable from label51 to label52 with label51;
        catch java.lang.Exception from label01 to label02 with label54;
        catch java.lang.Exception from label15 to label26 with label54;
        catch java.lang.Exception from label39 to label42 with label54;
        catch java.lang.Throwable from label57 to label58 with label59;
        catch java.lang.Throwable from label59 to label60 with label59;
        catch java.lang.Throwable from label62 to label63 with label64;
        catch java.lang.Throwable from label64 to label65 with label64;
        catch java.lang.Throwable from label01 to label02 with label67;
        catch java.lang.Throwable from label15 to label26 with label67;
        catch java.lang.Throwable from label39 to label42 with label67;
        catch java.lang.Throwable from label54 to label55 with label67;
        catch java.lang.Throwable from label70 to label71 with label72;
        catch java.lang.Throwable from label72 to label73 with label72;
        catch java.lang.Throwable from label75 to label76 with label77;
        catch java.lang.Throwable from label77 to label78 with label77;
        catch java.lang.Throwable from label67 to label68 with label67;
    }

    void cleanUpPipes(android.os.ParcelFileDescriptor[])
    {
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask r0;
        android.os.ParcelFileDescriptor[] r1;
        android.os.ParcelFileDescriptor r2, $r4, $r5, r8;
        java.io.IOException $r6, $r7;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask;

        r1 := @parameter0: android.os.ParcelFileDescriptor[];

        if r1 == null goto label8;

        $r4 = r1[0];

        if $r4 == null goto label4;

        r2 = r1[0];

        r1[0] = null;

     label1:
        virtualinvoke r2.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Unable to close pipe!");

     label4:
        $r5 = r1[1];

        if $r5 == null goto label8;

        r8 = r1[1];

        r1[1] = null;

     label5:
        virtualinvoke r8.<android.os.ParcelFileDescriptor: void close()>();

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Unable to close pipe!");

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: java.lang.String TAG> = "PFTBT";

        return;
    }
}
