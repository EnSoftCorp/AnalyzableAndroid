class com.android.server.backup.BackupManagerService$PerformInitializeTask extends java.lang.Object implements java.lang.Runnable
{
    java.util.HashSet mQueue;
    final com.android.server.backup.BackupManagerService this$0;

    void <init>(com.android.server.backup.BackupManagerService, java.util.HashSet)
    {
        com.android.server.backup.BackupManagerService$PerformInitializeTask r0;
        com.android.server.backup.BackupManagerService r1;
        java.util.HashSet r2;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformInitializeTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService;

        r2 := @parameter1: java.util.HashSet;

        r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: java.util.HashSet mQueue> = r2;

        return;
    }

    public void run()
    {
        com.android.server.backup.BackupManagerService$PerformInitializeTask r0;
        java.util.Iterator r1;
        java.lang.String r2, $r16, $r17, $r28, $r35, $r50;
        com.android.internal.backup.IBackupTransport r3;
        long l0, $l8, $l9, $l10, $l12, l17;
        int i1, i2;
        java.lang.Object r4, $r10, $r18, $r40, r59;
        java.lang.Throwable r5, r6, r7, $r47, $r51, $r52;
        java.util.HashSet $r8;
        boolean $z0;
        com.android.server.backup.BackupManagerService $r9, $r12, $r19, $r20, $r26, $r30, $r31, $r37, $r39, $r45, $r48, $r55, $r58;
        android.os.PowerManager$WakeLock $r11, $r53, $r54, $r57;
        java.lang.StringBuilder $r13, $r14, $r15, $r21, $r22, $r23, $r24, $r25, $r42, $r43, $r44, $r46;
        android.app.AlarmManager $r27;
        android.app.PendingIntent $r29;
        java.io.File $r32, $r36;
        java.lang.Object[] $r33, $r34;
        java.lang.Integer $r38, $r41;
        android.os.RemoteException $r49;
        java.lang.Exception $r56, r61;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformInitializeTask;

     label01:
        $r8 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: java.util.HashSet mQueue>;

        r1 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r10;

        $r12 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        r3 = staticinvoke <com.android.server.backup.BackupManagerService: com.android.internal.backup.IBackupTransport access$100(com.android.server.backup.BackupManagerService,java.lang.String)>($r12, r2);

        if r3 != null goto label03;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested init for ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not found");

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r50);

        goto label02;

     label03:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing (wiping) backup transport storage: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r16);

        $r17 = interfaceinvoke r3.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2821, $r17);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i1 = interfaceinvoke r3.<com.android.internal.backup.IBackupTransport: int initializeDevice()>();

        if i1 != 0 goto label04;

        i1 = interfaceinvoke r3.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label04:
        if i1 != 0 goto label10;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "Device init successful");

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = $l10 - l0;

        i2 = (int) $l9;

        $r33 = newarray (java.lang.Object)[0];

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2827, $r33);

        $r37 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r32 = new java.io.File;

        $r31 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r36 = $r31.<com.android.server.backup.BackupManagerService: java.io.File mBaseStateDir>;

        $r35 = interfaceinvoke r3.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        specialinvoke $r32.<java.io.File: void <init>(java.io.File,java.lang.String)>($r36, $r35);

        virtualinvoke $r37.<com.android.server.backup.BackupManagerService: void resetBackupState(java.io.File)>($r32);

        $r34 = newarray (java.lang.Object)[2];

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r34[0] = $r41;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r34[1] = $r38;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2825, $r34);

        $r39 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r40 = $r39.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r4 = $r40;

        entermonitor $r40;

     label05:
        $r45 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r45.<com.android.server.backup.BackupManagerService: void recordInitPendingLocked(boolean,java.lang.String)>(0, r2);

        exitmonitor r4;

     label06:
        goto label09;

     label07:
        $r51 := @caughtexception;

        r5 = $r51;

        exitmonitor r4;

     label08:
        throw r5;

     label09:
        goto label16;

     label10:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Transport error in initializeDevice()");

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, "(initialize)");

        $r20 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r18 = $r20.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r59 = $r18;

        entermonitor $r18;

     label11:
        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        virtualinvoke $r19.<com.android.server.backup.BackupManagerService: void recordInitPendingLocked(boolean,java.lang.String)>(1, r2);

        exitmonitor r59;

     label12:
        goto label15;

     label13:
        $r47 := @caughtexception;

        r6 = $r47;

        exitmonitor r59;

     label14:
        throw r6;

     label15:
        l17 = interfaceinvoke r3.<com.android.internal.backup.IBackupTransport: long requestBackupTime()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init failed on ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resched in ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l17);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r28);

        $r26 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r27 = staticinvoke <com.android.server.backup.BackupManagerService: android.app.AlarmManager access$200(com.android.server.backup.BackupManagerService)>($r26);

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l12 = $l8 + l17;

        $r30 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r29 = $r30.<com.android.server.backup.BackupManagerService: android.app.PendingIntent mRunInitIntent>;

        virtualinvoke $r27.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(0, $l12, $r29);

     label16:
        goto label02;

     label17:
        $r9 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r11 = $r9.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void release()>();

        goto label24;

     label18:
        $r49 := @caughtexception;

     label19:
        $r48 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r57 = $r48.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r57.<android.os.PowerManager$WakeLock: void release()>();

        goto label24;

     label20:
        $r56 := @caughtexception;

        r61 = $r56;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Unexpected error performing init", r61);

     label21:
        $r58 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r53 = $r58.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r53.<android.os.PowerManager$WakeLock: void release()>();

        goto label24;

     label22:
        $r52 := @caughtexception;

        r7 = $r52;

     label23:
        $r55 = r0.<com.android.server.backup.BackupManagerService$PerformInitializeTask: com.android.server.backup.BackupManagerService this$0>;

        $r54 = $r55.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r54.<android.os.PowerManager$WakeLock: void release()>();

        throw r7;

     label24:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch android.os.RemoteException from label01 to label17 with label18;
        catch java.lang.Exception from label01 to label17 with label20;
        catch java.lang.Throwable from label01 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }
}
